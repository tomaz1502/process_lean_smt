-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {I : Type u} [Nonempty I]
variable {e2 : I}
variable {e1 : I}
variable {e0 : I}
variable {op : (I -> I -> I)}
variable {e4 : I}
variable {e2 : I}
variable {e3 : I}
variable {e1 : I}
variable {e0 : I}
variable {op : (I -> I -> I)}
variable {e4 : I}
variable {e3 : I}

theorem th0 : (Eq (Eq (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Eq (op e4 e2) (op e4 e4))) (Eq (Eq (op e4 e2) (op e4 e4)) (Not (Not (Eq (op e4 e2) (op e4 e4)))))) → (Eq (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Eq (op e4 e2) (op e4 e4))) → (Eq (Eq (Eq (op e4 e2) (op e4 e4)) (Eq (op e4 e2) (op e4 e4))) True) → (Eq (Eq (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Eq (op e1 e3) (op e3 e3))) (Eq (Eq (op e1 e3) (op e3 e3)) (Not (Not (Eq (op e1 e3) (op e3 e3)))))) → (Eq (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Eq (op e1 e3) (op e3 e3))) → (Eq (Eq (Eq (op e1 e3) (op e3 e3)) (Eq (op e1 e3) (op e3 e3))) True) → (Eq (Eq (Not (Not (Eq e4 e3))) (Eq e4 e3)) (Eq (Eq e4 e3) (Not (Not (Eq e4 e3))))) → (Eq (Not (Not (Eq e4 e3))) (Eq e4 e3)) → (Eq (Eq (Eq e4 e3) (Eq e4 e3)) True) → (Eq (Eq (Not (Not (Eq e4 e0))) (Eq e4 e0)) (Eq (Eq e4 e0) (Not (Not (Eq e4 e0))))) → (Eq (Eq (Eq e4 e0) (Eq e4 e0)) True) → (Eq (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e4))) (Eq e4 (op e1 e3))) (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e4)) (Eq e4 (op e1 e3))))) → (Eq (Eq (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Eq (op e0 e2) (op e0 e4))) (Eq (Eq (op e0 e2) (op e0 e4)) (Not (Not (Eq (op e0 e2) (op e0 e4)))))) → (Eq (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Eq (op e0 e2) (op e0 e4))) → (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Eq (op e1 e1) (op e1 e2))) (Eq (Eq (op e1 e1) (op e1 e2)) (Not (Not (Eq (op e1 e1) (op e1 e2)))))) → (Eq (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Eq (op e1 e1) (op e1 e2))) → (Eq (Eq (Eq (op e1 e1) (op e1 e2)) (Eq (op e1 e1) (op e1 e2))) True) → (Eq (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Eq (op e0 e0) (op e0 e2))) → (Eq (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e3 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4))))) → (Eq (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e1 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e1 e4))))) → (Eq (Eq (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Eq (op e0 e2) (op e0 e3))) (Eq (Eq (op e0 e2) (op e0 e3)) (Not (Not (Eq (op e0 e2) (op e0 e3)))))) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Eq (op e0 e0) (op e3 e0))) (Eq (Eq (op e0 e0) (op e3 e0)) (Not (Not (Eq (op e0 e0) (op e3 e0)))))) → (Eq (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Eq (op e0 e2) (op e0 e3))) → (Eq (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Eq (op e0 e0) (op e3 e0))) → (Eq (Eq (Eq (op e0 e2) (op e0 e3)) (Eq (op e0 e2) (op e0 e3))) True) → (Eq (Eq (Eq (op e0 e0) (op e3 e0)) (Eq (op e0 e0) (op e3 e0))) True) → (Eq (Eq (Eq (op e4 e1) (op e4 e2)) (Eq (op e4 e1) (op e4 e2))) True) → (Eq (Not (Not (Eq e3 e1))) (Eq e3 e1)) → (Eq (Eq (Eq e3 e1) (Eq e3 e1)) True) → (Eq (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e0 e4))) (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e0 e4))))) → (Eq (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Eq (op e4 e1) (op e4 e3))) → (Eq (Eq (Eq (op e4 e1) (op e4 e3)) (Eq (op e4 e1) (op e4 e3))) True) → (Eq (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e0 e4))) (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e0 e4))))) → (Eq (Eq (Eq (op e0 e0) (op e0 e2)) (Eq (op e0 e0) (op e0 e2))) True) → (Eq (Eq (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Eq (op e4 e1) (op e4 e2))) (Eq (Eq (op e4 e1) (op e4 e2)) (Not (Not (Eq (op e4 e1) (op e4 e2)))))) → (Eq (And (And (Eq e1 (op e2 e3)) (Eq e2 (op e3 e0))) (Eq e0 (op e4 e3))) (And (Eq e1 (op e2 e3)) (And (Eq e2 (op e3 e0)) (Eq e0 (op e4 e3))))) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Eq (op e0 e0) (op e0 e1))) (Eq (Eq (op e0 e0) (op e0 e1)) (Not (Not (Eq (op e0 e0) (op e0 e1)))))) → (Eq (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Eq (op e0 e0) (op e0 e1))) → (Eq (Eq (Eq (op e0 e0) (op e0 e1)) (Eq (op e0 e0) (op e0 e1))) True) → (Eq (Eq (Eq e1 (op e3 e4)) (Eq e1 (op e3 e4))) True) → (Eq (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e1 e4))) (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e1 e4))))) → (Eq (Eq (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Eq (op e1 e4) (op e2 e4))) (Eq (Eq (op e1 e4) (op e2 e4)) (Not (Not (Eq (op e1 e4) (op e2 e4)))))) → (Eq (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Eq (op e1 e4) (op e2 e4))) → (Eq (Eq (Eq (op e1 e4) (op e2 e4)) (Eq (op e1 e4) (op e2 e4))) True) → (Eq (Eq (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Eq (op e1 e1) (op e2 e1))) (Eq (Eq (op e1 e1) (op e2 e1)) (Not (Not (Eq (op e1 e1) (op e2 e1)))))) → (Eq (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e3 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e3 e4))))) → (Eq (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e2 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e2 e4))))) → (Eq (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e2 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e2 e4))))) → (Eq (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e0 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e0 e4))))) → (Eq (Eq (Not (Not (Eq e0 (op e3 e4)))) (Eq e0 (op e3 e4))) (Eq (Eq e0 (op e3 e4)) (Not (Not (Eq e0 (op e3 e4)))))) → (Eq (Not (Not (Eq e0 (op e3 e4)))) (Eq e0 (op e3 e4))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Eq (op e0 e0) e0) (Or (Eq (op e0 e0) e1) (Or (Eq (op e0 e0) e2) (Or (Eq (op e0 e0) e3) (Eq (op e0 e0) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4)) (Or (Eq (op e0 e1) e0) (Or (Eq (op e0 e1) e1) (Or (Eq (op e0 e1) e2) (Or (Eq (op e0 e1) e3) (Eq (op e0 e1) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4)) (Or (Eq (op e0 e4) e0) (Or (Eq (op e0 e4) e1) (Or (Eq (op e0 e4) e2) (Or (Eq (op e0 e4) e3) (Eq (op e0 e4) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Eq (op e1 e0) e0) (Or (Eq (op e1 e0) e1) (Or (Eq (op e1 e0) e2) (Or (Eq (op e1 e0) e3) (Eq (op e1 e0) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4)) (Or (Eq (op e1 e1) e0) (Or (Eq (op e1 e1) e1) (Or (Eq (op e1 e1) e2) (Or (Eq (op e1 e1) e3) (Eq (op e1 e1) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4)) (Or (Eq (op e1 e3) e0) (Or (Eq (op e1 e3) e1) (Or (Eq (op e1 e3) e2) (Or (Eq (op e1 e3) e3) (Eq (op e1 e3) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Eq (op e2 e0) e0) (Or (Eq (op e2 e0) e1) (Or (Eq (op e2 e0) e2) (Or (Eq (op e2 e0) e3) (Eq (op e2 e0) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4)) (Or (Eq (op e2 e2) e0) (Or (Eq (op e2 e2) e1) (Or (Eq (op e2 e2) e2) (Or (Eq (op e2 e2) e3) (Eq (op e2 e2) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4)) (Or (Eq (op e2 e3) e0) (Or (Eq (op e2 e3) e1) (Or (Eq (op e2 e3) e2) (Or (Eq (op e2 e3) e3) (Eq (op e2 e3) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Eq (op e3 e0) e0) (Or (Eq (op e3 e0) e1) (Or (Eq (op e3 e0) e2) (Or (Eq (op e3 e0) e3) (Eq (op e3 e0) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4)) (Or (Eq (op e3 e1) e0) (Or (Eq (op e3 e1) e1) (Or (Eq (op e3 e1) e2) (Or (Eq (op e3 e1) e3) (Eq (op e3 e1) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4)) (Or (Eq (op e3 e2) e0) (Or (Eq (op e3 e2) e1) (Or (Eq (op e3 e2) e2) (Or (Eq (op e3 e2) e3) (Eq (op e3 e2) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4)) (Or (Eq (op e3 e3) e0) (Or (Eq (op e3 e3) e1) (Or (Eq (op e3 e3) e2) (Or (Eq (op e3 e3) e3) (Eq (op e3 e3) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Eq (op e4 e0) e0) (Or (Eq (op e4 e0) e1) (Or (Eq (op e4 e0) e2) (Or (Eq (op e4 e0) e3) (Eq (op e4 e0) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4)) (Or (Eq (op e4 e2) e0) (Or (Eq (op e4 e2) e1) (Or (Eq (op e4 e2) e2) (Or (Eq (op e4 e2) e3) (Eq (op e4 e2) e4)))))) → (Eq (And (And (Eq e0 (op e4 e1)) (Eq e4 (op e1 e2))) (Eq e2 (op e3 e1))) (And (Eq e0 (op e4 e1)) (And (Eq e4 (op e1 e2)) (Eq e2 (op e3 e1))))) → (Eq (Eq (Not (Not (Eq e4 e1))) (Eq e4 e1)) (Eq (Eq e4 e1) (Not (Not (Eq e4 e1))))) → (Eq (And (And (Eq e2 (op e0 e3)) (Eq e0 (op e3 e4))) (Eq e4 (op e1 e3))) (And (Eq e2 (op e0 e3)) (And (Eq e0 (op e3 e4)) (Eq e4 (op e1 e3))))) → (Eq (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Eq (op e4 e1) (op e4 e2))) → (Eq (And (And (Eq e0 (op e2 e1)) (Eq e2 (op e1 e3))) (Eq e3 (op e4 e1))) (And (Eq e0 (op e2 e1)) (And (Eq e2 (op e1 e3)) (Eq e3 (op e4 e1))))) → (Eq (And (And (Eq e3 (op e4 e1)) (Eq e4 (op e1 e0))) (Eq e0 (op e2 e1))) (And (Eq e3 (op e4 e1)) (And (Eq e4 (op e1 e0)) (Eq e0 (op e2 e1))))) → (Eq (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e1 e4))) (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e1 e4))))) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Eq (op e0 e0) (op e2 e0))) (Eq (Eq (op e0 e0) (op e2 e0)) (Not (Not (Eq (op e0 e0) (op e2 e0)))))) → (Eq (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Eq (op e0 e0) (op e2 e0))) → (Eq (Eq (Not (Not (Eq e3 e1))) (Eq e3 e1)) (Eq (Eq e3 e1) (Not (Not (Eq e3 e1))))) → (Eq (Eq (Eq (op e0 e0) (op e2 e0)) (Eq (op e0 e0) (op e2 e0))) True) → (Eq (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e1))) (Eq e1 (op e4 e3))) (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e1)) (Eq e1 (op e4 e3))))) → (Eq (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Eq (op e2 e2) (op e3 e2))) → (Eq (Eq (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Eq (op e0 e4) (op e2 e4))) (Eq (Eq (op e0 e4) (op e2 e4)) (Not (Not (Eq (op e0 e4) (op e2 e4)))))) → (Eq (Eq (Not (Not (Eq e4 e2))) (Eq e4 e2)) (Eq (Eq e4 e2) (Not (Not (Eq e4 e2))))) → (Eq (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Eq (op e0 e4) (op e2 e4))) → (Eq (Not (Not (Eq e4 e2))) (Eq e4 e2)) → (Eq (Eq (Eq (op e0 e4) (op e2 e4)) (Eq (op e0 e4) (op e2 e4))) True) → (Eq (Eq (Eq e4 e2) (Eq e4 e2)) True) → (Eq (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e0 e4))) (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e0 e4))))) → (Eq (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e0 e4))) (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e0 e4))))) → (Eq (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e1 e4))) (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e1 e4))))) → (Eq (Eq (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Eq (op e2 e2) (op e2 e4))) (Eq (Eq (op e2 e2) (op e2 e4)) (Not (Not (Eq (op e2 e2) (op e2 e4)))))) → (Eq (Eq (Eq (op e2 e2) (op e2 e4)) (Eq (op e2 e2) (op e2 e4))) True) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Eq (op e0 e0) (op e1 e0))) (Eq (Eq (op e0 e0) (op e1 e0)) (Not (Not (Eq (op e0 e0) (op e1 e0)))))) → (Eq (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Eq (op e0 e0) (op e1 e0))) → (Eq (Eq (Eq (op e0 e0) (op e1 e0)) (Eq (op e0 e0) (op e1 e0))) True) → (Eq (Eq (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Eq (op e0 e4) (op e1 e4))) (Eq (Eq (op e0 e4) (op e1 e4)) (Not (Not (Eq (op e0 e4) (op e1 e4)))))) → (Eq (Eq (Not (Not (Eq e3 e0))) (Eq e3 e0)) (Eq (Eq e3 e0) (Not (Not (Eq e3 e0))))) → (Eq (Not (Not (Eq e3 e0))) (Eq e3 e0)) → (Eq (Eq (Eq e3 e0) (Eq e3 e0)) True) → (Eq (Eq (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Eq (op e4 e2) (op e4 e3))) (Eq (Eq (op e4 e2) (op e4 e3)) (Not (Not (Eq (op e4 e2) (op e4 e3)))))) → (Eq (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Eq (op e4 e2) (op e4 e3))) → (Eq (Eq (Eq (op e4 e2) (op e4 e3)) (Eq (op e4 e2) (op e4 e3))) True) → (Eq (Eq (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Eq e3 (op e4 (op e4 e3)))) (Eq (Eq e3 (op e4 (op e4 e3))) (Not (Not (Eq e3 (op e4 (op e4 e3))))))) → (Eq (Eq (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Eq (op e4 e0) (op e4 e1))) (Eq (Eq (op e4 e0) (op e4 e1)) (Not (Not (Eq (op e4 e0) (op e4 e1)))))) → (Eq (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4)) (Or (Eq (op e4 e3) e0) (Or (Eq (op e4 e3) e1) (Or (Eq (op e4 e3) e2) (Or (Eq (op e4 e3) e3) (Eq (op e4 e3) e4)))))) → (Eq (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Eq (op e4 e0) (op e4 e1))) → (Eq (Eq (Eq (op e4 e0) (op e4 e1)) (Eq (op e4 e0) (op e4 e1))) True) → (Eq (Eq (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Eq (op e3 e3) (op e3 e4))) (Eq (Eq (op e3 e3) (op e3 e4)) (Not (Not (Eq (op e3 e3) (op e3 e4)))))) → (Eq (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Eq (op e3 e3) (op e3 e4))) → (Eq (Eq (Eq (op e3 e3) (op e3 e4)) (Eq (op e3 e3) (op e3 e4))) True) → (Eq (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Eq (op e0 e0) (op e0 e3))) → (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Eq (op e1 e1) (op e1 e3))) (Eq (Eq (op e1 e1) (op e1 e3)) (Not (Not (Eq (op e1 e1) (op e1 e3)))))) → (Eq (Eq (Eq (op e0 e0) (op e0 e3)) (Eq (op e0 e0) (op e0 e3))) True) → (Eq (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Eq (op e1 e1) (op e1 e3))) → (Eq (Eq (Eq (op e1 e1) (op e1 e3)) (Eq (op e1 e1) (op e1 e3))) True) → (Eq (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Eq (op e3 e0) e0) (Or (Eq (op e3 e1) e0) (Or (Eq (op e3 e2) e0) (Or (Eq (op e3 e3) e0) (Eq (op e3 e4) e0)))))) → (Eq (Eq (op e3 e0) e0) (Eq e0 (op e3 e0))) → (Eq (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0)) (Or (Eq (op e0 e3) e0) (Or (Eq (op e1 e3) e0) (Or (Eq (op e2 e3) e0) (Or (Eq (op e3 e3) e0) (Eq (op e4 e3) e0)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)) (Or (Eq (op e0 e1) e2) (Or (Eq (op e1 e1) e2) (Or (Eq (op e2 e1) e2) (Or (Eq (op e3 e1) e2) (Eq (op e4 e1) e2)))))) → (Eq (Eq (op e0 e3) e0) (Eq e0 (op e0 e3))) → (Eq (Eq (op e0 e1) e2) (Eq e2 (op e0 e1))) → (Eq (Eq (op e1 e3) e0) (Eq e0 (op e1 e3))) → (Eq (Eq (Not (Not (Eq e1 (op e3 e4)))) (Eq e1 (op e3 e4))) (Eq (Eq e1 (op e3 e4)) (Not (Not (Eq e1 (op e3 e4)))))) → (Eq (Eq (op e2 e3) e0) (Eq e0 (op e2 e3))) → (Eq (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Eq (op e3 e0) e1) (Or (Eq (op e3 e1) e1) (Or (Eq (op e3 e2) e1) (Or (Eq (op e3 e3) e1) (Eq (op e3 e4) e1)))))) → (Eq (Eq (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Eq (op e2 e1) (op e2 e4))) (Eq (Eq (op e2 e1) (op e2 e4)) (Not (Not (Eq (op e2 e1) (op e2 e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)) (Or (Eq (op e0 e3) e1) (Or (Eq (op e1 e3) e1) (Or (Eq (op e2 e3) e1) (Or (Eq (op e3 e3) e1) (Eq (op e4 e3) e1)))))) → (Eq (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Eq (op e2 e0) e3) (Or (Eq (op e2 e1) e3) (Or (Eq (op e2 e2) e3) (Or (Eq (op e2 e3) e3) (Eq (op e2 e4) e3)))))) → (Eq (Eq (op e2 e0) e3) (Eq e3 (op e2 e0))) → (Eq (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Eq (op e3 e0) e2) (Or (Eq (op e3 e1) e2) (Or (Eq (op e3 e2) e2) (Or (Eq (op e3 e3) e2) (Eq (op e3 e4) e2)))))) → (Eq (Eq (Eq e3 (op e4 (op e4 e3))) (Eq e3 (op e4 (op e4 e3)))) True) → (Eq (Eq (op e0 e2) e3) (Eq e3 (op e0 e2))) → (Eq (Eq (op e1 e1) e4) (Eq e4 (op e1 e1))) → (Eq (Eq (op e0 (op e0 e2)) e2) (Eq e2 (op e0 (op e0 e2)))) → (Eq (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e3 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e3 e4))))) → (Eq (Eq (op e3 e0) e2) (Eq e2 (op e3 e0))) → (Eq (Eq (Not (Not (Eq e3 e2))) (Eq e3 e2)) (Eq (Eq e3 e2) (Not (Not (Eq e3 e2))))) → (Eq (Eq (op e1 e2) e3) (Eq e3 (op e1 e2))) → (Eq (Eq (op e3 e1) e2) (Eq e2 (op e3 e1))) → (Eq (Eq (op e3 e2) e2) (Eq e2 (op e3 e2))) → (Eq (Eq (op e0 e3) e2) (Eq e2 (op e0 e3))) → (Eq (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4))) (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Or (Not (Eq (op e1 (op e1 e1)) e1)) (Or (Not (Eq (op e1 (op e1 e2)) e2)) (Or (Not (Eq (op e1 (op e1 e3)) e3)) (Not (Eq (op e1 (op e1 e4)) e4))))))) → (Eq (Eq (op e1 e3) e2) (Eq e2 (op e1 e3))) → (Eq (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4))) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4))) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4))) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4))) (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4))) (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4))) (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4))) (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4))) (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4))) (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4))) (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4))) (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4))) (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4))) (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4))) (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4))) (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4))) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (And (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4)) (And (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4)) (And (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4)) (And (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4)) (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (And (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4)) (And (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4)) (And (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4)) (And (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)) (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (And (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4)) (And (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4)) (And (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4)) (And (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)) (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (And (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4)) (And (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4)) (And (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4)) (And (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)) (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (And (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4)) (And (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4)) (And (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4)) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4))))))))))))))))))))))))))) → (Eq (Eq (op e1 (op e1 e0)) e0) (Eq e0 (op e1 (op e1 e0)))) → (Eq (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)) (Or (Eq (op e1 e4) e0) (Or (Eq (op e1 e4) e1) (Or (Eq (op e1 e4) e2) (Or (Eq (op e1 e4) e3) (Eq (op e1 e4) e4)))))) → (Eq (Eq (op e2 e3) e2) (Eq e2 (op e2 e3))) → (Eq (Eq (op e3 e3) e2) (Eq e2 (op e3 e3))) → (Eq (Eq (op e3 e2) e3) (Eq e3 (op e3 e2))) → (Eq (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)) (Or (Eq (op e2 e4) e0) (Or (Eq (op e2 e4) e1) (Or (Eq (op e2 e4) e2) (Or (Eq (op e2 e4) e3) (Eq (op e2 e4) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)) (Or (Eq (op e0 e0) e1) (Or (Eq (op e1 e0) e1) (Or (Eq (op e2 e0) e1) (Or (Eq (op e3 e0) e1) (Eq (op e4 e0) e1)))))) → (Eq (Eq (op e3 e1) e0) (Eq e0 (op e3 e1))) → (Eq (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4)) (Or (Eq (op e0 e4) e4) (Or (Eq (op e1 e4) e4) (Or (Eq (op e2 e4) e4) (Or (Eq (op e3 e4) e4) (Eq (op e4 e4) e4)))))) → (Eq (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Eq (op e1 e1) (op e2 e1))) → (Eq (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Eq (op e4 e0) e0) (Or (Eq (op e4 e1) e0) (Or (Eq (op e4 e2) e0) (Or (Eq (op e4 e3) e0) (Eq (op e4 e4) e0)))))) → (Eq (Eq (Eq (op e1 e1) (op e2 e1)) (Eq (op e1 e1) (op e2 e1))) True) → (Eq (Eq (op e4 e0) e0) (Eq e0 (op e4 e0))) → (Eq (Not (Not (Eq e1 (op e3 e4)))) (Eq e1 (op e3 e4))) → (Eq (Eq (op e3 e3) e0) (Eq e0 (op e3 e3))) → (Eq (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0)) (Or (Eq (op e0 e4) e0) (Or (Eq (op e1 e4) e0) (Or (Eq (op e2 e4) e0) (Or (Eq (op e3 e4) e0) (Eq (op e4 e4) e0)))))) → (Eq (Eq (op e0 e4) e0) (Eq e0 (op e0 e4))) → (Eq (Eq (op e1 e4) e0) (Eq e0 (op e1 e4))) → (Eq (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4)) (Or (Eq (op e4 e1) e0) (Or (Eq (op e4 e1) e1) (Or (Eq (op e4 e1) e2) (Or (Eq (op e4 e1) e3) (Eq (op e4 e1) e4)))))) → (Eq (Eq (op e2 e4) e0) (Eq e0 (op e2 e4))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)) (Or (Eq (op e0 e0) e4) (Or (Eq (op e1 e0) e4) (Or (Eq (op e2 e0) e4) (Or (Eq (op e3 e0) e4) (Eq (op e4 e0) e4)))))) → (Eq (Eq (op e3 e4) e0) (Eq e0 (op e3 e4))) → (Eq (Eq (op e0 e0) e4) (Eq e4 (op e0 e0))) → (Eq (Eq (op e4 e4) e0) (Eq e0 (op e4 e4))) → (Eq (Eq (op e4 e2) e1) (Eq e1 (op e4 e2))) → (Eq (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4)) (Or (Eq (op e0 e2) e4) (Or (Eq (op e1 e2) e4) (Or (Eq (op e2 e2) e4) (Or (Eq (op e3 e2) e4) (Eq (op e4 e2) e4)))))) → (Eq (Eq (op e4 e3) e1) (Eq e1 (op e4 e3))) → (Eq (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)) (Or (Eq (op e0 e4) e1) (Or (Eq (op e1 e4) e1) (Or (Eq (op e2 e4) e1) (Or (Eq (op e3 e4) e1) (Eq (op e4 e4) e1)))))) → (Eq (Eq (Eq e1 e0) (Eq e1 e0)) True) → (Eq (Eq (op e0 e4) e1) (Eq e1 (op e0 e4))) → (Eq (Eq (op e1 e0) e2) (Eq e2 (op e1 e0))) → (Eq (Eq (op e3 e2) e1) (Eq e1 (op e3 e2))) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Eq (op e0 e0) (op e0 e2))) (Eq (Eq (op e0 e0) (op e0 e2)) (Not (Not (Eq (op e0 e0) (op e0 e2)))))) → (Eq (Eq (Eq (op e1 e1) (op e4 e1)) (Eq (op e1 e1) (op e4 e1))) True) → (Eq (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Eq (op e2 e2) (op e2 e3))) → (Eq (Eq (op e3 e0) e1) (Eq e1 (op e3 e0))) → (Eq (Eq (op e2 e2) e3) (Eq e3 (op e2 e2))) → (Eq (Not (Not (Eq e3 e2))) (Eq e3 e2)) → (Eq (Not (Not (Eq e2 (op e0 e4)))) (Eq e2 (op e0 e4))) → (Eq (Eq (op e4 e0) e1) (Eq e1 (op e4 e0))) → (Eq (Eq (op e2 e0) e4) (Eq e4 (op e2 e0))) → (Eq (Eq (Eq (op e0 e2) (op e0 e4)) (Eq (op e0 e2) (op e0 e4))) True) → (Eq (Eq e2 e3) (Eq e3 e2)) → (Eq (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4)) (Or (Eq (op e0 e2) e0) (Or (Eq (op e0 e2) e1) (Or (Eq (op e0 e2) e2) (Or (Eq (op e0 e2) e3) (Eq (op e0 e2) e4)))))) → (Eq (Eq (op e0 e4) e2) (Eq e2 (op e0 e4))) → (Eq (Eq e1 e4) (Eq e4 e1)) → (Eq (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Eq (op e3 e0) e3) (Or (Eq (op e3 e1) e3) (Or (Eq (op e3 e2) e3) (Or (Eq (op e3 e3) e3) (Eq (op e3 e4) e3)))))) → (Eq (Eq (op e3 e4) e2) (Eq e2 (op e3 e4))) → (Eq (Eq (op e4 e4) e1) (Eq e1 (op e4 e4))) → (Eq (Eq (op e3 e2) e4) (Eq e4 (op e3 e2))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Eq (op e0 e0) e3) (Or (Eq (op e0 e1) e3) (Or (Eq (op e0 e2) e3) (Or (Eq (op e0 e3) e3) (Eq (op e0 e4) e3)))))) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Eq (op e0 e0) (op e0 e3))) (Eq (Eq (op e0 e0) (op e0 e3)) (Not (Not (Eq (op e0 e0) (op e0 e3)))))) → (Eq (Eq e0 e2) (Eq e2 e0)) → (Eq (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Eq (op e1 e0) e3) (Or (Eq (op e1 e1) e3) (Or (Eq (op e1 e2) e3) (Or (Eq (op e1 e3) e3) (Eq (op e1 e4) e3)))))) → (Eq (Eq (op e3 e4) e1) (Eq e1 (op e3 e4))) → (Eq (Eq (op e1 e0) e1) (Eq e1 (op e1 e0))) → (Eq (Eq (Eq (op e1 e1) (op e1 e4)) (Eq (op e1 e1) (op e1 e4))) True) → (Eq (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)) (Or (Eq (op e0 e3) e2) (Or (Eq (op e1 e3) e2) (Or (Eq (op e2 e3) e2) (Or (Eq (op e3 e3) e2) (Eq (op e4 e3) e2)))))) → (Eq (Eq (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Eq (op e2 e2) (op e3 e2))) (Eq (Eq (op e2 e2) (op e3 e2)) (Not (Not (Eq (op e2 e2) (op e3 e2)))))) → (Eq (Eq (op e4 e3) e2) (Eq e2 (op e4 e3))) → (Eq (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Eq (op e2 e0) e2) (Or (Eq (op e2 e1) e2) (Or (Eq (op e2 e2) e2) (Or (Eq (op e2 e3) e2) (Eq (op e2 e4) e2)))))) → (Eq (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4)) (Or (Eq (op e2 e1) e0) (Or (Eq (op e2 e1) e1) (Or (Eq (op e2 e1) e2) (Or (Eq (op e2 e1) e3) (Eq (op e2 e1) e4)))))) → (Eq (Eq (op e3 e1) e3) (Eq e3 (op e3 e1))) → (Eq (Eq e0 e1) (Eq e1 e0)) → (Eq (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)) (Or (Eq (op e0 e3) e3) (Or (Eq (op e1 e3) e3) (Or (Eq (op e2 e3) e3) (Or (Eq (op e3 e3) e3) (Eq (op e4 e3) e3)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Eq (op e0 e0) e2) (Or (Eq (op e0 e1) e2) (Or (Eq (op e0 e2) e2) (Or (Eq (op e0 e3) e2) (Eq (op e0 e4) e2)))))) → (Eq (Eq (op e4 e0) e3) (Eq e3 (op e4 e0))) → (Eq (Eq (op e1 e4) e1) (Eq e1 (op e1 e4))) → (Eq (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4))) (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Or (Not (Eq (op e4 (op e4 e1)) e1)) (Or (Not (Eq (op e4 (op e4 e2)) e2)) (Or (Not (Eq (op e4 (op e4 e3)) e3)) (Not (Eq (op e4 (op e4 e4)) e4))))))) → (Eq (Eq (Not (Not (Eq e1 e0))) (Eq e1 e0)) (Eq (Eq e1 e0) (Not (Not (Eq e1 e0))))) → (Eq (Eq (op e2 e4) e2) (Eq e2 (op e2 e4))) → (Eq (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Eq (op e4 e0) e3) (Or (Eq (op e4 e1) e3) (Or (Eq (op e4 e2) e3) (Or (Eq (op e4 e3) e3) (Eq (op e4 e4) e3)))))) → (Eq (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Eq (op e2 e0) (op e3 e0))) → (Eq (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Eq (op e2 e2) (op e4 e2))) → (Eq (Eq (op e1 e3) e4) (Eq e4 (op e1 e3))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0)) (Or (Eq (op e0 e0) e0) (Or (Eq (op e1 e0) e0) (Or (Eq (op e2 e0) e0) (Or (Eq (op e3 e0) e0) (Eq (op e4 e0) e0)))))) → (Eq (Eq e0 e4) (Eq e4 e0)) → (Eq (Eq (op e0 e3) e3) (Eq e3 (op e0 e3))) → (Eq (Eq (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Eq (op e1 e4) (op e3 e4))) (Eq (Eq (op e1 e4) (op e3 e4)) (Not (Not (Eq (op e1 e4) (op e3 e4)))))) → (Eq (Eq (op e4 e1) e3) (Eq e3 (op e4 e1))) → (Eq (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Eq (op e2 e1) (op e2 e4))) → (Eq (Eq (op e0 e3) e1) (Eq e1 (op e0 e3))) → (Eq (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e2 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e2 e4))))) → (Eq (Eq e2 e4) (Eq e4 e2)) → (Eq (Eq (op e2 e3) e1) (Eq e1 (op e2 e3))) → (Eq (Eq (op e0 e1) e3) (Eq e3 (op e0 e1))) → (Eq (Eq (op e1 e4) e2) (Eq e2 (op e1 e4))) → (Eq (Eq (op e4 (op e4 e1)) e1) (Eq e1 (op e4 (op e4 e1)))) → (Eq (Eq e1 e2) (Eq e2 e1)) → (Eq (Eq (op e2 e4) e3) (Eq e3 (op e2 e4))) → (Eq (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e2 e4))) (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e2 e4))))) → (Eq (Eq (op e2 e0) e0) (Eq e0 (op e2 e0))) → (Eq (Eq (op e0 e1) e0) (Eq e0 (op e0 e1))) → (Eq (Eq (op e3 e3) e4) (Eq e4 (op e3 e3))) → (Eq (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)) (Or (Eq (op e0 e2) e1) (Or (Eq (op e1 e2) e1) (Or (Eq (op e2 e2) e1) (Or (Eq (op e3 e2) e1) (Eq (op e4 e2) e1)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4)) (Or (Eq (op e0 e3) e0) (Or (Eq (op e0 e3) e1) (Or (Eq (op e0 e3) e2) (Or (Eq (op e0 e3) e3) (Eq (op e0 e3) e4)))))) → (Eq (Eq (op e2 (op e2 e3)) e3) (Eq e3 (op e2 (op e2 e3)))) → (Eq (Eq (op e3 e1) e1) (Eq e1 (op e3 e1))) → (Eq (Eq e1 e3) (Eq e3 e1)) → (Eq (Eq (Eq e3 e2) (Eq e3 e2)) True) → (Eq (Eq (Eq e2 (op e0 e4)) (Eq e2 (op e0 e4))) True) → (Eq (Eq (op e4 e1) e1) (Eq e1 (op e4 e1))) → (Eq (Eq (op e2 e1) e4) (Eq e4 (op e2 e1))) → (Eq (Eq (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Eq (op e2 e2) (op e2 e3))) (Eq (Eq (op e2 e2) (op e2 e3)) (Not (Not (Eq (op e2 e2) (op e2 e3)))))) → (Eq (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e0 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e0 e4))))) → (Eq (Not (Not (Eq e1 e0))) (Eq e1 e0)) → (Eq (Eq (op e4 (op e4 e0)) e0) (Eq e0 (op e4 (op e4 e0)))) → (Eq (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e3 e4))) (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e3 e4))))) → (Eq (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Eq (op e1 e1) (op e4 e1))) → (Eq (Eq (op e4 e3) e0) (Eq e0 (op e4 e3))) → (Eq (Eq (op e0 e2) e4) (Eq e4 (op e0 e2))) → (Eq (And (And (And (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))) (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)) (Or (Eq (op e0 e4) e2) (Or (Eq (op e1 e4) e2) (Or (Eq (op e2 e4) e2) (Or (Eq (op e3 e4) e2) (Eq (op e4 e4) e2)))))) → (Eq (Eq (op e4 e3) e4) (Eq e4 (op e4 e3))) → (Eq (Eq (op e4 e2) e2) (Eq e2 (op e4 e2))) → (Eq (Eq (Eq e2 (op e4 (op e4 e2))) (Eq e2 (op e4 (op e4 e2)))) True) → (Eq (Eq (Eq e2 e0) (Eq e2 e0)) True) → (Eq (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Eq (op e3 e4) (op e4 e4))) → (Eq (Eq (op e2 e4) e4) (Eq e4 (op e2 e4))) → (Eq (Eq (op e1 e2) e0) (Eq e0 (op e1 e2))) → (Eq (Eq (op e4 e2) e4) (Eq e4 (op e4 e2))) → (Eq (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Eq e2 (op e4 (op e4 e2)))) → (Eq (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e1 e4))) (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e1 e4))))) → (Eq (Eq (op e3 (op e3 e3)) e3) (Eq e3 (op e3 (op e3 e3)))) → (Eq (Not (Not (Eq e2 e0))) (Eq e2 e0)) → (Eq (Eq (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Eq (op e3 e4) (op e4 e4))) (Eq (Eq (op e3 e4) (op e4 e4)) (Not (Not (Eq (op e3 e4) (op e4 e4)))))) → (Eq (Eq (op e1 e4) e4) (Eq e4 (op e1 e4))) → (Eq (Eq (op e0 e2) e0) (Eq e0 (op e0 e2))) → (Eq (Eq (op e4 e4) e4) (Eq e4 (op e4 e4))) → (Eq (Eq (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Eq e2 (op e4 (op e4 e2)))) (Eq (Eq e2 (op e4 (op e4 e2))) (Not (Not (Eq e2 (op e4 (op e4 e2))))))) → (Eq (Eq (Not (Not (Eq e2 e0))) (Eq e2 e0)) (Eq (Eq e2 e0) (Not (Not (Eq e2 e0))))) → (Eq (Eq (op e0 e4) e4) (Eq e4 (op e0 e4))) → (Eq (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0)) (Or (Eq (op e0 e2) e0) (Or (Eq (op e1 e2) e0) (Or (Eq (op e2 e2) e0) (Or (Eq (op e3 e2) e0) (Eq (op e4 e2) e0)))))) → (Eq (Eq (op e4 e1) e4) (Eq e4 (op e4 e1))) → (Eq (Eq (op e4 e0) e2) (Eq e2 (op e4 e0))) → (Eq (Eq (op e3 e3) e3) (Eq e3 (op e3 e3))) → (Eq (Eq (op e4 e0) e4) (Eq e4 (op e4 e0))) → (Eq (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Eq (op e4 e0) e2) (Or (Eq (op e4 e1) e2) (Or (Eq (op e4 e2) e2) (Or (Eq (op e4 e3) e2) (Eq (op e4 e4) e2)))))) → (Eq (Eq (op e2 e2) e2) (Eq e2 (op e2 e2))) → (Eq (Eq (op e1 (op e1 e2)) e2) (Eq e2 (op e1 (op e1 e2)))) → (Eq (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Eq (op e4 e0) e4) (Or (Eq (op e4 e1) e4) (Or (Eq (op e4 e2) e4) (Or (Eq (op e4 e3) e4) (Eq (op e4 e4) e4)))))) → (Eq (Eq (Eq (op e3 e4) (op e4 e4)) (Eq (op e3 e4) (op e4 e4))) True) → (Eq (Eq e0 e3) (Eq e3 e0)) → (Eq (Eq (op e3 e4) e4) (Eq e4 (op e3 e4))) → (Eq (Eq (op e2 e2) e0) (Eq e0 (op e2 e2))) → (Eq (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4)) (Or (Eq (op e1 e2) e0) (Or (Eq (op e1 e2) e1) (Or (Eq (op e1 e2) e2) (Or (Eq (op e1 e2) e3) (Eq (op e1 e2) e4)))))) → (Eq (Eq (op e4 e4) e3) (Eq e3 (op e4 e4))) → (Eq (Eq (op e3 e4) e3) (Eq e3 (op e3 e4))) → (Eq (Eq (op e2 e1) e0) (Eq e0 (op e2 e1))) → (Eq (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)) (Or (Eq (op e4 e4) e0) (Or (Eq (op e4 e4) e1) (Or (Eq (op e4 e4) e2) (Or (Eq (op e4 e4) e3) (Eq (op e4 e4) e4)))))) → (Eq (Eq (op e1 e1) e0) (Eq e0 (op e1 e1))) → (Eq (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Eq (op e2 e0) e0) (Or (Eq (op e2 e1) e0) (Or (Eq (op e2 e2) e0) (Or (Eq (op e2 e3) e0) (Eq (op e2 e4) e0)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)) (Or (Eq (op e0 e4) e3) (Or (Eq (op e1 e4) e3) (Or (Eq (op e2 e4) e3) (Or (Eq (op e3 e4) e3) (Eq (op e4 e4) e3)))))) → (Eq (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Eq (op e1 e4) (op e3 e4))) → (Eq (Eq (op e4 e2) e3) (Eq e3 (op e4 e2))) → (Eq (And (And (And (And (And (And (And (And (And (Not (Eq e0 e1)) (Not (Eq e0 e2))) (Not (Eq e0 e3))) (Not (Eq e0 e4))) (Not (Eq e1 e2))) (Not (Eq e1 e3))) (Not (Eq e1 e4))) (Not (Eq e2 e3))) (Not (Eq e2 e4))) (Not (Eq e3 e4))) (And (Not (Eq e0 e1)) (And (Not (Eq e0 e2)) (And (Not (Eq e0 e3)) (And (Not (Eq e0 e4)) (And (Not (Eq e1 e2)) (And (Not (Eq e1 e3)) (And (Not (Eq e1 e4)) (And (Not (Eq e2 e3)) (And (Not (Eq e2 e4)) (Not (Eq e3 e4)))))))))))) → (Eq (Eq (op e3 e0) e3) (Eq e3 (op e3 e0))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e1 e0))) (Not (Eq (op e0 e0) (op e2 e0)))) (Not (Eq (op e0 e0) (op e3 e0)))) (Not (Eq (op e0 e0) (op e4 e0)))) (Not (Eq (op e1 e0) (op e2 e0)))) (Not (Eq (op e1 e0) (op e3 e0)))) (Not (Eq (op e1 e0) (op e4 e0)))) (Not (Eq (op e2 e0) (op e3 e0)))) (Not (Eq (op e2 e0) (op e4 e0)))) (Not (Eq (op e3 e0) (op e4 e0)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e1) (op e1 e1))) (Not (Eq (op e0 e1) (op e2 e1)))) (Not (Eq (op e0 e1) (op e3 e1)))) (Not (Eq (op e0 e1) (op e4 e1)))) (Not (Eq (op e1 e1) (op e2 e1)))) (Not (Eq (op e1 e1) (op e3 e1)))) (Not (Eq (op e1 e1) (op e4 e1)))) (Not (Eq (op e2 e1) (op e3 e1)))) (Not (Eq (op e2 e1) (op e4 e1)))) (Not (Eq (op e3 e1) (op e4 e1))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e2) (op e1 e2))) (Not (Eq (op e0 e2) (op e2 e2)))) (Not (Eq (op e0 e2) (op e3 e2)))) (Not (Eq (op e0 e2) (op e4 e2)))) (Not (Eq (op e1 e2) (op e2 e2)))) (Not (Eq (op e1 e2) (op e3 e2)))) (Not (Eq (op e1 e2) (op e4 e2)))) (Not (Eq (op e2 e2) (op e3 e2)))) (Not (Eq (op e2 e2) (op e4 e2)))) (Not (Eq (op e3 e2) (op e4 e2))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e3) (op e1 e3))) (Not (Eq (op e0 e3) (op e2 e3)))) (Not (Eq (op e0 e3) (op e3 e3)))) (Not (Eq (op e0 e3) (op e4 e3)))) (Not (Eq (op e1 e3) (op e2 e3)))) (Not (Eq (op e1 e3) (op e3 e3)))) (Not (Eq (op e1 e3) (op e4 e3)))) (Not (Eq (op e2 e3) (op e3 e3)))) (Not (Eq (op e2 e3) (op e4 e3)))) (Not (Eq (op e3 e3) (op e4 e3))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e4) (op e1 e4))) (Not (Eq (op e0 e4) (op e2 e4)))) (Not (Eq (op e0 e4) (op e3 e4)))) (Not (Eq (op e0 e4) (op e4 e4)))) (Not (Eq (op e1 e4) (op e2 e4)))) (Not (Eq (op e1 e4) (op e3 e4)))) (Not (Eq (op e1 e4) (op e4 e4)))) (Not (Eq (op e2 e4) (op e3 e4)))) (Not (Eq (op e2 e4) (op e4 e4)))) (Not (Eq (op e3 e4) (op e4 e4))))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e0 e1))) (Not (Eq (op e0 e0) (op e0 e2)))) (Not (Eq (op e0 e0) (op e0 e3)))) (Not (Eq (op e0 e0) (op e0 e4)))) (Not (Eq (op e0 e1) (op e0 e2)))) (Not (Eq (op e0 e1) (op e0 e3)))) (Not (Eq (op e0 e1) (op e0 e4)))) (Not (Eq (op e0 e2) (op e0 e3)))) (Not (Eq (op e0 e2) (op e0 e4)))) (Not (Eq (op e0 e3) (op e0 e4)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e1 e0) (op e1 e1))) (Not (Eq (op e1 e0) (op e1 e2)))) (Not (Eq (op e1 e0) (op e1 e3)))) (Not (Eq (op e1 e0) (op e1 e4)))) (Not (Eq (op e1 e1) (op e1 e2)))) (Not (Eq (op e1 e1) (op e1 e3)))) (Not (Eq (op e1 e1) (op e1 e4)))) (Not (Eq (op e1 e2) (op e1 e3)))) (Not (Eq (op e1 e2) (op e1 e4)))) (Not (Eq (op e1 e3) (op e1 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e2 e0) (op e2 e1))) (Not (Eq (op e2 e0) (op e2 e2)))) (Not (Eq (op e2 e0) (op e2 e3)))) (Not (Eq (op e2 e0) (op e2 e4)))) (Not (Eq (op e2 e1) (op e2 e2)))) (Not (Eq (op e2 e1) (op e2 e3)))) (Not (Eq (op e2 e1) (op e2 e4)))) (Not (Eq (op e2 e2) (op e2 e3)))) (Not (Eq (op e2 e2) (op e2 e4)))) (Not (Eq (op e2 e3) (op e2 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e3 e0) (op e3 e1))) (Not (Eq (op e3 e0) (op e3 e2)))) (Not (Eq (op e3 e0) (op e3 e3)))) (Not (Eq (op e3 e0) (op e3 e4)))) (Not (Eq (op e3 e1) (op e3 e2)))) (Not (Eq (op e3 e1) (op e3 e3)))) (Not (Eq (op e3 e1) (op e3 e4)))) (Not (Eq (op e3 e2) (op e3 e3)))) (Not (Eq (op e3 e2) (op e3 e4)))) (Not (Eq (op e3 e3) (op e3 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e4 e0) (op e4 e1))) (Not (Eq (op e4 e0) (op e4 e2)))) (Not (Eq (op e4 e0) (op e4 e3)))) (Not (Eq (op e4 e0) (op e4 e4)))) (Not (Eq (op e4 e1) (op e4 e2)))) (Not (Eq (op e4 e1) (op e4 e3)))) (Not (Eq (op e4 e1) (op e4 e4)))) (Not (Eq (op e4 e2) (op e4 e3)))) (Not (Eq (op e4 e2) (op e4 e4)))) (Not (Eq (op e4 e3) (op e4 e4)))))) (And (Not (Eq (op e0 e0) (op e1 e0))) (And (Not (Eq (op e0 e0) (op e2 e0))) (And (Not (Eq (op e0 e0) (op e3 e0))) (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Not (Eq (op e1 e0) (op e2 e0))) (And (Not (Eq (op e1 e0) (op e3 e0))) (And (Not (Eq (op e1 e0) (op e4 e0))) (And (Not (Eq (op e2 e0) (op e3 e0))) (And (Not (Eq (op e2 e0) (op e4 e0))) (And (Not (Eq (op e3 e0) (op e4 e0))) (And (Not (Eq (op e0 e1) (op e1 e1))) (And (Not (Eq (op e0 e1) (op e2 e1))) (And (Not (Eq (op e0 e1) (op e3 e1))) (And (Not (Eq (op e0 e1) (op e4 e1))) (And (Not (Eq (op e1 e1) (op e2 e1))) (And (Not (Eq (op e1 e1) (op e3 e1))) (And (Not (Eq (op e1 e1) (op e4 e1))) (And (Not (Eq (op e2 e1) (op e3 e1))) (And (Not (Eq (op e2 e1) (op e4 e1))) (And (Not (Eq (op e3 e1) (op e4 e1))) (And (Not (Eq (op e0 e2) (op e1 e2))) (And (Not (Eq (op e0 e2) (op e2 e2))) (And (Not (Eq (op e0 e2) (op e3 e2))) (And (Not (Eq (op e0 e2) (op e4 e2))) (And (Not (Eq (op e1 e2) (op e2 e2))) (And (Not (Eq (op e1 e2) (op e3 e2))) (And (Not (Eq (op e1 e2) (op e4 e2))) (And (Not (Eq (op e2 e2) (op e3 e2))) (And (Not (Eq (op e2 e2) (op e4 e2))) (And (Not (Eq (op e3 e2) (op e4 e2))) (And (Not (Eq (op e0 e3) (op e1 e3))) (And (Not (Eq (op e0 e3) (op e2 e3))) (And (Not (Eq (op e0 e3) (op e3 e3))) (And (Not (Eq (op e0 e3) (op e4 e3))) (And (Not (Eq (op e1 e3) (op e2 e3))) (And (Not (Eq (op e1 e3) (op e3 e3))) (And (Not (Eq (op e1 e3) (op e4 e3))) (And (Not (Eq (op e2 e3) (op e3 e3))) (And (Not (Eq (op e2 e3) (op e4 e3))) (And (Not (Eq (op e3 e3) (op e4 e3))) (And (Not (Eq (op e0 e4) (op e1 e4))) (And (Not (Eq (op e0 e4) (op e2 e4))) (And (Not (Eq (op e0 e4) (op e3 e4))) (And (Not (Eq (op e0 e4) (op e4 e4))) (And (Not (Eq (op e1 e4) (op e2 e4))) (And (Not (Eq (op e1 e4) (op e3 e4))) (And (Not (Eq (op e1 e4) (op e4 e4))) (And (Not (Eq (op e2 e4) (op e3 e4))) (And (Not (Eq (op e2 e4) (op e4 e4))) (And (Not (Eq (op e3 e4) (op e4 e4))) (And (Not (Eq (op e0 e0) (op e0 e1))) (And (Not (Eq (op e0 e0) (op e0 e2))) (And (Not (Eq (op e0 e0) (op e0 e3))) (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Not (Eq (op e0 e1) (op e0 e2))) (And (Not (Eq (op e0 e1) (op e0 e3))) (And (Not (Eq (op e0 e1) (op e0 e4))) (And (Not (Eq (op e0 e2) (op e0 e3))) (And (Not (Eq (op e0 e2) (op e0 e4))) (And (Not (Eq (op e0 e3) (op e0 e4))) (And (Not (Eq (op e1 e0) (op e1 e1))) (And (Not (Eq (op e1 e0) (op e1 e2))) (And (Not (Eq (op e1 e0) (op e1 e3))) (And (Not (Eq (op e1 e0) (op e1 e4))) (And (Not (Eq (op e1 e1) (op e1 e2))) (And (Not (Eq (op e1 e1) (op e1 e3))) (And (Not (Eq (op e1 e1) (op e1 e4))) (And (Not (Eq (op e1 e2) (op e1 e3))) (And (Not (Eq (op e1 e2) (op e1 e4))) (And (Not (Eq (op e1 e3) (op e1 e4))) (And (Not (Eq (op e2 e0) (op e2 e1))) (And (Not (Eq (op e2 e0) (op e2 e2))) (And (Not (Eq (op e2 e0) (op e2 e3))) (And (Not (Eq (op e2 e0) (op e2 e4))) (And (Not (Eq (op e2 e1) (op e2 e2))) (And (Not (Eq (op e2 e1) (op e2 e3))) (And (Not (Eq (op e2 e1) (op e2 e4))) (And (Not (Eq (op e2 e2) (op e2 e3))) (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Not (Eq (op e2 e3) (op e2 e4))) (And (Not (Eq (op e3 e0) (op e3 e1))) (And (Not (Eq (op e3 e0) (op e3 e2))) (And (Not (Eq (op e3 e0) (op e3 e3))) (And (Not (Eq (op e3 e0) (op e3 e4))) (And (Not (Eq (op e3 e1) (op e3 e2))) (And (Not (Eq (op e3 e1) (op e3 e3))) (And (Not (Eq (op e3 e1) (op e3 e4))) (And (Not (Eq (op e3 e2) (op e3 e3))) (And (Not (Eq (op e3 e2) (op e3 e4))) (And (Not (Eq (op e3 e3) (op e3 e4))) (And (Not (Eq (op e4 e0) (op e4 e1))) (And (Not (Eq (op e4 e0) (op e4 e2))) (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Not (Eq (op e4 e0) (op e4 e4))) (And (Not (Eq (op e4 e1) (op e4 e2))) (And (Not (Eq (op e4 e1) (op e4 e3))) (And (Not (Eq (op e4 e1) (op e4 e4))) (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Not (Eq (op e4 e2) (op e4 e4))) (Not (Eq (op e4 e3) (op e4 e4))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) → (Eq (Eq (op e4 e4) e2) (Eq e2 (op e4 e4))) → (Eq (Eq (Not (Not (Eq e2 (op e0 e4)))) (Eq e2 (op e0 e4))) (Eq (Eq e2 (op e0 e4)) (Not (Not (Eq e2 (op e0 e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Eq (op e4 e0) e1) (Or (Eq (op e4 e1) e1) (Or (Eq (op e4 e2) e1) (Or (Eq (op e4 e3) e1) (Eq (op e4 e4) e1)))))) → (Eq (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Eq (op e2 e0) e4) (Or (Eq (op e2 e1) e4) (Or (Eq (op e2 e2) e4) (Or (Eq (op e2 e3) e4) (Eq (op e2 e4) e4)))))) → (Eq (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Eq e3 (op e4 (op e4 e3)))) → (Eq (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)) (Or (Eq (op e0 e2) e3) (Or (Eq (op e1 e2) e3) (Or (Eq (op e2 e2) e3) (Or (Eq (op e3 e2) e3) (Eq (op e4 e2) e3)))))) → (Eq (Eq (op e2 e1) e3) (Eq e3 (op e2 e1))) → (Eq (Eq (op e2 e1) e2) (Eq e2 (op e2 e1))) → (Eq (Eq (op e2 e0) e2) (Eq e2 (op e2 e0))) → (Eq (Eq (Eq (op e1 e1) (op e3 e1)) (Eq (op e1 e1) (op e3 e1))) True) → (Eq (Eq (op e3 e1) e4) (Eq e4 (op e3 e1))) → (Eq (Eq (op e2 e2) e1) (Eq e1 (op e2 e2))) → (Eq (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Eq (op e1 e1) (op e3 e1))) → (Eq (Eq (op e3 e0) e4) (Eq e4 (op e3 e0))) → (Eq (Eq (op e1 e2) e1) (Eq e1 (op e1 e2))) → (Eq (Eq (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Eq (op e1 e1) (op e3 e1))) (Eq (Eq (op e1 e1) (op e3 e1)) (Not (Not (Eq (op e1 e1) (op e3 e1)))))) → (Eq (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Eq (op e3 e0) e4) (Or (Eq (op e3 e1) e4) (Or (Eq (op e3 e2) e4) (Or (Eq (op e3 e3) e4) (Eq (op e3 e4) e4)))))) → (Eq (Eq (op e0 e2) e1) (Eq e1 (op e0 e2))) → (Eq (Eq (op e2 e1) e1) (Eq e1 (op e2 e1))) → (Eq (Eq (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Eq (op e4 e0) (op e4 e3))) (Eq (Eq (op e4 e0) (op e4 e3)) (Not (Not (Eq (op e4 e0) (op e4 e3)))))) → (Eq (Eq (op e2 e3) e3) (Eq e3 (op e2 e3))) → (Eq (Eq (op e2 e0) e1) (Eq e1 (op e2 e0))) → (Eq (Eq (op e2 (op e2 e1)) e1) (Eq e1 (op e2 (op e2 e1)))) → (Eq (Eq e3 e4) (Eq e4 e3)) → (Eq (Eq (op e1 e3) e3) (Eq e3 (op e1 e3))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Eq (op e0 e0) e1) (Or (Eq (op e0 e1) e1) (Or (Eq (op e0 e2) e1) (Or (Eq (op e0 e3) e1) (Eq (op e0 e4) e1)))))) → (Eq (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Eq (op e2 e0) e1) (Or (Eq (op e2 e1) e1) (Or (Eq (op e2 e2) e1) (Or (Eq (op e2 e3) e1) (Eq (op e2 e4) e1)))))) → (Eq (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Eq (op e0 e4) (op e1 e4))) → (Eq (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4)) (Or (Eq (op e0 e1) e4) (Or (Eq (op e1 e1) e4) (Or (Eq (op e2 e1) e4) (Or (Eq (op e3 e1) e4) (Eq (op e4 e1) e4)))))) → (Eq (Eq (op e1 e4) e3) (Eq e3 (op e1 e4))) → (Eq (Eq (op e1 e0) e4) (Eq e4 (op e1 e0))) → (Eq (Eq (op e0 e4) e3) (Eq e3 (op e0 e4))) → (Eq (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Eq (op e1 e0) e4) (Or (Eq (op e1 e1) e4) (Or (Eq (op e1 e2) e4) (Or (Eq (op e1 e3) e4) (Eq (op e1 e4) e4)))))) → (Eq (Eq (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Eq (op e4 e1) (op e4 e3))) (Eq (Eq (op e4 e1) (op e4 e3)) (Not (Not (Eq (op e4 e1) (op e4 e3)))))) → (Eq (Eq (op e3 (op e3 e1)) e1) (Eq e1 (op e3 (op e3 e1)))) → (Eq (Eq (op e3 e3) e1) (Eq e1 (op e3 e3))) → (Eq (Eq (op e1 e1) e3) (Eq e3 (op e1 e1))) → (Eq (Eq (Eq (op e0 e4) (op e1 e4)) (Eq (op e0 e4) (op e1 e4))) True) → (Eq (Eq (op e0 e1) e4) (Eq e4 (op e0 e1))) → (Eq (Eq (op e4 (op e4 e2)) e2) (Eq e2 (op e4 (op e4 e2)))) → (Eq (Eq (Eq (op e2 e1) (op e2 e4)) (Eq (op e2 e1) (op e2 e4))) True) → (Eq (Eq (op e1 e3) e1) (Eq e1 (op e1 e3))) → (Eq (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)) (Or (Eq (op e0 e1) e3) (Or (Eq (op e1 e1) e3) (Or (Eq (op e2 e1) e3) (Or (Eq (op e3 e1) e3) (Eq (op e4 e1) e3)))))) → (Eq (Eq (op e1 e0) e3) (Eq e3 (op e1 e0))) → (Eq (Eq (op e0 e1) e1) (Eq e1 (op e0 e1))) → (Eq (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e2 e4))) (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e2 e4))))) → (Eq (Eq (op e3 e2) e0) (Eq e0 (op e3 e2))) → (Eq (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)) (Or (Eq (op e0 e1) e1) (Or (Eq (op e1 e1) e1) (Or (Eq (op e2 e1) e1) (Or (Eq (op e3 e1) e1) (Eq (op e4 e1) e1)))))) → (Eq (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Eq (op e1 e1) (op e1 e4))) → (Eq (Eq (Eq (op e2 e2) (op e3 e2)) (Eq (op e2 e2) (op e3 e2))) True) → (Eq (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Eq (op e1 e0) e2) (Or (Eq (op e1 e1) e2) (Or (Eq (op e1 e2) e2) (Or (Eq (op e1 e3) e2) (Eq (op e1 e4) e2)))))) → (Eq (Eq (op e1 (op e1 e4)) e4) (Eq e4 (op e1 (op e1 e4)))) → (Eq (Eq (op e1 e0) e0) (Eq e0 (op e1 e0))) → (Eq (Eq (op e2 e4) e1) (Eq e1 (op e2 e4))) → (Eq (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Eq (op e1 e0) e1) (Or (Eq (op e1 e1) e1) (Or (Eq (op e1 e2) e1) (Or (Eq (op e1 e3) e1) (Eq (op e1 e4) e1)))))) → (Eq (Eq (op e0 (op e0 e3)) e3) (Eq e3 (op e0 (op e0 e3)))) → (Eq (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Eq (op e1 e0) e0) (Or (Eq (op e1 e1) e0) (Or (Eq (op e1 e2) e0) (Or (Eq (op e1 e3) e0) (Eq (op e1 e4) e0)))))) → (Eq (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e3 e4))) (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e3 e4))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Eq (op e0 e0) e4) (Or (Eq (op e0 e1) e4) (Or (Eq (op e0 e2) e4) (Or (Eq (op e0 e3) e4) (Eq (op e0 e4) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)) (Or (Eq (op e3 e4) e0) (Or (Eq (op e3 e4) e1) (Or (Eq (op e3 e4) e2) (Or (Eq (op e3 e4) e3) (Eq (op e3 e4) e4)))))) → (Eq (Eq (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Eq (op e1 e1) (op e4 e1))) (Eq (Eq (op e1 e1) (op e4 e1)) (Not (Not (Eq (op e1 e1) (op e4 e1)))))) → (Eq (Eq (op e4 e2) e0) (Eq e0 (op e4 e2))) → (Eq (Eq (op e0 e0) e3) (Eq e3 (op e0 e0))) → (Eq (Eq (op e4 e1) e0) (Eq e0 (op e4 e1))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)) (Or (Eq (op e0 e0) e3) (Or (Eq (op e1 e0) e3) (Or (Eq (op e2 e0) e3) (Or (Eq (op e3 e0) e3) (Eq (op e4 e0) e3)))))) → (Eq (Eq (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Eq (op e2 e0) (op e3 e0))) (Eq (Eq (op e2 e0) (op e3 e0)) (Not (Not (Eq (op e2 e0) (op e3 e0)))))) → (Eq (Eq (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Eq (op e2 e2) (op e4 e2))) (Eq (Eq (op e2 e2) (op e4 e2)) (Not (Not (Eq (op e2 e2) (op e4 e2)))))) → (Eq (Eq (op e0 e3) e4) (Eq e4 (op e0 e3))) → (Eq (Eq (op e0 e0) e2) (Eq e2 (op e0 e0))) → (Eq (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4)) (Or (Eq (op e0 e3) e4) (Or (Eq (op e1 e3) e4) (Or (Eq (op e2 e3) e4) (Or (Eq (op e3 e3) e4) (Eq (op e4 e3) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)) (Or (Eq (op e0 e0) e2) (Or (Eq (op e1 e0) e2) (Or (Eq (op e2 e0) e2) (Or (Eq (op e3 e0) e2) (Eq (op e4 e0) e2)))))) → (Eq (Eq (op e0 e0) e1) (Eq e1 (op e0 e0))) → (Eq (Eq (Eq (op e2 e0) (op e3 e0)) (Eq (op e2 e0) (op e3 e0))) True) → (Eq (Eq (op e2 e3) e4) (Eq e4 (op e2 e3))) → (Eq (Eq (Eq (op e2 e2) (op e4 e2)) (Eq (op e2 e2) (op e4 e2))) True) → (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Eq (op e0 e0) e0) (Or (Eq (op e0 e1) e0) (Or (Eq (op e0 e2) e0) (Or (Eq (op e0 e3) e0) (Eq (op e0 e4) e0)))))) → (Eq (And (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0))) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0))) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0))) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0))) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0))) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4))))) (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0)) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)) (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0)) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4)) (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0)) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4)) (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0)) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4)) (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0)) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4)))))))))))))))))))))))))))))))))))))))))))))))))))) → (Eq (Eq (Eq (op e0 e0) (op e0 e4)) (Eq (op e0 e0) (op e0 e4))) True) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Eq (op e0 e0) (op e0 e4))) (Eq (Eq (op e0 e0) (op e0 e4)) (Not (Not (Eq (op e0 e0) (op e0 e4)))))) → (Eq (Eq (Eq (op e4 e0) (op e4 e3)) (Eq (op e4 e0) (op e4 e3))) True) → (Eq (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Eq (op e4 e0) (op e4 e3))) → (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Eq (op e1 e1) (op e1 e4))) (Eq (Eq (op e1 e1) (op e1 e4)) (Not (Not (Eq (op e1 e1) (op e1 e4)))))) → (Eq (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e2 e4))) (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e2 e4))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0)) (Or (Eq (op e0 e1) e0) (Or (Eq (op e1 e1) e0) (Or (Eq (op e2 e1) e0) (Or (Eq (op e3 e1) e0) (Eq (op e4 e1) e0)))))) → (Eq (Eq (Eq (op e3 e3) (op e4 e3)) (Eq (op e3 e3) (op e4 e3))) True) → (Eq (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Eq (op e3 e3) (op e4 e3))) → (Eq (Eq (Eq e0 (op e3 e4)) (Eq e0 (op e3 e4))) True) → (Eq (Eq (op e0 (op e0 e1)) e1) (Eq e1 (op e0 (op e0 e1)))) → (Eq (Eq (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Eq (op e3 e3) (op e4 e3))) (Eq (Eq (op e3 e3) (op e4 e3)) (Not (Not (Eq (op e3 e3) (op e4 e3)))))) → (Eq (Eq (op e1 e1) e1) (Eq e1 (op e1 e1))) → (Eq (Eq (op e1 e2) e2) (Eq e2 (op e1 e2))) → (Eq (Eq (Eq (op e0 e0) (op e4 e0)) (Eq (op e0 e0) (op e4 e0))) True) → (Eq (Eq (op e3 (op e3 e0)) e0) (Eq e0 (op e3 (op e3 e0)))) → (Eq (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Eq (op e0 e3) (op e0 e4))) → (Eq (Eq (Eq e4 e1) (Eq e4 e1)) True) → (Eq (Eq (op e0 e2) e2) (Eq e2 (op e0 e2))) → (Eq (Eq (op e0 e0) e0) (Eq e0 (op e0 e0))) → (Eq (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Eq (op e0 e0) (op e4 e0))) → (Eq (Eq (Eq (op e1 e4) (op e3 e4)) (Eq (op e1 e4) (op e3 e4))) True) → (Eq (Eq (op e4 e3) e3) (Eq e3 (op e4 e3))) → (Eq (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4))) (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Or (Not (Eq (op e3 (op e3 e1)) e1)) (Or (Not (Eq (op e3 (op e3 e2)) e2)) (Or (Not (Eq (op e3 (op e3 e3)) e3)) (Not (Eq (op e3 (op e3 e4)) e4))))))) → (Eq (Eq (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Eq (op e0 e3) (op e0 e4))) (Eq (Eq (op e0 e3) (op e0 e4)) (Not (Not (Eq (op e0 e3) (op e0 e4)))))) → (Eq (Not (Not (Eq e4 e1))) (Eq e4 e1)) → (Eq (And (And (And (And (Eq (op e0 e0) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e4)) (And (Eq (op e0 e0) e0) (And (Eq (op e1 e1) e1) (And (Eq (op e2 e2) e2) (And (Eq (op e3 e3) e3) (Eq (op e4 e4) e4)))))) → (Eq (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)) (Or (Eq (op e0 e2) e2) (Or (Eq (op e1 e2) e2) (Or (Eq (op e2 e2) e2) (Or (Eq (op e3 e2) e2) (Eq (op e4 e2) e2)))))) → (Eq (Eq (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Eq (op e0 e0) (op e4 e0))) (Eq (Eq (op e0 e0) (op e4 e0)) (Not (Not (Eq (op e0 e0) (op e4 e0)))))) → (Eq (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e3 e4))) (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e3 e4))))) → (Eq (Eq (op e4 (op e4 e4)) e4) (Eq e4 (op e4 (op e4 e4)))) → (Eq (Eq (op e4 (op e4 e3)) e3) (Eq e3 (op e4 (op e4 e3)))) → (Eq (Eq (op e3 (op e3 e4)) e4) (Eq e4 (op e3 (op e3 e4)))) → (Eq (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Eq (op e0 e0) (op e0 e4))) → (Eq (Eq (op e3 (op e3 e2)) e2) (Eq e2 (op e3 (op e3 e2)))) → (Eq (Eq (op e2 (op e2 e4)) e4) (Eq e4 (op e2 (op e2 e4)))) → (Eq (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e1 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e1 e4))))) → (Eq (Eq (op e2 (op e2 e2)) e2) (Eq e2 (op e2 (op e2 e2)))) → (Eq (Eq (op e2 (op e2 e0)) e0) (Eq e0 (op e2 (op e2 e0)))) → (Eq (Eq (op e1 e1) e2) (Eq e2 (op e1 e1))) → (Eq (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4))) (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Or (Not (Eq (op e2 (op e2 e1)) e1)) (Or (Not (Eq (op e2 (op e2 e2)) e2)) (Or (Not (Eq (op e2 (op e2 e3)) e3)) (Not (Eq (op e2 (op e2 e4)) e4))))))) → (Eq (Not (Not (Eq e4 e0))) (Eq e4 e0)) → (Eq (Eq (op e1 (op e1 e3)) e3) (Eq e3 (op e1 (op e1 e3)))) → (Eq (Eq (op e4 e1) e2) (Eq e2 (op e4 e1))) → (Eq (Eq (op e1 (op e1 e1)) e1) (Eq e1 (op e1 (op e1 e1)))) → (Eq (Eq (Eq (op e2 e2) (op e2 e3)) (Eq (op e2 e2) (op e2 e3))) True) → (Eq (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Eq (op e2 e2) (op e2 e4))) → (Eq (Eq (op e0 (op e0 e4)) e4) (Eq e4 (op e0 (op e0 e4)))) → (Eq (Eq (op e2 e2) e4) (Eq e4 (op e2 e2))) → (Eq (Eq (op e0 (op e0 e0)) e0) (Eq e0 (op e0 (op e0 e0)))) → (Eq (Eq (op e1 e2) e4) (Eq e4 (op e1 e2))) → (Eq (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Or (Not (Eq (op e0 (op e0 e1)) e1)) (Or (Not (Eq (op e0 (op e0 e2)) e2)) (Or (Not (Eq (op e0 (op e0 e3)) e3)) (Not (Eq (op e0 (op e0 e4)) e4))))))) → (Eq (Eq (Eq (op e0 e3) (op e0 e4)) (Eq (op e0 e3) (op e0 e4))) True) → (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4))) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4))) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4))) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4))) (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4))) (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4))) (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4))) (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4))) (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4))) (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4))) (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4))) (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4))) (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4))) (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4))) (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4))) (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4))) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)))) → (And (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0))) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0))) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0))) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0))) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0))) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4))))) → (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e4) e1))) (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e4) e2))) (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e3))) (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e4) e4))) → (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e4))) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e4))) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e4))) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e4))) → (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq (op e0 e0) (op e0 e0))) (Not (Eq (op e1 e0) (op e0 e1)))) (Not (Eq (op e2 e0) (op e0 e2)))) (Not (Eq (op e3 e0) (op e0 e3)))) (Not (Eq (op e4 e0) (op e0 e4)))) (Or (Or (Or (Or (Not (Eq (op e0 e1) (op e1 e0))) (Not (Eq (op e1 e1) (op e1 e1)))) (Not (Eq (op e2 e1) (op e1 e2)))) (Not (Eq (op e3 e1) (op e1 e3)))) (Not (Eq (op e4 e1) (op e1 e4))))) (Or (Or (Or (Or (Not (Eq (op e0 e2) (op e2 e0))) (Not (Eq (op e1 e2) (op e2 e1)))) (Not (Eq (op e2 e2) (op e2 e2)))) (Not (Eq (op e3 e2) (op e2 e3)))) (Not (Eq (op e4 e2) (op e2 e4))))) (Or (Or (Or (Or (Not (Eq (op e0 e3) (op e3 e0))) (Not (Eq (op e1 e3) (op e3 e1)))) (Not (Eq (op e2 e3) (op e3 e2)))) (Not (Eq (op e3 e3) (op e3 e3)))) (Not (Eq (op e4 e3) (op e3 e4))))) (Or (Or (Or (Or (Not (Eq (op e0 e4) (op e4 e0))) (Not (Eq (op e1 e4) (op e4 e1)))) (Not (Eq (op e2 e4) (op e4 e2)))) (Not (Eq (op e3 e4) (op e4 e3)))) (Not (Eq (op e4 e4) (op e4 e4))))) → (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e4)) → (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))) → (And (And (And (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))) → (And (And (And (And (Eq (op e0 e0) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e4)) → (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e1 e0))) (Not (Eq (op e0 e0) (op e2 e0)))) (Not (Eq (op e0 e0) (op e3 e0)))) (Not (Eq (op e0 e0) (op e4 e0)))) (Not (Eq (op e1 e0) (op e2 e0)))) (Not (Eq (op e1 e0) (op e3 e0)))) (Not (Eq (op e1 e0) (op e4 e0)))) (Not (Eq (op e2 e0) (op e3 e0)))) (Not (Eq (op e2 e0) (op e4 e0)))) (Not (Eq (op e3 e0) (op e4 e0)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e1) (op e1 e1))) (Not (Eq (op e0 e1) (op e2 e1)))) (Not (Eq (op e0 e1) (op e3 e1)))) (Not (Eq (op e0 e1) (op e4 e1)))) (Not (Eq (op e1 e1) (op e2 e1)))) (Not (Eq (op e1 e1) (op e3 e1)))) (Not (Eq (op e1 e1) (op e4 e1)))) (Not (Eq (op e2 e1) (op e3 e1)))) (Not (Eq (op e2 e1) (op e4 e1)))) (Not (Eq (op e3 e1) (op e4 e1))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e2) (op e1 e2))) (Not (Eq (op e0 e2) (op e2 e2)))) (Not (Eq (op e0 e2) (op e3 e2)))) (Not (Eq (op e0 e2) (op e4 e2)))) (Not (Eq (op e1 e2) (op e2 e2)))) (Not (Eq (op e1 e2) (op e3 e2)))) (Not (Eq (op e1 e2) (op e4 e2)))) (Not (Eq (op e2 e2) (op e3 e2)))) (Not (Eq (op e2 e2) (op e4 e2)))) (Not (Eq (op e3 e2) (op e4 e2))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e3) (op e1 e3))) (Not (Eq (op e0 e3) (op e2 e3)))) (Not (Eq (op e0 e3) (op e3 e3)))) (Not (Eq (op e0 e3) (op e4 e3)))) (Not (Eq (op e1 e3) (op e2 e3)))) (Not (Eq (op e1 e3) (op e3 e3)))) (Not (Eq (op e1 e3) (op e4 e3)))) (Not (Eq (op e2 e3) (op e3 e3)))) (Not (Eq (op e2 e3) (op e4 e3)))) (Not (Eq (op e3 e3) (op e4 e3))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e4) (op e1 e4))) (Not (Eq (op e0 e4) (op e2 e4)))) (Not (Eq (op e0 e4) (op e3 e4)))) (Not (Eq (op e0 e4) (op e4 e4)))) (Not (Eq (op e1 e4) (op e2 e4)))) (Not (Eq (op e1 e4) (op e3 e4)))) (Not (Eq (op e1 e4) (op e4 e4)))) (Not (Eq (op e2 e4) (op e3 e4)))) (Not (Eq (op e2 e4) (op e4 e4)))) (Not (Eq (op e3 e4) (op e4 e4))))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e0 e1))) (Not (Eq (op e0 e0) (op e0 e2)))) (Not (Eq (op e0 e0) (op e0 e3)))) (Not (Eq (op e0 e0) (op e0 e4)))) (Not (Eq (op e0 e1) (op e0 e2)))) (Not (Eq (op e0 e1) (op e0 e3)))) (Not (Eq (op e0 e1) (op e0 e4)))) (Not (Eq (op e0 e2) (op e0 e3)))) (Not (Eq (op e0 e2) (op e0 e4)))) (Not (Eq (op e0 e3) (op e0 e4)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e1 e0) (op e1 e1))) (Not (Eq (op e1 e0) (op e1 e2)))) (Not (Eq (op e1 e0) (op e1 e3)))) (Not (Eq (op e1 e0) (op e1 e4)))) (Not (Eq (op e1 e1) (op e1 e2)))) (Not (Eq (op e1 e1) (op e1 e3)))) (Not (Eq (op e1 e1) (op e1 e4)))) (Not (Eq (op e1 e2) (op e1 e3)))) (Not (Eq (op e1 e2) (op e1 e4)))) (Not (Eq (op e1 e3) (op e1 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e2 e0) (op e2 e1))) (Not (Eq (op e2 e0) (op e2 e2)))) (Not (Eq (op e2 e0) (op e2 e3)))) (Not (Eq (op e2 e0) (op e2 e4)))) (Not (Eq (op e2 e1) (op e2 e2)))) (Not (Eq (op e2 e1) (op e2 e3)))) (Not (Eq (op e2 e1) (op e2 e4)))) (Not (Eq (op e2 e2) (op e2 e3)))) (Not (Eq (op e2 e2) (op e2 e4)))) (Not (Eq (op e2 e3) (op e2 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e3 e0) (op e3 e1))) (Not (Eq (op e3 e0) (op e3 e2)))) (Not (Eq (op e3 e0) (op e3 e3)))) (Not (Eq (op e3 e0) (op e3 e4)))) (Not (Eq (op e3 e1) (op e3 e2)))) (Not (Eq (op e3 e1) (op e3 e3)))) (Not (Eq (op e3 e1) (op e3 e4)))) (Not (Eq (op e3 e2) (op e3 e3)))) (Not (Eq (op e3 e2) (op e3 e4)))) (Not (Eq (op e3 e3) (op e3 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e4 e0) (op e4 e1))) (Not (Eq (op e4 e0) (op e4 e2)))) (Not (Eq (op e4 e0) (op e4 e3)))) (Not (Eq (op e4 e0) (op e4 e4)))) (Not (Eq (op e4 e1) (op e4 e2)))) (Not (Eq (op e4 e1) (op e4 e3)))) (Not (Eq (op e4 e1) (op e4 e4)))) (Not (Eq (op e4 e2) (op e4 e3)))) (Not (Eq (op e4 e2) (op e4 e4)))) (Not (Eq (op e4 e3) (op e4 e4)))))) → (And (And (And (And (And (And (And (And (And (Not (Eq e0 e1)) (Not (Eq e0 e2))) (Not (Eq e0 e3))) (Not (Eq e0 e4))) (Not (Eq e1 e2))) (Not (Eq e1 e3))) (Not (Eq e1 e4))) (Not (Eq e2 e3))) (Not (Eq e2 e4))) (Not (Eq e3 e4))) → (Not (And (And (Eq e2 (op e3 e1)) (Eq e3 (op e1 e4))) (Eq e4 (op e0 e1)))) → (Not (And (And (Eq e2 (op e4 e1)) (Eq e4 (op e1 e3))) (Eq e3 (op e0 e1)))) → (Not (And (And (Eq e3 (op e2 e1)) (Eq e2 (op e1 e4))) (Eq e4 (op e0 e1)))) → (Not (And (And (Eq e3 (op e4 e1)) (Eq e4 (op e1 e2))) (Eq e2 (op e0 e1)))) → (Not (And (And (Eq e4 (op e2 e1)) (Eq e2 (op e1 e3))) (Eq e3 (op e0 e1)))) → (Not (And (And (Eq e4 (op e3 e1)) (Eq e3 (op e1 e2))) (Eq e2 (op e0 e1)))) → (Not (And (And (Eq e1 (op e3 e2)) (Eq e3 (op e2 e4))) (Eq e4 (op e0 e2)))) → (Not (And (And (Eq e1 (op e4 e2)) (Eq e4 (op e2 e3))) (Eq e3 (op e0 e2)))) → (Not (And (And (Eq e3 (op e1 e2)) (Eq e1 (op e2 e4))) (Eq e4 (op e0 e2)))) → (Not (And (And (Eq e3 (op e4 e2)) (Eq e4 (op e2 e1))) (Eq e1 (op e0 e2)))) → (Not (And (And (Eq e4 (op e1 e2)) (Eq e1 (op e2 e3))) (Eq e3 (op e0 e2)))) → (Not (And (And (Eq e4 (op e3 e2)) (Eq e3 (op e2 e1))) (Eq e1 (op e0 e2)))) → (Not (And (And (Eq e1 (op e2 e3)) (Eq e2 (op e3 e4))) (Eq e4 (op e0 e3)))) → (Not (And (And (Eq e1 (op e4 e3)) (Eq e4 (op e3 e2))) (Eq e2 (op e0 e3)))) → (Not (And (And (Eq e2 (op e1 e3)) (Eq e1 (op e3 e4))) (Eq e4 (op e0 e3)))) → (Not (And (And (Eq e2 (op e4 e3)) (Eq e4 (op e3 e1))) (Eq e1 (op e0 e3)))) → (Not (And (And (Eq e4 (op e1 e3)) (Eq e1 (op e3 e2))) (Eq e2 (op e0 e3)))) → (Not (And (And (Eq e4 (op e2 e3)) (Eq e2 (op e3 e1))) (Eq e1 (op e0 e3)))) → (Not (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e0 e4)))) → (Not (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e0 e4)))) → (Not (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e0 e4)))) → (Not (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e0 e4)))) → (Not (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e0 e4)))) → (Not (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e0 e4)))) → (Not (And (And (Eq e2 (op e3 e0)) (Eq e3 (op e0 e4))) (Eq e4 (op e1 e0)))) → (Not (And (And (Eq e2 (op e4 e0)) (Eq e4 (op e0 e3))) (Eq e3 (op e1 e0)))) → (Not (And (And (Eq e3 (op e2 e0)) (Eq e2 (op e0 e4))) (Eq e4 (op e1 e0)))) → (Not (And (And (Eq e3 (op e4 e0)) (Eq e4 (op e0 e2))) (Eq e2 (op e1 e0)))) → (Not (And (And (Eq e4 (op e2 e0)) (Eq e2 (op e0 e3))) (Eq e3 (op e1 e0)))) → (Not (And (And (Eq e4 (op e3 e0)) (Eq e3 (op e0 e2))) (Eq e2 (op e1 e0)))) → (Not (And (And (Eq e0 (op e3 e2)) (Eq e3 (op e2 e4))) (Eq e4 (op e1 e2)))) → (Not (And (And (Eq e0 (op e4 e2)) (Eq e4 (op e2 e3))) (Eq e3 (op e1 e2)))) → (Not (And (And (Eq e3 (op e0 e2)) (Eq e0 (op e2 e4))) (Eq e4 (op e1 e2)))) → (Not (And (And (Eq e3 (op e4 e2)) (Eq e4 (op e2 e0))) (Eq e0 (op e1 e2)))) → (Not (And (And (Eq e4 (op e0 e2)) (Eq e0 (op e2 e3))) (Eq e3 (op e1 e2)))) → (Not (And (And (Eq e4 (op e3 e2)) (Eq e3 (op e2 e0))) (Eq e0 (op e1 e2)))) → (Not (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e4))) (Eq e4 (op e1 e3)))) → (Not (And (And (Eq e0 (op e4 e3)) (Eq e4 (op e3 e2))) (Eq e2 (op e1 e3)))) → (Not (And (And (Eq e2 (op e0 e3)) (Eq e0 (op e3 e4))) (Eq e4 (op e1 e3)))) → (Not (And (And (Eq e2 (op e4 e3)) (Eq e4 (op e3 e0))) (Eq e0 (op e1 e3)))) → (Not (And (And (Eq e4 (op e0 e3)) (Eq e0 (op e3 e2))) (Eq e2 (op e1 e3)))) → (Not (And (And (Eq e4 (op e2 e3)) (Eq e2 (op e3 e0))) (Eq e0 (op e1 e3)))) → (Not (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e1 e4)))) → (Not (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e1 e4)))) → (Not (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e1 e4)))) → (Not (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e1 e4)))) → (Not (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e1 e4)))) → (Not (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e1 e4)))) → (Not (And (And (Eq e1 (op e3 e0)) (Eq e3 (op e0 e4))) (Eq e4 (op e2 e0)))) → (Not (And (And (Eq e1 (op e4 e0)) (Eq e4 (op e0 e3))) (Eq e3 (op e2 e0)))) → (Not (And (And (Eq e3 (op e1 e0)) (Eq e1 (op e0 e4))) (Eq e4 (op e2 e0)))) → (Not (And (And (Eq e3 (op e4 e0)) (Eq e4 (op e0 e1))) (Eq e1 (op e2 e0)))) → (Not (And (And (Eq e4 (op e1 e0)) (Eq e1 (op e0 e3))) (Eq e3 (op e2 e0)))) → (Not (And (And (Eq e4 (op e3 e0)) (Eq e3 (op e0 e1))) (Eq e1 (op e2 e0)))) → (Not (And (And (Eq e0 (op e3 e1)) (Eq e3 (op e1 e4))) (Eq e4 (op e2 e1)))) → (Not (And (And (Eq e0 (op e4 e1)) (Eq e4 (op e1 e3))) (Eq e3 (op e2 e1)))) → (Not (And (And (Eq e3 (op e0 e1)) (Eq e0 (op e1 e4))) (Eq e4 (op e2 e1)))) → (Not (And (And (Eq e3 (op e4 e1)) (Eq e4 (op e1 e0))) (Eq e0 (op e2 e1)))) → (Not (And (And (Eq e4 (op e0 e1)) (Eq e0 (op e1 e3))) (Eq e3 (op e2 e1)))) → (Not (And (And (Eq e4 (op e3 e1)) (Eq e3 (op e1 e0))) (Eq e0 (op e2 e1)))) → (Not (And (And (Eq e0 (op e1 e3)) (Eq e1 (op e3 e4))) (Eq e4 (op e2 e3)))) → (Not (And (And (Eq e0 (op e4 e3)) (Eq e4 (op e3 e1))) (Eq e1 (op e2 e3)))) → (Not (And (And (Eq e1 (op e0 e3)) (Eq e0 (op e3 e4))) (Eq e4 (op e2 e3)))) → (Not (And (And (Eq e1 (op e4 e3)) (Eq e4 (op e3 e0))) (Eq e0 (op e2 e3)))) → (Not (And (And (Eq e4 (op e0 e3)) (Eq e0 (op e3 e1))) (Eq e1 (op e2 e3)))) → (Not (And (And (Eq e4 (op e1 e3)) (Eq e1 (op e3 e0))) (Eq e0 (op e2 e3)))) → (Not (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e2 e4)))) → (Not (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e2 e4)))) → (Not (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e2 e4)))) → (Not (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e2 e4)))) → (Not (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e2 e4)))) → (Not (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e2 e4)))) → (Not (And (And (Eq e1 (op e2 e0)) (Eq e2 (op e0 e4))) (Eq e4 (op e3 e0)))) → (Not (And (And (Eq e1 (op e4 e0)) (Eq e4 (op e0 e2))) (Eq e2 (op e3 e0)))) → (Not (And (And (Eq e2 (op e1 e0)) (Eq e1 (op e0 e4))) (Eq e4 (op e3 e0)))) → (Not (And (And (Eq e2 (op e4 e0)) (Eq e4 (op e0 e1))) (Eq e1 (op e3 e0)))) → (Not (And (And (Eq e4 (op e1 e0)) (Eq e1 (op e0 e2))) (Eq e2 (op e3 e0)))) → (Not (And (And (Eq e4 (op e2 e0)) (Eq e2 (op e0 e1))) (Eq e1 (op e3 e0)))) → (Not (And (And (Eq e0 (op e2 e1)) (Eq e2 (op e1 e4))) (Eq e4 (op e3 e1)))) → (Not (And (And (Eq e0 (op e4 e1)) (Eq e4 (op e1 e2))) (Eq e2 (op e3 e1)))) → (Not (And (And (Eq e2 (op e0 e1)) (Eq e0 (op e1 e4))) (Eq e4 (op e3 e1)))) → (Not (And (And (Eq e2 (op e4 e1)) (Eq e4 (op e1 e0))) (Eq e0 (op e3 e1)))) → (Not (And (And (Eq e4 (op e0 e1)) (Eq e0 (op e1 e2))) (Eq e2 (op e3 e1)))) → (Not (And (And (Eq e4 (op e2 e1)) (Eq e2 (op e1 e0))) (Eq e0 (op e3 e1)))) → (Not (And (And (Eq e0 (op e1 e2)) (Eq e1 (op e2 e4))) (Eq e4 (op e3 e2)))) → (Not (And (And (Eq e0 (op e4 e2)) (Eq e4 (op e2 e1))) (Eq e1 (op e3 e2)))) → (Not (And (And (Eq e1 (op e0 e2)) (Eq e0 (op e2 e4))) (Eq e4 (op e3 e2)))) → (Not (And (And (Eq e1 (op e4 e2)) (Eq e4 (op e2 e0))) (Eq e0 (op e3 e2)))) → (Not (And (And (Eq e4 (op e0 e2)) (Eq e0 (op e2 e1))) (Eq e1 (op e3 e2)))) → (Not (And (And (Eq e4 (op e1 e2)) (Eq e1 (op e2 e0))) (Eq e0 (op e3 e2)))) → (Not (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e3 e4)))) → (Not (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e3 e4)))) → (Not (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e3 e4)))) → (Not (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e3 e4)))) → (Not (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e3 e4)))) → (Not (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e3 e4)))) → (Not (And (And (Eq e1 (op e2 e0)) (Eq e2 (op e0 e3))) (Eq e3 (op e4 e0)))) → (Not (And (And (Eq e1 (op e3 e0)) (Eq e3 (op e0 e2))) (Eq e2 (op e4 e0)))) → (Not (And (And (Eq e2 (op e1 e0)) (Eq e1 (op e0 e3))) (Eq e3 (op e4 e0)))) → (Not (And (And (Eq e2 (op e3 e0)) (Eq e3 (op e0 e1))) (Eq e1 (op e4 e0)))) → (Not (And (And (Eq e3 (op e1 e0)) (Eq e1 (op e0 e2))) (Eq e2 (op e4 e0)))) → (Not (And (And (Eq e3 (op e2 e0)) (Eq e2 (op e0 e1))) (Eq e1 (op e4 e0)))) → (Not (And (And (Eq e0 (op e2 e1)) (Eq e2 (op e1 e3))) (Eq e3 (op e4 e1)))) → (Not (And (And (Eq e0 (op e3 e1)) (Eq e3 (op e1 e2))) (Eq e2 (op e4 e1)))) → (Not (And (And (Eq e2 (op e0 e1)) (Eq e0 (op e1 e3))) (Eq e3 (op e4 e1)))) → (Not (And (And (Eq e2 (op e3 e1)) (Eq e3 (op e1 e0))) (Eq e0 (op e4 e1)))) → (Not (And (And (Eq e3 (op e0 e1)) (Eq e0 (op e1 e2))) (Eq e2 (op e4 e1)))) → (Not (And (And (Eq e3 (op e2 e1)) (Eq e2 (op e1 e0))) (Eq e0 (op e4 e1)))) → (Not (And (And (Eq e0 (op e1 e2)) (Eq e1 (op e2 e3))) (Eq e3 (op e4 e2)))) → (Not (And (And (Eq e0 (op e3 e2)) (Eq e3 (op e2 e1))) (Eq e1 (op e4 e2)))) → (Not (And (And (Eq e1 (op e0 e2)) (Eq e0 (op e2 e3))) (Eq e3 (op e4 e2)))) → (Not (And (And (Eq e1 (op e3 e2)) (Eq e3 (op e2 e0))) (Eq e0 (op e4 e2)))) → (Not (And (And (Eq e3 (op e0 e2)) (Eq e0 (op e2 e1))) (Eq e1 (op e4 e2)))) → (Not (And (And (Eq e3 (op e1 e2)) (Eq e1 (op e2 e0))) (Eq e0 (op e4 e2)))) → (Not (And (And (Eq e0 (op e1 e3)) (Eq e1 (op e3 e2))) (Eq e2 (op e4 e3)))) → (Not (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e1))) (Eq e1 (op e4 e3)))) → (Not (And (And (Eq e1 (op e0 e3)) (Eq e0 (op e3 e2))) (Eq e2 (op e4 e3)))) → (Not (And (And (Eq e1 (op e2 e3)) (Eq e2 (op e3 e0))) (Eq e0 (op e4 e3)))) → (Not (And (And (Eq e2 (op e0 e3)) (Eq e0 (op e3 e1))) (Eq e1 (op e4 e3)))) → (Not (And (And (Eq e2 (op e1 e3)) (Eq e1 (op e3 e0))) (Eq e0 (op e4 e3)))) → False :=
fun lean_r0 : (Eq (Eq (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Eq (op e4 e2) (op e4 e4))) (Eq (Eq (op e4 e2) (op e4 e4)) (Not (Not (Eq (op e4 e2) (op e4 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Eq (op e4 e2) (op e4 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq (Eq (Eq (op e4 e2) (op e4 e4)) (Eq (op e4 e2) (op e4 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq (Eq (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Eq (op e1 e3) (op e3 e3))) (Eq (Eq (op e1 e3) (op e3 e3)) (Not (Not (Eq (op e1 e3) (op e3 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Eq (op e1 e3) (op e3 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq (Eq (Eq (op e1 e3) (op e3 e3)) (Eq (op e1 e3) (op e3 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq (Eq (Not (Not (Eq e4 e3))) (Eq e4 e3)) (Eq (Eq e4 e3) (Not (Not (Eq e4 e3))))) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq (Not (Not (Eq e4 e3))) (Eq e4 e3)) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq (Eq (Eq e4 e3) (Eq e4 e3)) True) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq (Eq (Not (Not (Eq e4 e0))) (Eq e4 e0)) (Eq (Eq e4 e0) (Not (Not (Eq e4 e0))))) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq (Eq (Eq e4 e0) (Eq e4 e0)) True) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e4))) (Eq e4 (op e1 e3))) (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e4)) (Eq e4 (op e1 e3))))) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq (Eq (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Eq (op e0 e2) (op e0 e4))) (Eq (Eq (op e0 e2) (op e0 e4)) (Not (Not (Eq (op e0 e2) (op e0 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Eq (op e0 e2) (op e0 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Eq (op e1 e1) (op e1 e2))) (Eq (Eq (op e1 e1) (op e1 e2)) (Not (Not (Eq (op e1 e1) (op e1 e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Eq (op e1 e1) (op e1 e2))) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (Eq (Eq (op e1 e1) (op e1 e2)) (Eq (op e1 e1) (op e1 e2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Eq (op e0 e0) (op e0 e2))) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e3 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e1 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e1 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq (Eq (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Eq (op e0 e2) (op e0 e3))) (Eq (Eq (op e0 e2) (op e0 e3)) (Not (Not (Eq (op e0 e2) (op e0 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Eq (op e0 e0) (op e3 e0))) (Eq (Eq (op e0 e0) (op e3 e0)) (Not (Not (Eq (op e0 e0) (op e3 e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Eq (op e0 e2) (op e0 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Eq (op e0 e0) (op e3 e0))) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (Eq (Eq (op e0 e2) (op e0 e3)) (Eq (op e0 e2) (op e0 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq (Eq (Eq (op e0 e0) (op e3 e0)) (Eq (op e0 e0) (op e3 e0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq (Eq (Eq (op e4 e1) (op e4 e2)) (Eq (op e4 e1) (op e4 e2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (Not (Not (Eq e3 e1))) (Eq e3 e1)) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq (Eq (Eq e3 e1) (Eq e3 e1)) True) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e0 e4))) (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e0 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Eq (op e4 e1) (op e4 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq (Eq (Eq (op e4 e1) (op e4 e3)) (Eq (op e4 e1) (op e4 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e0 e4))) (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e0 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq (Eq (Eq (op e0 e0) (op e0 e2)) (Eq (op e0 e0) (op e0 e2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (Eq (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Eq (op e4 e1) (op e4 e2))) (Eq (Eq (op e4 e1) (op e4 e2)) (Not (Not (Eq (op e4 e1) (op e4 e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq (And (And (Eq e1 (op e2 e3)) (Eq e2 (op e3 e0))) (Eq e0 (op e4 e3))) (And (Eq e1 (op e2 e3)) (And (Eq e2 (op e3 e0)) (Eq e0 (op e4 e3))))) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Eq (op e0 e0) (op e0 e1))) (Eq (Eq (op e0 e0) (op e0 e1)) (Not (Not (Eq (op e0 e0) (op e0 e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Eq (op e0 e0) (op e0 e1))) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq (Eq (Eq (op e0 e0) (op e0 e1)) (Eq (op e0 e0) (op e0 e1))) True) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq (Eq (Eq e1 (op e3 e4)) (Eq e1 (op e3 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e1 e4))) (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e1 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq (Eq (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Eq (op e1 e4) (op e2 e4))) (Eq (Eq (op e1 e4) (op e2 e4)) (Not (Not (Eq (op e1 e4) (op e2 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Eq (op e1 e4) (op e2 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq (Eq (Eq (op e1 e4) (op e2 e4)) (Eq (op e1 e4) (op e2 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Eq (op e1 e1) (op e2 e1))) (Eq (Eq (op e1 e1) (op e2 e1)) (Not (Not (Eq (op e1 e1) (op e2 e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e3 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e3 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e2 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e2 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e2 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e2 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e0 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e0 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq (Eq (Not (Not (Eq e0 (op e3 e4)))) (Eq e0 (op e3 e4))) (Eq (Eq e0 (op e3 e4)) (Not (Not (Eq e0 (op e3 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq (Not (Not (Eq e0 (op e3 e4)))) (Eq e0 (op e3 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Eq (op e0 e0) e0) (Or (Eq (op e0 e0) e1) (Or (Eq (op e0 e0) e2) (Or (Eq (op e0 e0) e3) (Eq (op e0 e0) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4)) (Or (Eq (op e0 e1) e0) (Or (Eq (op e0 e1) e1) (Or (Eq (op e0 e1) e2) (Or (Eq (op e0 e1) e3) (Eq (op e0 e1) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4)) (Or (Eq (op e0 e4) e0) (Or (Eq (op e0 e4) e1) (Or (Eq (op e0 e4) e2) (Or (Eq (op e0 e4) e3) (Eq (op e0 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Eq (op e1 e0) e0) (Or (Eq (op e1 e0) e1) (Or (Eq (op e1 e0) e2) (Or (Eq (op e1 e0) e3) (Eq (op e1 e0) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4)) (Or (Eq (op e1 e1) e0) (Or (Eq (op e1 e1) e1) (Or (Eq (op e1 e1) e2) (Or (Eq (op e1 e1) e3) (Eq (op e1 e1) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4)) (Or (Eq (op e1 e3) e0) (Or (Eq (op e1 e3) e1) (Or (Eq (op e1 e3) e2) (Or (Eq (op e1 e3) e3) (Eq (op e1 e3) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Eq (op e2 e0) e0) (Or (Eq (op e2 e0) e1) (Or (Eq (op e2 e0) e2) (Or (Eq (op e2 e0) e3) (Eq (op e2 e0) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4)) (Or (Eq (op e2 e2) e0) (Or (Eq (op e2 e2) e1) (Or (Eq (op e2 e2) e2) (Or (Eq (op e2 e2) e3) (Eq (op e2 e2) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4)) (Or (Eq (op e2 e3) e0) (Or (Eq (op e2 e3) e1) (Or (Eq (op e2 e3) e2) (Or (Eq (op e2 e3) e3) (Eq (op e2 e3) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Eq (op e3 e0) e0) (Or (Eq (op e3 e0) e1) (Or (Eq (op e3 e0) e2) (Or (Eq (op e3 e0) e3) (Eq (op e3 e0) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4)) (Or (Eq (op e3 e1) e0) (Or (Eq (op e3 e1) e1) (Or (Eq (op e3 e1) e2) (Or (Eq (op e3 e1) e3) (Eq (op e3 e1) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4)) (Or (Eq (op e3 e2) e0) (Or (Eq (op e3 e2) e1) (Or (Eq (op e3 e2) e2) (Or (Eq (op e3 e2) e3) (Eq (op e3 e2) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4)) (Or (Eq (op e3 e3) e0) (Or (Eq (op e3 e3) e1) (Or (Eq (op e3 e3) e2) (Or (Eq (op e3 e3) e3) (Eq (op e3 e3) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Eq (op e4 e0) e0) (Or (Eq (op e4 e0) e1) (Or (Eq (op e4 e0) e2) (Or (Eq (op e4 e0) e3) (Eq (op e4 e0) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4)) (Or (Eq (op e4 e2) e0) (Or (Eq (op e4 e2) e1) (Or (Eq (op e4 e2) e2) (Or (Eq (op e4 e2) e3) (Eq (op e4 e2) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq (And (And (Eq e0 (op e4 e1)) (Eq e4 (op e1 e2))) (Eq e2 (op e3 e1))) (And (Eq e0 (op e4 e1)) (And (Eq e4 (op e1 e2)) (Eq e2 (op e3 e1))))) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq (Eq (Not (Not (Eq e4 e1))) (Eq e4 e1)) (Eq (Eq e4 e1) (Not (Not (Eq e4 e1))))) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq (And (And (Eq e2 (op e0 e3)) (Eq e0 (op e3 e4))) (Eq e4 (op e1 e3))) (And (Eq e2 (op e0 e3)) (And (Eq e0 (op e3 e4)) (Eq e4 (op e1 e3))))) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Eq (op e4 e1) (op e4 e2))) => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq (And (And (Eq e0 (op e2 e1)) (Eq e2 (op e1 e3))) (Eq e3 (op e4 e1))) (And (Eq e0 (op e2 e1)) (And (Eq e2 (op e1 e3)) (Eq e3 (op e4 e1))))) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq (And (And (Eq e3 (op e4 e1)) (Eq e4 (op e1 e0))) (Eq e0 (op e2 e1))) (And (Eq e3 (op e4 e1)) (And (Eq e4 (op e1 e0)) (Eq e0 (op e2 e1))))) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e1 e4))) (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e1 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Eq (op e0 e0) (op e2 e0))) (Eq (Eq (op e0 e0) (op e2 e0)) (Not (Not (Eq (op e0 e0) (op e2 e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r74 : (Eq (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Eq (op e0 e0) (op e2 e0))) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq (Eq (Not (Not (Eq e3 e1))) (Eq e3 e1)) (Eq (Eq e3 e1) (Not (Not (Eq e3 e1))))) => -- THEORY_REWRITE_BOOL
fun lean_r76 : (Eq (Eq (Eq (op e0 e0) (op e2 e0)) (Eq (op e0 e0) (op e2 e0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e1))) (Eq e1 (op e4 e3))) (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e1)) (Eq e1 (op e4 e3))))) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Eq (op e2 e2) (op e3 e2))) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq (Eq (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Eq (op e0 e4) (op e2 e4))) (Eq (Eq (op e0 e4) (op e2 e4)) (Not (Not (Eq (op e0 e4) (op e2 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq (Eq (Not (Not (Eq e4 e2))) (Eq e4 e2)) (Eq (Eq e4 e2) (Not (Not (Eq e4 e2))))) => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Eq (op e0 e4) (op e2 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq (Not (Not (Eq e4 e2))) (Eq e4 e2)) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq (Eq (Eq (op e0 e4) (op e2 e4)) (Eq (op e0 e4) (op e2 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq (Eq (Eq e4 e2) (Eq e4 e2)) True) => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e0 e4))) (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e0 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e0 e4))) (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e0 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r87 : (Eq (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e1 e4))) (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e1 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Eq (op e2 e2) (op e2 e4))) (Eq (Eq (op e2 e2) (op e2 e4)) (Not (Not (Eq (op e2 e2) (op e2 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r89 : (Eq (Eq (Eq (op e2 e2) (op e2 e4)) (Eq (op e2 e2) (op e2 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r90 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Eq (op e0 e0) (op e1 e0))) (Eq (Eq (op e0 e0) (op e1 e0)) (Not (Not (Eq (op e0 e0) (op e1 e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Eq (op e0 e0) (op e1 e0))) => -- THEORY_REWRITE_BOOL
fun lean_r92 : (Eq (Eq (Eq (op e0 e0) (op e1 e0)) (Eq (op e0 e0) (op e1 e0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq (Eq (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Eq (op e0 e4) (op e1 e4))) (Eq (Eq (op e0 e4) (op e1 e4)) (Not (Not (Eq (op e0 e4) (op e1 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq (Eq (Not (Not (Eq e3 e0))) (Eq e3 e0)) (Eq (Eq e3 e0) (Not (Not (Eq e3 e0))))) => -- THEORY_REWRITE_BOOL
fun lean_r95 : (Eq (Not (Not (Eq e3 e0))) (Eq e3 e0)) => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq (Eq (Eq e3 e0) (Eq e3 e0)) True) => -- THEORY_REWRITE_BOOL
fun lean_r97 : (Eq (Eq (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Eq (op e4 e2) (op e4 e3))) (Eq (Eq (op e4 e2) (op e4 e3)) (Not (Not (Eq (op e4 e2) (op e4 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r98 : (Eq (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Eq (op e4 e2) (op e4 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r99 : (Eq (Eq (Eq (op e4 e2) (op e4 e3)) (Eq (op e4 e2) (op e4 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r100 : (Eq (Eq (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Eq e3 (op e4 (op e4 e3)))) (Eq (Eq e3 (op e4 (op e4 e3))) (Not (Not (Eq e3 (op e4 (op e4 e3))))))) => -- THEORY_REWRITE_BOOL
fun lean_r101 : (Eq (Eq (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Eq (op e4 e0) (op e4 e1))) (Eq (Eq (op e4 e0) (op e4 e1)) (Not (Not (Eq (op e4 e0) (op e4 e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4)) (Or (Eq (op e4 e3) e0) (Or (Eq (op e4 e3) e1) (Or (Eq (op e4 e3) e2) (Or (Eq (op e4 e3) e3) (Eq (op e4 e3) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r103 : (Eq (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Eq (op e4 e0) (op e4 e1))) => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq (Eq (Eq (op e4 e0) (op e4 e1)) (Eq (op e4 e0) (op e4 e1))) True) => -- THEORY_REWRITE_BOOL
fun lean_r105 : (Eq (Eq (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Eq (op e3 e3) (op e3 e4))) (Eq (Eq (op e3 e3) (op e3 e4)) (Not (Not (Eq (op e3 e3) (op e3 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r106 : (Eq (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Eq (op e3 e3) (op e3 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r107 : (Eq (Eq (Eq (op e3 e3) (op e3 e4)) (Eq (op e3 e3) (op e3 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r108 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Eq (op e0 e0) (op e0 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r109 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Eq (op e1 e1) (op e1 e3))) (Eq (Eq (op e1 e1) (op e1 e3)) (Not (Not (Eq (op e1 e1) (op e1 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq (Eq (Eq (op e0 e0) (op e0 e3)) (Eq (op e0 e0) (op e0 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r111 : (Eq (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Eq (op e1 e1) (op e1 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r112 : (Eq (Eq (Eq (op e1 e1) (op e1 e3)) (Eq (op e1 e1) (op e1 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r113 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Eq (op e3 e0) e0) (Or (Eq (op e3 e1) e0) (Or (Eq (op e3 e2) e0) (Or (Eq (op e3 e3) e0) (Eq (op e3 e4) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r114 : (Eq (Eq (op e3 e0) e0) (Eq e0 (op e3 e0))) => -- THEORY_REWRITE_UF
fun lean_r115 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0)) (Or (Eq (op e0 e3) e0) (Or (Eq (op e1 e3) e0) (Or (Eq (op e2 e3) e0) (Or (Eq (op e3 e3) e0) (Eq (op e4 e3) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)) (Or (Eq (op e0 e1) e2) (Or (Eq (op e1 e1) e2) (Or (Eq (op e2 e1) e2) (Or (Eq (op e3 e1) e2) (Eq (op e4 e1) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r117 : (Eq (Eq (op e0 e3) e0) (Eq e0 (op e0 e3))) => -- THEORY_REWRITE_UF
fun lean_r118 : (Eq (Eq (op e0 e1) e2) (Eq e2 (op e0 e1))) => -- THEORY_REWRITE_UF
fun lean_r119 : (Eq (Eq (op e1 e3) e0) (Eq e0 (op e1 e3))) => -- THEORY_REWRITE_UF
fun lean_r120 : (Eq (Eq (Not (Not (Eq e1 (op e3 e4)))) (Eq e1 (op e3 e4))) (Eq (Eq e1 (op e3 e4)) (Not (Not (Eq e1 (op e3 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r121 : (Eq (Eq (op e2 e3) e0) (Eq e0 (op e2 e3))) => -- THEORY_REWRITE_UF
fun lean_r122 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Eq (op e3 e0) e1) (Or (Eq (op e3 e1) e1) (Or (Eq (op e3 e2) e1) (Or (Eq (op e3 e3) e1) (Eq (op e3 e4) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r123 : (Eq (Eq (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Eq (op e2 e1) (op e2 e4))) (Eq (Eq (op e2 e1) (op e2 e4)) (Not (Not (Eq (op e2 e1) (op e2 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r124 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)) (Or (Eq (op e0 e3) e1) (Or (Eq (op e1 e3) e1) (Or (Eq (op e2 e3) e1) (Or (Eq (op e3 e3) e1) (Eq (op e4 e3) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Eq (op e2 e0) e3) (Or (Eq (op e2 e1) e3) (Or (Eq (op e2 e2) e3) (Or (Eq (op e2 e3) e3) (Eq (op e2 e4) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r126 : (Eq (Eq (op e2 e0) e3) (Eq e3 (op e2 e0))) => -- THEORY_REWRITE_UF
fun lean_r127 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Eq (op e3 e0) e2) (Or (Eq (op e3 e1) e2) (Or (Eq (op e3 e2) e2) (Or (Eq (op e3 e3) e2) (Eq (op e3 e4) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r128 : (Eq (Eq (Eq e3 (op e4 (op e4 e3))) (Eq e3 (op e4 (op e4 e3)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r129 : (Eq (Eq (op e0 e2) e3) (Eq e3 (op e0 e2))) => -- THEORY_REWRITE_UF
fun lean_r130 : (Eq (Eq (op e1 e1) e4) (Eq e4 (op e1 e1))) => -- THEORY_REWRITE_UF
fun lean_r131 : (Eq (Eq (op e0 (op e0 e2)) e2) (Eq e2 (op e0 (op e0 e2)))) => -- THEORY_REWRITE_UF
fun lean_r132 : (Eq (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e3 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e3 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r133 : (Eq (Eq (op e3 e0) e2) (Eq e2 (op e3 e0))) => -- THEORY_REWRITE_UF
fun lean_r134 : (Eq (Eq (Not (Not (Eq e3 e2))) (Eq e3 e2)) (Eq (Eq e3 e2) (Not (Not (Eq e3 e2))))) => -- THEORY_REWRITE_BOOL
fun lean_r135 : (Eq (Eq (op e1 e2) e3) (Eq e3 (op e1 e2))) => -- THEORY_REWRITE_UF
fun lean_r136 : (Eq (Eq (op e3 e1) e2) (Eq e2 (op e3 e1))) => -- THEORY_REWRITE_UF
fun lean_r137 : (Eq (Eq (op e3 e2) e2) (Eq e2 (op e3 e2))) => -- THEORY_REWRITE_UF
fun lean_r138 : (Eq (Eq (op e0 e3) e2) (Eq e2 (op e0 e3))) => -- THEORY_REWRITE_UF
fun lean_r139 : (Eq (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4))) (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Or (Not (Eq (op e1 (op e1 e1)) e1)) (Or (Not (Eq (op e1 (op e1 e2)) e2)) (Or (Not (Eq (op e1 (op e1 e3)) e3)) (Not (Eq (op e1 (op e1 e4)) e4))))))) => -- THEORY_REWRITE_BOOL
fun lean_r140 : (Eq (Eq (op e1 e3) e2) (Eq e2 (op e1 e3))) => -- THEORY_REWRITE_UF
fun lean_r141 : (Eq (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4))) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4))) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4))) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4))) (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4))) (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4))) (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4))) (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4))) (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4))) (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4))) (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4))) (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4))) (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4))) (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4))) (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4))) (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4))) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (And (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4)) (And (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4)) (And (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4)) (And (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4)) (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (And (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4)) (And (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4)) (And (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4)) (And (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)) (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (And (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4)) (And (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4)) (And (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4)) (And (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)) (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (And (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4)) (And (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4)) (And (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4)) (And (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)) (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (And (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4)) (And (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4)) (And (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4)) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r142 : (Eq (Eq (op e1 (op e1 e0)) e0) (Eq e0 (op e1 (op e1 e0)))) => -- THEORY_REWRITE_UF
fun lean_r143 : (Eq (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)) (Or (Eq (op e1 e4) e0) (Or (Eq (op e1 e4) e1) (Or (Eq (op e1 e4) e2) (Or (Eq (op e1 e4) e3) (Eq (op e1 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r144 : (Eq (Eq (op e2 e3) e2) (Eq e2 (op e2 e3))) => -- THEORY_REWRITE_UF
fun lean_r145 : (Eq (Eq (op e3 e3) e2) (Eq e2 (op e3 e3))) => -- THEORY_REWRITE_UF
fun lean_r146 : (Eq (Eq (op e3 e2) e3) (Eq e3 (op e3 e2))) => -- THEORY_REWRITE_UF
fun lean_r147 : (Eq (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)) (Or (Eq (op e2 e4) e0) (Or (Eq (op e2 e4) e1) (Or (Eq (op e2 e4) e2) (Or (Eq (op e2 e4) e3) (Eq (op e2 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r148 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)) (Or (Eq (op e0 e0) e1) (Or (Eq (op e1 e0) e1) (Or (Eq (op e2 e0) e1) (Or (Eq (op e3 e0) e1) (Eq (op e4 e0) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r149 : (Eq (Eq (op e3 e1) e0) (Eq e0 (op e3 e1))) => -- THEORY_REWRITE_UF
fun lean_r150 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4)) (Or (Eq (op e0 e4) e4) (Or (Eq (op e1 e4) e4) (Or (Eq (op e2 e4) e4) (Or (Eq (op e3 e4) e4) (Eq (op e4 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r151 : (Eq (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Eq (op e1 e1) (op e2 e1))) => -- THEORY_REWRITE_BOOL
fun lean_r152 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Eq (op e4 e0) e0) (Or (Eq (op e4 e1) e0) (Or (Eq (op e4 e2) e0) (Or (Eq (op e4 e3) e0) (Eq (op e4 e4) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r153 : (Eq (Eq (Eq (op e1 e1) (op e2 e1)) (Eq (op e1 e1) (op e2 e1))) True) => -- THEORY_REWRITE_BOOL
fun lean_r154 : (Eq (Eq (op e4 e0) e0) (Eq e0 (op e4 e0))) => -- THEORY_REWRITE_UF
fun lean_r155 : (Eq (Not (Not (Eq e1 (op e3 e4)))) (Eq e1 (op e3 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r156 : (Eq (Eq (op e3 e3) e0) (Eq e0 (op e3 e3))) => -- THEORY_REWRITE_UF
fun lean_r157 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0)) (Or (Eq (op e0 e4) e0) (Or (Eq (op e1 e4) e0) (Or (Eq (op e2 e4) e0) (Or (Eq (op e3 e4) e0) (Eq (op e4 e4) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r158 : (Eq (Eq (op e0 e4) e0) (Eq e0 (op e0 e4))) => -- THEORY_REWRITE_UF
fun lean_r159 : (Eq (Eq (op e1 e4) e0) (Eq e0 (op e1 e4))) => -- THEORY_REWRITE_UF
fun lean_r160 : (Eq (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4)) (Or (Eq (op e4 e1) e0) (Or (Eq (op e4 e1) e1) (Or (Eq (op e4 e1) e2) (Or (Eq (op e4 e1) e3) (Eq (op e4 e1) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r161 : (Eq (Eq (op e2 e4) e0) (Eq e0 (op e2 e4))) => -- THEORY_REWRITE_UF
fun lean_r162 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)) (Or (Eq (op e0 e0) e4) (Or (Eq (op e1 e0) e4) (Or (Eq (op e2 e0) e4) (Or (Eq (op e3 e0) e4) (Eq (op e4 e0) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r163 : (Eq (Eq (op e3 e4) e0) (Eq e0 (op e3 e4))) => -- THEORY_REWRITE_UF
fun lean_r164 : (Eq (Eq (op e0 e0) e4) (Eq e4 (op e0 e0))) => -- THEORY_REWRITE_UF
fun lean_r165 : (Eq (Eq (op e4 e4) e0) (Eq e0 (op e4 e4))) => -- THEORY_REWRITE_UF
fun lean_r166 : (Eq (Eq (op e4 e2) e1) (Eq e1 (op e4 e2))) => -- THEORY_REWRITE_UF
fun lean_r167 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4)) (Or (Eq (op e0 e2) e4) (Or (Eq (op e1 e2) e4) (Or (Eq (op e2 e2) e4) (Or (Eq (op e3 e2) e4) (Eq (op e4 e2) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r168 : (Eq (Eq (op e4 e3) e1) (Eq e1 (op e4 e3))) => -- THEORY_REWRITE_UF
fun lean_r169 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)) (Or (Eq (op e0 e4) e1) (Or (Eq (op e1 e4) e1) (Or (Eq (op e2 e4) e1) (Or (Eq (op e3 e4) e1) (Eq (op e4 e4) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r170 : (Eq (Eq (Eq e1 e0) (Eq e1 e0)) True) => -- THEORY_REWRITE_BOOL
fun lean_r171 : (Eq (Eq (op e0 e4) e1) (Eq e1 (op e0 e4))) => -- THEORY_REWRITE_UF
fun lean_r172 : (Eq (Eq (op e1 e0) e2) (Eq e2 (op e1 e0))) => -- THEORY_REWRITE_UF
fun lean_r173 : (Eq (Eq (op e3 e2) e1) (Eq e1 (op e3 e2))) => -- THEORY_REWRITE_UF
fun lean_r174 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Eq (op e0 e0) (op e0 e2))) (Eq (Eq (op e0 e0) (op e0 e2)) (Not (Not (Eq (op e0 e0) (op e0 e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r175 : (Eq (Eq (Eq (op e1 e1) (op e4 e1)) (Eq (op e1 e1) (op e4 e1))) True) => -- THEORY_REWRITE_BOOL
fun lean_r176 : (Eq (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Eq (op e2 e2) (op e2 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r177 : (Eq (Eq (op e3 e0) e1) (Eq e1 (op e3 e0))) => -- THEORY_REWRITE_UF
fun lean_r178 : (Eq (Eq (op e2 e2) e3) (Eq e3 (op e2 e2))) => -- THEORY_REWRITE_UF
fun lean_r179 : (Eq (Not (Not (Eq e3 e2))) (Eq e3 e2)) => -- THEORY_REWRITE_BOOL
fun lean_r180 : (Eq (Not (Not (Eq e2 (op e0 e4)))) (Eq e2 (op e0 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r181 : (Eq (Eq (op e4 e0) e1) (Eq e1 (op e4 e0))) => -- THEORY_REWRITE_UF
fun lean_r182 : (Eq (Eq (op e2 e0) e4) (Eq e4 (op e2 e0))) => -- THEORY_REWRITE_UF
fun lean_r183 : (Eq (Eq (Eq (op e0 e2) (op e0 e4)) (Eq (op e0 e2) (op e0 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r184 : (Eq (Eq e2 e3) (Eq e3 e2)) => -- THEORY_REWRITE_UF
fun lean_r185 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4)) (Or (Eq (op e0 e2) e0) (Or (Eq (op e0 e2) e1) (Or (Eq (op e0 e2) e2) (Or (Eq (op e0 e2) e3) (Eq (op e0 e2) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r186 : (Eq (Eq (op e0 e4) e2) (Eq e2 (op e0 e4))) => -- THEORY_REWRITE_UF
fun lean_r187 : (Eq (Eq e1 e4) (Eq e4 e1)) => -- THEORY_REWRITE_UF
fun lean_r188 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Eq (op e3 e0) e3) (Or (Eq (op e3 e1) e3) (Or (Eq (op e3 e2) e3) (Or (Eq (op e3 e3) e3) (Eq (op e3 e4) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r189 : (Eq (Eq (op e3 e4) e2) (Eq e2 (op e3 e4))) => -- THEORY_REWRITE_UF
fun lean_r190 : (Eq (Eq (op e4 e4) e1) (Eq e1 (op e4 e4))) => -- THEORY_REWRITE_UF
fun lean_r191 : (Eq (Eq (op e3 e2) e4) (Eq e4 (op e3 e2))) => -- THEORY_REWRITE_UF
fun lean_r192 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Eq (op e0 e0) e3) (Or (Eq (op e0 e1) e3) (Or (Eq (op e0 e2) e3) (Or (Eq (op e0 e3) e3) (Eq (op e0 e4) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r193 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Eq (op e0 e0) (op e0 e3))) (Eq (Eq (op e0 e0) (op e0 e3)) (Not (Not (Eq (op e0 e0) (op e0 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r194 : (Eq (Eq e0 e2) (Eq e2 e0)) => -- THEORY_REWRITE_UF
fun lean_r195 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Eq (op e1 e0) e3) (Or (Eq (op e1 e1) e3) (Or (Eq (op e1 e2) e3) (Or (Eq (op e1 e3) e3) (Eq (op e1 e4) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r196 : (Eq (Eq (op e3 e4) e1) (Eq e1 (op e3 e4))) => -- THEORY_REWRITE_UF
fun lean_r197 : (Eq (Eq (op e1 e0) e1) (Eq e1 (op e1 e0))) => -- THEORY_REWRITE_UF
fun lean_r198 : (Eq (Eq (Eq (op e1 e1) (op e1 e4)) (Eq (op e1 e1) (op e1 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r199 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)) (Or (Eq (op e0 e3) e2) (Or (Eq (op e1 e3) e2) (Or (Eq (op e2 e3) e2) (Or (Eq (op e3 e3) e2) (Eq (op e4 e3) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r200 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Eq (op e2 e2) (op e3 e2))) (Eq (Eq (op e2 e2) (op e3 e2)) (Not (Not (Eq (op e2 e2) (op e3 e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r201 : (Eq (Eq (op e4 e3) e2) (Eq e2 (op e4 e3))) => -- THEORY_REWRITE_UF
fun lean_r202 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Eq (op e2 e0) e2) (Or (Eq (op e2 e1) e2) (Or (Eq (op e2 e2) e2) (Or (Eq (op e2 e3) e2) (Eq (op e2 e4) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r203 : (Eq (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4)) (Or (Eq (op e2 e1) e0) (Or (Eq (op e2 e1) e1) (Or (Eq (op e2 e1) e2) (Or (Eq (op e2 e1) e3) (Eq (op e2 e1) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r204 : (Eq (Eq (op e3 e1) e3) (Eq e3 (op e3 e1))) => -- THEORY_REWRITE_UF
fun lean_r205 : (Eq (Eq e0 e1) (Eq e1 e0)) => -- THEORY_REWRITE_UF
fun lean_r206 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)) (Or (Eq (op e0 e3) e3) (Or (Eq (op e1 e3) e3) (Or (Eq (op e2 e3) e3) (Or (Eq (op e3 e3) e3) (Eq (op e4 e3) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r207 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Eq (op e0 e0) e2) (Or (Eq (op e0 e1) e2) (Or (Eq (op e0 e2) e2) (Or (Eq (op e0 e3) e2) (Eq (op e0 e4) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r208 : (Eq (Eq (op e4 e0) e3) (Eq e3 (op e4 e0))) => -- THEORY_REWRITE_UF
fun lean_r209 : (Eq (Eq (op e1 e4) e1) (Eq e1 (op e1 e4))) => -- THEORY_REWRITE_UF
fun lean_r210 : (Eq (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4))) (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Or (Not (Eq (op e4 (op e4 e1)) e1)) (Or (Not (Eq (op e4 (op e4 e2)) e2)) (Or (Not (Eq (op e4 (op e4 e3)) e3)) (Not (Eq (op e4 (op e4 e4)) e4))))))) => -- THEORY_REWRITE_BOOL
fun lean_r211 : (Eq (Eq (Not (Not (Eq e1 e0))) (Eq e1 e0)) (Eq (Eq e1 e0) (Not (Not (Eq e1 e0))))) => -- THEORY_REWRITE_BOOL
fun lean_r212 : (Eq (Eq (op e2 e4) e2) (Eq e2 (op e2 e4))) => -- THEORY_REWRITE_UF
fun lean_r213 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Eq (op e4 e0) e3) (Or (Eq (op e4 e1) e3) (Or (Eq (op e4 e2) e3) (Or (Eq (op e4 e3) e3) (Eq (op e4 e4) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r214 : (Eq (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Eq (op e2 e0) (op e3 e0))) => -- THEORY_REWRITE_BOOL
fun lean_r215 : (Eq (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Eq (op e2 e2) (op e4 e2))) => -- THEORY_REWRITE_BOOL
fun lean_r216 : (Eq (Eq (op e1 e3) e4) (Eq e4 (op e1 e3))) => -- THEORY_REWRITE_UF
fun lean_r217 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0)) (Or (Eq (op e0 e0) e0) (Or (Eq (op e1 e0) e0) (Or (Eq (op e2 e0) e0) (Or (Eq (op e3 e0) e0) (Eq (op e4 e0) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r218 : (Eq (Eq e0 e4) (Eq e4 e0)) => -- THEORY_REWRITE_UF
fun lean_r219 : (Eq (Eq (op e0 e3) e3) (Eq e3 (op e0 e3))) => -- THEORY_REWRITE_UF
fun lean_r220 : (Eq (Eq (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Eq (op e1 e4) (op e3 e4))) (Eq (Eq (op e1 e4) (op e3 e4)) (Not (Not (Eq (op e1 e4) (op e3 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r221 : (Eq (Eq (op e4 e1) e3) (Eq e3 (op e4 e1))) => -- THEORY_REWRITE_UF
fun lean_r222 : (Eq (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Eq (op e2 e1) (op e2 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r223 : (Eq (Eq (op e0 e3) e1) (Eq e1 (op e0 e3))) => -- THEORY_REWRITE_UF
fun lean_r224 : (Eq (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e2 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e2 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r225 : (Eq (Eq e2 e4) (Eq e4 e2)) => -- THEORY_REWRITE_UF
fun lean_r226 : (Eq (Eq (op e2 e3) e1) (Eq e1 (op e2 e3))) => -- THEORY_REWRITE_UF
fun lean_r227 : (Eq (Eq (op e0 e1) e3) (Eq e3 (op e0 e1))) => -- THEORY_REWRITE_UF
fun lean_r228 : (Eq (Eq (op e1 e4) e2) (Eq e2 (op e1 e4))) => -- THEORY_REWRITE_UF
fun lean_r229 : (Eq (Eq (op e4 (op e4 e1)) e1) (Eq e1 (op e4 (op e4 e1)))) => -- THEORY_REWRITE_UF
fun lean_r230 : (Eq (Eq e1 e2) (Eq e2 e1)) => -- THEORY_REWRITE_UF
fun lean_r231 : (Eq (Eq (op e2 e4) e3) (Eq e3 (op e2 e4))) => -- THEORY_REWRITE_UF
fun lean_r232 : (Eq (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e2 e4))) (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e2 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r233 : (Eq (Eq (op e2 e0) e0) (Eq e0 (op e2 e0))) => -- THEORY_REWRITE_UF
fun lean_r234 : (Eq (Eq (op e0 e1) e0) (Eq e0 (op e0 e1))) => -- THEORY_REWRITE_UF
fun lean_r235 : (Eq (Eq (op e3 e3) e4) (Eq e4 (op e3 e3))) => -- THEORY_REWRITE_UF
fun lean_r236 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)) (Or (Eq (op e0 e2) e1) (Or (Eq (op e1 e2) e1) (Or (Eq (op e2 e2) e1) (Or (Eq (op e3 e2) e1) (Eq (op e4 e2) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r237 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4)) (Or (Eq (op e0 e3) e0) (Or (Eq (op e0 e3) e1) (Or (Eq (op e0 e3) e2) (Or (Eq (op e0 e3) e3) (Eq (op e0 e3) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r238 : (Eq (Eq (op e2 (op e2 e3)) e3) (Eq e3 (op e2 (op e2 e3)))) => -- THEORY_REWRITE_UF
fun lean_r239 : (Eq (Eq (op e3 e1) e1) (Eq e1 (op e3 e1))) => -- THEORY_REWRITE_UF
fun lean_r240 : (Eq (Eq e1 e3) (Eq e3 e1)) => -- THEORY_REWRITE_UF
fun lean_r241 : (Eq (Eq (Eq e3 e2) (Eq e3 e2)) True) => -- THEORY_REWRITE_BOOL
fun lean_r242 : (Eq (Eq (Eq e2 (op e0 e4)) (Eq e2 (op e0 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r243 : (Eq (Eq (op e4 e1) e1) (Eq e1 (op e4 e1))) => -- THEORY_REWRITE_UF
fun lean_r244 : (Eq (Eq (op e2 e1) e4) (Eq e4 (op e2 e1))) => -- THEORY_REWRITE_UF
fun lean_r245 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Eq (op e2 e2) (op e2 e3))) (Eq (Eq (op e2 e2) (op e2 e3)) (Not (Not (Eq (op e2 e2) (op e2 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r246 : (Eq (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e0 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e0 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r247 : (Eq (Not (Not (Eq e1 e0))) (Eq e1 e0)) => -- THEORY_REWRITE_BOOL
fun lean_r248 : (Eq (Eq (op e4 (op e4 e0)) e0) (Eq e0 (op e4 (op e4 e0)))) => -- THEORY_REWRITE_UF
fun lean_r249 : (Eq (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e3 e4))) (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e3 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r250 : (Eq (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Eq (op e1 e1) (op e4 e1))) => -- THEORY_REWRITE_BOOL
fun lean_r251 : (Eq (Eq (op e4 e3) e0) (Eq e0 (op e4 e3))) => -- THEORY_REWRITE_UF
fun lean_r252 : (Eq (Eq (op e0 e2) e4) (Eq e4 (op e0 e2))) => -- THEORY_REWRITE_UF
fun lean_r253 : (Eq (And (And (And (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))) (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r254 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)) (Or (Eq (op e0 e4) e2) (Or (Eq (op e1 e4) e2) (Or (Eq (op e2 e4) e2) (Or (Eq (op e3 e4) e2) (Eq (op e4 e4) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r255 : (Eq (Eq (op e4 e3) e4) (Eq e4 (op e4 e3))) => -- THEORY_REWRITE_UF
fun lean_r256 : (Eq (Eq (op e4 e2) e2) (Eq e2 (op e4 e2))) => -- THEORY_REWRITE_UF
fun lean_r257 : (Eq (Eq (Eq e2 (op e4 (op e4 e2))) (Eq e2 (op e4 (op e4 e2)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r258 : (Eq (Eq (Eq e2 e0) (Eq e2 e0)) True) => -- THEORY_REWRITE_BOOL
fun lean_r259 : (Eq (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Eq (op e3 e4) (op e4 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r260 : (Eq (Eq (op e2 e4) e4) (Eq e4 (op e2 e4))) => -- THEORY_REWRITE_UF
fun lean_r261 : (Eq (Eq (op e1 e2) e0) (Eq e0 (op e1 e2))) => -- THEORY_REWRITE_UF
fun lean_r262 : (Eq (Eq (op e4 e2) e4) (Eq e4 (op e4 e2))) => -- THEORY_REWRITE_UF
fun lean_r263 : (Eq (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Eq e2 (op e4 (op e4 e2)))) => -- THEORY_REWRITE_BOOL
fun lean_r264 : (Eq (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e1 e4))) (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e1 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r265 : (Eq (Eq (op e3 (op e3 e3)) e3) (Eq e3 (op e3 (op e3 e3)))) => -- THEORY_REWRITE_UF
fun lean_r266 : (Eq (Not (Not (Eq e2 e0))) (Eq e2 e0)) => -- THEORY_REWRITE_BOOL
fun lean_r267 : (Eq (Eq (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Eq (op e3 e4) (op e4 e4))) (Eq (Eq (op e3 e4) (op e4 e4)) (Not (Not (Eq (op e3 e4) (op e4 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r268 : (Eq (Eq (op e1 e4) e4) (Eq e4 (op e1 e4))) => -- THEORY_REWRITE_UF
fun lean_r269 : (Eq (Eq (op e0 e2) e0) (Eq e0 (op e0 e2))) => -- THEORY_REWRITE_UF
fun lean_r270 : (Eq (Eq (op e4 e4) e4) (Eq e4 (op e4 e4))) => -- THEORY_REWRITE_UF
fun lean_r271 : (Eq (Eq (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Eq e2 (op e4 (op e4 e2)))) (Eq (Eq e2 (op e4 (op e4 e2))) (Not (Not (Eq e2 (op e4 (op e4 e2))))))) => -- THEORY_REWRITE_BOOL
fun lean_r272 : (Eq (Eq (Not (Not (Eq e2 e0))) (Eq e2 e0)) (Eq (Eq e2 e0) (Not (Not (Eq e2 e0))))) => -- THEORY_REWRITE_BOOL
fun lean_r273 : (Eq (Eq (op e0 e4) e4) (Eq e4 (op e0 e4))) => -- THEORY_REWRITE_UF
fun lean_r274 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0)) (Or (Eq (op e0 e2) e0) (Or (Eq (op e1 e2) e0) (Or (Eq (op e2 e2) e0) (Or (Eq (op e3 e2) e0) (Eq (op e4 e2) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r275 : (Eq (Eq (op e4 e1) e4) (Eq e4 (op e4 e1))) => -- THEORY_REWRITE_UF
fun lean_r276 : (Eq (Eq (op e4 e0) e2) (Eq e2 (op e4 e0))) => -- THEORY_REWRITE_UF
fun lean_r277 : (Eq (Eq (op e3 e3) e3) (Eq e3 (op e3 e3))) => -- THEORY_REWRITE_UF
fun lean_r278 : (Eq (Eq (op e4 e0) e4) (Eq e4 (op e4 e0))) => -- THEORY_REWRITE_UF
fun lean_r279 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Eq (op e4 e0) e2) (Or (Eq (op e4 e1) e2) (Or (Eq (op e4 e2) e2) (Or (Eq (op e4 e3) e2) (Eq (op e4 e4) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r280 : (Eq (Eq (op e2 e2) e2) (Eq e2 (op e2 e2))) => -- THEORY_REWRITE_UF
fun lean_r281 : (Eq (Eq (op e1 (op e1 e2)) e2) (Eq e2 (op e1 (op e1 e2)))) => -- THEORY_REWRITE_UF
fun lean_r282 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Eq (op e4 e0) e4) (Or (Eq (op e4 e1) e4) (Or (Eq (op e4 e2) e4) (Or (Eq (op e4 e3) e4) (Eq (op e4 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r283 : (Eq (Eq (Eq (op e3 e4) (op e4 e4)) (Eq (op e3 e4) (op e4 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r284 : (Eq (Eq e0 e3) (Eq e3 e0)) => -- THEORY_REWRITE_UF
fun lean_r285 : (Eq (Eq (op e3 e4) e4) (Eq e4 (op e3 e4))) => -- THEORY_REWRITE_UF
fun lean_r286 : (Eq (Eq (op e2 e2) e0) (Eq e0 (op e2 e2))) => -- THEORY_REWRITE_UF
fun lean_r287 : (Eq (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4)) (Or (Eq (op e1 e2) e0) (Or (Eq (op e1 e2) e1) (Or (Eq (op e1 e2) e2) (Or (Eq (op e1 e2) e3) (Eq (op e1 e2) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r288 : (Eq (Eq (op e4 e4) e3) (Eq e3 (op e4 e4))) => -- THEORY_REWRITE_UF
fun lean_r289 : (Eq (Eq (op e3 e4) e3) (Eq e3 (op e3 e4))) => -- THEORY_REWRITE_UF
fun lean_r290 : (Eq (Eq (op e2 e1) e0) (Eq e0 (op e2 e1))) => -- THEORY_REWRITE_UF
fun lean_r291 : (Eq (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)) (Or (Eq (op e4 e4) e0) (Or (Eq (op e4 e4) e1) (Or (Eq (op e4 e4) e2) (Or (Eq (op e4 e4) e3) (Eq (op e4 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r292 : (Eq (Eq (op e1 e1) e0) (Eq e0 (op e1 e1))) => -- THEORY_REWRITE_UF
fun lean_r293 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Eq (op e2 e0) e0) (Or (Eq (op e2 e1) e0) (Or (Eq (op e2 e2) e0) (Or (Eq (op e2 e3) e0) (Eq (op e2 e4) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r294 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)) (Or (Eq (op e0 e4) e3) (Or (Eq (op e1 e4) e3) (Or (Eq (op e2 e4) e3) (Or (Eq (op e3 e4) e3) (Eq (op e4 e4) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r295 : (Eq (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Eq (op e1 e4) (op e3 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r296 : (Eq (Eq (op e4 e2) e3) (Eq e3 (op e4 e2))) => -- THEORY_REWRITE_UF
fun lean_r297 : (Eq (And (And (And (And (And (And (And (And (And (Not (Eq e0 e1)) (Not (Eq e0 e2))) (Not (Eq e0 e3))) (Not (Eq e0 e4))) (Not (Eq e1 e2))) (Not (Eq e1 e3))) (Not (Eq e1 e4))) (Not (Eq e2 e3))) (Not (Eq e2 e4))) (Not (Eq e3 e4))) (And (Not (Eq e0 e1)) (And (Not (Eq e0 e2)) (And (Not (Eq e0 e3)) (And (Not (Eq e0 e4)) (And (Not (Eq e1 e2)) (And (Not (Eq e1 e3)) (And (Not (Eq e1 e4)) (And (Not (Eq e2 e3)) (And (Not (Eq e2 e4)) (Not (Eq e3 e4)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r298 : (Eq (Eq (op e3 e0) e3) (Eq e3 (op e3 e0))) => -- THEORY_REWRITE_UF
fun lean_r299 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e1 e0))) (Not (Eq (op e0 e0) (op e2 e0)))) (Not (Eq (op e0 e0) (op e3 e0)))) (Not (Eq (op e0 e0) (op e4 e0)))) (Not (Eq (op e1 e0) (op e2 e0)))) (Not (Eq (op e1 e0) (op e3 e0)))) (Not (Eq (op e1 e0) (op e4 e0)))) (Not (Eq (op e2 e0) (op e3 e0)))) (Not (Eq (op e2 e0) (op e4 e0)))) (Not (Eq (op e3 e0) (op e4 e0)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e1) (op e1 e1))) (Not (Eq (op e0 e1) (op e2 e1)))) (Not (Eq (op e0 e1) (op e3 e1)))) (Not (Eq (op e0 e1) (op e4 e1)))) (Not (Eq (op e1 e1) (op e2 e1)))) (Not (Eq (op e1 e1) (op e3 e1)))) (Not (Eq (op e1 e1) (op e4 e1)))) (Not (Eq (op e2 e1) (op e3 e1)))) (Not (Eq (op e2 e1) (op e4 e1)))) (Not (Eq (op e3 e1) (op e4 e1))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e2) (op e1 e2))) (Not (Eq (op e0 e2) (op e2 e2)))) (Not (Eq (op e0 e2) (op e3 e2)))) (Not (Eq (op e0 e2) (op e4 e2)))) (Not (Eq (op e1 e2) (op e2 e2)))) (Not (Eq (op e1 e2) (op e3 e2)))) (Not (Eq (op e1 e2) (op e4 e2)))) (Not (Eq (op e2 e2) (op e3 e2)))) (Not (Eq (op e2 e2) (op e4 e2)))) (Not (Eq (op e3 e2) (op e4 e2))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e3) (op e1 e3))) (Not (Eq (op e0 e3) (op e2 e3)))) (Not (Eq (op e0 e3) (op e3 e3)))) (Not (Eq (op e0 e3) (op e4 e3)))) (Not (Eq (op e1 e3) (op e2 e3)))) (Not (Eq (op e1 e3) (op e3 e3)))) (Not (Eq (op e1 e3) (op e4 e3)))) (Not (Eq (op e2 e3) (op e3 e3)))) (Not (Eq (op e2 e3) (op e4 e3)))) (Not (Eq (op e3 e3) (op e4 e3))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e4) (op e1 e4))) (Not (Eq (op e0 e4) (op e2 e4)))) (Not (Eq (op e0 e4) (op e3 e4)))) (Not (Eq (op e0 e4) (op e4 e4)))) (Not (Eq (op e1 e4) (op e2 e4)))) (Not (Eq (op e1 e4) (op e3 e4)))) (Not (Eq (op e1 e4) (op e4 e4)))) (Not (Eq (op e2 e4) (op e3 e4)))) (Not (Eq (op e2 e4) (op e4 e4)))) (Not (Eq (op e3 e4) (op e4 e4))))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e0 e1))) (Not (Eq (op e0 e0) (op e0 e2)))) (Not (Eq (op e0 e0) (op e0 e3)))) (Not (Eq (op e0 e0) (op e0 e4)))) (Not (Eq (op e0 e1) (op e0 e2)))) (Not (Eq (op e0 e1) (op e0 e3)))) (Not (Eq (op e0 e1) (op e0 e4)))) (Not (Eq (op e0 e2) (op e0 e3)))) (Not (Eq (op e0 e2) (op e0 e4)))) (Not (Eq (op e0 e3) (op e0 e4)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e1 e0) (op e1 e1))) (Not (Eq (op e1 e0) (op e1 e2)))) (Not (Eq (op e1 e0) (op e1 e3)))) (Not (Eq (op e1 e0) (op e1 e4)))) (Not (Eq (op e1 e1) (op e1 e2)))) (Not (Eq (op e1 e1) (op e1 e3)))) (Not (Eq (op e1 e1) (op e1 e4)))) (Not (Eq (op e1 e2) (op e1 e3)))) (Not (Eq (op e1 e2) (op e1 e4)))) (Not (Eq (op e1 e3) (op e1 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e2 e0) (op e2 e1))) (Not (Eq (op e2 e0) (op e2 e2)))) (Not (Eq (op e2 e0) (op e2 e3)))) (Not (Eq (op e2 e0) (op e2 e4)))) (Not (Eq (op e2 e1) (op e2 e2)))) (Not (Eq (op e2 e1) (op e2 e3)))) (Not (Eq (op e2 e1) (op e2 e4)))) (Not (Eq (op e2 e2) (op e2 e3)))) (Not (Eq (op e2 e2) (op e2 e4)))) (Not (Eq (op e2 e3) (op e2 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e3 e0) (op e3 e1))) (Not (Eq (op e3 e0) (op e3 e2)))) (Not (Eq (op e3 e0) (op e3 e3)))) (Not (Eq (op e3 e0) (op e3 e4)))) (Not (Eq (op e3 e1) (op e3 e2)))) (Not (Eq (op e3 e1) (op e3 e3)))) (Not (Eq (op e3 e1) (op e3 e4)))) (Not (Eq (op e3 e2) (op e3 e3)))) (Not (Eq (op e3 e2) (op e3 e4)))) (Not (Eq (op e3 e3) (op e3 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e4 e0) (op e4 e1))) (Not (Eq (op e4 e0) (op e4 e2)))) (Not (Eq (op e4 e0) (op e4 e3)))) (Not (Eq (op e4 e0) (op e4 e4)))) (Not (Eq (op e4 e1) (op e4 e2)))) (Not (Eq (op e4 e1) (op e4 e3)))) (Not (Eq (op e4 e1) (op e4 e4)))) (Not (Eq (op e4 e2) (op e4 e3)))) (Not (Eq (op e4 e2) (op e4 e4)))) (Not (Eq (op e4 e3) (op e4 e4)))))) (And (Not (Eq (op e0 e0) (op e1 e0))) (And (Not (Eq (op e0 e0) (op e2 e0))) (And (Not (Eq (op e0 e0) (op e3 e0))) (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Not (Eq (op e1 e0) (op e2 e0))) (And (Not (Eq (op e1 e0) (op e3 e0))) (And (Not (Eq (op e1 e0) (op e4 e0))) (And (Not (Eq (op e2 e0) (op e3 e0))) (And (Not (Eq (op e2 e0) (op e4 e0))) (And (Not (Eq (op e3 e0) (op e4 e0))) (And (Not (Eq (op e0 e1) (op e1 e1))) (And (Not (Eq (op e0 e1) (op e2 e1))) (And (Not (Eq (op e0 e1) (op e3 e1))) (And (Not (Eq (op e0 e1) (op e4 e1))) (And (Not (Eq (op e1 e1) (op e2 e1))) (And (Not (Eq (op e1 e1) (op e3 e1))) (And (Not (Eq (op e1 e1) (op e4 e1))) (And (Not (Eq (op e2 e1) (op e3 e1))) (And (Not (Eq (op e2 e1) (op e4 e1))) (And (Not (Eq (op e3 e1) (op e4 e1))) (And (Not (Eq (op e0 e2) (op e1 e2))) (And (Not (Eq (op e0 e2) (op e2 e2))) (And (Not (Eq (op e0 e2) (op e3 e2))) (And (Not (Eq (op e0 e2) (op e4 e2))) (And (Not (Eq (op e1 e2) (op e2 e2))) (And (Not (Eq (op e1 e2) (op e3 e2))) (And (Not (Eq (op e1 e2) (op e4 e2))) (And (Not (Eq (op e2 e2) (op e3 e2))) (And (Not (Eq (op e2 e2) (op e4 e2))) (And (Not (Eq (op e3 e2) (op e4 e2))) (And (Not (Eq (op e0 e3) (op e1 e3))) (And (Not (Eq (op e0 e3) (op e2 e3))) (And (Not (Eq (op e0 e3) (op e3 e3))) (And (Not (Eq (op e0 e3) (op e4 e3))) (And (Not (Eq (op e1 e3) (op e2 e3))) (And (Not (Eq (op e1 e3) (op e3 e3))) (And (Not (Eq (op e1 e3) (op e4 e3))) (And (Not (Eq (op e2 e3) (op e3 e3))) (And (Not (Eq (op e2 e3) (op e4 e3))) (And (Not (Eq (op e3 e3) (op e4 e3))) (And (Not (Eq (op e0 e4) (op e1 e4))) (And (Not (Eq (op e0 e4) (op e2 e4))) (And (Not (Eq (op e0 e4) (op e3 e4))) (And (Not (Eq (op e0 e4) (op e4 e4))) (And (Not (Eq (op e1 e4) (op e2 e4))) (And (Not (Eq (op e1 e4) (op e3 e4))) (And (Not (Eq (op e1 e4) (op e4 e4))) (And (Not (Eq (op e2 e4) (op e3 e4))) (And (Not (Eq (op e2 e4) (op e4 e4))) (And (Not (Eq (op e3 e4) (op e4 e4))) (And (Not (Eq (op e0 e0) (op e0 e1))) (And (Not (Eq (op e0 e0) (op e0 e2))) (And (Not (Eq (op e0 e0) (op e0 e3))) (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Not (Eq (op e0 e1) (op e0 e2))) (And (Not (Eq (op e0 e1) (op e0 e3))) (And (Not (Eq (op e0 e1) (op e0 e4))) (And (Not (Eq (op e0 e2) (op e0 e3))) (And (Not (Eq (op e0 e2) (op e0 e4))) (And (Not (Eq (op e0 e3) (op e0 e4))) (And (Not (Eq (op e1 e0) (op e1 e1))) (And (Not (Eq (op e1 e0) (op e1 e2))) (And (Not (Eq (op e1 e0) (op e1 e3))) (And (Not (Eq (op e1 e0) (op e1 e4))) (And (Not (Eq (op e1 e1) (op e1 e2))) (And (Not (Eq (op e1 e1) (op e1 e3))) (And (Not (Eq (op e1 e1) (op e1 e4))) (And (Not (Eq (op e1 e2) (op e1 e3))) (And (Not (Eq (op e1 e2) (op e1 e4))) (And (Not (Eq (op e1 e3) (op e1 e4))) (And (Not (Eq (op e2 e0) (op e2 e1))) (And (Not (Eq (op e2 e0) (op e2 e2))) (And (Not (Eq (op e2 e0) (op e2 e3))) (And (Not (Eq (op e2 e0) (op e2 e4))) (And (Not (Eq (op e2 e1) (op e2 e2))) (And (Not (Eq (op e2 e1) (op e2 e3))) (And (Not (Eq (op e2 e1) (op e2 e4))) (And (Not (Eq (op e2 e2) (op e2 e3))) (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Not (Eq (op e2 e3) (op e2 e4))) (And (Not (Eq (op e3 e0) (op e3 e1))) (And (Not (Eq (op e3 e0) (op e3 e2))) (And (Not (Eq (op e3 e0) (op e3 e3))) (And (Not (Eq (op e3 e0) (op e3 e4))) (And (Not (Eq (op e3 e1) (op e3 e2))) (And (Not (Eq (op e3 e1) (op e3 e3))) (And (Not (Eq (op e3 e1) (op e3 e4))) (And (Not (Eq (op e3 e2) (op e3 e3))) (And (Not (Eq (op e3 e2) (op e3 e4))) (And (Not (Eq (op e3 e3) (op e3 e4))) (And (Not (Eq (op e4 e0) (op e4 e1))) (And (Not (Eq (op e4 e0) (op e4 e2))) (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Not (Eq (op e4 e0) (op e4 e4))) (And (Not (Eq (op e4 e1) (op e4 e2))) (And (Not (Eq (op e4 e1) (op e4 e3))) (And (Not (Eq (op e4 e1) (op e4 e4))) (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Not (Eq (op e4 e2) (op e4 e4))) (Not (Eq (op e4 e3) (op e4 e4))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r300 : (Eq (Eq (op e4 e4) e2) (Eq e2 (op e4 e4))) => -- THEORY_REWRITE_UF
fun lean_r301 : (Eq (Eq (Not (Not (Eq e2 (op e0 e4)))) (Eq e2 (op e0 e4))) (Eq (Eq e2 (op e0 e4)) (Not (Not (Eq e2 (op e0 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r302 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Eq (op e4 e0) e1) (Or (Eq (op e4 e1) e1) (Or (Eq (op e4 e2) e1) (Or (Eq (op e4 e3) e1) (Eq (op e4 e4) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r303 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Eq (op e2 e0) e4) (Or (Eq (op e2 e1) e4) (Or (Eq (op e2 e2) e4) (Or (Eq (op e2 e3) e4) (Eq (op e2 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r304 : (Eq (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Eq e3 (op e4 (op e4 e3)))) => -- THEORY_REWRITE_BOOL
fun lean_r305 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)) (Or (Eq (op e0 e2) e3) (Or (Eq (op e1 e2) e3) (Or (Eq (op e2 e2) e3) (Or (Eq (op e3 e2) e3) (Eq (op e4 e2) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r306 : (Eq (Eq (op e2 e1) e3) (Eq e3 (op e2 e1))) => -- THEORY_REWRITE_UF
fun lean_r307 : (Eq (Eq (op e2 e1) e2) (Eq e2 (op e2 e1))) => -- THEORY_REWRITE_UF
fun lean_r308 : (Eq (Eq (op e2 e0) e2) (Eq e2 (op e2 e0))) => -- THEORY_REWRITE_UF
fun lean_r309 : (Eq (Eq (Eq (op e1 e1) (op e3 e1)) (Eq (op e1 e1) (op e3 e1))) True) => -- THEORY_REWRITE_BOOL
fun lean_r310 : (Eq (Eq (op e3 e1) e4) (Eq e4 (op e3 e1))) => -- THEORY_REWRITE_UF
fun lean_r311 : (Eq (Eq (op e2 e2) e1) (Eq e1 (op e2 e2))) => -- THEORY_REWRITE_UF
fun lean_r312 : (Eq (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Eq (op e1 e1) (op e3 e1))) => -- THEORY_REWRITE_BOOL
fun lean_r313 : (Eq (Eq (op e3 e0) e4) (Eq e4 (op e3 e0))) => -- THEORY_REWRITE_UF
fun lean_r314 : (Eq (Eq (op e1 e2) e1) (Eq e1 (op e1 e2))) => -- THEORY_REWRITE_UF
fun lean_r315 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Eq (op e1 e1) (op e3 e1))) (Eq (Eq (op e1 e1) (op e3 e1)) (Not (Not (Eq (op e1 e1) (op e3 e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r316 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Eq (op e3 e0) e4) (Or (Eq (op e3 e1) e4) (Or (Eq (op e3 e2) e4) (Or (Eq (op e3 e3) e4) (Eq (op e3 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r317 : (Eq (Eq (op e0 e2) e1) (Eq e1 (op e0 e2))) => -- THEORY_REWRITE_UF
fun lean_r318 : (Eq (Eq (op e2 e1) e1) (Eq e1 (op e2 e1))) => -- THEORY_REWRITE_UF
fun lean_r319 : (Eq (Eq (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Eq (op e4 e0) (op e4 e3))) (Eq (Eq (op e4 e0) (op e4 e3)) (Not (Not (Eq (op e4 e0) (op e4 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r320 : (Eq (Eq (op e2 e3) e3) (Eq e3 (op e2 e3))) => -- THEORY_REWRITE_UF
fun lean_r321 : (Eq (Eq (op e2 e0) e1) (Eq e1 (op e2 e0))) => -- THEORY_REWRITE_UF
fun lean_r322 : (Eq (Eq (op e2 (op e2 e1)) e1) (Eq e1 (op e2 (op e2 e1)))) => -- THEORY_REWRITE_UF
fun lean_r323 : (Eq (Eq e3 e4) (Eq e4 e3)) => -- THEORY_REWRITE_UF
fun lean_r324 : (Eq (Eq (op e1 e3) e3) (Eq e3 (op e1 e3))) => -- THEORY_REWRITE_UF
fun lean_r325 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Eq (op e0 e0) e1) (Or (Eq (op e0 e1) e1) (Or (Eq (op e0 e2) e1) (Or (Eq (op e0 e3) e1) (Eq (op e0 e4) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r326 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Eq (op e2 e0) e1) (Or (Eq (op e2 e1) e1) (Or (Eq (op e2 e2) e1) (Or (Eq (op e2 e3) e1) (Eq (op e2 e4) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r327 : (Eq (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Eq (op e0 e4) (op e1 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r328 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4)) (Or (Eq (op e0 e1) e4) (Or (Eq (op e1 e1) e4) (Or (Eq (op e2 e1) e4) (Or (Eq (op e3 e1) e4) (Eq (op e4 e1) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r329 : (Eq (Eq (op e1 e4) e3) (Eq e3 (op e1 e4))) => -- THEORY_REWRITE_UF
fun lean_r330 : (Eq (Eq (op e1 e0) e4) (Eq e4 (op e1 e0))) => -- THEORY_REWRITE_UF
fun lean_r331 : (Eq (Eq (op e0 e4) e3) (Eq e3 (op e0 e4))) => -- THEORY_REWRITE_UF
fun lean_r332 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Eq (op e1 e0) e4) (Or (Eq (op e1 e1) e4) (Or (Eq (op e1 e2) e4) (Or (Eq (op e1 e3) e4) (Eq (op e1 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r333 : (Eq (Eq (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Eq (op e4 e1) (op e4 e3))) (Eq (Eq (op e4 e1) (op e4 e3)) (Not (Not (Eq (op e4 e1) (op e4 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r334 : (Eq (Eq (op e3 (op e3 e1)) e1) (Eq e1 (op e3 (op e3 e1)))) => -- THEORY_REWRITE_UF
fun lean_r335 : (Eq (Eq (op e3 e3) e1) (Eq e1 (op e3 e3))) => -- THEORY_REWRITE_UF
fun lean_r336 : (Eq (Eq (op e1 e1) e3) (Eq e3 (op e1 e1))) => -- THEORY_REWRITE_UF
fun lean_r337 : (Eq (Eq (Eq (op e0 e4) (op e1 e4)) (Eq (op e0 e4) (op e1 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r338 : (Eq (Eq (op e0 e1) e4) (Eq e4 (op e0 e1))) => -- THEORY_REWRITE_UF
fun lean_r339 : (Eq (Eq (op e4 (op e4 e2)) e2) (Eq e2 (op e4 (op e4 e2)))) => -- THEORY_REWRITE_UF
fun lean_r340 : (Eq (Eq (Eq (op e2 e1) (op e2 e4)) (Eq (op e2 e1) (op e2 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r341 : (Eq (Eq (op e1 e3) e1) (Eq e1 (op e1 e3))) => -- THEORY_REWRITE_UF
fun lean_r342 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)) (Or (Eq (op e0 e1) e3) (Or (Eq (op e1 e1) e3) (Or (Eq (op e2 e1) e3) (Or (Eq (op e3 e1) e3) (Eq (op e4 e1) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r343 : (Eq (Eq (op e1 e0) e3) (Eq e3 (op e1 e0))) => -- THEORY_REWRITE_UF
fun lean_r344 : (Eq (Eq (op e0 e1) e1) (Eq e1 (op e0 e1))) => -- THEORY_REWRITE_UF
fun lean_r345 : (Eq (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e2 e4))) (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e2 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r346 : (Eq (Eq (op e3 e2) e0) (Eq e0 (op e3 e2))) => -- THEORY_REWRITE_UF
fun lean_r347 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)) (Or (Eq (op e0 e1) e1) (Or (Eq (op e1 e1) e1) (Or (Eq (op e2 e1) e1) (Or (Eq (op e3 e1) e1) (Eq (op e4 e1) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r348 : (Eq (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Eq (op e1 e1) (op e1 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r349 : (Eq (Eq (Eq (op e2 e2) (op e3 e2)) (Eq (op e2 e2) (op e3 e2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r350 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Eq (op e1 e0) e2) (Or (Eq (op e1 e1) e2) (Or (Eq (op e1 e2) e2) (Or (Eq (op e1 e3) e2) (Eq (op e1 e4) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r351 : (Eq (Eq (op e1 (op e1 e4)) e4) (Eq e4 (op e1 (op e1 e4)))) => -- THEORY_REWRITE_UF
fun lean_r352 : (Eq (Eq (op e1 e0) e0) (Eq e0 (op e1 e0))) => -- THEORY_REWRITE_UF
fun lean_r353 : (Eq (Eq (op e2 e4) e1) (Eq e1 (op e2 e4))) => -- THEORY_REWRITE_UF
fun lean_r354 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Eq (op e1 e0) e1) (Or (Eq (op e1 e1) e1) (Or (Eq (op e1 e2) e1) (Or (Eq (op e1 e3) e1) (Eq (op e1 e4) e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r355 : (Eq (Eq (op e0 (op e0 e3)) e3) (Eq e3 (op e0 (op e0 e3)))) => -- THEORY_REWRITE_UF
fun lean_r356 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Eq (op e1 e0) e0) (Or (Eq (op e1 e1) e0) (Or (Eq (op e1 e2) e0) (Or (Eq (op e1 e3) e0) (Eq (op e1 e4) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r357 : (Eq (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e3 e4))) (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e3 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r358 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Eq (op e0 e0) e4) (Or (Eq (op e0 e1) e4) (Or (Eq (op e0 e2) e4) (Or (Eq (op e0 e3) e4) (Eq (op e0 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r359 : (Eq (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)) (Or (Eq (op e3 e4) e0) (Or (Eq (op e3 e4) e1) (Or (Eq (op e3 e4) e2) (Or (Eq (op e3 e4) e3) (Eq (op e3 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r360 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Eq (op e1 e1) (op e4 e1))) (Eq (Eq (op e1 e1) (op e4 e1)) (Not (Not (Eq (op e1 e1) (op e4 e1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r361 : (Eq (Eq (op e4 e2) e0) (Eq e0 (op e4 e2))) => -- THEORY_REWRITE_UF
fun lean_r362 : (Eq (Eq (op e0 e0) e3) (Eq e3 (op e0 e0))) => -- THEORY_REWRITE_UF
fun lean_r363 : (Eq (Eq (op e4 e1) e0) (Eq e0 (op e4 e1))) => -- THEORY_REWRITE_UF
fun lean_r364 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)) (Or (Eq (op e0 e0) e3) (Or (Eq (op e1 e0) e3) (Or (Eq (op e2 e0) e3) (Or (Eq (op e3 e0) e3) (Eq (op e4 e0) e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r365 : (Eq (Eq (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Eq (op e2 e0) (op e3 e0))) (Eq (Eq (op e2 e0) (op e3 e0)) (Not (Not (Eq (op e2 e0) (op e3 e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r366 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Eq (op e2 e2) (op e4 e2))) (Eq (Eq (op e2 e2) (op e4 e2)) (Not (Not (Eq (op e2 e2) (op e4 e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r367 : (Eq (Eq (op e0 e3) e4) (Eq e4 (op e0 e3))) => -- THEORY_REWRITE_UF
fun lean_r368 : (Eq (Eq (op e0 e0) e2) (Eq e2 (op e0 e0))) => -- THEORY_REWRITE_UF
fun lean_r369 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4)) (Or (Eq (op e0 e3) e4) (Or (Eq (op e1 e3) e4) (Or (Eq (op e2 e3) e4) (Or (Eq (op e3 e3) e4) (Eq (op e4 e3) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r370 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)) (Or (Eq (op e0 e0) e2) (Or (Eq (op e1 e0) e2) (Or (Eq (op e2 e0) e2) (Or (Eq (op e3 e0) e2) (Eq (op e4 e0) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r371 : (Eq (Eq (op e0 e0) e1) (Eq e1 (op e0 e0))) => -- THEORY_REWRITE_UF
fun lean_r372 : (Eq (Eq (Eq (op e2 e0) (op e3 e0)) (Eq (op e2 e0) (op e3 e0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r373 : (Eq (Eq (op e2 e3) e4) (Eq e4 (op e2 e3))) => -- THEORY_REWRITE_UF
fun lean_r374 : (Eq (Eq (Eq (op e2 e2) (op e4 e2)) (Eq (op e2 e2) (op e4 e2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r375 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Eq (op e0 e0) e0) (Or (Eq (op e0 e1) e0) (Or (Eq (op e0 e2) e0) (Or (Eq (op e0 e3) e0) (Eq (op e0 e4) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r376 : (Eq (And (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0))) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0))) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0))) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0))) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0))) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4))))) (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0)) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)) (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0)) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4)) (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0)) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4)) (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0)) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4)) (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0)) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4)))))))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r377 : (Eq (Eq (Eq (op e0 e0) (op e0 e4)) (Eq (op e0 e0) (op e0 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r378 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Eq (op e0 e0) (op e0 e4))) (Eq (Eq (op e0 e0) (op e0 e4)) (Not (Not (Eq (op e0 e0) (op e0 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r379 : (Eq (Eq (Eq (op e4 e0) (op e4 e3)) (Eq (op e4 e0) (op e4 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r380 : (Eq (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Eq (op e4 e0) (op e4 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r381 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Eq (op e1 e1) (op e1 e4))) (Eq (Eq (op e1 e1) (op e1 e4)) (Not (Not (Eq (op e1 e1) (op e1 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r382 : (Eq (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e2 e4))) (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e2 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r383 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0)) (Or (Eq (op e0 e1) e0) (Or (Eq (op e1 e1) e0) (Or (Eq (op e2 e1) e0) (Or (Eq (op e3 e1) e0) (Eq (op e4 e1) e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r384 : (Eq (Eq (Eq (op e3 e3) (op e4 e3)) (Eq (op e3 e3) (op e4 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r385 : (Eq (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Eq (op e3 e3) (op e4 e3))) => -- THEORY_REWRITE_BOOL
fun lean_r386 : (Eq (Eq (Eq e0 (op e3 e4)) (Eq e0 (op e3 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r387 : (Eq (Eq (op e0 (op e0 e1)) e1) (Eq e1 (op e0 (op e0 e1)))) => -- THEORY_REWRITE_UF
fun lean_r388 : (Eq (Eq (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Eq (op e3 e3) (op e4 e3))) (Eq (Eq (op e3 e3) (op e4 e3)) (Not (Not (Eq (op e3 e3) (op e4 e3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r389 : (Eq (Eq (op e1 e1) e1) (Eq e1 (op e1 e1))) => -- THEORY_REWRITE_UF
fun lean_r390 : (Eq (Eq (op e1 e2) e2) (Eq e2 (op e1 e2))) => -- THEORY_REWRITE_UF
fun lean_r391 : (Eq (Eq (Eq (op e0 e0) (op e4 e0)) (Eq (op e0 e0) (op e4 e0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r392 : (Eq (Eq (op e3 (op e3 e0)) e0) (Eq e0 (op e3 (op e3 e0)))) => -- THEORY_REWRITE_UF
fun lean_r393 : (Eq (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Eq (op e0 e3) (op e0 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r394 : (Eq (Eq (Eq e4 e1) (Eq e4 e1)) True) => -- THEORY_REWRITE_BOOL
fun lean_r395 : (Eq (Eq (op e0 e2) e2) (Eq e2 (op e0 e2))) => -- THEORY_REWRITE_UF
fun lean_r396 : (Eq (Eq (op e0 e0) e0) (Eq e0 (op e0 e0))) => -- THEORY_REWRITE_UF
fun lean_r397 : (Eq (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Eq (op e0 e0) (op e4 e0))) => -- THEORY_REWRITE_BOOL
fun lean_r398 : (Eq (Eq (Eq (op e1 e4) (op e3 e4)) (Eq (op e1 e4) (op e3 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r399 : (Eq (Eq (op e4 e3) e3) (Eq e3 (op e4 e3))) => -- THEORY_REWRITE_UF
fun lean_r400 : (Eq (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4))) (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Or (Not (Eq (op e3 (op e3 e1)) e1)) (Or (Not (Eq (op e3 (op e3 e2)) e2)) (Or (Not (Eq (op e3 (op e3 e3)) e3)) (Not (Eq (op e3 (op e3 e4)) e4))))))) => -- THEORY_REWRITE_BOOL
fun lean_r401 : (Eq (Eq (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Eq (op e0 e3) (op e0 e4))) (Eq (Eq (op e0 e3) (op e0 e4)) (Not (Not (Eq (op e0 e3) (op e0 e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r402 : (Eq (Not (Not (Eq e4 e1))) (Eq e4 e1)) => -- THEORY_REWRITE_BOOL
fun lean_r403 : (Eq (And (And (And (And (Eq (op e0 e0) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e4)) (And (Eq (op e0 e0) e0) (And (Eq (op e1 e1) e1) (And (Eq (op e2 e2) e2) (And (Eq (op e3 e3) e3) (Eq (op e4 e4) e4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r404 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)) (Or (Eq (op e0 e2) e2) (Or (Eq (op e1 e2) e2) (Or (Eq (op e2 e2) e2) (Or (Eq (op e3 e2) e2) (Eq (op e4 e2) e2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r405 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Eq (op e0 e0) (op e4 e0))) (Eq (Eq (op e0 e0) (op e4 e0)) (Not (Not (Eq (op e0 e0) (op e4 e0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r406 : (Eq (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e3 e4))) (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e3 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r407 : (Eq (Eq (op e4 (op e4 e4)) e4) (Eq e4 (op e4 (op e4 e4)))) => -- THEORY_REWRITE_UF
fun lean_r408 : (Eq (Eq (op e4 (op e4 e3)) e3) (Eq e3 (op e4 (op e4 e3)))) => -- THEORY_REWRITE_UF
fun lean_r409 : (Eq (Eq (op e3 (op e3 e4)) e4) (Eq e4 (op e3 (op e3 e4)))) => -- THEORY_REWRITE_UF
fun lean_r410 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Eq (op e0 e0) (op e0 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r411 : (Eq (Eq (op e3 (op e3 e2)) e2) (Eq e2 (op e3 (op e3 e2)))) => -- THEORY_REWRITE_UF
fun lean_r412 : (Eq (Eq (op e2 (op e2 e4)) e4) (Eq e4 (op e2 (op e2 e4)))) => -- THEORY_REWRITE_UF
fun lean_r413 : (Eq (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e1 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e1 e4))))) => -- THEORY_REWRITE_BOOL
fun lean_r414 : (Eq (Eq (op e2 (op e2 e2)) e2) (Eq e2 (op e2 (op e2 e2)))) => -- THEORY_REWRITE_UF
fun lean_r415 : (Eq (Eq (op e2 (op e2 e0)) e0) (Eq e0 (op e2 (op e2 e0)))) => -- THEORY_REWRITE_UF
fun lean_r416 : (Eq (Eq (op e1 e1) e2) (Eq e2 (op e1 e1))) => -- THEORY_REWRITE_UF
fun lean_r417 : (Eq (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4))) (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Or (Not (Eq (op e2 (op e2 e1)) e1)) (Or (Not (Eq (op e2 (op e2 e2)) e2)) (Or (Not (Eq (op e2 (op e2 e3)) e3)) (Not (Eq (op e2 (op e2 e4)) e4))))))) => -- THEORY_REWRITE_BOOL
fun lean_r418 : (Eq (Not (Not (Eq e4 e0))) (Eq e4 e0)) => -- THEORY_REWRITE_BOOL
fun lean_r419 : (Eq (Eq (op e1 (op e1 e3)) e3) (Eq e3 (op e1 (op e1 e3)))) => -- THEORY_REWRITE_UF
fun lean_r420 : (Eq (Eq (op e4 e1) e2) (Eq e2 (op e4 e1))) => -- THEORY_REWRITE_UF
fun lean_r421 : (Eq (Eq (op e1 (op e1 e1)) e1) (Eq e1 (op e1 (op e1 e1)))) => -- THEORY_REWRITE_UF
fun lean_r422 : (Eq (Eq (Eq (op e2 e2) (op e2 e3)) (Eq (op e2 e2) (op e2 e3))) True) => -- THEORY_REWRITE_BOOL
fun lean_r423 : (Eq (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Eq (op e2 e2) (op e2 e4))) => -- THEORY_REWRITE_BOOL
fun lean_r424 : (Eq (Eq (op e0 (op e0 e4)) e4) (Eq e4 (op e0 (op e0 e4)))) => -- THEORY_REWRITE_UF
fun lean_r425 : (Eq (Eq (op e2 e2) e4) (Eq e4 (op e2 e2))) => -- THEORY_REWRITE_UF
fun lean_r426 : (Eq (Eq (op e0 (op e0 e0)) e0) (Eq e0 (op e0 (op e0 e0)))) => -- THEORY_REWRITE_UF
fun lean_r427 : (Eq (Eq (op e1 e2) e4) (Eq e4 (op e1 e2))) => -- THEORY_REWRITE_UF
fun lean_r428 : (Eq (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Or (Not (Eq (op e0 (op e0 e1)) e1)) (Or (Not (Eq (op e0 (op e0 e2)) e2)) (Or (Not (Eq (op e0 (op e0 e3)) e3)) (Not (Eq (op e0 (op e0 e4)) e4))))))) => -- THEORY_REWRITE_BOOL
fun lean_r429 : (Eq (Eq (Eq (op e0 e3) (op e0 e4)) (Eq (op e0 e3) (op e0 e4))) True) => -- THEORY_REWRITE_BOOL
fun lean_a430 : (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4))) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4))) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4))) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4))) (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4))) (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4))) (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4))) (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4))) (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4))) (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4))) (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4))) (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4))) (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4))) (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4))) (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4))) (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4))) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)))) =>
fun lean_a431 : (And (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0))) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0))) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0))) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0))) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0))) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4))))) =>
fun lean_a432 : (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e4) e1))) (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e4) e2))) (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e3))) (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e4) e4))) =>
fun lean_a433 : (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e4))) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e4))) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e4))) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e4))) =>
fun lean_a434 : (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq (op e0 e0) (op e0 e0))) (Not (Eq (op e1 e0) (op e0 e1)))) (Not (Eq (op e2 e0) (op e0 e2)))) (Not (Eq (op e3 e0) (op e0 e3)))) (Not (Eq (op e4 e0) (op e0 e4)))) (Or (Or (Or (Or (Not (Eq (op e0 e1) (op e1 e0))) (Not (Eq (op e1 e1) (op e1 e1)))) (Not (Eq (op e2 e1) (op e1 e2)))) (Not (Eq (op e3 e1) (op e1 e3)))) (Not (Eq (op e4 e1) (op e1 e4))))) (Or (Or (Or (Or (Not (Eq (op e0 e2) (op e2 e0))) (Not (Eq (op e1 e2) (op e2 e1)))) (Not (Eq (op e2 e2) (op e2 e2)))) (Not (Eq (op e3 e2) (op e2 e3)))) (Not (Eq (op e4 e2) (op e2 e4))))) (Or (Or (Or (Or (Not (Eq (op e0 e3) (op e3 e0))) (Not (Eq (op e1 e3) (op e3 e1)))) (Not (Eq (op e2 e3) (op e3 e2)))) (Not (Eq (op e3 e3) (op e3 e3)))) (Not (Eq (op e4 e3) (op e3 e4))))) (Or (Or (Or (Or (Not (Eq (op e0 e4) (op e4 e0))) (Not (Eq (op e1 e4) (op e4 e1)))) (Not (Eq (op e2 e4) (op e4 e2)))) (Not (Eq (op e3 e4) (op e4 e3)))) (Not (Eq (op e4 e4) (op e4 e4))))) =>
fun lean_a435 : (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e4)) =>
fun lean_a436 : (Or (Or (Or (Or (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))) =>
fun lean_a437 : (And (And (And (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))) =>
fun lean_a438 : (And (And (And (And (Eq (op e0 e0) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e4)) =>
fun lean_a439 : (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e1 e0))) (Not (Eq (op e0 e0) (op e2 e0)))) (Not (Eq (op e0 e0) (op e3 e0)))) (Not (Eq (op e0 e0) (op e4 e0)))) (Not (Eq (op e1 e0) (op e2 e0)))) (Not (Eq (op e1 e0) (op e3 e0)))) (Not (Eq (op e1 e0) (op e4 e0)))) (Not (Eq (op e2 e0) (op e3 e0)))) (Not (Eq (op e2 e0) (op e4 e0)))) (Not (Eq (op e3 e0) (op e4 e0)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e1) (op e1 e1))) (Not (Eq (op e0 e1) (op e2 e1)))) (Not (Eq (op e0 e1) (op e3 e1)))) (Not (Eq (op e0 e1) (op e4 e1)))) (Not (Eq (op e1 e1) (op e2 e1)))) (Not (Eq (op e1 e1) (op e3 e1)))) (Not (Eq (op e1 e1) (op e4 e1)))) (Not (Eq (op e2 e1) (op e3 e1)))) (Not (Eq (op e2 e1) (op e4 e1)))) (Not (Eq (op e3 e1) (op e4 e1))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e2) (op e1 e2))) (Not (Eq (op e0 e2) (op e2 e2)))) (Not (Eq (op e0 e2) (op e3 e2)))) (Not (Eq (op e0 e2) (op e4 e2)))) (Not (Eq (op e1 e2) (op e2 e2)))) (Not (Eq (op e1 e2) (op e3 e2)))) (Not (Eq (op e1 e2) (op e4 e2)))) (Not (Eq (op e2 e2) (op e3 e2)))) (Not (Eq (op e2 e2) (op e4 e2)))) (Not (Eq (op e3 e2) (op e4 e2))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e3) (op e1 e3))) (Not (Eq (op e0 e3) (op e2 e3)))) (Not (Eq (op e0 e3) (op e3 e3)))) (Not (Eq (op e0 e3) (op e4 e3)))) (Not (Eq (op e1 e3) (op e2 e3)))) (Not (Eq (op e1 e3) (op e3 e3)))) (Not (Eq (op e1 e3) (op e4 e3)))) (Not (Eq (op e2 e3) (op e3 e3)))) (Not (Eq (op e2 e3) (op e4 e3)))) (Not (Eq (op e3 e3) (op e4 e3))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e4) (op e1 e4))) (Not (Eq (op e0 e4) (op e2 e4)))) (Not (Eq (op e0 e4) (op e3 e4)))) (Not (Eq (op e0 e4) (op e4 e4)))) (Not (Eq (op e1 e4) (op e2 e4)))) (Not (Eq (op e1 e4) (op e3 e4)))) (Not (Eq (op e1 e4) (op e4 e4)))) (Not (Eq (op e2 e4) (op e3 e4)))) (Not (Eq (op e2 e4) (op e4 e4)))) (Not (Eq (op e3 e4) (op e4 e4))))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Not (Eq (op e0 e0) (op e0 e1))) (Not (Eq (op e0 e0) (op e0 e2)))) (Not (Eq (op e0 e0) (op e0 e3)))) (Not (Eq (op e0 e0) (op e0 e4)))) (Not (Eq (op e0 e1) (op e0 e2)))) (Not (Eq (op e0 e1) (op e0 e3)))) (Not (Eq (op e0 e1) (op e0 e4)))) (Not (Eq (op e0 e2) (op e0 e3)))) (Not (Eq (op e0 e2) (op e0 e4)))) (Not (Eq (op e0 e3) (op e0 e4)))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e1 e0) (op e1 e1))) (Not (Eq (op e1 e0) (op e1 e2)))) (Not (Eq (op e1 e0) (op e1 e3)))) (Not (Eq (op e1 e0) (op e1 e4)))) (Not (Eq (op e1 e1) (op e1 e2)))) (Not (Eq (op e1 e1) (op e1 e3)))) (Not (Eq (op e1 e1) (op e1 e4)))) (Not (Eq (op e1 e2) (op e1 e3)))) (Not (Eq (op e1 e2) (op e1 e4)))) (Not (Eq (op e1 e3) (op e1 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e2 e0) (op e2 e1))) (Not (Eq (op e2 e0) (op e2 e2)))) (Not (Eq (op e2 e0) (op e2 e3)))) (Not (Eq (op e2 e0) (op e2 e4)))) (Not (Eq (op e2 e1) (op e2 e2)))) (Not (Eq (op e2 e1) (op e2 e3)))) (Not (Eq (op e2 e1) (op e2 e4)))) (Not (Eq (op e2 e2) (op e2 e3)))) (Not (Eq (op e2 e2) (op e2 e4)))) (Not (Eq (op e2 e3) (op e2 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e3 e0) (op e3 e1))) (Not (Eq (op e3 e0) (op e3 e2)))) (Not (Eq (op e3 e0) (op e3 e3)))) (Not (Eq (op e3 e0) (op e3 e4)))) (Not (Eq (op e3 e1) (op e3 e2)))) (Not (Eq (op e3 e1) (op e3 e3)))) (Not (Eq (op e3 e1) (op e3 e4)))) (Not (Eq (op e3 e2) (op e3 e3)))) (Not (Eq (op e3 e2) (op e3 e4)))) (Not (Eq (op e3 e3) (op e3 e4))))) (And (And (And (And (And (And (And (And (And (Not (Eq (op e4 e0) (op e4 e1))) (Not (Eq (op e4 e0) (op e4 e2)))) (Not (Eq (op e4 e0) (op e4 e3)))) (Not (Eq (op e4 e0) (op e4 e4)))) (Not (Eq (op e4 e1) (op e4 e2)))) (Not (Eq (op e4 e1) (op e4 e3)))) (Not (Eq (op e4 e1) (op e4 e4)))) (Not (Eq (op e4 e2) (op e4 e3)))) (Not (Eq (op e4 e2) (op e4 e4)))) (Not (Eq (op e4 e3) (op e4 e4)))))) =>
fun lean_a440 : (And (And (And (And (And (And (And (And (And (Not (Eq e0 e1)) (Not (Eq e0 e2))) (Not (Eq e0 e3))) (Not (Eq e0 e4))) (Not (Eq e1 e2))) (Not (Eq e1 e3))) (Not (Eq e1 e4))) (Not (Eq e2 e3))) (Not (Eq e2 e4))) (Not (Eq e3 e4))) =>
fun lean_a441 : (Not (And (And (Eq e2 (op e3 e1)) (Eq e3 (op e1 e4))) (Eq e4 (op e0 e1)))) =>
fun lean_a442 : (Not (And (And (Eq e2 (op e4 e1)) (Eq e4 (op e1 e3))) (Eq e3 (op e0 e1)))) =>
fun lean_a443 : (Not (And (And (Eq e3 (op e2 e1)) (Eq e2 (op e1 e4))) (Eq e4 (op e0 e1)))) =>
fun lean_a444 : (Not (And (And (Eq e3 (op e4 e1)) (Eq e4 (op e1 e2))) (Eq e2 (op e0 e1)))) =>
fun lean_a445 : (Not (And (And (Eq e4 (op e2 e1)) (Eq e2 (op e1 e3))) (Eq e3 (op e0 e1)))) =>
fun lean_a446 : (Not (And (And (Eq e4 (op e3 e1)) (Eq e3 (op e1 e2))) (Eq e2 (op e0 e1)))) =>
fun lean_a447 : (Not (And (And (Eq e1 (op e3 e2)) (Eq e3 (op e2 e4))) (Eq e4 (op e0 e2)))) =>
fun lean_a448 : (Not (And (And (Eq e1 (op e4 e2)) (Eq e4 (op e2 e3))) (Eq e3 (op e0 e2)))) =>
fun lean_a449 : (Not (And (And (Eq e3 (op e1 e2)) (Eq e1 (op e2 e4))) (Eq e4 (op e0 e2)))) =>
fun lean_a450 : (Not (And (And (Eq e3 (op e4 e2)) (Eq e4 (op e2 e1))) (Eq e1 (op e0 e2)))) =>
fun lean_a451 : (Not (And (And (Eq e4 (op e1 e2)) (Eq e1 (op e2 e3))) (Eq e3 (op e0 e2)))) =>
fun lean_a452 : (Not (And (And (Eq e4 (op e3 e2)) (Eq e3 (op e2 e1))) (Eq e1 (op e0 e2)))) =>
fun lean_a453 : (Not (And (And (Eq e1 (op e2 e3)) (Eq e2 (op e3 e4))) (Eq e4 (op e0 e3)))) =>
fun lean_a454 : (Not (And (And (Eq e1 (op e4 e3)) (Eq e4 (op e3 e2))) (Eq e2 (op e0 e3)))) =>
fun lean_a455 : (Not (And (And (Eq e2 (op e1 e3)) (Eq e1 (op e3 e4))) (Eq e4 (op e0 e3)))) =>
fun lean_a456 : (Not (And (And (Eq e2 (op e4 e3)) (Eq e4 (op e3 e1))) (Eq e1 (op e0 e3)))) =>
fun lean_a457 : (Not (And (And (Eq e4 (op e1 e3)) (Eq e1 (op e3 e2))) (Eq e2 (op e0 e3)))) =>
fun lean_a458 : (Not (And (And (Eq e4 (op e2 e3)) (Eq e2 (op e3 e1))) (Eq e1 (op e0 e3)))) =>
fun lean_a459 : (Not (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e0 e4)))) =>
fun lean_a460 : (Not (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e0 e4)))) =>
fun lean_a461 : (Not (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e0 e4)))) =>
fun lean_a462 : (Not (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e0 e4)))) =>
fun lean_a463 : (Not (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e0 e4)))) =>
fun lean_a464 : (Not (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e0 e4)))) =>
fun lean_a465 : (Not (And (And (Eq e2 (op e3 e0)) (Eq e3 (op e0 e4))) (Eq e4 (op e1 e0)))) =>
fun lean_a466 : (Not (And (And (Eq e2 (op e4 e0)) (Eq e4 (op e0 e3))) (Eq e3 (op e1 e0)))) =>
fun lean_a467 : (Not (And (And (Eq e3 (op e2 e0)) (Eq e2 (op e0 e4))) (Eq e4 (op e1 e0)))) =>
fun lean_a468 : (Not (And (And (Eq e3 (op e4 e0)) (Eq e4 (op e0 e2))) (Eq e2 (op e1 e0)))) =>
fun lean_a469 : (Not (And (And (Eq e4 (op e2 e0)) (Eq e2 (op e0 e3))) (Eq e3 (op e1 e0)))) =>
fun lean_a470 : (Not (And (And (Eq e4 (op e3 e0)) (Eq e3 (op e0 e2))) (Eq e2 (op e1 e0)))) =>
fun lean_a471 : (Not (And (And (Eq e0 (op e3 e2)) (Eq e3 (op e2 e4))) (Eq e4 (op e1 e2)))) =>
fun lean_a472 : (Not (And (And (Eq e0 (op e4 e2)) (Eq e4 (op e2 e3))) (Eq e3 (op e1 e2)))) =>
fun lean_a473 : (Not (And (And (Eq e3 (op e0 e2)) (Eq e0 (op e2 e4))) (Eq e4 (op e1 e2)))) =>
fun lean_a474 : (Not (And (And (Eq e3 (op e4 e2)) (Eq e4 (op e2 e0))) (Eq e0 (op e1 e2)))) =>
fun lean_a475 : (Not (And (And (Eq e4 (op e0 e2)) (Eq e0 (op e2 e3))) (Eq e3 (op e1 e2)))) =>
fun lean_a476 : (Not (And (And (Eq e4 (op e3 e2)) (Eq e3 (op e2 e0))) (Eq e0 (op e1 e2)))) =>
fun lean_a477 : (Not (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e4))) (Eq e4 (op e1 e3)))) =>
fun lean_a478 : (Not (And (And (Eq e0 (op e4 e3)) (Eq e4 (op e3 e2))) (Eq e2 (op e1 e3)))) =>
fun lean_a479 : (Not (And (And (Eq e2 (op e0 e3)) (Eq e0 (op e3 e4))) (Eq e4 (op e1 e3)))) =>
fun lean_a480 : (Not (And (And (Eq e2 (op e4 e3)) (Eq e4 (op e3 e0))) (Eq e0 (op e1 e3)))) =>
fun lean_a481 : (Not (And (And (Eq e4 (op e0 e3)) (Eq e0 (op e3 e2))) (Eq e2 (op e1 e3)))) =>
fun lean_a482 : (Not (And (And (Eq e4 (op e2 e3)) (Eq e2 (op e3 e0))) (Eq e0 (op e1 e3)))) =>
fun lean_a483 : (Not (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e1 e4)))) =>
fun lean_a484 : (Not (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e1 e4)))) =>
fun lean_a485 : (Not (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e1 e4)))) =>
fun lean_a486 : (Not (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e1 e4)))) =>
fun lean_a487 : (Not (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e1 e4)))) =>
fun lean_a488 : (Not (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e1 e4)))) =>
fun lean_a489 : (Not (And (And (Eq e1 (op e3 e0)) (Eq e3 (op e0 e4))) (Eq e4 (op e2 e0)))) =>
fun lean_a490 : (Not (And (And (Eq e1 (op e4 e0)) (Eq e4 (op e0 e3))) (Eq e3 (op e2 e0)))) =>
fun lean_a491 : (Not (And (And (Eq e3 (op e1 e0)) (Eq e1 (op e0 e4))) (Eq e4 (op e2 e0)))) =>
fun lean_a492 : (Not (And (And (Eq e3 (op e4 e0)) (Eq e4 (op e0 e1))) (Eq e1 (op e2 e0)))) =>
fun lean_a493 : (Not (And (And (Eq e4 (op e1 e0)) (Eq e1 (op e0 e3))) (Eq e3 (op e2 e0)))) =>
fun lean_a494 : (Not (And (And (Eq e4 (op e3 e0)) (Eq e3 (op e0 e1))) (Eq e1 (op e2 e0)))) =>
fun lean_a495 : (Not (And (And (Eq e0 (op e3 e1)) (Eq e3 (op e1 e4))) (Eq e4 (op e2 e1)))) =>
fun lean_a496 : (Not (And (And (Eq e0 (op e4 e1)) (Eq e4 (op e1 e3))) (Eq e3 (op e2 e1)))) =>
fun lean_a497 : (Not (And (And (Eq e3 (op e0 e1)) (Eq e0 (op e1 e4))) (Eq e4 (op e2 e1)))) =>
fun lean_a498 : (Not (And (And (Eq e3 (op e4 e1)) (Eq e4 (op e1 e0))) (Eq e0 (op e2 e1)))) =>
fun lean_a499 : (Not (And (And (Eq e4 (op e0 e1)) (Eq e0 (op e1 e3))) (Eq e3 (op e2 e1)))) =>
fun lean_a500 : (Not (And (And (Eq e4 (op e3 e1)) (Eq e3 (op e1 e0))) (Eq e0 (op e2 e1)))) =>
fun lean_a501 : (Not (And (And (Eq e0 (op e1 e3)) (Eq e1 (op e3 e4))) (Eq e4 (op e2 e3)))) =>
fun lean_a502 : (Not (And (And (Eq e0 (op e4 e3)) (Eq e4 (op e3 e1))) (Eq e1 (op e2 e3)))) =>
fun lean_a503 : (Not (And (And (Eq e1 (op e0 e3)) (Eq e0 (op e3 e4))) (Eq e4 (op e2 e3)))) =>
fun lean_a504 : (Not (And (And (Eq e1 (op e4 e3)) (Eq e4 (op e3 e0))) (Eq e0 (op e2 e3)))) =>
fun lean_a505 : (Not (And (And (Eq e4 (op e0 e3)) (Eq e0 (op e3 e1))) (Eq e1 (op e2 e3)))) =>
fun lean_a506 : (Not (And (And (Eq e4 (op e1 e3)) (Eq e1 (op e3 e0))) (Eq e0 (op e2 e3)))) =>
fun lean_a507 : (Not (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e2 e4)))) =>
fun lean_a508 : (Not (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e2 e4)))) =>
fun lean_a509 : (Not (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e2 e4)))) =>
fun lean_a510 : (Not (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e2 e4)))) =>
fun lean_a511 : (Not (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e2 e4)))) =>
fun lean_a512 : (Not (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e2 e4)))) =>
fun lean_a513 : (Not (And (And (Eq e1 (op e2 e0)) (Eq e2 (op e0 e4))) (Eq e4 (op e3 e0)))) =>
fun lean_a514 : (Not (And (And (Eq e1 (op e4 e0)) (Eq e4 (op e0 e2))) (Eq e2 (op e3 e0)))) =>
fun lean_a515 : (Not (And (And (Eq e2 (op e1 e0)) (Eq e1 (op e0 e4))) (Eq e4 (op e3 e0)))) =>
fun lean_a516 : (Not (And (And (Eq e2 (op e4 e0)) (Eq e4 (op e0 e1))) (Eq e1 (op e3 e0)))) =>
fun lean_a517 : (Not (And (And (Eq e4 (op e1 e0)) (Eq e1 (op e0 e2))) (Eq e2 (op e3 e0)))) =>
fun lean_a518 : (Not (And (And (Eq e4 (op e2 e0)) (Eq e2 (op e0 e1))) (Eq e1 (op e3 e0)))) =>
fun lean_a519 : (Not (And (And (Eq e0 (op e2 e1)) (Eq e2 (op e1 e4))) (Eq e4 (op e3 e1)))) =>
fun lean_a520 : (Not (And (And (Eq e0 (op e4 e1)) (Eq e4 (op e1 e2))) (Eq e2 (op e3 e1)))) =>
fun lean_a521 : (Not (And (And (Eq e2 (op e0 e1)) (Eq e0 (op e1 e4))) (Eq e4 (op e3 e1)))) =>
fun lean_a522 : (Not (And (And (Eq e2 (op e4 e1)) (Eq e4 (op e1 e0))) (Eq e0 (op e3 e1)))) =>
fun lean_a523 : (Not (And (And (Eq e4 (op e0 e1)) (Eq e0 (op e1 e2))) (Eq e2 (op e3 e1)))) =>
fun lean_a524 : (Not (And (And (Eq e4 (op e2 e1)) (Eq e2 (op e1 e0))) (Eq e0 (op e3 e1)))) =>
fun lean_a525 : (Not (And (And (Eq e0 (op e1 e2)) (Eq e1 (op e2 e4))) (Eq e4 (op e3 e2)))) =>
fun lean_a526 : (Not (And (And (Eq e0 (op e4 e2)) (Eq e4 (op e2 e1))) (Eq e1 (op e3 e2)))) =>
fun lean_a527 : (Not (And (And (Eq e1 (op e0 e2)) (Eq e0 (op e2 e4))) (Eq e4 (op e3 e2)))) =>
fun lean_a528 : (Not (And (And (Eq e1 (op e4 e2)) (Eq e4 (op e2 e0))) (Eq e0 (op e3 e2)))) =>
fun lean_a529 : (Not (And (And (Eq e4 (op e0 e2)) (Eq e0 (op e2 e1))) (Eq e1 (op e3 e2)))) =>
fun lean_a530 : (Not (And (And (Eq e4 (op e1 e2)) (Eq e1 (op e2 e0))) (Eq e0 (op e3 e2)))) =>
fun lean_a531 : (Not (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e3 e4)))) =>
fun lean_a532 : (Not (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e3 e4)))) =>
fun lean_a533 : (Not (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e3 e4)))) =>
fun lean_a534 : (Not (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e3 e4)))) =>
fun lean_a535 : (Not (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e3 e4)))) =>
fun lean_a536 : (Not (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e3 e4)))) =>
fun lean_a537 : (Not (And (And (Eq e1 (op e2 e0)) (Eq e2 (op e0 e3))) (Eq e3 (op e4 e0)))) =>
fun lean_a538 : (Not (And (And (Eq e1 (op e3 e0)) (Eq e3 (op e0 e2))) (Eq e2 (op e4 e0)))) =>
fun lean_a539 : (Not (And (And (Eq e2 (op e1 e0)) (Eq e1 (op e0 e3))) (Eq e3 (op e4 e0)))) =>
fun lean_a540 : (Not (And (And (Eq e2 (op e3 e0)) (Eq e3 (op e0 e1))) (Eq e1 (op e4 e0)))) =>
fun lean_a541 : (Not (And (And (Eq e3 (op e1 e0)) (Eq e1 (op e0 e2))) (Eq e2 (op e4 e0)))) =>
fun lean_a542 : (Not (And (And (Eq e3 (op e2 e0)) (Eq e2 (op e0 e1))) (Eq e1 (op e4 e0)))) =>
fun lean_a543 : (Not (And (And (Eq e0 (op e2 e1)) (Eq e2 (op e1 e3))) (Eq e3 (op e4 e1)))) =>
fun lean_a544 : (Not (And (And (Eq e0 (op e3 e1)) (Eq e3 (op e1 e2))) (Eq e2 (op e4 e1)))) =>
fun lean_a545 : (Not (And (And (Eq e2 (op e0 e1)) (Eq e0 (op e1 e3))) (Eq e3 (op e4 e1)))) =>
fun lean_a546 : (Not (And (And (Eq e2 (op e3 e1)) (Eq e3 (op e1 e0))) (Eq e0 (op e4 e1)))) =>
fun lean_a547 : (Not (And (And (Eq e3 (op e0 e1)) (Eq e0 (op e1 e2))) (Eq e2 (op e4 e1)))) =>
fun lean_a548 : (Not (And (And (Eq e3 (op e2 e1)) (Eq e2 (op e1 e0))) (Eq e0 (op e4 e1)))) =>
fun lean_a549 : (Not (And (And (Eq e0 (op e1 e2)) (Eq e1 (op e2 e3))) (Eq e3 (op e4 e2)))) =>
fun lean_a550 : (Not (And (And (Eq e0 (op e3 e2)) (Eq e3 (op e2 e1))) (Eq e1 (op e4 e2)))) =>
fun lean_a551 : (Not (And (And (Eq e1 (op e0 e2)) (Eq e0 (op e2 e3))) (Eq e3 (op e4 e2)))) =>
fun lean_a552 : (Not (And (And (Eq e1 (op e3 e2)) (Eq e3 (op e2 e0))) (Eq e0 (op e4 e2)))) =>
fun lean_a553 : (Not (And (And (Eq e3 (op e0 e2)) (Eq e0 (op e2 e1))) (Eq e1 (op e4 e2)))) =>
fun lean_a554 : (Not (And (And (Eq e3 (op e1 e2)) (Eq e1 (op e2 e0))) (Eq e0 (op e4 e2)))) =>
fun lean_a555 : (Not (And (And (Eq e0 (op e1 e3)) (Eq e1 (op e3 e2))) (Eq e2 (op e4 e3)))) =>
fun lean_a556 : (Not (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e1))) (Eq e1 (op e4 e3)))) =>
fun lean_a557 : (Not (And (And (Eq e1 (op e0 e3)) (Eq e0 (op e3 e2))) (Eq e2 (op e4 e3)))) =>
fun lean_a558 : (Not (And (And (Eq e1 (op e2 e3)) (Eq e2 (op e3 e0))) (Eq e0 (op e4 e3)))) =>
fun lean_a559 : (Not (And (And (Eq e2 (op e0 e3)) (Eq e0 (op e3 e1))) (Eq e1 (op e4 e3)))) =>
fun lean_a560 : (Not (And (And (Eq e2 (op e1 e3)) (Eq e1 (op e3 e0))) (Eq e0 (op e4 e3)))) => by
have lean_s0 : (Or (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1)))))) (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e1)))))))) := by timed cnfAndNeg [(Not (Eq (op e2 e2) (op e2 e4))), (Eq e2 (op e2 e2)), (Eq e3 (op e2 e4)), (Eq e3 (op e3 e3)), (Eq e3 (op e4 e1))]
have lean_s1 : (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1)))))))) :=
  (scope (fun lean_a561 : (Not (Eq (op e2 e2) (op e2 e4))) =>
    (scope (fun lean_a562 : (Eq e2 (op e2 e2)) =>
      (scope (fun lean_a563 : (Eq e3 (op e2 e4)) =>
        (scope (fun lean_a564 : (Eq e3 (op e3 e3)) =>
          (scope (fun lean_a565 : (Eq e3 (op e4 e1)) =>
            have lean_s1 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a562
            have lean_s2 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s1
            let lean_s3 := by timed flipCongrArg lean_s2 [Eq]
            have lean_s4 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a564
            have lean_s5 : (Eq (op e2 e4) e3) := by timed Eq.symm lean_a563
            have lean_s6 : (Eq e3 (op e2 e4)) := by timed Eq.symm lean_s5
            have lean_s7 : (Eq (op e3 e3) (op e2 e4)) := by timed Eq.trans lean_s4 lean_s6
            have lean_s8 : (Eq (op e2 e4) (op e3 e3)) := by timed Eq.symm lean_s7
            have lean_s9 : (Eq (op e4 e1) e3) := by timed Eq.symm lean_a565
            have lean_s10 : (Eq (op e4 e1) (op e3 e3)) := by timed Eq.trans lean_s9 lean_a564
            have lean_s11 : (Eq (op e3 e3) (op e4 e1)) := by timed Eq.symm lean_s10
            have lean_s12 : (Eq (op e2 e4) (op e4 e1)) := by timed Eq.trans lean_s8 lean_s11
            have lean_s13 : (Eq (op e4 e1) (op e2 e4)) := by timed Eq.symm lean_s12
            have lean_s14 : (Eq (Eq e2 (op e4 e1)) (Eq (op e2 e2) (op e2 e4))) := by timed congr lean_s3 lean_s13
            have lean_s15 : (Eq (Eq (op e2 e2) (op e2 e4)) False) := by timed falseIntro lean_a561
            have lean_s16 : (Eq (Eq e2 (op e4 e1)) False) := by timed Eq.trans lean_s14 lean_s15
            have lean_s17 : (Not (Eq e2 (op e4 e1))) := by timed falseElim lean_s16
            show (Not (Eq e2 (op e4 e1))) from lean_s17
  ))))))))))
have lean_s2 : (Implies (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1)))))) (Not (Eq e2 (op e4 e1)))) := by liftOrNToImp lean_s1, 5
have lean_s3 : (Or (Not (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1))))))) (Not (Eq e2 (op e4 e1)))) := by timed impliesElim lean_s2
have lean_s4 : (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1)))))))) := by R1 lean_s0, lean_s3, (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1)))))), [(- 1), (- 1)]
have lean_s5 : (Eq Or Or) := by timed rfl
have lean_s6 : (Eq (Eq (op e2 e2) (op e2 e4)) (Eq (op e2 e2) (op e2 e4))) := by timed rfl
let lean_s7 := by timed flipCongrArg lean_s6 [Eq]
have lean_s8 : (Eq (Eq (Eq (op e2 e2) (op e2 e4)) (Not (Not (Eq (op e2 e2) (op e2 e4))))) (Eq (Eq (op e2 e2) (op e2 e4)) (Eq (op e2 e2) (op e2 e4)))) := by timed congr lean_s7 lean_r423
have lean_s9 : (Eq (Eq (Eq (op e2 e2) (op e2 e4)) (Not (Not (Eq (op e2 e2) (op e2 e4))))) True) := by timed Eq.trans lean_s8 lean_r89
have lean_s10 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Eq (op e2 e2) (op e2 e4))) True) := by timed Eq.trans lean_r88 lean_s9
have lean_s11 : (Eq (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Eq (op e2 e2) (op e2 e4))) := by timed trueElim lean_s10
let lean_s12 := by timed congr lean_s5 lean_s11
have lean_s13 : (Eq (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e2)))) := by timed rfl
let lean_s14 := by timed congr lean_s5 lean_s13
have lean_s15 : (Eq (Not (Eq e3 (op e2 e4))) (Not (Eq e3 (op e2 e4)))) := by timed rfl
let lean_s16 := by timed congr lean_s5 lean_s15
have lean_s17 : (Eq (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e3 e3)))) := by timed rfl
let lean_s18 := by timed congr lean_s5 lean_s17
have lean_s19 : (Eq (Not (Eq e3 (op e4 e1))) (Not (Eq e3 (op e4 e1)))) := by timed rfl
let lean_s20 := by timed congr lean_s5 lean_s19
have lean_s21 : (Eq (Not (Eq e2 (op e4 e1))) (Not (Eq e2 (op e4 e1)))) := by timed rfl
let lean_s22 := by timed congr lean_s20 lean_s21
let lean_s23 := by timed congr lean_s18 lean_s22
let lean_s24 := by timed congr lean_s16 lean_s23
let lean_s25 := by timed congr lean_s14 lean_s24
have lean_s26 : (Eq (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1)))))))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1))))))))) := by timed congr lean_s12 lean_s25
have lean_s27 : (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1)))))))) := by timed eqResolve lean_s4 lean_s26
have lean_s28 : (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e3 (op e4 e1)))))))) := by permutateOr lean_s27, [0, 1, 3, 2, 5, 4], (- 1)
have lean_s29 : (And (Not (Eq (op e0 e0) (op e1 e0))) (And (Not (Eq (op e0 e0) (op e2 e0))) (And (Not (Eq (op e0 e0) (op e3 e0))) (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Not (Eq (op e1 e0) (op e2 e0))) (And (Not (Eq (op e1 e0) (op e3 e0))) (And (Not (Eq (op e1 e0) (op e4 e0))) (And (Not (Eq (op e2 e0) (op e3 e0))) (And (Not (Eq (op e2 e0) (op e4 e0))) (And (Not (Eq (op e3 e0) (op e4 e0))) (And (Not (Eq (op e0 e1) (op e1 e1))) (And (Not (Eq (op e0 e1) (op e2 e1))) (And (Not (Eq (op e0 e1) (op e3 e1))) (And (Not (Eq (op e0 e1) (op e4 e1))) (And (Not (Eq (op e1 e1) (op e2 e1))) (And (Not (Eq (op e1 e1) (op e3 e1))) (And (Not (Eq (op e1 e1) (op e4 e1))) (And (Not (Eq (op e2 e1) (op e3 e1))) (And (Not (Eq (op e2 e1) (op e4 e1))) (And (Not (Eq (op e3 e1) (op e4 e1))) (And (Not (Eq (op e0 e2) (op e1 e2))) (And (Not (Eq (op e0 e2) (op e2 e2))) (And (Not (Eq (op e0 e2) (op e3 e2))) (And (Not (Eq (op e0 e2) (op e4 e2))) (And (Not (Eq (op e1 e2) (op e2 e2))) (And (Not (Eq (op e1 e2) (op e3 e2))) (And (Not (Eq (op e1 e2) (op e4 e2))) (And (Not (Eq (op e2 e2) (op e3 e2))) (And (Not (Eq (op e2 e2) (op e4 e2))) (And (Not (Eq (op e3 e2) (op e4 e2))) (And (Not (Eq (op e0 e3) (op e1 e3))) (And (Not (Eq (op e0 e3) (op e2 e3))) (And (Not (Eq (op e0 e3) (op e3 e3))) (And (Not (Eq (op e0 e3) (op e4 e3))) (And (Not (Eq (op e1 e3) (op e2 e3))) (And (Not (Eq (op e1 e3) (op e3 e3))) (And (Not (Eq (op e1 e3) (op e4 e3))) (And (Not (Eq (op e2 e3) (op e3 e3))) (And (Not (Eq (op e2 e3) (op e4 e3))) (And (Not (Eq (op e3 e3) (op e4 e3))) (And (Not (Eq (op e0 e4) (op e1 e4))) (And (Not (Eq (op e0 e4) (op e2 e4))) (And (Not (Eq (op e0 e4) (op e3 e4))) (And (Not (Eq (op e0 e4) (op e4 e4))) (And (Not (Eq (op e1 e4) (op e2 e4))) (And (Not (Eq (op e1 e4) (op e3 e4))) (And (Not (Eq (op e1 e4) (op e4 e4))) (And (Not (Eq (op e2 e4) (op e3 e4))) (And (Not (Eq (op e2 e4) (op e4 e4))) (And (Not (Eq (op e3 e4) (op e4 e4))) (And (Not (Eq (op e0 e0) (op e0 e1))) (And (Not (Eq (op e0 e0) (op e0 e2))) (And (Not (Eq (op e0 e0) (op e0 e3))) (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Not (Eq (op e0 e1) (op e0 e2))) (And (Not (Eq (op e0 e1) (op e0 e3))) (And (Not (Eq (op e0 e1) (op e0 e4))) (And (Not (Eq (op e0 e2) (op e0 e3))) (And (Not (Eq (op e0 e2) (op e0 e4))) (And (Not (Eq (op e0 e3) (op e0 e4))) (And (Not (Eq (op e1 e0) (op e1 e1))) (And (Not (Eq (op e1 e0) (op e1 e2))) (And (Not (Eq (op e1 e0) (op e1 e3))) (And (Not (Eq (op e1 e0) (op e1 e4))) (And (Not (Eq (op e1 e1) (op e1 e2))) (And (Not (Eq (op e1 e1) (op e1 e3))) (And (Not (Eq (op e1 e1) (op e1 e4))) (And (Not (Eq (op e1 e2) (op e1 e3))) (And (Not (Eq (op e1 e2) (op e1 e4))) (And (Not (Eq (op e1 e3) (op e1 e4))) (And (Not (Eq (op e2 e0) (op e2 e1))) (And (Not (Eq (op e2 e0) (op e2 e2))) (And (Not (Eq (op e2 e0) (op e2 e3))) (And (Not (Eq (op e2 e0) (op e2 e4))) (And (Not (Eq (op e2 e1) (op e2 e2))) (And (Not (Eq (op e2 e1) (op e2 e3))) (And (Not (Eq (op e2 e1) (op e2 e4))) (And (Not (Eq (op e2 e2) (op e2 e3))) (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Not (Eq (op e2 e3) (op e2 e4))) (And (Not (Eq (op e3 e0) (op e3 e1))) (And (Not (Eq (op e3 e0) (op e3 e2))) (And (Not (Eq (op e3 e0) (op e3 e3))) (And (Not (Eq (op e3 e0) (op e3 e4))) (And (Not (Eq (op e3 e1) (op e3 e2))) (And (Not (Eq (op e3 e1) (op e3 e3))) (And (Not (Eq (op e3 e1) (op e3 e4))) (And (Not (Eq (op e3 e2) (op e3 e3))) (And (Not (Eq (op e3 e2) (op e3 e4))) (And (Not (Eq (op e3 e3) (op e3 e4))) (And (Not (Eq (op e4 e0) (op e4 e1))) (And (Not (Eq (op e4 e0) (op e4 e2))) (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Not (Eq (op e4 e0) (op e4 e4))) (And (Not (Eq (op e4 e1) (op e4 e2))) (And (Not (Eq (op e4 e1) (op e4 e3))) (And (Not (Eq (op e4 e1) (op e4 e4))) (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Not (Eq (op e4 e2) (op e4 e4))) (Not (Eq (op e4 e3) (op e4 e4)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a439 lean_r299
have lean_s30 : (Not (Eq (op e2 e2) (op e2 e4))) := by andElim lean_s29, 78
let lean_s31 := by R1 lean_s28, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
have lean_s32 : (Eq And And) := by timed rfl
let lean_s33 := by timed congr lean_s32 lean_r396
let lean_s34 := by timed congr lean_s32 lean_r389
let lean_s35 := by timed congr lean_s32 lean_r280
let lean_s36 := by timed congr lean_s32 lean_r277
let lean_s37 := by timed congr lean_s36 lean_r270
let lean_s38 := by timed congr lean_s35 lean_s37
let lean_s39 := by timed congr lean_s34 lean_s38
have lean_s40 : (Eq (And (Eq (op e0 e0) e0) (And (Eq (op e1 e1) e1) (And (Eq (op e2 e2) e2) (And (Eq (op e3 e3) e3) (Eq (op e4 e4) e4))))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e3 e3)) (Eq e4 (op e4 e4))))))) := by timed congr lean_s33 lean_s39
have lean_s41 : (Eq (And (And (And (And (Eq (op e0 e0) e0) (Eq (op e1 e1) e1)) (Eq (op e2 e2) e2)) (Eq (op e3 e3) e3)) (Eq (op e4 e4) e4)) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e3 e3)) (Eq e4 (op e4 e4))))))) := by timed Eq.trans lean_r403 lean_s40
have lean_s42 : (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e3 e3)) (Eq e4 (op e4 e4)))))) := by timed eqResolve lean_a438 lean_s41
have lean_s43 : (Eq e3 (op e3 e3)) := by andElim lean_s42, 3
let lean_s44 := by R2 lean_s31, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
have lean_s45 : (Eq e2 (op e2 e2)) := by andElim lean_s42, 2
let lean_s46 := by R2 lean_s44, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s47 : (Eq And And) := by timed rfl
have lean_s48 : (Eq Or Or) := by timed rfl
let lean_s49 := by timed congr lean_s48 lean_r396
let lean_s50 := by timed congr lean_s48 lean_r234
let lean_s51 := by timed congr lean_s48 lean_r269
let lean_s52 := by timed congr lean_s48 lean_r117
let lean_s53 := by timed congr lean_s52 lean_r158
let lean_s54 := by timed congr lean_s51 lean_s53
let lean_s55 := by timed congr lean_s50 lean_s54
have lean_s56 : (Eq (Or (Eq (op e0 e0) e0) (Or (Eq (op e0 e1) e0) (Or (Eq (op e0 e2) e0) (Or (Eq (op e0 e3) e0) (Eq (op e0 e4) e0))))) (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e0 e3)) (Eq e0 (op e0 e4))))))) := by timed congr lean_s49 lean_s55
have lean_s57 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e0 e3)) (Eq e0 (op e0 e4))))))) := by timed Eq.trans lean_r375 lean_s56
let lean_s58 := by timed congr lean_s47 lean_s57
have lean_s59 : (Eq Or Or) := by timed rfl
let lean_s60 := by timed congr lean_s59 lean_r396
let lean_s61 := by timed congr lean_s59 lean_r352
let lean_s62 := by timed congr lean_s59 lean_r233
let lean_s63 := by timed congr lean_s59 lean_r114
let lean_s64 := by timed congr lean_s63 lean_r154
let lean_s65 := by timed congr lean_s62 lean_s64
let lean_s66 := by timed congr lean_s61 lean_s65
have lean_s67 : (Eq (Or (Eq (op e0 e0) e0) (Or (Eq (op e1 e0) e0) (Or (Eq (op e2 e0) e0) (Or (Eq (op e3 e0) e0) (Eq (op e4 e0) e0))))) (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e3 e0)) (Eq e0 (op e4 e0))))))) := by timed congr lean_s60 lean_s66
have lean_s68 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0)) (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e3 e0)) (Eq e0 (op e4 e0))))))) := by timed Eq.trans lean_r217 lean_s67
let lean_s69 := by timed congr lean_s47 lean_s68
have lean_s70 : (Eq Or Or) := by timed rfl
let lean_s71 := by timed congr lean_s70 lean_r371
let lean_s72 := by timed congr lean_s70 lean_r344
let lean_s73 := by timed congr lean_s70 lean_r317
let lean_s74 := by timed congr lean_s70 lean_r223
let lean_s75 := by timed congr lean_s74 lean_r171
let lean_s76 := by timed congr lean_s73 lean_s75
let lean_s77 := by timed congr lean_s72 lean_s76
have lean_s78 : (Eq (Or (Eq (op e0 e0) e1) (Or (Eq (op e0 e1) e1) (Or (Eq (op e0 e2) e1) (Or (Eq (op e0 e3) e1) (Eq (op e0 e4) e1))))) (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e0 e3)) (Eq e1 (op e0 e4))))))) := by timed congr lean_s71 lean_s77
have lean_s79 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e0 e3)) (Eq e1 (op e0 e4))))))) := by timed Eq.trans lean_r325 lean_s78
let lean_s80 := by timed congr lean_s47 lean_s79
have lean_s81 : (Eq Or Or) := by timed rfl
let lean_s82 := by timed congr lean_s81 lean_r371
let lean_s83 := by timed congr lean_s81 lean_r197
let lean_s84 := by timed congr lean_s81 lean_r321
let lean_s85 := by timed congr lean_s81 lean_r177
let lean_s86 := by timed congr lean_s85 lean_r181
let lean_s87 := by timed congr lean_s84 lean_s86
let lean_s88 := by timed congr lean_s83 lean_s87
have lean_s89 : (Eq (Or (Eq (op e0 e0) e1) (Or (Eq (op e1 e0) e1) (Or (Eq (op e2 e0) e1) (Or (Eq (op e3 e0) e1) (Eq (op e4 e0) e1))))) (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e3 e0)) (Eq e1 (op e4 e0))))))) := by timed congr lean_s82 lean_s88
have lean_s90 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)) (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e3 e0)) (Eq e1 (op e4 e0))))))) := by timed Eq.trans lean_r148 lean_s89
let lean_s91 := by timed congr lean_s47 lean_s90
have lean_s92 : (Eq Or Or) := by timed rfl
let lean_s93 := by timed congr lean_s92 lean_r368
let lean_s94 := by timed congr lean_s92 lean_r118
let lean_s95 := by timed congr lean_s92 lean_r395
let lean_s96 := by timed congr lean_s92 lean_r138
let lean_s97 := by timed congr lean_s96 lean_r186
let lean_s98 := by timed congr lean_s95 lean_s97
let lean_s99 := by timed congr lean_s94 lean_s98
have lean_s100 : (Eq (Or (Eq (op e0 e0) e2) (Or (Eq (op e0 e1) e2) (Or (Eq (op e0 e2) e2) (Or (Eq (op e0 e3) e2) (Eq (op e0 e4) e2))))) (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e0 e3)) (Eq e2 (op e0 e4))))))) := by timed congr lean_s93 lean_s99
have lean_s101 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e0 e3)) (Eq e2 (op e0 e4))))))) := by timed Eq.trans lean_r207 lean_s100
let lean_s102 := by timed congr lean_s47 lean_s101
have lean_s103 : (Eq Or Or) := by timed rfl
let lean_s104 := by timed congr lean_s103 lean_r368
let lean_s105 := by timed congr lean_s103 lean_r172
let lean_s106 := by timed congr lean_s103 lean_r308
let lean_s107 := by timed congr lean_s103 lean_r133
let lean_s108 := by timed congr lean_s107 lean_r276
let lean_s109 := by timed congr lean_s106 lean_s108
let lean_s110 := by timed congr lean_s105 lean_s109
have lean_s111 : (Eq (Or (Eq (op e0 e0) e2) (Or (Eq (op e1 e0) e2) (Or (Eq (op e2 e0) e2) (Or (Eq (op e3 e0) e2) (Eq (op e4 e0) e2))))) (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e3 e0)) (Eq e2 (op e4 e0))))))) := by timed congr lean_s104 lean_s110
have lean_s112 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)) (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e3 e0)) (Eq e2 (op e4 e0))))))) := by timed Eq.trans lean_r370 lean_s111
let lean_s113 := by timed congr lean_s47 lean_s112
have lean_s114 : (Eq Or Or) := by timed rfl
let lean_s115 := by timed congr lean_s114 lean_r362
let lean_s116 := by timed congr lean_s114 lean_r227
let lean_s117 := by timed congr lean_s114 lean_r129
let lean_s118 := by timed congr lean_s114 lean_r219
let lean_s119 := by timed congr lean_s118 lean_r331
let lean_s120 := by timed congr lean_s117 lean_s119
let lean_s121 := by timed congr lean_s116 lean_s120
have lean_s122 : (Eq (Or (Eq (op e0 e0) e3) (Or (Eq (op e0 e1) e3) (Or (Eq (op e0 e2) e3) (Or (Eq (op e0 e3) e3) (Eq (op e0 e4) e3))))) (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e0 e3)) (Eq e3 (op e0 e4))))))) := by timed congr lean_s115 lean_s121
have lean_s123 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e0 e3)) (Eq e3 (op e0 e4))))))) := by timed Eq.trans lean_r192 lean_s122
let lean_s124 := by timed congr lean_s47 lean_s123
have lean_s125 : (Eq Or Or) := by timed rfl
let lean_s126 := by timed congr lean_s125 lean_r362
let lean_s127 := by timed congr lean_s125 lean_r343
let lean_s128 := by timed congr lean_s125 lean_r126
let lean_s129 := by timed congr lean_s125 lean_r298
let lean_s130 := by timed congr lean_s129 lean_r208
let lean_s131 := by timed congr lean_s128 lean_s130
let lean_s132 := by timed congr lean_s127 lean_s131
have lean_s133 : (Eq (Or (Eq (op e0 e0) e3) (Or (Eq (op e1 e0) e3) (Or (Eq (op e2 e0) e3) (Or (Eq (op e3 e0) e3) (Eq (op e4 e0) e3))))) (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e3 e0)) (Eq e3 (op e4 e0))))))) := by timed congr lean_s126 lean_s132
have lean_s134 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)) (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e3 e0)) (Eq e3 (op e4 e0))))))) := by timed Eq.trans lean_r364 lean_s133
let lean_s135 := by timed congr lean_s47 lean_s134
have lean_s136 : (Eq Or Or) := by timed rfl
let lean_s137 := by timed congr lean_s136 lean_r164
let lean_s138 := by timed congr lean_s136 lean_r338
let lean_s139 := by timed congr lean_s136 lean_r252
let lean_s140 := by timed congr lean_s136 lean_r367
let lean_s141 := by timed congr lean_s140 lean_r273
let lean_s142 := by timed congr lean_s139 lean_s141
let lean_s143 := by timed congr lean_s138 lean_s142
have lean_s144 : (Eq (Or (Eq (op e0 e0) e4) (Or (Eq (op e0 e1) e4) (Or (Eq (op e0 e2) e4) (Or (Eq (op e0 e3) e4) (Eq (op e0 e4) e4))))) (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e0 e3)) (Eq e4 (op e0 e4))))))) := by timed congr lean_s137 lean_s143
have lean_s145 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e0 e3)) (Eq e4 (op e0 e4))))))) := by timed Eq.trans lean_r358 lean_s144
let lean_s146 := by timed congr lean_s47 lean_s145
have lean_s147 : (Eq Or Or) := by timed rfl
let lean_s148 := by timed congr lean_s147 lean_r164
let lean_s149 := by timed congr lean_s147 lean_r330
let lean_s150 := by timed congr lean_s147 lean_r182
let lean_s151 := by timed congr lean_s147 lean_r313
let lean_s152 := by timed congr lean_s151 lean_r278
let lean_s153 := by timed congr lean_s150 lean_s152
let lean_s154 := by timed congr lean_s149 lean_s153
have lean_s155 : (Eq (Or (Eq (op e0 e0) e4) (Or (Eq (op e1 e0) e4) (Or (Eq (op e2 e0) e4) (Or (Eq (op e3 e0) e4) (Eq (op e4 e0) e4))))) (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e3 e0)) (Eq e4 (op e4 e0))))))) := by timed congr lean_s148 lean_s154
have lean_s156 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)) (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e3 e0)) (Eq e4 (op e4 e0))))))) := by timed Eq.trans lean_r162 lean_s155
let lean_s157 := by timed congr lean_s47 lean_s156
have lean_s158 : (Eq Or Or) := by timed rfl
let lean_s159 := by timed congr lean_s158 lean_r352
let lean_s160 := by timed congr lean_s158 lean_r292
let lean_s161 := by timed congr lean_s158 lean_r261
let lean_s162 := by timed congr lean_s158 lean_r119
let lean_s163 := by timed congr lean_s162 lean_r159
let lean_s164 := by timed congr lean_s161 lean_s163
let lean_s165 := by timed congr lean_s160 lean_s164
have lean_s166 : (Eq (Or (Eq (op e1 e0) e0) (Or (Eq (op e1 e1) e0) (Or (Eq (op e1 e2) e0) (Or (Eq (op e1 e3) e0) (Eq (op e1 e4) e0))))) (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e1 e3)) (Eq e0 (op e1 e4))))))) := by timed congr lean_s159 lean_s165
have lean_s167 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e1 e3)) (Eq e0 (op e1 e4))))))) := by timed Eq.trans lean_r356 lean_s166
let lean_s168 := by timed congr lean_s47 lean_s167
have lean_s169 : (Eq Or Or) := by timed rfl
let lean_s170 := by timed congr lean_s169 lean_r234
let lean_s171 := by timed congr lean_s169 lean_r292
let lean_s172 := by timed congr lean_s169 lean_r290
let lean_s173 := by timed congr lean_s169 lean_r149
let lean_s174 := by timed congr lean_s173 lean_r363
let lean_s175 := by timed congr lean_s172 lean_s174
let lean_s176 := by timed congr lean_s171 lean_s175
have lean_s177 : (Eq (Or (Eq (op e0 e1) e0) (Or (Eq (op e1 e1) e0) (Or (Eq (op e2 e1) e0) (Or (Eq (op e3 e1) e0) (Eq (op e4 e1) e0))))) (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e3 e1)) (Eq e0 (op e4 e1))))))) := by timed congr lean_s170 lean_s176
have lean_s178 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0)) (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e3 e1)) (Eq e0 (op e4 e1))))))) := by timed Eq.trans lean_r383 lean_s177
let lean_s179 := by timed congr lean_s47 lean_s178
have lean_s180 : (Eq Or Or) := by timed rfl
let lean_s181 := by timed congr lean_s180 lean_r197
let lean_s182 := by timed congr lean_s180 lean_r389
let lean_s183 := by timed congr lean_s180 lean_r314
let lean_s184 := by timed congr lean_s180 lean_r341
let lean_s185 := by timed congr lean_s184 lean_r209
let lean_s186 := by timed congr lean_s183 lean_s185
let lean_s187 := by timed congr lean_s182 lean_s186
have lean_s188 : (Eq (Or (Eq (op e1 e0) e1) (Or (Eq (op e1 e1) e1) (Or (Eq (op e1 e2) e1) (Or (Eq (op e1 e3) e1) (Eq (op e1 e4) e1))))) (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e1 e3)) (Eq e1 (op e1 e4))))))) := by timed congr lean_s181 lean_s187
have lean_s189 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e1 e3)) (Eq e1 (op e1 e4))))))) := by timed Eq.trans lean_r354 lean_s188
let lean_s190 := by timed congr lean_s47 lean_s189
have lean_s191 : (Eq Or Or) := by timed rfl
let lean_s192 := by timed congr lean_s191 lean_r344
let lean_s193 := by timed congr lean_s191 lean_r389
let lean_s194 := by timed congr lean_s191 lean_r318
let lean_s195 := by timed congr lean_s191 lean_r239
let lean_s196 := by timed congr lean_s195 lean_r243
let lean_s197 := by timed congr lean_s194 lean_s196
let lean_s198 := by timed congr lean_s193 lean_s197
have lean_s199 : (Eq (Or (Eq (op e0 e1) e1) (Or (Eq (op e1 e1) e1) (Or (Eq (op e2 e1) e1) (Or (Eq (op e3 e1) e1) (Eq (op e4 e1) e1))))) (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e3 e1)) (Eq e1 (op e4 e1))))))) := by timed congr lean_s192 lean_s198
have lean_s200 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)) (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e3 e1)) (Eq e1 (op e4 e1))))))) := by timed Eq.trans lean_r347 lean_s199
let lean_s201 := by timed congr lean_s47 lean_s200
have lean_s202 : (Eq Or Or) := by timed rfl
let lean_s203 := by timed congr lean_s202 lean_r172
let lean_s204 := by timed congr lean_s202 lean_r416
let lean_s205 := by timed congr lean_s202 lean_r390
let lean_s206 := by timed congr lean_s202 lean_r140
let lean_s207 := by timed congr lean_s206 lean_r228
let lean_s208 := by timed congr lean_s205 lean_s207
let lean_s209 := by timed congr lean_s204 lean_s208
have lean_s210 : (Eq (Or (Eq (op e1 e0) e2) (Or (Eq (op e1 e1) e2) (Or (Eq (op e1 e2) e2) (Or (Eq (op e1 e3) e2) (Eq (op e1 e4) e2))))) (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e1 e3)) (Eq e2 (op e1 e4))))))) := by timed congr lean_s203 lean_s209
have lean_s211 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e1 e3)) (Eq e2 (op e1 e4))))))) := by timed Eq.trans lean_r350 lean_s210
let lean_s212 := by timed congr lean_s47 lean_s211
have lean_s213 : (Eq Or Or) := by timed rfl
let lean_s214 := by timed congr lean_s213 lean_r118
let lean_s215 := by timed congr lean_s213 lean_r416
let lean_s216 := by timed congr lean_s213 lean_r307
let lean_s217 := by timed congr lean_s213 lean_r136
let lean_s218 := by timed congr lean_s217 lean_r420
let lean_s219 := by timed congr lean_s216 lean_s218
let lean_s220 := by timed congr lean_s215 lean_s219
have lean_s221 : (Eq (Or (Eq (op e0 e1) e2) (Or (Eq (op e1 e1) e2) (Or (Eq (op e2 e1) e2) (Or (Eq (op e3 e1) e2) (Eq (op e4 e1) e2))))) (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e3 e1)) (Eq e2 (op e4 e1))))))) := by timed congr lean_s214 lean_s220
have lean_s222 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)) (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e3 e1)) (Eq e2 (op e4 e1))))))) := by timed Eq.trans lean_r116 lean_s221
let lean_s223 := by timed congr lean_s47 lean_s222
have lean_s224 : (Eq Or Or) := by timed rfl
let lean_s225 := by timed congr lean_s224 lean_r343
let lean_s226 := by timed congr lean_s224 lean_r336
let lean_s227 := by timed congr lean_s224 lean_r135
let lean_s228 := by timed congr lean_s224 lean_r324
let lean_s229 := by timed congr lean_s228 lean_r329
let lean_s230 := by timed congr lean_s227 lean_s229
let lean_s231 := by timed congr lean_s226 lean_s230
have lean_s232 : (Eq (Or (Eq (op e1 e0) e3) (Or (Eq (op e1 e1) e3) (Or (Eq (op e1 e2) e3) (Or (Eq (op e1 e3) e3) (Eq (op e1 e4) e3))))) (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e1 e3)) (Eq e3 (op e1 e4))))))) := by timed congr lean_s225 lean_s231
have lean_s233 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e1 e3)) (Eq e3 (op e1 e4))))))) := by timed Eq.trans lean_r195 lean_s232
let lean_s234 := by timed congr lean_s47 lean_s233
have lean_s235 : (Eq Or Or) := by timed rfl
let lean_s236 := by timed congr lean_s235 lean_r227
let lean_s237 := by timed congr lean_s235 lean_r336
let lean_s238 := by timed congr lean_s235 lean_r306
let lean_s239 := by timed congr lean_s235 lean_r204
let lean_s240 := by timed congr lean_s239 lean_r221
let lean_s241 := by timed congr lean_s238 lean_s240
let lean_s242 := by timed congr lean_s237 lean_s241
have lean_s243 : (Eq (Or (Eq (op e0 e1) e3) (Or (Eq (op e1 e1) e3) (Or (Eq (op e2 e1) e3) (Or (Eq (op e3 e1) e3) (Eq (op e4 e1) e3))))) (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e3 e1)) (Eq e3 (op e4 e1))))))) := by timed congr lean_s236 lean_s242
have lean_s244 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)) (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e3 e1)) (Eq e3 (op e4 e1))))))) := by timed Eq.trans lean_r342 lean_s243
let lean_s245 := by timed congr lean_s47 lean_s244
have lean_s246 : (Eq Or Or) := by timed rfl
let lean_s247 := by timed congr lean_s246 lean_r330
let lean_s248 := by timed congr lean_s246 lean_r130
let lean_s249 := by timed congr lean_s246 lean_r427
let lean_s250 := by timed congr lean_s246 lean_r216
let lean_s251 := by timed congr lean_s250 lean_r268
let lean_s252 := by timed congr lean_s249 lean_s251
let lean_s253 := by timed congr lean_s248 lean_s252
have lean_s254 : (Eq (Or (Eq (op e1 e0) e4) (Or (Eq (op e1 e1) e4) (Or (Eq (op e1 e2) e4) (Or (Eq (op e1 e3) e4) (Eq (op e1 e4) e4))))) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e1 e3)) (Eq e4 (op e1 e4))))))) := by timed congr lean_s247 lean_s253
have lean_s255 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e1 e3)) (Eq e4 (op e1 e4))))))) := by timed Eq.trans lean_r332 lean_s254
let lean_s256 := by timed congr lean_s47 lean_s255
have lean_s257 : (Eq Or Or) := by timed rfl
let lean_s258 := by timed congr lean_s257 lean_r338
let lean_s259 := by timed congr lean_s257 lean_r130
let lean_s260 := by timed congr lean_s257 lean_r244
let lean_s261 := by timed congr lean_s257 lean_r310
let lean_s262 := by timed congr lean_s261 lean_r275
let lean_s263 := by timed congr lean_s260 lean_s262
let lean_s264 := by timed congr lean_s259 lean_s263
have lean_s265 : (Eq (Or (Eq (op e0 e1) e4) (Or (Eq (op e1 e1) e4) (Or (Eq (op e2 e1) e4) (Or (Eq (op e3 e1) e4) (Eq (op e4 e1) e4))))) (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e3 e1)) (Eq e4 (op e4 e1))))))) := by timed congr lean_s258 lean_s264
have lean_s266 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4)) (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e3 e1)) (Eq e4 (op e4 e1))))))) := by timed Eq.trans lean_r328 lean_s265
let lean_s267 := by timed congr lean_s47 lean_s266
have lean_s268 : (Eq Or Or) := by timed rfl
let lean_s269 := by timed congr lean_s268 lean_r233
let lean_s270 := by timed congr lean_s268 lean_r290
let lean_s271 := by timed congr lean_s268 lean_r286
let lean_s272 := by timed congr lean_s268 lean_r121
let lean_s273 := by timed congr lean_s272 lean_r161
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s270 lean_s274
have lean_s276 : (Eq (Or (Eq (op e2 e0) e0) (Or (Eq (op e2 e1) e0) (Or (Eq (op e2 e2) e0) (Or (Eq (op e2 e3) e0) (Eq (op e2 e4) e0))))) (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e2 e3)) (Eq e0 (op e2 e4))))))) := by timed congr lean_s269 lean_s275
have lean_s277 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e2 e3)) (Eq e0 (op e2 e4))))))) := by timed Eq.trans lean_r293 lean_s276
let lean_s278 := by timed congr lean_s47 lean_s277
have lean_s279 : (Eq Or Or) := by timed rfl
let lean_s280 := by timed congr lean_s279 lean_r269
let lean_s281 := by timed congr lean_s279 lean_r261
let lean_s282 := by timed congr lean_s279 lean_r286
let lean_s283 := by timed congr lean_s279 lean_r346
let lean_s284 := by timed congr lean_s283 lean_r361
let lean_s285 := by timed congr lean_s282 lean_s284
let lean_s286 := by timed congr lean_s281 lean_s285
have lean_s287 : (Eq (Or (Eq (op e0 e2) e0) (Or (Eq (op e1 e2) e0) (Or (Eq (op e2 e2) e0) (Or (Eq (op e3 e2) e0) (Eq (op e4 e2) e0))))) (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e3 e2)) (Eq e0 (op e4 e2))))))) := by timed congr lean_s280 lean_s286
have lean_s288 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0)) (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e3 e2)) (Eq e0 (op e4 e2))))))) := by timed Eq.trans lean_r274 lean_s287
let lean_s289 := by timed congr lean_s47 lean_s288
have lean_s290 : (Eq Or Or) := by timed rfl
let lean_s291 := by timed congr lean_s290 lean_r321
let lean_s292 := by timed congr lean_s290 lean_r318
let lean_s293 := by timed congr lean_s290 lean_r311
let lean_s294 := by timed congr lean_s290 lean_r226
let lean_s295 := by timed congr lean_s294 lean_r353
let lean_s296 := by timed congr lean_s293 lean_s295
let lean_s297 := by timed congr lean_s292 lean_s296
have lean_s298 : (Eq (Or (Eq (op e2 e0) e1) (Or (Eq (op e2 e1) e1) (Or (Eq (op e2 e2) e1) (Or (Eq (op e2 e3) e1) (Eq (op e2 e4) e1))))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e2 e3)) (Eq e1 (op e2 e4))))))) := by timed congr lean_s291 lean_s297
have lean_s299 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e2 e3)) (Eq e1 (op e2 e4))))))) := by timed Eq.trans lean_r326 lean_s298
let lean_s300 := by timed congr lean_s47 lean_s299
have lean_s301 : (Eq Or Or) := by timed rfl
let lean_s302 := by timed congr lean_s301 lean_r317
let lean_s303 := by timed congr lean_s301 lean_r314
let lean_s304 := by timed congr lean_s301 lean_r311
let lean_s305 := by timed congr lean_s301 lean_r173
let lean_s306 := by timed congr lean_s305 lean_r166
let lean_s307 := by timed congr lean_s304 lean_s306
let lean_s308 := by timed congr lean_s303 lean_s307
have lean_s309 : (Eq (Or (Eq (op e0 e2) e1) (Or (Eq (op e1 e2) e1) (Or (Eq (op e2 e2) e1) (Or (Eq (op e3 e2) e1) (Eq (op e4 e2) e1))))) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e3 e2)) (Eq e1 (op e4 e2))))))) := by timed congr lean_s302 lean_s308
have lean_s310 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e3 e2)) (Eq e1 (op e4 e2))))))) := by timed Eq.trans lean_r236 lean_s309
let lean_s311 := by timed congr lean_s47 lean_s310
have lean_s312 : (Eq Or Or) := by timed rfl
let lean_s313 := by timed congr lean_s312 lean_r308
let lean_s314 := by timed congr lean_s312 lean_r307
let lean_s315 := by timed congr lean_s312 lean_r280
let lean_s316 := by timed congr lean_s312 lean_r144
let lean_s317 := by timed congr lean_s316 lean_r212
let lean_s318 := by timed congr lean_s315 lean_s317
let lean_s319 := by timed congr lean_s314 lean_s318
have lean_s320 : (Eq (Or (Eq (op e2 e0) e2) (Or (Eq (op e2 e1) e2) (Or (Eq (op e2 e2) e2) (Or (Eq (op e2 e3) e2) (Eq (op e2 e4) e2))))) (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e2 e3)) (Eq e2 (op e2 e4))))))) := by timed congr lean_s313 lean_s319
have lean_s321 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e2 e3)) (Eq e2 (op e2 e4))))))) := by timed Eq.trans lean_r202 lean_s320
let lean_s322 := by timed congr lean_s47 lean_s321
have lean_s323 : (Eq Or Or) := by timed rfl
let lean_s324 := by timed congr lean_s323 lean_r395
let lean_s325 := by timed congr lean_s323 lean_r390
let lean_s326 := by timed congr lean_s323 lean_r280
let lean_s327 := by timed congr lean_s323 lean_r137
let lean_s328 := by timed congr lean_s327 lean_r256
let lean_s329 := by timed congr lean_s326 lean_s328
let lean_s330 := by timed congr lean_s325 lean_s329
have lean_s331 : (Eq (Or (Eq (op e0 e2) e2) (Or (Eq (op e1 e2) e2) (Or (Eq (op e2 e2) e2) (Or (Eq (op e3 e2) e2) (Eq (op e4 e2) e2))))) (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e3 e2)) (Eq e2 (op e4 e2))))))) := by timed congr lean_s324 lean_s330
have lean_s332 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)) (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e3 e2)) (Eq e2 (op e4 e2))))))) := by timed Eq.trans lean_r404 lean_s331
let lean_s333 := by timed congr lean_s47 lean_s332
have lean_s334 : (Eq Or Or) := by timed rfl
let lean_s335 := by timed congr lean_s334 lean_r126
let lean_s336 := by timed congr lean_s334 lean_r306
let lean_s337 := by timed congr lean_s334 lean_r178
let lean_s338 := by timed congr lean_s334 lean_r320
let lean_s339 := by timed congr lean_s338 lean_r231
let lean_s340 := by timed congr lean_s337 lean_s339
let lean_s341 := by timed congr lean_s336 lean_s340
have lean_s342 : (Eq (Or (Eq (op e2 e0) e3) (Or (Eq (op e2 e1) e3) (Or (Eq (op e2 e2) e3) (Or (Eq (op e2 e3) e3) (Eq (op e2 e4) e3))))) (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e2 e3)) (Eq e3 (op e2 e4))))))) := by timed congr lean_s335 lean_s341
have lean_s343 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e2 e3)) (Eq e3 (op e2 e4))))))) := by timed Eq.trans lean_r125 lean_s342
let lean_s344 := by timed congr lean_s47 lean_s343
have lean_s345 : (Eq Or Or) := by timed rfl
let lean_s346 := by timed congr lean_s345 lean_r129
let lean_s347 := by timed congr lean_s345 lean_r135
let lean_s348 := by timed congr lean_s345 lean_r178
let lean_s349 := by timed congr lean_s345 lean_r146
let lean_s350 := by timed congr lean_s349 lean_r296
let lean_s351 := by timed congr lean_s348 lean_s350
let lean_s352 := by timed congr lean_s347 lean_s351
have lean_s353 : (Eq (Or (Eq (op e0 e2) e3) (Or (Eq (op e1 e2) e3) (Or (Eq (op e2 e2) e3) (Or (Eq (op e3 e2) e3) (Eq (op e4 e2) e3))))) (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e3 e2)) (Eq e3 (op e4 e2))))))) := by timed congr lean_s346 lean_s352
have lean_s354 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)) (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e3 e2)) (Eq e3 (op e4 e2))))))) := by timed Eq.trans lean_r305 lean_s353
let lean_s355 := by timed congr lean_s47 lean_s354
have lean_s356 : (Eq Or Or) := by timed rfl
let lean_s357 := by timed congr lean_s356 lean_r182
let lean_s358 := by timed congr lean_s356 lean_r244
let lean_s359 := by timed congr lean_s356 lean_r425
let lean_s360 := by timed congr lean_s356 lean_r373
let lean_s361 := by timed congr lean_s360 lean_r260
let lean_s362 := by timed congr lean_s359 lean_s361
let lean_s363 := by timed congr lean_s358 lean_s362
have lean_s364 : (Eq (Or (Eq (op e2 e0) e4) (Or (Eq (op e2 e1) e4) (Or (Eq (op e2 e2) e4) (Or (Eq (op e2 e3) e4) (Eq (op e2 e4) e4))))) (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e2 e3)) (Eq e4 (op e2 e4))))))) := by timed congr lean_s357 lean_s363
have lean_s365 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e2 e3)) (Eq e4 (op e2 e4))))))) := by timed Eq.trans lean_r303 lean_s364
let lean_s366 := by timed congr lean_s47 lean_s365
have lean_s367 : (Eq Or Or) := by timed rfl
let lean_s368 := by timed congr lean_s367 lean_r252
let lean_s369 := by timed congr lean_s367 lean_r427
let lean_s370 := by timed congr lean_s367 lean_r425
let lean_s371 := by timed congr lean_s367 lean_r191
let lean_s372 := by timed congr lean_s371 lean_r262
let lean_s373 := by timed congr lean_s370 lean_s372
let lean_s374 := by timed congr lean_s369 lean_s373
have lean_s375 : (Eq (Or (Eq (op e0 e2) e4) (Or (Eq (op e1 e2) e4) (Or (Eq (op e2 e2) e4) (Or (Eq (op e3 e2) e4) (Eq (op e4 e2) e4))))) (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e3 e2)) (Eq e4 (op e4 e2))))))) := by timed congr lean_s368 lean_s374
have lean_s376 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4)) (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e3 e2)) (Eq e4 (op e4 e2))))))) := by timed Eq.trans lean_r167 lean_s375
let lean_s377 := by timed congr lean_s47 lean_s376
have lean_s378 : (Eq Or Or) := by timed rfl
let lean_s379 := by timed congr lean_s378 lean_r114
let lean_s380 := by timed congr lean_s378 lean_r149
let lean_s381 := by timed congr lean_s378 lean_r346
let lean_s382 := by timed congr lean_s378 lean_r156
let lean_s383 := by timed congr lean_s382 lean_r163
let lean_s384 := by timed congr lean_s381 lean_s383
let lean_s385 := by timed congr lean_s380 lean_s384
have lean_s386 : (Eq (Or (Eq (op e3 e0) e0) (Or (Eq (op e3 e1) e0) (Or (Eq (op e3 e2) e0) (Or (Eq (op e3 e3) e0) (Eq (op e3 e4) e0))))) (Or (Eq e0 (op e3 e0)) (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e3 e4))))))) := by timed congr lean_s379 lean_s385
have lean_s387 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Eq e0 (op e3 e0)) (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e3 e4))))))) := by timed Eq.trans lean_r113 lean_s386
let lean_s388 := by timed congr lean_s47 lean_s387
have lean_s389 : (Eq Or Or) := by timed rfl
let lean_s390 := by timed congr lean_s389 lean_r117
let lean_s391 := by timed congr lean_s389 lean_r119
let lean_s392 := by timed congr lean_s389 lean_r121
let lean_s393 := by timed congr lean_s389 lean_r156
let lean_s394 := by timed congr lean_s393 lean_r251
let lean_s395 := by timed congr lean_s392 lean_s394
let lean_s396 := by timed congr lean_s391 lean_s395
have lean_s397 : (Eq (Or (Eq (op e0 e3) e0) (Or (Eq (op e1 e3) e0) (Or (Eq (op e2 e3) e0) (Or (Eq (op e3 e3) e0) (Eq (op e4 e3) e0))))) (Or (Eq e0 (op e0 e3)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e4 e3))))))) := by timed congr lean_s390 lean_s396
have lean_s398 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0)) (Or (Eq e0 (op e0 e3)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e4 e3))))))) := by timed Eq.trans lean_r115 lean_s397
let lean_s399 := by timed congr lean_s47 lean_s398
have lean_s400 : (Eq Or Or) := by timed rfl
let lean_s401 := by timed congr lean_s400 lean_r177
let lean_s402 := by timed congr lean_s400 lean_r239
let lean_s403 := by timed congr lean_s400 lean_r173
let lean_s404 := by timed congr lean_s400 lean_r335
let lean_s405 := by timed congr lean_s404 lean_r196
let lean_s406 := by timed congr lean_s403 lean_s405
let lean_s407 := by timed congr lean_s402 lean_s406
have lean_s408 : (Eq (Or (Eq (op e3 e0) e1) (Or (Eq (op e3 e1) e1) (Or (Eq (op e3 e2) e1) (Or (Eq (op e3 e3) e1) (Eq (op e3 e4) e1))))) (Or (Eq e1 (op e3 e0)) (Or (Eq e1 (op e3 e1)) (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e3 e4))))))) := by timed congr lean_s401 lean_s407
have lean_s409 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Eq e1 (op e3 e0)) (Or (Eq e1 (op e3 e1)) (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e3 e4))))))) := by timed Eq.trans lean_r122 lean_s408
let lean_s410 := by timed congr lean_s47 lean_s409
have lean_s411 : (Eq Or Or) := by timed rfl
let lean_s412 := by timed congr lean_s411 lean_r223
let lean_s413 := by timed congr lean_s411 lean_r341
let lean_s414 := by timed congr lean_s411 lean_r226
let lean_s415 := by timed congr lean_s411 lean_r335
let lean_s416 := by timed congr lean_s415 lean_r168
let lean_s417 := by timed congr lean_s414 lean_s416
let lean_s418 := by timed congr lean_s413 lean_s417
have lean_s419 : (Eq (Or (Eq (op e0 e3) e1) (Or (Eq (op e1 e3) e1) (Or (Eq (op e2 e3) e1) (Or (Eq (op e3 e3) e1) (Eq (op e4 e3) e1))))) (Or (Eq e1 (op e0 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e4 e3))))))) := by timed congr lean_s412 lean_s418
have lean_s420 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)) (Or (Eq e1 (op e0 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e4 e3))))))) := by timed Eq.trans lean_r124 lean_s419
let lean_s421 := by timed congr lean_s47 lean_s420
have lean_s422 : (Eq Or Or) := by timed rfl
let lean_s423 := by timed congr lean_s422 lean_r133
let lean_s424 := by timed congr lean_s422 lean_r136
let lean_s425 := by timed congr lean_s422 lean_r137
let lean_s426 := by timed congr lean_s422 lean_r145
let lean_s427 := by timed congr lean_s426 lean_r189
let lean_s428 := by timed congr lean_s425 lean_s427
let lean_s429 := by timed congr lean_s424 lean_s428
have lean_s430 : (Eq (Or (Eq (op e3 e0) e2) (Or (Eq (op e3 e1) e2) (Or (Eq (op e3 e2) e2) (Or (Eq (op e3 e3) e2) (Eq (op e3 e4) e2))))) (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e1)) (Or (Eq e2 (op e3 e2)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e3 e4))))))) := by timed congr lean_s423 lean_s429
have lean_s431 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e1)) (Or (Eq e2 (op e3 e2)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e3 e4))))))) := by timed Eq.trans lean_r127 lean_s430
let lean_s432 := by timed congr lean_s47 lean_s431
have lean_s433 : (Eq Or Or) := by timed rfl
let lean_s434 := by timed congr lean_s433 lean_r138
let lean_s435 := by timed congr lean_s433 lean_r140
let lean_s436 := by timed congr lean_s433 lean_r144
let lean_s437 := by timed congr lean_s433 lean_r145
let lean_s438 := by timed congr lean_s437 lean_r201
let lean_s439 := by timed congr lean_s436 lean_s438
let lean_s440 := by timed congr lean_s435 lean_s439
have lean_s441 : (Eq (Or (Eq (op e0 e3) e2) (Or (Eq (op e1 e3) e2) (Or (Eq (op e2 e3) e2) (Or (Eq (op e3 e3) e2) (Eq (op e4 e3) e2))))) (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e4 e3))))))) := by timed congr lean_s434 lean_s440
have lean_s442 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)) (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e4 e3))))))) := by timed Eq.trans lean_r199 lean_s441
let lean_s443 := by timed congr lean_s47 lean_s442
have lean_s444 : (Eq Or Or) := by timed rfl
let lean_s445 := by timed congr lean_s444 lean_r298
let lean_s446 := by timed congr lean_s444 lean_r204
let lean_s447 := by timed congr lean_s444 lean_r146
let lean_s448 := by timed congr lean_s444 lean_r277
let lean_s449 := by timed congr lean_s448 lean_r289
let lean_s450 := by timed congr lean_s447 lean_s449
let lean_s451 := by timed congr lean_s446 lean_s450
have lean_s452 : (Eq (Or (Eq (op e3 e0) e3) (Or (Eq (op e3 e1) e3) (Or (Eq (op e3 e2) e3) (Or (Eq (op e3 e3) e3) (Eq (op e3 e4) e3))))) (Or (Eq e3 (op e3 e0)) (Or (Eq e3 (op e3 e1)) (Or (Eq e3 (op e3 e2)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e3 e4))))))) := by timed congr lean_s445 lean_s451
have lean_s453 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Eq e3 (op e3 e0)) (Or (Eq e3 (op e3 e1)) (Or (Eq e3 (op e3 e2)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e3 e4))))))) := by timed Eq.trans lean_r188 lean_s452
let lean_s454 := by timed congr lean_s47 lean_s453
have lean_s455 : (Eq Or Or) := by timed rfl
let lean_s456 := by timed congr lean_s455 lean_r219
let lean_s457 := by timed congr lean_s455 lean_r324
let lean_s458 := by timed congr lean_s455 lean_r320
let lean_s459 := by timed congr lean_s455 lean_r277
let lean_s460 := by timed congr lean_s459 lean_r399
let lean_s461 := by timed congr lean_s458 lean_s460
let lean_s462 := by timed congr lean_s457 lean_s461
have lean_s463 : (Eq (Or (Eq (op e0 e3) e3) (Or (Eq (op e1 e3) e3) (Or (Eq (op e2 e3) e3) (Or (Eq (op e3 e3) e3) (Eq (op e4 e3) e3))))) (Or (Eq e3 (op e0 e3)) (Or (Eq e3 (op e1 e3)) (Or (Eq e3 (op e2 e3)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e4 e3))))))) := by timed congr lean_s456 lean_s462
have lean_s464 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)) (Or (Eq e3 (op e0 e3)) (Or (Eq e3 (op e1 e3)) (Or (Eq e3 (op e2 e3)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e4 e3))))))) := by timed Eq.trans lean_r206 lean_s463
let lean_s465 := by timed congr lean_s47 lean_s464
have lean_s466 : (Eq Or Or) := by timed rfl
let lean_s467 := by timed congr lean_s466 lean_r313
let lean_s468 := by timed congr lean_s466 lean_r310
let lean_s469 := by timed congr lean_s466 lean_r191
let lean_s470 := by timed congr lean_s466 lean_r235
let lean_s471 := by timed congr lean_s470 lean_r285
let lean_s472 := by timed congr lean_s469 lean_s471
let lean_s473 := by timed congr lean_s468 lean_s472
have lean_s474 : (Eq (Or (Eq (op e3 e0) e4) (Or (Eq (op e3 e1) e4) (Or (Eq (op e3 e2) e4) (Or (Eq (op e3 e3) e4) (Eq (op e3 e4) e4))))) (Or (Eq e4 (op e3 e0)) (Or (Eq e4 (op e3 e1)) (Or (Eq e4 (op e3 e2)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e3 e4))))))) := by timed congr lean_s467 lean_s473
have lean_s475 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Eq e4 (op e3 e0)) (Or (Eq e4 (op e3 e1)) (Or (Eq e4 (op e3 e2)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e3 e4))))))) := by timed Eq.trans lean_r316 lean_s474
let lean_s476 := by timed congr lean_s47 lean_s475
have lean_s477 : (Eq Or Or) := by timed rfl
let lean_s478 := by timed congr lean_s477 lean_r367
let lean_s479 := by timed congr lean_s477 lean_r216
let lean_s480 := by timed congr lean_s477 lean_r373
let lean_s481 := by timed congr lean_s477 lean_r235
let lean_s482 := by timed congr lean_s481 lean_r255
let lean_s483 := by timed congr lean_s480 lean_s482
let lean_s484 := by timed congr lean_s479 lean_s483
have lean_s485 : (Eq (Or (Eq (op e0 e3) e4) (Or (Eq (op e1 e3) e4) (Or (Eq (op e2 e3) e4) (Or (Eq (op e3 e3) e4) (Eq (op e4 e3) e4))))) (Or (Eq e4 (op e0 e3)) (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e2 e3)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e4 e3))))))) := by timed congr lean_s478 lean_s484
have lean_s486 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4)) (Or (Eq e4 (op e0 e3)) (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e2 e3)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e4 e3))))))) := by timed Eq.trans lean_r369 lean_s485
let lean_s487 := by timed congr lean_s47 lean_s486
have lean_s488 : (Eq Or Or) := by timed rfl
let lean_s489 := by timed congr lean_s488 lean_r154
let lean_s490 := by timed congr lean_s488 lean_r363
let lean_s491 := by timed congr lean_s488 lean_r361
let lean_s492 := by timed congr lean_s488 lean_r251
let lean_s493 := by timed congr lean_s492 lean_r165
let lean_s494 := by timed congr lean_s491 lean_s493
let lean_s495 := by timed congr lean_s490 lean_s494
have lean_s496 : (Eq (Or (Eq (op e4 e0) e0) (Or (Eq (op e4 e1) e0) (Or (Eq (op e4 e2) e0) (Or (Eq (op e4 e3) e0) (Eq (op e4 e4) e0))))) (Or (Eq e0 (op e4 e0)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e3)) (Eq e0 (op e4 e4))))))) := by timed congr lean_s489 lean_s495
have lean_s497 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Eq e0 (op e4 e0)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e3)) (Eq e0 (op e4 e4))))))) := by timed Eq.trans lean_r152 lean_s496
let lean_s498 := by timed congr lean_s47 lean_s497
have lean_s499 : (Eq Or Or) := by timed rfl
let lean_s500 := by timed congr lean_s499 lean_r158
let lean_s501 := by timed congr lean_s499 lean_r159
let lean_s502 := by timed congr lean_s499 lean_r161
let lean_s503 := by timed congr lean_s499 lean_r163
let lean_s504 := by timed congr lean_s503 lean_r165
let lean_s505 := by timed congr lean_s502 lean_s504
let lean_s506 := by timed congr lean_s501 lean_s505
have lean_s507 : (Eq (Or (Eq (op e0 e4) e0) (Or (Eq (op e1 e4) e0) (Or (Eq (op e2 e4) e0) (Or (Eq (op e3 e4) e0) (Eq (op e4 e4) e0))))) (Or (Eq e0 (op e0 e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by timed congr lean_s500 lean_s506
have lean_s508 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0)) (Or (Eq e0 (op e0 e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by timed Eq.trans lean_r157 lean_s507
let lean_s509 := by timed congr lean_s47 lean_s508
have lean_s510 : (Eq Or Or) := by timed rfl
let lean_s511 := by timed congr lean_s510 lean_r181
let lean_s512 := by timed congr lean_s510 lean_r243
let lean_s513 := by timed congr lean_s510 lean_r166
let lean_s514 := by timed congr lean_s510 lean_r168
let lean_s515 := by timed congr lean_s514 lean_r190
let lean_s516 := by timed congr lean_s513 lean_s515
let lean_s517 := by timed congr lean_s512 lean_s516
have lean_s518 : (Eq (Or (Eq (op e4 e0) e1) (Or (Eq (op e4 e1) e1) (Or (Eq (op e4 e2) e1) (Or (Eq (op e4 e3) e1) (Eq (op e4 e4) e1))))) (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e4 e1)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e3)) (Eq e1 (op e4 e4))))))) := by timed congr lean_s511 lean_s517
have lean_s519 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e4 e1)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e3)) (Eq e1 (op e4 e4))))))) := by timed Eq.trans lean_r302 lean_s518
let lean_s520 := by timed congr lean_s47 lean_s519
have lean_s521 : (Eq Or Or) := by timed rfl
let lean_s522 := by timed congr lean_s521 lean_r171
let lean_s523 := by timed congr lean_s521 lean_r209
let lean_s524 := by timed congr lean_s521 lean_r353
let lean_s525 := by timed congr lean_s521 lean_r196
let lean_s526 := by timed congr lean_s525 lean_r190
let lean_s527 := by timed congr lean_s524 lean_s526
let lean_s528 := by timed congr lean_s523 lean_s527
have lean_s529 : (Eq (Or (Eq (op e0 e4) e1) (Or (Eq (op e1 e4) e1) (Or (Eq (op e2 e4) e1) (Or (Eq (op e3 e4) e1) (Eq (op e4 e4) e1))))) (Or (Eq e1 (op e0 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Eq e1 (op e4 e4))))))) := by timed congr lean_s522 lean_s528
have lean_s530 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)) (Or (Eq e1 (op e0 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Eq e1 (op e4 e4))))))) := by timed Eq.trans lean_r169 lean_s529
let lean_s531 := by timed congr lean_s47 lean_s530
have lean_s532 : (Eq Or Or) := by timed rfl
let lean_s533 := by timed congr lean_s532 lean_r276
let lean_s534 := by timed congr lean_s532 lean_r420
let lean_s535 := by timed congr lean_s532 lean_r256
let lean_s536 := by timed congr lean_s532 lean_r201
let lean_s537 := by timed congr lean_s536 lean_r300
let lean_s538 := by timed congr lean_s535 lean_s537
let lean_s539 := by timed congr lean_s534 lean_s538
have lean_s540 : (Eq (Or (Eq (op e4 e0) e2) (Or (Eq (op e4 e1) e2) (Or (Eq (op e4 e2) e2) (Or (Eq (op e4 e3) e2) (Eq (op e4 e4) e2))))) (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e1)) (Or (Eq e2 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Eq e2 (op e4 e4))))))) := by timed congr lean_s533 lean_s539
have lean_s541 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e1)) (Or (Eq e2 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Eq e2 (op e4 e4))))))) := by timed Eq.trans lean_r279 lean_s540
let lean_s542 := by timed congr lean_s47 lean_s541
have lean_s543 : (Eq Or Or) := by timed rfl
let lean_s544 := by timed congr lean_s543 lean_r186
let lean_s545 := by timed congr lean_s543 lean_r228
let lean_s546 := by timed congr lean_s543 lean_r212
let lean_s547 := by timed congr lean_s543 lean_r189
let lean_s548 := by timed congr lean_s547 lean_r300
let lean_s549 := by timed congr lean_s546 lean_s548
let lean_s550 := by timed congr lean_s545 lean_s549
have lean_s551 : (Eq (Or (Eq (op e0 e4) e2) (Or (Eq (op e1 e4) e2) (Or (Eq (op e2 e4) e2) (Or (Eq (op e3 e4) e2) (Eq (op e4 e4) e2))))) (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e4 e4))))))) := by timed congr lean_s544 lean_s550
have lean_s552 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)) (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e4 e4))))))) := by timed Eq.trans lean_r254 lean_s551
let lean_s553 := by timed congr lean_s47 lean_s552
have lean_s554 : (Eq Or Or) := by timed rfl
let lean_s555 := by timed congr lean_s554 lean_r208
let lean_s556 := by timed congr lean_s554 lean_r221
let lean_s557 := by timed congr lean_s554 lean_r296
let lean_s558 := by timed congr lean_s554 lean_r399
let lean_s559 := by timed congr lean_s558 lean_r288
let lean_s560 := by timed congr lean_s557 lean_s559
let lean_s561 := by timed congr lean_s556 lean_s560
have lean_s562 : (Eq (Or (Eq (op e4 e0) e3) (Or (Eq (op e4 e1) e3) (Or (Eq (op e4 e2) e3) (Or (Eq (op e4 e3) e3) (Eq (op e4 e4) e3))))) (Or (Eq e3 (op e4 e0)) (Or (Eq e3 (op e4 e1)) (Or (Eq e3 (op e4 e2)) (Or (Eq e3 (op e4 e3)) (Eq e3 (op e4 e4))))))) := by timed congr lean_s555 lean_s561
have lean_s563 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Eq e3 (op e4 e0)) (Or (Eq e3 (op e4 e1)) (Or (Eq e3 (op e4 e2)) (Or (Eq e3 (op e4 e3)) (Eq e3 (op e4 e4))))))) := by timed Eq.trans lean_r213 lean_s562
let lean_s564 := by timed congr lean_s47 lean_s563
have lean_s565 : (Eq Or Or) := by timed rfl
let lean_s566 := by timed congr lean_s565 lean_r331
let lean_s567 := by timed congr lean_s565 lean_r329
let lean_s568 := by timed congr lean_s565 lean_r231
let lean_s569 := by timed congr lean_s565 lean_r289
let lean_s570 := by timed congr lean_s569 lean_r288
let lean_s571 := by timed congr lean_s568 lean_s570
let lean_s572 := by timed congr lean_s567 lean_s571
have lean_s573 : (Eq (Or (Eq (op e0 e4) e3) (Or (Eq (op e1 e4) e3) (Or (Eq (op e2 e4) e3) (Or (Eq (op e3 e4) e3) (Eq (op e4 e4) e3))))) (Or (Eq e3 (op e0 e4)) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e2 e4)) (Or (Eq e3 (op e3 e4)) (Eq e3 (op e4 e4))))))) := by timed congr lean_s566 lean_s572
have lean_s574 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)) (Or (Eq e3 (op e0 e4)) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e2 e4)) (Or (Eq e3 (op e3 e4)) (Eq e3 (op e4 e4))))))) := by timed Eq.trans lean_r294 lean_s573
let lean_s575 := by timed congr lean_s47 lean_s574
have lean_s576 : (Eq Or Or) := by timed rfl
let lean_s577 := by timed congr lean_s576 lean_r278
let lean_s578 := by timed congr lean_s576 lean_r275
let lean_s579 := by timed congr lean_s576 lean_r262
let lean_s580 := by timed congr lean_s576 lean_r255
let lean_s581 := by timed congr lean_s580 lean_r270
let lean_s582 := by timed congr lean_s579 lean_s581
let lean_s583 := by timed congr lean_s578 lean_s582
have lean_s584 : (Eq (Or (Eq (op e4 e0) e4) (Or (Eq (op e4 e1) e4) (Or (Eq (op e4 e2) e4) (Or (Eq (op e4 e3) e4) (Eq (op e4 e4) e4))))) (Or (Eq e4 (op e4 e0)) (Or (Eq e4 (op e4 e1)) (Or (Eq e4 (op e4 e2)) (Or (Eq e4 (op e4 e3)) (Eq e4 (op e4 e4))))))) := by timed congr lean_s577 lean_s583
have lean_s585 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Eq e4 (op e4 e0)) (Or (Eq e4 (op e4 e1)) (Or (Eq e4 (op e4 e2)) (Or (Eq e4 (op e4 e3)) (Eq e4 (op e4 e4))))))) := by timed Eq.trans lean_r282 lean_s584
let lean_s586 := by timed congr lean_s47 lean_s585
have lean_s587 : (Eq Or Or) := by timed rfl
let lean_s588 := by timed congr lean_s587 lean_r273
let lean_s589 := by timed congr lean_s587 lean_r268
let lean_s590 := by timed congr lean_s587 lean_r260
let lean_s591 := by timed congr lean_s587 lean_r285
let lean_s592 := by timed congr lean_s591 lean_r270
let lean_s593 := by timed congr lean_s590 lean_s592
let lean_s594 := by timed congr lean_s589 lean_s593
have lean_s595 : (Eq (Or (Eq (op e0 e4) e4) (Or (Eq (op e1 e4) e4) (Or (Eq (op e2 e4) e4) (Or (Eq (op e3 e4) e4) (Eq (op e4 e4) e4))))) (Or (Eq e4 (op e0 e4)) (Or (Eq e4 (op e1 e4)) (Or (Eq e4 (op e2 e4)) (Or (Eq e4 (op e3 e4)) (Eq e4 (op e4 e4))))))) := by timed congr lean_s588 lean_s594
have lean_s596 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4)) (Or (Eq e4 (op e0 e4)) (Or (Eq e4 (op e1 e4)) (Or (Eq e4 (op e2 e4)) (Or (Eq e4 (op e3 e4)) (Eq e4 (op e4 e4))))))) := by timed Eq.trans lean_r150 lean_s595
let lean_s597 := by timed congr lean_s586 lean_s596
let lean_s598 := by timed congr lean_s575 lean_s597
let lean_s599 := by timed congr lean_s564 lean_s598
let lean_s600 := by timed congr lean_s553 lean_s599
let lean_s601 := by timed congr lean_s542 lean_s600
let lean_s602 := by timed congr lean_s531 lean_s601
let lean_s603 := by timed congr lean_s520 lean_s602
let lean_s604 := by timed congr lean_s509 lean_s603
let lean_s605 := by timed congr lean_s498 lean_s604
let lean_s606 := by timed congr lean_s487 lean_s605
let lean_s607 := by timed congr lean_s476 lean_s606
let lean_s608 := by timed congr lean_s465 lean_s607
let lean_s609 := by timed congr lean_s454 lean_s608
let lean_s610 := by timed congr lean_s443 lean_s609
let lean_s611 := by timed congr lean_s432 lean_s610
let lean_s612 := by timed congr lean_s421 lean_s611
let lean_s613 := by timed congr lean_s410 lean_s612
let lean_s614 := by timed congr lean_s399 lean_s613
let lean_s615 := by timed congr lean_s388 lean_s614
let lean_s616 := by timed congr lean_s377 lean_s615
let lean_s617 := by timed congr lean_s366 lean_s616
let lean_s618 := by timed congr lean_s355 lean_s617
let lean_s619 := by timed congr lean_s344 lean_s618
let lean_s620 := by timed congr lean_s333 lean_s619
let lean_s621 := by timed congr lean_s322 lean_s620
let lean_s622 := by timed congr lean_s311 lean_s621
let lean_s623 := by timed congr lean_s300 lean_s622
let lean_s624 := by timed congr lean_s289 lean_s623
let lean_s625 := by timed congr lean_s278 lean_s624
let lean_s626 := by timed congr lean_s267 lean_s625
let lean_s627 := by timed congr lean_s256 lean_s626
let lean_s628 := by timed congr lean_s245 lean_s627
let lean_s629 := by timed congr lean_s234 lean_s628
let lean_s630 := by timed congr lean_s223 lean_s629
let lean_s631 := by timed congr lean_s212 lean_s630
let lean_s632 := by timed congr lean_s201 lean_s631
let lean_s633 := by timed congr lean_s190 lean_s632
let lean_s634 := by timed congr lean_s179 lean_s633
let lean_s635 := by timed congr lean_s168 lean_s634
let lean_s636 := by timed congr lean_s157 lean_s635
let lean_s637 := by timed congr lean_s146 lean_s636
let lean_s638 := by timed congr lean_s135 lean_s637
let lean_s639 := by timed congr lean_s124 lean_s638
let lean_s640 := by timed congr lean_s113 lean_s639
let lean_s641 := by timed congr lean_s102 lean_s640
let lean_s642 := by timed congr lean_s91 lean_s641
let lean_s643 := by timed congr lean_s80 lean_s642
let lean_s644 := by timed congr lean_s69 lean_s643
have lean_s645 : (Eq (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0)) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)) (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0)) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4)) (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0)) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4)) (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0)) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (And (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4)) (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (And (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0)) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (And (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (And (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (And (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e0 e3)) (Eq e0 (op e0 e4)))))) (And (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e3 e0)) (Eq e0 (op e4 e0)))))) (And (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e0 e3)) (Eq e1 (op e0 e4)))))) (And (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e3 e0)) (Eq e1 (op e4 e0)))))) (And (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e0 e3)) (Eq e2 (op e0 e4)))))) (And (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e3 e0)) (Eq e2 (op e4 e0)))))) (And (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e0 e3)) (Eq e3 (op e0 e4)))))) (And (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e3 e0)) (Eq e3 (op e4 e0)))))) (And (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e0 e3)) (Eq e4 (op e0 e4)))))) (And (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e3 e0)) (Eq e4 (op e4 e0)))))) (And (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e1 e3)) (Eq e0 (op e1 e4)))))) (And (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e3 e1)) (Eq e0 (op e4 e1)))))) (And (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e1 e3)) (Eq e1 (op e1 e4)))))) (And (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e3 e1)) (Eq e1 (op e4 e1)))))) (And (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e1 e3)) (Eq e2 (op e1 e4)))))) (And (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e3 e1)) (Eq e2 (op e4 e1)))))) (And (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e1 e3)) (Eq e3 (op e1 e4)))))) (And (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e3 e1)) (Eq e3 (op e4 e1)))))) (And (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e1 e3)) (Eq e4 (op e1 e4)))))) (And (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e3 e1)) (Eq e4 (op e4 e1)))))) (And (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e2 e3)) (Eq e0 (op e2 e4)))))) (And (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e3 e2)) (Eq e0 (op e4 e2)))))) (And (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e2 e3)) (Eq e1 (op e2 e4)))))) (And (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e3 e2)) (Eq e1 (op e4 e2)))))) (And (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e2 e3)) (Eq e2 (op e2 e4)))))) (And (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e3 e2)) (Eq e2 (op e4 e2)))))) (And (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e2 e3)) (Eq e3 (op e2 e4)))))) (And (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e3 e2)) (Eq e3 (op e4 e2)))))) (And (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e2 e3)) (Eq e4 (op e2 e4)))))) (And (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e3 e2)) (Eq e4 (op e4 e2)))))) (And (Or (Eq e0 (op e3 e0)) (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e3 e4)))))) (And (Or (Eq e0 (op e0 e3)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e4 e3)))))) (And (Or (Eq e1 (op e3 e0)) (Or (Eq e1 (op e3 e1)) (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e3 e4)))))) (And (Or (Eq e1 (op e0 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e4 e3)))))) (And (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e1)) (Or (Eq e2 (op e3 e2)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e3 e4)))))) (And (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e4 e3)))))) (And (Or (Eq e3 (op e3 e0)) (Or (Eq e3 (op e3 e1)) (Or (Eq e3 (op e3 e2)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e3 e4)))))) (And (Or (Eq e3 (op e0 e3)) (Or (Eq e3 (op e1 e3)) (Or (Eq e3 (op e2 e3)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e4 e3)))))) (And (Or (Eq e4 (op e3 e0)) (Or (Eq e4 (op e3 e1)) (Or (Eq e4 (op e3 e2)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e3 e4)))))) (And (Or (Eq e4 (op e0 e3)) (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e2 e3)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e4 e3)))))) (And (Or (Eq e0 (op e4 e0)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e3)) (Eq e0 (op e4 e4)))))) (And (Or (Eq e0 (op e0 e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4)))))) (And (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e4 e1)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e3)) (Eq e1 (op e4 e4)))))) (And (Or (Eq e1 (op e0 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Eq e1 (op e4 e4)))))) (And (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e1)) (Or (Eq e2 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Eq e2 (op e4 e4)))))) (And (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e4 e4)))))) (And (Or (Eq e3 (op e4 e0)) (Or (Eq e3 (op e4 e1)) (Or (Eq e3 (op e4 e2)) (Or (Eq e3 (op e4 e3)) (Eq e3 (op e4 e4)))))) (And (Or (Eq e3 (op e0 e4)) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e2 e4)) (Or (Eq e3 (op e3 e4)) (Eq e3 (op e4 e4)))))) (And (Or (Eq e4 (op e4 e0)) (Or (Eq e4 (op e4 e1)) (Or (Eq e4 (op e4 e2)) (Or (Eq e4 (op e4 e3)) (Eq e4 (op e4 e4)))))) (Or (Eq e4 (op e0 e4)) (Or (Eq e4 (op e1 e4)) (Or (Eq e4 (op e2 e4)) (Or (Eq e4 (op e3 e4)) (Eq e4 (op e4 e4)))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s58 lean_s644
have lean_s646 : (Eq (And (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e1) e0)) (Eq (op e0 e2) e0)) (Eq (op e0 e3) e0)) (Eq (op e0 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e1 e0) e0)) (Eq (op e2 e0) e0)) (Eq (op e3 e0) e0)) (Eq (op e4 e0) e0))) (And (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e0 e1) e1)) (Eq (op e0 e2) e1)) (Eq (op e0 e3) e1)) (Eq (op e0 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e0) e1) (Eq (op e1 e0) e1)) (Eq (op e2 e0) e1)) (Eq (op e3 e0) e1)) (Eq (op e4 e0) e1)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e0 e1) e2)) (Eq (op e0 e2) e2)) (Eq (op e0 e3) e2)) (Eq (op e0 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e0) e2) (Eq (op e1 e0) e2)) (Eq (op e2 e0) e2)) (Eq (op e3 e0) e2)) (Eq (op e4 e0) e2)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e0 e1) e3)) (Eq (op e0 e2) e3)) (Eq (op e0 e3) e3)) (Eq (op e0 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e0) e3) (Eq (op e1 e0) e3)) (Eq (op e2 e0) e3)) (Eq (op e3 e0) e3)) (Eq (op e4 e0) e3)))) (And (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e0 e1) e4)) (Eq (op e0 e2) e4)) (Eq (op e0 e3) e4)) (Eq (op e0 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e0) e4) (Eq (op e1 e0) e4)) (Eq (op e2 e0) e4)) (Eq (op e3 e0) e4)) (Eq (op e4 e0) e4)))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e1) e0)) (Eq (op e1 e2) e0)) (Eq (op e1 e3) e0)) (Eq (op e1 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e1 e1) e0)) (Eq (op e2 e1) e0)) (Eq (op e3 e1) e0)) (Eq (op e4 e1) e0))) (And (Or (Or (Or (Or (Eq (op e1 e0) e1) (Eq (op e1 e1) e1)) (Eq (op e1 e2) e1)) (Eq (op e1 e3) e1)) (Eq (op e1 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e1) e1) (Eq (op e1 e1) e1)) (Eq (op e2 e1) e1)) (Eq (op e3 e1) e1)) (Eq (op e4 e1) e1)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e2) (Eq (op e1 e1) e2)) (Eq (op e1 e2) e2)) (Eq (op e1 e3) e2)) (Eq (op e1 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e1) e2) (Eq (op e1 e1) e2)) (Eq (op e2 e1) e2)) (Eq (op e3 e1) e2)) (Eq (op e4 e1) e2)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e3) (Eq (op e1 e1) e3)) (Eq (op e1 e2) e3)) (Eq (op e1 e3) e3)) (Eq (op e1 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e1) e3) (Eq (op e1 e1) e3)) (Eq (op e2 e1) e3)) (Eq (op e3 e1) e3)) (Eq (op e4 e1) e3)))) (And (Or (Or (Or (Or (Eq (op e1 e0) e4) (Eq (op e1 e1) e4)) (Eq (op e1 e2) e4)) (Eq (op e1 e3) e4)) (Eq (op e1 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e4) (Eq (op e1 e1) e4)) (Eq (op e2 e1) e4)) (Eq (op e3 e1) e4)) (Eq (op e4 e1) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e1) e0)) (Eq (op e2 e2) e0)) (Eq (op e2 e3) e0)) (Eq (op e2 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e1 e2) e0)) (Eq (op e2 e2) e0)) (Eq (op e3 e2) e0)) (Eq (op e4 e2) e0))) (And (Or (Or (Or (Or (Eq (op e2 e0) e1) (Eq (op e2 e1) e1)) (Eq (op e2 e2) e1)) (Eq (op e2 e3) e1)) (Eq (op e2 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e2) e1) (Eq (op e1 e2) e1)) (Eq (op e2 e2) e1)) (Eq (op e3 e2) e1)) (Eq (op e4 e2) e1)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e2) (Eq (op e2 e1) e2)) (Eq (op e2 e2) e2)) (Eq (op e2 e3) e2)) (Eq (op e2 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e2) e2) (Eq (op e1 e2) e2)) (Eq (op e2 e2) e2)) (Eq (op e3 e2) e2)) (Eq (op e4 e2) e2)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e3) (Eq (op e2 e1) e3)) (Eq (op e2 e2) e3)) (Eq (op e2 e3) e3)) (Eq (op e2 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e2) e3) (Eq (op e1 e2) e3)) (Eq (op e2 e2) e3)) (Eq (op e3 e2) e3)) (Eq (op e4 e2) e3)))) (And (Or (Or (Or (Or (Eq (op e2 e0) e4) (Eq (op e2 e1) e4)) (Eq (op e2 e2) e4)) (Eq (op e2 e3) e4)) (Eq (op e2 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e2) e4) (Eq (op e1 e2) e4)) (Eq (op e2 e2) e4)) (Eq (op e3 e2) e4)) (Eq (op e4 e2) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e1) e0)) (Eq (op e3 e2) e0)) (Eq (op e3 e3) e0)) (Eq (op e3 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e1 e3) e0)) (Eq (op e2 e3) e0)) (Eq (op e3 e3) e0)) (Eq (op e4 e3) e0))) (And (Or (Or (Or (Or (Eq (op e3 e0) e1) (Eq (op e3 e1) e1)) (Eq (op e3 e2) e1)) (Eq (op e3 e3) e1)) (Eq (op e3 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e3) e1) (Eq (op e1 e3) e1)) (Eq (op e2 e3) e1)) (Eq (op e3 e3) e1)) (Eq (op e4 e3) e1)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e2) (Eq (op e3 e1) e2)) (Eq (op e3 e2) e2)) (Eq (op e3 e3) e2)) (Eq (op e3 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e3) e2) (Eq (op e1 e3) e2)) (Eq (op e2 e3) e2)) (Eq (op e3 e3) e2)) (Eq (op e4 e3) e2)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e3) (Eq (op e3 e1) e3)) (Eq (op e3 e2) e3)) (Eq (op e3 e3) e3)) (Eq (op e3 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e3) e3) (Eq (op e1 e3) e3)) (Eq (op e2 e3) e3)) (Eq (op e3 e3) e3)) (Eq (op e4 e3) e3)))) (And (Or (Or (Or (Or (Eq (op e3 e0) e4) (Eq (op e3 e1) e4)) (Eq (op e3 e2) e4)) (Eq (op e3 e3) e4)) (Eq (op e3 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e3) e4) (Eq (op e1 e3) e4)) (Eq (op e2 e3) e4)) (Eq (op e3 e3) e4)) (Eq (op e4 e3) e4))))) (And (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e1) e0)) (Eq (op e4 e2) e0)) (Eq (op e4 e3) e0)) (Eq (op e4 e4) e0)) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e1 e4) e0)) (Eq (op e2 e4) e0)) (Eq (op e3 e4) e0)) (Eq (op e4 e4) e0))) (And (Or (Or (Or (Or (Eq (op e4 e0) e1) (Eq (op e4 e1) e1)) (Eq (op e4 e2) e1)) (Eq (op e4 e3) e1)) (Eq (op e4 e4) e1)) (Or (Or (Or (Or (Eq (op e0 e4) e1) (Eq (op e1 e4) e1)) (Eq (op e2 e4) e1)) (Eq (op e3 e4) e1)) (Eq (op e4 e4) e1)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e2) (Eq (op e4 e1) e2)) (Eq (op e4 e2) e2)) (Eq (op e4 e3) e2)) (Eq (op e4 e4) e2)) (Or (Or (Or (Or (Eq (op e0 e4) e2) (Eq (op e1 e4) e2)) (Eq (op e2 e4) e2)) (Eq (op e3 e4) e2)) (Eq (op e4 e4) e2)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e3) (Eq (op e4 e1) e3)) (Eq (op e4 e2) e3)) (Eq (op e4 e3) e3)) (Eq (op e4 e4) e3)) (Or (Or (Or (Or (Eq (op e0 e4) e3) (Eq (op e1 e4) e3)) (Eq (op e2 e4) e3)) (Eq (op e3 e4) e3)) (Eq (op e4 e4) e3)))) (And (Or (Or (Or (Or (Eq (op e4 e0) e4) (Eq (op e4 e1) e4)) (Eq (op e4 e2) e4)) (Eq (op e4 e3) e4)) (Eq (op e4 e4) e4)) (Or (Or (Or (Or (Eq (op e0 e4) e4) (Eq (op e1 e4) e4)) (Eq (op e2 e4) e4)) (Eq (op e3 e4) e4)) (Eq (op e4 e4) e4))))) (And (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e0 e3)) (Eq e0 (op e0 e4)))))) (And (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e3 e0)) (Eq e0 (op e4 e0)))))) (And (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e0 e3)) (Eq e1 (op e0 e4)))))) (And (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e3 e0)) (Eq e1 (op e4 e0)))))) (And (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e0 e3)) (Eq e2 (op e0 e4)))))) (And (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e3 e0)) (Eq e2 (op e4 e0)))))) (And (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e0 e3)) (Eq e3 (op e0 e4)))))) (And (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e3 e0)) (Eq e3 (op e4 e0)))))) (And (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e0 e3)) (Eq e4 (op e0 e4)))))) (And (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e3 e0)) (Eq e4 (op e4 e0)))))) (And (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e1 e3)) (Eq e0 (op e1 e4)))))) (And (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e3 e1)) (Eq e0 (op e4 e1)))))) (And (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e1 e3)) (Eq e1 (op e1 e4)))))) (And (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e3 e1)) (Eq e1 (op e4 e1)))))) (And (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e1 e3)) (Eq e2 (op e1 e4)))))) (And (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e3 e1)) (Eq e2 (op e4 e1)))))) (And (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e1 e3)) (Eq e3 (op e1 e4)))))) (And (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e3 e1)) (Eq e3 (op e4 e1)))))) (And (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e1 e3)) (Eq e4 (op e1 e4)))))) (And (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e3 e1)) (Eq e4 (op e4 e1)))))) (And (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e2 e3)) (Eq e0 (op e2 e4)))))) (And (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e3 e2)) (Eq e0 (op e4 e2)))))) (And (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e2 e3)) (Eq e1 (op e2 e4)))))) (And (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e3 e2)) (Eq e1 (op e4 e2)))))) (And (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e2 e3)) (Eq e2 (op e2 e4)))))) (And (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e3 e2)) (Eq e2 (op e4 e2)))))) (And (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e2 e3)) (Eq e3 (op e2 e4)))))) (And (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e3 e2)) (Eq e3 (op e4 e2)))))) (And (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e2 e3)) (Eq e4 (op e2 e4)))))) (And (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e3 e2)) (Eq e4 (op e4 e2)))))) (And (Or (Eq e0 (op e3 e0)) (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e3 e4)))))) (And (Or (Eq e0 (op e0 e3)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e4 e3)))))) (And (Or (Eq e1 (op e3 e0)) (Or (Eq e1 (op e3 e1)) (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e3 e4)))))) (And (Or (Eq e1 (op e0 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e4 e3)))))) (And (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e1)) (Or (Eq e2 (op e3 e2)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e3 e4)))))) (And (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e4 e3)))))) (And (Or (Eq e3 (op e3 e0)) (Or (Eq e3 (op e3 e1)) (Or (Eq e3 (op e3 e2)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e3 e4)))))) (And (Or (Eq e3 (op e0 e3)) (Or (Eq e3 (op e1 e3)) (Or (Eq e3 (op e2 e3)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e4 e3)))))) (And (Or (Eq e4 (op e3 e0)) (Or (Eq e4 (op e3 e1)) (Or (Eq e4 (op e3 e2)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e3 e4)))))) (And (Or (Eq e4 (op e0 e3)) (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e2 e3)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e4 e3)))))) (And (Or (Eq e0 (op e4 e0)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e3)) (Eq e0 (op e4 e4)))))) (And (Or (Eq e0 (op e0 e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4)))))) (And (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e4 e1)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e3)) (Eq e1 (op e4 e4)))))) (And (Or (Eq e1 (op e0 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Eq e1 (op e4 e4)))))) (And (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e1)) (Or (Eq e2 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Eq e2 (op e4 e4)))))) (And (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e4 e4)))))) (And (Or (Eq e3 (op e4 e0)) (Or (Eq e3 (op e4 e1)) (Or (Eq e3 (op e4 e2)) (Or (Eq e3 (op e4 e3)) (Eq e3 (op e4 e4)))))) (And (Or (Eq e3 (op e0 e4)) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e2 e4)) (Or (Eq e3 (op e3 e4)) (Eq e3 (op e4 e4)))))) (And (Or (Eq e4 (op e4 e0)) (Or (Eq e4 (op e4 e1)) (Or (Eq e4 (op e4 e2)) (Or (Eq e4 (op e4 e3)) (Eq e4 (op e4 e4)))))) (Or (Eq e4 (op e0 e4)) (Or (Eq e4 (op e1 e4)) (Or (Eq e4 (op e2 e4)) (Or (Eq e4 (op e3 e4)) (Eq e4 (op e4 e4)))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_r376 lean_s645
have lean_s647 : (And (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e0 e3)) (Eq e0 (op e0 e4)))))) (And (Or (Eq e0 (op e0 e0)) (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e3 e0)) (Eq e0 (op e4 e0)))))) (And (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e0 e3)) (Eq e1 (op e0 e4)))))) (And (Or (Eq e1 (op e0 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e3 e0)) (Eq e1 (op e4 e0)))))) (And (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e0 e3)) (Eq e2 (op e0 e4)))))) (And (Or (Eq e2 (op e0 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e3 e0)) (Eq e2 (op e4 e0)))))) (And (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e0 e3)) (Eq e3 (op e0 e4)))))) (And (Or (Eq e3 (op e0 e0)) (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e3 e0)) (Eq e3 (op e4 e0)))))) (And (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e0 e3)) (Eq e4 (op e0 e4)))))) (And (Or (Eq e4 (op e0 e0)) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e3 e0)) (Eq e4 (op e4 e0)))))) (And (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e1 e3)) (Eq e0 (op e1 e4)))))) (And (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e3 e1)) (Eq e0 (op e4 e1)))))) (And (Or (Eq e1 (op e1 e0)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e1 e3)) (Eq e1 (op e1 e4)))))) (And (Or (Eq e1 (op e0 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e3 e1)) (Eq e1 (op e4 e1)))))) (And (Or (Eq e2 (op e1 e0)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e1 e3)) (Eq e2 (op e1 e4)))))) (And (Or (Eq e2 (op e0 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e3 e1)) (Eq e2 (op e4 e1)))))) (And (Or (Eq e3 (op e1 e0)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e1 e3)) (Eq e3 (op e1 e4)))))) (And (Or (Eq e3 (op e0 e1)) (Or (Eq e3 (op e1 e1)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e3 e1)) (Eq e3 (op e4 e1)))))) (And (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e1 e3)) (Eq e4 (op e1 e4)))))) (And (Or (Eq e4 (op e0 e1)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e3 e1)) (Eq e4 (op e4 e1)))))) (And (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e2 e3)) (Eq e0 (op e2 e4)))))) (And (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e3 e2)) (Eq e0 (op e4 e2)))))) (And (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e2 e3)) (Eq e1 (op e2 e4)))))) (And (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e3 e2)) (Eq e1 (op e4 e2)))))) (And (Or (Eq e2 (op e2 e0)) (Or (Eq e2 (op e2 e1)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e2 e3)) (Eq e2 (op e2 e4)))))) (And (Or (Eq e2 (op e0 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e2 (op e3 e2)) (Eq e2 (op e4 e2)))))) (And (Or (Eq e3 (op e2 e0)) (Or (Eq e3 (op e2 e1)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e2 e3)) (Eq e3 (op e2 e4)))))) (And (Or (Eq e3 (op e0 e2)) (Or (Eq e3 (op e1 e2)) (Or (Eq e3 (op e2 e2)) (Or (Eq e3 (op e3 e2)) (Eq e3 (op e4 e2)))))) (And (Or (Eq e4 (op e2 e0)) (Or (Eq e4 (op e2 e1)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e2 e3)) (Eq e4 (op e2 e4)))))) (And (Or (Eq e4 (op e0 e2)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e2 e2)) (Or (Eq e4 (op e3 e2)) (Eq e4 (op e4 e2)))))) (And (Or (Eq e0 (op e3 e0)) (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e3 e4)))))) (And (Or (Eq e0 (op e0 e3)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e4 e3)))))) (And (Or (Eq e1 (op e3 e0)) (Or (Eq e1 (op e3 e1)) (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e3 e4)))))) (And (Or (Eq e1 (op e0 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e4 e3)))))) (And (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e1)) (Or (Eq e2 (op e3 e2)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e3 e4)))))) (And (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e4 e3)))))) (And (Or (Eq e3 (op e3 e0)) (Or (Eq e3 (op e3 e1)) (Or (Eq e3 (op e3 e2)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e3 e4)))))) (And (Or (Eq e3 (op e0 e3)) (Or (Eq e3 (op e1 e3)) (Or (Eq e3 (op e2 e3)) (Or (Eq e3 (op e3 e3)) (Eq e3 (op e4 e3)))))) (And (Or (Eq e4 (op e3 e0)) (Or (Eq e4 (op e3 e1)) (Or (Eq e4 (op e3 e2)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e3 e4)))))) (And (Or (Eq e4 (op e0 e3)) (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e2 e3)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e4 e3)))))) (And (Or (Eq e0 (op e4 e0)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e3)) (Eq e0 (op e4 e4)))))) (And (Or (Eq e0 (op e0 e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4)))))) (And (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e4 e1)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e3)) (Eq e1 (op e4 e4)))))) (And (Or (Eq e1 (op e0 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Eq e1 (op e4 e4)))))) (And (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e1)) (Or (Eq e2 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Eq e2 (op e4 e4)))))) (And (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e4 e4)))))) (And (Or (Eq e3 (op e4 e0)) (Or (Eq e3 (op e4 e1)) (Or (Eq e3 (op e4 e2)) (Or (Eq e3 (op e4 e3)) (Eq e3 (op e4 e4)))))) (And (Or (Eq e3 (op e0 e4)) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e2 e4)) (Or (Eq e3 (op e3 e4)) (Eq e3 (op e4 e4)))))) (And (Or (Eq e4 (op e4 e0)) (Or (Eq e4 (op e4 e1)) (Or (Eq e4 (op e4 e2)) (Or (Eq e4 (op e4 e3)) (Eq e4 (op e4 e4)))))) (Or (Eq e4 (op e0 e4)) (Or (Eq e4 (op e1 e4)) (Or (Eq e4 (op e2 e4)) (Or (Eq e4 (op e3 e4)) (Eq e4 (op e4 e4))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a431 lean_s646
have lean_s648 : (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e1)) (Or (Eq e2 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Eq e2 (op e4 e4)))))) := by andElim lean_s647, 44
have lean_s649 : (Or (Eq e2 (op e4 e1)) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e2)) (Eq e2 (op e4 e4)))))) := by permutateOr lean_s648, [1, 3, 0, 2, 4], (- 1)
let lean_s650 := by R2 lean_s46, lean_s649, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
have lean_s651 : (Or (And (Not (Eq (op e2 e2) (op e4 e2))) (Eq e2 (op e2 e2))) (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Not (Eq e2 (op e2 e2))))) := by timed cnfAndNeg [(Not (Eq (op e2 e2) (op e4 e2))), (Eq e2 (op e2 e2))]
have lean_s652 : (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e2))))) :=
  (scope (fun lean_a566 : (Not (Eq (op e2 e2) (op e4 e2))) =>
    (scope (fun lean_a567 : (Eq e2 (op e2 e2)) =>
      have lean_s652 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a567
      have lean_s653 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s652
      let lean_s654 := by timed flipCongrArg lean_s653 [Eq]
      have lean_s655 : (Eq (op e4 e2) (op e4 e2)) := by timed rfl
      have lean_s656 : (Eq (Eq e2 (op e4 e2)) (Eq (op e2 e2) (op e4 e2))) := by timed congr lean_s654 lean_s655
      have lean_s657 : (Eq (Eq (op e2 e2) (op e4 e2)) False) := by timed falseIntro lean_a566
      have lean_s658 : (Eq (Eq e2 (op e4 e2)) False) := by timed Eq.trans lean_s656 lean_s657
      have lean_s659 : (Not (Eq e2 (op e4 e2))) := by timed falseElim lean_s658
      show (Not (Eq e2 (op e4 e2))) from lean_s659
  ))))
have lean_s653 : (Implies (And (Not (Eq (op e2 e2) (op e4 e2))) (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e2)))) := by liftOrNToImp lean_s652, 2
have lean_s654 : (Or (Not (And (Not (Eq (op e2 e2) (op e4 e2))) (Eq e2 (op e2 e2)))) (Not (Eq e2 (op e4 e2)))) := by timed impliesElim lean_s653
have lean_s655 : (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e2))))) := by R1 lean_s651, lean_s654, (And (Not (Eq (op e2 e2) (op e4 e2))) (Eq e2 (op e2 e2))), [(- 1), (- 1)]
have lean_s656 : (Eq Or Or) := by timed rfl
have lean_s657 : (Eq (Eq (op e2 e2) (op e4 e2)) (Eq (op e2 e2) (op e4 e2))) := by timed rfl
let lean_s658 := by timed flipCongrArg lean_s657 [Eq]
have lean_s659 : (Eq (Eq (Eq (op e2 e2) (op e4 e2)) (Not (Not (Eq (op e2 e2) (op e4 e2))))) (Eq (Eq (op e2 e2) (op e4 e2)) (Eq (op e2 e2) (op e4 e2)))) := by timed congr lean_s658 lean_r215
have lean_s660 : (Eq (Eq (Eq (op e2 e2) (op e4 e2)) (Not (Not (Eq (op e2 e2) (op e4 e2))))) True) := by timed Eq.trans lean_s659 lean_r374
have lean_s661 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Eq (op e2 e2) (op e4 e2))) True) := by timed Eq.trans lean_r366 lean_s660
have lean_s662 : (Eq (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Eq (op e2 e2) (op e4 e2))) := by timed trueElim lean_s661
let lean_s663 := by timed congr lean_s656 lean_s662
let lean_s664 := by timed congr lean_s656 lean_s13
have lean_s665 : (Eq (Not (Eq e2 (op e4 e2))) (Not (Eq e2 (op e4 e2)))) := by timed rfl
let lean_s666 := by timed congr lean_s664 lean_s665
have lean_s667 : (Eq (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e2))))) (Or (Eq (op e2 e2) (op e4 e2)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e2)))))) := by timed congr lean_s663 lean_s666
have lean_s668 : (Or (Eq (op e2 e2) (op e4 e2)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e2))))) := by timed eqResolve lean_s655 lean_s667
have lean_s669 : (Not (Eq (op e2 e2) (op e4 e2))) := by andElim lean_s29, 28
let lean_s670 := by R1 lean_s668, lean_s669, (Eq (op e2 e2) (op e4 e2)), [(- 1), 0]
have lean_s671 : (Not (Eq e2 (op e4 e2))) := by R2 lean_s670, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s672 := by R1 lean_s650, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
have lean_s673 : (Or (And (Eq e2 (op e4 e4)) (Eq e4 (op e4 e4))) (Or (Not (Eq e2 (op e4 e4))) (Not (Eq e4 (op e4 e4))))) := by timed cnfAndNeg [(Eq e2 (op e4 e4)), (Eq e4 (op e4 e4))]
have lean_s674 : (Or (Not (Eq e2 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e2))) :=
  (scope (fun lean_a567 : (Eq e2 (op e4 e4)) =>
    (scope (fun lean_a568 : (Eq e4 (op e4 e4)) =>
      have lean_s674 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a568
      have lean_s675 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s674
      have lean_s676 : (Eq (op e4 e4) e2) := by timed Eq.symm lean_a567
      have lean_s677 : (Eq e4 e2) := by timed Eq.trans lean_s675 lean_s676
      show (Eq e4 e2) from lean_s677
  ))))
have lean_s675 : (Implies (And (Eq e2 (op e4 e4)) (Eq e4 (op e4 e4))) (Eq e4 e2)) := by liftOrNToImp lean_s674, 2
have lean_s676 : (Or (Not (And (Eq e2 (op e4 e4)) (Eq e4 (op e4 e4)))) (Eq e4 e2)) := by timed impliesElim lean_s675
have lean_s677 : (Or (Not (Eq e2 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e2))) := by R1 lean_s673, lean_s676, (And (Eq e2 (op e4 e4)) (Eq e4 (op e4 e4))), [(- 1), (- 1)]
have lean_s678 : (Or (Eq e4 e2) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e2 (op e4 e4))))) := by permutateOr lean_s677, [2, 1, 0], (- 1)
have lean_s679 : (Eq And And) := by timed rfl
have lean_s680 : (Eq (Not (Eq e0 e1)) (Not (Eq e1 e0))) := by timed flipCongrArg lean_r205 [Not]
let lean_s681 := by timed congr lean_s679 lean_s680
have lean_s682 : (Eq (Not (Eq e0 e2)) (Not (Eq e2 e0))) := by timed flipCongrArg lean_r194 [Not]
let lean_s683 := by timed congr lean_s679 lean_s682
have lean_s684 : (Eq (Not (Eq e0 e3)) (Not (Eq e3 e0))) := by timed flipCongrArg lean_r284 [Not]
let lean_s685 := by timed congr lean_s679 lean_s684
have lean_s686 : (Eq (Not (Eq e0 e4)) (Not (Eq e4 e0))) := by timed flipCongrArg lean_r218 [Not]
let lean_s687 := by timed congr lean_s679 lean_s686
have lean_s688 : (Eq (Not (Eq e1 e2)) (Not (Eq e2 e1))) := by timed flipCongrArg lean_r230 [Not]
let lean_s689 := by timed congr lean_s679 lean_s688
have lean_s690 : (Eq (Not (Eq e1 e3)) (Not (Eq e3 e1))) := by timed flipCongrArg lean_r240 [Not]
let lean_s691 := by timed congr lean_s679 lean_s690
have lean_s692 : (Eq (Not (Eq e1 e4)) (Not (Eq e4 e1))) := by timed flipCongrArg lean_r187 [Not]
let lean_s693 := by timed congr lean_s679 lean_s692
have lean_s694 : (Eq (Not (Eq e2 e3)) (Not (Eq e3 e2))) := by timed flipCongrArg lean_r184 [Not]
let lean_s695 := by timed congr lean_s679 lean_s694
have lean_s696 : (Eq (Not (Eq e2 e4)) (Not (Eq e4 e2))) := by timed flipCongrArg lean_r225 [Not]
let lean_s697 := by timed congr lean_s679 lean_s696
have lean_s698 : (Eq (Not (Eq e3 e4)) (Not (Eq e4 e3))) := by timed flipCongrArg lean_r323 [Not]
let lean_s699 := by timed congr lean_s697 lean_s698
let lean_s700 := by timed congr lean_s695 lean_s699
let lean_s701 := by timed congr lean_s693 lean_s700
let lean_s702 := by timed congr lean_s691 lean_s701
let lean_s703 := by timed congr lean_s689 lean_s702
let lean_s704 := by timed congr lean_s687 lean_s703
let lean_s705 := by timed congr lean_s685 lean_s704
let lean_s706 := by timed congr lean_s683 lean_s705
have lean_s707 : (Eq (And (Not (Eq e0 e1)) (And (Not (Eq e0 e2)) (And (Not (Eq e0 e3)) (And (Not (Eq e0 e4)) (And (Not (Eq e1 e2)) (And (Not (Eq e1 e3)) (And (Not (Eq e1 e4)) (And (Not (Eq e2 e3)) (And (Not (Eq e2 e4)) (Not (Eq e3 e4))))))))))) (And (Not (Eq e1 e0)) (And (Not (Eq e2 e0)) (And (Not (Eq e3 e0)) (And (Not (Eq e4 e0)) (And (Not (Eq e2 e1)) (And (Not (Eq e3 e1)) (And (Not (Eq e4 e1)) (And (Not (Eq e3 e2)) (And (Not (Eq e4 e2)) (Not (Eq e4 e3)))))))))))) := by timed congr lean_s681 lean_s706
have lean_s708 : (Eq (And (And (And (And (And (And (And (And (And (Not (Eq e0 e1)) (Not (Eq e0 e2))) (Not (Eq e0 e3))) (Not (Eq e0 e4))) (Not (Eq e1 e2))) (Not (Eq e1 e3))) (Not (Eq e1 e4))) (Not (Eq e2 e3))) (Not (Eq e2 e4))) (Not (Eq e3 e4))) (And (Not (Eq e1 e0)) (And (Not (Eq e2 e0)) (And (Not (Eq e3 e0)) (And (Not (Eq e4 e0)) (And (Not (Eq e2 e1)) (And (Not (Eq e3 e1)) (And (Not (Eq e4 e1)) (And (Not (Eq e3 e2)) (And (Not (Eq e4 e2)) (Not (Eq e4 e3)))))))))))) := by timed Eq.trans lean_r297 lean_s707
have lean_s709 : (And (Not (Eq e1 e0)) (And (Not (Eq e2 e0)) (And (Not (Eq e3 e0)) (And (Not (Eq e4 e0)) (And (Not (Eq e2 e1)) (And (Not (Eq e3 e1)) (And (Not (Eq e4 e1)) (And (Not (Eq e3 e2)) (And (Not (Eq e4 e2)) (Not (Eq e4 e3))))))))))) := by timed eqResolve lean_a440 lean_s708
have lean_s710 : (Not (Eq e4 e2)) := by andElim lean_s709, 8
let lean_s711 := by R1 lean_s678, lean_s710, (Eq e4 e2), [(- 1), 0]
have lean_s712 : (Eq e4 (op e4 e4)) := by andElim lean_s42, 4
have lean_s713 : (Not (Eq e2 (op e4 e4))) := by R2 lean_s711, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s714 := by R1 lean_s672, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s715 : (Or (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2))))) (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e2))))))) := by timed cnfAndNeg [(Not (Eq e0 (op e3 e4))), (Eq e1 (op e3 e4)), (Eq e1 (op e1 e1)), (Eq e1 (op e4 e2))]
have lean_s716 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2))))))) :=
  (scope (fun lean_a569 : (Not (Eq e0 (op e3 e4))) =>
    (scope (fun lean_a570 : (Eq e1 (op e3 e4)) =>
      (scope (fun lean_a571 : (Eq e1 (op e1 e1)) =>
        (scope (fun lean_a572 : (Eq e1 (op e4 e2)) =>
          have lean_s716 : (Eq e0 e0) := by timed rfl
          let lean_s717 := by timed flipCongrArg lean_s716 [Eq]
          have lean_s718 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a571
          have lean_s719 : (Eq (op e3 e4) e1) := by timed Eq.symm lean_a570
          have lean_s720 : (Eq e1 (op e3 e4)) := by timed Eq.symm lean_s719
          have lean_s721 : (Eq (op e1 e1) (op e3 e4)) := by timed Eq.trans lean_s718 lean_s720
          have lean_s722 : (Eq (op e3 e4) (op e1 e1)) := by timed Eq.symm lean_s721
          have lean_s723 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a572
          have lean_s724 : (Eq e1 (op e4 e2)) := by timed Eq.symm lean_s723
          have lean_s725 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_s724
          have lean_s726 : (Eq (op e4 e2) (op e1 e1)) := by timed Eq.trans lean_s725 lean_a571
          have lean_s727 : (Eq (op e1 e1) (op e4 e2)) := by timed Eq.symm lean_s726
          have lean_s728 : (Eq (op e3 e4) (op e4 e2)) := by timed Eq.trans lean_s722 lean_s727
          have lean_s729 : (Eq (op e4 e2) (op e3 e4)) := by timed Eq.symm lean_s728
          have lean_s730 : (Eq (Eq e0 (op e4 e2)) (Eq e0 (op e3 e4))) := by timed congr lean_s717 lean_s729
          have lean_s731 : (Eq (Eq e0 (op e3 e4)) False) := by timed falseIntro lean_a569
          have lean_s732 : (Eq (Eq e0 (op e4 e2)) False) := by timed Eq.trans lean_s730 lean_s731
          have lean_s733 : (Not (Eq e0 (op e4 e2))) := by timed falseElim lean_s732
          show (Not (Eq e0 (op e4 e2))) from lean_s733
  ))))))))
have lean_s717 : (Implies (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2))))) (Not (Eq e0 (op e4 e2)))) := by liftOrNToImp lean_s716, 4
have lean_s718 : (Or (Not (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2)))))) (Not (Eq e0 (op e4 e2)))) := by timed impliesElim lean_s717
have lean_s719 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2))))))) := by R1 lean_s715, lean_s718, (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2))))), [(- 1), (- 1)]
have lean_s720 : (Eq Or Or) := by timed rfl
have lean_s721 : (Eq (Eq e0 (op e3 e4)) (Eq e0 (op e3 e4))) := by timed rfl
let lean_s722 := by timed flipCongrArg lean_s721 [Eq]
have lean_s723 : (Eq (Eq (Eq e0 (op e3 e4)) (Not (Not (Eq e0 (op e3 e4))))) (Eq (Eq e0 (op e3 e4)) (Eq e0 (op e3 e4)))) := by timed congr lean_s722 lean_r50
have lean_s724 : (Eq (Eq (Eq e0 (op e3 e4)) (Not (Not (Eq e0 (op e3 e4))))) True) := by timed Eq.trans lean_s723 lean_r386
have lean_s725 : (Eq (Eq (Not (Not (Eq e0 (op e3 e4)))) (Eq e0 (op e3 e4))) True) := by timed Eq.trans lean_r49 lean_s724
have lean_s726 : (Eq (Not (Not (Eq e0 (op e3 e4)))) (Eq e0 (op e3 e4))) := by timed trueElim lean_s725
let lean_s727 := by timed congr lean_s720 lean_s726
have lean_s728 : (Eq (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e3 e4)))) := by timed rfl
let lean_s729 := by timed congr lean_s720 lean_s728
have lean_s730 : (Eq (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e1)))) := by timed rfl
let lean_s731 := by timed congr lean_s720 lean_s730
have lean_s732 : (Eq (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e2)))) := by timed rfl
let lean_s733 := by timed congr lean_s720 lean_s732
have lean_s734 : (Eq (Not (Eq e0 (op e4 e2))) (Not (Eq e0 (op e4 e2)))) := by timed rfl
let lean_s735 := by timed congr lean_s733 lean_s734
let lean_s736 := by timed congr lean_s731 lean_s735
let lean_s737 := by timed congr lean_s729 lean_s736
have lean_s738 : (Eq (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2))))))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2)))))))) := by timed congr lean_s727 lean_s737
have lean_s739 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2))))))) := by timed eqResolve lean_s719 lean_s738
have lean_s740 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e1 (op e4 e2))))))) := by permutateOr lean_s739, [0, 2, 1, 4, 3], (- 1)
have lean_s741 : (Eq e1 (op e1 e1)) := by andElim lean_s42, 1
let lean_s742 := by R2 lean_s740, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s743 : (Or (Eq e0 (op e4 e0)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e3)) (Eq e0 (op e4 e4)))))) := by andElim lean_s647, 40
have lean_s744 : (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e0)) (Eq e0 (op e4 e4)))))) := by permutateOr lean_s743, [2, 3, 1, 0, 4], (- 1)
let lean_s745 := by R2 lean_s742, lean_s744, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
have lean_s746 : (Or (And (Not (Eq (op e0 e0) (op e4 e0))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e4 e0))), (Eq e0 (op e0 e0))]
have lean_s747 : (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e0))))) :=
  (scope (fun lean_a573 : (Not (Eq (op e0 e0) (op e4 e0))) =>
    (scope (fun lean_a574 : (Eq e0 (op e0 e0)) =>
      have lean_s747 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a574
      have lean_s748 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s747
      let lean_s749 := by timed flipCongrArg lean_s748 [Eq]
      have lean_s750 : (Eq (op e4 e0) (op e4 e0)) := by timed rfl
      have lean_s751 : (Eq (Eq e0 (op e4 e0)) (Eq (op e0 e0) (op e4 e0))) := by timed congr lean_s749 lean_s750
      have lean_s752 : (Eq (Eq (op e0 e0) (op e4 e0)) False) := by timed falseIntro lean_a573
      have lean_s753 : (Eq (Eq e0 (op e4 e0)) False) := by timed Eq.trans lean_s751 lean_s752
      have lean_s754 : (Not (Eq e0 (op e4 e0))) := by timed falseElim lean_s753
      show (Not (Eq e0 (op e4 e0))) from lean_s754
  ))))
have lean_s748 : (Implies (And (Not (Eq (op e0 e0) (op e4 e0))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e0)))) := by liftOrNToImp lean_s747, 2
have lean_s749 : (Or (Not (And (Not (Eq (op e0 e0) (op e4 e0))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e4 e0)))) := by timed impliesElim lean_s748
have lean_s750 : (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e0))))) := by R1 lean_s746, lean_s749, (And (Not (Eq (op e0 e0) (op e4 e0))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s751 : (Eq Or Or) := by timed rfl
have lean_s752 : (Eq (Eq (op e0 e0) (op e4 e0)) (Eq (op e0 e0) (op e4 e0))) := by timed rfl
let lean_s753 := by timed flipCongrArg lean_s752 [Eq]
have lean_s754 : (Eq (Eq (Eq (op e0 e0) (op e4 e0)) (Not (Not (Eq (op e0 e0) (op e4 e0))))) (Eq (Eq (op e0 e0) (op e4 e0)) (Eq (op e0 e0) (op e4 e0)))) := by timed congr lean_s753 lean_r397
have lean_s755 : (Eq (Eq (Eq (op e0 e0) (op e4 e0)) (Not (Not (Eq (op e0 e0) (op e4 e0))))) True) := by timed Eq.trans lean_s754 lean_r391
have lean_s756 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Eq (op e0 e0) (op e4 e0))) True) := by timed Eq.trans lean_r405 lean_s755
have lean_s757 : (Eq (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Eq (op e0 e0) (op e4 e0))) := by timed trueElim lean_s756
let lean_s758 := by timed congr lean_s751 lean_s757
have lean_s759 : (Eq (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e0)))) := by timed rfl
let lean_s760 := by timed congr lean_s751 lean_s759
have lean_s761 : (Eq (Not (Eq e0 (op e4 e0))) (Not (Eq e0 (op e4 e0)))) := by timed rfl
let lean_s762 := by timed congr lean_s760 lean_s761
have lean_s763 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e0))))) (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e0)))))) := by timed congr lean_s758 lean_s762
have lean_s764 : (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e0))))) := by timed eqResolve lean_s750 lean_s763
have lean_s765 : (Not (Eq (op e0 e0) (op e4 e0))) := by andElim lean_s29, 3
let lean_s766 := by R1 lean_s764, lean_s765, (Eq (op e0 e0) (op e4 e0)), [(- 1), 0]
have lean_s767 : (Eq e0 (op e0 e0)) := by andElim lean_s42, 0
have lean_s768 : (Not (Eq e0 (op e4 e0))) := by R2 lean_s766, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s769 := by R1 lean_s745, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s770 : (Or (And (Not (Eq e1 e0)) (Eq e0 (op e3 e4))) (Or (Not (Not (Eq e1 e0))) (Not (Eq e0 (op e3 e4))))) := by timed cnfAndNeg [(Not (Eq e1 e0)), (Eq e0 (op e3 e4))]
have lean_s771 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e3 e4))))) :=
  (scope (fun lean_a575 : (Not (Eq e1 e0)) =>
    (scope (fun lean_a576 : (Eq e0 (op e3 e4)) =>
      have lean_s771 : (Eq e1 e1) := by timed rfl
      let lean_s772 := by timed flipCongrArg lean_s771 [Eq]
      have lean_s773 : (Eq (op e3 e4) e0) := by timed Eq.symm lean_a576
      have lean_s774 : (Eq (Eq e1 (op e3 e4)) (Eq e1 e0)) := by timed congr lean_s772 lean_s773
      have lean_s775 : (Eq (Eq e1 e0) False) := by timed falseIntro lean_a575
      have lean_s776 : (Eq (Eq e1 (op e3 e4)) False) := by timed Eq.trans lean_s774 lean_s775
      have lean_s777 : (Not (Eq e1 (op e3 e4))) := by timed falseElim lean_s776
      show (Not (Eq e1 (op e3 e4))) from lean_s777
  ))))
have lean_s772 : (Implies (And (Not (Eq e1 e0)) (Eq e0 (op e3 e4))) (Not (Eq e1 (op e3 e4)))) := by liftOrNToImp lean_s771, 2
have lean_s773 : (Or (Not (And (Not (Eq e1 e0)) (Eq e0 (op e3 e4)))) (Not (Eq e1 (op e3 e4)))) := by timed impliesElim lean_s772
have lean_s774 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e3 e4))))) := by R1 lean_s770, lean_s773, (And (Not (Eq e1 e0)) (Eq e0 (op e3 e4))), [(- 1), (- 1)]
have lean_s775 : (Eq Or Or) := by timed rfl
have lean_s776 : (Eq (Eq e1 e0) (Eq e1 e0)) := by timed rfl
let lean_s777 := by timed flipCongrArg lean_s776 [Eq]
have lean_s778 : (Eq (Eq (Eq e1 e0) (Not (Not (Eq e1 e0)))) (Eq (Eq e1 e0) (Eq e1 e0))) := by timed congr lean_s777 lean_r247
have lean_s779 : (Eq (Eq (Eq e1 e0) (Not (Not (Eq e1 e0)))) True) := by timed Eq.trans lean_s778 lean_r170
have lean_s780 : (Eq (Eq (Not (Not (Eq e1 e0))) (Eq e1 e0)) True) := by timed Eq.trans lean_r211 lean_s779
have lean_s781 : (Eq (Not (Not (Eq e1 e0))) (Eq e1 e0)) := by timed trueElim lean_s780
let lean_s782 := by timed congr lean_s775 lean_s781
have lean_s783 : (Eq (Not (Eq e0 (op e3 e4))) (Not (Eq e0 (op e3 e4)))) := by timed rfl
let lean_s784 := by timed congr lean_s775 lean_s783
let lean_s785 := by timed congr lean_s784 lean_s728
have lean_s786 : (Eq (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e3 e4))))) (Or (Eq e1 e0) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e3 e4)))))) := by timed congr lean_s782 lean_s785
have lean_s787 : (Or (Eq e1 e0) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e3 e4))))) := by timed eqResolve lean_s774 lean_s786
let lean_s788 := by R1 lean_s769, lean_s787, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
have lean_s789 : (Not (Eq e1 e0)) := by andElim lean_s709, 0
let lean_s790 := by R1 lean_s788, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s791 : (Eq (Not (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e3 e4)))) (Not (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e3 e4)))))) := by timed flipCongrArg lean_r45 [Not]
have lean_s792 : (Not (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e3 e4))))) := by timed eqResolve lean_a535 lean_s791
have lean_s793 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e1 (op e3 e4))))) := by timed flipNotAnd lean_s792 [(Eq e2 (op e0 e4)), (Eq e0 (op e4 e1)), (Eq e1 (op e3 e4))]
have lean_s794 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e0 (op e4 e1))))) := by permutateOr lean_s793, [0, 2, 1], (- 1)
have lean_s795 : (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e3 e4))))))))) := by R1 lean_s790, lean_s794, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
have lean_s796 : (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e0 e4))))))) := by factor lean_s795, 6
have lean_s797 : (Or (Eq e1 (op e0 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Eq e1 (op e4 e4)))))) := by andElim lean_s647, 43
have lean_s798 : (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e0 e4)) (Or (Eq e1 (op e1 e4)) (Eq e1 (op e4 e4)))))) := by permutateOr lean_s797, [2, 3, 0, 1, 4], (- 1)
let lean_s799 := by R2 lean_s796, lean_s798, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s800 : (Or (And (Not (Eq (op e1 e1) (op e1 e4))) (Eq e1 (op e1 e1))) (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Not (Eq e1 (op e1 e1))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e1 e4))), (Eq e1 (op e1 e1))]
have lean_s801 : (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e4))))) :=
  (scope (fun lean_a577 : (Not (Eq (op e1 e1) (op e1 e4))) =>
    (scope (fun lean_a578 : (Eq e1 (op e1 e1)) =>
      have lean_s801 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a578
      have lean_s802 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s801
      let lean_s803 := by timed flipCongrArg lean_s802 [Eq]
      have lean_s804 : (Eq (op e1 e4) (op e1 e4)) := by timed rfl
      have lean_s805 : (Eq (Eq e1 (op e1 e4)) (Eq (op e1 e1) (op e1 e4))) := by timed congr lean_s803 lean_s804
      have lean_s806 : (Eq (Eq (op e1 e1) (op e1 e4)) False) := by timed falseIntro lean_a577
      have lean_s807 : (Eq (Eq e1 (op e1 e4)) False) := by timed Eq.trans lean_s805 lean_s806
      have lean_s808 : (Not (Eq e1 (op e1 e4))) := by timed falseElim lean_s807
      show (Not (Eq e1 (op e1 e4))) from lean_s808
  ))))
have lean_s802 : (Implies (And (Not (Eq (op e1 e1) (op e1 e4))) (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e4)))) := by liftOrNToImp lean_s801, 2
have lean_s803 : (Or (Not (And (Not (Eq (op e1 e1) (op e1 e4))) (Eq e1 (op e1 e1)))) (Not (Eq e1 (op e1 e4)))) := by timed impliesElim lean_s802
have lean_s804 : (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e4))))) := by R1 lean_s800, lean_s803, (And (Not (Eq (op e1 e1) (op e1 e4))) (Eq e1 (op e1 e1))), [(- 1), (- 1)]
have lean_s805 : (Eq Or Or) := by timed rfl
have lean_s806 : (Eq (Eq (op e1 e1) (op e1 e4)) (Eq (op e1 e1) (op e1 e4))) := by timed rfl
let lean_s807 := by timed flipCongrArg lean_s806 [Eq]
have lean_s808 : (Eq (Eq (Eq (op e1 e1) (op e1 e4)) (Not (Not (Eq (op e1 e1) (op e1 e4))))) (Eq (Eq (op e1 e1) (op e1 e4)) (Eq (op e1 e1) (op e1 e4)))) := by timed congr lean_s807 lean_r348
have lean_s809 : (Eq (Eq (Eq (op e1 e1) (op e1 e4)) (Not (Not (Eq (op e1 e1) (op e1 e4))))) True) := by timed Eq.trans lean_s808 lean_r198
have lean_s810 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Eq (op e1 e1) (op e1 e4))) True) := by timed Eq.trans lean_r381 lean_s809
have lean_s811 : (Eq (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Eq (op e1 e1) (op e1 e4))) := by timed trueElim lean_s810
let lean_s812 := by timed congr lean_s805 lean_s811
let lean_s813 := by timed congr lean_s805 lean_s730
have lean_s814 : (Eq (Not (Eq e1 (op e1 e4))) (Not (Eq e1 (op e1 e4)))) := by timed rfl
let lean_s815 := by timed congr lean_s813 lean_s814
have lean_s816 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e4))))) (Or (Eq (op e1 e1) (op e1 e4)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e4)))))) := by timed congr lean_s812 lean_s815
have lean_s817 : (Or (Eq (op e1 e1) (op e1 e4)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e4))))) := by timed eqResolve lean_s804 lean_s816
have lean_s818 : (Not (Eq (op e1 e1) (op e1 e4))) := by andElim lean_s29, 66
let lean_s819 := by R1 lean_s817, lean_s818, (Eq (op e1 e1) (op e1 e4)), [(- 1), 0]
have lean_s820 : (Not (Eq e1 (op e1 e4))) := by R2 lean_s819, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s821 := by R1 lean_s799, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
have lean_s822 : (Or (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e1 (op e4 e2)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e0 e4)))))))) := by timed cnfAndNeg [(Not (Eq (op e4 e2) (op e4 e3))), (Eq e1 (op e4 e2)), (Eq e2 (op e4 e3)), (Eq e2 (op e2 e2)), (Eq e2 (op e0 e4))]
have lean_s823 : (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) :=
  (scope (fun lean_a578 : (Not (Eq (op e4 e2) (op e4 e3))) =>
    (scope (fun lean_a579 : (Eq e1 (op e4 e2)) =>
      (scope (fun lean_a580 : (Eq e2 (op e4 e3)) =>
        (scope (fun lean_a581 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a582 : (Eq e2 (op e0 e4)) =>
            have lean_s823 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a579
            have lean_s824 : (Eq e1 (op e4 e2)) := by timed Eq.symm lean_s823
            let lean_s825 := by timed flipCongrArg lean_s824 [Eq]
            have lean_s826 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a581
            have lean_s827 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a580
            have lean_s828 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s827
            have lean_s829 : (Eq (op e2 e2) (op e4 e3)) := by timed Eq.trans lean_s826 lean_s828
            have lean_s830 : (Eq (op e4 e3) (op e2 e2)) := by timed Eq.symm lean_s829
            have lean_s831 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a582
            have lean_s832 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.trans lean_s831 lean_a581
            have lean_s833 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.symm lean_s832
            have lean_s834 : (Eq (op e4 e3) (op e0 e4)) := by timed Eq.trans lean_s830 lean_s833
            have lean_s835 : (Eq (op e0 e4) (op e4 e3)) := by timed Eq.symm lean_s834
            have lean_s836 : (Eq (Eq e1 (op e0 e4)) (Eq (op e4 e2) (op e4 e3))) := by timed congr lean_s825 lean_s835
            have lean_s837 : (Eq (Eq (op e4 e2) (op e4 e3)) False) := by timed falseIntro lean_a578
            have lean_s838 : (Eq (Eq e1 (op e0 e4)) False) := by timed Eq.trans lean_s836 lean_s837
            have lean_s839 : (Not (Eq e1 (op e0 e4))) := by timed falseElim lean_s838
            show (Not (Eq e1 (op e0 e4))) from lean_s839
  ))))))))))
have lean_s824 : (Implies (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e1 (op e4 e2)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Not (Eq e1 (op e0 e4)))) := by liftOrNToImp lean_s823, 5
have lean_s825 : (Or (Not (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e1 (op e4 e2)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4))))))) (Not (Eq e1 (op e0 e4)))) := by timed impliesElim lean_s824
have lean_s826 : (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by R1 lean_s822, lean_s825, (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e1 (op e4 e2)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))), [(- 1), (- 1)]
have lean_s827 : (Eq Or Or) := by timed rfl
have lean_s828 : (Eq (Eq (op e4 e2) (op e4 e3)) (Eq (op e4 e2) (op e4 e3))) := by timed rfl
let lean_s829 := by timed flipCongrArg lean_s828 [Eq]
have lean_s830 : (Eq (Eq (Eq (op e4 e2) (op e4 e3)) (Not (Not (Eq (op e4 e2) (op e4 e3))))) (Eq (Eq (op e4 e2) (op e4 e3)) (Eq (op e4 e2) (op e4 e3)))) := by timed congr lean_s829 lean_r98
have lean_s831 : (Eq (Eq (Eq (op e4 e2) (op e4 e3)) (Not (Not (Eq (op e4 e2) (op e4 e3))))) True) := by timed Eq.trans lean_s830 lean_r99
have lean_s832 : (Eq (Eq (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Eq (op e4 e2) (op e4 e3))) True) := by timed Eq.trans lean_r97 lean_s831
have lean_s833 : (Eq (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Eq (op e4 e2) (op e4 e3))) := by timed trueElim lean_s832
let lean_s834 := by timed congr lean_s827 lean_s833
let lean_s835 := by timed congr lean_s827 lean_s732
have lean_s836 : (Eq (Not (Eq e2 (op e4 e3))) (Not (Eq e2 (op e4 e3)))) := by timed rfl
let lean_s837 := by timed congr lean_s827 lean_s836
let lean_s838 := by timed congr lean_s827 lean_s13
have lean_s839 : (Eq (Not (Eq e2 (op e0 e4))) (Not (Eq e2 (op e0 e4)))) := by timed rfl
let lean_s840 := by timed congr lean_s827 lean_s839
have lean_s841 : (Eq (Not (Eq e1 (op e0 e4))) (Not (Eq e1 (op e0 e4)))) := by timed rfl
let lean_s842 := by timed congr lean_s840 lean_s841
let lean_s843 := by timed congr lean_s838 lean_s842
let lean_s844 := by timed congr lean_s837 lean_s843
let lean_s845 := by timed congr lean_s835 lean_s844
have lean_s846 : (Eq (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4))))))))) := by timed congr lean_s834 lean_s845
have lean_s847 : (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by timed eqResolve lean_s826 lean_s846
have lean_s848 : (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e3)))))))) := by permutateOr lean_s847, [0, 3, 5, 4, 1, 2], (- 1)
let lean_s849 := by R1 lean_s821, lean_s848, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
have lean_s850 : (Not (Eq (op e4 e2) (op e4 e3))) := by andElim lean_s29, 97
let lean_s851 := by R1 lean_s849, lean_s850, (Eq (op e4 e2) (op e4 e3)), [(- 1), 0]
let lean_s852 := by R2 lean_s851, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s853 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e0))))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e3 (op e4 e0))))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e2 (op e0 e4)), (Eq e2 (op e2 e2)), (Eq e2 (op e4 e3)), (Eq e3 (op e4 e0))]
have lean_s854 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))))))) :=
  (scope (fun lean_a581 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a582 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a583 : (Eq e2 (op e0 e4)) =>
        (scope (fun lean_a584 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a585 : (Eq e2 (op e4 e3)) =>
            (scope (fun lean_a586 : (Eq e3 (op e4 e0)) =>
              have lean_s854 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a582
              have lean_s855 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s854
              let lean_s856 := by timed flipCongrArg lean_s855 [Eq]
              have lean_s857 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a584
              have lean_s858 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a583
              have lean_s859 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s858
              have lean_s860 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.trans lean_s857 lean_s859
              have lean_s861 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.symm lean_s860
              have lean_s862 : (Eq e4 e4) := by timed rfl
              let lean_s863 := by timed flipCongrArg lean_s862 [op]
              have lean_s864 : (Eq (op e4 e0) e3) := by timed Eq.symm lean_a586
              have lean_s865 : (Eq (op e4 (op e4 e0)) (op e4 e3)) := by timed congr lean_s863 lean_s864
              have lean_s866 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a585
              have lean_s867 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s866
              have lean_s868 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_s867
              let lean_s869 := by timed Eq.trans lean_s865 lean_s868
              have lean_s870 : (Eq (op e4 (op e4 e0)) (op e2 e2)) := by timed Eq.trans lean_s869 lean_a584
              have lean_s871 : (Eq (op e2 e2) (op e4 (op e4 e0))) := by timed Eq.symm lean_s870
              let lean_s872 := by timed Eq.trans lean_s861 lean_s871
              have lean_s873 : (Eq (op e0 e4) (op e4 e3)) := by timed Eq.trans lean_s872 lean_s865
              have lean_s874 : (Eq (op e4 e3) (op e0 e4)) := by timed Eq.symm lean_s873
              have lean_s875 : (Eq (Eq e0 (op e4 e3)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s856 lean_s874
              have lean_s876 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a581
              have lean_s877 : (Eq (Eq e0 (op e4 e3)) False) := by timed Eq.trans lean_s875 lean_s876
              have lean_s878 : (Not (Eq e0 (op e4 e3))) := by timed falseElim lean_s877
              show (Not (Eq e0 (op e4 e3))) from lean_s878
  ))))))))))))
have lean_s855 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e0))))))) (Not (Eq e0 (op e4 e3)))) := by liftOrNToImp lean_s854, 6
have lean_s856 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e0)))))))) (Not (Eq e0 (op e4 e3)))) := by timed impliesElim lean_s855
have lean_s857 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))))))) := by R1 lean_s853, lean_s856, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e0))))))), [(- 1), (- 1)]
have lean_s858 : (Eq Or Or) := by timed rfl
have lean_s859 : (Eq (Eq (op e0 e0) (op e0 e4)) (Eq (op e0 e0) (op e0 e4))) := by timed rfl
let lean_s860 := by timed flipCongrArg lean_s859 [Eq]
have lean_s861 : (Eq (Eq (Eq (op e0 e0) (op e0 e4)) (Not (Not (Eq (op e0 e0) (op e0 e4))))) (Eq (Eq (op e0 e0) (op e0 e4)) (Eq (op e0 e0) (op e0 e4)))) := by timed congr lean_s860 lean_r410
have lean_s862 : (Eq (Eq (Eq (op e0 e0) (op e0 e4)) (Not (Not (Eq (op e0 e0) (op e0 e4))))) True) := by timed Eq.trans lean_s861 lean_r377
have lean_s863 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Eq (op e0 e0) (op e0 e4))) True) := by timed Eq.trans lean_r378 lean_s862
have lean_s864 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Eq (op e0 e0) (op e0 e4))) := by timed trueElim lean_s863
let lean_s865 := by timed congr lean_s858 lean_s864
let lean_s866 := by timed congr lean_s858 lean_s759
let lean_s867 := by timed congr lean_s858 lean_s839
let lean_s868 := by timed congr lean_s858 lean_s13
let lean_s869 := by timed congr lean_s858 lean_s836
have lean_s870 : (Eq (Not (Eq e3 (op e4 e0))) (Not (Eq e3 (op e4 e0)))) := by timed rfl
let lean_s871 := by timed congr lean_s858 lean_s870
have lean_s872 : (Eq (Not (Eq e0 (op e4 e3))) (Not (Eq e0 (op e4 e3)))) := by timed rfl
let lean_s873 := by timed congr lean_s871 lean_s872
let lean_s874 := by timed congr lean_s869 lean_s873
let lean_s875 := by timed congr lean_s868 lean_s874
let lean_s876 := by timed congr lean_s867 lean_s875
let lean_s877 := by timed congr lean_s866 lean_s876
have lean_s878 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3)))))))))) := by timed congr lean_s865 lean_s877
have lean_s879 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))))))) := by timed eqResolve lean_s857 lean_s878
have lean_s880 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e2 (op e4 e3))))))))) := by permutateOr lean_s879, [0, 1, 3, 2, 5, 6, 4], (- 1)
let lean_s881 := by R1 lean_s852, lean_s880, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
have lean_s882 : (Not (Eq (op e0 e0) (op e0 e4))) := by andElim lean_s29, 53
let lean_s883 := by R1 lean_s881, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s884 := by R2 lean_s883, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s885 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e2 (op e4 e3))))))))))))) := by R2 lean_s884, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
have lean_s886 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e3 (op e4 e0))))))))) := by factor lean_s885, 10
let lean_s887 := by R1 lean_s787, lean_s789, (Eq e1 e0), [(- 1), 0]
let lean_s888 := by R2 lean_s887, lean_s798, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s889 := by R1 lean_s888, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
have lean_s890 : (Eq (Not (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e0 e4)))) (Not (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e0 e4)))))) := by timed flipCongrArg lean_r85 [Not]
have lean_s891 : (Not (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e0 e4))))) := by timed eqResolve lean_a464 lean_s890
have lean_s892 : (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e0 e4))))) := by timed flipNotAnd lean_s891 [(Eq e3 (op e2 e4)), (Eq e2 (op e4 e1)), (Eq e1 (op e0 e4))]
have lean_s893 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e2 (op e4 e1))))) := by permutateOr lean_s892, [2, 0, 1], (- 1)
let lean_s894 := by R1 lean_s889, lean_s893, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
have lean_s895 : (Eq And And) := by timed rfl
have lean_s896 : (Eq Or Or) := by timed rfl
have lean_s897 : (Eq (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq e0 (op e0 (op e0 e0))))) := by timed flipCongrArg lean_r426 [Not]
let lean_s898 := by timed congr lean_s896 lean_s897
have lean_s899 : (Eq (Not (Eq (op e0 (op e0 e1)) e1)) (Not (Eq e1 (op e0 (op e0 e1))))) := by timed flipCongrArg lean_r387 [Not]
let lean_s900 := by timed congr lean_s896 lean_s899
have lean_s901 : (Eq (Not (Eq (op e0 (op e0 e2)) e2)) (Not (Eq e2 (op e0 (op e0 e2))))) := by timed flipCongrArg lean_r131 [Not]
let lean_s902 := by timed congr lean_s896 lean_s901
have lean_s903 : (Eq (Not (Eq (op e0 (op e0 e3)) e3)) (Not (Eq e3 (op e0 (op e0 e3))))) := by timed flipCongrArg lean_r355 [Not]
let lean_s904 := by timed congr lean_s896 lean_s903
have lean_s905 : (Eq (Not (Eq (op e0 (op e0 e4)) e4)) (Not (Eq e4 (op e0 (op e0 e4))))) := by timed flipCongrArg lean_r424 [Not]
let lean_s906 := by timed congr lean_s904 lean_s905
let lean_s907 := by timed congr lean_s902 lean_s906
let lean_s908 := by timed congr lean_s900 lean_s907
have lean_s909 : (Eq (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Or (Not (Eq (op e0 (op e0 e1)) e1)) (Or (Not (Eq (op e0 (op e0 e2)) e2)) (Or (Not (Eq (op e0 (op e0 e3)) e3)) (Not (Eq (op e0 (op e0 e4)) e4)))))) (Or (Not (Eq e0 (op e0 (op e0 e0)))) (Or (Not (Eq e1 (op e0 (op e0 e1)))) (Or (Not (Eq e2 (op e0 (op e0 e2)))) (Or (Not (Eq e3 (op e0 (op e0 e3)))) (Not (Eq e4 (op e0 (op e0 e4))))))))) := by timed congr lean_s898 lean_s908
have lean_s910 : (Eq (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Not (Eq e0 (op e0 (op e0 e0)))) (Or (Not (Eq e1 (op e0 (op e0 e1)))) (Or (Not (Eq e2 (op e0 (op e0 e2)))) (Or (Not (Eq e3 (op e0 (op e0 e3)))) (Not (Eq e4 (op e0 (op e0 e4))))))))) := by timed Eq.trans lean_r428 lean_s909
let lean_s911 := by timed congr lean_s895 lean_s910
have lean_s912 : (Eq Or Or) := by timed rfl
have lean_s913 : (Eq (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq e0 (op e1 (op e1 e0))))) := by timed flipCongrArg lean_r142 [Not]
let lean_s914 := by timed congr lean_s912 lean_s913
have lean_s915 : (Eq (Not (Eq (op e1 (op e1 e1)) e1)) (Not (Eq e1 (op e1 (op e1 e1))))) := by timed flipCongrArg lean_r421 [Not]
let lean_s916 := by timed congr lean_s912 lean_s915
have lean_s917 : (Eq (Not (Eq (op e1 (op e1 e2)) e2)) (Not (Eq e2 (op e1 (op e1 e2))))) := by timed flipCongrArg lean_r281 [Not]
let lean_s918 := by timed congr lean_s912 lean_s917
have lean_s919 : (Eq (Not (Eq (op e1 (op e1 e3)) e3)) (Not (Eq e3 (op e1 (op e1 e3))))) := by timed flipCongrArg lean_r419 [Not]
let lean_s920 := by timed congr lean_s912 lean_s919
have lean_s921 : (Eq (Not (Eq (op e1 (op e1 e4)) e4)) (Not (Eq e4 (op e1 (op e1 e4))))) := by timed flipCongrArg lean_r351 [Not]
let lean_s922 := by timed congr lean_s920 lean_s921
let lean_s923 := by timed congr lean_s918 lean_s922
let lean_s924 := by timed congr lean_s916 lean_s923
have lean_s925 : (Eq (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Or (Not (Eq (op e1 (op e1 e1)) e1)) (Or (Not (Eq (op e1 (op e1 e2)) e2)) (Or (Not (Eq (op e1 (op e1 e3)) e3)) (Not (Eq (op e1 (op e1 e4)) e4)))))) (Or (Not (Eq e0 (op e1 (op e1 e0)))) (Or (Not (Eq e1 (op e1 (op e1 e1)))) (Or (Not (Eq e2 (op e1 (op e1 e2)))) (Or (Not (Eq e3 (op e1 (op e1 e3)))) (Not (Eq e4 (op e1 (op e1 e4))))))))) := by timed congr lean_s914 lean_s924
have lean_s926 : (Eq (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4))) (Or (Not (Eq e0 (op e1 (op e1 e0)))) (Or (Not (Eq e1 (op e1 (op e1 e1)))) (Or (Not (Eq e2 (op e1 (op e1 e2)))) (Or (Not (Eq e3 (op e1 (op e1 e3)))) (Not (Eq e4 (op e1 (op e1 e4))))))))) := by timed Eq.trans lean_r139 lean_s925
let lean_s927 := by timed congr lean_s895 lean_s926
have lean_s928 : (Eq Or Or) := by timed rfl
have lean_s929 : (Eq (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq e0 (op e2 (op e2 e0))))) := by timed flipCongrArg lean_r415 [Not]
let lean_s930 := by timed congr lean_s928 lean_s929
have lean_s931 : (Eq (Not (Eq (op e2 (op e2 e1)) e1)) (Not (Eq e1 (op e2 (op e2 e1))))) := by timed flipCongrArg lean_r322 [Not]
let lean_s932 := by timed congr lean_s928 lean_s931
have lean_s933 : (Eq (Not (Eq (op e2 (op e2 e2)) e2)) (Not (Eq e2 (op e2 (op e2 e2))))) := by timed flipCongrArg lean_r414 [Not]
let lean_s934 := by timed congr lean_s928 lean_s933
have lean_s935 : (Eq (Not (Eq (op e2 (op e2 e3)) e3)) (Not (Eq e3 (op e2 (op e2 e3))))) := by timed flipCongrArg lean_r238 [Not]
let lean_s936 := by timed congr lean_s928 lean_s935
have lean_s937 : (Eq (Not (Eq (op e2 (op e2 e4)) e4)) (Not (Eq e4 (op e2 (op e2 e4))))) := by timed flipCongrArg lean_r412 [Not]
let lean_s938 := by timed congr lean_s936 lean_s937
let lean_s939 := by timed congr lean_s934 lean_s938
let lean_s940 := by timed congr lean_s932 lean_s939
have lean_s941 : (Eq (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Or (Not (Eq (op e2 (op e2 e1)) e1)) (Or (Not (Eq (op e2 (op e2 e2)) e2)) (Or (Not (Eq (op e2 (op e2 e3)) e3)) (Not (Eq (op e2 (op e2 e4)) e4)))))) (Or (Not (Eq e0 (op e2 (op e2 e0)))) (Or (Not (Eq e1 (op e2 (op e2 e1)))) (Or (Not (Eq e2 (op e2 (op e2 e2)))) (Or (Not (Eq e3 (op e2 (op e2 e3)))) (Not (Eq e4 (op e2 (op e2 e4))))))))) := by timed congr lean_s930 lean_s940
have lean_s942 : (Eq (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4))) (Or (Not (Eq e0 (op e2 (op e2 e0)))) (Or (Not (Eq e1 (op e2 (op e2 e1)))) (Or (Not (Eq e2 (op e2 (op e2 e2)))) (Or (Not (Eq e3 (op e2 (op e2 e3)))) (Not (Eq e4 (op e2 (op e2 e4))))))))) := by timed Eq.trans lean_r417 lean_s941
let lean_s943 := by timed congr lean_s895 lean_s942
have lean_s944 : (Eq Or Or) := by timed rfl
have lean_s945 : (Eq (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq e0 (op e3 (op e3 e0))))) := by timed flipCongrArg lean_r392 [Not]
let lean_s946 := by timed congr lean_s944 lean_s945
have lean_s947 : (Eq (Not (Eq (op e3 (op e3 e1)) e1)) (Not (Eq e1 (op e3 (op e3 e1))))) := by timed flipCongrArg lean_r334 [Not]
let lean_s948 := by timed congr lean_s944 lean_s947
have lean_s949 : (Eq (Not (Eq (op e3 (op e3 e2)) e2)) (Not (Eq e2 (op e3 (op e3 e2))))) := by timed flipCongrArg lean_r411 [Not]
let lean_s950 := by timed congr lean_s944 lean_s949
have lean_s951 : (Eq (Not (Eq (op e3 (op e3 e3)) e3)) (Not (Eq e3 (op e3 (op e3 e3))))) := by timed flipCongrArg lean_r265 [Not]
let lean_s952 := by timed congr lean_s944 lean_s951
have lean_s953 : (Eq (Not (Eq (op e3 (op e3 e4)) e4)) (Not (Eq e4 (op e3 (op e3 e4))))) := by timed flipCongrArg lean_r409 [Not]
let lean_s954 := by timed congr lean_s952 lean_s953
let lean_s955 := by timed congr lean_s950 lean_s954
let lean_s956 := by timed congr lean_s948 lean_s955
have lean_s957 : (Eq (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Or (Not (Eq (op e3 (op e3 e1)) e1)) (Or (Not (Eq (op e3 (op e3 e2)) e2)) (Or (Not (Eq (op e3 (op e3 e3)) e3)) (Not (Eq (op e3 (op e3 e4)) e4)))))) (Or (Not (Eq e0 (op e3 (op e3 e0)))) (Or (Not (Eq e1 (op e3 (op e3 e1)))) (Or (Not (Eq e2 (op e3 (op e3 e2)))) (Or (Not (Eq e3 (op e3 (op e3 e3)))) (Not (Eq e4 (op e3 (op e3 e4))))))))) := by timed congr lean_s946 lean_s956
have lean_s958 : (Eq (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4))) (Or (Not (Eq e0 (op e3 (op e3 e0)))) (Or (Not (Eq e1 (op e3 (op e3 e1)))) (Or (Not (Eq e2 (op e3 (op e3 e2)))) (Or (Not (Eq e3 (op e3 (op e3 e3)))) (Not (Eq e4 (op e3 (op e3 e4))))))))) := by timed Eq.trans lean_r400 lean_s957
let lean_s959 := by timed congr lean_s895 lean_s958
have lean_s960 : (Eq Or Or) := by timed rfl
have lean_s961 : (Eq (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq e0 (op e4 (op e4 e0))))) := by timed flipCongrArg lean_r248 [Not]
let lean_s962 := by timed congr lean_s960 lean_s961
have lean_s963 : (Eq (Not (Eq (op e4 (op e4 e1)) e1)) (Not (Eq e1 (op e4 (op e4 e1))))) := by timed flipCongrArg lean_r229 [Not]
let lean_s964 := by timed congr lean_s960 lean_s963
have lean_s965 : (Eq (Not (Eq (op e4 (op e4 e2)) e2)) (Not (Eq e2 (op e4 (op e4 e2))))) := by timed flipCongrArg lean_r339 [Not]
let lean_s966 := by timed congr lean_s960 lean_s965
have lean_s967 : (Eq (Not (Eq (op e4 (op e4 e3)) e3)) (Not (Eq e3 (op e4 (op e4 e3))))) := by timed flipCongrArg lean_r408 [Not]
let lean_s968 := by timed congr lean_s960 lean_s967
have lean_s969 : (Eq (Not (Eq (op e4 (op e4 e4)) e4)) (Not (Eq e4 (op e4 (op e4 e4))))) := by timed flipCongrArg lean_r407 [Not]
let lean_s970 := by timed congr lean_s968 lean_s969
let lean_s971 := by timed congr lean_s966 lean_s970
let lean_s972 := by timed congr lean_s964 lean_s971
have lean_s973 : (Eq (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Or (Not (Eq (op e4 (op e4 e1)) e1)) (Or (Not (Eq (op e4 (op e4 e2)) e2)) (Or (Not (Eq (op e4 (op e4 e3)) e3)) (Not (Eq (op e4 (op e4 e4)) e4)))))) (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Not (Eq e4 (op e4 (op e4 e4))))))))) := by timed congr lean_s962 lean_s972
have lean_s974 : (Eq (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4))) (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Not (Eq e4 (op e4 (op e4 e4))))))))) := by timed Eq.trans lean_r210 lean_s973
let lean_s975 := by timed congr lean_s959 lean_s974
let lean_s976 := by timed congr lean_s943 lean_s975
let lean_s977 := by timed congr lean_s927 lean_s976
have lean_s978 : (Eq (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4))) (And (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4))))))) (And (Or (Not (Eq e0 (op e0 (op e0 e0)))) (Or (Not (Eq e1 (op e0 (op e0 e1)))) (Or (Not (Eq e2 (op e0 (op e0 e2)))) (Or (Not (Eq e3 (op e0 (op e0 e3)))) (Not (Eq e4 (op e0 (op e0 e4)))))))) (And (Or (Not (Eq e0 (op e1 (op e1 e0)))) (Or (Not (Eq e1 (op e1 (op e1 e1)))) (Or (Not (Eq e2 (op e1 (op e1 e2)))) (Or (Not (Eq e3 (op e1 (op e1 e3)))) (Not (Eq e4 (op e1 (op e1 e4)))))))) (And (Or (Not (Eq e0 (op e2 (op e2 e0)))) (Or (Not (Eq e1 (op e2 (op e2 e1)))) (Or (Not (Eq e2 (op e2 (op e2 e2)))) (Or (Not (Eq e3 (op e2 (op e2 e3)))) (Not (Eq e4 (op e2 (op e2 e4)))))))) (And (Or (Not (Eq e0 (op e3 (op e3 e0)))) (Or (Not (Eq e1 (op e3 (op e3 e1)))) (Or (Not (Eq e2 (op e3 (op e3 e2)))) (Or (Not (Eq e3 (op e3 (op e3 e3)))) (Not (Eq e4 (op e3 (op e3 e4)))))))) (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Not (Eq e4 (op e4 (op e4 e4))))))))))))) := by timed congr lean_s911 lean_s977
have lean_s979 : (Eq (And (And (And (And (Or (Or (Or (Or (Not (Eq (op e0 (op e0 e0)) e0)) (Not (Eq (op e0 (op e0 e1)) e1))) (Not (Eq (op e0 (op e0 e2)) e2))) (Not (Eq (op e0 (op e0 e3)) e3))) (Not (Eq (op e0 (op e0 e4)) e4))) (Or (Or (Or (Or (Not (Eq (op e1 (op e1 e0)) e0)) (Not (Eq (op e1 (op e1 e1)) e1))) (Not (Eq (op e1 (op e1 e2)) e2))) (Not (Eq (op e1 (op e1 e3)) e3))) (Not (Eq (op e1 (op e1 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e2 (op e2 e0)) e0)) (Not (Eq (op e2 (op e2 e1)) e1))) (Not (Eq (op e2 (op e2 e2)) e2))) (Not (Eq (op e2 (op e2 e3)) e3))) (Not (Eq (op e2 (op e2 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e3 (op e3 e0)) e0)) (Not (Eq (op e3 (op e3 e1)) e1))) (Not (Eq (op e3 (op e3 e2)) e2))) (Not (Eq (op e3 (op e3 e3)) e3))) (Not (Eq (op e3 (op e3 e4)) e4)))) (Or (Or (Or (Or (Not (Eq (op e4 (op e4 e0)) e0)) (Not (Eq (op e4 (op e4 e1)) e1))) (Not (Eq (op e4 (op e4 e2)) e2))) (Not (Eq (op e4 (op e4 e3)) e3))) (Not (Eq (op e4 (op e4 e4)) e4)))) (And (Or (Not (Eq e0 (op e0 (op e0 e0)))) (Or (Not (Eq e1 (op e0 (op e0 e1)))) (Or (Not (Eq e2 (op e0 (op e0 e2)))) (Or (Not (Eq e3 (op e0 (op e0 e3)))) (Not (Eq e4 (op e0 (op e0 e4)))))))) (And (Or (Not (Eq e0 (op e1 (op e1 e0)))) (Or (Not (Eq e1 (op e1 (op e1 e1)))) (Or (Not (Eq e2 (op e1 (op e1 e2)))) (Or (Not (Eq e3 (op e1 (op e1 e3)))) (Not (Eq e4 (op e1 (op e1 e4)))))))) (And (Or (Not (Eq e0 (op e2 (op e2 e0)))) (Or (Not (Eq e1 (op e2 (op e2 e1)))) (Or (Not (Eq e2 (op e2 (op e2 e2)))) (Or (Not (Eq e3 (op e2 (op e2 e3)))) (Not (Eq e4 (op e2 (op e2 e4)))))))) (And (Or (Not (Eq e0 (op e3 (op e3 e0)))) (Or (Not (Eq e1 (op e3 (op e3 e1)))) (Or (Not (Eq e2 (op e3 (op e3 e2)))) (Or (Not (Eq e3 (op e3 (op e3 e3)))) (Not (Eq e4 (op e3 (op e3 e4)))))))) (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Not (Eq e4 (op e4 (op e4 e4))))))))))))) := by timed Eq.trans lean_r253 lean_s978
have lean_s980 : (And (Or (Not (Eq e0 (op e0 (op e0 e0)))) (Or (Not (Eq e1 (op e0 (op e0 e1)))) (Or (Not (Eq e2 (op e0 (op e0 e2)))) (Or (Not (Eq e3 (op e0 (op e0 e3)))) (Not (Eq e4 (op e0 (op e0 e4)))))))) (And (Or (Not (Eq e0 (op e1 (op e1 e0)))) (Or (Not (Eq e1 (op e1 (op e1 e1)))) (Or (Not (Eq e2 (op e1 (op e1 e2)))) (Or (Not (Eq e3 (op e1 (op e1 e3)))) (Not (Eq e4 (op e1 (op e1 e4)))))))) (And (Or (Not (Eq e0 (op e2 (op e2 e0)))) (Or (Not (Eq e1 (op e2 (op e2 e1)))) (Or (Not (Eq e2 (op e2 (op e2 e2)))) (Or (Not (Eq e3 (op e2 (op e2 e3)))) (Not (Eq e4 (op e2 (op e2 e4)))))))) (And (Or (Not (Eq e0 (op e3 (op e3 e0)))) (Or (Not (Eq e1 (op e3 (op e3 e1)))) (Or (Not (Eq e2 (op e3 (op e3 e2)))) (Or (Not (Eq e3 (op e3 (op e3 e3)))) (Not (Eq e4 (op e3 (op e3 e4)))))))) (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Not (Eq e4 (op e4 (op e4 e4)))))))))))) := by timed eqResolve lean_a437 lean_s979
have lean_s981 : (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Not (Eq e4 (op e4 (op e4 e4)))))))) := by andElim lean_s980, 4
have lean_s982 : (Or (Not (Eq e4 (op e4 e4))) (Eq e4 (op e4 (op e4 e4)))) :=
  (scope (fun lean_a583 : (Eq e4 (op e4 e4)) =>
    have lean_s982 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a583
    have lean_s983 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s982
    have lean_s984 : (Eq e4 e4) := by timed rfl
    let lean_s985 := by timed flipCongrArg lean_s984 [op]
    have lean_s986 : (Eq (op e4 e4) (op e4 (op e4 e4))) := by timed congr lean_s985 lean_s983
    have lean_s987 : (Eq e4 (op e4 (op e4 e4))) := by timed Eq.trans lean_s983 lean_s986
    show (Eq e4 (op e4 (op e4 e4))) from lean_s987
  ))
have lean_s983 : (Implies (Eq e4 (op e4 e4)) (Eq e4 (op e4 (op e4 e4)))) := by liftOrNToImp lean_s982, 1
have lean_s984 : (Or (Not (Eq e4 (op e4 e4))) (Eq e4 (op e4 (op e4 e4)))) := by timed impliesElim lean_s983
have lean_s985 : (Or (Eq e4 (op e4 (op e4 e4))) (Not (Eq e4 (op e4 e4)))) := by permutateOr lean_s984, [1, 0], (- 1)
have lean_s986 : (Eq e4 (op e4 (op e4 e4))) := by R2 lean_s985, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s987 := by R2 lean_s981, lean_s986, (Eq e4 (op e4 (op e4 e4))), [(- 1), 0]
have lean_s988 : (Or (And (Eq e3 (op e4 e0)) (Eq e0 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))) := by timed cnfAndNeg [(Eq e3 (op e4 e0)), (Eq e0 (op e4 e3))]
have lean_s989 : (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e0 (op e4 e3))) (Eq e0 (op e4 (op e4 e0))))) :=
  (scope (fun lean_a583 : (Eq e3 (op e4 e0)) =>
    (scope (fun lean_a584 : (Eq e0 (op e4 e3)) =>
      have lean_s989 : (Eq (op e4 e3) e0) := by timed Eq.symm lean_a584
      have lean_s990 : (Eq e0 (op e4 e3)) := by timed Eq.symm lean_s989
      have lean_s991 : (Eq e4 e4) := by timed rfl
      let lean_s992 := by timed flipCongrArg lean_s991 [op]
      have lean_s993 : (Eq (op e4 e0) e3) := by timed Eq.symm lean_a583
      have lean_s994 : (Eq e3 (op e4 e0)) := by timed Eq.symm lean_s993
      have lean_s995 : (Eq (op e4 e3) (op e4 (op e4 e0))) := by timed congr lean_s992 lean_s994
      have lean_s996 : (Eq e0 (op e4 (op e4 e0))) := by timed Eq.trans lean_s990 lean_s995
      show (Eq e0 (op e4 (op e4 e0))) from lean_s996
  ))))
have lean_s990 : (Implies (And (Eq e3 (op e4 e0)) (Eq e0 (op e4 e3))) (Eq e0 (op e4 (op e4 e0)))) := by liftOrNToImp lean_s989, 2
have lean_s991 : (Or (Not (And (Eq e3 (op e4 e0)) (Eq e0 (op e4 e3)))) (Eq e0 (op e4 (op e4 e0)))) := by timed impliesElim lean_s990
have lean_s992 : (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e0 (op e4 e3))) (Eq e0 (op e4 (op e4 e0))))) := by R1 lean_s988, lean_s991, (And (Eq e3 (op e4 e0)) (Eq e0 (op e4 e3))), [(- 1), (- 1)]
have lean_s993 : (Or (Eq e0 (op e4 (op e4 e0))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))) := by permutateOr lean_s992, [2, 0, 1], (- 1)
let lean_s994 := by R2 lean_s987, lean_s993, (Eq e0 (op e4 (op e4 e0))), [(- 1), (- 1)]
have lean_s995 : (Or (And (Eq e2 (op e4 e1)) (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e4 e2))))) := by timed cnfAndNeg [(Eq e2 (op e4 e1)), (Eq e1 (op e4 e2))]
have lean_s996 : (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Eq e1 (op e4 (op e4 e1))))) :=
  (scope (fun lean_a584 : (Eq e2 (op e4 e1)) =>
    (scope (fun lean_a585 : (Eq e1 (op e4 e2)) =>
      have lean_s996 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a585
      have lean_s997 : (Eq e1 (op e4 e2)) := by timed Eq.symm lean_s996
      have lean_s998 : (Eq e4 e4) := by timed rfl
      let lean_s999 := by timed flipCongrArg lean_s998 [op]
      have lean_s1000 : (Eq (op e4 e1) e2) := by timed Eq.symm lean_a584
      have lean_s1001 : (Eq e2 (op e4 e1)) := by timed Eq.symm lean_s1000
      have lean_s1002 : (Eq (op e4 e2) (op e4 (op e4 e1))) := by timed congr lean_s999 lean_s1001
      have lean_s1003 : (Eq e1 (op e4 (op e4 e1))) := by timed Eq.trans lean_s997 lean_s1002
      show (Eq e1 (op e4 (op e4 e1))) from lean_s1003
  ))))
have lean_s997 : (Implies (And (Eq e2 (op e4 e1)) (Eq e1 (op e4 e2))) (Eq e1 (op e4 (op e4 e1)))) := by liftOrNToImp lean_s996, 2
have lean_s998 : (Or (Not (And (Eq e2 (op e4 e1)) (Eq e1 (op e4 e2)))) (Eq e1 (op e4 (op e4 e1)))) := by timed impliesElim lean_s997
have lean_s999 : (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Eq e1 (op e4 (op e4 e1))))) := by R1 lean_s995, lean_s998, (And (Eq e2 (op e4 e1)) (Eq e1 (op e4 e2))), [(- 1), (- 1)]
have lean_s1000 : (Or (Eq e1 (op e4 (op e4 e1))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e4 e2))))) := by permutateOr lean_s999, [2, 0, 1], (- 1)
let lean_s1001 := by R2 lean_s994, lean_s1000, (Eq e1 (op e4 (op e4 e1))), [(- 1), (- 1)]
have lean_s1002 : (Or (And (Not (Eq e3 (op e4 (op e4 e3)))) (Eq e0 (op e4 e3))) (Or (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Not (Eq e0 (op e4 e3))))) := by timed cnfAndNeg [(Not (Eq e3 (op e4 (op e4 e3)))), (Eq e0 (op e4 e3))]
have lean_s1003 : (Or (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e3 (op e4 e0))))) :=
  (scope (fun lean_a585 : (Not (Eq e3 (op e4 (op e4 e3)))) =>
    (scope (fun lean_a586 : (Eq e0 (op e4 e3)) =>
      have lean_s1003 : (Eq e3 e3) := by timed rfl
      let lean_s1004 := by timed flipCongrArg lean_s1003 [Eq]
      have lean_s1005 : (Eq e4 e4) := by timed rfl
      let lean_s1006 := by timed flipCongrArg lean_s1005 [op]
      have lean_s1007 : (Eq (op e4 e3) e0) := by timed Eq.symm lean_a586
      have lean_s1008 : (Eq e0 (op e4 e3)) := by timed Eq.symm lean_s1007
      have lean_s1009 : (Eq (op e4 e0) (op e4 (op e4 e3))) := by timed congr lean_s1006 lean_s1008
      have lean_s1010 : (Eq (Eq e3 (op e4 e0)) (Eq e3 (op e4 (op e4 e3)))) := by timed congr lean_s1004 lean_s1009
      have lean_s1011 : (Eq (Eq e3 (op e4 (op e4 e3))) False) := by timed falseIntro lean_a585
      have lean_s1012 : (Eq (Eq e3 (op e4 e0)) False) := by timed Eq.trans lean_s1010 lean_s1011
      have lean_s1013 : (Not (Eq e3 (op e4 e0))) := by timed falseElim lean_s1012
      show (Not (Eq e3 (op e4 e0))) from lean_s1013
  ))))
have lean_s1004 : (Implies (And (Not (Eq e3 (op e4 (op e4 e3)))) (Eq e0 (op e4 e3))) (Not (Eq e3 (op e4 e0)))) := by liftOrNToImp lean_s1003, 2
have lean_s1005 : (Or (Not (And (Not (Eq e3 (op e4 (op e4 e3)))) (Eq e0 (op e4 e3)))) (Not (Eq e3 (op e4 e0)))) := by timed impliesElim lean_s1004
have lean_s1006 : (Or (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e3 (op e4 e0))))) := by R1 lean_s1002, lean_s1005, (And (Not (Eq e3 (op e4 (op e4 e3)))) (Eq e0 (op e4 e3))), [(- 1), (- 1)]
have lean_s1007 : (Eq Or Or) := by timed rfl
have lean_s1008 : (Eq (Eq e3 (op e4 (op e4 e3))) (Eq e3 (op e4 (op e4 e3)))) := by timed rfl
let lean_s1009 := by timed flipCongrArg lean_s1008 [Eq]
have lean_s1010 : (Eq (Eq (Eq e3 (op e4 (op e4 e3))) (Not (Not (Eq e3 (op e4 (op e4 e3)))))) (Eq (Eq e3 (op e4 (op e4 e3))) (Eq e3 (op e4 (op e4 e3))))) := by timed congr lean_s1009 lean_r304
have lean_s1011 : (Eq (Eq (Eq e3 (op e4 (op e4 e3))) (Not (Not (Eq e3 (op e4 (op e4 e3)))))) True) := by timed Eq.trans lean_s1010 lean_r128
have lean_s1012 : (Eq (Eq (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Eq e3 (op e4 (op e4 e3)))) True) := by timed Eq.trans lean_r100 lean_s1011
have lean_s1013 : (Eq (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Eq e3 (op e4 (op e4 e3)))) := by timed trueElim lean_s1012
let lean_s1014 := by timed congr lean_s1007 lean_s1013
let lean_s1015 := by timed congr lean_s1007 lean_s872
let lean_s1016 := by timed congr lean_s1015 lean_s870
have lean_s1017 : (Eq (Or (Not (Not (Eq e3 (op e4 (op e4 e3))))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e3 (op e4 e0))))) (Or (Eq e3 (op e4 (op e4 e3))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e3 (op e4 e0)))))) := by timed congr lean_s1014 lean_s1016
have lean_s1018 : (Or (Eq e3 (op e4 (op e4 e3))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e3 (op e4 e0))))) := by timed eqResolve lean_s1006 lean_s1017
have lean_s1019 : (Or (Eq e3 (op e4 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))) := by permutateOr lean_s1018, [0, 2, 1], (- 1)
have lean_s1020 : (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3))))))))) := by R2 lean_s1001, lean_s1019, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s1021 : (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e4 e2))))))) := by factor lean_s1020, 6
let lean_s1022 := by R2 lean_s1021, lean_s744, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s1023 := by R1 lean_s1022, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s1024 : (Or (And (Not (Eq e2 (op e4 (op e4 e2)))) (Eq e1 (op e4 e2))) (Or (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Not (Eq e1 (op e4 e2))))) := by timed cnfAndNeg [(Not (Eq e2 (op e4 (op e4 e2)))), (Eq e1 (op e4 e2))]
have lean_s1025 : (Or (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e1))))) :=
  (scope (fun lean_a586 : (Not (Eq e2 (op e4 (op e4 e2)))) =>
    (scope (fun lean_a587 : (Eq e1 (op e4 e2)) =>
      have lean_s1025 : (Eq e2 e2) := by timed rfl
      let lean_s1026 := by timed flipCongrArg lean_s1025 [Eq]
      have lean_s1027 : (Eq e4 e4) := by timed rfl
      let lean_s1028 := by timed flipCongrArg lean_s1027 [op]
      have lean_s1029 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a587
      have lean_s1030 : (Eq e1 (op e4 e2)) := by timed Eq.symm lean_s1029
      have lean_s1031 : (Eq (op e4 e1) (op e4 (op e4 e2))) := by timed congr lean_s1028 lean_s1030
      have lean_s1032 : (Eq (Eq e2 (op e4 e1)) (Eq e2 (op e4 (op e4 e2)))) := by timed congr lean_s1026 lean_s1031
      have lean_s1033 : (Eq (Eq e2 (op e4 (op e4 e2))) False) := by timed falseIntro lean_a586
      have lean_s1034 : (Eq (Eq e2 (op e4 e1)) False) := by timed Eq.trans lean_s1032 lean_s1033
      have lean_s1035 : (Not (Eq e2 (op e4 e1))) := by timed falseElim lean_s1034
      show (Not (Eq e2 (op e4 e1))) from lean_s1035
  ))))
have lean_s1026 : (Implies (And (Not (Eq e2 (op e4 (op e4 e2)))) (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e1)))) := by liftOrNToImp lean_s1025, 2
have lean_s1027 : (Or (Not (And (Not (Eq e2 (op e4 (op e4 e2)))) (Eq e1 (op e4 e2)))) (Not (Eq e2 (op e4 e1)))) := by timed impliesElim lean_s1026
have lean_s1028 : (Or (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e1))))) := by R1 lean_s1024, lean_s1027, (And (Not (Eq e2 (op e4 (op e4 e2)))) (Eq e1 (op e4 e2))), [(- 1), (- 1)]
have lean_s1029 : (Eq Or Or) := by timed rfl
have lean_s1030 : (Eq (Eq e2 (op e4 (op e4 e2))) (Eq e2 (op e4 (op e4 e2)))) := by timed rfl
let lean_s1031 := by timed flipCongrArg lean_s1030 [Eq]
have lean_s1032 : (Eq (Eq (Eq e2 (op e4 (op e4 e2))) (Not (Not (Eq e2 (op e4 (op e4 e2)))))) (Eq (Eq e2 (op e4 (op e4 e2))) (Eq e2 (op e4 (op e4 e2))))) := by timed congr lean_s1031 lean_r263
have lean_s1033 : (Eq (Eq (Eq e2 (op e4 (op e4 e2))) (Not (Not (Eq e2 (op e4 (op e4 e2)))))) True) := by timed Eq.trans lean_s1032 lean_r257
have lean_s1034 : (Eq (Eq (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Eq e2 (op e4 (op e4 e2)))) True) := by timed Eq.trans lean_r271 lean_s1033
have lean_s1035 : (Eq (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Eq e2 (op e4 (op e4 e2)))) := by timed trueElim lean_s1034
let lean_s1036 := by timed congr lean_s1029 lean_s1035
let lean_s1037 := by timed congr lean_s1029 lean_s732
let lean_s1038 := by timed congr lean_s1037 lean_s21
have lean_s1039 : (Eq (Or (Not (Not (Eq e2 (op e4 (op e4 e2))))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e1))))) (Or (Eq e2 (op e4 (op e4 e2))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e1)))))) := by timed congr lean_s1036 lean_s1038
have lean_s1040 : (Or (Eq e2 (op e4 (op e4 e2))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e1))))) := by timed eqResolve lean_s1028 lean_s1039
have lean_s1041 : (Or (Eq e2 (op e4 (op e4 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e4 e2))))) := by permutateOr lean_s1040, [0, 2, 1], (- 1)
let lean_s1042 := by R2 lean_s1023, lean_s1041, (Eq e2 (op e4 (op e4 e2))), [(- 1), (- 1)]
have lean_s1043 : (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e3 e4))))))))))) := by R1 lean_s1042, lean_s794, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
have lean_s1044 : (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e3 e4))))))))) := by factor lean_s1043, (- 1)
let lean_s1045 := by R2 lean_s1044, lean_s649, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s1046 := by R1 lean_s1045, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
have lean_s1047 : (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e4 e4)))))) := by andElim lean_s647, 45
have lean_s1048 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e2 e4)) (Eq e2 (op e4 e4)))))) := by permutateOr lean_s1047, [1, 3, 0, 2, 4], (- 1)
let lean_s1049 := by R2 lean_s1046, lean_s1048, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
have lean_s1050 : (Or (And (Not (Eq (op e2 e2) (op e2 e4))) (Eq e2 (op e2 e2))) (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Not (Eq e2 (op e2 e2))))) := by timed cnfAndNeg [(Not (Eq (op e2 e2) (op e2 e4))), (Eq e2 (op e2 e2))]
have lean_s1051 : (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e4))))) :=
  (scope (fun lean_a587 : (Not (Eq (op e2 e2) (op e2 e4))) =>
    (scope (fun lean_a588 : (Eq e2 (op e2 e2)) =>
      have lean_s1051 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a588
      have lean_s1052 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s1051
      let lean_s1053 := by timed flipCongrArg lean_s1052 [Eq]
      have lean_s1054 : (Eq (op e2 e4) (op e2 e4)) := by timed rfl
      have lean_s1055 : (Eq (Eq e2 (op e2 e4)) (Eq (op e2 e2) (op e2 e4))) := by timed congr lean_s1053 lean_s1054
      have lean_s1056 : (Eq (Eq (op e2 e2) (op e2 e4)) False) := by timed falseIntro lean_a587
      have lean_s1057 : (Eq (Eq e2 (op e2 e4)) False) := by timed Eq.trans lean_s1055 lean_s1056
      have lean_s1058 : (Not (Eq e2 (op e2 e4))) := by timed falseElim lean_s1057
      show (Not (Eq e2 (op e2 e4))) from lean_s1058
  ))))
have lean_s1052 : (Implies (And (Not (Eq (op e2 e2) (op e2 e4))) (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e4)))) := by liftOrNToImp lean_s1051, 2
have lean_s1053 : (Or (Not (And (Not (Eq (op e2 e2) (op e2 e4))) (Eq e2 (op e2 e2)))) (Not (Eq e2 (op e2 e4)))) := by timed impliesElim lean_s1052
have lean_s1054 : (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e4))))) := by R1 lean_s1050, lean_s1053, (And (Not (Eq (op e2 e2) (op e2 e4))) (Eq e2 (op e2 e2))), [(- 1), (- 1)]
have lean_s1055 : (Eq Or Or) := by timed rfl
let lean_s1056 := by timed congr lean_s1055 lean_s11
let lean_s1057 := by timed congr lean_s1055 lean_s13
have lean_s1058 : (Eq (Not (Eq e2 (op e2 e4))) (Not (Eq e2 (op e2 e4)))) := by timed rfl
let lean_s1059 := by timed congr lean_s1057 lean_s1058
have lean_s1060 : (Eq (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e4))))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e4)))))) := by timed congr lean_s1056 lean_s1059
have lean_s1061 : (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e4))))) := by timed eqResolve lean_s1054 lean_s1060
let lean_s1062 := by R1 lean_s1061, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
have lean_s1063 : (Not (Eq e2 (op e2 e4))) := by R2 lean_s1062, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s1064 : (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e4 e4)))))))))))) := by R1 lean_s1049, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
have lean_s1065 : (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e4 e0)) (Or (Eq e2 (op e4 e4)) (Or (Eq e2 (op e1 e4)) (Eq e2 (op e3 e4))))))))))) := by factor lean_s1064, 10
have lean_s1066 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e4 e0)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e1 (op e4 e2)))))))))))) := by permutateOr lean_s1065, [8, 9, 5, 6, 2, 3, 7, 4, 0, 1], (- 1)
let lean_s1067 := by R1 lean_s1066, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s1068 := by R1 lean_s1067, lean_s740, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
have lean_s1069 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e4 e0)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e4 e2))))))))))))) := by R2 lean_s1068, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s1070 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e4 e0)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Eq e0 (op e3 e4)))))))))) := by factor lean_s1069, 10
have lean_s1071 : (Eq And And) := by timed rfl
have lean_s1072 : (Eq Or Or) := by timed rfl
let lean_s1073 := by timed congr lean_s1072 lean_r396
let lean_s1074 := by timed congr lean_s1072 lean_r371
let lean_s1075 := by timed congr lean_s1072 lean_r368
let lean_s1076 := by timed congr lean_s1072 lean_r362
let lean_s1077 := by timed congr lean_s1076 lean_r164
let lean_s1078 := by timed congr lean_s1075 lean_s1077
let lean_s1079 := by timed congr lean_s1074 lean_s1078
have lean_s1080 : (Eq (Or (Eq (op e0 e0) e0) (Or (Eq (op e0 e0) e1) (Or (Eq (op e0 e0) e2) (Or (Eq (op e0 e0) e3) (Eq (op e0 e0) e4))))) (Or (Eq e0 (op e0 e0)) (Or (Eq e1 (op e0 e0)) (Or (Eq e2 (op e0 e0)) (Or (Eq e3 (op e0 e0)) (Eq e4 (op e0 e0))))))) := by timed congr lean_s1073 lean_s1079
have lean_s1081 : (Eq (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Eq e0 (op e0 e0)) (Or (Eq e1 (op e0 e0)) (Or (Eq e2 (op e0 e0)) (Or (Eq e3 (op e0 e0)) (Eq e4 (op e0 e0))))))) := by timed Eq.trans lean_r51 lean_s1080
let lean_s1082 := by timed congr lean_s1071 lean_s1081
have lean_s1083 : (Eq Or Or) := by timed rfl
let lean_s1084 := by timed congr lean_s1083 lean_r234
let lean_s1085 := by timed congr lean_s1083 lean_r344
let lean_s1086 := by timed congr lean_s1083 lean_r118
let lean_s1087 := by timed congr lean_s1083 lean_r227
let lean_s1088 := by timed congr lean_s1087 lean_r338
let lean_s1089 := by timed congr lean_s1086 lean_s1088
let lean_s1090 := by timed congr lean_s1085 lean_s1089
have lean_s1091 : (Eq (Or (Eq (op e0 e1) e0) (Or (Eq (op e0 e1) e1) (Or (Eq (op e0 e1) e2) (Or (Eq (op e0 e1) e3) (Eq (op e0 e1) e4))))) (Or (Eq e0 (op e0 e1)) (Or (Eq e1 (op e0 e1)) (Or (Eq e2 (op e0 e1)) (Or (Eq e3 (op e0 e1)) (Eq e4 (op e0 e1))))))) := by timed congr lean_s1084 lean_s1090
have lean_s1092 : (Eq (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4)) (Or (Eq e0 (op e0 e1)) (Or (Eq e1 (op e0 e1)) (Or (Eq e2 (op e0 e1)) (Or (Eq e3 (op e0 e1)) (Eq e4 (op e0 e1))))))) := by timed Eq.trans lean_r52 lean_s1091
let lean_s1093 := by timed congr lean_s1071 lean_s1092
have lean_s1094 : (Eq Or Or) := by timed rfl
let lean_s1095 := by timed congr lean_s1094 lean_r269
let lean_s1096 := by timed congr lean_s1094 lean_r317
let lean_s1097 := by timed congr lean_s1094 lean_r395
let lean_s1098 := by timed congr lean_s1094 lean_r129
let lean_s1099 := by timed congr lean_s1098 lean_r252
let lean_s1100 := by timed congr lean_s1097 lean_s1099
let lean_s1101 := by timed congr lean_s1096 lean_s1100
have lean_s1102 : (Eq (Or (Eq (op e0 e2) e0) (Or (Eq (op e0 e2) e1) (Or (Eq (op e0 e2) e2) (Or (Eq (op e0 e2) e3) (Eq (op e0 e2) e4))))) (Or (Eq e0 (op e0 e2)) (Or (Eq e1 (op e0 e2)) (Or (Eq e2 (op e0 e2)) (Or (Eq e3 (op e0 e2)) (Eq e4 (op e0 e2))))))) := by timed congr lean_s1095 lean_s1101
have lean_s1103 : (Eq (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4)) (Or (Eq e0 (op e0 e2)) (Or (Eq e1 (op e0 e2)) (Or (Eq e2 (op e0 e2)) (Or (Eq e3 (op e0 e2)) (Eq e4 (op e0 e2))))))) := by timed Eq.trans lean_r185 lean_s1102
let lean_s1104 := by timed congr lean_s1071 lean_s1103
have lean_s1105 : (Eq Or Or) := by timed rfl
let lean_s1106 := by timed congr lean_s1105 lean_r117
let lean_s1107 := by timed congr lean_s1105 lean_r223
let lean_s1108 := by timed congr lean_s1105 lean_r138
let lean_s1109 := by timed congr lean_s1105 lean_r219
let lean_s1110 := by timed congr lean_s1109 lean_r367
let lean_s1111 := by timed congr lean_s1108 lean_s1110
let lean_s1112 := by timed congr lean_s1107 lean_s1111
have lean_s1113 : (Eq (Or (Eq (op e0 e3) e0) (Or (Eq (op e0 e3) e1) (Or (Eq (op e0 e3) e2) (Or (Eq (op e0 e3) e3) (Eq (op e0 e3) e4))))) (Or (Eq e0 (op e0 e3)) (Or (Eq e1 (op e0 e3)) (Or (Eq e2 (op e0 e3)) (Or (Eq e3 (op e0 e3)) (Eq e4 (op e0 e3))))))) := by timed congr lean_s1106 lean_s1112
have lean_s1114 : (Eq (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4)) (Or (Eq e0 (op e0 e3)) (Or (Eq e1 (op e0 e3)) (Or (Eq e2 (op e0 e3)) (Or (Eq e3 (op e0 e3)) (Eq e4 (op e0 e3))))))) := by timed Eq.trans lean_r237 lean_s1113
let lean_s1115 := by timed congr lean_s1071 lean_s1114
have lean_s1116 : (Eq Or Or) := by timed rfl
let lean_s1117 := by timed congr lean_s1116 lean_r158
let lean_s1118 := by timed congr lean_s1116 lean_r171
let lean_s1119 := by timed congr lean_s1116 lean_r186
let lean_s1120 := by timed congr lean_s1116 lean_r331
let lean_s1121 := by timed congr lean_s1120 lean_r273
let lean_s1122 := by timed congr lean_s1119 lean_s1121
let lean_s1123 := by timed congr lean_s1118 lean_s1122
have lean_s1124 : (Eq (Or (Eq (op e0 e4) e0) (Or (Eq (op e0 e4) e1) (Or (Eq (op e0 e4) e2) (Or (Eq (op e0 e4) e3) (Eq (op e0 e4) e4))))) (Or (Eq e0 (op e0 e4)) (Or (Eq e1 (op e0 e4)) (Or (Eq e2 (op e0 e4)) (Or (Eq e3 (op e0 e4)) (Eq e4 (op e0 e4))))))) := by timed congr lean_s1117 lean_s1123
have lean_s1125 : (Eq (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4)) (Or (Eq e0 (op e0 e4)) (Or (Eq e1 (op e0 e4)) (Or (Eq e2 (op e0 e4)) (Or (Eq e3 (op e0 e4)) (Eq e4 (op e0 e4))))))) := by timed Eq.trans lean_r53 lean_s1124
let lean_s1126 := by timed congr lean_s1071 lean_s1125
have lean_s1127 : (Eq Or Or) := by timed rfl
let lean_s1128 := by timed congr lean_s1127 lean_r352
let lean_s1129 := by timed congr lean_s1127 lean_r197
let lean_s1130 := by timed congr lean_s1127 lean_r172
let lean_s1131 := by timed congr lean_s1127 lean_r343
let lean_s1132 := by timed congr lean_s1131 lean_r330
let lean_s1133 := by timed congr lean_s1130 lean_s1132
let lean_s1134 := by timed congr lean_s1129 lean_s1133
have lean_s1135 : (Eq (Or (Eq (op e1 e0) e0) (Or (Eq (op e1 e0) e1) (Or (Eq (op e1 e0) e2) (Or (Eq (op e1 e0) e3) (Eq (op e1 e0) e4))))) (Or (Eq e0 (op e1 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e3 (op e1 e0)) (Eq e4 (op e1 e0))))))) := by timed congr lean_s1128 lean_s1134
have lean_s1136 : (Eq (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Eq e0 (op e1 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e3 (op e1 e0)) (Eq e4 (op e1 e0))))))) := by timed Eq.trans lean_r54 lean_s1135
let lean_s1137 := by timed congr lean_s1071 lean_s1136
have lean_s1138 : (Eq Or Or) := by timed rfl
let lean_s1139 := by timed congr lean_s1138 lean_r292
let lean_s1140 := by timed congr lean_s1138 lean_r389
let lean_s1141 := by timed congr lean_s1138 lean_r416
let lean_s1142 := by timed congr lean_s1138 lean_r336
let lean_s1143 := by timed congr lean_s1142 lean_r130
let lean_s1144 := by timed congr lean_s1141 lean_s1143
let lean_s1145 := by timed congr lean_s1140 lean_s1144
have lean_s1146 : (Eq (Or (Eq (op e1 e1) e0) (Or (Eq (op e1 e1) e1) (Or (Eq (op e1 e1) e2) (Or (Eq (op e1 e1) e3) (Eq (op e1 e1) e4))))) (Or (Eq e0 (op e1 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e3 (op e1 e1)) (Eq e4 (op e1 e1))))))) := by timed congr lean_s1139 lean_s1145
have lean_s1147 : (Eq (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e3 (op e1 e1)) (Eq e4 (op e1 e1))))))) := by timed Eq.trans lean_r55 lean_s1146
let lean_s1148 := by timed congr lean_s1071 lean_s1147
have lean_s1149 : (Eq Or Or) := by timed rfl
let lean_s1150 := by timed congr lean_s1149 lean_r261
let lean_s1151 := by timed congr lean_s1149 lean_r314
let lean_s1152 := by timed congr lean_s1149 lean_r390
let lean_s1153 := by timed congr lean_s1149 lean_r135
let lean_s1154 := by timed congr lean_s1153 lean_r427
let lean_s1155 := by timed congr lean_s1152 lean_s1154
let lean_s1156 := by timed congr lean_s1151 lean_s1155
have lean_s1157 : (Eq (Or (Eq (op e1 e2) e0) (Or (Eq (op e1 e2) e1) (Or (Eq (op e1 e2) e2) (Or (Eq (op e1 e2) e3) (Eq (op e1 e2) e4))))) (Or (Eq e0 (op e1 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e3 (op e1 e2)) (Eq e4 (op e1 e2))))))) := by timed congr lean_s1150 lean_s1156
have lean_s1158 : (Eq (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4)) (Or (Eq e0 (op e1 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e3 (op e1 e2)) (Eq e4 (op e1 e2))))))) := by timed Eq.trans lean_r287 lean_s1157
let lean_s1159 := by timed congr lean_s1071 lean_s1158
have lean_s1160 : (Eq Or Or) := by timed rfl
let lean_s1161 := by timed congr lean_s1160 lean_r119
let lean_s1162 := by timed congr lean_s1160 lean_r341
let lean_s1163 := by timed congr lean_s1160 lean_r140
let lean_s1164 := by timed congr lean_s1160 lean_r324
let lean_s1165 := by timed congr lean_s1164 lean_r216
let lean_s1166 := by timed congr lean_s1163 lean_s1165
let lean_s1167 := by timed congr lean_s1162 lean_s1166
have lean_s1168 : (Eq (Or (Eq (op e1 e3) e0) (Or (Eq (op e1 e3) e1) (Or (Eq (op e1 e3) e2) (Or (Eq (op e1 e3) e3) (Eq (op e1 e3) e4))))) (Or (Eq e0 (op e1 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e3 (op e1 e3)) (Eq e4 (op e1 e3))))))) := by timed congr lean_s1161 lean_s1167
have lean_s1169 : (Eq (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4)) (Or (Eq e0 (op e1 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e3 (op e1 e3)) (Eq e4 (op e1 e3))))))) := by timed Eq.trans lean_r56 lean_s1168
let lean_s1170 := by timed congr lean_s1071 lean_s1169
have lean_s1171 : (Eq Or Or) := by timed rfl
let lean_s1172 := by timed congr lean_s1171 lean_r159
let lean_s1173 := by timed congr lean_s1171 lean_r209
let lean_s1174 := by timed congr lean_s1171 lean_r228
let lean_s1175 := by timed congr lean_s1171 lean_r329
let lean_s1176 := by timed congr lean_s1175 lean_r268
let lean_s1177 := by timed congr lean_s1174 lean_s1176
let lean_s1178 := by timed congr lean_s1173 lean_s1177
have lean_s1179 : (Eq (Or (Eq (op e1 e4) e0) (Or (Eq (op e1 e4) e1) (Or (Eq (op e1 e4) e2) (Or (Eq (op e1 e4) e3) (Eq (op e1 e4) e4))))) (Or (Eq e0 (op e1 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e3 (op e1 e4)) (Eq e4 (op e1 e4))))))) := by timed congr lean_s1172 lean_s1178
have lean_s1180 : (Eq (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e3 (op e1 e4)) (Eq e4 (op e1 e4))))))) := by timed Eq.trans lean_r143 lean_s1179
let lean_s1181 := by timed congr lean_s1071 lean_s1180
have lean_s1182 : (Eq Or Or) := by timed rfl
let lean_s1183 := by timed congr lean_s1182 lean_r233
let lean_s1184 := by timed congr lean_s1182 lean_r321
let lean_s1185 := by timed congr lean_s1182 lean_r308
let lean_s1186 := by timed congr lean_s1182 lean_r126
let lean_s1187 := by timed congr lean_s1186 lean_r182
let lean_s1188 := by timed congr lean_s1185 lean_s1187
let lean_s1189 := by timed congr lean_s1184 lean_s1188
have lean_s1190 : (Eq (Or (Eq (op e2 e0) e0) (Or (Eq (op e2 e0) e1) (Or (Eq (op e2 e0) e2) (Or (Eq (op e2 e0) e3) (Eq (op e2 e0) e4))))) (Or (Eq e0 (op e2 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e3 (op e2 e0)) (Eq e4 (op e2 e0))))))) := by timed congr lean_s1183 lean_s1189
have lean_s1191 : (Eq (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Eq e0 (op e2 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e3 (op e2 e0)) (Eq e4 (op e2 e0))))))) := by timed Eq.trans lean_r57 lean_s1190
let lean_s1192 := by timed congr lean_s1071 lean_s1191
have lean_s1193 : (Eq Or Or) := by timed rfl
let lean_s1194 := by timed congr lean_s1193 lean_r290
let lean_s1195 := by timed congr lean_s1193 lean_r318
let lean_s1196 := by timed congr lean_s1193 lean_r307
let lean_s1197 := by timed congr lean_s1193 lean_r306
let lean_s1198 := by timed congr lean_s1197 lean_r244
let lean_s1199 := by timed congr lean_s1196 lean_s1198
let lean_s1200 := by timed congr lean_s1195 lean_s1199
have lean_s1201 : (Eq (Or (Eq (op e2 e1) e0) (Or (Eq (op e2 e1) e1) (Or (Eq (op e2 e1) e2) (Or (Eq (op e2 e1) e3) (Eq (op e2 e1) e4))))) (Or (Eq e0 (op e2 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e3 (op e2 e1)) (Eq e4 (op e2 e1))))))) := by timed congr lean_s1194 lean_s1200
have lean_s1202 : (Eq (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4)) (Or (Eq e0 (op e2 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e3 (op e2 e1)) (Eq e4 (op e2 e1))))))) := by timed Eq.trans lean_r203 lean_s1201
let lean_s1203 := by timed congr lean_s1071 lean_s1202
have lean_s1204 : (Eq Or Or) := by timed rfl
let lean_s1205 := by timed congr lean_s1204 lean_r286
let lean_s1206 := by timed congr lean_s1204 lean_r311
let lean_s1207 := by timed congr lean_s1204 lean_r280
let lean_s1208 := by timed congr lean_s1204 lean_r178
let lean_s1209 := by timed congr lean_s1208 lean_r425
let lean_s1210 := by timed congr lean_s1207 lean_s1209
let lean_s1211 := by timed congr lean_s1206 lean_s1210
have lean_s1212 : (Eq (Or (Eq (op e2 e2) e0) (Or (Eq (op e2 e2) e1) (Or (Eq (op e2 e2) e2) (Or (Eq (op e2 e2) e3) (Eq (op e2 e2) e4))))) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e3 (op e2 e2)) (Eq e4 (op e2 e2))))))) := by timed congr lean_s1205 lean_s1211
have lean_s1213 : (Eq (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e3 (op e2 e2)) (Eq e4 (op e2 e2))))))) := by timed Eq.trans lean_r58 lean_s1212
let lean_s1214 := by timed congr lean_s1071 lean_s1213
have lean_s1215 : (Eq Or Or) := by timed rfl
let lean_s1216 := by timed congr lean_s1215 lean_r121
let lean_s1217 := by timed congr lean_s1215 lean_r226
let lean_s1218 := by timed congr lean_s1215 lean_r144
let lean_s1219 := by timed congr lean_s1215 lean_r320
let lean_s1220 := by timed congr lean_s1219 lean_r373
let lean_s1221 := by timed congr lean_s1218 lean_s1220
let lean_s1222 := by timed congr lean_s1217 lean_s1221
have lean_s1223 : (Eq (Or (Eq (op e2 e3) e0) (Or (Eq (op e2 e3) e1) (Or (Eq (op e2 e3) e2) (Or (Eq (op e2 e3) e3) (Eq (op e2 e3) e4))))) (Or (Eq e0 (op e2 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e3 (op e2 e3)) (Eq e4 (op e2 e3))))))) := by timed congr lean_s1216 lean_s1222
have lean_s1224 : (Eq (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4)) (Or (Eq e0 (op e2 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e3 (op e2 e3)) (Eq e4 (op e2 e3))))))) := by timed Eq.trans lean_r59 lean_s1223
let lean_s1225 := by timed congr lean_s1071 lean_s1224
have lean_s1226 : (Eq Or Or) := by timed rfl
let lean_s1227 := by timed congr lean_s1226 lean_r161
let lean_s1228 := by timed congr lean_s1226 lean_r353
let lean_s1229 := by timed congr lean_s1226 lean_r212
let lean_s1230 := by timed congr lean_s1226 lean_r231
let lean_s1231 := by timed congr lean_s1230 lean_r260
let lean_s1232 := by timed congr lean_s1229 lean_s1231
let lean_s1233 := by timed congr lean_s1228 lean_s1232
have lean_s1234 : (Eq (Or (Eq (op e2 e4) e0) (Or (Eq (op e2 e4) e1) (Or (Eq (op e2 e4) e2) (Or (Eq (op e2 e4) e3) (Eq (op e2 e4) e4))))) (Or (Eq e0 (op e2 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e3 (op e2 e4)) (Eq e4 (op e2 e4))))))) := by timed congr lean_s1227 lean_s1233
have lean_s1235 : (Eq (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)) (Or (Eq e0 (op e2 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e3 (op e2 e4)) (Eq e4 (op e2 e4))))))) := by timed Eq.trans lean_r147 lean_s1234
let lean_s1236 := by timed congr lean_s1071 lean_s1235
have lean_s1237 : (Eq Or Or) := by timed rfl
let lean_s1238 := by timed congr lean_s1237 lean_r114
let lean_s1239 := by timed congr lean_s1237 lean_r177
let lean_s1240 := by timed congr lean_s1237 lean_r133
let lean_s1241 := by timed congr lean_s1237 lean_r298
let lean_s1242 := by timed congr lean_s1241 lean_r313
let lean_s1243 := by timed congr lean_s1240 lean_s1242
let lean_s1244 := by timed congr lean_s1239 lean_s1243
have lean_s1245 : (Eq (Or (Eq (op e3 e0) e0) (Or (Eq (op e3 e0) e1) (Or (Eq (op e3 e0) e2) (Or (Eq (op e3 e0) e3) (Eq (op e3 e0) e4))))) (Or (Eq e0 (op e3 e0)) (Or (Eq e1 (op e3 e0)) (Or (Eq e2 (op e3 e0)) (Or (Eq e3 (op e3 e0)) (Eq e4 (op e3 e0))))))) := by timed congr lean_s1238 lean_s1244
have lean_s1246 : (Eq (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Eq e0 (op e3 e0)) (Or (Eq e1 (op e3 e0)) (Or (Eq e2 (op e3 e0)) (Or (Eq e3 (op e3 e0)) (Eq e4 (op e3 e0))))))) := by timed Eq.trans lean_r60 lean_s1245
let lean_s1247 := by timed congr lean_s1071 lean_s1246
have lean_s1248 : (Eq Or Or) := by timed rfl
let lean_s1249 := by timed congr lean_s1248 lean_r149
let lean_s1250 := by timed congr lean_s1248 lean_r239
let lean_s1251 := by timed congr lean_s1248 lean_r136
let lean_s1252 := by timed congr lean_s1248 lean_r204
let lean_s1253 := by timed congr lean_s1252 lean_r310
let lean_s1254 := by timed congr lean_s1251 lean_s1253
let lean_s1255 := by timed congr lean_s1250 lean_s1254
have lean_s1256 : (Eq (Or (Eq (op e3 e1) e0) (Or (Eq (op e3 e1) e1) (Or (Eq (op e3 e1) e2) (Or (Eq (op e3 e1) e3) (Eq (op e3 e1) e4))))) (Or (Eq e0 (op e3 e1)) (Or (Eq e1 (op e3 e1)) (Or (Eq e2 (op e3 e1)) (Or (Eq e3 (op e3 e1)) (Eq e4 (op e3 e1))))))) := by timed congr lean_s1249 lean_s1255
have lean_s1257 : (Eq (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4)) (Or (Eq e0 (op e3 e1)) (Or (Eq e1 (op e3 e1)) (Or (Eq e2 (op e3 e1)) (Or (Eq e3 (op e3 e1)) (Eq e4 (op e3 e1))))))) := by timed Eq.trans lean_r61 lean_s1256
let lean_s1258 := by timed congr lean_s1071 lean_s1257
have lean_s1259 : (Eq Or Or) := by timed rfl
let lean_s1260 := by timed congr lean_s1259 lean_r346
let lean_s1261 := by timed congr lean_s1259 lean_r173
let lean_s1262 := by timed congr lean_s1259 lean_r137
let lean_s1263 := by timed congr lean_s1259 lean_r146
let lean_s1264 := by timed congr lean_s1263 lean_r191
let lean_s1265 := by timed congr lean_s1262 lean_s1264
let lean_s1266 := by timed congr lean_s1261 lean_s1265
have lean_s1267 : (Eq (Or (Eq (op e3 e2) e0) (Or (Eq (op e3 e2) e1) (Or (Eq (op e3 e2) e2) (Or (Eq (op e3 e2) e3) (Eq (op e3 e2) e4))))) (Or (Eq e0 (op e3 e2)) (Or (Eq e1 (op e3 e2)) (Or (Eq e2 (op e3 e2)) (Or (Eq e3 (op e3 e2)) (Eq e4 (op e3 e2))))))) := by timed congr lean_s1260 lean_s1266
have lean_s1268 : (Eq (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4)) (Or (Eq e0 (op e3 e2)) (Or (Eq e1 (op e3 e2)) (Or (Eq e2 (op e3 e2)) (Or (Eq e3 (op e3 e2)) (Eq e4 (op e3 e2))))))) := by timed Eq.trans lean_r62 lean_s1267
let lean_s1269 := by timed congr lean_s1071 lean_s1268
have lean_s1270 : (Eq Or Or) := by timed rfl
let lean_s1271 := by timed congr lean_s1270 lean_r156
let lean_s1272 := by timed congr lean_s1270 lean_r335
let lean_s1273 := by timed congr lean_s1270 lean_r145
let lean_s1274 := by timed congr lean_s1270 lean_r277
let lean_s1275 := by timed congr lean_s1274 lean_r235
let lean_s1276 := by timed congr lean_s1273 lean_s1275
let lean_s1277 := by timed congr lean_s1272 lean_s1276
have lean_s1278 : (Eq (Or (Eq (op e3 e3) e0) (Or (Eq (op e3 e3) e1) (Or (Eq (op e3 e3) e2) (Or (Eq (op e3 e3) e3) (Eq (op e3 e3) e4))))) (Or (Eq e0 (op e3 e3)) (Or (Eq e1 (op e3 e3)) (Or (Eq e2 (op e3 e3)) (Or (Eq e3 (op e3 e3)) (Eq e4 (op e3 e3))))))) := by timed congr lean_s1271 lean_s1277
have lean_s1279 : (Eq (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4)) (Or (Eq e0 (op e3 e3)) (Or (Eq e1 (op e3 e3)) (Or (Eq e2 (op e3 e3)) (Or (Eq e3 (op e3 e3)) (Eq e4 (op e3 e3))))))) := by timed Eq.trans lean_r63 lean_s1278
let lean_s1280 := by timed congr lean_s1071 lean_s1279
have lean_s1281 : (Eq Or Or) := by timed rfl
let lean_s1282 := by timed congr lean_s1281 lean_r163
let lean_s1283 := by timed congr lean_s1281 lean_r196
let lean_s1284 := by timed congr lean_s1281 lean_r189
let lean_s1285 := by timed congr lean_s1281 lean_r289
let lean_s1286 := by timed congr lean_s1285 lean_r285
let lean_s1287 := by timed congr lean_s1284 lean_s1286
let lean_s1288 := by timed congr lean_s1283 lean_s1287
have lean_s1289 : (Eq (Or (Eq (op e3 e4) e0) (Or (Eq (op e3 e4) e1) (Or (Eq (op e3 e4) e2) (Or (Eq (op e3 e4) e3) (Eq (op e3 e4) e4))))) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e3 e4)) (Eq e4 (op e3 e4))))))) := by timed congr lean_s1282 lean_s1288
have lean_s1290 : (Eq (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e3 e4)) (Eq e4 (op e3 e4))))))) := by timed Eq.trans lean_r359 lean_s1289
let lean_s1291 := by timed congr lean_s1071 lean_s1290
have lean_s1292 : (Eq Or Or) := by timed rfl
let lean_s1293 := by timed congr lean_s1292 lean_r154
let lean_s1294 := by timed congr lean_s1292 lean_r181
let lean_s1295 := by timed congr lean_s1292 lean_r276
let lean_s1296 := by timed congr lean_s1292 lean_r208
let lean_s1297 := by timed congr lean_s1296 lean_r278
let lean_s1298 := by timed congr lean_s1295 lean_s1297
let lean_s1299 := by timed congr lean_s1294 lean_s1298
have lean_s1300 : (Eq (Or (Eq (op e4 e0) e0) (Or (Eq (op e4 e0) e1) (Or (Eq (op e4 e0) e2) (Or (Eq (op e4 e0) e3) (Eq (op e4 e0) e4))))) (Or (Eq e0 (op e4 e0)) (Or (Eq e1 (op e4 e0)) (Or (Eq e2 (op e4 e0)) (Or (Eq e3 (op e4 e0)) (Eq e4 (op e4 e0))))))) := by timed congr lean_s1293 lean_s1299
have lean_s1301 : (Eq (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Eq e0 (op e4 e0)) (Or (Eq e1 (op e4 e0)) (Or (Eq e2 (op e4 e0)) (Or (Eq e3 (op e4 e0)) (Eq e4 (op e4 e0))))))) := by timed Eq.trans lean_r64 lean_s1300
let lean_s1302 := by timed congr lean_s1071 lean_s1301
have lean_s1303 : (Eq Or Or) := by timed rfl
let lean_s1304 := by timed congr lean_s1303 lean_r363
let lean_s1305 := by timed congr lean_s1303 lean_r243
let lean_s1306 := by timed congr lean_s1303 lean_r420
let lean_s1307 := by timed congr lean_s1303 lean_r221
let lean_s1308 := by timed congr lean_s1307 lean_r275
let lean_s1309 := by timed congr lean_s1306 lean_s1308
let lean_s1310 := by timed congr lean_s1305 lean_s1309
have lean_s1311 : (Eq (Or (Eq (op e4 e1) e0) (Or (Eq (op e4 e1) e1) (Or (Eq (op e4 e1) e2) (Or (Eq (op e4 e1) e3) (Eq (op e4 e1) e4))))) (Or (Eq e0 (op e4 e1)) (Or (Eq e1 (op e4 e1)) (Or (Eq e2 (op e4 e1)) (Or (Eq e3 (op e4 e1)) (Eq e4 (op e4 e1))))))) := by timed congr lean_s1304 lean_s1310
have lean_s1312 : (Eq (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4)) (Or (Eq e0 (op e4 e1)) (Or (Eq e1 (op e4 e1)) (Or (Eq e2 (op e4 e1)) (Or (Eq e3 (op e4 e1)) (Eq e4 (op e4 e1))))))) := by timed Eq.trans lean_r160 lean_s1311
let lean_s1313 := by timed congr lean_s1071 lean_s1312
have lean_s1314 : (Eq Or Or) := by timed rfl
let lean_s1315 := by timed congr lean_s1314 lean_r361
let lean_s1316 := by timed congr lean_s1314 lean_r166
let lean_s1317 := by timed congr lean_s1314 lean_r256
let lean_s1318 := by timed congr lean_s1314 lean_r296
let lean_s1319 := by timed congr lean_s1318 lean_r262
let lean_s1320 := by timed congr lean_s1317 lean_s1319
let lean_s1321 := by timed congr lean_s1316 lean_s1320
have lean_s1322 : (Eq (Or (Eq (op e4 e2) e0) (Or (Eq (op e4 e2) e1) (Or (Eq (op e4 e2) e2) (Or (Eq (op e4 e2) e3) (Eq (op e4 e2) e4))))) (Or (Eq e0 (op e4 e2)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e4 e2)) (Or (Eq e3 (op e4 e2)) (Eq e4 (op e4 e2))))))) := by timed congr lean_s1315 lean_s1321
have lean_s1323 : (Eq (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4)) (Or (Eq e0 (op e4 e2)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e4 e2)) (Or (Eq e3 (op e4 e2)) (Eq e4 (op e4 e2))))))) := by timed Eq.trans lean_r65 lean_s1322
let lean_s1324 := by timed congr lean_s1071 lean_s1323
have lean_s1325 : (Eq Or Or) := by timed rfl
let lean_s1326 := by timed congr lean_s1325 lean_r251
let lean_s1327 := by timed congr lean_s1325 lean_r168
let lean_s1328 := by timed congr lean_s1325 lean_r201
let lean_s1329 := by timed congr lean_s1325 lean_r399
let lean_s1330 := by timed congr lean_s1329 lean_r255
let lean_s1331 := by timed congr lean_s1328 lean_s1330
let lean_s1332 := by timed congr lean_s1327 lean_s1331
have lean_s1333 : (Eq (Or (Eq (op e4 e3) e0) (Or (Eq (op e4 e3) e1) (Or (Eq (op e4 e3) e2) (Or (Eq (op e4 e3) e3) (Eq (op e4 e3) e4))))) (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e4 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e3)) (Eq e4 (op e4 e3))))))) := by timed congr lean_s1326 lean_s1332
have lean_s1334 : (Eq (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4)) (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e4 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e3)) (Eq e4 (op e4 e3))))))) := by timed Eq.trans lean_r102 lean_s1333
let lean_s1335 := by timed congr lean_s1071 lean_s1334
have lean_s1336 : (Eq Or Or) := by timed rfl
let lean_s1337 := by timed congr lean_s1336 lean_r165
let lean_s1338 := by timed congr lean_s1336 lean_r190
let lean_s1339 := by timed congr lean_s1336 lean_r300
let lean_s1340 := by timed congr lean_s1336 lean_r288
let lean_s1341 := by timed congr lean_s1340 lean_r270
let lean_s1342 := by timed congr lean_s1339 lean_s1341
let lean_s1343 := by timed congr lean_s1338 lean_s1342
have lean_s1344 : (Eq (Or (Eq (op e4 e4) e0) (Or (Eq (op e4 e4) e1) (Or (Eq (op e4 e4) e2) (Or (Eq (op e4 e4) e3) (Eq (op e4 e4) e4))))) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e4)) (Or (Eq e2 (op e4 e4)) (Or (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4))))))) := by timed congr lean_s1337 lean_s1343
have lean_s1345 : (Eq (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e4)) (Or (Eq e2 (op e4 e4)) (Or (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4))))))) := by timed Eq.trans lean_r291 lean_s1344
let lean_s1346 := by timed congr lean_s1335 lean_s1345
let lean_s1347 := by timed congr lean_s1324 lean_s1346
let lean_s1348 := by timed congr lean_s1313 lean_s1347
let lean_s1349 := by timed congr lean_s1302 lean_s1348
let lean_s1350 := by timed congr lean_s1291 lean_s1349
let lean_s1351 := by timed congr lean_s1280 lean_s1350
let lean_s1352 := by timed congr lean_s1269 lean_s1351
let lean_s1353 := by timed congr lean_s1258 lean_s1352
let lean_s1354 := by timed congr lean_s1247 lean_s1353
let lean_s1355 := by timed congr lean_s1236 lean_s1354
let lean_s1356 := by timed congr lean_s1225 lean_s1355
let lean_s1357 := by timed congr lean_s1214 lean_s1356
let lean_s1358 := by timed congr lean_s1203 lean_s1357
let lean_s1359 := by timed congr lean_s1192 lean_s1358
let lean_s1360 := by timed congr lean_s1181 lean_s1359
let lean_s1361 := by timed congr lean_s1170 lean_s1360
let lean_s1362 := by timed congr lean_s1159 lean_s1361
let lean_s1363 := by timed congr lean_s1148 lean_s1362
let lean_s1364 := by timed congr lean_s1137 lean_s1363
let lean_s1365 := by timed congr lean_s1126 lean_s1364
let lean_s1366 := by timed congr lean_s1115 lean_s1365
let lean_s1367 := by timed congr lean_s1104 lean_s1366
let lean_s1368 := by timed congr lean_s1093 lean_s1367
have lean_s1369 : (Eq (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (And (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4)) (And (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4)) (And (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4)) (And (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4)) (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (And (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4)) (And (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4)) (And (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4)) (And (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)) (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (And (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4)) (And (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4)) (And (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4)) (And (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)) (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (And (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4)) (And (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4)) (And (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4)) (And (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)) (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (And (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4)) (And (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4)) (And (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4)) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)))))))))))))))))))))))))) (And (Or (Eq e0 (op e0 e0)) (Or (Eq e1 (op e0 e0)) (Or (Eq e2 (op e0 e0)) (Or (Eq e3 (op e0 e0)) (Eq e4 (op e0 e0)))))) (And (Or (Eq e0 (op e0 e1)) (Or (Eq e1 (op e0 e1)) (Or (Eq e2 (op e0 e1)) (Or (Eq e3 (op e0 e1)) (Eq e4 (op e0 e1)))))) (And (Or (Eq e0 (op e0 e2)) (Or (Eq e1 (op e0 e2)) (Or (Eq e2 (op e0 e2)) (Or (Eq e3 (op e0 e2)) (Eq e4 (op e0 e2)))))) (And (Or (Eq e0 (op e0 e3)) (Or (Eq e1 (op e0 e3)) (Or (Eq e2 (op e0 e3)) (Or (Eq e3 (op e0 e3)) (Eq e4 (op e0 e3)))))) (And (Or (Eq e0 (op e0 e4)) (Or (Eq e1 (op e0 e4)) (Or (Eq e2 (op e0 e4)) (Or (Eq e3 (op e0 e4)) (Eq e4 (op e0 e4)))))) (And (Or (Eq e0 (op e1 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e3 (op e1 e0)) (Eq e4 (op e1 e0)))))) (And (Or (Eq e0 (op e1 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e3 (op e1 e1)) (Eq e4 (op e1 e1)))))) (And (Or (Eq e0 (op e1 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e3 (op e1 e2)) (Eq e4 (op e1 e2)))))) (And (Or (Eq e0 (op e1 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e3 (op e1 e3)) (Eq e4 (op e1 e3)))))) (And (Or (Eq e0 (op e1 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e3 (op e1 e4)) (Eq e4 (op e1 e4)))))) (And (Or (Eq e0 (op e2 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e3 (op e2 e0)) (Eq e4 (op e2 e0)))))) (And (Or (Eq e0 (op e2 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e3 (op e2 e1)) (Eq e4 (op e2 e1)))))) (And (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e3 (op e2 e2)) (Eq e4 (op e2 e2)))))) (And (Or (Eq e0 (op e2 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e3 (op e2 e3)) (Eq e4 (op e2 e3)))))) (And (Or (Eq e0 (op e2 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e3 (op e2 e4)) (Eq e4 (op e2 e4)))))) (And (Or (Eq e0 (op e3 e0)) (Or (Eq e1 (op e3 e0)) (Or (Eq e2 (op e3 e0)) (Or (Eq e3 (op e3 e0)) (Eq e4 (op e3 e0)))))) (And (Or (Eq e0 (op e3 e1)) (Or (Eq e1 (op e3 e1)) (Or (Eq e2 (op e3 e1)) (Or (Eq e3 (op e3 e1)) (Eq e4 (op e3 e1)))))) (And (Or (Eq e0 (op e3 e2)) (Or (Eq e1 (op e3 e2)) (Or (Eq e2 (op e3 e2)) (Or (Eq e3 (op e3 e2)) (Eq e4 (op e3 e2)))))) (And (Or (Eq e0 (op e3 e3)) (Or (Eq e1 (op e3 e3)) (Or (Eq e2 (op e3 e3)) (Or (Eq e3 (op e3 e3)) (Eq e4 (op e3 e3)))))) (And (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e3 e4)) (Eq e4 (op e3 e4)))))) (And (Or (Eq e0 (op e4 e0)) (Or (Eq e1 (op e4 e0)) (Or (Eq e2 (op e4 e0)) (Or (Eq e3 (op e4 e0)) (Eq e4 (op e4 e0)))))) (And (Or (Eq e0 (op e4 e1)) (Or (Eq e1 (op e4 e1)) (Or (Eq e2 (op e4 e1)) (Or (Eq e3 (op e4 e1)) (Eq e4 (op e4 e1)))))) (And (Or (Eq e0 (op e4 e2)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e4 e2)) (Or (Eq e3 (op e4 e2)) (Eq e4 (op e4 e2)))))) (And (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e4 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e3)) (Eq e4 (op e4 e3)))))) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e4)) (Or (Eq e2 (op e4 e4)) (Or (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4))))))))))))))))))))))))))))))) := by timed congr lean_s1082 lean_s1368
have lean_s1370 : (Eq (And (And (And (And (And (And (And (And (Or (Or (Or (Or (Eq (op e0 e0) e0) (Eq (op e0 e0) e1)) (Eq (op e0 e0) e2)) (Eq (op e0 e0) e3)) (Eq (op e0 e0) e4)) (Or (Or (Or (Or (Eq (op e0 e1) e0) (Eq (op e0 e1) e1)) (Eq (op e0 e1) e2)) (Eq (op e0 e1) e3)) (Eq (op e0 e1) e4))) (Or (Or (Or (Or (Eq (op e0 e2) e0) (Eq (op e0 e2) e1)) (Eq (op e0 e2) e2)) (Eq (op e0 e2) e3)) (Eq (op e0 e2) e4))) (Or (Or (Or (Or (Eq (op e0 e3) e0) (Eq (op e0 e3) e1)) (Eq (op e0 e3) e2)) (Eq (op e0 e3) e3)) (Eq (op e0 e3) e4))) (Or (Or (Or (Or (Eq (op e0 e4) e0) (Eq (op e0 e4) e1)) (Eq (op e0 e4) e2)) (Eq (op e0 e4) e3)) (Eq (op e0 e4) e4))) (And (And (And (And (Or (Or (Or (Or (Eq (op e1 e0) e0) (Eq (op e1 e0) e1)) (Eq (op e1 e0) e2)) (Eq (op e1 e0) e3)) (Eq (op e1 e0) e4)) (Or (Or (Or (Or (Eq (op e1 e1) e0) (Eq (op e1 e1) e1)) (Eq (op e1 e1) e2)) (Eq (op e1 e1) e3)) (Eq (op e1 e1) e4))) (Or (Or (Or (Or (Eq (op e1 e2) e0) (Eq (op e1 e2) e1)) (Eq (op e1 e2) e2)) (Eq (op e1 e2) e3)) (Eq (op e1 e2) e4))) (Or (Or (Or (Or (Eq (op e1 e3) e0) (Eq (op e1 e3) e1)) (Eq (op e1 e3) e2)) (Eq (op e1 e3) e3)) (Eq (op e1 e3) e4))) (Or (Or (Or (Or (Eq (op e1 e4) e0) (Eq (op e1 e4) e1)) (Eq (op e1 e4) e2)) (Eq (op e1 e4) e3)) (Eq (op e1 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e2 e0) e0) (Eq (op e2 e0) e1)) (Eq (op e2 e0) e2)) (Eq (op e2 e0) e3)) (Eq (op e2 e0) e4)) (Or (Or (Or (Or (Eq (op e2 e1) e0) (Eq (op e2 e1) e1)) (Eq (op e2 e1) e2)) (Eq (op e2 e1) e3)) (Eq (op e2 e1) e4))) (Or (Or (Or (Or (Eq (op e2 e2) e0) (Eq (op e2 e2) e1)) (Eq (op e2 e2) e2)) (Eq (op e2 e2) e3)) (Eq (op e2 e2) e4))) (Or (Or (Or (Or (Eq (op e2 e3) e0) (Eq (op e2 e3) e1)) (Eq (op e2 e3) e2)) (Eq (op e2 e3) e3)) (Eq (op e2 e3) e4))) (Or (Or (Or (Or (Eq (op e2 e4) e0) (Eq (op e2 e4) e1)) (Eq (op e2 e4) e2)) (Eq (op e2 e4) e3)) (Eq (op e2 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e3 e0) e0) (Eq (op e3 e0) e1)) (Eq (op e3 e0) e2)) (Eq (op e3 e0) e3)) (Eq (op e3 e0) e4)) (Or (Or (Or (Or (Eq (op e3 e1) e0) (Eq (op e3 e1) e1)) (Eq (op e3 e1) e2)) (Eq (op e3 e1) e3)) (Eq (op e3 e1) e4))) (Or (Or (Or (Or (Eq (op e3 e2) e0) (Eq (op e3 e2) e1)) (Eq (op e3 e2) e2)) (Eq (op e3 e2) e3)) (Eq (op e3 e2) e4))) (Or (Or (Or (Or (Eq (op e3 e3) e0) (Eq (op e3 e3) e1)) (Eq (op e3 e3) e2)) (Eq (op e3 e3) e3)) (Eq (op e3 e3) e4))) (Or (Or (Or (Or (Eq (op e3 e4) e0) (Eq (op e3 e4) e1)) (Eq (op e3 e4) e2)) (Eq (op e3 e4) e3)) (Eq (op e3 e4) e4)))) (And (And (And (And (Or (Or (Or (Or (Eq (op e4 e0) e0) (Eq (op e4 e0) e1)) (Eq (op e4 e0) e2)) (Eq (op e4 e0) e3)) (Eq (op e4 e0) e4)) (Or (Or (Or (Or (Eq (op e4 e1) e0) (Eq (op e4 e1) e1)) (Eq (op e4 e1) e2)) (Eq (op e4 e1) e3)) (Eq (op e4 e1) e4))) (Or (Or (Or (Or (Eq (op e4 e2) e0) (Eq (op e4 e2) e1)) (Eq (op e4 e2) e2)) (Eq (op e4 e2) e3)) (Eq (op e4 e2) e4))) (Or (Or (Or (Or (Eq (op e4 e3) e0) (Eq (op e4 e3) e1)) (Eq (op e4 e3) e2)) (Eq (op e4 e3) e3)) (Eq (op e4 e3) e4))) (Or (Or (Or (Or (Eq (op e4 e4) e0) (Eq (op e4 e4) e1)) (Eq (op e4 e4) e2)) (Eq (op e4 e4) e3)) (Eq (op e4 e4) e4)))) (And (Or (Eq e0 (op e0 e0)) (Or (Eq e1 (op e0 e0)) (Or (Eq e2 (op e0 e0)) (Or (Eq e3 (op e0 e0)) (Eq e4 (op e0 e0)))))) (And (Or (Eq e0 (op e0 e1)) (Or (Eq e1 (op e0 e1)) (Or (Eq e2 (op e0 e1)) (Or (Eq e3 (op e0 e1)) (Eq e4 (op e0 e1)))))) (And (Or (Eq e0 (op e0 e2)) (Or (Eq e1 (op e0 e2)) (Or (Eq e2 (op e0 e2)) (Or (Eq e3 (op e0 e2)) (Eq e4 (op e0 e2)))))) (And (Or (Eq e0 (op e0 e3)) (Or (Eq e1 (op e0 e3)) (Or (Eq e2 (op e0 e3)) (Or (Eq e3 (op e0 e3)) (Eq e4 (op e0 e3)))))) (And (Or (Eq e0 (op e0 e4)) (Or (Eq e1 (op e0 e4)) (Or (Eq e2 (op e0 e4)) (Or (Eq e3 (op e0 e4)) (Eq e4 (op e0 e4)))))) (And (Or (Eq e0 (op e1 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e3 (op e1 e0)) (Eq e4 (op e1 e0)))))) (And (Or (Eq e0 (op e1 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e3 (op e1 e1)) (Eq e4 (op e1 e1)))))) (And (Or (Eq e0 (op e1 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e3 (op e1 e2)) (Eq e4 (op e1 e2)))))) (And (Or (Eq e0 (op e1 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e3 (op e1 e3)) (Eq e4 (op e1 e3)))))) (And (Or (Eq e0 (op e1 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e3 (op e1 e4)) (Eq e4 (op e1 e4)))))) (And (Or (Eq e0 (op e2 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e3 (op e2 e0)) (Eq e4 (op e2 e0)))))) (And (Or (Eq e0 (op e2 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e3 (op e2 e1)) (Eq e4 (op e2 e1)))))) (And (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e3 (op e2 e2)) (Eq e4 (op e2 e2)))))) (And (Or (Eq e0 (op e2 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e3 (op e2 e3)) (Eq e4 (op e2 e3)))))) (And (Or (Eq e0 (op e2 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e3 (op e2 e4)) (Eq e4 (op e2 e4)))))) (And (Or (Eq e0 (op e3 e0)) (Or (Eq e1 (op e3 e0)) (Or (Eq e2 (op e3 e0)) (Or (Eq e3 (op e3 e0)) (Eq e4 (op e3 e0)))))) (And (Or (Eq e0 (op e3 e1)) (Or (Eq e1 (op e3 e1)) (Or (Eq e2 (op e3 e1)) (Or (Eq e3 (op e3 e1)) (Eq e4 (op e3 e1)))))) (And (Or (Eq e0 (op e3 e2)) (Or (Eq e1 (op e3 e2)) (Or (Eq e2 (op e3 e2)) (Or (Eq e3 (op e3 e2)) (Eq e4 (op e3 e2)))))) (And (Or (Eq e0 (op e3 e3)) (Or (Eq e1 (op e3 e3)) (Or (Eq e2 (op e3 e3)) (Or (Eq e3 (op e3 e3)) (Eq e4 (op e3 e3)))))) (And (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e3 e4)) (Eq e4 (op e3 e4)))))) (And (Or (Eq e0 (op e4 e0)) (Or (Eq e1 (op e4 e0)) (Or (Eq e2 (op e4 e0)) (Or (Eq e3 (op e4 e0)) (Eq e4 (op e4 e0)))))) (And (Or (Eq e0 (op e4 e1)) (Or (Eq e1 (op e4 e1)) (Or (Eq e2 (op e4 e1)) (Or (Eq e3 (op e4 e1)) (Eq e4 (op e4 e1)))))) (And (Or (Eq e0 (op e4 e2)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e4 e2)) (Or (Eq e3 (op e4 e2)) (Eq e4 (op e4 e2)))))) (And (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e4 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e3)) (Eq e4 (op e4 e3)))))) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e4)) (Or (Eq e2 (op e4 e4)) (Or (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4))))))))))))))))))))))))))))))) := by timed Eq.trans lean_r141 lean_s1369
have lean_s1371 : (And (Or (Eq e0 (op e0 e0)) (Or (Eq e1 (op e0 e0)) (Or (Eq e2 (op e0 e0)) (Or (Eq e3 (op e0 e0)) (Eq e4 (op e0 e0)))))) (And (Or (Eq e0 (op e0 e1)) (Or (Eq e1 (op e0 e1)) (Or (Eq e2 (op e0 e1)) (Or (Eq e3 (op e0 e1)) (Eq e4 (op e0 e1)))))) (And (Or (Eq e0 (op e0 e2)) (Or (Eq e1 (op e0 e2)) (Or (Eq e2 (op e0 e2)) (Or (Eq e3 (op e0 e2)) (Eq e4 (op e0 e2)))))) (And (Or (Eq e0 (op e0 e3)) (Or (Eq e1 (op e0 e3)) (Or (Eq e2 (op e0 e3)) (Or (Eq e3 (op e0 e3)) (Eq e4 (op e0 e3)))))) (And (Or (Eq e0 (op e0 e4)) (Or (Eq e1 (op e0 e4)) (Or (Eq e2 (op e0 e4)) (Or (Eq e3 (op e0 e4)) (Eq e4 (op e0 e4)))))) (And (Or (Eq e0 (op e1 e0)) (Or (Eq e1 (op e1 e0)) (Or (Eq e2 (op e1 e0)) (Or (Eq e3 (op e1 e0)) (Eq e4 (op e1 e0)))))) (And (Or (Eq e0 (op e1 e1)) (Or (Eq e1 (op e1 e1)) (Or (Eq e2 (op e1 e1)) (Or (Eq e3 (op e1 e1)) (Eq e4 (op e1 e1)))))) (And (Or (Eq e0 (op e1 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e2 (op e1 e2)) (Or (Eq e3 (op e1 e2)) (Eq e4 (op e1 e2)))))) (And (Or (Eq e0 (op e1 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e3 (op e1 e3)) (Eq e4 (op e1 e3)))))) (And (Or (Eq e0 (op e1 e4)) (Or (Eq e1 (op e1 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e3 (op e1 e4)) (Eq e4 (op e1 e4)))))) (And (Or (Eq e0 (op e2 e0)) (Or (Eq e1 (op e2 e0)) (Or (Eq e2 (op e2 e0)) (Or (Eq e3 (op e2 e0)) (Eq e4 (op e2 e0)))))) (And (Or (Eq e0 (op e2 e1)) (Or (Eq e1 (op e2 e1)) (Or (Eq e2 (op e2 e1)) (Or (Eq e3 (op e2 e1)) (Eq e4 (op e2 e1)))))) (And (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e2 (op e2 e2)) (Or (Eq e3 (op e2 e2)) (Eq e4 (op e2 e2)))))) (And (Or (Eq e0 (op e2 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e3 (op e2 e3)) (Eq e4 (op e2 e3)))))) (And (Or (Eq e0 (op e2 e4)) (Or (Eq e1 (op e2 e4)) (Or (Eq e2 (op e2 e4)) (Or (Eq e3 (op e2 e4)) (Eq e4 (op e2 e4)))))) (And (Or (Eq e0 (op e3 e0)) (Or (Eq e1 (op e3 e0)) (Or (Eq e2 (op e3 e0)) (Or (Eq e3 (op e3 e0)) (Eq e4 (op e3 e0)))))) (And (Or (Eq e0 (op e3 e1)) (Or (Eq e1 (op e3 e1)) (Or (Eq e2 (op e3 e1)) (Or (Eq e3 (op e3 e1)) (Eq e4 (op e3 e1)))))) (And (Or (Eq e0 (op e3 e2)) (Or (Eq e1 (op e3 e2)) (Or (Eq e2 (op e3 e2)) (Or (Eq e3 (op e3 e2)) (Eq e4 (op e3 e2)))))) (And (Or (Eq e0 (op e3 e3)) (Or (Eq e1 (op e3 e3)) (Or (Eq e2 (op e3 e3)) (Or (Eq e3 (op e3 e3)) (Eq e4 (op e3 e3)))))) (And (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e3 e4)) (Eq e4 (op e3 e4)))))) (And (Or (Eq e0 (op e4 e0)) (Or (Eq e1 (op e4 e0)) (Or (Eq e2 (op e4 e0)) (Or (Eq e3 (op e4 e0)) (Eq e4 (op e4 e0)))))) (And (Or (Eq e0 (op e4 e1)) (Or (Eq e1 (op e4 e1)) (Or (Eq e2 (op e4 e1)) (Or (Eq e3 (op e4 e1)) (Eq e4 (op e4 e1)))))) (And (Or (Eq e0 (op e4 e2)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e4 e2)) (Or (Eq e3 (op e4 e2)) (Eq e4 (op e4 e2)))))) (And (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e4 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e3)) (Eq e4 (op e4 e3)))))) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e4)) (Or (Eq e2 (op e4 e4)) (Or (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4)))))))))))))))))))))))))))))) := by timed eqResolve lean_a430 lean_s1370
have lean_s1372 : (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e3 e4)) (Eq e4 (op e3 e4)))))) := by andElim lean_s1371, 19
have lean_s1373 : (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e3 (op e3 e4)) (Eq e4 (op e3 e4)))))) := by permutateOr lean_s1372, [2, 1, 0, 3, 4], (- 1)
let lean_s1374 := by R2 lean_s1070, lean_s1373, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s1375 : (Or (And (Eq e4 (op e4 e4)) (Eq e4 (op e3 e4))) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e4 (op e3 e4))))) := by timed cnfAndNeg [(Eq e4 (op e4 e4)), (Eq e4 (op e3 e4))]
have lean_s1376 : (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e3 e4))) (Eq (op e3 e4) (op e4 e4)))) :=
  (scope (fun lean_a587 : (Eq e4 (op e4 e4)) =>
    (scope (fun lean_a588 : (Eq e4 (op e3 e4)) =>
      have lean_s1376 : (Eq (op e3 e4) e4) := by timed Eq.symm lean_a588
      have lean_s1377 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a587
      have lean_s1378 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s1377
      have lean_s1379 : (Eq (op e3 e4) (op e4 e4)) := by timed Eq.trans lean_s1376 lean_s1378
      show (Eq (op e3 e4) (op e4 e4)) from lean_s1379
  ))))
have lean_s1377 : (Implies (And (Eq e4 (op e4 e4)) (Eq e4 (op e3 e4))) (Eq (op e3 e4) (op e4 e4))) := by liftOrNToImp lean_s1376, 2
have lean_s1378 : (Or (Not (And (Eq e4 (op e4 e4)) (Eq e4 (op e3 e4)))) (Eq (op e3 e4) (op e4 e4))) := by timed impliesElim lean_s1377
have lean_s1379 : (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e3 e4))) (Eq (op e3 e4) (op e4 e4)))) := by R1 lean_s1375, lean_s1378, (And (Eq e4 (op e4 e4)) (Eq e4 (op e3 e4))), [(- 1), (- 1)]
have lean_s1380 : (Or (Eq (op e3 e4) (op e4 e4)) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e4 (op e3 e4))))) := by permutateOr lean_s1379, [2, 0, 1], (- 1)
have lean_s1381 : (Not (Eq (op e3 e4) (op e4 e4))) := by andElim lean_s29, 49
let lean_s1382 := by R1 lean_s1380, lean_s1381, (Eq (op e3 e4) (op e4 e4)), [(- 1), 0]
have lean_s1383 : (Not (Eq e4 (op e3 e4))) := by R2 lean_s1382, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s1384 := by R1 lean_s1374, lean_s1383, (Eq e4 (op e3 e4)), [(- 1), 0]
have lean_s1385 : (Or (And (Not (Eq (op e3 e3) (op e3 e4))) (Eq e3 (op e3 e3))) (Or (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Not (Eq e3 (op e3 e3))))) := by timed cnfAndNeg [(Not (Eq (op e3 e3) (op e3 e4))), (Eq e3 (op e3 e3))]
have lean_s1386 : (Or (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e3 e4))))) :=
  (scope (fun lean_a588 : (Not (Eq (op e3 e3) (op e3 e4))) =>
    (scope (fun lean_a589 : (Eq e3 (op e3 e3)) =>
      have lean_s1386 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a589
      have lean_s1387 : (Eq e3 (op e3 e3)) := by timed Eq.symm lean_s1386
      let lean_s1388 := by timed flipCongrArg lean_s1387 [Eq]
      have lean_s1389 : (Eq (op e3 e4) (op e3 e4)) := by timed rfl
      have lean_s1390 : (Eq (Eq e3 (op e3 e4)) (Eq (op e3 e3) (op e3 e4))) := by timed congr lean_s1388 lean_s1389
      have lean_s1391 : (Eq (Eq (op e3 e3) (op e3 e4)) False) := by timed falseIntro lean_a588
      have lean_s1392 : (Eq (Eq e3 (op e3 e4)) False) := by timed Eq.trans lean_s1390 lean_s1391
      have lean_s1393 : (Not (Eq e3 (op e3 e4))) := by timed falseElim lean_s1392
      show (Not (Eq e3 (op e3 e4))) from lean_s1393
  ))))
have lean_s1387 : (Implies (And (Not (Eq (op e3 e3) (op e3 e4))) (Eq e3 (op e3 e3))) (Not (Eq e3 (op e3 e4)))) := by liftOrNToImp lean_s1386, 2
have lean_s1388 : (Or (Not (And (Not (Eq (op e3 e3) (op e3 e4))) (Eq e3 (op e3 e3)))) (Not (Eq e3 (op e3 e4)))) := by timed impliesElim lean_s1387
have lean_s1389 : (Or (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e3 e4))))) := by R1 lean_s1385, lean_s1388, (And (Not (Eq (op e3 e3) (op e3 e4))) (Eq e3 (op e3 e3))), [(- 1), (- 1)]
have lean_s1390 : (Eq Or Or) := by timed rfl
have lean_s1391 : (Eq (Eq (op e3 e3) (op e3 e4)) (Eq (op e3 e3) (op e3 e4))) := by timed rfl
let lean_s1392 := by timed flipCongrArg lean_s1391 [Eq]
have lean_s1393 : (Eq (Eq (Eq (op e3 e3) (op e3 e4)) (Not (Not (Eq (op e3 e3) (op e3 e4))))) (Eq (Eq (op e3 e3) (op e3 e4)) (Eq (op e3 e3) (op e3 e4)))) := by timed congr lean_s1392 lean_r106
have lean_s1394 : (Eq (Eq (Eq (op e3 e3) (op e3 e4)) (Not (Not (Eq (op e3 e3) (op e3 e4))))) True) := by timed Eq.trans lean_s1393 lean_r107
have lean_s1395 : (Eq (Eq (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Eq (op e3 e3) (op e3 e4))) True) := by timed Eq.trans lean_r105 lean_s1394
have lean_s1396 : (Eq (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Eq (op e3 e3) (op e3 e4))) := by timed trueElim lean_s1395
let lean_s1397 := by timed congr lean_s1390 lean_s1396
let lean_s1398 := by timed congr lean_s1390 lean_s17
have lean_s1399 : (Eq (Not (Eq e3 (op e3 e4))) (Not (Eq e3 (op e3 e4)))) := by timed rfl
let lean_s1400 := by timed congr lean_s1398 lean_s1399
have lean_s1401 : (Eq (Or (Not (Not (Eq (op e3 e3) (op e3 e4)))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e3 e4))))) (Or (Eq (op e3 e3) (op e3 e4)) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e3 e4)))))) := by timed congr lean_s1397 lean_s1400
have lean_s1402 : (Or (Eq (op e3 e3) (op e3 e4)) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e3 e4))))) := by timed eqResolve lean_s1389 lean_s1401
have lean_s1403 : (Not (Eq (op e3 e3) (op e3 e4))) := by andElim lean_s29, 89
let lean_s1404 := by R1 lean_s1402, lean_s1403, (Eq (op e3 e3) (op e3 e4)), [(- 1), 0]
have lean_s1405 : (Not (Eq e3 (op e3 e4))) := by R2 lean_s1404, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s1406 := by R1 lean_s1384, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s1407 : (Or (And (Eq e3 (op e3 e3)) (And (Eq e3 (op e4 e0)) (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e3 (op e2 e4)) (Eq e2 (op e2 e2)))))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e2 (op e2 e2)))))))) := by timed cnfAndNeg [(Eq e3 (op e3 e3)), (Eq e3 (op e4 e0)), (Not (Eq (op e2 e2) (op e2 e4))), (Eq e3 (op e2 e4)), (Eq e2 (op e2 e2))]
have lean_s1408 : (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e0)))))))) :=
  (scope (fun lean_a589 : (Eq e3 (op e3 e3)) =>
    (scope (fun lean_a590 : (Eq e3 (op e4 e0)) =>
      (scope (fun lean_a591 : (Not (Eq (op e2 e2) (op e2 e4))) =>
        (scope (fun lean_a592 : (Eq e3 (op e2 e4)) =>
          (scope (fun lean_a593 : (Eq e2 (op e2 e2)) =>
            have lean_s1408 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a593
            have lean_s1409 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s1408
            let lean_s1410 := by timed flipCongrArg lean_s1409 [Eq]
            have lean_s1411 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a589
            have lean_s1412 : (Eq (op e2 e4) e3) := by timed Eq.symm lean_a592
            have lean_s1413 : (Eq e3 (op e2 e4)) := by timed Eq.symm lean_s1412
            have lean_s1414 : (Eq (op e3 e3) (op e2 e4)) := by timed Eq.trans lean_s1411 lean_s1413
            have lean_s1415 : (Eq (op e2 e4) (op e3 e3)) := by timed Eq.symm lean_s1414
            have lean_s1416 : (Eq (op e4 e0) e3) := by timed Eq.symm lean_a590
            have lean_s1417 : (Eq (op e4 e0) (op e3 e3)) := by timed Eq.trans lean_s1416 lean_a589
            have lean_s1418 : (Eq (op e3 e3) (op e4 e0)) := by timed Eq.symm lean_s1417
            have lean_s1419 : (Eq (op e2 e4) (op e4 e0)) := by timed Eq.trans lean_s1415 lean_s1418
            have lean_s1420 : (Eq (op e4 e0) (op e2 e4)) := by timed Eq.symm lean_s1419
            have lean_s1421 : (Eq (Eq e2 (op e4 e0)) (Eq (op e2 e2) (op e2 e4))) := by timed congr lean_s1410 lean_s1420
            have lean_s1422 : (Eq (Eq (op e2 e2) (op e2 e4)) False) := by timed falseIntro lean_a591
            have lean_s1423 : (Eq (Eq e2 (op e4 e0)) False) := by timed Eq.trans lean_s1421 lean_s1422
            have lean_s1424 : (Not (Eq e2 (op e4 e0))) := by timed falseElim lean_s1423
            show (Not (Eq e2 (op e4 e0))) from lean_s1424
  ))))))))))
have lean_s1409 : (Implies (And (Eq e3 (op e3 e3)) (And (Eq e3 (op e4 e0)) (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e3 (op e2 e4)) (Eq e2 (op e2 e2)))))) (Not (Eq e2 (op e4 e0)))) := by liftOrNToImp lean_s1408, 5
have lean_s1410 : (Or (Not (And (Eq e3 (op e3 e3)) (And (Eq e3 (op e4 e0)) (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e3 (op e2 e4)) (Eq e2 (op e2 e2))))))) (Not (Eq e2 (op e4 e0)))) := by timed impliesElim lean_s1409
have lean_s1411 : (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e0)))))))) := by R1 lean_s1407, lean_s1410, (And (Eq e3 (op e3 e3)) (And (Eq e3 (op e4 e0)) (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e3 (op e2 e4)) (Eq e2 (op e2 e2)))))), [(- 1), (- 1)]
have lean_s1412 : (Eq Or Or) := by timed rfl
let lean_s1413 := by timed congr lean_s1412 lean_s17
let lean_s1414 := by timed congr lean_s1412 lean_s870
let lean_s1415 := by timed congr lean_s1412 lean_s11
let lean_s1416 := by timed congr lean_s1412 lean_s15
let lean_s1417 := by timed congr lean_s1412 lean_s13
have lean_s1418 : (Eq (Not (Eq e2 (op e4 e0))) (Not (Eq e2 (op e4 e0)))) := by timed rfl
let lean_s1419 := by timed congr lean_s1417 lean_s1418
let lean_s1420 := by timed congr lean_s1416 lean_s1419
let lean_s1421 := by timed congr lean_s1415 lean_s1420
let lean_s1422 := by timed congr lean_s1414 lean_s1421
have lean_s1423 : (Eq (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e0)))))))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e0))))))))) := by timed congr lean_s1413 lean_s1422
have lean_s1424 : (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e0)))))))) := by timed eqResolve lean_s1411 lean_s1423
have lean_s1425 : (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0)))))))) := by permutateOr lean_s1424, [2, 4, 0, 3, 5, 1], (- 1)
let lean_s1426 := by R1 lean_s1406, lean_s1425, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
have lean_s1427 : (Or (Eq e3 (op e0 e4)) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e2 e4)) (Or (Eq e3 (op e3 e4)) (Eq e3 (op e4 e4)))))) := by andElim lean_s647, 47
have lean_s1428 : (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e2 e4)) (Or (Eq e3 (op e0 e4)) (Or (Eq e3 (op e3 e4)) (Eq e3 (op e4 e4)))))) := by permutateOr lean_s1427, [1, 2, 0, 3, 4], (- 1)
let lean_s1429 := by R2 lean_s1426, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
have lean_s1430 : (Or (And (Not (Eq e3 e2)) (Eq e2 (op e0 e4))) (Or (Not (Not (Eq e3 e2))) (Not (Eq e2 (op e0 e4))))) := by timed cnfAndNeg [(Not (Eq e3 e2)), (Eq e2 (op e0 e4))]
have lean_s1431 : (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e3 (op e0 e4))))) :=
  (scope (fun lean_a589 : (Not (Eq e3 e2)) =>
    (scope (fun lean_a590 : (Eq e2 (op e0 e4)) =>
      have lean_s1431 : (Eq e3 e3) := by timed rfl
      let lean_s1432 := by timed flipCongrArg lean_s1431 [Eq]
      have lean_s1433 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a590
      have lean_s1434 : (Eq (Eq e3 (op e0 e4)) (Eq e3 e2)) := by timed congr lean_s1432 lean_s1433
      have lean_s1435 : (Eq (Eq e3 e2) False) := by timed falseIntro lean_a589
      have lean_s1436 : (Eq (Eq e3 (op e0 e4)) False) := by timed Eq.trans lean_s1434 lean_s1435
      have lean_s1437 : (Not (Eq e3 (op e0 e4))) := by timed falseElim lean_s1436
      show (Not (Eq e3 (op e0 e4))) from lean_s1437
  ))))
have lean_s1432 : (Implies (And (Not (Eq e3 e2)) (Eq e2 (op e0 e4))) (Not (Eq e3 (op e0 e4)))) := by liftOrNToImp lean_s1431, 2
have lean_s1433 : (Or (Not (And (Not (Eq e3 e2)) (Eq e2 (op e0 e4)))) (Not (Eq e3 (op e0 e4)))) := by timed impliesElim lean_s1432
have lean_s1434 : (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e3 (op e0 e4))))) := by R1 lean_s1430, lean_s1433, (And (Not (Eq e3 e2)) (Eq e2 (op e0 e4))), [(- 1), (- 1)]
have lean_s1435 : (Eq Or Or) := by timed rfl
have lean_s1436 : (Eq (Eq e3 e2) (Eq e3 e2)) := by timed rfl
let lean_s1437 := by timed flipCongrArg lean_s1436 [Eq]
have lean_s1438 : (Eq (Eq (Eq e3 e2) (Not (Not (Eq e3 e2)))) (Eq (Eq e3 e2) (Eq e3 e2))) := by timed congr lean_s1437 lean_r179
have lean_s1439 : (Eq (Eq (Eq e3 e2) (Not (Not (Eq e3 e2)))) True) := by timed Eq.trans lean_s1438 lean_r241
have lean_s1440 : (Eq (Eq (Not (Not (Eq e3 e2))) (Eq e3 e2)) True) := by timed Eq.trans lean_r134 lean_s1439
have lean_s1441 : (Eq (Not (Not (Eq e3 e2))) (Eq e3 e2)) := by timed trueElim lean_s1440
let lean_s1442 := by timed congr lean_s1435 lean_s1441
let lean_s1443 := by timed congr lean_s1435 lean_s839
have lean_s1444 : (Eq (Not (Eq e3 (op e0 e4))) (Not (Eq e3 (op e0 e4)))) := by timed rfl
let lean_s1445 := by timed congr lean_s1443 lean_s1444
have lean_s1446 : (Eq (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e3 (op e0 e4))))) (Or (Eq e3 e2) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e3 (op e0 e4)))))) := by timed congr lean_s1442 lean_s1445
have lean_s1447 : (Or (Eq e3 e2) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e3 (op e0 e4))))) := by timed eqResolve lean_s1434 lean_s1446
let lean_s1448 := by R1 lean_s1429, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s1449 : (Not (Eq e3 e2)) := by andElim lean_s709, 7
let lean_s1450 := by R1 lean_s1448, lean_s1449, (Eq e3 e2), [(- 1), 0]
let lean_s1451 := by R1 lean_s1450, lean_s1402, (Eq e3 (op e3 e4)), [(- 1), (- 1)]
let lean_s1452 := by R1 lean_s1451, lean_s1403, (Eq (op e3 e3) (op e3 e4)), [(- 1), 0]
have lean_s1453 : (Or (And (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4))) (Or (Not (Eq e3 (op e4 e4))) (Not (Eq e4 (op e4 e4))))) := by timed cnfAndNeg [(Eq e3 (op e4 e4)), (Eq e4 (op e4 e4))]
have lean_s1454 : (Or (Not (Eq e3 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e3))) :=
  (scope (fun lean_a590 : (Eq e3 (op e4 e4)) =>
    (scope (fun lean_a591 : (Eq e4 (op e4 e4)) =>
      have lean_s1454 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a591
      have lean_s1455 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s1454
      have lean_s1456 : (Eq (op e4 e4) e3) := by timed Eq.symm lean_a590
      have lean_s1457 : (Eq e4 e3) := by timed Eq.trans lean_s1455 lean_s1456
      show (Eq e4 e3) from lean_s1457
  ))))
have lean_s1455 : (Implies (And (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4))) (Eq e4 e3)) := by liftOrNToImp lean_s1454, 2
have lean_s1456 : (Or (Not (And (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4)))) (Eq e4 e3)) := by timed impliesElim lean_s1455
have lean_s1457 : (Or (Not (Eq e3 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e3))) := by R1 lean_s1453, lean_s1456, (And (Eq e3 (op e4 e4)) (Eq e4 (op e4 e4))), [(- 1), (- 1)]
have lean_s1458 : (Or (Eq e4 e3) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e3 (op e4 e4))))) := by permutateOr lean_s1457, [2, 1, 0], (- 1)
let lean_s1459 := by R1 lean_s1452, lean_s1458, (Eq e3 (op e4 e4)), [(- 1), (- 1)]
have lean_s1460 : (Not (Eq e4 e3)) := by andElim lean_s709, 9
let lean_s1461 := by R1 lean_s1459, lean_s1460, (Eq e4 e3), [(- 1), 0]
have lean_s1462 : (Eq (Not (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e0 e4)))) (Not (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e0 e4)))))) := by timed flipCongrArg lean_r29 [Not]
have lean_s1463 : (Not (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e0 e4))))) := by timed eqResolve lean_a463 lean_s1462
have lean_s1464 : (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e0 e4))))) := by timed flipNotAnd lean_s1463 [(Eq e3 (op e1 e4)), (Eq e1 (op e4 e2)), (Eq e2 (op e0 e4))]
have lean_s1465 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e1 (op e4 e2))))) := by permutateOr lean_s1464, [2, 0, 1], (- 1)
have lean_s1466 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e4 e2)))))))))))))))))))) := by R1 lean_s1461, lean_s1465, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
have lean_s1467 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e4 (op e4 e4)))))))))))))) := by factor lean_s1466, 17
let lean_s1468 := by R2 lean_s1467, lean_s1048, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
let lean_s1469 := by R1 lean_s1468, lean_s678, (Eq e2 (op e4 e4)), [(- 1), (- 1)]
let lean_s1470 := by R1 lean_s1469, lean_s710, (Eq e4 e2), [(- 1), 0]
have lean_s1471 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e4 (op e4 e4))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e4 (op e4 e4))) (Or (Eq (op e2 e2) (op e2 e4)) (Not (Eq e2 (op e2 e2)))))))))))))))))) := by R1 lean_s1470, lean_s1061, (Eq e2 (op e2 e4)), [(- 1), (- 1)]
have lean_s1472 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e4 (op e4 e4))))))))))))) := by factor lean_s1471, 15
let lean_s1473 := by R2 lean_s1472, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s1474 := by R2 lean_s1473, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s1475 := by R1 lean_s1474, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
have lean_s1476 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Eq e0 (op e3 e4)))))))) := by R2 lean_s1475, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s1477 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e1 (op e4 e2))))))))) := by permutateOr lean_s1476, [0, 1, 2, 6, 3, 4, 5], (- 1)
let lean_s1478 := by R2 lean_s894, lean_s1477, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
let lean_s1479 := by R2 lean_s1478, lean_s649, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s1480 := by R1 lean_s1479, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s1481 := by R1 lean_s1480, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s1482 := by R1 lean_s1481, lean_s1425, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
have lean_s1483 : (Or (And (Not (Eq (op e4 e2) (op e4 e4))) (Eq e1 (op e4 e2))) (Or (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Not (Eq e1 (op e4 e2))))) := by timed cnfAndNeg [(Not (Eq (op e4 e2) (op e4 e4))), (Eq e1 (op e4 e2))]
have lean_s1484 : (Or (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e4))))) :=
  (scope (fun lean_a591 : (Not (Eq (op e4 e2) (op e4 e4))) =>
    (scope (fun lean_a592 : (Eq e1 (op e4 e2)) =>
      have lean_s1484 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a592
      have lean_s1485 : (Eq e1 (op e4 e2)) := by timed Eq.symm lean_s1484
      let lean_s1486 := by timed flipCongrArg lean_s1485 [Eq]
      have lean_s1487 : (Eq (op e4 e4) (op e4 e4)) := by timed rfl
      have lean_s1488 : (Eq (Eq e1 (op e4 e4)) (Eq (op e4 e2) (op e4 e4))) := by timed congr lean_s1486 lean_s1487
      have lean_s1489 : (Eq (Eq (op e4 e2) (op e4 e4)) False) := by timed falseIntro lean_a591
      have lean_s1490 : (Eq (Eq e1 (op e4 e4)) False) := by timed Eq.trans lean_s1488 lean_s1489
      have lean_s1491 : (Not (Eq e1 (op e4 e4))) := by timed falseElim lean_s1490
      show (Not (Eq e1 (op e4 e4))) from lean_s1491
  ))))
have lean_s1485 : (Implies (And (Not (Eq (op e4 e2) (op e4 e4))) (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e4)))) := by liftOrNToImp lean_s1484, 2
have lean_s1486 : (Or (Not (And (Not (Eq (op e4 e2) (op e4 e4))) (Eq e1 (op e4 e2)))) (Not (Eq e1 (op e4 e4)))) := by timed impliesElim lean_s1485
have lean_s1487 : (Or (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e4))))) := by R1 lean_s1483, lean_s1486, (And (Not (Eq (op e4 e2) (op e4 e4))) (Eq e1 (op e4 e2))), [(- 1), (- 1)]
have lean_s1488 : (Eq Or Or) := by timed rfl
have lean_s1489 : (Eq (Eq (op e4 e2) (op e4 e4)) (Eq (op e4 e2) (op e4 e4))) := by timed rfl
let lean_s1490 := by timed flipCongrArg lean_s1489 [Eq]
have lean_s1491 : (Eq (Eq (Eq (op e4 e2) (op e4 e4)) (Not (Not (Eq (op e4 e2) (op e4 e4))))) (Eq (Eq (op e4 e2) (op e4 e4)) (Eq (op e4 e2) (op e4 e4)))) := by timed congr lean_s1490 lean_r1
have lean_s1492 : (Eq (Eq (Eq (op e4 e2) (op e4 e4)) (Not (Not (Eq (op e4 e2) (op e4 e4))))) True) := by timed Eq.trans lean_s1491 lean_r2
have lean_s1493 : (Eq (Eq (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Eq (op e4 e2) (op e4 e4))) True) := by timed Eq.trans lean_r0 lean_s1492
have lean_s1494 : (Eq (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Eq (op e4 e2) (op e4 e4))) := by timed trueElim lean_s1493
let lean_s1495 := by timed congr lean_s1488 lean_s1494
let lean_s1496 := by timed congr lean_s1488 lean_s732
have lean_s1497 : (Eq (Not (Eq e1 (op e4 e4))) (Not (Eq e1 (op e4 e4)))) := by timed rfl
let lean_s1498 := by timed congr lean_s1496 lean_s1497
have lean_s1499 : (Eq (Or (Not (Not (Eq (op e4 e2) (op e4 e4)))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e4))))) (Or (Eq (op e4 e2) (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e4)))))) := by timed congr lean_s1495 lean_s1498
have lean_s1500 : (Or (Eq (op e4 e2) (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e4))))) := by timed eqResolve lean_s1487 lean_s1499
let lean_s1501 := by R1 lean_s1482, lean_s1500, (Eq e1 (op e4 e4)), [(- 1), (- 1)]
have lean_s1502 : (Not (Eq (op e4 e2) (op e4 e4))) := by andElim lean_s29, 98
let lean_s1503 := by R1 lean_s1501, lean_s1502, (Eq (op e4 e2) (op e4 e4)), [(- 1), 0]
have lean_s1504 : (Or (And (Eq e1 (op e2 e4)) (Eq e3 (op e2 e4))) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e3 (op e2 e4))))) := by timed cnfAndNeg [(Eq e1 (op e2 e4)), (Eq e3 (op e2 e4))]
have lean_s1505 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e3 (op e2 e4))) (Eq e3 e1))) :=
  (scope (fun lean_a592 : (Eq e1 (op e2 e4)) =>
    (scope (fun lean_a593 : (Eq e3 (op e2 e4)) =>
      have lean_s1505 : (Eq (op e2 e4) e3) := by timed Eq.symm lean_a593
      have lean_s1506 : (Eq e3 (op e2 e4)) := by timed Eq.symm lean_s1505
      have lean_s1507 : (Eq (op e2 e4) e1) := by timed Eq.symm lean_a592
      have lean_s1508 : (Eq e3 e1) := by timed Eq.trans lean_s1506 lean_s1507
      show (Eq e3 e1) from lean_s1508
  ))))
have lean_s1506 : (Implies (And (Eq e1 (op e2 e4)) (Eq e3 (op e2 e4))) (Eq e3 e1)) := by liftOrNToImp lean_s1505, 2
have lean_s1507 : (Or (Not (And (Eq e1 (op e2 e4)) (Eq e3 (op e2 e4)))) (Eq e3 e1)) := by timed impliesElim lean_s1506
have lean_s1508 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e3 (op e2 e4))) (Eq e3 e1))) := by R1 lean_s1504, lean_s1507, (And (Eq e1 (op e2 e4)) (Eq e3 (op e2 e4))), [(- 1), (- 1)]
have lean_s1509 : (Or (Eq e3 e1) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e3 (op e2 e4))))) := by permutateOr lean_s1508, [2, 0, 1], (- 1)
let lean_s1510 := by R1 lean_s1503, lean_s1509, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
have lean_s1511 : (Not (Eq e3 e1)) := by andElim lean_s709, 5
have lean_s1512 : (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e2 e4))))))))))))))))) := by R1 lean_s1510, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s1513 : (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e3 (op e3 e3)))))))))))) := by factor lean_s1512, 14
let lean_s1514 := by R2 lean_s1513, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s1515 := by R1 lean_s1514, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s1516 := by R1 lean_s1515, lean_s1449, (Eq e3 e2), [(- 1), 0]
let lean_s1517 := by R1 lean_s1516, lean_s1402, (Eq e3 (op e3 e4)), [(- 1), (- 1)]
let lean_s1518 := by R1 lean_s1517, lean_s1403, (Eq (op e3 e3) (op e3 e4)), [(- 1), 0]
let lean_s1519 := by R1 lean_s1518, lean_s1458, (Eq e3 (op e4 e4)), [(- 1), (- 1)]
let lean_s1520 := by R1 lean_s1519, lean_s1460, (Eq e4 e3), [(- 1), 0]
have lean_s1521 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e4 e2)))))))))))))))) := by R1 lean_s1520, lean_s1465, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
have lean_s1522 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e4 (op e4 e4))))))))))))) := by factor lean_s1521, 13
let lean_s1523 := by R2 lean_s1522, lean_s1048, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
let lean_s1524 := by R1 lean_s1523, lean_s678, (Eq e2 (op e4 e4)), [(- 1), (- 1)]
let lean_s1525 := by R1 lean_s1524, lean_s710, (Eq e4 e2), [(- 1), 0]
have lean_s1526 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e4 (op e4 e4))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e4 (op e4 e4))) (Or (Eq (op e2 e2) (op e2 e4)) (Not (Eq e2 (op e2 e2))))))))))))))))) := by R1 lean_s1525, lean_s1061, (Eq e2 (op e2 e4)), [(- 1), (- 1)]
have lean_s1527 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e4 (op e4 e4)))))))))))) := by factor lean_s1526, 14
let lean_s1528 := by R2 lean_s1527, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s1529 := by R2 lean_s1528, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s1530 := by R1 lean_s1529, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
have lean_s1531 : (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e1 (op e4 e2)))))))) := by R2 lean_s1530, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s1532 := by R2 lean_s886, lean_s1531, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
let lean_s1533 := by R1 lean_s1532, lean_s1509, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
have lean_s1534 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e2 e4))))))))))))) := by R1 lean_s1533, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s1535 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e4 e4)) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Not (Eq e3 (op e2 e4)))))))))) := by factor lean_s1534, (- 1)
have lean_s1536 : (Or (Eq e3 (op e4 e0)) (Or (Eq e3 (op e4 e1)) (Or (Eq e3 (op e4 e2)) (Or (Eq e3 (op e4 e3)) (Eq e3 (op e4 e4)))))) := by andElim lean_s647, 46
have lean_s1537 : (Or (Eq e3 (op e4 e1)) (Or (Eq e3 (op e4 e2)) (Or (Eq e3 (op e4 e0)) (Or (Eq e3 (op e4 e3)) (Eq e3 (op e4 e4)))))) := by permutateOr lean_s1536, [1, 2, 0, 3, 4], (- 1)
let lean_s1538 := by R2 lean_s1535, lean_s1537, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
let lean_s1539 := by R1 lean_s1458, lean_s1460, (Eq e4 e3), [(- 1), 0]
have lean_s1540 : (Not (Eq e3 (op e4 e4))) := by R2 lean_s1539, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s1541 := by R1 lean_s1538, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
have lean_s1542 : (Or (And (Not (Eq (op e3 e3) (op e4 e3))) (Eq e3 (op e3 e3))) (Or (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Not (Eq e3 (op e3 e3))))) := by timed cnfAndNeg [(Not (Eq (op e3 e3) (op e4 e3))), (Eq e3 (op e3 e3))]
have lean_s1543 : (Or (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e3))))) :=
  (scope (fun lean_a593 : (Not (Eq (op e3 e3) (op e4 e3))) =>
    (scope (fun lean_a594 : (Eq e3 (op e3 e3)) =>
      have lean_s1543 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a594
      have lean_s1544 : (Eq e3 (op e3 e3)) := by timed Eq.symm lean_s1543
      let lean_s1545 := by timed flipCongrArg lean_s1544 [Eq]
      have lean_s1546 : (Eq (op e4 e3) (op e4 e3)) := by timed rfl
      have lean_s1547 : (Eq (Eq e3 (op e4 e3)) (Eq (op e3 e3) (op e4 e3))) := by timed congr lean_s1545 lean_s1546
      have lean_s1548 : (Eq (Eq (op e3 e3) (op e4 e3)) False) := by timed falseIntro lean_a593
      have lean_s1549 : (Eq (Eq e3 (op e4 e3)) False) := by timed Eq.trans lean_s1547 lean_s1548
      have lean_s1550 : (Not (Eq e3 (op e4 e3))) := by timed falseElim lean_s1549
      show (Not (Eq e3 (op e4 e3))) from lean_s1550
  ))))
have lean_s1544 : (Implies (And (Not (Eq (op e3 e3) (op e4 e3))) (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e3)))) := by liftOrNToImp lean_s1543, 2
have lean_s1545 : (Or (Not (And (Not (Eq (op e3 e3) (op e4 e3))) (Eq e3 (op e3 e3)))) (Not (Eq e3 (op e4 e3)))) := by timed impliesElim lean_s1544
have lean_s1546 : (Or (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e3))))) := by R1 lean_s1542, lean_s1545, (And (Not (Eq (op e3 e3) (op e4 e3))) (Eq e3 (op e3 e3))), [(- 1), (- 1)]
have lean_s1547 : (Eq Or Or) := by timed rfl
have lean_s1548 : (Eq (Eq (op e3 e3) (op e4 e3)) (Eq (op e3 e3) (op e4 e3))) := by timed rfl
let lean_s1549 := by timed flipCongrArg lean_s1548 [Eq]
have lean_s1550 : (Eq (Eq (Eq (op e3 e3) (op e4 e3)) (Not (Not (Eq (op e3 e3) (op e4 e3))))) (Eq (Eq (op e3 e3) (op e4 e3)) (Eq (op e3 e3) (op e4 e3)))) := by timed congr lean_s1549 lean_r385
have lean_s1551 : (Eq (Eq (Eq (op e3 e3) (op e4 e3)) (Not (Not (Eq (op e3 e3) (op e4 e3))))) True) := by timed Eq.trans lean_s1550 lean_r384
have lean_s1552 : (Eq (Eq (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Eq (op e3 e3) (op e4 e3))) True) := by timed Eq.trans lean_r388 lean_s1551
have lean_s1553 : (Eq (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Eq (op e3 e3) (op e4 e3))) := by timed trueElim lean_s1552
let lean_s1554 := by timed congr lean_s1547 lean_s1553
let lean_s1555 := by timed congr lean_s1547 lean_s17
have lean_s1556 : (Eq (Not (Eq e3 (op e4 e3))) (Not (Eq e3 (op e4 e3)))) := by timed rfl
let lean_s1557 := by timed congr lean_s1555 lean_s1556
have lean_s1558 : (Eq (Or (Not (Not (Eq (op e3 e3) (op e4 e3)))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e3))))) (Or (Eq (op e3 e3) (op e4 e3)) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e3)))))) := by timed congr lean_s1554 lean_s1557
have lean_s1559 : (Or (Eq (op e3 e3) (op e4 e3)) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e3))))) := by timed eqResolve lean_s1546 lean_s1558
have lean_s1560 : (Not (Eq (op e3 e3) (op e4 e3))) := by andElim lean_s29, 39
let lean_s1561 := by R1 lean_s1559, lean_s1560, (Eq (op e3 e3) (op e4 e3)), [(- 1), 0]
have lean_s1562 : (Not (Eq e3 (op e4 e3))) := by R2 lean_s1561, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s1563 := by R1 lean_s1541, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
have lean_s1564 : (Or (And (Not (Eq e3 e1)) (Eq e1 (op e4 e2))) (Or (Not (Not (Eq e3 e1))) (Not (Eq e1 (op e4 e2))))) := by timed cnfAndNeg [(Not (Eq e3 e1)), (Eq e1 (op e4 e2))]
have lean_s1565 : (Or (Not (Not (Eq e3 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e4 e2))))) :=
  (scope (fun lean_a594 : (Not (Eq e3 e1)) =>
    (scope (fun lean_a595 : (Eq e1 (op e4 e2)) =>
      have lean_s1565 : (Eq e3 e3) := by timed rfl
      let lean_s1566 := by timed flipCongrArg lean_s1565 [Eq]
      have lean_s1567 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a595
      have lean_s1568 : (Eq (Eq e3 (op e4 e2)) (Eq e3 e1)) := by timed congr lean_s1566 lean_s1567
      have lean_s1569 : (Eq (Eq e3 e1) False) := by timed falseIntro lean_a594
      have lean_s1570 : (Eq (Eq e3 (op e4 e2)) False) := by timed Eq.trans lean_s1568 lean_s1569
      have lean_s1571 : (Not (Eq e3 (op e4 e2))) := by timed falseElim lean_s1570
      show (Not (Eq e3 (op e4 e2))) from lean_s1571
  ))))
have lean_s1566 : (Implies (And (Not (Eq e3 e1)) (Eq e1 (op e4 e2))) (Not (Eq e3 (op e4 e2)))) := by liftOrNToImp lean_s1565, 2
have lean_s1567 : (Or (Not (And (Not (Eq e3 e1)) (Eq e1 (op e4 e2)))) (Not (Eq e3 (op e4 e2)))) := by timed impliesElim lean_s1566
have lean_s1568 : (Or (Not (Not (Eq e3 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e4 e2))))) := by R1 lean_s1564, lean_s1567, (And (Not (Eq e3 e1)) (Eq e1 (op e4 e2))), [(- 1), (- 1)]
have lean_s1569 : (Eq Or Or) := by timed rfl
have lean_s1570 : (Eq (Eq e3 e1) (Eq e3 e1)) := by timed rfl
let lean_s1571 := by timed flipCongrArg lean_s1570 [Eq]
have lean_s1572 : (Eq (Eq (Eq e3 e1) (Not (Not (Eq e3 e1)))) (Eq (Eq e3 e1) (Eq e3 e1))) := by timed congr lean_s1571 lean_r27
have lean_s1573 : (Eq (Eq (Eq e3 e1) (Not (Not (Eq e3 e1)))) True) := by timed Eq.trans lean_s1572 lean_r28
have lean_s1574 : (Eq (Eq (Not (Not (Eq e3 e1))) (Eq e3 e1)) True) := by timed Eq.trans lean_r75 lean_s1573
have lean_s1575 : (Eq (Not (Not (Eq e3 e1))) (Eq e3 e1)) := by timed trueElim lean_s1574
let lean_s1576 := by timed congr lean_s1569 lean_s1575
let lean_s1577 := by timed congr lean_s1569 lean_s732
have lean_s1578 : (Eq (Not (Eq e3 (op e4 e2))) (Not (Eq e3 (op e4 e2)))) := by timed rfl
let lean_s1579 := by timed congr lean_s1577 lean_s1578
have lean_s1580 : (Eq (Or (Not (Not (Eq e3 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e4 e2))))) (Or (Eq e3 e1) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e4 e2)))))) := by timed congr lean_s1576 lean_s1579
have lean_s1581 : (Or (Eq e3 e1) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e4 e2))))) := by timed eqResolve lean_s1568 lean_s1580
let lean_s1582 := by R1 lean_s1563, lean_s1581, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
let lean_s1583 := by R1 lean_s1582, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s1584 := by R1 lean_s1583, lean_s1500, (Eq e1 (op e4 e4)), [(- 1), (- 1)]
let lean_s1585 := by R1 lean_s1584, lean_s1502, (Eq (op e4 e2) (op e4 e4)), [(- 1), 0]
let lean_s1586 := by R2 lean_s1585, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s1587 := by R1 lean_s1586, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s1588 := by R1 lean_s1587, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s1589 := by R1 lean_s1588, lean_s1465, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s1590 := by R1 lean_s1589, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s1591 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e4 e1)) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e0 e4))))))))))))) := by R1 lean_s1590, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s1592 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Eq e3 (op e4 e1))))))) := by factor lean_s1591, 10
let lean_s1593 := by R2 lean_s1592, lean_s1048, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
let lean_s1594 := by R1 lean_s1593, lean_s678, (Eq e2 (op e4 e4)), [(- 1), (- 1)]
let lean_s1595 := by R2 lean_s1594, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s1596 := by R1 lean_s1595, lean_s710, (Eq e4 e2), [(- 1), 0]
let lean_s1597 := by R1 lean_s1596, lean_s1061, (Eq e2 (op e2 e4)), [(- 1), (- 1)]
let lean_s1598 := by R2 lean_s1597, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s1599 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e3 (op e4 e1)) (Or (Eq e2 (op e1 e4)) (Eq e2 (op e3 e4)))))))) := by R1 lean_s1598, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
have lean_s1600 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e1 e4)) (Or (Eq e2 (op e3 e4)) (Eq e3 (op e4 e1)))))) := by factor lean_s1599, 6
have lean_s1601 : (Or (Eq e2 (op e1 e4)) (Or (Eq e3 (op e4 e1)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e1 (op e4 e2))))))) := by permutateOr lean_s1600, [2, 4, 3, 1, 0], (- 1)
let lean_s1602 := by R2 lean_s714, lean_s1601, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
have lean_s1603 : (Eq (Not (And (And (Eq e3 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e1 e4)))) (Not (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e1 e4)))))) := by timed flipCongrArg lean_r264 [Not]
have lean_s1604 : (Not (And (Eq e3 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e1 e4))))) := by timed eqResolve lean_a488 lean_s1603
have lean_s1605 : (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e1 e4))))) := by timed flipNotAnd lean_s1604 [(Eq e3 (op e2 e4)), (Eq e2 (op e4 e0)), (Eq e0 (op e1 e4))]
have lean_s1606 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e2 (op e4 e0))))) := by permutateOr lean_s1605, [2, 0, 1], (- 1)
let lean_s1607 := by R1 lean_s1602, lean_s1606, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
have lean_s1608 : (Or (And (Not (Eq e2 e0)) (Eq e0 (op e1 e4))) (Or (Not (Not (Eq e2 e0))) (Not (Eq e0 (op e1 e4))))) := by timed cnfAndNeg [(Not (Eq e2 e0)), (Eq e0 (op e1 e4))]
have lean_s1609 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e2 (op e1 e4))))) :=
  (scope (fun lean_a595 : (Not (Eq e2 e0)) =>
    (scope (fun lean_a596 : (Eq e0 (op e1 e4)) =>
      have lean_s1609 : (Eq e2 e2) := by timed rfl
      let lean_s1610 := by timed flipCongrArg lean_s1609 [Eq]
      have lean_s1611 : (Eq (op e1 e4) e0) := by timed Eq.symm lean_a596
      have lean_s1612 : (Eq (Eq e2 (op e1 e4)) (Eq e2 e0)) := by timed congr lean_s1610 lean_s1611
      have lean_s1613 : (Eq (Eq e2 e0) False) := by timed falseIntro lean_a595
      have lean_s1614 : (Eq (Eq e2 (op e1 e4)) False) := by timed Eq.trans lean_s1612 lean_s1613
      have lean_s1615 : (Not (Eq e2 (op e1 e4))) := by timed falseElim lean_s1614
      show (Not (Eq e2 (op e1 e4))) from lean_s1615
  ))))
have lean_s1610 : (Implies (And (Not (Eq e2 e0)) (Eq e0 (op e1 e4))) (Not (Eq e2 (op e1 e4)))) := by liftOrNToImp lean_s1609, 2
have lean_s1611 : (Or (Not (And (Not (Eq e2 e0)) (Eq e0 (op e1 e4)))) (Not (Eq e2 (op e1 e4)))) := by timed impliesElim lean_s1610
have lean_s1612 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e2 (op e1 e4))))) := by R1 lean_s1608, lean_s1611, (And (Not (Eq e2 e0)) (Eq e0 (op e1 e4))), [(- 1), (- 1)]
have lean_s1613 : (Eq Or Or) := by timed rfl
have lean_s1614 : (Eq (Eq e2 e0) (Eq e2 e0)) := by timed rfl
let lean_s1615 := by timed flipCongrArg lean_s1614 [Eq]
have lean_s1616 : (Eq (Eq (Eq e2 e0) (Not (Not (Eq e2 e0)))) (Eq (Eq e2 e0) (Eq e2 e0))) := by timed congr lean_s1615 lean_r266
have lean_s1617 : (Eq (Eq (Eq e2 e0) (Not (Not (Eq e2 e0)))) True) := by timed Eq.trans lean_s1616 lean_r258
have lean_s1618 : (Eq (Eq (Not (Not (Eq e2 e0))) (Eq e2 e0)) True) := by timed Eq.trans lean_r272 lean_s1617
have lean_s1619 : (Eq (Not (Not (Eq e2 e0))) (Eq e2 e0)) := by timed trueElim lean_s1618
let lean_s1620 := by timed congr lean_s1613 lean_s1619
have lean_s1621 : (Eq (Not (Eq e0 (op e1 e4))) (Not (Eq e0 (op e1 e4)))) := by timed rfl
let lean_s1622 := by timed congr lean_s1613 lean_s1621
have lean_s1623 : (Eq (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e1 e4)))) := by timed rfl
let lean_s1624 := by timed congr lean_s1622 lean_s1623
have lean_s1625 : (Eq (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e2 (op e1 e4))))) (Or (Eq e2 e0) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e2 (op e1 e4)))))) := by timed congr lean_s1620 lean_s1624
have lean_s1626 : (Or (Eq e2 e0) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e2 (op e1 e4))))) := by timed eqResolve lean_s1612 lean_s1625
let lean_s1627 := by R1 lean_s1607, lean_s1626, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
have lean_s1628 : (Not (Eq e2 e0)) := by andElim lean_s709, 1
have lean_s1629 : (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e0 (op e1 e4)))))))))) := by R1 lean_s1627, lean_s1628, (Eq e2 e0), [(- 1), 0]
have lean_s1630 : (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e1 e4)))))))) := by factor lean_s1629, (- 1)
have lean_s1631 : (Or (Eq e0 (op e0 e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4)))))) := by andElim lean_s647, 41
have lean_s1632 : (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e0 e4)) (Eq e0 (op e4 e4)))))) := by permutateOr lean_s1631, [2, 3, 1, 0, 4], (- 1)
let lean_s1633 := by R2 lean_s1630, lean_s1632, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
have lean_s1634 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0))]
have lean_s1635 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e4))))) :=
  (scope (fun lean_a597 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a598 : (Eq e0 (op e0 e0)) =>
      have lean_s1635 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a598
      have lean_s1636 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s1635
      let lean_s1637 := by timed flipCongrArg lean_s1636 [Eq]
      have lean_s1638 : (Eq (op e0 e4) (op e0 e4)) := by timed rfl
      have lean_s1639 : (Eq (Eq e0 (op e0 e4)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s1637 lean_s1638
      have lean_s1640 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a597
      have lean_s1641 : (Eq (Eq e0 (op e0 e4)) False) := by timed Eq.trans lean_s1639 lean_s1640
      have lean_s1642 : (Not (Eq e0 (op e0 e4))) := by timed falseElim lean_s1641
      show (Not (Eq e0 (op e0 e4))) from lean_s1642
  ))))
have lean_s1636 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e4)))) := by liftOrNToImp lean_s1635, 2
have lean_s1637 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e0 e4)))) := by timed impliesElim lean_s1636
have lean_s1638 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e4))))) := by R1 lean_s1634, lean_s1637, (And (Not (Eq (op e0 e0) (op e0 e4))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s1639 : (Eq Or Or) := by timed rfl
let lean_s1640 := by timed congr lean_s1639 lean_s864
let lean_s1641 := by timed congr lean_s1639 lean_s759
have lean_s1642 : (Eq (Not (Eq e0 (op e0 e4))) (Not (Eq e0 (op e0 e4)))) := by timed rfl
let lean_s1643 := by timed congr lean_s1641 lean_s1642
have lean_s1644 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e4))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e4)))))) := by timed congr lean_s1640 lean_s1643
have lean_s1645 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e4))))) := by timed eqResolve lean_s1638 lean_s1644
let lean_s1646 := by R1 lean_s1645, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
have lean_s1647 : (Not (Eq e0 (op e0 e4))) := by R2 lean_s1646, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s1648 := by R1 lean_s1633, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
have lean_s1649 : (Or (And (Not (Eq e3 e0)) (Eq e0 (op e2 e4))) (Or (Not (Not (Eq e3 e0))) (Not (Eq e0 (op e2 e4))))) := by timed cnfAndNeg [(Not (Eq e3 e0)), (Eq e0 (op e2 e4))]
have lean_s1650 : (Or (Not (Not (Eq e3 e0))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e3 (op e2 e4))))) :=
  (scope (fun lean_a597 : (Not (Eq e3 e0)) =>
    (scope (fun lean_a598 : (Eq e0 (op e2 e4)) =>
      have lean_s1650 : (Eq e3 e3) := by timed rfl
      let lean_s1651 := by timed flipCongrArg lean_s1650 [Eq]
      have lean_s1652 : (Eq (op e2 e4) e0) := by timed Eq.symm lean_a598
      have lean_s1653 : (Eq (Eq e3 (op e2 e4)) (Eq e3 e0)) := by timed congr lean_s1651 lean_s1652
      have lean_s1654 : (Eq (Eq e3 e0) False) := by timed falseIntro lean_a597
      have lean_s1655 : (Eq (Eq e3 (op e2 e4)) False) := by timed Eq.trans lean_s1653 lean_s1654
      have lean_s1656 : (Not (Eq e3 (op e2 e4))) := by timed falseElim lean_s1655
      show (Not (Eq e3 (op e2 e4))) from lean_s1656
  ))))
have lean_s1651 : (Implies (And (Not (Eq e3 e0)) (Eq e0 (op e2 e4))) (Not (Eq e3 (op e2 e4)))) := by liftOrNToImp lean_s1650, 2
have lean_s1652 : (Or (Not (And (Not (Eq e3 e0)) (Eq e0 (op e2 e4)))) (Not (Eq e3 (op e2 e4)))) := by timed impliesElim lean_s1651
have lean_s1653 : (Or (Not (Not (Eq e3 e0))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e3 (op e2 e4))))) := by R1 lean_s1649, lean_s1652, (And (Not (Eq e3 e0)) (Eq e0 (op e2 e4))), [(- 1), (- 1)]
have lean_s1654 : (Eq Or Or) := by timed rfl
have lean_s1655 : (Eq (Eq e3 e0) (Eq e3 e0)) := by timed rfl
let lean_s1656 := by timed flipCongrArg lean_s1655 [Eq]
have lean_s1657 : (Eq (Eq (Eq e3 e0) (Not (Not (Eq e3 e0)))) (Eq (Eq e3 e0) (Eq e3 e0))) := by timed congr lean_s1656 lean_r95
have lean_s1658 : (Eq (Eq (Eq e3 e0) (Not (Not (Eq e3 e0)))) True) := by timed Eq.trans lean_s1657 lean_r96
have lean_s1659 : (Eq (Eq (Not (Not (Eq e3 e0))) (Eq e3 e0)) True) := by timed Eq.trans lean_r94 lean_s1658
have lean_s1660 : (Eq (Not (Not (Eq e3 e0))) (Eq e3 e0)) := by timed trueElim lean_s1659
let lean_s1661 := by timed congr lean_s1654 lean_s1660
have lean_s1662 : (Eq (Not (Eq e0 (op e2 e4))) (Not (Eq e0 (op e2 e4)))) := by timed rfl
let lean_s1663 := by timed congr lean_s1654 lean_s1662
let lean_s1664 := by timed congr lean_s1663 lean_s15
have lean_s1665 : (Eq (Or (Not (Not (Eq e3 e0))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e3 (op e2 e4))))) (Or (Eq e3 e0) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e3 (op e2 e4)))))) := by timed congr lean_s1661 lean_s1664
have lean_s1666 : (Or (Eq e3 e0) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e3 (op e2 e4))))) := by timed eqResolve lean_s1653 lean_s1665
let lean_s1667 := by R1 lean_s1648, lean_s1666, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
have lean_s1668 : (Not (Eq e3 e0)) := by andElim lean_s709, 2
have lean_s1669 : (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e3 (op e2 e4)))))))))) := by R1 lean_s1667, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s1670 : (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Eq e0 (op e3 e4))))))) := by factor lean_s1669, 7
let lean_s1671 := by R2 lean_s1670, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s1672 := by R1 lean_s1671, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s1673 := by R1 lean_s1672, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s1674 : (Or (Eq e0 (op e0 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e3 e1)) (Eq e0 (op e4 e1)))))) := by andElim lean_s647, 11
have lean_s1675 : (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e0 e1)) (Eq e0 (op e1 e1)))))) := by permutateOr lean_s1674, [3, 4, 2, 0, 1], (- 1)
have lean_s1676 : (Or (And (Not (Eq (op e0 e0) (op e0 e1))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e1))), (Eq e0 (op e0 e0))]
have lean_s1677 : (Or (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e1))))) :=
  (scope (fun lean_a599 : (Not (Eq (op e0 e0) (op e0 e1))) =>
    (scope (fun lean_a600 : (Eq e0 (op e0 e0)) =>
      have lean_s1677 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a600
      have lean_s1678 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s1677
      let lean_s1679 := by timed flipCongrArg lean_s1678 [Eq]
      have lean_s1680 : (Eq (op e0 e1) (op e0 e1)) := by timed rfl
      have lean_s1681 : (Eq (Eq e0 (op e0 e1)) (Eq (op e0 e0) (op e0 e1))) := by timed congr lean_s1679 lean_s1680
      have lean_s1682 : (Eq (Eq (op e0 e0) (op e0 e1)) False) := by timed falseIntro lean_a599
      have lean_s1683 : (Eq (Eq e0 (op e0 e1)) False) := by timed Eq.trans lean_s1681 lean_s1682
      have lean_s1684 : (Not (Eq e0 (op e0 e1))) := by timed falseElim lean_s1683
      show (Not (Eq e0 (op e0 e1))) from lean_s1684
  ))))
have lean_s1678 : (Implies (And (Not (Eq (op e0 e0) (op e0 e1))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e1)))) := by liftOrNToImp lean_s1677, 2
have lean_s1679 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e1))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e0 e1)))) := by timed impliesElim lean_s1678
have lean_s1680 : (Or (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e1))))) := by R1 lean_s1676, lean_s1679, (And (Not (Eq (op e0 e0) (op e0 e1))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s1681 : (Eq Or Or) := by timed rfl
have lean_s1682 : (Eq (Eq (op e0 e0) (op e0 e1)) (Eq (op e0 e0) (op e0 e1))) := by timed rfl
let lean_s1683 := by timed flipCongrArg lean_s1682 [Eq]
have lean_s1684 : (Eq (Eq (Eq (op e0 e0) (op e0 e1)) (Not (Not (Eq (op e0 e0) (op e0 e1))))) (Eq (Eq (op e0 e0) (op e0 e1)) (Eq (op e0 e0) (op e0 e1)))) := by timed congr lean_s1683 lean_r37
have lean_s1685 : (Eq (Eq (Eq (op e0 e0) (op e0 e1)) (Not (Not (Eq (op e0 e0) (op e0 e1))))) True) := by timed Eq.trans lean_s1684 lean_r38
have lean_s1686 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Eq (op e0 e0) (op e0 e1))) True) := by timed Eq.trans lean_r36 lean_s1685
have lean_s1687 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Eq (op e0 e0) (op e0 e1))) := by timed trueElim lean_s1686
let lean_s1688 := by timed congr lean_s1681 lean_s1687
let lean_s1689 := by timed congr lean_s1681 lean_s759
have lean_s1690 : (Eq (Not (Eq e0 (op e0 e1))) (Not (Eq e0 (op e0 e1)))) := by timed rfl
let lean_s1691 := by timed congr lean_s1689 lean_s1690
have lean_s1692 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e1)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e1))))) (Or (Eq (op e0 e0) (op e0 e1)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e1)))))) := by timed congr lean_s1688 lean_s1691
have lean_s1693 : (Or (Eq (op e0 e0) (op e0 e1)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e1))))) := by timed eqResolve lean_s1680 lean_s1692
have lean_s1694 : (Not (Eq (op e0 e0) (op e0 e1))) := by andElim lean_s29, 50
let lean_s1695 := by R1 lean_s1693, lean_s1694, (Eq (op e0 e0) (op e0 e1)), [(- 1), 0]
have lean_s1696 : (Not (Eq e0 (op e0 e1))) := by R2 lean_s1695, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s1697 := by R1 lean_s1675, lean_s1696, (Eq e0 (op e0 e1)), [(- 1), 0]
have lean_s1698 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1)))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e1)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e3 (op e0 e4)), (Eq e3 (op e3 e3)), (Eq e3 (op e4 e1))]
have lean_s1699 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) :=
  (scope (fun lean_a600 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a601 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a602 : (Eq e3 (op e0 e4)) =>
        (scope (fun lean_a603 : (Eq e3 (op e3 e3)) =>
          (scope (fun lean_a604 : (Eq e3 (op e4 e1)) =>
            have lean_s1699 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a601
            have lean_s1700 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s1699
            let lean_s1701 := by timed flipCongrArg lean_s1700 [Eq]
            have lean_s1702 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a603
            have lean_s1703 : (Eq (op e0 e4) e3) := by timed Eq.symm lean_a602
            have lean_s1704 : (Eq e3 (op e0 e4)) := by timed Eq.symm lean_s1703
            have lean_s1705 : (Eq (op e3 e3) (op e0 e4)) := by timed Eq.trans lean_s1702 lean_s1704
            have lean_s1706 : (Eq (op e0 e4) (op e3 e3)) := by timed Eq.symm lean_s1705
            have lean_s1707 : (Eq (op e4 e1) e3) := by timed Eq.symm lean_a604
            have lean_s1708 : (Eq (op e4 e1) (op e3 e3)) := by timed Eq.trans lean_s1707 lean_a603
            have lean_s1709 : (Eq (op e3 e3) (op e4 e1)) := by timed Eq.symm lean_s1708
            have lean_s1710 : (Eq (op e0 e4) (op e4 e1)) := by timed Eq.trans lean_s1706 lean_s1709
            have lean_s1711 : (Eq (op e4 e1) (op e0 e4)) := by timed Eq.symm lean_s1710
            have lean_s1712 : (Eq (Eq e0 (op e4 e1)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s1701 lean_s1711
            have lean_s1713 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a600
            have lean_s1714 : (Eq (Eq e0 (op e4 e1)) False) := by timed Eq.trans lean_s1712 lean_s1713
            have lean_s1715 : (Not (Eq e0 (op e4 e1))) := by timed falseElim lean_s1714
            show (Not (Eq e0 (op e4 e1))) from lean_s1715
  ))))))))))
have lean_s1700 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1)))))) (Not (Eq e0 (op e4 e1)))) := by liftOrNToImp lean_s1699, 5
have lean_s1701 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1))))))) (Not (Eq e0 (op e4 e1)))) := by timed impliesElim lean_s1700
have lean_s1702 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) := by R1 lean_s1698, lean_s1701, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1)))))), [(- 1), (- 1)]
have lean_s1703 : (Eq Or Or) := by timed rfl
let lean_s1704 := by timed congr lean_s1703 lean_s864
let lean_s1705 := by timed congr lean_s1703 lean_s759
let lean_s1706 := by timed congr lean_s1703 lean_s1444
let lean_s1707 := by timed congr lean_s1703 lean_s17
let lean_s1708 := by timed congr lean_s1703 lean_s19
have lean_s1709 : (Eq (Not (Eq e0 (op e4 e1))) (Not (Eq e0 (op e4 e1)))) := by timed rfl
let lean_s1710 := by timed congr lean_s1708 lean_s1709
let lean_s1711 := by timed congr lean_s1707 lean_s1710
let lean_s1712 := by timed congr lean_s1706 lean_s1711
let lean_s1713 := by timed congr lean_s1705 lean_s1712
have lean_s1714 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e0 (op e4 e1))))))))) := by timed congr lean_s1704 lean_s1713
have lean_s1715 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) := by timed eqResolve lean_s1702 lean_s1714
have lean_s1716 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e3 (op e4 e1)))))))) := by permutateOr lean_s1715, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s1717 := by R1 lean_s1697, lean_s1716, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s1718 := by R1 lean_s1717, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s1719 := by R2 lean_s1718, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s1720 := by R2 lean_s1719, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
have lean_s1721 : (Or (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e3 e1)))))) (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e3 e1)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e4 e0))), (Eq e0 (op e0 e0)), (Eq e2 (op e4 e0)), (Eq e2 (op e2 e2)), (Eq e2 (op e3 e1))]
have lean_s1722 : (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e0 (op e3 e1)))))))) :=
  (scope (fun lean_a601 : (Not (Eq (op e0 e0) (op e4 e0))) =>
    (scope (fun lean_a602 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a603 : (Eq e2 (op e4 e0)) =>
        (scope (fun lean_a604 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a605 : (Eq e2 (op e3 e1)) =>
            have lean_s1722 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a602
            have lean_s1723 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s1722
            let lean_s1724 := by timed flipCongrArg lean_s1723 [Eq]
            have lean_s1725 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a604
            have lean_s1726 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a603
            have lean_s1727 : (Eq e2 (op e4 e0)) := by timed Eq.symm lean_s1726
            have lean_s1728 : (Eq (op e2 e2) (op e4 e0)) := by timed Eq.trans lean_s1725 lean_s1727
            have lean_s1729 : (Eq (op e4 e0) (op e2 e2)) := by timed Eq.symm lean_s1728
            have lean_s1730 : (Eq (op e3 e1) e2) := by timed Eq.symm lean_a605
            have lean_s1731 : (Eq (op e3 e1) (op e2 e2)) := by timed Eq.trans lean_s1730 lean_a604
            have lean_s1732 : (Eq (op e2 e2) (op e3 e1)) := by timed Eq.symm lean_s1731
            have lean_s1733 : (Eq (op e4 e0) (op e3 e1)) := by timed Eq.trans lean_s1729 lean_s1732
            have lean_s1734 : (Eq (op e3 e1) (op e4 e0)) := by timed Eq.symm lean_s1733
            have lean_s1735 : (Eq (Eq e0 (op e3 e1)) (Eq (op e0 e0) (op e4 e0))) := by timed congr lean_s1724 lean_s1734
            have lean_s1736 : (Eq (Eq (op e0 e0) (op e4 e0)) False) := by timed falseIntro lean_a601
            have lean_s1737 : (Eq (Eq e0 (op e3 e1)) False) := by timed Eq.trans lean_s1735 lean_s1736
            have lean_s1738 : (Not (Eq e0 (op e3 e1))) := by timed falseElim lean_s1737
            show (Not (Eq e0 (op e3 e1))) from lean_s1738
  ))))))))))
have lean_s1723 : (Implies (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e3 e1)))))) (Not (Eq e0 (op e3 e1)))) := by liftOrNToImp lean_s1722, 5
have lean_s1724 : (Or (Not (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e3 e1))))))) (Not (Eq e0 (op e3 e1)))) := by timed impliesElim lean_s1723
have lean_s1725 : (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e0 (op e3 e1)))))))) := by R1 lean_s1721, lean_s1724, (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e3 e1)))))), [(- 1), (- 1)]
have lean_s1726 : (Eq Or Or) := by timed rfl
let lean_s1727 := by timed congr lean_s1726 lean_s757
let lean_s1728 := by timed congr lean_s1726 lean_s759
let lean_s1729 := by timed congr lean_s1726 lean_s1418
let lean_s1730 := by timed congr lean_s1726 lean_s13
have lean_s1731 : (Eq (Not (Eq e2 (op e3 e1))) (Not (Eq e2 (op e3 e1)))) := by timed rfl
let lean_s1732 := by timed congr lean_s1726 lean_s1731
have lean_s1733 : (Eq (Not (Eq e0 (op e3 e1))) (Not (Eq e0 (op e3 e1)))) := by timed rfl
let lean_s1734 := by timed congr lean_s1732 lean_s1733
let lean_s1735 := by timed congr lean_s1730 lean_s1734
let lean_s1736 := by timed congr lean_s1729 lean_s1735
let lean_s1737 := by timed congr lean_s1728 lean_s1736
have lean_s1738 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e0 (op e3 e1)))))))) (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e0 (op e3 e1))))))))) := by timed congr lean_s1727 lean_s1737
have lean_s1739 : (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e0 (op e3 e1)))))))) := by timed eqResolve lean_s1725 lean_s1738
have lean_s1740 : (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e0 (op e3 e1))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e2 (op e4 e0)))))))) := by permutateOr lean_s1739, [0, 1, 3, 5, 4, 2], (- 1)
let lean_s1741 := by R1 lean_s1720, lean_s1740, (Eq e0 (op e3 e1)), [(- 1), (- 1)]
let lean_s1742 := by R1 lean_s1741, lean_s765, (Eq (op e0 e0) (op e4 e0)), [(- 1), 0]
let lean_s1743 := by R2 lean_s1742, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s1744 := by R2 lean_s1743, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s1745 := by R2 lean_s1744, lean_s1428, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s1746 := by R1 lean_s1745, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s1747 : (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e1)) (Or (Eq e2 (op e3 e2)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e3 e4)))))) := by andElim lean_s647, 34
have lean_s1748 : (Or (Eq e2 (op e3 e1)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e2)) (Eq e2 (op e3 e3)))))) := by permutateOr lean_s1747, [1, 4, 0, 2, 3], (- 1)
let lean_s1749 := by R2 lean_s1746, lean_s1748, (Eq e2 (op e3 e1)), [(- 1), (- 1)]
have lean_s1750 : (Or (And (Not (Eq (op e2 e2) (op e3 e2))) (Eq e2 (op e2 e2))) (Or (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Not (Eq e2 (op e2 e2))))) := by timed cnfAndNeg [(Not (Eq (op e2 e2) (op e3 e2))), (Eq e2 (op e2 e2))]
have lean_s1751 : (Or (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e3 e2))))) :=
  (scope (fun lean_a603 : (Not (Eq (op e2 e2) (op e3 e2))) =>
    (scope (fun lean_a604 : (Eq e2 (op e2 e2)) =>
      have lean_s1751 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a604
      have lean_s1752 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s1751
      let lean_s1753 := by timed flipCongrArg lean_s1752 [Eq]
      have lean_s1754 : (Eq (op e3 e2) (op e3 e2)) := by timed rfl
      have lean_s1755 : (Eq (Eq e2 (op e3 e2)) (Eq (op e2 e2) (op e3 e2))) := by timed congr lean_s1753 lean_s1754
      have lean_s1756 : (Eq (Eq (op e2 e2) (op e3 e2)) False) := by timed falseIntro lean_a603
      have lean_s1757 : (Eq (Eq e2 (op e3 e2)) False) := by timed Eq.trans lean_s1755 lean_s1756
      have lean_s1758 : (Not (Eq e2 (op e3 e2))) := by timed falseElim lean_s1757
      show (Not (Eq e2 (op e3 e2))) from lean_s1758
  ))))
have lean_s1752 : (Implies (And (Not (Eq (op e2 e2) (op e3 e2))) (Eq e2 (op e2 e2))) (Not (Eq e2 (op e3 e2)))) := by liftOrNToImp lean_s1751, 2
have lean_s1753 : (Or (Not (And (Not (Eq (op e2 e2) (op e3 e2))) (Eq e2 (op e2 e2)))) (Not (Eq e2 (op e3 e2)))) := by timed impliesElim lean_s1752
have lean_s1754 : (Or (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e3 e2))))) := by R1 lean_s1750, lean_s1753, (And (Not (Eq (op e2 e2) (op e3 e2))) (Eq e2 (op e2 e2))), [(- 1), (- 1)]
have lean_s1755 : (Eq Or Or) := by timed rfl
have lean_s1756 : (Eq (Eq (op e2 e2) (op e3 e2)) (Eq (op e2 e2) (op e3 e2))) := by timed rfl
let lean_s1757 := by timed flipCongrArg lean_s1756 [Eq]
have lean_s1758 : (Eq (Eq (Eq (op e2 e2) (op e3 e2)) (Not (Not (Eq (op e2 e2) (op e3 e2))))) (Eq (Eq (op e2 e2) (op e3 e2)) (Eq (op e2 e2) (op e3 e2)))) := by timed congr lean_s1757 lean_r78
have lean_s1759 : (Eq (Eq (Eq (op e2 e2) (op e3 e2)) (Not (Not (Eq (op e2 e2) (op e3 e2))))) True) := by timed Eq.trans lean_s1758 lean_r349
have lean_s1760 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Eq (op e2 e2) (op e3 e2))) True) := by timed Eq.trans lean_r200 lean_s1759
have lean_s1761 : (Eq (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Eq (op e2 e2) (op e3 e2))) := by timed trueElim lean_s1760
let lean_s1762 := by timed congr lean_s1755 lean_s1761
let lean_s1763 := by timed congr lean_s1755 lean_s13
have lean_s1764 : (Eq (Not (Eq e2 (op e3 e2))) (Not (Eq e2 (op e3 e2)))) := by timed rfl
let lean_s1765 := by timed congr lean_s1763 lean_s1764
have lean_s1766 : (Eq (Or (Not (Not (Eq (op e2 e2) (op e3 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e3 e2))))) (Or (Eq (op e2 e2) (op e3 e2)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e3 e2)))))) := by timed congr lean_s1762 lean_s1765
have lean_s1767 : (Or (Eq (op e2 e2) (op e3 e2)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e3 e2))))) := by timed eqResolve lean_s1754 lean_s1766
have lean_s1768 : (Not (Eq (op e2 e2) (op e3 e2))) := by andElim lean_s29, 27
let lean_s1769 := by R1 lean_s1767, lean_s1768, (Eq (op e2 e2) (op e3 e2)), [(- 1), 0]
have lean_s1770 : (Not (Eq e2 (op e3 e2))) := by R2 lean_s1769, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s1771 := by R1 lean_s1749, lean_s1770, (Eq e2 (op e3 e2)), [(- 1), 0]
let lean_s1772 := by R1 lean_s1771, lean_s1666, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s1773 := by R1 lean_s1772, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s1774 : (Or (And (Not (Eq e3 e2)) (Eq e2 (op e1 e4))) (Or (Not (Not (Eq e3 e2))) (Not (Eq e2 (op e1 e4))))) := by timed cnfAndNeg [(Not (Eq e3 e2)), (Eq e2 (op e1 e4))]
have lean_s1775 : (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) :=
  (scope (fun lean_a604 : (Not (Eq e3 e2)) =>
    (scope (fun lean_a605 : (Eq e2 (op e1 e4)) =>
      have lean_s1775 : (Eq e3 e3) := by timed rfl
      let lean_s1776 := by timed flipCongrArg lean_s1775 [Eq]
      have lean_s1777 : (Eq (op e1 e4) e2) := by timed Eq.symm lean_a605
      have lean_s1778 : (Eq (Eq e3 (op e1 e4)) (Eq e3 e2)) := by timed congr lean_s1776 lean_s1777
      have lean_s1779 : (Eq (Eq e3 e2) False) := by timed falseIntro lean_a604
      have lean_s1780 : (Eq (Eq e3 (op e1 e4)) False) := by timed Eq.trans lean_s1778 lean_s1779
      have lean_s1781 : (Not (Eq e3 (op e1 e4))) := by timed falseElim lean_s1780
      show (Not (Eq e3 (op e1 e4))) from lean_s1781
  ))))
have lean_s1776 : (Implies (And (Not (Eq e3 e2)) (Eq e2 (op e1 e4))) (Not (Eq e3 (op e1 e4)))) := by liftOrNToImp lean_s1775, 2
have lean_s1777 : (Or (Not (And (Not (Eq e3 e2)) (Eq e2 (op e1 e4)))) (Not (Eq e3 (op e1 e4)))) := by timed impliesElim lean_s1776
have lean_s1778 : (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) := by R1 lean_s1774, lean_s1777, (And (Not (Eq e3 e2)) (Eq e2 (op e1 e4))), [(- 1), (- 1)]
have lean_s1779 : (Eq Or Or) := by timed rfl
let lean_s1780 := by timed congr lean_s1779 lean_s1441
let lean_s1781 := by timed congr lean_s1779 lean_s1623
have lean_s1782 : (Eq (Not (Eq e3 (op e1 e4))) (Not (Eq e3 (op e1 e4)))) := by timed rfl
let lean_s1783 := by timed congr lean_s1781 lean_s1782
have lean_s1784 : (Eq (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) (Or (Eq e3 e2) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e3 (op e1 e4)))))) := by timed congr lean_s1780 lean_s1783
have lean_s1785 : (Or (Eq e3 e2) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) := by timed eqResolve lean_s1778 lean_s1784
let lean_s1786 := by R1 lean_s1773, lean_s1785, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s1787 := by R1 lean_s1786, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s1788 : (Or (And (Not (Eq (op e1 e4) (op e3 e4))) (Eq e2 (op e1 e4))) (Or (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Not (Eq e2 (op e1 e4))))) := by timed cnfAndNeg [(Not (Eq (op e1 e4) (op e3 e4))), (Eq e2 (op e1 e4))]
have lean_s1789 : (Or (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e3 e4))))) :=
  (scope (fun lean_a605 : (Not (Eq (op e1 e4) (op e3 e4))) =>
    (scope (fun lean_a606 : (Eq e2 (op e1 e4)) =>
      have lean_s1789 : (Eq (op e1 e4) e2) := by timed Eq.symm lean_a606
      have lean_s1790 : (Eq e2 (op e1 e4)) := by timed Eq.symm lean_s1789
      let lean_s1791 := by timed flipCongrArg lean_s1790 [Eq]
      have lean_s1792 : (Eq (op e3 e4) (op e3 e4)) := by timed rfl
      have lean_s1793 : (Eq (Eq e2 (op e3 e4)) (Eq (op e1 e4) (op e3 e4))) := by timed congr lean_s1791 lean_s1792
      have lean_s1794 : (Eq (Eq (op e1 e4) (op e3 e4)) False) := by timed falseIntro lean_a605
      have lean_s1795 : (Eq (Eq e2 (op e3 e4)) False) := by timed Eq.trans lean_s1793 lean_s1794
      have lean_s1796 : (Not (Eq e2 (op e3 e4))) := by timed falseElim lean_s1795
      show (Not (Eq e2 (op e3 e4))) from lean_s1796
  ))))
have lean_s1790 : (Implies (And (Not (Eq (op e1 e4) (op e3 e4))) (Eq e2 (op e1 e4))) (Not (Eq e2 (op e3 e4)))) := by liftOrNToImp lean_s1789, 2
have lean_s1791 : (Or (Not (And (Not (Eq (op e1 e4) (op e3 e4))) (Eq e2 (op e1 e4)))) (Not (Eq e2 (op e3 e4)))) := by timed impliesElim lean_s1790
have lean_s1792 : (Or (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e3 e4))))) := by R1 lean_s1788, lean_s1791, (And (Not (Eq (op e1 e4) (op e3 e4))) (Eq e2 (op e1 e4))), [(- 1), (- 1)]
have lean_s1793 : (Eq Or Or) := by timed rfl
have lean_s1794 : (Eq (Eq (op e1 e4) (op e3 e4)) (Eq (op e1 e4) (op e3 e4))) := by timed rfl
let lean_s1795 := by timed flipCongrArg lean_s1794 [Eq]
have lean_s1796 : (Eq (Eq (Eq (op e1 e4) (op e3 e4)) (Not (Not (Eq (op e1 e4) (op e3 e4))))) (Eq (Eq (op e1 e4) (op e3 e4)) (Eq (op e1 e4) (op e3 e4)))) := by timed congr lean_s1795 lean_r295
have lean_s1797 : (Eq (Eq (Eq (op e1 e4) (op e3 e4)) (Not (Not (Eq (op e1 e4) (op e3 e4))))) True) := by timed Eq.trans lean_s1796 lean_r398
have lean_s1798 : (Eq (Eq (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Eq (op e1 e4) (op e3 e4))) True) := by timed Eq.trans lean_r220 lean_s1797
have lean_s1799 : (Eq (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Eq (op e1 e4) (op e3 e4))) := by timed trueElim lean_s1798
let lean_s1800 := by timed congr lean_s1793 lean_s1799
let lean_s1801 := by timed congr lean_s1793 lean_s1623
have lean_s1802 : (Eq (Not (Eq e2 (op e3 e4))) (Not (Eq e2 (op e3 e4)))) := by timed rfl
let lean_s1803 := by timed congr lean_s1801 lean_s1802
have lean_s1804 : (Eq (Or (Not (Not (Eq (op e1 e4) (op e3 e4)))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e3 e4))))) (Or (Eq (op e1 e4) (op e3 e4)) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e3 e4)))))) := by timed congr lean_s1800 lean_s1803
have lean_s1805 : (Or (Eq (op e1 e4) (op e3 e4)) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e3 e4))))) := by timed eqResolve lean_s1792 lean_s1804
let lean_s1806 := by R1 lean_s1787, lean_s1805, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
have lean_s1807 : (Not (Eq (op e1 e4) (op e3 e4))) := by andElim lean_s29, 45
let lean_s1808 := by R1 lean_s1806, lean_s1807, (Eq (op e1 e4) (op e3 e4)), [(- 1), 0]
have lean_s1809 : (Or (And (Not (Eq (op e2 e1) (op e2 e4))) (Eq e0 (op e2 e1))) (Or (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Not (Eq e0 (op e2 e1))))) := by timed cnfAndNeg [(Not (Eq (op e2 e1) (op e2 e4))), (Eq e0 (op e2 e1))]
have lean_s1810 : (Or (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e0 (op e2 e4))))) :=
  (scope (fun lean_a606 : (Not (Eq (op e2 e1) (op e2 e4))) =>
    (scope (fun lean_a607 : (Eq e0 (op e2 e1)) =>
      have lean_s1810 : (Eq (op e2 e1) e0) := by timed Eq.symm lean_a607
      have lean_s1811 : (Eq e0 (op e2 e1)) := by timed Eq.symm lean_s1810
      let lean_s1812 := by timed flipCongrArg lean_s1811 [Eq]
      have lean_s1813 : (Eq (op e2 e4) (op e2 e4)) := by timed rfl
      have lean_s1814 : (Eq (Eq e0 (op e2 e4)) (Eq (op e2 e1) (op e2 e4))) := by timed congr lean_s1812 lean_s1813
      have lean_s1815 : (Eq (Eq (op e2 e1) (op e2 e4)) False) := by timed falseIntro lean_a606
      have lean_s1816 : (Eq (Eq e0 (op e2 e4)) False) := by timed Eq.trans lean_s1814 lean_s1815
      have lean_s1817 : (Not (Eq e0 (op e2 e4))) := by timed falseElim lean_s1816
      show (Not (Eq e0 (op e2 e4))) from lean_s1817
  ))))
have lean_s1811 : (Implies (And (Not (Eq (op e2 e1) (op e2 e4))) (Eq e0 (op e2 e1))) (Not (Eq e0 (op e2 e4)))) := by liftOrNToImp lean_s1810, 2
have lean_s1812 : (Or (Not (And (Not (Eq (op e2 e1) (op e2 e4))) (Eq e0 (op e2 e1)))) (Not (Eq e0 (op e2 e4)))) := by timed impliesElim lean_s1811
have lean_s1813 : (Or (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e0 (op e2 e4))))) := by R1 lean_s1809, lean_s1812, (And (Not (Eq (op e2 e1) (op e2 e4))) (Eq e0 (op e2 e1))), [(- 1), (- 1)]
have lean_s1814 : (Eq Or Or) := by timed rfl
have lean_s1815 : (Eq (Eq (op e2 e1) (op e2 e4)) (Eq (op e2 e1) (op e2 e4))) := by timed rfl
let lean_s1816 := by timed flipCongrArg lean_s1815 [Eq]
have lean_s1817 : (Eq (Eq (Eq (op e2 e1) (op e2 e4)) (Not (Not (Eq (op e2 e1) (op e2 e4))))) (Eq (Eq (op e2 e1) (op e2 e4)) (Eq (op e2 e1) (op e2 e4)))) := by timed congr lean_s1816 lean_r222
have lean_s1818 : (Eq (Eq (Eq (op e2 e1) (op e2 e4)) (Not (Not (Eq (op e2 e1) (op e2 e4))))) True) := by timed Eq.trans lean_s1817 lean_r340
have lean_s1819 : (Eq (Eq (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Eq (op e2 e1) (op e2 e4))) True) := by timed Eq.trans lean_r123 lean_s1818
have lean_s1820 : (Eq (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Eq (op e2 e1) (op e2 e4))) := by timed trueElim lean_s1819
let lean_s1821 := by timed congr lean_s1814 lean_s1820
have lean_s1822 : (Eq (Not (Eq e0 (op e2 e1))) (Not (Eq e0 (op e2 e1)))) := by timed rfl
let lean_s1823 := by timed congr lean_s1814 lean_s1822
let lean_s1824 := by timed congr lean_s1823 lean_s1662
have lean_s1825 : (Eq (Or (Not (Not (Eq (op e2 e1) (op e2 e4)))) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e0 (op e2 e4))))) (Or (Eq (op e2 e1) (op e2 e4)) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e0 (op e2 e4)))))) := by timed congr lean_s1821 lean_s1824
have lean_s1826 : (Or (Eq (op e2 e1) (op e2 e4)) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e0 (op e2 e4))))) := by timed eqResolve lean_s1813 lean_s1825
let lean_s1827 := by R1 lean_s1808, lean_s1826, (Eq e0 (op e2 e1)), [(- 1), (- 1)]
have lean_s1828 : (Not (Eq (op e2 e1) (op e2 e4))) := by andElim lean_s29, 76
have lean_s1829 : (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e3 (op e4 e4)) (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e0 (op e2 e4)))))))))))) := by R1 lean_s1827, lean_s1828, (Eq (op e2 e1) (op e2 e4)), [(- 1), 0]
have lean_s1830 : (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e3 (op e4 e4)) (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e2 (op e1 e4)))))))))) := by factor lean_s1829, 9
let lean_s1831 := by R2 lean_s1830, lean_s1632, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s1832 := by R1 lean_s1831, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s1833 := by R1 lean_s1832, lean_s1626, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s1834 := by R1 lean_s1833, lean_s1628, (Eq e2 e0), [(- 1), 0]
have lean_s1835 : (Or (And (Eq e2 (op e4 e0)) (Eq e2 (op e3 e0))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e2 (op e3 e0))))) := by timed cnfAndNeg [(Eq e2 (op e4 e0)), (Eq e2 (op e3 e0))]
have lean_s1836 : (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e3 e0))) (Eq (op e3 e0) (op e4 e0)))) :=
  (scope (fun lean_a608 : (Eq e2 (op e4 e0)) =>
    (scope (fun lean_a609 : (Eq e2 (op e3 e0)) =>
      have lean_s1836 : (Eq (op e3 e0) e2) := by timed Eq.symm lean_a609
      have lean_s1837 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a608
      have lean_s1838 : (Eq e2 (op e4 e0)) := by timed Eq.symm lean_s1837
      have lean_s1839 : (Eq (op e3 e0) (op e4 e0)) := by timed Eq.trans lean_s1836 lean_s1838
      show (Eq (op e3 e0) (op e4 e0)) from lean_s1839
  ))))
have lean_s1837 : (Implies (And (Eq e2 (op e4 e0)) (Eq e2 (op e3 e0))) (Eq (op e3 e0) (op e4 e0))) := by liftOrNToImp lean_s1836, 2
have lean_s1838 : (Or (Not (And (Eq e2 (op e4 e0)) (Eq e2 (op e3 e0)))) (Eq (op e3 e0) (op e4 e0))) := by timed impliesElim lean_s1837
have lean_s1839 : (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e3 e0))) (Eq (op e3 e0) (op e4 e0)))) := by R1 lean_s1835, lean_s1838, (And (Eq e2 (op e4 e0)) (Eq e2 (op e3 e0))), [(- 1), (- 1)]
have lean_s1840 : (Or (Eq (op e3 e0) (op e4 e0)) (Or (Not (Eq e2 (op e3 e0))) (Not (Eq e2 (op e4 e0))))) := by permutateOr lean_s1839, [2, 1, 0], (- 1)
let lean_s1841 := by R1 lean_s1834, lean_s1840, (Eq e2 (op e3 e0)), [(- 1), (- 1)]
have lean_s1842 : (Not (Eq (op e3 e0) (op e4 e0))) := by andElim lean_s29, 9
have lean_s1843 : (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e3 (op e4 e4)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e4 e0)))))))))))) := by R1 lean_s1841, lean_s1842, (Eq (op e3 e0) (op e4 e0)), [(- 1), 0]
have lean_s1844 : (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e3 (op e4 e4)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))))))) := by factor lean_s1843, 9
have lean_s1845 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e3 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e1)))))))))) := by permutateOr lean_s1844, [6, 0, 4, 7, 3, 5, 2, 1], (- 1)
let lean_s1846 := by R1 lean_s1845, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s1847 := by R2 lean_s1846, lean_s649, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s1848 := by R1 lean_s1847, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s1849 := by R1 lean_s1848, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s1850 := by R2 lean_s1849, lean_s1537, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s1851 := by R1 lean_s1850, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s1852 := by R1 lean_s1851, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
have lean_s1853 : (Eq (Not (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e1))) (Eq e1 (op e3 e4)))) (Not (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e3 e4)))))) := by timed flipCongrArg lean_r249 [Not]
have lean_s1854 : (Not (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e1)) (Eq e1 (op e3 e4))))) := by timed eqResolve lean_a532 lean_s1853
have lean_s1855 : (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e3 e4))))) := by timed flipNotAnd lean_s1854 [(Eq e0 (op e2 e4)), (Eq e2 (op e4 e1)), (Eq e1 (op e3 e4))]
have lean_s1856 : (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e2 (op e4 e1))))) := by permutateOr lean_s1855, [0, 2, 1], (- 1)
let lean_s1857 := by R1 lean_s1852, lean_s1856, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
have lean_s1858 : (Eq (Not (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e2 e4)))) (Not (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e2 e4)))))) := by timed flipCongrArg lean_r47 [Not]
have lean_s1859 : (Not (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e2 e4))))) := by timed eqResolve lean_a510 lean_s1858
have lean_s1860 : (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e2 e4))))) := by timed flipNotAnd lean_s1859 [(Eq e1 (op e3 e4)), (Eq e3 (op e4 e0)), (Eq e0 (op e2 e4))]
have lean_s1861 : (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e3 (op e4 e0))))) := by permutateOr lean_s1860, [2, 0, 1], (- 1)
have lean_s1862 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e3 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e3 e4))))))))))))) := by R1 lean_s1857, lean_s1861, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
have lean_s1863 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e3 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e3 e4))))))))))) := by factor lean_s1862, (- 1)
let lean_s1864 := by R2 lean_s1863, lean_s1632, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s1865 := by R1 lean_s1864, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s1866 := by R1 lean_s1865, lean_s1626, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
have lean_s1867 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e3 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e1 e4))))))))))))) := by R1 lean_s1866, lean_s1628, (Eq e2 e0), [(- 1), 0]
have lean_s1868 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e3 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e2)) (Not (Eq e1 (op e3 e4)))))))))) := by factor lean_s1867, 10
let lean_s1869 := by R2 lean_s1868, lean_s1048, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
let lean_s1870 := by R1 lean_s1869, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
let lean_s1871 := by R1 lean_s1870, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s1872 : (Or (And (Not (Eq e2 (op e0 e4))) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3)))) (Or (Not (Not (Eq e2 (op e0 e4)))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e3 (op e3 e3)))))) := by timed cnfAndNeg [(Not (Eq e2 (op e0 e4))), (Eq e3 (op e0 e4)), (Eq e3 (op e3 e3))]
have lean_s1873 : (Or (Not (Not (Eq e2 (op e0 e4)))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3)))))) :=
  (scope (fun lean_a609 : (Not (Eq e2 (op e0 e4))) =>
    (scope (fun lean_a610 : (Eq e3 (op e0 e4)) =>
      (scope (fun lean_a611 : (Eq e3 (op e3 e3)) =>
        have lean_s1873 : (Eq e2 e2) := by timed rfl
        let lean_s1874 := by timed flipCongrArg lean_s1873 [Eq]
        have lean_s1875 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a611
        have lean_s1876 : (Eq (op e0 e4) e3) := by timed Eq.symm lean_a610
        have lean_s1877 : (Eq e3 (op e0 e4)) := by timed Eq.symm lean_s1876
        have lean_s1878 : (Eq (op e3 e3) (op e0 e4)) := by timed Eq.trans lean_s1875 lean_s1877
        have lean_s1879 : (Eq (Eq e2 (op e3 e3)) (Eq e2 (op e0 e4))) := by timed congr lean_s1874 lean_s1878
        have lean_s1880 : (Eq (Eq e2 (op e0 e4)) False) := by timed falseIntro lean_a609
        have lean_s1881 : (Eq (Eq e2 (op e3 e3)) False) := by timed Eq.trans lean_s1879 lean_s1880
        have lean_s1882 : (Not (Eq e2 (op e3 e3))) := by timed falseElim lean_s1881
        show (Not (Eq e2 (op e3 e3))) from lean_s1882
  ))))))
have lean_s1874 : (Implies (And (Not (Eq e2 (op e0 e4))) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3)))) (Not (Eq e2 (op e3 e3)))) := by liftOrNToImp lean_s1873, 3
have lean_s1875 : (Or (Not (And (Not (Eq e2 (op e0 e4))) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e2 (op e3 e3)))) := by timed impliesElim lean_s1874
have lean_s1876 : (Or (Not (Not (Eq e2 (op e0 e4)))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3)))))) := by R1 lean_s1872, lean_s1875, (And (Not (Eq e2 (op e0 e4))) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3)))), [(- 1), (- 1)]
have lean_s1877 : (Eq Or Or) := by timed rfl
have lean_s1878 : (Eq (Eq e2 (op e0 e4)) (Eq e2 (op e0 e4))) := by timed rfl
let lean_s1879 := by timed flipCongrArg lean_s1878 [Eq]
have lean_s1880 : (Eq (Eq (Eq e2 (op e0 e4)) (Not (Not (Eq e2 (op e0 e4))))) (Eq (Eq e2 (op e0 e4)) (Eq e2 (op e0 e4)))) := by timed congr lean_s1879 lean_r180
have lean_s1881 : (Eq (Eq (Eq e2 (op e0 e4)) (Not (Not (Eq e2 (op e0 e4))))) True) := by timed Eq.trans lean_s1880 lean_r242
have lean_s1882 : (Eq (Eq (Not (Not (Eq e2 (op e0 e4)))) (Eq e2 (op e0 e4))) True) := by timed Eq.trans lean_r301 lean_s1881
have lean_s1883 : (Eq (Not (Not (Eq e2 (op e0 e4)))) (Eq e2 (op e0 e4))) := by timed trueElim lean_s1882
let lean_s1884 := by timed congr lean_s1877 lean_s1883
let lean_s1885 := by timed congr lean_s1877 lean_s1444
let lean_s1886 := by timed congr lean_s1877 lean_s17
have lean_s1887 : (Eq (Not (Eq e2 (op e3 e3))) (Not (Eq e2 (op e3 e3)))) := by timed rfl
let lean_s1888 := by timed congr lean_s1886 lean_s1887
let lean_s1889 := by timed congr lean_s1885 lean_s1888
have lean_s1890 : (Eq (Or (Not (Not (Eq e2 (op e0 e4)))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3)))))) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) := by timed congr lean_s1884 lean_s1889
have lean_s1891 : (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3)))))) := by timed eqResolve lean_s1876 lean_s1890
have lean_s1892 : (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e2 (op e3 e3)))))) := by permutateOr lean_s1891, [0, 2, 1, 3], (- 1)
let lean_s1893 := by R1 lean_s1871, lean_s1892, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
have lean_s1894 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e0 e4)) (Or (Eq e2 (op e0 e4)) (Not (Eq e3 (op e0 e4)))))))))))) := by R2 lean_s1893, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
have lean_s1895 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e0 e4)) (Not (Eq e3 (op e0 e4))))))))))) := by factor lean_s1894, (- 1)
let lean_s1896 := by R1 lean_s1895, lean_s1447, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
let lean_s1897 := by R1 lean_s1896, lean_s1449, (Eq e3 e2), [(- 1), 0]
let lean_s1898 := by R1 lean_s1897, lean_s1581, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
let lean_s1899 := by R1 lean_s1898, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s1900 : (Or (And (Not (Eq e2 e0)) (Eq e0 (op e3 e1))) (Or (Not (Not (Eq e2 e0))) (Not (Eq e0 (op e3 e1))))) := by timed cnfAndNeg [(Not (Eq e2 e0)), (Eq e0 (op e3 e1))]
have lean_s1901 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e3 e1))) (Not (Eq e2 (op e3 e1))))) :=
  (scope (fun lean_a610 : (Not (Eq e2 e0)) =>
    (scope (fun lean_a611 : (Eq e0 (op e3 e1)) =>
      have lean_s1901 : (Eq e2 e2) := by timed rfl
      let lean_s1902 := by timed flipCongrArg lean_s1901 [Eq]
      have lean_s1903 : (Eq (op e3 e1) e0) := by timed Eq.symm lean_a611
      have lean_s1904 : (Eq (Eq e2 (op e3 e1)) (Eq e2 e0)) := by timed congr lean_s1902 lean_s1903
      have lean_s1905 : (Eq (Eq e2 e0) False) := by timed falseIntro lean_a610
      have lean_s1906 : (Eq (Eq e2 (op e3 e1)) False) := by timed Eq.trans lean_s1904 lean_s1905
      have lean_s1907 : (Not (Eq e2 (op e3 e1))) := by timed falseElim lean_s1906
      show (Not (Eq e2 (op e3 e1))) from lean_s1907
  ))))
have lean_s1902 : (Implies (And (Not (Eq e2 e0)) (Eq e0 (op e3 e1))) (Not (Eq e2 (op e3 e1)))) := by liftOrNToImp lean_s1901, 2
have lean_s1903 : (Or (Not (And (Not (Eq e2 e0)) (Eq e0 (op e3 e1)))) (Not (Eq e2 (op e3 e1)))) := by timed impliesElim lean_s1902
have lean_s1904 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e3 e1))) (Not (Eq e2 (op e3 e1))))) := by R1 lean_s1900, lean_s1903, (And (Not (Eq e2 e0)) (Eq e0 (op e3 e1))), [(- 1), (- 1)]
have lean_s1905 : (Eq Or Or) := by timed rfl
let lean_s1906 := by timed congr lean_s1905 lean_s1619
let lean_s1907 := by timed congr lean_s1905 lean_s1733
let lean_s1908 := by timed congr lean_s1907 lean_s1731
have lean_s1909 : (Eq (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e3 e1))) (Not (Eq e2 (op e3 e1))))) (Or (Eq e2 e0) (Or (Not (Eq e0 (op e3 e1))) (Not (Eq e2 (op e3 e1)))))) := by timed congr lean_s1906 lean_s1908
have lean_s1910 : (Or (Eq e2 e0) (Or (Not (Eq e0 (op e3 e1))) (Not (Eq e2 (op e3 e1))))) := by timed eqResolve lean_s1904 lean_s1909
let lean_s1911 := by R1 lean_s1910, lean_s1628, (Eq e2 e0), [(- 1), 0]
let lean_s1912 := by R2 lean_s1911, lean_s1748, (Eq e2 (op e3 e1)), [(- 1), (- 1)]
let lean_s1913 := by R1 lean_s1912, lean_s1770, (Eq e2 (op e3 e2)), [(- 1), 0]
have lean_s1914 : (Eq (Not (And (And (Eq e1 (op e2 e3)) (Eq e2 (op e3 e0))) (Eq e0 (op e4 e3)))) (Not (And (Eq e1 (op e2 e3)) (And (Eq e2 (op e3 e0)) (Eq e0 (op e4 e3)))))) := by timed flipCongrArg lean_r35 [Not]
have lean_s1915 : (Not (And (Eq e1 (op e2 e3)) (And (Eq e2 (op e3 e0)) (Eq e0 (op e4 e3))))) := by timed eqResolve lean_a558 lean_s1914
have lean_s1916 : (Or (Not (Eq e1 (op e2 e3))) (Or (Not (Eq e2 (op e3 e0))) (Not (Eq e0 (op e4 e3))))) := by timed flipNotAnd lean_s1915 [(Eq e1 (op e2 e3)), (Eq e2 (op e3 e0)), (Eq e0 (op e4 e3))]
let lean_s1917 := by R1 lean_s1913, lean_s1916, (Eq e2 (op e3 e0)), [(- 1), (- 1)]
let lean_s1918 := by R2 lean_s1917, lean_s744, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s1919 := by R1 lean_s1918, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
let lean_s1920 := by R2 lean_s1919, lean_s1675, (Eq e0 (op e3 e1)), [(- 1), (- 1)]
let lean_s1921 := by R1 lean_s1920, lean_s1696, (Eq e0 (op e0 e1)), [(- 1), 0]
let lean_s1922 := by R1 lean_s1921, lean_s1892, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
have lean_s1923 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e2 e3))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Not (Eq e3 (op e0 e4)))))))))))) := by R2 lean_s1922, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
have lean_s1924 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e2 e3))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Not (Eq e3 (op e0 e4))))))))))) := by factor lean_s1923, (- 1)
let lean_s1925 := by R2 lean_s981, lean_s986, (Eq e4 (op e4 (op e4 e4))), [(- 1), 0]
have lean_s1926 : (Or (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e3 (op e4 e2))))) := by timed cnfAndNeg [(Eq e2 (op e4 e3)), (Eq e3 (op e4 e2))]
have lean_s1927 : (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e2))) (Eq e3 (op e4 (op e4 e3))))) :=
  (scope (fun lean_a611 : (Eq e2 (op e4 e3)) =>
    (scope (fun lean_a612 : (Eq e3 (op e4 e2)) =>
      have lean_s1927 : (Eq (op e4 e2) e3) := by timed Eq.symm lean_a612
      have lean_s1928 : (Eq e3 (op e4 e2)) := by timed Eq.symm lean_s1927
      have lean_s1929 : (Eq e4 e4) := by timed rfl
      let lean_s1930 := by timed flipCongrArg lean_s1929 [op]
      have lean_s1931 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a611
      have lean_s1932 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s1931
      have lean_s1933 : (Eq (op e4 e2) (op e4 (op e4 e3))) := by timed congr lean_s1930 lean_s1932
      have lean_s1934 : (Eq e3 (op e4 (op e4 e3))) := by timed Eq.trans lean_s1928 lean_s1933
      show (Eq e3 (op e4 (op e4 e3))) from lean_s1934
  ))))
have lean_s1928 : (Implies (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e2))) (Eq e3 (op e4 (op e4 e3)))) := by liftOrNToImp lean_s1927, 2
have lean_s1929 : (Or (Not (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e2)))) (Eq e3 (op e4 (op e4 e3)))) := by timed impliesElim lean_s1928
have lean_s1930 : (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e2))) (Eq e3 (op e4 (op e4 e3))))) := by R1 lean_s1926, lean_s1929, (And (Eq e2 (op e4 e3)) (Eq e3 (op e4 e2))), [(- 1), (- 1)]
have lean_s1931 : (Or (Eq e3 (op e4 (op e4 e3))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s1930, [2, 1, 0], (- 1)
let lean_s1932 := by R2 lean_s1925, lean_s1931, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s1933 : (Or (And (Eq e3 (op e4 e2)) (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e4 e3))))) := by timed cnfAndNeg [(Eq e3 (op e4 e2)), (Eq e2 (op e4 e3))]
have lean_s1934 : (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Eq e2 (op e4 (op e4 e2))))) :=
  (scope (fun lean_a612 : (Eq e3 (op e4 e2)) =>
    (scope (fun lean_a613 : (Eq e2 (op e4 e3)) =>
      have lean_s1934 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a613
      have lean_s1935 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s1934
      have lean_s1936 : (Eq e4 e4) := by timed rfl
      let lean_s1937 := by timed flipCongrArg lean_s1936 [op]
      have lean_s1938 : (Eq (op e4 e2) e3) := by timed Eq.symm lean_a612
      have lean_s1939 : (Eq e3 (op e4 e2)) := by timed Eq.symm lean_s1938
      have lean_s1940 : (Eq (op e4 e3) (op e4 (op e4 e2))) := by timed congr lean_s1937 lean_s1939
      have lean_s1941 : (Eq e2 (op e4 (op e4 e2))) := by timed Eq.trans lean_s1935 lean_s1940
      show (Eq e2 (op e4 (op e4 e2))) from lean_s1941
  ))))
have lean_s1935 : (Implies (And (Eq e3 (op e4 e2)) (Eq e2 (op e4 e3))) (Eq e2 (op e4 (op e4 e2)))) := by liftOrNToImp lean_s1934, 2
have lean_s1936 : (Or (Not (And (Eq e3 (op e4 e2)) (Eq e2 (op e4 e3)))) (Eq e2 (op e4 (op e4 e2)))) := by timed impliesElim lean_s1935
have lean_s1937 : (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Eq e2 (op e4 (op e4 e2))))) := by R1 lean_s1933, lean_s1936, (And (Eq e3 (op e4 e2)) (Eq e2 (op e4 e3))), [(- 1), (- 1)]
have lean_s1938 : (Or (Eq e2 (op e4 (op e4 e2))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s1937, [2, 0, 1], (- 1)
have lean_s1939 : (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e4 e3)))))))) := by R2 lean_s1932, lean_s1938, (Eq e2 (op e4 (op e4 e2))), [(- 1), (- 1)]
have lean_s1940 : (Or (Not (Eq e0 (op e4 (op e4 e0)))) (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e4 e3)))))) := by factor lean_s1939, (- 1)
let lean_s1941 := by R2 lean_s1940, lean_s1537, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
let lean_s1942 := by R1 lean_s1941, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s1943 := by R1 lean_s1942, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
have lean_s1944 : (Or (And (Eq e1 (op e4 e0)) (Eq e0 (op e4 e1))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e0 (op e4 e1))))) := by timed cnfAndNeg [(Eq e1 (op e4 e0)), (Eq e0 (op e4 e1))]
have lean_s1945 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Eq e0 (op e4 (op e4 e0))))) :=
  (scope (fun lean_a612 : (Eq e1 (op e4 e0)) =>
    (scope (fun lean_a613 : (Eq e0 (op e4 e1)) =>
      have lean_s1945 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_a613
      have lean_s1946 : (Eq e0 (op e4 e1)) := by timed Eq.symm lean_s1945
      have lean_s1947 : (Eq e4 e4) := by timed rfl
      let lean_s1948 := by timed flipCongrArg lean_s1947 [op]
      have lean_s1949 : (Eq (op e4 e0) e1) := by timed Eq.symm lean_a612
      have lean_s1950 : (Eq e1 (op e4 e0)) := by timed Eq.symm lean_s1949
      have lean_s1951 : (Eq (op e4 e1) (op e4 (op e4 e0))) := by timed congr lean_s1948 lean_s1950
      have lean_s1952 : (Eq e0 (op e4 (op e4 e0))) := by timed Eq.trans lean_s1946 lean_s1951
      show (Eq e0 (op e4 (op e4 e0))) from lean_s1952
  ))))
have lean_s1946 : (Implies (And (Eq e1 (op e4 e0)) (Eq e0 (op e4 e1))) (Eq e0 (op e4 (op e4 e0)))) := by liftOrNToImp lean_s1945, 2
have lean_s1947 : (Or (Not (And (Eq e1 (op e4 e0)) (Eq e0 (op e4 e1)))) (Eq e0 (op e4 (op e4 e0)))) := by timed impliesElim lean_s1946
have lean_s1948 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Eq e0 (op e4 (op e4 e0))))) := by R1 lean_s1944, lean_s1947, (And (Eq e1 (op e4 e0)) (Eq e0 (op e4 e1))), [(- 1), (- 1)]
have lean_s1949 : (Or (Eq e0 (op e4 (op e4 e0))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e0 (op e4 e1))))) := by permutateOr lean_s1948, [2, 0, 1], (- 1)
let lean_s1950 := by R2 lean_s1943, lean_s1949, (Eq e0 (op e4 (op e4 e0))), [(- 1), (- 1)]
have lean_s1951 : (Or (And (Eq e0 (op e4 e1)) (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e1 (op e4 e0))))) := by timed cnfAndNeg [(Eq e0 (op e4 e1)), (Eq e1 (op e4 e0))]
have lean_s1952 : (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e1 (op e4 e0))) (Eq e1 (op e4 (op e4 e1))))) :=
  (scope (fun lean_a614 : (Eq e0 (op e4 e1)) =>
    (scope (fun lean_a615 : (Eq e1 (op e4 e0)) =>
      have lean_s1952 : (Eq (op e4 e0) e1) := by timed Eq.symm lean_a615
      have lean_s1953 : (Eq e1 (op e4 e0)) := by timed Eq.symm lean_s1952
      have lean_s1954 : (Eq e4 e4) := by timed rfl
      let lean_s1955 := by timed flipCongrArg lean_s1954 [op]
      have lean_s1956 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_a614
      have lean_s1957 : (Eq e0 (op e4 e1)) := by timed Eq.symm lean_s1956
      have lean_s1958 : (Eq (op e4 e0) (op e4 (op e4 e1))) := by timed congr lean_s1955 lean_s1957
      have lean_s1959 : (Eq e1 (op e4 (op e4 e1))) := by timed Eq.trans lean_s1953 lean_s1958
      show (Eq e1 (op e4 (op e4 e1))) from lean_s1959
  ))))
have lean_s1953 : (Implies (And (Eq e0 (op e4 e1)) (Eq e1 (op e4 e0))) (Eq e1 (op e4 (op e4 e1)))) := by liftOrNToImp lean_s1952, 2
have lean_s1954 : (Or (Not (And (Eq e0 (op e4 e1)) (Eq e1 (op e4 e0)))) (Eq e1 (op e4 (op e4 e1)))) := by timed impliesElim lean_s1953
have lean_s1955 : (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e1 (op e4 e0))) (Eq e1 (op e4 (op e4 e1))))) := by R1 lean_s1951, lean_s1954, (And (Eq e0 (op e4 e1)) (Eq e1 (op e4 e0))), [(- 1), (- 1)]
have lean_s1956 : (Or (Eq e1 (op e4 (op e4 e1))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e0 (op e4 e1))))) := by permutateOr lean_s1955, [2, 1, 0], (- 1)
let lean_s1957 := by R2 lean_s1950, lean_s1956, (Eq e1 (op e4 (op e4 e1))), [(- 1), (- 1)]
let lean_s1958 := by R1 lean_s1957, lean_s1716, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s1959 := by R1 lean_s1958, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s1960 := by R2 lean_s1959, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s1961 := by R2 lean_s1960, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
have lean_s1962 : (Or (And (Eq e1 (op e4 e0)) (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e3 (op e4 e0))))) := by timed cnfAndNeg [(Eq e1 (op e4 e0)), (Eq e3 (op e4 e0))]
have lean_s1963 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e3 (op e4 e0))) (Eq e3 e1))) :=
  (scope (fun lean_a614 : (Eq e1 (op e4 e0)) =>
    (scope (fun lean_a615 : (Eq e3 (op e4 e0)) =>
      have lean_s1963 : (Eq (op e4 e0) e3) := by timed Eq.symm lean_a615
      have lean_s1964 : (Eq e3 (op e4 e0)) := by timed Eq.symm lean_s1963
      have lean_s1965 : (Eq (op e4 e0) e1) := by timed Eq.symm lean_a614
      have lean_s1966 : (Eq e3 e1) := by timed Eq.trans lean_s1964 lean_s1965
      show (Eq e3 e1) from lean_s1966
  ))))
have lean_s1964 : (Implies (And (Eq e1 (op e4 e0)) (Eq e3 (op e4 e0))) (Eq e3 e1)) := by liftOrNToImp lean_s1963, 2
have lean_s1965 : (Or (Not (And (Eq e1 (op e4 e0)) (Eq e3 (op e4 e0)))) (Eq e3 e1)) := by timed impliesElim lean_s1964
have lean_s1966 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e3 (op e4 e0))) (Eq e3 e1))) := by R1 lean_s1962, lean_s1965, (And (Eq e1 (op e4 e0)) (Eq e3 (op e4 e0))), [(- 1), (- 1)]
have lean_s1967 : (Or (Eq e3 e1) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e3 (op e4 e0))))) := by permutateOr lean_s1966, [2, 0, 1], (- 1)
let lean_s1968 := by R1 lean_s1961, lean_s1967, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
have lean_s1969 : (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e1 (op e4 e0)))))))))) := by R1 lean_s1968, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s1970 : (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e3 (op e0 e4)))))) := by factor lean_s1969, 7
have lean_s1971 : (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e3)))))) := by permutateOr lean_s1970, [3, 1, 2, 0], (- 1)
let lean_s1972 := by R1 lean_s1924, lean_s1971, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
have lean_s1973 : (Eq (Not (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e1 e4)))) (Not (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e1 e4)))))) := by timed flipCongrArg lean_r40 [Not]
have lean_s1974 : (Not (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e1 e4))))) := by timed eqResolve lean_a487 lean_s1973
have lean_s1975 : (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e2 (op e1 e4))))) := by timed flipNotAnd lean_s1974 [(Eq e3 (op e0 e4)), (Eq e0 (op e4 e2)), (Eq e2 (op e1 e4))]
have lean_s1976 : (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e0 (op e4 e2))))) := by permutateOr lean_s1975, [0, 2, 1], (- 1)
let lean_s1977 := by R1 lean_s1972, lean_s1976, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
have lean_s1978 : (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e1)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e2 e3)) (Eq e1 (op e2 e4)))))) := by andElim lean_s647, 22
have lean_s1979 : (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e1)) (Eq e1 (op e2 e2)))))) := by permutateOr lean_s1978, [4, 3, 0, 1, 2], (- 1)
let lean_s1980 := by R2 lean_s1977, lean_s1979, (Eq e1 (op e2 e3)), [(- 1), (- 1)]
have lean_s1981 : (Or (And (Not (Eq (op e1 e1) (op e2 e1))) (Eq e1 (op e1 e1))) (Or (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Not (Eq e1 (op e1 e1))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e2 e1))), (Eq e1 (op e1 e1))]
have lean_s1982 : (Or (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e1))))) :=
  (scope (fun lean_a614 : (Not (Eq (op e1 e1) (op e2 e1))) =>
    (scope (fun lean_a615 : (Eq e1 (op e1 e1)) =>
      have lean_s1982 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a615
      have lean_s1983 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s1982
      let lean_s1984 := by timed flipCongrArg lean_s1983 [Eq]
      have lean_s1985 : (Eq (op e2 e1) (op e2 e1)) := by timed rfl
      have lean_s1986 : (Eq (Eq e1 (op e2 e1)) (Eq (op e1 e1) (op e2 e1))) := by timed congr lean_s1984 lean_s1985
      have lean_s1987 : (Eq (Eq (op e1 e1) (op e2 e1)) False) := by timed falseIntro lean_a614
      have lean_s1988 : (Eq (Eq e1 (op e2 e1)) False) := by timed Eq.trans lean_s1986 lean_s1987
      have lean_s1989 : (Not (Eq e1 (op e2 e1))) := by timed falseElim lean_s1988
      show (Not (Eq e1 (op e2 e1))) from lean_s1989
  ))))
have lean_s1983 : (Implies (And (Not (Eq (op e1 e1) (op e2 e1))) (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e1)))) := by liftOrNToImp lean_s1982, 2
have lean_s1984 : (Or (Not (And (Not (Eq (op e1 e1) (op e2 e1))) (Eq e1 (op e1 e1)))) (Not (Eq e1 (op e2 e1)))) := by timed impliesElim lean_s1983
have lean_s1985 : (Or (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e1))))) := by R1 lean_s1981, lean_s1984, (And (Not (Eq (op e1 e1) (op e2 e1))) (Eq e1 (op e1 e1))), [(- 1), (- 1)]
have lean_s1986 : (Eq Or Or) := by timed rfl
have lean_s1987 : (Eq (Eq (op e1 e1) (op e2 e1)) (Eq (op e1 e1) (op e2 e1))) := by timed rfl
let lean_s1988 := by timed flipCongrArg lean_s1987 [Eq]
have lean_s1989 : (Eq (Eq (Eq (op e1 e1) (op e2 e1)) (Not (Not (Eq (op e1 e1) (op e2 e1))))) (Eq (Eq (op e1 e1) (op e2 e1)) (Eq (op e1 e1) (op e2 e1)))) := by timed congr lean_s1988 lean_r151
have lean_s1990 : (Eq (Eq (Eq (op e1 e1) (op e2 e1)) (Not (Not (Eq (op e1 e1) (op e2 e1))))) True) := by timed Eq.trans lean_s1989 lean_r153
have lean_s1991 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Eq (op e1 e1) (op e2 e1))) True) := by timed Eq.trans lean_r44 lean_s1990
have lean_s1992 : (Eq (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Eq (op e1 e1) (op e2 e1))) := by timed trueElim lean_s1991
let lean_s1993 := by timed congr lean_s1986 lean_s1992
let lean_s1994 := by timed congr lean_s1986 lean_s730
have lean_s1995 : (Eq (Not (Eq e1 (op e2 e1))) (Not (Eq e1 (op e2 e1)))) := by timed rfl
let lean_s1996 := by timed congr lean_s1994 lean_s1995
have lean_s1997 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e2 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e1))))) (Or (Eq (op e1 e1) (op e2 e1)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e1)))))) := by timed congr lean_s1993 lean_s1996
have lean_s1998 : (Or (Eq (op e1 e1) (op e2 e1)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e1))))) := by timed eqResolve lean_s1985 lean_s1997
have lean_s1999 : (Not (Eq (op e1 e1) (op e2 e1))) := by andElim lean_s29, 14
let lean_s2000 := by R1 lean_s1998, lean_s1999, (Eq (op e1 e1) (op e2 e1)), [(- 1), 0]
have lean_s2001 : (Not (Eq e1 (op e2 e1))) := by R2 lean_s2000, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s2002 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e0)) (Eq e1 (op e2 e2))))))))))))))) := by R1 lean_s1980, lean_s2001, (Eq e1 (op e2 e1)), [(- 1), 0]
have lean_s2003 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e0)) (Eq e1 (op e2 e2))))))))))))) := by factor lean_s2002, (- 1)
let lean_s2004 := by R2 lean_s2003, lean_s1428, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s2005 := by R1 lean_s2004, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2006 := by R1 lean_s2005, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s2007 : (Or (And (Not (Eq e1 e0)) (Eq e0 (op e2 e4))) (Or (Not (Not (Eq e1 e0))) (Not (Eq e0 (op e2 e4))))) := by timed cnfAndNeg [(Not (Eq e1 e0)), (Eq e0 (op e2 e4))]
have lean_s2008 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e2 e4))))) :=
  (scope (fun lean_a615 : (Not (Eq e1 e0)) =>
    (scope (fun lean_a616 : (Eq e0 (op e2 e4)) =>
      have lean_s2008 : (Eq e1 e1) := by timed rfl
      let lean_s2009 := by timed flipCongrArg lean_s2008 [Eq]
      have lean_s2010 : (Eq (op e2 e4) e0) := by timed Eq.symm lean_a616
      have lean_s2011 : (Eq (Eq e1 (op e2 e4)) (Eq e1 e0)) := by timed congr lean_s2009 lean_s2010
      have lean_s2012 : (Eq (Eq e1 e0) False) := by timed falseIntro lean_a615
      have lean_s2013 : (Eq (Eq e1 (op e2 e4)) False) := by timed Eq.trans lean_s2011 lean_s2012
      have lean_s2014 : (Not (Eq e1 (op e2 e4))) := by timed falseElim lean_s2013
      show (Not (Eq e1 (op e2 e4))) from lean_s2014
  ))))
have lean_s2009 : (Implies (And (Not (Eq e1 e0)) (Eq e0 (op e2 e4))) (Not (Eq e1 (op e2 e4)))) := by liftOrNToImp lean_s2008, 2
have lean_s2010 : (Or (Not (And (Not (Eq e1 e0)) (Eq e0 (op e2 e4)))) (Not (Eq e1 (op e2 e4)))) := by timed impliesElim lean_s2009
have lean_s2011 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e2 e4))))) := by R1 lean_s2007, lean_s2010, (And (Not (Eq e1 e0)) (Eq e0 (op e2 e4))), [(- 1), (- 1)]
have lean_s2012 : (Eq Or Or) := by timed rfl
let lean_s2013 := by timed congr lean_s2012 lean_s781
let lean_s2014 := by timed congr lean_s2012 lean_s1662
have lean_s2015 : (Eq (Not (Eq e1 (op e2 e4))) (Not (Eq e1 (op e2 e4)))) := by timed rfl
let lean_s2016 := by timed congr lean_s2014 lean_s2015
have lean_s2017 : (Eq (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e2 e4))))) (Or (Eq e1 e0) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e2 e4)))))) := by timed congr lean_s2013 lean_s2016
have lean_s2018 : (Or (Eq e1 e0) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e2 e4))))) := by timed eqResolve lean_s2011 lean_s2017
let lean_s2019 := by R1 lean_s2006, lean_s2018, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2020 := by R1 lean_s2019, lean_s789, (Eq e1 e0), [(- 1), 0]
let lean_s2021 := by R1 lean_s2020, lean_s1666, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s2022 := by R1 lean_s2021, lean_s1668, (Eq e3 e0), [(- 1), 0]
let lean_s2023 := by R1 lean_s2022, lean_s1826, (Eq e0 (op e2 e1)), [(- 1), (- 1)]
have lean_s2024 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e3 (op e1 e4)) (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e0 (op e2 e4))))))))))))))) := by R1 lean_s2023, lean_s1828, (Eq (op e2 e1) (op e2 e4)), [(- 1), 0]
have lean_s2025 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e3 (op e1 e4)) (Not (Eq e0 (op e2 e4))))))))))))) := by factor lean_s2024, (- 1)
let lean_s2026 := by R2 lean_s2025, lean_s1632, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s2027 := by R1 lean_s2026, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s2028 := by R1 lean_s2027, lean_s1626, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
have lean_s2029 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e3 (op e1 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e1 e4))))))))))))))) := by R1 lean_s2028, lean_s1628, (Eq e2 e0), [(- 1), 0]
have lean_s2030 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e3 (op e1 e4)) (Eq e0 (op e3 e4)))))))))))) := by factor lean_s2029, 12
let lean_s2031 := by R2 lean_s2030, lean_s1048, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
let lean_s2032 := by R1 lean_s2031, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
have lean_s2033 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e3 (op e1 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e0 e4))))))))))))) := by R1 lean_s2032, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s2034 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e2 (op e0 e4)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e3 (op e1 e4)) (Eq e0 (op e3 e4))))))))))) := by factor lean_s2033, 11
have lean_s2035 : (Or (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e3))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e0 (op e1 e3))))) := by timed cnfAndNeg [(Eq e0 (op e1 e4)), (Eq e0 (op e1 e3))]
have lean_s2036 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e0 (op e1 e3))) (Eq (op e1 e3) (op e1 e4)))) :=
  (scope (fun lean_a615 : (Eq e0 (op e1 e4)) =>
    (scope (fun lean_a616 : (Eq e0 (op e1 e3)) =>
      have lean_s2036 : (Eq (op e1 e3) e0) := by timed Eq.symm lean_a616
      have lean_s2037 : (Eq (op e1 e4) e0) := by timed Eq.symm lean_a615
      have lean_s2038 : (Eq e0 (op e1 e4)) := by timed Eq.symm lean_s2037
      have lean_s2039 : (Eq (op e1 e3) (op e1 e4)) := by timed Eq.trans lean_s2036 lean_s2038
      show (Eq (op e1 e3) (op e1 e4)) from lean_s2039
  ))))
have lean_s2037 : (Implies (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e3))) (Eq (op e1 e3) (op e1 e4))) := by liftOrNToImp lean_s2036, 2
have lean_s2038 : (Or (Not (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e3)))) (Eq (op e1 e3) (op e1 e4))) := by timed impliesElim lean_s2037
have lean_s2039 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e0 (op e1 e3))) (Eq (op e1 e3) (op e1 e4)))) := by R1 lean_s2035, lean_s2038, (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e3))), [(- 1), (- 1)]
have lean_s2040 : (Or (Eq (op e1 e3) (op e1 e4)) (Or (Not (Eq e0 (op e1 e3))) (Not (Eq e0 (op e1 e4))))) := by permutateOr lean_s2039, [2, 1, 0], (- 1)
have lean_s2041 : (Not (Eq (op e1 e3) (op e1 e4))) := by andElim lean_s29, 69
let lean_s2042 := by R1 lean_s2040, lean_s2041, (Eq (op e1 e3) (op e1 e4)), [(- 1), 0]
have lean_s2043 : (Or (Eq e0 (op e0 e3)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e4 e3)))))) := by andElim lean_s647, 31
have lean_s2044 : (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e0 e3)) (Eq e0 (op e3 e3)))))) := by permutateOr lean_s2043, [2, 4, 1, 0, 3], (- 1)
let lean_s2045 := by R2 lean_s2042, lean_s2044, (Eq e0 (op e1 e3)), [(- 1), (- 1)]
have lean_s2046 : (Or (And (Not (Eq (op e0 e0) (op e0 e3))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e3))), (Eq e0 (op e0 e0))]
have lean_s2047 : (Or (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e3))))) :=
  (scope (fun lean_a616 : (Not (Eq (op e0 e0) (op e0 e3))) =>
    (scope (fun lean_a617 : (Eq e0 (op e0 e0)) =>
      have lean_s2047 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a617
      have lean_s2048 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s2047
      let lean_s2049 := by timed flipCongrArg lean_s2048 [Eq]
      have lean_s2050 : (Eq (op e0 e3) (op e0 e3)) := by timed rfl
      have lean_s2051 : (Eq (Eq e0 (op e0 e3)) (Eq (op e0 e0) (op e0 e3))) := by timed congr lean_s2049 lean_s2050
      have lean_s2052 : (Eq (Eq (op e0 e0) (op e0 e3)) False) := by timed falseIntro lean_a616
      have lean_s2053 : (Eq (Eq e0 (op e0 e3)) False) := by timed Eq.trans lean_s2051 lean_s2052
      have lean_s2054 : (Not (Eq e0 (op e0 e3))) := by timed falseElim lean_s2053
      show (Not (Eq e0 (op e0 e3))) from lean_s2054
  ))))
have lean_s2048 : (Implies (And (Not (Eq (op e0 e0) (op e0 e3))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e3)))) := by liftOrNToImp lean_s2047, 2
have lean_s2049 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e3))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e0 e3)))) := by timed impliesElim lean_s2048
have lean_s2050 : (Or (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e3))))) := by R1 lean_s2046, lean_s2049, (And (Not (Eq (op e0 e0) (op e0 e3))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s2051 : (Eq Or Or) := by timed rfl
have lean_s2052 : (Eq (Eq (op e0 e0) (op e0 e3)) (Eq (op e0 e0) (op e0 e3))) := by timed rfl
let lean_s2053 := by timed flipCongrArg lean_s2052 [Eq]
have lean_s2054 : (Eq (Eq (Eq (op e0 e0) (op e0 e3)) (Not (Not (Eq (op e0 e0) (op e0 e3))))) (Eq (Eq (op e0 e0) (op e0 e3)) (Eq (op e0 e0) (op e0 e3)))) := by timed congr lean_s2053 lean_r108
have lean_s2055 : (Eq (Eq (Eq (op e0 e0) (op e0 e3)) (Not (Not (Eq (op e0 e0) (op e0 e3))))) True) := by timed Eq.trans lean_s2054 lean_r110
have lean_s2056 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Eq (op e0 e0) (op e0 e3))) True) := by timed Eq.trans lean_r193 lean_s2055
have lean_s2057 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Eq (op e0 e0) (op e0 e3))) := by timed trueElim lean_s2056
let lean_s2058 := by timed congr lean_s2051 lean_s2057
let lean_s2059 := by timed congr lean_s2051 lean_s759
have lean_s2060 : (Eq (Not (Eq e0 (op e0 e3))) (Not (Eq e0 (op e0 e3)))) := by timed rfl
let lean_s2061 := by timed congr lean_s2059 lean_s2060
have lean_s2062 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e3)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e3))))) (Or (Eq (op e0 e0) (op e0 e3)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e3)))))) := by timed congr lean_s2058 lean_s2061
have lean_s2063 : (Or (Eq (op e0 e0) (op e0 e3)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e3))))) := by timed eqResolve lean_s2050 lean_s2062
have lean_s2064 : (Not (Eq (op e0 e0) (op e0 e3))) := by andElim lean_s29, 52
let lean_s2065 := by R1 lean_s2063, lean_s2064, (Eq (op e0 e0) (op e0 e3)), [(- 1), 0]
have lean_s2066 : (Not (Eq e0 (op e0 e3))) := by R2 lean_s2065, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2067 := by R1 lean_s2045, lean_s2066, (Eq e0 (op e0 e3)), [(- 1), 0]
have lean_s2068 : (Or (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3))))) (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e3))))))) := by timed cnfAndNeg [(Not (Eq e0 (op e3 e4))), (Eq e1 (op e3 e4)), (Eq e1 (op e1 e1)), (Eq e1 (op e2 e3))]
have lean_s2069 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3))))))) :=
  (scope (fun lean_a617 : (Not (Eq e0 (op e3 e4))) =>
    (scope (fun lean_a618 : (Eq e1 (op e3 e4)) =>
      (scope (fun lean_a619 : (Eq e1 (op e1 e1)) =>
        (scope (fun lean_a620 : (Eq e1 (op e2 e3)) =>
          have lean_s2069 : (Eq e0 e0) := by timed rfl
          let lean_s2070 := by timed flipCongrArg lean_s2069 [Eq]
          have lean_s2071 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a619
          have lean_s2072 : (Eq (op e3 e4) e1) := by timed Eq.symm lean_a618
          have lean_s2073 : (Eq e1 (op e3 e4)) := by timed Eq.symm lean_s2072
          have lean_s2074 : (Eq (op e1 e1) (op e3 e4)) := by timed Eq.trans lean_s2071 lean_s2073
          have lean_s2075 : (Eq (op e3 e4) (op e1 e1)) := by timed Eq.symm lean_s2074
          have lean_s2076 : (Eq (op e2 e3) e1) := by timed Eq.symm lean_a620
          have lean_s2077 : (Eq (op e2 e3) (op e1 e1)) := by timed Eq.trans lean_s2076 lean_a619
          have lean_s2078 : (Eq (op e1 e1) (op e2 e3)) := by timed Eq.symm lean_s2077
          have lean_s2079 : (Eq (op e3 e4) (op e2 e3)) := by timed Eq.trans lean_s2075 lean_s2078
          have lean_s2080 : (Eq (op e2 e3) (op e3 e4)) := by timed Eq.symm lean_s2079
          have lean_s2081 : (Eq (Eq e0 (op e2 e3)) (Eq e0 (op e3 e4))) := by timed congr lean_s2070 lean_s2080
          have lean_s2082 : (Eq (Eq e0 (op e3 e4)) False) := by timed falseIntro lean_a617
          have lean_s2083 : (Eq (Eq e0 (op e2 e3)) False) := by timed Eq.trans lean_s2081 lean_s2082
          have lean_s2084 : (Not (Eq e0 (op e2 e3))) := by timed falseElim lean_s2083
          show (Not (Eq e0 (op e2 e3))) from lean_s2084
  ))))))))
have lean_s2070 : (Implies (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3))))) (Not (Eq e0 (op e2 e3)))) := by liftOrNToImp lean_s2069, 4
have lean_s2071 : (Or (Not (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3)))))) (Not (Eq e0 (op e2 e3)))) := by timed impliesElim lean_s2070
have lean_s2072 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3))))))) := by R1 lean_s2068, lean_s2071, (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3))))), [(- 1), (- 1)]
have lean_s2073 : (Eq Or Or) := by timed rfl
let lean_s2074 := by timed congr lean_s2073 lean_s726
let lean_s2075 := by timed congr lean_s2073 lean_s728
let lean_s2076 := by timed congr lean_s2073 lean_s730
have lean_s2077 : (Eq (Not (Eq e1 (op e2 e3))) (Not (Eq e1 (op e2 e3)))) := by timed rfl
let lean_s2078 := by timed congr lean_s2073 lean_s2077
have lean_s2079 : (Eq (Not (Eq e0 (op e2 e3))) (Not (Eq e0 (op e2 e3)))) := by timed rfl
let lean_s2080 := by timed congr lean_s2078 lean_s2079
let lean_s2081 := by timed congr lean_s2076 lean_s2080
let lean_s2082 := by timed congr lean_s2075 lean_s2081
have lean_s2083 : (Eq (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3))))))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3)))))))) := by timed congr lean_s2074 lean_s2082
have lean_s2084 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3))))))) := by timed eqResolve lean_s2072 lean_s2083
have lean_s2085 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e0 (op e2 e3))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e1 (op e3 e4))))))) := by permutateOr lean_s2084, [0, 2, 4, 3, 1], (- 1)
let lean_s2086 := by R1 lean_s2067, lean_s2085, (Eq e0 (op e2 e3)), [(- 1), (- 1)]
let lean_s2087 := by R2 lean_s2086, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s2088 : (Or (And (Not (Eq (op e1 e4) (op e2 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e1 e4) (op e2 e4))), (Eq e0 (op e1 e4)), (Eq e3 (op e2 e4)), (Eq e3 (op e3 e3))]
have lean_s2089 : (Or (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) :=
  (scope (fun lean_a618 : (Not (Eq (op e1 e4) (op e2 e4))) =>
    (scope (fun lean_a619 : (Eq e0 (op e1 e4)) =>
      (scope (fun lean_a620 : (Eq e3 (op e2 e4)) =>
        (scope (fun lean_a621 : (Eq e3 (op e3 e3)) =>
          have lean_s2089 : (Eq (op e1 e4) e0) := by timed Eq.symm lean_a619
          have lean_s2090 : (Eq e0 (op e1 e4)) := by timed Eq.symm lean_s2089
          let lean_s2091 := by timed flipCongrArg lean_s2090 [Eq]
          have lean_s2092 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a621
          have lean_s2093 : (Eq (op e2 e4) e3) := by timed Eq.symm lean_a620
          have lean_s2094 : (Eq e3 (op e2 e4)) := by timed Eq.symm lean_s2093
          have lean_s2095 : (Eq (op e3 e3) (op e2 e4)) := by timed Eq.trans lean_s2092 lean_s2094
          have lean_s2096 : (Eq (Eq e0 (op e3 e3)) (Eq (op e1 e4) (op e2 e4))) := by timed congr lean_s2091 lean_s2095
          have lean_s2097 : (Eq (Eq (op e1 e4) (op e2 e4)) False) := by timed falseIntro lean_a618
          have lean_s2098 : (Eq (Eq e0 (op e3 e3)) False) := by timed Eq.trans lean_s2096 lean_s2097
          have lean_s2099 : (Not (Eq e0 (op e3 e3))) := by timed falseElim lean_s2098
          show (Not (Eq e0 (op e3 e3))) from lean_s2099
  ))))))))
have lean_s2090 : (Implies (And (Not (Eq (op e1 e4) (op e2 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e0 (op e3 e3)))) := by liftOrNToImp lean_s2089, 4
have lean_s2091 : (Or (Not (And (Not (Eq (op e1 e4) (op e2 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3)))))) (Not (Eq e0 (op e3 e3)))) := by timed impliesElim lean_s2090
have lean_s2092 : (Or (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) := by R1 lean_s2088, lean_s2091, (And (Not (Eq (op e1 e4) (op e2 e4))) (And (Eq e0 (op e1 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s2093 : (Eq Or Or) := by timed rfl
have lean_s2094 : (Eq (Eq (op e1 e4) (op e2 e4)) (Eq (op e1 e4) (op e2 e4))) := by timed rfl
let lean_s2095 := by timed flipCongrArg lean_s2094 [Eq]
have lean_s2096 : (Eq (Eq (Eq (op e1 e4) (op e2 e4)) (Not (Not (Eq (op e1 e4) (op e2 e4))))) (Eq (Eq (op e1 e4) (op e2 e4)) (Eq (op e1 e4) (op e2 e4)))) := by timed congr lean_s2095 lean_r42
have lean_s2097 : (Eq (Eq (Eq (op e1 e4) (op e2 e4)) (Not (Not (Eq (op e1 e4) (op e2 e4))))) True) := by timed Eq.trans lean_s2096 lean_r43
have lean_s2098 : (Eq (Eq (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Eq (op e1 e4) (op e2 e4))) True) := by timed Eq.trans lean_r41 lean_s2097
have lean_s2099 : (Eq (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Eq (op e1 e4) (op e2 e4))) := by timed trueElim lean_s2098
let lean_s2100 := by timed congr lean_s2093 lean_s2099
let lean_s2101 := by timed congr lean_s2093 lean_s1621
let lean_s2102 := by timed congr lean_s2093 lean_s15
let lean_s2103 := by timed congr lean_s2093 lean_s17
have lean_s2104 : (Eq (Not (Eq e0 (op e3 e3))) (Not (Eq e0 (op e3 e3)))) := by timed rfl
let lean_s2105 := by timed congr lean_s2103 lean_s2104
let lean_s2106 := by timed congr lean_s2102 lean_s2105
let lean_s2107 := by timed congr lean_s2101 lean_s2106
have lean_s2108 : (Eq (Or (Not (Not (Eq (op e1 e4) (op e2 e4)))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) (Or (Eq (op e1 e4) (op e2 e4)) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3)))))))) := by timed congr lean_s2100 lean_s2107
have lean_s2109 : (Or (Eq (op e1 e4) (op e2 e4)) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) := by timed eqResolve lean_s2092 lean_s2108
have lean_s2110 : (Or (Eq (op e1 e4) (op e2 e4)) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e0 (op e3 e3))))))) := by permutateOr lean_s2109, [0, 3, 1, 2, 4], (- 1)
let lean_s2111 := by R1 lean_s2087, lean_s2110, (Eq e0 (op e3 e3)), [(- 1), (- 1)]
have lean_s2112 : (Not (Eq (op e1 e4) (op e2 e4))) := by andElim lean_s29, 44
let lean_s2113 := by R1 lean_s2111, lean_s2112, (Eq (op e1 e4) (op e2 e4)), [(- 1), 0]
let lean_s2114 := by R2 lean_s2113, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2115 := by R2 lean_s2114, lean_s1979, (Eq e1 (op e2 e3)), [(- 1), (- 1)]
have lean_s2116 : (Or (Not (Eq e0 (op e1 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e0)) (Eq e1 (op e2 e2)))))))))) := by R1 lean_s2115, lean_s2001, (Eq e1 (op e2 e1)), [(- 1), 0]
have lean_s2117 : (Or (Not (Eq e0 (op e1 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e0)) (Eq e1 (op e2 e2))))))))) := by factor lean_s2116, (- 1)
let lean_s2118 := by R2 lean_s2117, lean_s1632, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s2119 := by R1 lean_s2118, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s2120 := by R1 lean_s2119, lean_s1509, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2121 := by R1 lean_s2120, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s2122 := by R1 lean_s2121, lean_s1666, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
have lean_s2123 : (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e3 (op e2 e4)))))))))))) := by R1 lean_s2122, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s2124 : (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Eq e0 (op e4 e4)))))))) := by factor lean_s2123, 9
have lean_s2125 : (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e1 (op e3 e4))))))))) := by permutateOr lean_s2124, [0, 1, 4, 5, 6, 3, 2], (- 1)
let lean_s2126 := by R2 lean_s2125, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s2127 := by R1 lean_s2126, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2128 := by R1 lean_s2127, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s2129 : (Or (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e0 e4)) (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e2 (op e4 e3)) (Eq e0 (op e0 e0)))))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e0 (op e0 e0)))))))) := by timed cnfAndNeg [(Eq e2 (op e2 e2)), (Eq e2 (op e0 e4)), (Not (Eq (op e0 e0) (op e0 e4))), (Eq e2 (op e4 e3)), (Eq e0 (op e0 e0))]
have lean_s2130 : (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e3)))))))) :=
  (scope (fun lean_a619 : (Eq e2 (op e2 e2)) =>
    (scope (fun lean_a620 : (Eq e2 (op e0 e4)) =>
      (scope (fun lean_a621 : (Not (Eq (op e0 e0) (op e0 e4))) =>
        (scope (fun lean_a622 : (Eq e2 (op e4 e3)) =>
          (scope (fun lean_a623 : (Eq e0 (op e0 e0)) =>
            have lean_s2130 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a623
            have lean_s2131 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s2130
            let lean_s2132 := by timed flipCongrArg lean_s2131 [Eq]
            have lean_s2133 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a619
            have lean_s2134 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a620
            have lean_s2135 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s2134
            have lean_s2136 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.trans lean_s2133 lean_s2135
            have lean_s2137 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.symm lean_s2136
            have lean_s2138 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a622
            have lean_s2139 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s2138
            have lean_s2140 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_s2139
            have lean_s2141 : (Eq (op e4 e3) (op e2 e2)) := by timed Eq.trans lean_s2140 lean_a619
            have lean_s2142 : (Eq (op e2 e2) (op e4 e3)) := by timed Eq.symm lean_s2141
            have lean_s2143 : (Eq (op e0 e4) (op e4 e3)) := by timed Eq.trans lean_s2137 lean_s2142
            have lean_s2144 : (Eq (op e4 e3) (op e0 e4)) := by timed Eq.symm lean_s2143
            have lean_s2145 : (Eq (Eq e0 (op e4 e3)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s2132 lean_s2144
            have lean_s2146 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a621
            have lean_s2147 : (Eq (Eq e0 (op e4 e3)) False) := by timed Eq.trans lean_s2145 lean_s2146
            have lean_s2148 : (Not (Eq e0 (op e4 e3))) := by timed falseElim lean_s2147
            show (Not (Eq e0 (op e4 e3))) from lean_s2148
  ))))))))))
have lean_s2131 : (Implies (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e0 e4)) (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e2 (op e4 e3)) (Eq e0 (op e0 e0)))))) (Not (Eq e0 (op e4 e3)))) := by liftOrNToImp lean_s2130, 5
have lean_s2132 : (Or (Not (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e0 e4)) (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e2 (op e4 e3)) (Eq e0 (op e0 e0))))))) (Not (Eq e0 (op e4 e3)))) := by timed impliesElim lean_s2131
have lean_s2133 : (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e3)))))))) := by R1 lean_s2129, lean_s2132, (And (Eq e2 (op e2 e2)) (And (Eq e2 (op e0 e4)) (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e2 (op e4 e3)) (Eq e0 (op e0 e0)))))), [(- 1), (- 1)]
have lean_s2134 : (Eq Or Or) := by timed rfl
let lean_s2135 := by timed congr lean_s2134 lean_s13
let lean_s2136 := by timed congr lean_s2134 lean_s839
let lean_s2137 := by timed congr lean_s2134 lean_s864
let lean_s2138 := by timed congr lean_s2134 lean_s836
let lean_s2139 := by timed congr lean_s2134 lean_s759
let lean_s2140 := by timed congr lean_s2139 lean_s872
let lean_s2141 := by timed congr lean_s2138 lean_s2140
let lean_s2142 := by timed congr lean_s2137 lean_s2141
let lean_s2143 := by timed congr lean_s2136 lean_s2142
have lean_s2144 : (Eq (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e3)))))))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e3))))))))) := by timed congr lean_s2135 lean_s2143
have lean_s2145 : (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e4 e3)))))))) := by timed eqResolve lean_s2133 lean_s2144
have lean_s2146 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e2 (op e4 e3)))))))) := by permutateOr lean_s2145, [2, 4, 0, 1, 5, 3], (- 1)
let lean_s2147 := by R1 lean_s2128, lean_s2146, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s2148 := by R1 lean_s2147, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s2149 := by R2 lean_s2148, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2150 := by R2 lean_s2149, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2151 := by R1 lean_s2150, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s2152 := by R1 lean_s2151, lean_s1449, (Eq e3 e2), [(- 1), 0]
let lean_s2153 := by R1 lean_s1632, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
have lean_s2154 : (Eq (Not (And (And (Eq e0 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e1 e4)))) (Not (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e1 e4)))))) := by timed flipCongrArg lean_r72 [Not]
have lean_s2155 : (Not (And (Eq e0 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e1 e4))))) := by timed eqResolve lean_a483 lean_s2154
have lean_s2156 : (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e3 (op e1 e4))))) := by timed flipNotAnd lean_s2155 [(Eq e0 (op e2 e4)), (Eq e2 (op e4 e3)), (Eq e3 (op e1 e4))]
have lean_s2157 : (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s2156, [2, 0, 1], (- 1)
let lean_s2158 := by R1 lean_s2153, lean_s2157, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
have lean_s2159 : (Or (And (Not (Eq e3 e0)) (Eq e0 (op e1 e4))) (Or (Not (Not (Eq e3 e0))) (Not (Eq e0 (op e1 e4))))) := by timed cnfAndNeg [(Not (Eq e3 e0)), (Eq e0 (op e1 e4))]
have lean_s2160 : (Or (Not (Not (Eq e3 e0))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) :=
  (scope (fun lean_a619 : (Not (Eq e3 e0)) =>
    (scope (fun lean_a620 : (Eq e0 (op e1 e4)) =>
      have lean_s2160 : (Eq e3 e3) := by timed rfl
      let lean_s2161 := by timed flipCongrArg lean_s2160 [Eq]
      have lean_s2162 : (Eq (op e1 e4) e0) := by timed Eq.symm lean_a620
      have lean_s2163 : (Eq (Eq e3 (op e1 e4)) (Eq e3 e0)) := by timed congr lean_s2161 lean_s2162
      have lean_s2164 : (Eq (Eq e3 e0) False) := by timed falseIntro lean_a619
      have lean_s2165 : (Eq (Eq e3 (op e1 e4)) False) := by timed Eq.trans lean_s2163 lean_s2164
      have lean_s2166 : (Not (Eq e3 (op e1 e4))) := by timed falseElim lean_s2165
      show (Not (Eq e3 (op e1 e4))) from lean_s2166
  ))))
have lean_s2161 : (Implies (And (Not (Eq e3 e0)) (Eq e0 (op e1 e4))) (Not (Eq e3 (op e1 e4)))) := by liftOrNToImp lean_s2160, 2
have lean_s2162 : (Or (Not (And (Not (Eq e3 e0)) (Eq e0 (op e1 e4)))) (Not (Eq e3 (op e1 e4)))) := by timed impliesElim lean_s2161
have lean_s2163 : (Or (Not (Not (Eq e3 e0))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) := by R1 lean_s2159, lean_s2162, (And (Not (Eq e3 e0)) (Eq e0 (op e1 e4))), [(- 1), (- 1)]
have lean_s2164 : (Eq Or Or) := by timed rfl
let lean_s2165 := by timed congr lean_s2164 lean_s1660
let lean_s2166 := by timed congr lean_s2164 lean_s1621
let lean_s2167 := by timed congr lean_s2166 lean_s1782
have lean_s2168 : (Eq (Or (Not (Not (Eq e3 e0))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) (Or (Eq e3 e0) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e3 (op e1 e4)))))) := by timed congr lean_s2165 lean_s2167
have lean_s2169 : (Or (Eq e3 e0) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e3 (op e1 e4))))) := by timed eqResolve lean_s2163 lean_s2168
let lean_s2170 := by R1 lean_s2158, lean_s2169, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
have lean_s2171 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e3 (op e1 e4))))))) := by R1 lean_s2170, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s2172 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e2 (op e4 e3)))))) := by factor lean_s2171, 4
have lean_s2173 : (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3))))))))))))) := by R1 lean_s2152, lean_s2172, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
have lean_s2174 : (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e2 (op e4 e3))))))))) := by factor lean_s2173, (- 1)
have lean_s2175 : (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e2 (op e4 e3))))))))) := by permutateOr lean_s2174, [0, 1, 2, 3, 5, 4, 6], (- 1)
let lean_s2176 := by R1 lean_s2034, lean_s2175, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
have lean_s2177 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3))))))))))))))))))) := by R1 lean_s2176, lean_s2172, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
have lean_s2178 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e1 (op e2 e0)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e3 e4)) (Not (Eq e1 (op e3 e4))))))))))) := by factor lean_s2177, 16
have lean_s2179 : (Or (And (Eq e1 (op e4 e0)) (Eq e1 (op e2 e0))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e1 (op e2 e0))))) := by timed cnfAndNeg [(Eq e1 (op e4 e0)), (Eq e1 (op e2 e0))]
have lean_s2180 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e1 (op e2 e0))) (Eq (op e2 e0) (op e4 e0)))) :=
  (scope (fun lean_a619 : (Eq e1 (op e4 e0)) =>
    (scope (fun lean_a620 : (Eq e1 (op e2 e0)) =>
      have lean_s2180 : (Eq (op e2 e0) e1) := by timed Eq.symm lean_a620
      have lean_s2181 : (Eq (op e4 e0) e1) := by timed Eq.symm lean_a619
      have lean_s2182 : (Eq e1 (op e4 e0)) := by timed Eq.symm lean_s2181
      have lean_s2183 : (Eq (op e2 e0) (op e4 e0)) := by timed Eq.trans lean_s2180 lean_s2182
      show (Eq (op e2 e0) (op e4 e0)) from lean_s2183
  ))))
have lean_s2181 : (Implies (And (Eq e1 (op e4 e0)) (Eq e1 (op e2 e0))) (Eq (op e2 e0) (op e4 e0))) := by liftOrNToImp lean_s2180, 2
have lean_s2182 : (Or (Not (And (Eq e1 (op e4 e0)) (Eq e1 (op e2 e0)))) (Eq (op e2 e0) (op e4 e0))) := by timed impliesElim lean_s2181
have lean_s2183 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e1 (op e2 e0))) (Eq (op e2 e0) (op e4 e0)))) := by R1 lean_s2179, lean_s2182, (And (Eq e1 (op e4 e0)) (Eq e1 (op e2 e0))), [(- 1), (- 1)]
have lean_s2184 : (Or (Eq (op e2 e0) (op e4 e0)) (Or (Not (Eq e1 (op e2 e0))) (Not (Eq e1 (op e4 e0))))) := by permutateOr lean_s2183, [2, 1, 0], (- 1)
let lean_s2185 := by R1 lean_s2178, lean_s2184, (Eq e1 (op e2 e0)), [(- 1), (- 1)]
have lean_s2186 : (Not (Eq (op e2 e0) (op e4 e0))) := by andElim lean_s29, 8
let lean_s2187 := by R1 lean_s2185, lean_s2186, (Eq (op e2 e0) (op e4 e0)), [(- 1), 0]
have lean_s2188 : (Or (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2))))) (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e2 (op e2 e2))))))) := by timed cnfAndNeg [(Not (Eq (op e4 e0) (op e4 e3))), (Eq e1 (op e4 e0)), (Eq e2 (op e4 e3)), (Eq e2 (op e2 e2))]
have lean_s2189 : (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2))))))) :=
  (scope (fun lean_a620 : (Not (Eq (op e4 e0) (op e4 e3))) =>
    (scope (fun lean_a621 : (Eq e1 (op e4 e0)) =>
      (scope (fun lean_a622 : (Eq e2 (op e4 e3)) =>
        (scope (fun lean_a623 : (Eq e2 (op e2 e2)) =>
          have lean_s2189 : (Eq (op e4 e0) e1) := by timed Eq.symm lean_a621
          have lean_s2190 : (Eq e1 (op e4 e0)) := by timed Eq.symm lean_s2189
          let lean_s2191 := by timed flipCongrArg lean_s2190 [Eq]
          have lean_s2192 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a623
          have lean_s2193 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a622
          have lean_s2194 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s2193
          have lean_s2195 : (Eq (op e2 e2) (op e4 e3)) := by timed Eq.trans lean_s2192 lean_s2194
          have lean_s2196 : (Eq (Eq e1 (op e2 e2)) (Eq (op e4 e0) (op e4 e3))) := by timed congr lean_s2191 lean_s2195
          have lean_s2197 : (Eq (Eq (op e4 e0) (op e4 e3)) False) := by timed falseIntro lean_a620
          have lean_s2198 : (Eq (Eq e1 (op e2 e2)) False) := by timed Eq.trans lean_s2196 lean_s2197
          have lean_s2199 : (Not (Eq e1 (op e2 e2))) := by timed falseElim lean_s2198
          show (Not (Eq e1 (op e2 e2))) from lean_s2199
  ))))))))
have lean_s2190 : (Implies (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2))))) (Not (Eq e1 (op e2 e2)))) := by liftOrNToImp lean_s2189, 4
have lean_s2191 : (Or (Not (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2)))))) (Not (Eq e1 (op e2 e2)))) := by timed impliesElim lean_s2190
have lean_s2192 : (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2))))))) := by R1 lean_s2188, lean_s2191, (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2))))), [(- 1), (- 1)]
have lean_s2193 : (Eq Or Or) := by timed rfl
have lean_s2194 : (Eq (Eq (op e4 e0) (op e4 e3)) (Eq (op e4 e0) (op e4 e3))) := by timed rfl
let lean_s2195 := by timed flipCongrArg lean_s2194 [Eq]
have lean_s2196 : (Eq (Eq (Eq (op e4 e0) (op e4 e3)) (Not (Not (Eq (op e4 e0) (op e4 e3))))) (Eq (Eq (op e4 e0) (op e4 e3)) (Eq (op e4 e0) (op e4 e3)))) := by timed congr lean_s2195 lean_r380
have lean_s2197 : (Eq (Eq (Eq (op e4 e0) (op e4 e3)) (Not (Not (Eq (op e4 e0) (op e4 e3))))) True) := by timed Eq.trans lean_s2196 lean_r379
have lean_s2198 : (Eq (Eq (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Eq (op e4 e0) (op e4 e3))) True) := by timed Eq.trans lean_r319 lean_s2197
have lean_s2199 : (Eq (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Eq (op e4 e0) (op e4 e3))) := by timed trueElim lean_s2198
let lean_s2200 := by timed congr lean_s2193 lean_s2199
have lean_s2201 : (Eq (Not (Eq e1 (op e4 e0))) (Not (Eq e1 (op e4 e0)))) := by timed rfl
let lean_s2202 := by timed congr lean_s2193 lean_s2201
let lean_s2203 := by timed congr lean_s2193 lean_s836
let lean_s2204 := by timed congr lean_s2193 lean_s13
have lean_s2205 : (Eq (Not (Eq e1 (op e2 e2))) (Not (Eq e1 (op e2 e2)))) := by timed rfl
let lean_s2206 := by timed congr lean_s2204 lean_s2205
let lean_s2207 := by timed congr lean_s2203 lean_s2206
let lean_s2208 := by timed congr lean_s2202 lean_s2207
have lean_s2209 : (Eq (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2))))))) (Or (Eq (op e4 e0) (op e4 e3)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2)))))))) := by timed congr lean_s2200 lean_s2208
have lean_s2210 : (Or (Eq (op e4 e0) (op e4 e3)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2))))))) := by timed eqResolve lean_s2192 lean_s2209
have lean_s2211 : (Or (Eq (op e4 e0) (op e4 e3)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e1 (op e2 e2))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e2 (op e4 e3))))))) := by permutateOr lean_s2210, [0, 3, 4, 1, 2], (- 1)
let lean_s2212 := by R1 lean_s2187, lean_s2211, (Eq e1 (op e2 e2)), [(- 1), (- 1)]
have lean_s2213 : (Not (Eq (op e4 e0) (op e4 e3))) := by andElim lean_s29, 92
let lean_s2214 := by R1 lean_s2212, lean_s2213, (Eq (op e4 e0) (op e4 e3)), [(- 1), 0]
have lean_s2215 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e2 (op e4 e3)))))))))))) := by R2 lean_s2214, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s2216 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Not (Eq e1 (op e3 e4))))))))) := by factor lean_s2215, 9
have lean_s2217 : (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e4 e1)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e3)) (Eq e1 (op e4 e4)))))) := by andElim lean_s647, 42
have lean_s2218 : (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e3)) (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e4 e1)) (Eq e1 (op e4 e4)))))) := by permutateOr lean_s2217, [2, 3, 0, 1, 4], (- 1)
let lean_s2219 := by R2 lean_s2216, lean_s2218, (Eq e1 (op e4 e0)), [(- 1), (- 1)]
have lean_s2220 : (Or (And (Not (Eq (op e1 e1) (op e4 e1))) (Eq e1 (op e1 e1))) (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Not (Eq e1 (op e1 e1))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e4 e1))), (Eq e1 (op e1 e1))]
have lean_s2221 : (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e1))))) :=
  (scope (fun lean_a621 : (Not (Eq (op e1 e1) (op e4 e1))) =>
    (scope (fun lean_a622 : (Eq e1 (op e1 e1)) =>
      have lean_s2221 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a622
      have lean_s2222 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s2221
      let lean_s2223 := by timed flipCongrArg lean_s2222 [Eq]
      have lean_s2224 : (Eq (op e4 e1) (op e4 e1)) := by timed rfl
      have lean_s2225 : (Eq (Eq e1 (op e4 e1)) (Eq (op e1 e1) (op e4 e1))) := by timed congr lean_s2223 lean_s2224
      have lean_s2226 : (Eq (Eq (op e1 e1) (op e4 e1)) False) := by timed falseIntro lean_a621
      have lean_s2227 : (Eq (Eq e1 (op e4 e1)) False) := by timed Eq.trans lean_s2225 lean_s2226
      have lean_s2228 : (Not (Eq e1 (op e4 e1))) := by timed falseElim lean_s2227
      show (Not (Eq e1 (op e4 e1))) from lean_s2228
  ))))
have lean_s2222 : (Implies (And (Not (Eq (op e1 e1) (op e4 e1))) (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e1)))) := by liftOrNToImp lean_s2221, 2
have lean_s2223 : (Or (Not (And (Not (Eq (op e1 e1) (op e4 e1))) (Eq e1 (op e1 e1)))) (Not (Eq e1 (op e4 e1)))) := by timed impliesElim lean_s2222
have lean_s2224 : (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e1))))) := by R1 lean_s2220, lean_s2223, (And (Not (Eq (op e1 e1) (op e4 e1))) (Eq e1 (op e1 e1))), [(- 1), (- 1)]
have lean_s2225 : (Eq Or Or) := by timed rfl
have lean_s2226 : (Eq (Eq (op e1 e1) (op e4 e1)) (Eq (op e1 e1) (op e4 e1))) := by timed rfl
let lean_s2227 := by timed flipCongrArg lean_s2226 [Eq]
have lean_s2228 : (Eq (Eq (Eq (op e1 e1) (op e4 e1)) (Not (Not (Eq (op e1 e1) (op e4 e1))))) (Eq (Eq (op e1 e1) (op e4 e1)) (Eq (op e1 e1) (op e4 e1)))) := by timed congr lean_s2227 lean_r250
have lean_s2229 : (Eq (Eq (Eq (op e1 e1) (op e4 e1)) (Not (Not (Eq (op e1 e1) (op e4 e1))))) True) := by timed Eq.trans lean_s2228 lean_r175
have lean_s2230 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Eq (op e1 e1) (op e4 e1))) True) := by timed Eq.trans lean_r360 lean_s2229
have lean_s2231 : (Eq (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Eq (op e1 e1) (op e4 e1))) := by timed trueElim lean_s2230
let lean_s2232 := by timed congr lean_s2225 lean_s2231
let lean_s2233 := by timed congr lean_s2225 lean_s730
have lean_s2234 : (Eq (Not (Eq e1 (op e4 e1))) (Not (Eq e1 (op e4 e1)))) := by timed rfl
let lean_s2235 := by timed congr lean_s2233 lean_s2234
have lean_s2236 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e1))))) (Or (Eq (op e1 e1) (op e4 e1)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e1)))))) := by timed congr lean_s2232 lean_s2235
have lean_s2237 : (Or (Eq (op e1 e1) (op e4 e1)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e1))))) := by timed eqResolve lean_s2224 lean_s2236
have lean_s2238 : (Not (Eq (op e1 e1) (op e4 e1))) := by andElim lean_s29, 16
let lean_s2239 := by R1 lean_s2237, lean_s2238, (Eq (op e1 e1) (op e4 e1)), [(- 1), 0]
have lean_s2240 : (Not (Eq e1 (op e4 e1))) := by R2 lean_s2239, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s2241 := by R1 lean_s2219, lean_s2240, (Eq e1 (op e4 e1)), [(- 1), 0]
have lean_s2242 : (Or (And (Eq e1 (op e4 e4)) (Eq e4 (op e4 e4))) (Or (Not (Eq e1 (op e4 e4))) (Not (Eq e4 (op e4 e4))))) := by timed cnfAndNeg [(Eq e1 (op e4 e4)), (Eq e4 (op e4 e4))]
have lean_s2243 : (Or (Not (Eq e1 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e1))) :=
  (scope (fun lean_a622 : (Eq e1 (op e4 e4)) =>
    (scope (fun lean_a623 : (Eq e4 (op e4 e4)) =>
      have lean_s2243 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a623
      have lean_s2244 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s2243
      have lean_s2245 : (Eq (op e4 e4) e1) := by timed Eq.symm lean_a622
      have lean_s2246 : (Eq e4 e1) := by timed Eq.trans lean_s2244 lean_s2245
      show (Eq e4 e1) from lean_s2246
  ))))
have lean_s2244 : (Implies (And (Eq e1 (op e4 e4)) (Eq e4 (op e4 e4))) (Eq e4 e1)) := by liftOrNToImp lean_s2243, 2
have lean_s2245 : (Or (Not (And (Eq e1 (op e4 e4)) (Eq e4 (op e4 e4)))) (Eq e4 e1)) := by timed impliesElim lean_s2244
have lean_s2246 : (Or (Not (Eq e1 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e1))) := by R1 lean_s2242, lean_s2245, (And (Eq e1 (op e4 e4)) (Eq e4 (op e4 e4))), [(- 1), (- 1)]
have lean_s2247 : (Or (Eq e4 e1) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e1 (op e4 e4))))) := by permutateOr lean_s2246, [2, 1, 0], (- 1)
have lean_s2248 : (Not (Eq e4 e1)) := by andElim lean_s709, 6
let lean_s2249 := by R1 lean_s2247, lean_s2248, (Eq e4 e1), [(- 1), 0]
have lean_s2250 : (Not (Eq e1 (op e4 e4))) := by R2 lean_s2249, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s2251 := by R1 lean_s2241, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
have lean_s2252 : (Or (And (Eq e1 (op e4 e3)) (Eq e2 (op e4 e3))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e2 (op e4 e3))))) := by timed cnfAndNeg [(Eq e1 (op e4 e3)), (Eq e2 (op e4 e3))]
have lean_s2253 : (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e4 e3))) (Eq e2 e1))) :=
  (scope (fun lean_a623 : (Eq e1 (op e4 e3)) =>
    (scope (fun lean_a624 : (Eq e2 (op e4 e3)) =>
      have lean_s2253 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a624
      have lean_s2254 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s2253
      have lean_s2255 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_a623
      have lean_s2256 : (Eq e2 e1) := by timed Eq.trans lean_s2254 lean_s2255
      show (Eq e2 e1) from lean_s2256
  ))))
have lean_s2254 : (Implies (And (Eq e1 (op e4 e3)) (Eq e2 (op e4 e3))) (Eq e2 e1)) := by liftOrNToImp lean_s2253, 2
have lean_s2255 : (Or (Not (And (Eq e1 (op e4 e3)) (Eq e2 (op e4 e3)))) (Eq e2 e1)) := by timed impliesElim lean_s2254
have lean_s2256 : (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e4 e3))) (Eq e2 e1))) := by R1 lean_s2252, lean_s2255, (And (Eq e1 (op e4 e3)) (Eq e2 (op e4 e3))), [(- 1), (- 1)]
have lean_s2257 : (Or (Eq e2 e1) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s2256, [2, 0, 1], (- 1)
let lean_s2258 := by R1 lean_s2251, lean_s2257, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
have lean_s2259 : (Not (Eq e2 e1)) := by andElim lean_s709, 4
let lean_s2260 := by R1 lean_s2258, lean_s2259, (Eq e2 e1), [(- 1), 0]
have lean_s2261 : (Or (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (Eq e1 (op e1 e1)))) (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e1 e1)))))) := by timed cnfAndNeg [(Not (Eq e0 (op e3 e4))), (Eq e1 (op e3 e4)), (Eq e1 (op e1 e1))]
have lean_s2262 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1)))))) :=
  (scope (fun lean_a624 : (Not (Eq e0 (op e3 e4))) =>
    (scope (fun lean_a625 : (Eq e1 (op e3 e4)) =>
      (scope (fun lean_a626 : (Eq e1 (op e1 e1)) =>
        have lean_s2262 : (Eq e0 e0) := by timed rfl
        let lean_s2263 := by timed flipCongrArg lean_s2262 [Eq]
        have lean_s2264 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a626
        have lean_s2265 : (Eq (op e3 e4) e1) := by timed Eq.symm lean_a625
        have lean_s2266 : (Eq e1 (op e3 e4)) := by timed Eq.symm lean_s2265
        have lean_s2267 : (Eq (op e1 e1) (op e3 e4)) := by timed Eq.trans lean_s2264 lean_s2266
        have lean_s2268 : (Eq (Eq e0 (op e1 e1)) (Eq e0 (op e3 e4))) := by timed congr lean_s2263 lean_s2267
        have lean_s2269 : (Eq (Eq e0 (op e3 e4)) False) := by timed falseIntro lean_a624
        have lean_s2270 : (Eq (Eq e0 (op e1 e1)) False) := by timed Eq.trans lean_s2268 lean_s2269
        have lean_s2271 : (Not (Eq e0 (op e1 e1))) := by timed falseElim lean_s2270
        show (Not (Eq e0 (op e1 e1))) from lean_s2271
  ))))))
have lean_s2263 : (Implies (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (Eq e1 (op e1 e1)))) (Not (Eq e0 (op e1 e1)))) := by liftOrNToImp lean_s2262, 3
have lean_s2264 : (Or (Not (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (Eq e1 (op e1 e1))))) (Not (Eq e0 (op e1 e1)))) := by timed impliesElim lean_s2263
have lean_s2265 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1)))))) := by R1 lean_s2261, lean_s2264, (And (Not (Eq e0 (op e3 e4))) (And (Eq e1 (op e3 e4)) (Eq e1 (op e1 e1)))), [(- 1), (- 1)]
have lean_s2266 : (Eq Or Or) := by timed rfl
let lean_s2267 := by timed congr lean_s2266 lean_s726
let lean_s2268 := by timed congr lean_s2266 lean_s728
let lean_s2269 := by timed congr lean_s2266 lean_s730
have lean_s2270 : (Eq (Not (Eq e0 (op e1 e1))) (Not (Eq e0 (op e1 e1)))) := by timed rfl
let lean_s2271 := by timed congr lean_s2269 lean_s2270
let lean_s2272 := by timed congr lean_s2268 lean_s2271
have lean_s2273 : (Eq (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1)))))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1))))))) := by timed congr lean_s2267 lean_s2272
have lean_s2274 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1)))))) := by timed eqResolve lean_s2265 lean_s2273
have lean_s2275 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e0 (op e1 e1))) (Not (Eq e1 (op e3 e4)))))) := by permutateOr lean_s2274, [0, 2, 3, 1], (- 1)
let lean_s2276 := by R1 lean_s2260, lean_s2275, (Eq e0 (op e1 e1)), [(- 1), (- 1)]
have lean_s2277 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Not (Eq e1 (op e3 e4))))))))))) := by R2 lean_s2276, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s2278 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Eq e1 (op e4 e2))))))) := by factor lean_s2277, 8
let lean_s2279 := by R2 lean_s2278, lean_s1373, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s2280 := by R1 lean_s2279, lean_s1383, (Eq e4 (op e3 e4)), [(- 1), 0]
have lean_s2281 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e3 e4)))))))) := by R1 lean_s2280, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s2282 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Eq e1 (op e4 e2)))))) := by factor lean_s2281, 6
let lean_s2283 := by R2 lean_s981, lean_s986, (Eq e4 (op e4 (op e4 e4))), [(- 1), 0]
have lean_s2284 : (Or (And (Eq e0 (op e4 e2)) (Eq e2 (op e4 e0))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e2 (op e4 e0))))) := by timed cnfAndNeg [(Eq e0 (op e4 e2)), (Eq e2 (op e4 e0))]
have lean_s2285 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e2 (op e4 e0))) (Eq e2 (op e4 (op e4 e2))))) :=
  (scope (fun lean_a624 : (Eq e0 (op e4 e2)) =>
    (scope (fun lean_a625 : (Eq e2 (op e4 e0)) =>
      have lean_s2285 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a625
      have lean_s2286 : (Eq e2 (op e4 e0)) := by timed Eq.symm lean_s2285
      have lean_s2287 : (Eq e4 e4) := by timed rfl
      let lean_s2288 := by timed flipCongrArg lean_s2287 [op]
      have lean_s2289 : (Eq (op e4 e2) e0) := by timed Eq.symm lean_a624
      have lean_s2290 : (Eq e0 (op e4 e2)) := by timed Eq.symm lean_s2289
      have lean_s2291 : (Eq (op e4 e0) (op e4 (op e4 e2))) := by timed congr lean_s2288 lean_s2290
      have lean_s2292 : (Eq e2 (op e4 (op e4 e2))) := by timed Eq.trans lean_s2286 lean_s2291
      show (Eq e2 (op e4 (op e4 e2))) from lean_s2292
  ))))
have lean_s2286 : (Implies (And (Eq e0 (op e4 e2)) (Eq e2 (op e4 e0))) (Eq e2 (op e4 (op e4 e2)))) := by liftOrNToImp lean_s2285, 2
have lean_s2287 : (Or (Not (And (Eq e0 (op e4 e2)) (Eq e2 (op e4 e0)))) (Eq e2 (op e4 (op e4 e2)))) := by timed impliesElim lean_s2286
have lean_s2288 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e2 (op e4 e0))) (Eq e2 (op e4 (op e4 e2))))) := by R1 lean_s2284, lean_s2287, (And (Eq e0 (op e4 e2)) (Eq e2 (op e4 e0))), [(- 1), (- 1)]
have lean_s2289 : (Or (Eq e2 (op e4 (op e4 e2))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e4 e2))))) := by permutateOr lean_s2288, [2, 1, 0], (- 1)
let lean_s2290 := by R2 lean_s2283, lean_s2289, (Eq e2 (op e4 (op e4 e2))), [(- 1), (- 1)]
have lean_s2291 : (Or (And (Eq e2 (op e4 e0)) (Eq e0 (op e4 e2))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e4 e2))))) := by timed cnfAndNeg [(Eq e2 (op e4 e0)), (Eq e0 (op e4 e2))]
have lean_s2292 : (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e0 (op e4 e2))) (Eq e0 (op e4 (op e4 e0))))) :=
  (scope (fun lean_a625 : (Eq e2 (op e4 e0)) =>
    (scope (fun lean_a626 : (Eq e0 (op e4 e2)) =>
      have lean_s2292 : (Eq (op e4 e2) e0) := by timed Eq.symm lean_a626
      have lean_s2293 : (Eq e0 (op e4 e2)) := by timed Eq.symm lean_s2292
      have lean_s2294 : (Eq e4 e4) := by timed rfl
      let lean_s2295 := by timed flipCongrArg lean_s2294 [op]
      have lean_s2296 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a625
      have lean_s2297 : (Eq e2 (op e4 e0)) := by timed Eq.symm lean_s2296
      have lean_s2298 : (Eq (op e4 e2) (op e4 (op e4 e0))) := by timed congr lean_s2295 lean_s2297
      have lean_s2299 : (Eq e0 (op e4 (op e4 e0))) := by timed Eq.trans lean_s2293 lean_s2298
      show (Eq e0 (op e4 (op e4 e0))) from lean_s2299
  ))))
have lean_s2293 : (Implies (And (Eq e2 (op e4 e0)) (Eq e0 (op e4 e2))) (Eq e0 (op e4 (op e4 e0)))) := by liftOrNToImp lean_s2292, 2
have lean_s2294 : (Or (Not (And (Eq e2 (op e4 e0)) (Eq e0 (op e4 e2)))) (Eq e0 (op e4 (op e4 e0)))) := by timed impliesElim lean_s2293
have lean_s2295 : (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e0 (op e4 e2))) (Eq e0 (op e4 (op e4 e0))))) := by R1 lean_s2291, lean_s2294, (And (Eq e2 (op e4 e0)) (Eq e0 (op e4 e2))), [(- 1), (- 1)]
have lean_s2296 : (Or (Eq e0 (op e4 (op e4 e0))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e4 e2))))) := by permutateOr lean_s2295, [2, 0, 1], (- 1)
have lean_s2297 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e4 e2)))))))) := by R2 lean_s2290, lean_s2296, (Eq e0 (op e4 (op e4 e0))), [(- 1), (- 1)]
have lean_s2298 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e4 e2)))))) := by factor lean_s2297, (- 1)
let lean_s2299 := by R2 lean_s2298, lean_s744, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
let lean_s2300 := by R1 lean_s2299, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s2301 : (Eq (Not (And (And (Eq e0 (op e4 e1)) (Eq e4 (op e1 e2))) (Eq e2 (op e3 e1)))) (Not (And (Eq e0 (op e4 e1)) (And (Eq e4 (op e1 e2)) (Eq e2 (op e3 e1)))))) := by timed flipCongrArg lean_r66 [Not]
have lean_s2302 : (Not (And (Eq e0 (op e4 e1)) (And (Eq e4 (op e1 e2)) (Eq e2 (op e3 e1))))) := by timed eqResolve lean_a520 lean_s2301
have lean_s2303 : (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e4 (op e1 e2))) (Not (Eq e2 (op e3 e1))))) := by timed flipNotAnd lean_s2302 [(Eq e0 (op e4 e1)), (Eq e4 (op e1 e2)), (Eq e2 (op e3 e1))]
have lean_s2304 : (Or (Not (Eq e4 (op e1 e2))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e0 (op e4 e1))))) := by permutateOr lean_s2303, [1, 2, 0], (- 1)
let lean_s2305 := by R1 lean_s2300, lean_s2304, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
have lean_s2306 : (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e1 e1)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e1 e3)) (Eq e4 (op e1 e4)))))) := by andElim lean_s647, 18
have lean_s2307 : (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e1 e2)) (Or (Eq e4 (op e1 e0)) (Or (Eq e4 (op e1 e1)) (Eq e4 (op e1 e4)))))) := by permutateOr lean_s2306, [3, 2, 0, 1, 4], (- 1)
let lean_s2308 := by R2 lean_s2305, lean_s2307, (Eq e4 (op e1 e2)), [(- 1), (- 1)]
have lean_s2309 : (Or (And (Not (Eq e4 e1)) (Eq e1 (op e1 e1))) (Or (Not (Not (Eq e4 e1))) (Not (Eq e1 (op e1 e1))))) := by timed cnfAndNeg [(Not (Eq e4 e1)), (Eq e1 (op e1 e1))]
have lean_s2310 : (Or (Not (Not (Eq e4 e1))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e4 (op e1 e1))))) :=
  (scope (fun lean_a625 : (Not (Eq e4 e1)) =>
    (scope (fun lean_a626 : (Eq e1 (op e1 e1)) =>
      have lean_s2310 : (Eq e4 e4) := by timed rfl
      let lean_s2311 := by timed flipCongrArg lean_s2310 [Eq]
      have lean_s2312 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a626
      have lean_s2313 : (Eq (Eq e4 (op e1 e1)) (Eq e4 e1)) := by timed congr lean_s2311 lean_s2312
      have lean_s2314 : (Eq (Eq e4 e1) False) := by timed falseIntro lean_a625
      have lean_s2315 : (Eq (Eq e4 (op e1 e1)) False) := by timed Eq.trans lean_s2313 lean_s2314
      have lean_s2316 : (Not (Eq e4 (op e1 e1))) := by timed falseElim lean_s2315
      show (Not (Eq e4 (op e1 e1))) from lean_s2316
  ))))
have lean_s2311 : (Implies (And (Not (Eq e4 e1)) (Eq e1 (op e1 e1))) (Not (Eq e4 (op e1 e1)))) := by liftOrNToImp lean_s2310, 2
have lean_s2312 : (Or (Not (And (Not (Eq e4 e1)) (Eq e1 (op e1 e1)))) (Not (Eq e4 (op e1 e1)))) := by timed impliesElim lean_s2311
have lean_s2313 : (Or (Not (Not (Eq e4 e1))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e4 (op e1 e1))))) := by R1 lean_s2309, lean_s2312, (And (Not (Eq e4 e1)) (Eq e1 (op e1 e1))), [(- 1), (- 1)]
have lean_s2314 : (Eq Or Or) := by timed rfl
have lean_s2315 : (Eq (Eq e4 e1) (Eq e4 e1)) := by timed rfl
let lean_s2316 := by timed flipCongrArg lean_s2315 [Eq]
have lean_s2317 : (Eq (Eq (Eq e4 e1) (Not (Not (Eq e4 e1)))) (Eq (Eq e4 e1) (Eq e4 e1))) := by timed congr lean_s2316 lean_r402
have lean_s2318 : (Eq (Eq (Eq e4 e1) (Not (Not (Eq e4 e1)))) True) := by timed Eq.trans lean_s2317 lean_r394
have lean_s2319 : (Eq (Eq (Not (Not (Eq e4 e1))) (Eq e4 e1)) True) := by timed Eq.trans lean_r67 lean_s2318
have lean_s2320 : (Eq (Not (Not (Eq e4 e1))) (Eq e4 e1)) := by timed trueElim lean_s2319
let lean_s2321 := by timed congr lean_s2314 lean_s2320
let lean_s2322 := by timed congr lean_s2314 lean_s730
have lean_s2323 : (Eq (Not (Eq e4 (op e1 e1))) (Not (Eq e4 (op e1 e1)))) := by timed rfl
let lean_s2324 := by timed congr lean_s2322 lean_s2323
have lean_s2325 : (Eq (Or (Not (Not (Eq e4 e1))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e4 (op e1 e1))))) (Or (Eq e4 e1) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e4 (op e1 e1)))))) := by timed congr lean_s2321 lean_s2324
have lean_s2326 : (Or (Eq e4 e1) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e4 (op e1 e1))))) := by timed eqResolve lean_s2313 lean_s2325
let lean_s2327 := by R1 lean_s2326, lean_s2248, (Eq e4 e1), [(- 1), 0]
have lean_s2328 : (Not (Eq e4 (op e1 e1))) := by R2 lean_s2327, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s2329 := by R1 lean_s2308, lean_s2328, (Eq e4 (op e1 e1)), [(- 1), 0]
have lean_s2330 : (Eq (Not (And (And (Eq e2 (op e0 e3)) (Eq e0 (op e3 e4))) (Eq e4 (op e1 e3)))) (Not (And (Eq e2 (op e0 e3)) (And (Eq e0 (op e3 e4)) (Eq e4 (op e1 e3)))))) := by timed flipCongrArg lean_r68 [Not]
have lean_s2331 : (Not (And (Eq e2 (op e0 e3)) (And (Eq e0 (op e3 e4)) (Eq e4 (op e1 e3))))) := by timed eqResolve lean_a479 lean_s2330
have lean_s2332 : (Or (Not (Eq e2 (op e0 e3))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e4 (op e1 e3))))) := by timed flipNotAnd lean_s2331 [(Eq e2 (op e0 e3)), (Eq e0 (op e3 e4)), (Eq e4 (op e1 e3))]
have lean_s2333 : (Or (Not (Eq e2 (op e0 e3))) (Or (Not (Eq e4 (op e1 e3))) (Not (Eq e0 (op e3 e4))))) := by permutateOr lean_s2332, [0, 2, 1], (- 1)
let lean_s2334 := by R1 lean_s2329, lean_s2333, (Eq e4 (op e1 e3)), [(- 1), (- 1)]
have lean_s2335 : (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e1 e3)) (Or (Eq e2 (op e2 e3)) (Or (Eq e2 (op e3 e3)) (Eq e2 (op e4 e3)))))) := by andElim lean_s647, 35
have lean_s2336 : (Or (Eq e2 (op e1 e3)) (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e2 e3)) (Eq e2 (op e3 e3)))))) := by permutateOr lean_s2335, [1, 0, 4, 2, 3], (- 1)
let lean_s2337 := by R2 lean_s2334, lean_s2336, (Eq e2 (op e0 e3)), [(- 1), (- 1)]
have lean_s2338 : (Or (And (Not (Eq (op e2 e2) (op e2 e3))) (Eq e2 (op e2 e2))) (Or (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Not (Eq e2 (op e2 e2))))) := by timed cnfAndNeg [(Not (Eq (op e2 e2) (op e2 e3))), (Eq e2 (op e2 e2))]
have lean_s2339 : (Or (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e3))))) :=
  (scope (fun lean_a626 : (Not (Eq (op e2 e2) (op e2 e3))) =>
    (scope (fun lean_a627 : (Eq e2 (op e2 e2)) =>
      have lean_s2339 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a627
      have lean_s2340 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s2339
      let lean_s2341 := by timed flipCongrArg lean_s2340 [Eq]
      have lean_s2342 : (Eq (op e2 e3) (op e2 e3)) := by timed rfl
      have lean_s2343 : (Eq (Eq e2 (op e2 e3)) (Eq (op e2 e2) (op e2 e3))) := by timed congr lean_s2341 lean_s2342
      have lean_s2344 : (Eq (Eq (op e2 e2) (op e2 e3)) False) := by timed falseIntro lean_a626
      have lean_s2345 : (Eq (Eq e2 (op e2 e3)) False) := by timed Eq.trans lean_s2343 lean_s2344
      have lean_s2346 : (Not (Eq e2 (op e2 e3))) := by timed falseElim lean_s2345
      show (Not (Eq e2 (op e2 e3))) from lean_s2346
  ))))
have lean_s2340 : (Implies (And (Not (Eq (op e2 e2) (op e2 e3))) (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e3)))) := by liftOrNToImp lean_s2339, 2
have lean_s2341 : (Or (Not (And (Not (Eq (op e2 e2) (op e2 e3))) (Eq e2 (op e2 e2)))) (Not (Eq e2 (op e2 e3)))) := by timed impliesElim lean_s2340
have lean_s2342 : (Or (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e3))))) := by R1 lean_s2338, lean_s2341, (And (Not (Eq (op e2 e2) (op e2 e3))) (Eq e2 (op e2 e2))), [(- 1), (- 1)]
have lean_s2343 : (Eq Or Or) := by timed rfl
have lean_s2344 : (Eq (Eq (op e2 e2) (op e2 e3)) (Eq (op e2 e2) (op e2 e3))) := by timed rfl
let lean_s2345 := by timed flipCongrArg lean_s2344 [Eq]
have lean_s2346 : (Eq (Eq (Eq (op e2 e2) (op e2 e3)) (Not (Not (Eq (op e2 e2) (op e2 e3))))) (Eq (Eq (op e2 e2) (op e2 e3)) (Eq (op e2 e2) (op e2 e3)))) := by timed congr lean_s2345 lean_r176
have lean_s2347 : (Eq (Eq (Eq (op e2 e2) (op e2 e3)) (Not (Not (Eq (op e2 e2) (op e2 e3))))) True) := by timed Eq.trans lean_s2346 lean_r422
have lean_s2348 : (Eq (Eq (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Eq (op e2 e2) (op e2 e3))) True) := by timed Eq.trans lean_r245 lean_s2347
have lean_s2349 : (Eq (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Eq (op e2 e2) (op e2 e3))) := by timed trueElim lean_s2348
let lean_s2350 := by timed congr lean_s2343 lean_s2349
let lean_s2351 := by timed congr lean_s2343 lean_s13
have lean_s2352 : (Eq (Not (Eq e2 (op e2 e3))) (Not (Eq e2 (op e2 e3)))) := by timed rfl
let lean_s2353 := by timed congr lean_s2351 lean_s2352
have lean_s2354 : (Eq (Or (Not (Not (Eq (op e2 e2) (op e2 e3)))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e3))))) (Or (Eq (op e2 e2) (op e2 e3)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e3)))))) := by timed congr lean_s2350 lean_s2353
have lean_s2355 : (Or (Eq (op e2 e2) (op e2 e3)) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e2 e3))))) := by timed eqResolve lean_s2342 lean_s2354
have lean_s2356 : (Not (Eq (op e2 e2) (op e2 e3))) := by andElim lean_s29, 77
let lean_s2357 := by R1 lean_s2355, lean_s2356, (Eq (op e2 e2) (op e2 e3)), [(- 1), 0]
have lean_s2358 : (Not (Eq e2 (op e2 e3))) := by R2 lean_s2357, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2359 := by R1 lean_s2337, lean_s2358, (Eq e2 (op e2 e3)), [(- 1), 0]
have lean_s2360 : (Eq (Not (And (And (Eq e0 (op e2 e1)) (Eq e2 (op e1 e3))) (Eq e3 (op e4 e1)))) (Not (And (Eq e0 (op e2 e1)) (And (Eq e2 (op e1 e3)) (Eq e3 (op e4 e1)))))) := by timed flipCongrArg lean_r70 [Not]
have lean_s2361 : (Not (And (Eq e0 (op e2 e1)) (And (Eq e2 (op e1 e3)) (Eq e3 (op e4 e1))))) := by timed eqResolve lean_a543 lean_s2360
have lean_s2362 : (Or (Not (Eq e0 (op e2 e1))) (Or (Not (Eq e2 (op e1 e3))) (Not (Eq e3 (op e4 e1))))) := by timed flipNotAnd lean_s2361 [(Eq e0 (op e2 e1)), (Eq e2 (op e1 e3)), (Eq e3 (op e4 e1))]
have lean_s2363 : (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e3 (op e4 e1))))) := by permutateOr lean_s2362, [1, 0, 2], (- 1)
let lean_s2364 := by R1 lean_s2359, lean_s2363, (Eq e2 (op e1 e3)), [(- 1), (- 1)]
have lean_s2365 : (Eq (Not (And (And (Eq e3 (op e4 e1)) (Eq e4 (op e1 e0))) (Eq e0 (op e2 e1)))) (Not (And (Eq e3 (op e4 e1)) (And (Eq e4 (op e1 e0)) (Eq e0 (op e2 e1)))))) := by timed flipCongrArg lean_r71 [Not]
have lean_s2366 : (Not (And (Eq e3 (op e4 e1)) (And (Eq e4 (op e1 e0)) (Eq e0 (op e2 e1))))) := by timed eqResolve lean_a498 lean_s2365
have lean_s2367 : (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e4 (op e1 e0))) (Not (Eq e0 (op e2 e1))))) := by timed flipNotAnd lean_s2366 [(Eq e3 (op e4 e1)), (Eq e4 (op e1 e0)), (Eq e0 (op e2 e1))]
have lean_s2368 : (Or (Not (Eq e4 (op e1 e0))) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e3 (op e4 e1))))) := by permutateOr lean_s2367, [1, 2, 0], (- 1)
have lean_s2369 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e3 e1))) (Or (Eq e4 (op e1 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e0 (op e2 e1))) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e3 (op e4 e1)))))))))))))))) := by R1 lean_s2364, lean_s2368, (Eq e4 (op e1 e0)), [(- 1), (- 1)]
have lean_s2370 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e3 e1))) (Or (Eq e4 (op e1 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e3 (op e4 e1)))))))))))))) := by factor lean_s2369, (- 1)
have lean_s2371 : (Or (Eq e0 (op e2 e0)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e2 e3)) (Eq e0 (op e2 e4)))))) := by andElim lean_s647, 20
have lean_s2372 : (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e2 e3)) (Or (Eq e0 (op e2 e1)) (Or (Eq e0 (op e2 e0)) (Eq e0 (op e2 e2)))))) := by permutateOr lean_s2371, [4, 3, 1, 0, 2], (- 1)
let lean_s2373 := by R2 lean_s2370, lean_s2372, (Eq e0 (op e2 e1)), [(- 1), (- 1)]
have lean_s2374 : (Or (And (Not (Eq (op e0 e0) (op e2 e0))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e2 e0))), (Eq e0 (op e0 e0))]
have lean_s2375 : (Or (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e2 e0))))) :=
  (scope (fun lean_a627 : (Not (Eq (op e0 e0) (op e2 e0))) =>
    (scope (fun lean_a628 : (Eq e0 (op e0 e0)) =>
      have lean_s2375 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a628
      have lean_s2376 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s2375
      let lean_s2377 := by timed flipCongrArg lean_s2376 [Eq]
      have lean_s2378 : (Eq (op e2 e0) (op e2 e0)) := by timed rfl
      have lean_s2379 : (Eq (Eq e0 (op e2 e0)) (Eq (op e0 e0) (op e2 e0))) := by timed congr lean_s2377 lean_s2378
      have lean_s2380 : (Eq (Eq (op e0 e0) (op e2 e0)) False) := by timed falseIntro lean_a627
      have lean_s2381 : (Eq (Eq e0 (op e2 e0)) False) := by timed Eq.trans lean_s2379 lean_s2380
      have lean_s2382 : (Not (Eq e0 (op e2 e0))) := by timed falseElim lean_s2381
      show (Not (Eq e0 (op e2 e0))) from lean_s2382
  ))))
have lean_s2376 : (Implies (And (Not (Eq (op e0 e0) (op e2 e0))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e2 e0)))) := by liftOrNToImp lean_s2375, 2
have lean_s2377 : (Or (Not (And (Not (Eq (op e0 e0) (op e2 e0))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e2 e0)))) := by timed impliesElim lean_s2376
have lean_s2378 : (Or (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e2 e0))))) := by R1 lean_s2374, lean_s2377, (And (Not (Eq (op e0 e0) (op e2 e0))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s2379 : (Eq Or Or) := by timed rfl
have lean_s2380 : (Eq (Eq (op e0 e0) (op e2 e0)) (Eq (op e0 e0) (op e2 e0))) := by timed rfl
let lean_s2381 := by timed flipCongrArg lean_s2380 [Eq]
have lean_s2382 : (Eq (Eq (Eq (op e0 e0) (op e2 e0)) (Not (Not (Eq (op e0 e0) (op e2 e0))))) (Eq (Eq (op e0 e0) (op e2 e0)) (Eq (op e0 e0) (op e2 e0)))) := by timed congr lean_s2381 lean_r74
have lean_s2383 : (Eq (Eq (Eq (op e0 e0) (op e2 e0)) (Not (Not (Eq (op e0 e0) (op e2 e0))))) True) := by timed Eq.trans lean_s2382 lean_r76
have lean_s2384 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Eq (op e0 e0) (op e2 e0))) True) := by timed Eq.trans lean_r73 lean_s2383
have lean_s2385 : (Eq (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Eq (op e0 e0) (op e2 e0))) := by timed trueElim lean_s2384
let lean_s2386 := by timed congr lean_s2379 lean_s2385
let lean_s2387 := by timed congr lean_s2379 lean_s759
have lean_s2388 : (Eq (Not (Eq e0 (op e2 e0))) (Not (Eq e0 (op e2 e0)))) := by timed rfl
let lean_s2389 := by timed congr lean_s2387 lean_s2388
have lean_s2390 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e2 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e2 e0))))) (Or (Eq (op e0 e0) (op e2 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e2 e0)))))) := by timed congr lean_s2386 lean_s2389
have lean_s2391 : (Or (Eq (op e0 e0) (op e2 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e2 e0))))) := by timed eqResolve lean_s2378 lean_s2390
have lean_s2392 : (Not (Eq (op e0 e0) (op e2 e0))) := by andElim lean_s29, 1
let lean_s2393 := by R1 lean_s2391, lean_s2392, (Eq (op e0 e0) (op e2 e0)), [(- 1), 0]
have lean_s2394 : (Not (Eq e0 (op e2 e0))) := by R2 lean_s2393, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2395 := by R1 lean_s2373, lean_s2394, (Eq e0 (op e2 e0)), [(- 1), 0]
have lean_s2396 : (Eq (Not (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e1))) (Eq e1 (op e4 e3)))) (Not (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e1)) (Eq e1 (op e4 e3)))))) := by timed flipCongrArg lean_r77 [Not]
have lean_s2397 : (Not (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e1)) (Eq e1 (op e4 e3))))) := by timed eqResolve lean_a556 lean_s2396
have lean_s2398 : (Or (Not (Eq e0 (op e2 e3))) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e1 (op e4 e3))))) := by timed flipNotAnd lean_s2397 [(Eq e0 (op e2 e3)), (Eq e2 (op e3 e1)), (Eq e1 (op e4 e3))]
have lean_s2399 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e3 e1))) (Or (Eq e4 (op e1 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e2 e2)) (Or (Not (Eq e2 (op e3 e1))) (Not (Eq e1 (op e4 e3))))))))))))))))) := by R1 lean_s2395, lean_s2398, (Eq e0 (op e2 e3)), [(- 1), (- 1)]
have lean_s2400 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e3 e1))) (Or (Eq e4 (op e1 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e0 (op e2 e4)) (Or (Eq e0 (op e2 e2)) (Not (Eq e1 (op e4 e3)))))))))))))))) := by factor lean_s2399, (- 1)
let lean_s2401 := by R2 lean_s2400, lean_s1748, (Eq e2 (op e3 e1)), [(- 1), (- 1)]
let lean_s2402 := by R1 lean_s2401, lean_s1770, (Eq e2 (op e3 e2)), [(- 1), 0]
have lean_s2403 : (Or (And (Eq e3 (op e4 e1)) (Eq e1 (op e4 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e1 (op e4 e3))))) := by timed cnfAndNeg [(Eq e3 (op e4 e1)), (Eq e1 (op e4 e3))]
have lean_s2404 : (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e1 (op e4 e3))) (Eq e1 (op e4 (op e4 e1))))) :=
  (scope (fun lean_a628 : (Eq e3 (op e4 e1)) =>
    (scope (fun lean_a629 : (Eq e1 (op e4 e3)) =>
      have lean_s2404 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_a629
      have lean_s2405 : (Eq e1 (op e4 e3)) := by timed Eq.symm lean_s2404
      have lean_s2406 : (Eq e4 e4) := by timed rfl
      let lean_s2407 := by timed flipCongrArg lean_s2406 [op]
      have lean_s2408 : (Eq (op e4 e1) e3) := by timed Eq.symm lean_a628
      have lean_s2409 : (Eq e3 (op e4 e1)) := by timed Eq.symm lean_s2408
      have lean_s2410 : (Eq (op e4 e3) (op e4 (op e4 e1))) := by timed congr lean_s2407 lean_s2409
      have lean_s2411 : (Eq e1 (op e4 (op e4 e1))) := by timed Eq.trans lean_s2405 lean_s2410
      show (Eq e1 (op e4 (op e4 e1))) from lean_s2411
  ))))
have lean_s2405 : (Implies (And (Eq e3 (op e4 e1)) (Eq e1 (op e4 e3))) (Eq e1 (op e4 (op e4 e1)))) := by liftOrNToImp lean_s2404, 2
have lean_s2406 : (Or (Not (And (Eq e3 (op e4 e1)) (Eq e1 (op e4 e3)))) (Eq e1 (op e4 (op e4 e1)))) := by timed impliesElim lean_s2405
have lean_s2407 : (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e1 (op e4 e3))) (Eq e1 (op e4 (op e4 e1))))) := by R1 lean_s2403, lean_s2406, (And (Eq e3 (op e4 e1)) (Eq e1 (op e4 e3))), [(- 1), (- 1)]
have lean_s2408 : (Or (Eq e1 (op e4 (op e4 e1))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e1 (op e4 e3))))) := by permutateOr lean_s2407, [2, 0, 1], (- 1)
let lean_s2409 := by R2 lean_s2402, lean_s2408, (Eq e1 (op e4 (op e4 e1))), [(- 1), (- 1)]
have lean_s2410 : (Or (And (Eq e1 (op e4 e3)) (Eq e3 (op e4 e1))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e4 e1))))) := by timed cnfAndNeg [(Eq e1 (op e4 e3)), (Eq e3 (op e4 e1))]
have lean_s2411 : (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e3 (op e4 e1))) (Eq e3 (op e4 (op e4 e3))))) :=
  (scope (fun lean_a628 : (Eq e1 (op e4 e3)) =>
    (scope (fun lean_a629 : (Eq e3 (op e4 e1)) =>
      have lean_s2411 : (Eq (op e4 e1) e3) := by timed Eq.symm lean_a629
      have lean_s2412 : (Eq e3 (op e4 e1)) := by timed Eq.symm lean_s2411
      have lean_s2413 : (Eq e4 e4) := by timed rfl
      let lean_s2414 := by timed flipCongrArg lean_s2413 [op]
      have lean_s2415 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_a628
      have lean_s2416 : (Eq e1 (op e4 e3)) := by timed Eq.symm lean_s2415
      have lean_s2417 : (Eq (op e4 e1) (op e4 (op e4 e3))) := by timed congr lean_s2414 lean_s2416
      have lean_s2418 : (Eq e3 (op e4 (op e4 e3))) := by timed Eq.trans lean_s2412 lean_s2417
      show (Eq e3 (op e4 (op e4 e3))) from lean_s2418
  ))))
have lean_s2412 : (Implies (And (Eq e1 (op e4 e3)) (Eq e3 (op e4 e1))) (Eq e3 (op e4 (op e4 e3)))) := by liftOrNToImp lean_s2411, 2
have lean_s2413 : (Or (Not (And (Eq e1 (op e4 e3)) (Eq e3 (op e4 e1)))) (Eq e3 (op e4 (op e4 e3)))) := by timed impliesElim lean_s2412
have lean_s2414 : (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e3 (op e4 e1))) (Eq e3 (op e4 (op e4 e3))))) := by R1 lean_s2410, lean_s2413, (And (Eq e1 (op e4 e3)) (Eq e3 (op e4 e1))), [(- 1), (- 1)]
have lean_s2415 : (Or (Eq e3 (op e4 (op e4 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e1 (op e4 e3))))) := by permutateOr lean_s2414, [2, 1, 0], (- 1)
let lean_s2416 := by R2 lean_s2409, lean_s2415, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s2417 : (Or (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (Eq e2 (op e2 e2))))) (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e2 (op e2 e2))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e4 e0))), (Eq e0 (op e0 e0)), (Eq e2 (op e4 e0)), (Eq e2 (op e2 e2))]
have lean_s2418 : (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) :=
  (scope (fun lean_a628 : (Not (Eq (op e0 e0) (op e4 e0))) =>
    (scope (fun lean_a629 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a630 : (Eq e2 (op e4 e0)) =>
        (scope (fun lean_a631 : (Eq e2 (op e2 e2)) =>
          have lean_s2418 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a629
          have lean_s2419 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s2418
          let lean_s2420 := by timed flipCongrArg lean_s2419 [Eq]
          have lean_s2421 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a631
          have lean_s2422 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a630
          have lean_s2423 : (Eq e2 (op e4 e0)) := by timed Eq.symm lean_s2422
          have lean_s2424 : (Eq (op e2 e2) (op e4 e0)) := by timed Eq.trans lean_s2421 lean_s2423
          have lean_s2425 : (Eq (Eq e0 (op e2 e2)) (Eq (op e0 e0) (op e4 e0))) := by timed congr lean_s2420 lean_s2424
          have lean_s2426 : (Eq (Eq (op e0 e0) (op e4 e0)) False) := by timed falseIntro lean_a628
          have lean_s2427 : (Eq (Eq e0 (op e2 e2)) False) := by timed Eq.trans lean_s2425 lean_s2426
          have lean_s2428 : (Not (Eq e0 (op e2 e2))) := by timed falseElim lean_s2427
          show (Not (Eq e0 (op e2 e2))) from lean_s2428
  ))))))))
have lean_s2419 : (Implies (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (Eq e2 (op e2 e2))))) (Not (Eq e0 (op e2 e2)))) := by liftOrNToImp lean_s2418, 4
have lean_s2420 : (Or (Not (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (Eq e2 (op e2 e2)))))) (Not (Eq e0 (op e2 e2)))) := by timed impliesElim lean_s2419
have lean_s2421 : (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) := by R1 lean_s2417, lean_s2420, (And (Not (Eq (op e0 e0) (op e4 e0))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e4 e0)) (Eq e2 (op e2 e2))))), [(- 1), (- 1)]
have lean_s2422 : (Eq Or Or) := by timed rfl
let lean_s2423 := by timed congr lean_s2422 lean_s757
let lean_s2424 := by timed congr lean_s2422 lean_s759
let lean_s2425 := by timed congr lean_s2422 lean_s1418
let lean_s2426 := by timed congr lean_s2422 lean_s13
have lean_s2427 : (Eq (Not (Eq e0 (op e2 e2))) (Not (Eq e0 (op e2 e2)))) := by timed rfl
let lean_s2428 := by timed congr lean_s2426 lean_s2427
let lean_s2429 := by timed congr lean_s2425 lean_s2428
let lean_s2430 := by timed congr lean_s2424 lean_s2429
have lean_s2431 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e4 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2)))))))) := by timed congr lean_s2423 lean_s2430
have lean_s2432 : (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) := by timed eqResolve lean_s2421 lean_s2431
have lean_s2433 : (Or (Eq (op e0 e0) (op e4 e0)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e0 (op e2 e2))) (Not (Eq e2 (op e4 e0))))))) := by permutateOr lean_s2432, [0, 1, 3, 4, 2], (- 1)
let lean_s2434 := by R1 lean_s2416, lean_s2433, (Eq e0 (op e2 e2)), [(- 1), (- 1)]
let lean_s2435 := by R1 lean_s2434, lean_s765, (Eq (op e0 e0) (op e4 e0)), [(- 1), 0]
let lean_s2436 := by R2 lean_s2435, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s2437 : (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e4 (op e1 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e3 e0)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e2 (op e4 e0)))))))))))))))))))) := by R2 lean_s2436, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
have lean_s2438 : (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e4 (op e1 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Eq e2 (op e3 e0))))))))))))) := by factor lean_s2437, 17
have lean_s2439 : (Or (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e2 e2) (op e2 e4))), (Eq e2 (op e2 e2)), (Eq e3 (op e2 e4)), (Eq e3 (op e3 e3))]
have lean_s2440 : (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) :=
  (scope (fun lean_a628 : (Not (Eq (op e2 e2) (op e2 e4))) =>
    (scope (fun lean_a629 : (Eq e2 (op e2 e2)) =>
      (scope (fun lean_a630 : (Eq e3 (op e2 e4)) =>
        (scope (fun lean_a631 : (Eq e3 (op e3 e3)) =>
          have lean_s2440 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a629
          have lean_s2441 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s2440
          let lean_s2442 := by timed flipCongrArg lean_s2441 [Eq]
          have lean_s2443 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a631
          have lean_s2444 : (Eq (op e2 e4) e3) := by timed Eq.symm lean_a630
          have lean_s2445 : (Eq e3 (op e2 e4)) := by timed Eq.symm lean_s2444
          have lean_s2446 : (Eq (op e3 e3) (op e2 e4)) := by timed Eq.trans lean_s2443 lean_s2445
          have lean_s2447 : (Eq (Eq e2 (op e3 e3)) (Eq (op e2 e2) (op e2 e4))) := by timed congr lean_s2442 lean_s2446
          have lean_s2448 : (Eq (Eq (op e2 e2) (op e2 e4)) False) := by timed falseIntro lean_a628
          have lean_s2449 : (Eq (Eq e2 (op e3 e3)) False) := by timed Eq.trans lean_s2447 lean_s2448
          have lean_s2450 : (Not (Eq e2 (op e3 e3))) := by timed falseElim lean_s2449
          show (Not (Eq e2 (op e3 e3))) from lean_s2450
  ))))))))
have lean_s2441 : (Implies (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e2 (op e3 e3)))) := by liftOrNToImp lean_s2440, 4
have lean_s2442 : (Or (Not (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3)))))) (Not (Eq e2 (op e3 e3)))) := by timed impliesElim lean_s2441
have lean_s2443 : (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) := by R1 lean_s2439, lean_s2442, (And (Not (Eq (op e2 e2) (op e2 e4))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s2444 : (Eq Or Or) := by timed rfl
let lean_s2445 := by timed congr lean_s2444 lean_s11
let lean_s2446 := by timed congr lean_s2444 lean_s13
let lean_s2447 := by timed congr lean_s2444 lean_s15
let lean_s2448 := by timed congr lean_s2444 lean_s17
let lean_s2449 := by timed congr lean_s2448 lean_s1887
let lean_s2450 := by timed congr lean_s2447 lean_s2449
let lean_s2451 := by timed congr lean_s2446 lean_s2450
have lean_s2452 : (Eq (Or (Not (Not (Eq (op e2 e2) (op e2 e4)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3)))))))) := by timed congr lean_s2445 lean_s2451
have lean_s2453 : (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) := by timed eqResolve lean_s2443 lean_s2452
have lean_s2454 : (Or (Eq (op e2 e2) (op e2 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e2 (op e3 e3))))))) := by permutateOr lean_s2453, [0, 1, 3, 2, 4], (- 1)
let lean_s2455 := by R1 lean_s2438, lean_s2454, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
let lean_s2456 := by R1 lean_s2455, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
let lean_s2457 := by R2 lean_s2456, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2458 := by R2 lean_s2457, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s2459 : (Or (And (Not (Eq e4 e2)) (Eq e2 (op e1 e4))) (Or (Not (Not (Eq e4 e2))) (Not (Eq e2 (op e1 e4))))) := by timed cnfAndNeg [(Not (Eq e4 e2)), (Eq e2 (op e1 e4))]
have lean_s2460 : (Or (Not (Not (Eq e4 e2))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e4 (op e1 e4))))) :=
  (scope (fun lean_a628 : (Not (Eq e4 e2)) =>
    (scope (fun lean_a629 : (Eq e2 (op e1 e4)) =>
      have lean_s2460 : (Eq e4 e4) := by timed rfl
      let lean_s2461 := by timed flipCongrArg lean_s2460 [Eq]
      have lean_s2462 : (Eq (op e1 e4) e2) := by timed Eq.symm lean_a629
      have lean_s2463 : (Eq (Eq e4 (op e1 e4)) (Eq e4 e2)) := by timed congr lean_s2461 lean_s2462
      have lean_s2464 : (Eq (Eq e4 e2) False) := by timed falseIntro lean_a628
      have lean_s2465 : (Eq (Eq e4 (op e1 e4)) False) := by timed Eq.trans lean_s2463 lean_s2464
      have lean_s2466 : (Not (Eq e4 (op e1 e4))) := by timed falseElim lean_s2465
      show (Not (Eq e4 (op e1 e4))) from lean_s2466
  ))))
have lean_s2461 : (Implies (And (Not (Eq e4 e2)) (Eq e2 (op e1 e4))) (Not (Eq e4 (op e1 e4)))) := by liftOrNToImp lean_s2460, 2
have lean_s2462 : (Or (Not (And (Not (Eq e4 e2)) (Eq e2 (op e1 e4)))) (Not (Eq e4 (op e1 e4)))) := by timed impliesElim lean_s2461
have lean_s2463 : (Or (Not (Not (Eq e4 e2))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e4 (op e1 e4))))) := by R1 lean_s2459, lean_s2462, (And (Not (Eq e4 e2)) (Eq e2 (op e1 e4))), [(- 1), (- 1)]
have lean_s2464 : (Eq Or Or) := by timed rfl
have lean_s2465 : (Eq (Eq e4 e2) (Eq e4 e2)) := by timed rfl
let lean_s2466 := by timed flipCongrArg lean_s2465 [Eq]
have lean_s2467 : (Eq (Eq (Eq e4 e2) (Not (Not (Eq e4 e2)))) (Eq (Eq e4 e2) (Eq e4 e2))) := by timed congr lean_s2466 lean_r82
have lean_s2468 : (Eq (Eq (Eq e4 e2) (Not (Not (Eq e4 e2)))) True) := by timed Eq.trans lean_s2467 lean_r84
have lean_s2469 : (Eq (Eq (Not (Not (Eq e4 e2))) (Eq e4 e2)) True) := by timed Eq.trans lean_r80 lean_s2468
have lean_s2470 : (Eq (Not (Not (Eq e4 e2))) (Eq e4 e2)) := by timed trueElim lean_s2469
let lean_s2471 := by timed congr lean_s2464 lean_s2470
let lean_s2472 := by timed congr lean_s2464 lean_s1623
have lean_s2473 : (Eq (Not (Eq e4 (op e1 e4))) (Not (Eq e4 (op e1 e4)))) := by timed rfl
let lean_s2474 := by timed congr lean_s2472 lean_s2473
have lean_s2475 : (Eq (Or (Not (Not (Eq e4 e2))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e4 (op e1 e4))))) (Or (Eq e4 e2) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e4 (op e1 e4)))))) := by timed congr lean_s2471 lean_s2474
have lean_s2476 : (Or (Eq e4 e2) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e4 (op e1 e4))))) := by timed eqResolve lean_s2463 lean_s2475
let lean_s2477 := by R1 lean_s2458, lean_s2476, (Eq e4 (op e1 e4)), [(- 1), (- 1)]
let lean_s2478 := by R1 lean_s2477, lean_s710, (Eq e4 e2), [(- 1), 0]
let lean_s2479 := by R2 lean_s2478, lean_s1537, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s2480 := by R1 lean_s2479, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2481 := by R1 lean_s2480, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s2482 := by R1 lean_s2481, lean_s1425, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
let lean_s2483 := by R1 lean_s2482, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
let lean_s2484 := by R2 lean_s2483, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2485 := by R2 lean_s2484, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2486 := by R1 lean_s2485, lean_s1840, (Eq e2 (op e3 e0)), [(- 1), (- 1)]
have lean_s2487 : (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e2 (op e4 e0)))))))))))))))) := by R1 lean_s2486, lean_s1842, (Eq (op e3 e0) (op e4 e0)), [(- 1), 0]
have lean_s2488 : (Or (Not (Eq e2 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e1 e4))) (Eq e3 (op e4 e2)))))))))))) := by factor lean_s2487, 13
let lean_s2489 := by R2 lean_s2488, lean_s649, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s2490 := by R1 lean_s2489, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s2491 := by R1 lean_s2490, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s2492 : (Eq (Not (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e2 e4)))) (Not (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e2 e4)))))) := by timed flipCongrArg lean_r224 [Not]
have lean_s2493 : (Not (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e2 e4))))) := by timed eqResolve lean_a509 lean_s2492
have lean_s2494 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e3 (op e2 e4))))) := by timed flipNotAnd lean_s2493 [(Eq e1 (op e0 e4)), (Eq e0 (op e4 e3)), (Eq e3 (op e2 e4))]
have lean_s2495 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e0 (op e4 e3))))) := by permutateOr lean_s2494, [0, 2, 1], (- 1)
let lean_s2496 := by R1 lean_s2491, lean_s2495, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
have lean_s2497 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e3 (op e2 e4)))))))))))))))) := by R1 lean_s2496, lean_s893, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
have lean_s2498 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e4 e2)) (Not (Eq e1 (op e0 e4)))))))))))) := by factor lean_s2497, 13
let lean_s2499 := by R2 lean_s2498, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s2500 := by R1 lean_s2499, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s2501 := by R1 lean_s2500, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s2502 := by R1 lean_s2501, lean_s1509, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2503 := by R1 lean_s2502, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s2504 := by R1 lean_s2503, lean_s1666, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
have lean_s2505 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e4 e2)) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e3 (op e2 e4))))))))))))) := by R1 lean_s2504, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s2506 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e4 e2)) (Eq e1 (op e3 e4)))))))))) := by factor lean_s2505, 10
let lean_s2507 := by R2 lean_s2506, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s2508 := by R1 lean_s2507, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2509 := by R1 lean_s2508, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s2510 := by R1 lean_s2509, lean_s2257, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
let lean_s2511 := by R1 lean_s2510, lean_s2259, (Eq e2 e1), [(- 1), 0]
have lean_s2512 : (Eq (Not (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e0 e4)))) (Not (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e0 e4)))))) := by timed flipCongrArg lean_r86 [Not]
have lean_s2513 : (Not (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e0 e4))))) := by timed eqResolve lean_a461 lean_s2512
have lean_s2514 : (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e0 e4))))) := by timed flipNotAnd lean_s2513 [(Eq e2 (op e1 e4)), (Eq e1 (op e4 e3)), (Eq e3 (op e0 e4))]
have lean_s2515 : (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e1 (op e4 e3))))) := by permutateOr lean_s2514, [2, 0, 1], (- 1)
have lean_s2516 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e4 e2)) (Or (Eq e1 (op e3 e4)) (Or (Eq e3 (op e1 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e1 (op e4 e3))))))))))))) := by R1 lean_s2511, lean_s2515, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s2517 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e4 e2)) (Or (Eq e1 (op e3 e4)) (Eq e3 (op e1 e4))))))))) := by factor lean_s2516, 10
let lean_s2518 := by R2 lean_s2517, lean_s2218, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
let lean_s2519 := by R1 lean_s2518, lean_s2240, (Eq e1 (op e4 e1)), [(- 1), 0]
let lean_s2520 := by R1 lean_s2519, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s2521 := by R1 lean_s2520, lean_s1785, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s2522 := by R1 lean_s2521, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s2523 : (Eq (Not (And (And (Eq e2 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e3 e4)))) (Not (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e3 e4)))))) := by timed flipCongrArg lean_r357 [Not]
have lean_s2524 : (Not (And (Eq e2 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e3 e4))))) := by timed eqResolve lean_a536 lean_s2523
have lean_s2525 : (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e0 (op e3 e4))))) := by timed flipNotAnd lean_s2524 [(Eq e2 (op e1 e4)), (Eq e1 (op e4 e0)), (Eq e0 (op e3 e4))]
have lean_s2526 : (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e4 e0))))) := by permutateOr lean_s2525, [0, 2, 1], (- 1)
let lean_s2527 := by R1 lean_s2522, lean_s2526, (Eq e1 (op e4 e0)), [(- 1), (- 1)]
have lean_s2528 : (Eq (Not (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e1 e4)))) (Not (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e1 e4)))))) := by timed flipCongrArg lean_r87 [Not]
have lean_s2529 : (Not (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e1 e4))))) := by timed eqResolve lean_a484 lean_s2528
have lean_s2530 : (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e1 e4))))) := by timed flipNotAnd lean_s2529 [(Eq e0 (op e3 e4)), (Eq e3 (op e4 e2)), (Eq e2 (op e1 e4))]
have lean_s2531 : (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e3 (op e4 e2))))) := by permutateOr lean_s2530, [2, 0, 1], (- 1)
have lean_s2532 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e2 (op e1 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e0 (op e3 e4))))))))))))) := by R1 lean_s2527, lean_s2531, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
have lean_s2533 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e1 (op e3 e4)) (Eq e1 (op e4 e2))))))) := by factor lean_s2532, 10
let lean_s2534 := by R2 lean_s2533, lean_s1048, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
let lean_s2535 := by R1 lean_s2534, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
let lean_s2536 := by R1 lean_s2535, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s2537 : (Or (And (Eq e1 (op e0 e4)) (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e2 (op e0 e4))))) := by timed cnfAndNeg [(Eq e1 (op e0 e4)), (Eq e2 (op e0 e4))]
have lean_s2538 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Eq e2 e1))) :=
  (scope (fun lean_a629 : (Eq e1 (op e0 e4)) =>
    (scope (fun lean_a630 : (Eq e2 (op e0 e4)) =>
      have lean_s2538 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a630
      have lean_s2539 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s2538
      have lean_s2540 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a629
      have lean_s2541 : (Eq e2 e1) := by timed Eq.trans lean_s2539 lean_s2540
      show (Eq e2 e1) from lean_s2541
  ))))
have lean_s2539 : (Implies (And (Eq e1 (op e0 e4)) (Eq e2 (op e0 e4))) (Eq e2 e1)) := by liftOrNToImp lean_s2538, 2
have lean_s2540 : (Or (Not (And (Eq e1 (op e0 e4)) (Eq e2 (op e0 e4)))) (Eq e2 e1)) := by timed impliesElim lean_s2539
have lean_s2541 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Eq e2 e1))) := by R1 lean_s2537, lean_s2540, (And (Eq e1 (op e0 e4)) (Eq e2 (op e0 e4))), [(- 1), (- 1)]
have lean_s2542 : (Or (Eq e2 e1) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e2 (op e0 e4))))) := by permutateOr lean_s2541, [2, 0, 1], (- 1)
let lean_s2543 := by R1 lean_s2542, lean_s2259, (Eq e2 e1), [(- 1), 0]
let lean_s2544 := by R2 lean_s2543, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s2545 := by R1 lean_s2544, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s2546 := by R1 lean_s2545, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
have lean_s2547 : (Eq (Not (And (And (Eq e0 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e2 e4)))) (Not (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e2 e4)))))) := by timed flipCongrArg lean_r382 [Not]
have lean_s2548 : (Not (And (Eq e0 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e2 e4))))) := by timed eqResolve lean_a508 lean_s2547
have lean_s2549 : (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e1 (op e2 e4))))) := by timed flipNotAnd lean_s2548 [(Eq e0 (op e3 e4)), (Eq e3 (op e4 e1)), (Eq e1 (op e2 e4))]
have lean_s2550 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e3 (op e4 e1))))) := by permutateOr lean_s2549, [2, 0, 1], (- 1)
let lean_s2551 := by R1 lean_s2546, lean_s2550, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2552 := by R2 lean_s2551, lean_s1537, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s2553 := by R1 lean_s2552, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2554 := by R1 lean_s2553, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s2555 := by R1 lean_s2336, lean_s2358, (Eq e2 (op e2 e3)), [(- 1), 0]
have lean_s2556 : (Or (And (Not (Eq (op e1 e1) (op e1 e3))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e1 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e0 e4)))))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e1 e3))), (Eq e1 (op e1 e1)), (Eq e2 (op e1 e3)), (Eq e2 (op e2 e2)), (Eq e2 (op e0 e4))]
have lean_s2557 : (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) :=
  (scope (fun lean_a630 : (Not (Eq (op e1 e1) (op e1 e3))) =>
    (scope (fun lean_a631 : (Eq e1 (op e1 e1)) =>
      (scope (fun lean_a632 : (Eq e2 (op e1 e3)) =>
        (scope (fun lean_a633 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a634 : (Eq e2 (op e0 e4)) =>
            have lean_s2557 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a631
            have lean_s2558 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s2557
            let lean_s2559 := by timed flipCongrArg lean_s2558 [Eq]
            have lean_s2560 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a633
            have lean_s2561 : (Eq (op e1 e3) e2) := by timed Eq.symm lean_a632
            have lean_s2562 : (Eq e2 (op e1 e3)) := by timed Eq.symm lean_s2561
            have lean_s2563 : (Eq (op e2 e2) (op e1 e3)) := by timed Eq.trans lean_s2560 lean_s2562
            have lean_s2564 : (Eq (op e1 e3) (op e2 e2)) := by timed Eq.symm lean_s2563
            have lean_s2565 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a634
            have lean_s2566 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s2565
            have lean_s2567 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_s2566
            have lean_s2568 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.trans lean_s2567 lean_a633
            have lean_s2569 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.symm lean_s2568
            have lean_s2570 : (Eq (op e1 e3) (op e0 e4)) := by timed Eq.trans lean_s2564 lean_s2569
            have lean_s2571 : (Eq (op e0 e4) (op e1 e3)) := by timed Eq.symm lean_s2570
            have lean_s2572 : (Eq (Eq e1 (op e0 e4)) (Eq (op e1 e1) (op e1 e3))) := by timed congr lean_s2559 lean_s2571
            have lean_s2573 : (Eq (Eq (op e1 e1) (op e1 e3)) False) := by timed falseIntro lean_a630
            have lean_s2574 : (Eq (Eq e1 (op e0 e4)) False) := by timed Eq.trans lean_s2572 lean_s2573
            have lean_s2575 : (Not (Eq e1 (op e0 e4))) := by timed falseElim lean_s2574
            show (Not (Eq e1 (op e0 e4))) from lean_s2575
  ))))))))))
have lean_s2558 : (Implies (And (Not (Eq (op e1 e1) (op e1 e3))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e1 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Not (Eq e1 (op e0 e4)))) := by liftOrNToImp lean_s2557, 5
have lean_s2559 : (Or (Not (And (Not (Eq (op e1 e1) (op e1 e3))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e1 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4))))))) (Not (Eq e1 (op e0 e4)))) := by timed impliesElim lean_s2558
have lean_s2560 : (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by R1 lean_s2556, lean_s2559, (And (Not (Eq (op e1 e1) (op e1 e3))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e1 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))), [(- 1), (- 1)]
have lean_s2561 : (Eq Or Or) := by timed rfl
have lean_s2562 : (Eq (Eq (op e1 e1) (op e1 e3)) (Eq (op e1 e1) (op e1 e3))) := by timed rfl
let lean_s2563 := by timed flipCongrArg lean_s2562 [Eq]
have lean_s2564 : (Eq (Eq (Eq (op e1 e1) (op e1 e3)) (Not (Not (Eq (op e1 e1) (op e1 e3))))) (Eq (Eq (op e1 e1) (op e1 e3)) (Eq (op e1 e1) (op e1 e3)))) := by timed congr lean_s2563 lean_r111
have lean_s2565 : (Eq (Eq (Eq (op e1 e1) (op e1 e3)) (Not (Not (Eq (op e1 e1) (op e1 e3))))) True) := by timed Eq.trans lean_s2564 lean_r112
have lean_s2566 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Eq (op e1 e1) (op e1 e3))) True) := by timed Eq.trans lean_r109 lean_s2565
have lean_s2567 : (Eq (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Eq (op e1 e1) (op e1 e3))) := by timed trueElim lean_s2566
let lean_s2568 := by timed congr lean_s2561 lean_s2567
let lean_s2569 := by timed congr lean_s2561 lean_s730
have lean_s2570 : (Eq (Not (Eq e2 (op e1 e3))) (Not (Eq e2 (op e1 e3)))) := by timed rfl
let lean_s2571 := by timed congr lean_s2561 lean_s2570
let lean_s2572 := by timed congr lean_s2561 lean_s13
let lean_s2573 := by timed congr lean_s2561 lean_s839
let lean_s2574 := by timed congr lean_s2573 lean_s841
let lean_s2575 := by timed congr lean_s2572 lean_s2574
let lean_s2576 := by timed congr lean_s2571 lean_s2575
let lean_s2577 := by timed congr lean_s2569 lean_s2576
have lean_s2578 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) (Or (Eq (op e1 e1) (op e1 e3)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4))))))))) := by timed congr lean_s2568 lean_s2577
have lean_s2579 : (Or (Eq (op e1 e1) (op e1 e3)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by timed eqResolve lean_s2560 lean_s2578
have lean_s2580 : (Or (Eq (op e1 e1) (op e1 e3)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e2 (op e1 e3)))))))) := by permutateOr lean_s2579, [0, 1, 3, 5, 4, 2], (- 1)
let lean_s2581 := by R1 lean_s2555, lean_s2580, (Eq e2 (op e1 e3)), [(- 1), (- 1)]
have lean_s2582 : (Not (Eq (op e1 e1) (op e1 e3))) := by andElim lean_s29, 65
let lean_s2583 := by R1 lean_s2581, lean_s2582, (Eq (op e1 e1) (op e1 e3)), [(- 1), 0]
let lean_s2584 := by R2 lean_s2583, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2585 := by R2 lean_s2584, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s2586 : (Or (And (Not (Eq (op e0 e4) (op e1 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e4) (op e1 e4))), (Eq e2 (op e0 e4)), (Eq e3 (op e1 e4)), (Eq e3 (op e3 e3))]
have lean_s2587 : (Or (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) :=
  (scope (fun lean_a632 : (Not (Eq (op e0 e4) (op e1 e4))) =>
    (scope (fun lean_a633 : (Eq e2 (op e0 e4)) =>
      (scope (fun lean_a634 : (Eq e3 (op e1 e4)) =>
        (scope (fun lean_a635 : (Eq e3 (op e3 e3)) =>
          have lean_s2587 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a633
          have lean_s2588 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s2587
          let lean_s2589 := by timed flipCongrArg lean_s2588 [Eq]
          have lean_s2590 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a635
          have lean_s2591 : (Eq (op e1 e4) e3) := by timed Eq.symm lean_a634
          have lean_s2592 : (Eq e3 (op e1 e4)) := by timed Eq.symm lean_s2591
          have lean_s2593 : (Eq (op e3 e3) (op e1 e4)) := by timed Eq.trans lean_s2590 lean_s2592
          have lean_s2594 : (Eq (Eq e2 (op e3 e3)) (Eq (op e0 e4) (op e1 e4))) := by timed congr lean_s2589 lean_s2593
          have lean_s2595 : (Eq (Eq (op e0 e4) (op e1 e4)) False) := by timed falseIntro lean_a632
          have lean_s2596 : (Eq (Eq e2 (op e3 e3)) False) := by timed Eq.trans lean_s2594 lean_s2595
          have lean_s2597 : (Not (Eq e2 (op e3 e3))) := by timed falseElim lean_s2596
          show (Not (Eq e2 (op e3 e3))) from lean_s2597
  ))))))))
have lean_s2588 : (Implies (And (Not (Eq (op e0 e4) (op e1 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e2 (op e3 e3)))) := by liftOrNToImp lean_s2587, 4
have lean_s2589 : (Or (Not (And (Not (Eq (op e0 e4) (op e1 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3)))))) (Not (Eq e2 (op e3 e3)))) := by timed impliesElim lean_s2588
have lean_s2590 : (Or (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) := by R1 lean_s2586, lean_s2589, (And (Not (Eq (op e0 e4) (op e1 e4))) (And (Eq e2 (op e0 e4)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s2591 : (Eq Or Or) := by timed rfl
have lean_s2592 : (Eq (Eq (op e0 e4) (op e1 e4)) (Eq (op e0 e4) (op e1 e4))) := by timed rfl
let lean_s2593 := by timed flipCongrArg lean_s2592 [Eq]
have lean_s2594 : (Eq (Eq (Eq (op e0 e4) (op e1 e4)) (Not (Not (Eq (op e0 e4) (op e1 e4))))) (Eq (Eq (op e0 e4) (op e1 e4)) (Eq (op e0 e4) (op e1 e4)))) := by timed congr lean_s2593 lean_r327
have lean_s2595 : (Eq (Eq (Eq (op e0 e4) (op e1 e4)) (Not (Not (Eq (op e0 e4) (op e1 e4))))) True) := by timed Eq.trans lean_s2594 lean_r337
have lean_s2596 : (Eq (Eq (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Eq (op e0 e4) (op e1 e4))) True) := by timed Eq.trans lean_r93 lean_s2595
have lean_s2597 : (Eq (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Eq (op e0 e4) (op e1 e4))) := by timed trueElim lean_s2596
let lean_s2598 := by timed congr lean_s2591 lean_s2597
let lean_s2599 := by timed congr lean_s2591 lean_s839
let lean_s2600 := by timed congr lean_s2591 lean_s1782
let lean_s2601 := by timed congr lean_s2591 lean_s17
let lean_s2602 := by timed congr lean_s2601 lean_s1887
let lean_s2603 := by timed congr lean_s2600 lean_s2602
let lean_s2604 := by timed congr lean_s2599 lean_s2603
have lean_s2605 : (Eq (Or (Not (Not (Eq (op e0 e4) (op e1 e4)))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) (Or (Eq (op e0 e4) (op e1 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3)))))))) := by timed congr lean_s2598 lean_s2604
have lean_s2606 : (Or (Eq (op e0 e4) (op e1 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) := by timed eqResolve lean_s2590 lean_s2605
have lean_s2607 : (Or (Eq (op e0 e4) (op e1 e4)) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e2 (op e3 e3))))))) := by permutateOr lean_s2606, [0, 3, 1, 2, 4], (- 1)
let lean_s2608 := by R1 lean_s2585, lean_s2607, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
have lean_s2609 : (Not (Eq (op e0 e4) (op e1 e4))) := by andElim lean_s29, 40
let lean_s2610 := by R1 lean_s2608, lean_s2609, (Eq (op e0 e4) (op e1 e4)), [(- 1), 0]
let lean_s2611 := by R2 lean_s2610, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2612 := by R2 lean_s2611, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s2613 := by R1 lean_s2612, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s2614 := by R1 lean_s2613, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s2615 := by R2 lean_s2614, lean_s1428, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s2616 := by R1 lean_s2615, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2617 := by R1 lean_s2616, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s2618 : (Eq (Not (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e0))) (Eq e0 (op e3 e4)))) (Not (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e3 e4)))))) := by timed flipCongrArg lean_r406 [Not]
have lean_s2619 : (Not (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e0)) (Eq e0 (op e3 e4))))) := by timed eqResolve lean_a534 lean_s2618
have lean_s2620 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e3 e4))))) := by timed flipNotAnd lean_s2619 [(Eq e1 (op e2 e4)), (Eq e2 (op e4 e0)), (Eq e0 (op e3 e4))]
have lean_s2621 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e4 e0))))) := by permutateOr lean_s2620, [0, 2, 1], (- 1)
let lean_s2622 := by R1 lean_s2617, lean_s2621, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2623 := by R1 lean_s2622, lean_s1425, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s2624 := by R1 lean_s2623, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
let lean_s2625 := by R2 lean_s2624, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
have lean_s2626 : (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0)))))))))))) := by R2 lean_s2625, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s2627 : (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0)))))))))) := by factor lean_s2626, (- 1)
let lean_s2628 := by R2 lean_s2627, lean_s649, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s2629 := by R1 lean_s2628, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s2630 := by R1 lean_s2629, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s2631 : (Or (And (Eq e0 (op e4 e2)) (Eq e0 (op e1 e2))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e0 (op e1 e2))))) := by timed cnfAndNeg [(Eq e0 (op e4 e2)), (Eq e0 (op e1 e2))]
have lean_s2632 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e0 (op e1 e2))) (Eq (op e1 e2) (op e4 e2)))) :=
  (scope (fun lean_a634 : (Eq e0 (op e4 e2)) =>
    (scope (fun lean_a635 : (Eq e0 (op e1 e2)) =>
      have lean_s2632 : (Eq (op e1 e2) e0) := by timed Eq.symm lean_a635
      have lean_s2633 : (Eq (op e4 e2) e0) := by timed Eq.symm lean_a634
      have lean_s2634 : (Eq e0 (op e4 e2)) := by timed Eq.symm lean_s2633
      have lean_s2635 : (Eq (op e1 e2) (op e4 e2)) := by timed Eq.trans lean_s2632 lean_s2634
      show (Eq (op e1 e2) (op e4 e2)) from lean_s2635
  ))))
have lean_s2633 : (Implies (And (Eq e0 (op e4 e2)) (Eq e0 (op e1 e2))) (Eq (op e1 e2) (op e4 e2))) := by liftOrNToImp lean_s2632, 2
have lean_s2634 : (Or (Not (And (Eq e0 (op e4 e2)) (Eq e0 (op e1 e2)))) (Eq (op e1 e2) (op e4 e2))) := by timed impliesElim lean_s2633
have lean_s2635 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e0 (op e1 e2))) (Eq (op e1 e2) (op e4 e2)))) := by R1 lean_s2631, lean_s2634, (And (Eq e0 (op e4 e2)) (Eq e0 (op e1 e2))), [(- 1), (- 1)]
have lean_s2636 : (Or (Eq (op e1 e2) (op e4 e2)) (Or (Not (Eq e0 (op e1 e2))) (Not (Eq e0 (op e4 e2))))) := by permutateOr lean_s2635, [2, 1, 0], (- 1)
have lean_s2637 : (Not (Eq (op e1 e2) (op e4 e2))) := by andElim lean_s29, 26
let lean_s2638 := by R1 lean_s2636, lean_s2637, (Eq (op e1 e2) (op e4 e2)), [(- 1), 0]
have lean_s2639 : (Or (Eq e0 (op e1 e0)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e1 e3)) (Eq e0 (op e1 e4)))))) := by andElim lean_s647, 10
have lean_s2640 : (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e1 e3)) (Or (Eq e0 (op e1 e4)) (Or (Eq e0 (op e1 e0)) (Eq e0 (op e1 e1)))))) := by permutateOr lean_s2639, [2, 3, 4, 0, 1], (- 1)
let lean_s2641 := by R2 lean_s2638, lean_s2640, (Eq e0 (op e1 e2)), [(- 1), (- 1)]
have lean_s2642 : (Or (And (Not (Eq (op e0 e0) (op e1 e0))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e1 e0))), (Eq e0 (op e0 e0))]
have lean_s2643 : (Or (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e1 e0))))) :=
  (scope (fun lean_a635 : (Not (Eq (op e0 e0) (op e1 e0))) =>
    (scope (fun lean_a636 : (Eq e0 (op e0 e0)) =>
      have lean_s2643 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a636
      have lean_s2644 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s2643
      let lean_s2645 := by timed flipCongrArg lean_s2644 [Eq]
      have lean_s2646 : (Eq (op e1 e0) (op e1 e0)) := by timed rfl
      have lean_s2647 : (Eq (Eq e0 (op e1 e0)) (Eq (op e0 e0) (op e1 e0))) := by timed congr lean_s2645 lean_s2646
      have lean_s2648 : (Eq (Eq (op e0 e0) (op e1 e0)) False) := by timed falseIntro lean_a635
      have lean_s2649 : (Eq (Eq e0 (op e1 e0)) False) := by timed Eq.trans lean_s2647 lean_s2648
      have lean_s2650 : (Not (Eq e0 (op e1 e0))) := by timed falseElim lean_s2649
      show (Not (Eq e0 (op e1 e0))) from lean_s2650
  ))))
have lean_s2644 : (Implies (And (Not (Eq (op e0 e0) (op e1 e0))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e1 e0)))) := by liftOrNToImp lean_s2643, 2
have lean_s2645 : (Or (Not (And (Not (Eq (op e0 e0) (op e1 e0))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e1 e0)))) := by timed impliesElim lean_s2644
have lean_s2646 : (Or (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e1 e0))))) := by R1 lean_s2642, lean_s2645, (And (Not (Eq (op e0 e0) (op e1 e0))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s2647 : (Eq Or Or) := by timed rfl
have lean_s2648 : (Eq (Eq (op e0 e0) (op e1 e0)) (Eq (op e0 e0) (op e1 e0))) := by timed rfl
let lean_s2649 := by timed flipCongrArg lean_s2648 [Eq]
have lean_s2650 : (Eq (Eq (Eq (op e0 e0) (op e1 e0)) (Not (Not (Eq (op e0 e0) (op e1 e0))))) (Eq (Eq (op e0 e0) (op e1 e0)) (Eq (op e0 e0) (op e1 e0)))) := by timed congr lean_s2649 lean_r91
have lean_s2651 : (Eq (Eq (Eq (op e0 e0) (op e1 e0)) (Not (Not (Eq (op e0 e0) (op e1 e0))))) True) := by timed Eq.trans lean_s2650 lean_r92
have lean_s2652 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Eq (op e0 e0) (op e1 e0))) True) := by timed Eq.trans lean_r90 lean_s2651
have lean_s2653 : (Eq (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Eq (op e0 e0) (op e1 e0))) := by timed trueElim lean_s2652
let lean_s2654 := by timed congr lean_s2647 lean_s2653
let lean_s2655 := by timed congr lean_s2647 lean_s759
have lean_s2656 : (Eq (Not (Eq e0 (op e1 e0))) (Not (Eq e0 (op e1 e0)))) := by timed rfl
let lean_s2657 := by timed congr lean_s2655 lean_s2656
have lean_s2658 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e1 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e1 e0))))) (Or (Eq (op e0 e0) (op e1 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e1 e0)))))) := by timed congr lean_s2654 lean_s2657
have lean_s2659 : (Or (Eq (op e0 e0) (op e1 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e1 e0))))) := by timed eqResolve lean_s2646 lean_s2658
have lean_s2660 : (Not (Eq (op e0 e0) (op e1 e0))) := by andElim lean_s29, 0
let lean_s2661 := by R1 lean_s2659, lean_s2660, (Eq (op e0 e0) (op e1 e0)), [(- 1), 0]
have lean_s2662 : (Not (Eq e0 (op e1 e0))) := by R2 lean_s2661, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2663 := by R1 lean_s2641, lean_s2662, (Eq e0 (op e1 e0)), [(- 1), 0]
have lean_s2664 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e1 e3)))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e1 e3)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e2 (op e0 e4)), (Eq e2 (op e2 e2)), (Eq e2 (op e1 e3))]
have lean_s2665 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e1 e3))) (Not (Eq e0 (op e1 e3)))))))) :=
  (scope (fun lean_a636 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a637 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a638 : (Eq e2 (op e0 e4)) =>
        (scope (fun lean_a639 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a640 : (Eq e2 (op e1 e3)) =>
            have lean_s2665 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a637
            have lean_s2666 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s2665
            let lean_s2667 := by timed flipCongrArg lean_s2666 [Eq]
            have lean_s2668 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a639
            have lean_s2669 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a638
            have lean_s2670 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s2669
            have lean_s2671 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.trans lean_s2668 lean_s2670
            have lean_s2672 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.symm lean_s2671
            have lean_s2673 : (Eq (op e1 e3) e2) := by timed Eq.symm lean_a640
            have lean_s2674 : (Eq (op e1 e3) (op e2 e2)) := by timed Eq.trans lean_s2673 lean_a639
            have lean_s2675 : (Eq (op e2 e2) (op e1 e3)) := by timed Eq.symm lean_s2674
            have lean_s2676 : (Eq (op e0 e4) (op e1 e3)) := by timed Eq.trans lean_s2672 lean_s2675
            have lean_s2677 : (Eq (op e1 e3) (op e0 e4)) := by timed Eq.symm lean_s2676
            have lean_s2678 : (Eq (Eq e0 (op e1 e3)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s2667 lean_s2677
            have lean_s2679 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a636
            have lean_s2680 : (Eq (Eq e0 (op e1 e3)) False) := by timed Eq.trans lean_s2678 lean_s2679
            have lean_s2681 : (Not (Eq e0 (op e1 e3))) := by timed falseElim lean_s2680
            show (Not (Eq e0 (op e1 e3))) from lean_s2681
  ))))))))))
have lean_s2666 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e1 e3)))))) (Not (Eq e0 (op e1 e3)))) := by liftOrNToImp lean_s2665, 5
have lean_s2667 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e1 e3))))))) (Not (Eq e0 (op e1 e3)))) := by timed impliesElim lean_s2666
have lean_s2668 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e1 e3))) (Not (Eq e0 (op e1 e3)))))))) := by R1 lean_s2664, lean_s2667, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e1 e3)))))), [(- 1), (- 1)]
have lean_s2669 : (Eq Or Or) := by timed rfl
let lean_s2670 := by timed congr lean_s2669 lean_s864
let lean_s2671 := by timed congr lean_s2669 lean_s759
let lean_s2672 := by timed congr lean_s2669 lean_s839
let lean_s2673 := by timed congr lean_s2669 lean_s13
let lean_s2674 := by timed congr lean_s2669 lean_s2570
have lean_s2675 : (Eq (Not (Eq e0 (op e1 e3))) (Not (Eq e0 (op e1 e3)))) := by timed rfl
let lean_s2676 := by timed congr lean_s2674 lean_s2675
let lean_s2677 := by timed congr lean_s2673 lean_s2676
let lean_s2678 := by timed congr lean_s2672 lean_s2677
let lean_s2679 := by timed congr lean_s2671 lean_s2678
have lean_s2680 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e1 e3))) (Not (Eq e0 (op e1 e3)))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e1 e3))) (Not (Eq e0 (op e1 e3))))))))) := by timed congr lean_s2670 lean_s2679
have lean_s2681 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e1 e3))) (Not (Eq e0 (op e1 e3)))))))) := by timed eqResolve lean_s2668 lean_s2680
have lean_s2682 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e1 e3))) (Not (Eq e2 (op e1 e3)))))))) := by permutateOr lean_s2681, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s2683 := by R1 lean_s2663, lean_s2682, (Eq e0 (op e1 e3)), [(- 1), (- 1)]
let lean_s2684 := by R1 lean_s2683, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s2685 := by R2 lean_s2684, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2686 := by R2 lean_s2685, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2687 := by R2 lean_s2686, lean_s2336, (Eq e2 (op e1 e3)), [(- 1), (- 1)]
let lean_s2688 := by R1 lean_s2687, lean_s2358, (Eq e2 (op e2 e3)), [(- 1), 0]
let lean_s2689 := by R1 lean_s2688, lean_s2607, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
let lean_s2690 := by R1 lean_s2689, lean_s2609, (Eq (op e0 e4) (op e1 e4)), [(- 1), 0]
let lean_s2691 := by R2 lean_s2690, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2692 := by R1 lean_s2691, lean_s2169, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
have lean_s2693 : (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e3 (op e1 e4)))))))))) := by R1 lean_s2692, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s2694 : (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Not (Eq e3 (op e1 e4)))))))) := by factor lean_s2693, (- 1)
let lean_s2695 := by R2 lean_s2694, lean_s1428, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s2696 := by R1 lean_s2695, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2697 := by R1 lean_s2696, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s2698 := by R1 lean_s2697, lean_s1509, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s2699 := by R1 lean_s2698, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s2700 := by R2 lean_s2699, lean_s798, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2701 := by R1 lean_s2700, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s2702 := by R1 lean_s2701, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
have lean_s2703 : (Or (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e0 (op e4 e2)) (And (Eq e1 (op e4 e3)) (Eq e1 (op e1 e1))))) (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e1 (op e1 e1))))))) := by timed cnfAndNeg [(Not (Eq (op e4 e2) (op e4 e3))), (Eq e0 (op e4 e2)), (Eq e1 (op e4 e3)), (Eq e1 (op e1 e1))]
have lean_s2704 : (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1))))))) :=
  (scope (fun lean_a636 : (Not (Eq (op e4 e2) (op e4 e3))) =>
    (scope (fun lean_a637 : (Eq e0 (op e4 e2)) =>
      (scope (fun lean_a638 : (Eq e1 (op e4 e3)) =>
        (scope (fun lean_a639 : (Eq e1 (op e1 e1)) =>
          have lean_s2704 : (Eq (op e4 e2) e0) := by timed Eq.symm lean_a637
          have lean_s2705 : (Eq e0 (op e4 e2)) := by timed Eq.symm lean_s2704
          let lean_s2706 := by timed flipCongrArg lean_s2705 [Eq]
          have lean_s2707 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a639
          have lean_s2708 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_a638
          have lean_s2709 : (Eq e1 (op e4 e3)) := by timed Eq.symm lean_s2708
          have lean_s2710 : (Eq (op e1 e1) (op e4 e3)) := by timed Eq.trans lean_s2707 lean_s2709
          have lean_s2711 : (Eq (Eq e0 (op e1 e1)) (Eq (op e4 e2) (op e4 e3))) := by timed congr lean_s2706 lean_s2710
          have lean_s2712 : (Eq (Eq (op e4 e2) (op e4 e3)) False) := by timed falseIntro lean_a636
          have lean_s2713 : (Eq (Eq e0 (op e1 e1)) False) := by timed Eq.trans lean_s2711 lean_s2712
          have lean_s2714 : (Not (Eq e0 (op e1 e1))) := by timed falseElim lean_s2713
          show (Not (Eq e0 (op e1 e1))) from lean_s2714
  ))))))))
have lean_s2705 : (Implies (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e0 (op e4 e2)) (And (Eq e1 (op e4 e3)) (Eq e1 (op e1 e1))))) (Not (Eq e0 (op e1 e1)))) := by liftOrNToImp lean_s2704, 4
have lean_s2706 : (Or (Not (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e0 (op e4 e2)) (And (Eq e1 (op e4 e3)) (Eq e1 (op e1 e1)))))) (Not (Eq e0 (op e1 e1)))) := by timed impliesElim lean_s2705
have lean_s2707 : (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1))))))) := by R1 lean_s2703, lean_s2706, (And (Not (Eq (op e4 e2) (op e4 e3))) (And (Eq e0 (op e4 e2)) (And (Eq e1 (op e4 e3)) (Eq e1 (op e1 e1))))), [(- 1), (- 1)]
have lean_s2708 : (Eq Or Or) := by timed rfl
let lean_s2709 := by timed congr lean_s2708 lean_s833
let lean_s2710 := by timed congr lean_s2708 lean_s734
have lean_s2711 : (Eq (Not (Eq e1 (op e4 e3))) (Not (Eq e1 (op e4 e3)))) := by timed rfl
let lean_s2712 := by timed congr lean_s2708 lean_s2711
let lean_s2713 := by timed congr lean_s2708 lean_s730
let lean_s2714 := by timed congr lean_s2713 lean_s2270
let lean_s2715 := by timed congr lean_s2712 lean_s2714
let lean_s2716 := by timed congr lean_s2710 lean_s2715
have lean_s2717 : (Eq (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1))))))) (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1)))))))) := by timed congr lean_s2709 lean_s2716
have lean_s2718 : (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e0 (op e1 e1))))))) := by timed eqResolve lean_s2707 lean_s2717
have lean_s2719 : (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e0 (op e1 e1))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e1 (op e4 e3))))))) := by permutateOr lean_s2718, [0, 3, 4, 1, 2], (- 1)
let lean_s2720 := by R1 lean_s2702, lean_s2719, (Eq e0 (op e1 e1)), [(- 1), (- 1)]
let lean_s2721 := by R1 lean_s2720, lean_s850, (Eq (op e4 e2) (op e4 e3)), [(- 1), 0]
let lean_s2722 := by R2 lean_s2721, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s2723 : (Or (And (Not (Eq (op e1 e1) (op e4 e1))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e4 e1)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e0 e4)))))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e4 e1))), (Eq e1 (op e1 e1)), (Eq e2 (op e4 e1)), (Eq e2 (op e2 e2)), (Eq e2 (op e0 e4))]
have lean_s2724 : (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) :=
  (scope (fun lean_a636 : (Not (Eq (op e1 e1) (op e4 e1))) =>
    (scope (fun lean_a637 : (Eq e1 (op e1 e1)) =>
      (scope (fun lean_a638 : (Eq e2 (op e4 e1)) =>
        (scope (fun lean_a639 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a640 : (Eq e2 (op e0 e4)) =>
            have lean_s2724 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a637
            have lean_s2725 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s2724
            let lean_s2726 := by timed flipCongrArg lean_s2725 [Eq]
            have lean_s2727 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a639
            have lean_s2728 : (Eq (op e4 e1) e2) := by timed Eq.symm lean_a638
            have lean_s2729 : (Eq e2 (op e4 e1)) := by timed Eq.symm lean_s2728
            have lean_s2730 : (Eq (op e2 e2) (op e4 e1)) := by timed Eq.trans lean_s2727 lean_s2729
            have lean_s2731 : (Eq (op e4 e1) (op e2 e2)) := by timed Eq.symm lean_s2730
            have lean_s2732 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a640
            have lean_s2733 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s2732
            have lean_s2734 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_s2733
            have lean_s2735 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.trans lean_s2734 lean_a639
            have lean_s2736 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.symm lean_s2735
            have lean_s2737 : (Eq (op e4 e1) (op e0 e4)) := by timed Eq.trans lean_s2731 lean_s2736
            have lean_s2738 : (Eq (op e0 e4) (op e4 e1)) := by timed Eq.symm lean_s2737
            have lean_s2739 : (Eq (Eq e1 (op e0 e4)) (Eq (op e1 e1) (op e4 e1))) := by timed congr lean_s2726 lean_s2738
            have lean_s2740 : (Eq (Eq (op e1 e1) (op e4 e1)) False) := by timed falseIntro lean_a636
            have lean_s2741 : (Eq (Eq e1 (op e0 e4)) False) := by timed Eq.trans lean_s2739 lean_s2740
            have lean_s2742 : (Not (Eq e1 (op e0 e4))) := by timed falseElim lean_s2741
            show (Not (Eq e1 (op e0 e4))) from lean_s2742
  ))))))))))
have lean_s2725 : (Implies (And (Not (Eq (op e1 e1) (op e4 e1))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e4 e1)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Not (Eq e1 (op e0 e4)))) := by liftOrNToImp lean_s2724, 5
have lean_s2726 : (Or (Not (And (Not (Eq (op e1 e1) (op e4 e1))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e4 e1)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4))))))) (Not (Eq e1 (op e0 e4)))) := by timed impliesElim lean_s2725
have lean_s2727 : (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by R1 lean_s2723, lean_s2726, (And (Not (Eq (op e1 e1) (op e4 e1))) (And (Eq e1 (op e1 e1)) (And (Eq e2 (op e4 e1)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))), [(- 1), (- 1)]
have lean_s2728 : (Eq Or Or) := by timed rfl
let lean_s2729 := by timed congr lean_s2728 lean_s2231
let lean_s2730 := by timed congr lean_s2728 lean_s730
let lean_s2731 := by timed congr lean_s2728 lean_s21
let lean_s2732 := by timed congr lean_s2728 lean_s13
let lean_s2733 := by timed congr lean_s2728 lean_s839
let lean_s2734 := by timed congr lean_s2733 lean_s841
let lean_s2735 := by timed congr lean_s2732 lean_s2734
let lean_s2736 := by timed congr lean_s2731 lean_s2735
let lean_s2737 := by timed congr lean_s2730 lean_s2736
have lean_s2738 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e4 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) (Or (Eq (op e1 e1) (op e4 e1)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4))))))))) := by timed congr lean_s2729 lean_s2737
have lean_s2739 : (Or (Eq (op e1 e1) (op e4 e1)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by timed eqResolve lean_s2727 lean_s2738
have lean_s2740 : (Or (Eq (op e1 e1) (op e4 e1)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e2 (op e4 e1)))))))) := by permutateOr lean_s2739, [0, 1, 3, 5, 4, 2], (- 1)
let lean_s2741 := by R1 lean_s2722, lean_s2740, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s2742 := by R1 lean_s2741, lean_s2238, (Eq (op e1 e1) (op e4 e1)), [(- 1), 0]
let lean_s2743 := by R2 lean_s2742, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s2744 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e0 e4)) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e2 (op e4 e1)))))))))))) := by R2 lean_s2743, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s2745 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e0 e4)) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e2 (op e4 e1)))))))))) := by factor lean_s2744, (- 1)
let lean_s2746 := by R2 lean_s2745, lean_s744, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
let lean_s2747 := by R1 lean_s2746, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s2748 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e4 e1)))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e4 e1)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e2 (op e0 e4)), (Eq e2 (op e2 e2)), (Eq e2 (op e4 e1))]
have lean_s2749 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) :=
  (scope (fun lean_a636 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a637 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a638 : (Eq e2 (op e0 e4)) =>
        (scope (fun lean_a639 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a640 : (Eq e2 (op e4 e1)) =>
            have lean_s2749 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a637
            have lean_s2750 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s2749
            let lean_s2751 := by timed flipCongrArg lean_s2750 [Eq]
            have lean_s2752 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a639
            have lean_s2753 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a638
            have lean_s2754 : (Eq e2 (op e0 e4)) := by timed Eq.symm lean_s2753
            have lean_s2755 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.trans lean_s2752 lean_s2754
            have lean_s2756 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.symm lean_s2755
            have lean_s2757 : (Eq (op e4 e1) e2) := by timed Eq.symm lean_a640
            have lean_s2758 : (Eq (op e4 e1) (op e2 e2)) := by timed Eq.trans lean_s2757 lean_a639
            have lean_s2759 : (Eq (op e2 e2) (op e4 e1)) := by timed Eq.symm lean_s2758
            have lean_s2760 : (Eq (op e0 e4) (op e4 e1)) := by timed Eq.trans lean_s2756 lean_s2759
            have lean_s2761 : (Eq (op e4 e1) (op e0 e4)) := by timed Eq.symm lean_s2760
            have lean_s2762 : (Eq (Eq e0 (op e4 e1)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s2751 lean_s2761
            have lean_s2763 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a636
            have lean_s2764 : (Eq (Eq e0 (op e4 e1)) False) := by timed Eq.trans lean_s2762 lean_s2763
            have lean_s2765 : (Not (Eq e0 (op e4 e1))) := by timed falseElim lean_s2764
            show (Not (Eq e0 (op e4 e1))) from lean_s2765
  ))))))))))
have lean_s2750 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e4 e1)))))) (Not (Eq e0 (op e4 e1)))) := by liftOrNToImp lean_s2749, 5
have lean_s2751 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e4 e1))))))) (Not (Eq e0 (op e4 e1)))) := by timed impliesElim lean_s2750
have lean_s2752 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) := by R1 lean_s2748, lean_s2751, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e2 (op e0 e4)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e4 e1)))))), [(- 1), (- 1)]
have lean_s2753 : (Eq Or Or) := by timed rfl
let lean_s2754 := by timed congr lean_s2753 lean_s864
let lean_s2755 := by timed congr lean_s2753 lean_s759
let lean_s2756 := by timed congr lean_s2753 lean_s839
let lean_s2757 := by timed congr lean_s2753 lean_s13
let lean_s2758 := by timed congr lean_s2753 lean_s21
let lean_s2759 := by timed congr lean_s2758 lean_s1709
let lean_s2760 := by timed congr lean_s2757 lean_s2759
let lean_s2761 := by timed congr lean_s2756 lean_s2760
let lean_s2762 := by timed congr lean_s2755 lean_s2761
have lean_s2763 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e0 (op e4 e1))))))))) := by timed congr lean_s2754 lean_s2762
have lean_s2764 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e0 (op e4 e1)))))))) := by timed eqResolve lean_s2752 lean_s2763
have lean_s2765 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e1)))))))) := by permutateOr lean_s2764, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s2766 := by R1 lean_s2747, lean_s2765, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s2767 := by R1 lean_s2766, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s2768 := by R2 lean_s2767, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2769 := by R2 lean_s2768, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2770 := by R1 lean_s2769, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s2771 := by R1 lean_s2770, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s2772 : (Or (And (Not (Eq (op e0 e3) (op e0 e4))) (Eq e2 (op e0 e3))) (Or (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Not (Eq e2 (op e0 e3))))) := by timed cnfAndNeg [(Not (Eq (op e0 e3) (op e0 e4))), (Eq e2 (op e0 e3))]
have lean_s2773 : (Or (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Or (Not (Eq e2 (op e0 e3))) (Not (Eq e2 (op e0 e4))))) :=
  (scope (fun lean_a636 : (Not (Eq (op e0 e3) (op e0 e4))) =>
    (scope (fun lean_a637 : (Eq e2 (op e0 e3)) =>
      have lean_s2773 : (Eq (op e0 e3) e2) := by timed Eq.symm lean_a637
      have lean_s2774 : (Eq e2 (op e0 e3)) := by timed Eq.symm lean_s2773
      let lean_s2775 := by timed flipCongrArg lean_s2774 [Eq]
      have lean_s2776 : (Eq (op e0 e4) (op e0 e4)) := by timed rfl
      have lean_s2777 : (Eq (Eq e2 (op e0 e4)) (Eq (op e0 e3) (op e0 e4))) := by timed congr lean_s2775 lean_s2776
      have lean_s2778 : (Eq (Eq (op e0 e3) (op e0 e4)) False) := by timed falseIntro lean_a636
      have lean_s2779 : (Eq (Eq e2 (op e0 e4)) False) := by timed Eq.trans lean_s2777 lean_s2778
      have lean_s2780 : (Not (Eq e2 (op e0 e4))) := by timed falseElim lean_s2779
      show (Not (Eq e2 (op e0 e4))) from lean_s2780
  ))))
have lean_s2774 : (Implies (And (Not (Eq (op e0 e3) (op e0 e4))) (Eq e2 (op e0 e3))) (Not (Eq e2 (op e0 e4)))) := by liftOrNToImp lean_s2773, 2
have lean_s2775 : (Or (Not (And (Not (Eq (op e0 e3) (op e0 e4))) (Eq e2 (op e0 e3)))) (Not (Eq e2 (op e0 e4)))) := by timed impliesElim lean_s2774
have lean_s2776 : (Or (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Or (Not (Eq e2 (op e0 e3))) (Not (Eq e2 (op e0 e4))))) := by R1 lean_s2772, lean_s2775, (And (Not (Eq (op e0 e3) (op e0 e4))) (Eq e2 (op e0 e3))), [(- 1), (- 1)]
have lean_s2777 : (Eq Or Or) := by timed rfl
have lean_s2778 : (Eq (Eq (op e0 e3) (op e0 e4)) (Eq (op e0 e3) (op e0 e4))) := by timed rfl
let lean_s2779 := by timed flipCongrArg lean_s2778 [Eq]
have lean_s2780 : (Eq (Eq (Eq (op e0 e3) (op e0 e4)) (Not (Not (Eq (op e0 e3) (op e0 e4))))) (Eq (Eq (op e0 e3) (op e0 e4)) (Eq (op e0 e3) (op e0 e4)))) := by timed congr lean_s2779 lean_r393
have lean_s2781 : (Eq (Eq (Eq (op e0 e3) (op e0 e4)) (Not (Not (Eq (op e0 e3) (op e0 e4))))) True) := by timed Eq.trans lean_s2780 lean_r429
have lean_s2782 : (Eq (Eq (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Eq (op e0 e3) (op e0 e4))) True) := by timed Eq.trans lean_r401 lean_s2781
have lean_s2783 : (Eq (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Eq (op e0 e3) (op e0 e4))) := by timed trueElim lean_s2782
let lean_s2784 := by timed congr lean_s2777 lean_s2783
have lean_s2785 : (Eq (Not (Eq e2 (op e0 e3))) (Not (Eq e2 (op e0 e3)))) := by timed rfl
let lean_s2786 := by timed congr lean_s2777 lean_s2785
let lean_s2787 := by timed congr lean_s2786 lean_s839
have lean_s2788 : (Eq (Or (Not (Not (Eq (op e0 e3) (op e0 e4)))) (Or (Not (Eq e2 (op e0 e3))) (Not (Eq e2 (op e0 e4))))) (Or (Eq (op e0 e3) (op e0 e4)) (Or (Not (Eq e2 (op e0 e3))) (Not (Eq e2 (op e0 e4)))))) := by timed congr lean_s2784 lean_s2787
have lean_s2789 : (Or (Eq (op e0 e3) (op e0 e4)) (Or (Not (Eq e2 (op e0 e3))) (Not (Eq e2 (op e0 e4))))) := by timed eqResolve lean_s2776 lean_s2788
let lean_s2790 := by R1 lean_s2771, lean_s2789, (Eq e2 (op e0 e3)), [(- 1), (- 1)]
have lean_s2791 : (Not (Eq (op e0 e3) (op e0 e4))) := by andElim lean_s29, 59
have lean_s2792 : (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e4 e1))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e2 (op e0 e4))))))))))))) := by R1 lean_s2790, lean_s2791, (Eq (op e0 e3) (op e0 e4)), [(- 1), 0]
have lean_s2793 : (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e4 e1))) (Or (Eq e0 (op e4 e3)) (Eq e0 (op e4 e4)))))))) := by factor lean_s2792, 10
have lean_s2794 : (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e4 e3))))))))) := by permutateOr lean_s2793, [2, 1, 5, 6, 0, 4, 3], (- 1)
let lean_s2795 := by R1 lean_s2630, lean_s2794, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s2796 := by R1 lean_s2795, lean_s1019, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
have lean_s2797 : (Or (And (Not (Eq (op e4 e0) (op e4 e1))) (And (Eq e3 (op e4 e0)) (Eq e1 (op e4 e3)))) (Or (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e1 (op e4 e3)))))) := by timed cnfAndNeg [(Not (Eq (op e4 e0) (op e4 e1))), (Eq e3 (op e4 e0)), (Eq e1 (op e4 e3))]
have lean_s2798 : (Or (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e4 (op e4 e3))))))) :=
  (scope (fun lean_a638 : (Not (Eq (op e4 e0) (op e4 e1))) =>
    (scope (fun lean_a639 : (Eq e3 (op e4 e0)) =>
      (scope (fun lean_a640 : (Eq e1 (op e4 e3)) =>
        have lean_s2798 : (Eq (op e4 e0) e3) := by timed Eq.symm lean_a639
        have lean_s2799 : (Eq e3 (op e4 e0)) := by timed Eq.symm lean_s2798
        let lean_s2800 := by timed flipCongrArg lean_s2799 [Eq]
        have lean_s2801 : (Eq e4 e4) := by timed rfl
        let lean_s2802 := by timed flipCongrArg lean_s2801 [op]
        have lean_s2803 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_a640
        have lean_s2804 : (Eq e1 (op e4 e3)) := by timed Eq.symm lean_s2803
        have lean_s2805 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_s2804
        have lean_s2806 : (Eq (op e4 (op e4 e3)) (op e4 e1)) := by timed congr lean_s2802 lean_s2805
        have lean_s2807 : (Eq (Eq e3 (op e4 (op e4 e3))) (Eq (op e4 e0) (op e4 e1))) := by timed congr lean_s2800 lean_s2806
        have lean_s2808 : (Eq (Eq (op e4 e0) (op e4 e1)) False) := by timed falseIntro lean_a638
        have lean_s2809 : (Eq (Eq e3 (op e4 (op e4 e3))) False) := by timed Eq.trans lean_s2807 lean_s2808
        have lean_s2810 : (Not (Eq e3 (op e4 (op e4 e3)))) := by timed falseElim lean_s2809
        show (Not (Eq e3 (op e4 (op e4 e3)))) from lean_s2810
  ))))))
have lean_s2799 : (Implies (And (Not (Eq (op e4 e0) (op e4 e1))) (And (Eq e3 (op e4 e0)) (Eq e1 (op e4 e3)))) (Not (Eq e3 (op e4 (op e4 e3))))) := by liftOrNToImp lean_s2798, 3
have lean_s2800 : (Or (Not (And (Not (Eq (op e4 e0) (op e4 e1))) (And (Eq e3 (op e4 e0)) (Eq e1 (op e4 e3))))) (Not (Eq e3 (op e4 (op e4 e3))))) := by timed impliesElim lean_s2799
have lean_s2801 : (Or (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e4 (op e4 e3))))))) := by R1 lean_s2797, lean_s2800, (And (Not (Eq (op e4 e0) (op e4 e1))) (And (Eq e3 (op e4 e0)) (Eq e1 (op e4 e3)))), [(- 1), (- 1)]
have lean_s2802 : (Eq Or Or) := by timed rfl
have lean_s2803 : (Eq (Eq (op e4 e0) (op e4 e1)) (Eq (op e4 e0) (op e4 e1))) := by timed rfl
let lean_s2804 := by timed flipCongrArg lean_s2803 [Eq]
have lean_s2805 : (Eq (Eq (Eq (op e4 e0) (op e4 e1)) (Not (Not (Eq (op e4 e0) (op e4 e1))))) (Eq (Eq (op e4 e0) (op e4 e1)) (Eq (op e4 e0) (op e4 e1)))) := by timed congr lean_s2804 lean_r103
have lean_s2806 : (Eq (Eq (Eq (op e4 e0) (op e4 e1)) (Not (Not (Eq (op e4 e0) (op e4 e1))))) True) := by timed Eq.trans lean_s2805 lean_r104
have lean_s2807 : (Eq (Eq (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Eq (op e4 e0) (op e4 e1))) True) := by timed Eq.trans lean_r101 lean_s2806
have lean_s2808 : (Eq (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Eq (op e4 e0) (op e4 e1))) := by timed trueElim lean_s2807
let lean_s2809 := by timed congr lean_s2802 lean_s2808
let lean_s2810 := by timed congr lean_s2802 lean_s870
let lean_s2811 := by timed congr lean_s2802 lean_s2711
have lean_s2812 : (Eq (Not (Eq e3 (op e4 (op e4 e3)))) (Not (Eq e3 (op e4 (op e4 e3))))) := by timed rfl
let lean_s2813 := by timed congr lean_s2811 lean_s2812
let lean_s2814 := by timed congr lean_s2810 lean_s2813
have lean_s2815 : (Eq (Or (Not (Not (Eq (op e4 e0) (op e4 e1)))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e4 (op e4 e3))))))) (Or (Eq (op e4 e0) (op e4 e1)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e4 (op e4 e3)))))))) := by timed congr lean_s2809 lean_s2814
have lean_s2816 : (Or (Eq (op e4 e0) (op e4 e1)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e4 (op e4 e3))))))) := by timed eqResolve lean_s2801 lean_s2815
have lean_s2817 : (Or (Eq (op e4 e0) (op e4 e1)) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e1 (op e4 e3)))))) := by permutateOr lean_s2816, [0, 3, 1, 2], (- 1)
let lean_s2818 := by R1 lean_s2796, lean_s2817, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s2819 : (Not (Eq (op e4 e0) (op e4 e1))) := by andElim lean_s29, 90
have lean_s2820 : (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e1 (op e4 e3)))))))))))))))))) := by R1 lean_s2818, lean_s2819, (Eq (op e4 e0) (op e4 e1)), [(- 1), 0]
have lean_s2821 : (Or (Eq e2 (op e0 e3)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e0 (op e4 e4)) (Not (Eq e1 (op e4 e3))))))))))) := by factor lean_s2820, (- 1)
let lean_s2822 := by R2 lean_s2821, lean_s2218, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
let lean_s2823 := by R1 lean_s2822, lean_s2240, (Eq e1 (op e4 e1)), [(- 1), 0]
let lean_s2824 := by R1 lean_s2823, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s2825 := by R1 lean_s2824, lean_s1967, (Eq e1 (op e4 e0)), [(- 1), (- 1)]
let lean_s2826 := by R1 lean_s2825, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s2827 := by R1 lean_s2826, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s2828 := by R1 lean_s2827, lean_s1449, (Eq e3 e2), [(- 1), 0]
let lean_s2829 := by R1 lean_s2828, lean_s787, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s2830 := by R1 lean_s2829, lean_s789, (Eq e1 e0), [(- 1), 0]
let lean_s2831 := by R1 lean_s2830, lean_s2789, (Eq e2 (op e0 e3)), [(- 1), (- 1)]
let lean_s2832 := by R1 lean_s2831, lean_s2791, (Eq (op e0 e3) (op e0 e4)), [(- 1), 0]
let lean_s2833 := by R2 lean_s981, lean_s986, (Eq e4 (op e4 (op e4 e4))), [(- 1), 0]
let lean_s2834 := by R2 lean_s2833, lean_s1956, (Eq e1 (op e4 (op e4 e1))), [(- 1), (- 1)]
have lean_s2835 : (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e0 (op e4 e1)))))))) := by R2 lean_s2834, lean_s1949, (Eq e0 (op e4 (op e4 e0))), [(- 1), (- 1)]
have lean_s2836 : (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e0 (op e4 e1)))))) := by factor lean_s2835, (- 1)
let lean_s2837 := by R2 lean_s2836, lean_s744, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s2838 := by R1 lean_s2837, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s2839 : (Or (And (Eq e0 (op e4 e2)) (Eq e3 (op e4 e2))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e3 (op e4 e2))))) := by timed cnfAndNeg [(Eq e0 (op e4 e2)), (Eq e3 (op e4 e2))]
have lean_s2840 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e3 (op e4 e2))) (Eq e3 e0))) :=
  (scope (fun lean_a639 : (Eq e0 (op e4 e2)) =>
    (scope (fun lean_a640 : (Eq e3 (op e4 e2)) =>
      have lean_s2840 : (Eq (op e4 e2) e3) := by timed Eq.symm lean_a640
      have lean_s2841 : (Eq e3 (op e4 e2)) := by timed Eq.symm lean_s2840
      have lean_s2842 : (Eq (op e4 e2) e0) := by timed Eq.symm lean_a639
      have lean_s2843 : (Eq e3 e0) := by timed Eq.trans lean_s2841 lean_s2842
      show (Eq e3 e0) from lean_s2843
  ))))
have lean_s2841 : (Implies (And (Eq e0 (op e4 e2)) (Eq e3 (op e4 e2))) (Eq e3 e0)) := by liftOrNToImp lean_s2840, 2
have lean_s2842 : (Or (Not (And (Eq e0 (op e4 e2)) (Eq e3 (op e4 e2)))) (Eq e3 e0)) := by timed impliesElim lean_s2841
have lean_s2843 : (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e3 (op e4 e2))) (Eq e3 e0))) := by R1 lean_s2839, lean_s2842, (And (Eq e0 (op e4 e2)) (Eq e3 (op e4 e2))), [(- 1), (- 1)]
have lean_s2844 : (Or (Eq e3 e0) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e3 (op e4 e2))))) := by permutateOr lean_s2843, [2, 0, 1], (- 1)
let lean_s2845 := by R1 lean_s2838, lean_s2844, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
let lean_s2846 := by R1 lean_s2845, lean_s1668, (Eq e3 e0), [(- 1), 0]
let lean_s2847 := by R2 lean_s2846, lean_s1938, (Eq e2 (op e4 (op e4 e2))), [(- 1), (- 1)]
have lean_s2848 : (Or (Not (Eq e1 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e4 e3)))))))))) := by R2 lean_s2847, lean_s1931, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s2849 : (Or (Not (Eq e1 (op e4 e0))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e4 e3))))))) := by factor lean_s2848, (- 1)
let lean_s2850 := by R2 lean_s2849, lean_s1537, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
let lean_s2851 := by R1 lean_s2850, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2852 := by R1 lean_s2851, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s2853 := by R1 lean_s2852, lean_s2550, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s2854 := by R2 lean_s2853, lean_s798, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2855 := by R1 lean_s2854, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s2856 := by R1 lean_s2855, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
have lean_s2857 : (Or (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e2 (op e0 e4)))))))) := by timed cnfAndNeg [(Not (Eq (op e4 e0) (op e4 e3))), (Eq e1 (op e4 e0)), (Eq e2 (op e4 e3)), (Eq e2 (op e2 e2)), (Eq e2 (op e0 e4))]
have lean_s2858 : (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) :=
  (scope (fun lean_a639 : (Not (Eq (op e4 e0) (op e4 e3))) =>
    (scope (fun lean_a640 : (Eq e1 (op e4 e0)) =>
      (scope (fun lean_a641 : (Eq e2 (op e4 e3)) =>
        (scope (fun lean_a642 : (Eq e2 (op e2 e2)) =>
          (scope (fun lean_a643 : (Eq e2 (op e0 e4)) =>
            have lean_s2858 : (Eq (op e4 e0) e1) := by timed Eq.symm lean_a640
            have lean_s2859 : (Eq e1 (op e4 e0)) := by timed Eq.symm lean_s2858
            let lean_s2860 := by timed flipCongrArg lean_s2859 [Eq]
            have lean_s2861 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a642
            have lean_s2862 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a641
            have lean_s2863 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s2862
            have lean_s2864 : (Eq (op e2 e2) (op e4 e3)) := by timed Eq.trans lean_s2861 lean_s2863
            have lean_s2865 : (Eq (op e4 e3) (op e2 e2)) := by timed Eq.symm lean_s2864
            have lean_s2866 : (Eq (op e0 e4) e2) := by timed Eq.symm lean_a643
            have lean_s2867 : (Eq (op e0 e4) (op e2 e2)) := by timed Eq.trans lean_s2866 lean_a642
            have lean_s2868 : (Eq (op e2 e2) (op e0 e4)) := by timed Eq.symm lean_s2867
            have lean_s2869 : (Eq (op e4 e3) (op e0 e4)) := by timed Eq.trans lean_s2865 lean_s2868
            have lean_s2870 : (Eq (op e0 e4) (op e4 e3)) := by timed Eq.symm lean_s2869
            have lean_s2871 : (Eq (Eq e1 (op e0 e4)) (Eq (op e4 e0) (op e4 e3))) := by timed congr lean_s2860 lean_s2870
            have lean_s2872 : (Eq (Eq (op e4 e0) (op e4 e3)) False) := by timed falseIntro lean_a639
            have lean_s2873 : (Eq (Eq e1 (op e0 e4)) False) := by timed Eq.trans lean_s2871 lean_s2872
            have lean_s2874 : (Not (Eq e1 (op e0 e4))) := by timed falseElim lean_s2873
            show (Not (Eq e1 (op e0 e4))) from lean_s2874
  ))))))))))
have lean_s2859 : (Implies (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))) (Not (Eq e1 (op e0 e4)))) := by liftOrNToImp lean_s2858, 5
have lean_s2860 : (Or (Not (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4))))))) (Not (Eq e1 (op e0 e4)))) := by timed impliesElim lean_s2859
have lean_s2861 : (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by R1 lean_s2857, lean_s2860, (And (Not (Eq (op e4 e0) (op e4 e3))) (And (Eq e1 (op e4 e0)) (And (Eq e2 (op e4 e3)) (And (Eq e2 (op e2 e2)) (Eq e2 (op e0 e4)))))), [(- 1), (- 1)]
have lean_s2862 : (Eq Or Or) := by timed rfl
let lean_s2863 := by timed congr lean_s2862 lean_s2199
let lean_s2864 := by timed congr lean_s2862 lean_s2201
let lean_s2865 := by timed congr lean_s2862 lean_s836
let lean_s2866 := by timed congr lean_s2862 lean_s13
let lean_s2867 := by timed congr lean_s2862 lean_s839
let lean_s2868 := by timed congr lean_s2867 lean_s841
let lean_s2869 := by timed congr lean_s2866 lean_s2868
let lean_s2870 := by timed congr lean_s2865 lean_s2869
let lean_s2871 := by timed congr lean_s2864 lean_s2870
have lean_s2872 : (Eq (Or (Not (Not (Eq (op e4 e0) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) (Or (Eq (op e4 e0) (op e4 e3)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4))))))))) := by timed congr lean_s2863 lean_s2871
have lean_s2873 : (Or (Eq (op e4 e0) (op e4 e3)) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e0 e4)))))))) := by timed eqResolve lean_s2861 lean_s2872
have lean_s2874 : (Or (Eq (op e4 e0) (op e4 e3)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e2 (op e4 e3)))))))) := by permutateOr lean_s2873, [0, 3, 5, 4, 1, 2], (- 1)
let lean_s2875 := by R1 lean_s2856, lean_s2874, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s2876 := by R1 lean_s2875, lean_s2213, (Eq (op e4 e0) (op e4 e3)), [(- 1), 0]
let lean_s2877 := by R2 lean_s2876, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2878 := by R1 lean_s2877, lean_s2146, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s2879 := by R1 lean_s2878, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s2880 := by R2 lean_s2879, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2881 := by R2 lean_s2880, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2882 := by R1 lean_s2881, lean_s1967, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
have lean_s2883 : (Or (Not (Eq e1 (op e4 e0))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e1 (op e4 e0))))))))))))) := by R1 lean_s2882, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s2884 : (Or (Not (Eq e1 (op e4 e0))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e1 (op e3 e4)) (Not (Eq e2 (op e0 e4)))))))) := by factor lean_s2883, 10
let lean_s2885 := by R2 lean_s2884, lean_s2218, (Eq e1 (op e4 e0)), [(- 1), (- 1)]
let lean_s2886 := by R1 lean_s2885, lean_s2240, (Eq e1 (op e4 e1)), [(- 1), 0]
let lean_s2887 := by R1 lean_s2886, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s2888 := by R1 lean_s2887, lean_s2257, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
let lean_s2889 := by R1 lean_s2888, lean_s2259, (Eq e2 e1), [(- 1), 0]
let lean_s2890 := by R1 lean_s2889, lean_s787, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s2891 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e0 (op e3 e4))))))))) := by R1 lean_s2890, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s2892 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e2 (op e0 e4))) (Eq e1 (op e4 e2)))))) := by factor lean_s2891, 6
have lean_s2893 : (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e4 e3))))))) := by permutateOr lean_s2892, [4, 0, 3, 2, 1], (- 1)
have lean_s2894 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e0 (op e3 e4))))))))))))))) := by R1 lean_s2832, lean_s2893, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
have lean_s2895 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e0 (op e4 e4)) (Eq e1 (op e4 e2)))))) := by factor lean_s2894, 12
have lean_s2896 : (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e3 (op e4 e0))))))) := by permutateOr lean_s2895, [4, 3, 0, 1, 2], (- 1)
let lean_s2897 := by R1 lean_s2554, lean_s2896, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
let lean_s2898 := by R1 lean_s2765, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s2899 := by R2 lean_s2898, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2900 := by R2 lean_s2899, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2901 := by R2 lean_s2900, lean_s744, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s2902 := by R1 lean_s2901, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s2903 : (Eq (Not (And (And (Eq e2 (op e0 e4)) (Eq e0 (op e4 e3))) (Eq e3 (op e1 e4)))) (Not (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e1 e4)))))) := by timed flipCongrArg lean_r413 [Not]
have lean_s2904 : (Not (And (Eq e2 (op e0 e4)) (And (Eq e0 (op e4 e3)) (Eq e3 (op e1 e4))))) := by timed eqResolve lean_a485 lean_s2903
have lean_s2905 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e3 (op e1 e4))))) := by timed flipNotAnd lean_s2904 [(Eq e2 (op e0 e4)), (Eq e0 (op e4 e3)), (Eq e3 (op e1 e4))]
have lean_s2906 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e0 (op e4 e3))))) := by permutateOr lean_s2905, [0, 2, 1], (- 1)
let lean_s2907 := by R1 lean_s2902, lean_s2906, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s2908 := by R2 lean_s2907, lean_s1428, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s2909 := by R1 lean_s2908, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2910 := by R1 lean_s2909, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s2911 := by R2 lean_s2910, lean_s649, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s2912 := by R1 lean_s2911, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s2913 := by R1 lean_s2912, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s2914 := by R1 lean_s2913, lean_s1509, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s2915 := by R1 lean_s2914, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s2916 : (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e3 (op e0 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e0 (op e3 e4))))))))))) := by R1 lean_s2915, lean_s2621, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
have lean_s2917 : (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e0 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e0 (op e3 e4))))))))) := by factor lean_s2916, (- 1)
let lean_s2918 := by R2 lean_s2917, lean_s798, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s2919 := by R1 lean_s2918, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s2920 := by R1 lean_s2919, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s2921 := by R1 lean_s2920, lean_s2580, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s2922 := by R1 lean_s2921, lean_s2582, (Eq (op e1 e1) (op e1 e3)), [(- 1), 0]
let lean_s2923 := by R2 lean_s2922, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2924 := by R2 lean_s2923, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s2925 := by R2 lean_s2924, lean_s2336, (Eq e2 (op e1 e3)), [(- 1), (- 1)]
let lean_s2926 := by R1 lean_s2925, lean_s2358, (Eq e2 (op e2 e3)), [(- 1), 0]
have lean_s2927 : (Or (And (Not (Eq (op e2 e2) (op e4 e2))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e2 e2) (op e4 e2))), (Eq e2 (op e2 e2)), (Eq e3 (op e4 e2)), (Eq e3 (op e3 e3))]
have lean_s2928 : (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) :=
  (scope (fun lean_a639 : (Not (Eq (op e2 e2) (op e4 e2))) =>
    (scope (fun lean_a640 : (Eq e2 (op e2 e2)) =>
      (scope (fun lean_a641 : (Eq e3 (op e4 e2)) =>
        (scope (fun lean_a642 : (Eq e3 (op e3 e3)) =>
          have lean_s2928 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a640
          have lean_s2929 : (Eq e2 (op e2 e2)) := by timed Eq.symm lean_s2928
          let lean_s2930 := by timed flipCongrArg lean_s2929 [Eq]
          have lean_s2931 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a642
          have lean_s2932 : (Eq (op e4 e2) e3) := by timed Eq.symm lean_a641
          have lean_s2933 : (Eq e3 (op e4 e2)) := by timed Eq.symm lean_s2932
          have lean_s2934 : (Eq (op e3 e3) (op e4 e2)) := by timed Eq.trans lean_s2931 lean_s2933
          have lean_s2935 : (Eq (Eq e2 (op e3 e3)) (Eq (op e2 e2) (op e4 e2))) := by timed congr lean_s2930 lean_s2934
          have lean_s2936 : (Eq (Eq (op e2 e2) (op e4 e2)) False) := by timed falseIntro lean_a639
          have lean_s2937 : (Eq (Eq e2 (op e3 e3)) False) := by timed Eq.trans lean_s2935 lean_s2936
          have lean_s2938 : (Not (Eq e2 (op e3 e3))) := by timed falseElim lean_s2937
          show (Not (Eq e2 (op e3 e3))) from lean_s2938
  ))))))))
have lean_s2929 : (Implies (And (Not (Eq (op e2 e2) (op e4 e2))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3))))) (Not (Eq e2 (op e3 e3)))) := by liftOrNToImp lean_s2928, 4
have lean_s2930 : (Or (Not (And (Not (Eq (op e2 e2) (op e4 e2))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3)))))) (Not (Eq e2 (op e3 e3)))) := by timed impliesElim lean_s2929
have lean_s2931 : (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) := by R1 lean_s2927, lean_s2930, (And (Not (Eq (op e2 e2) (op e4 e2))) (And (Eq e2 (op e2 e2)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s2932 : (Eq Or Or) := by timed rfl
let lean_s2933 := by timed congr lean_s2932 lean_s662
let lean_s2934 := by timed congr lean_s2932 lean_s13
let lean_s2935 := by timed congr lean_s2932 lean_s1578
let lean_s2936 := by timed congr lean_s2932 lean_s17
let lean_s2937 := by timed congr lean_s2936 lean_s1887
let lean_s2938 := by timed congr lean_s2935 lean_s2937
let lean_s2939 := by timed congr lean_s2934 lean_s2938
have lean_s2940 : (Eq (Or (Not (Not (Eq (op e2 e2) (op e4 e2)))) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) (Or (Eq (op e2 e2) (op e4 e2)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3)))))))) := by timed congr lean_s2933 lean_s2939
have lean_s2941 : (Or (Eq (op e2 e2) (op e4 e2)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e2 (op e3 e3))))))) := by timed eqResolve lean_s2931 lean_s2940
have lean_s2942 : (Or (Eq (op e2 e2) (op e4 e2)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e2 (op e3 e3))) (Not (Eq e3 (op e4 e2))))))) := by permutateOr lean_s2941, [0, 1, 3, 4, 2], (- 1)
let lean_s2943 := by R1 lean_s2926, lean_s2942, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
let lean_s2944 := by R1 lean_s2943, lean_s669, (Eq (op e2 e2) (op e4 e2)), [(- 1), 0]
let lean_s2945 := by R2 lean_s2944, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2946 := by R2 lean_s2945, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2947 := by R1 lean_s2946, lean_s2844, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
let lean_s2948 := by R1 lean_s2947, lean_s1668, (Eq e3 e0), [(- 1), 0]
let lean_s2949 := by R1 lean_s2948, lean_s2789, (Eq e2 (op e0 e3)), [(- 1), (- 1)]
let lean_s2950 := by R1 lean_s2949, lean_s2791, (Eq (op e0 e3) (op e0 e4)), [(- 1), 0]
let lean_s2951 := by R1 lean_s2950, lean_s787, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s2952 := by R1 lean_s2951, lean_s789, (Eq e1 e0), [(- 1), 0]
let lean_s2953 := by R1 lean_s2952, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s2954 : (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e0 e4))))))))))))) := by R1 lean_s2953, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s2955 : (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e3 (op e4 e2))))))) := by factor lean_s2954, 10
have lean_s2956 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e3 (op e4 e2))))))) := by permutateOr lean_s2955, [2, 1, 0, 3, 4], (- 1)
let lean_s2957 := by R1 lean_s2897, lean_s2956, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
let lean_s2958 := by R1 lean_s2957, lean_s2893, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
let lean_s2959 := by R1 lean_s2958, lean_s787, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s2960 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e0 (op e3 e4)))))))))))))))) := by R1 lean_s2959, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s2961 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Eq e0 (op e4 e4))))) := by factor lean_s2960, 13
have lean_s2962 : (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e0 (op e3 e4)))))) := by permutateOr lean_s2961, [2, 3, 0, 1], (- 1)
let lean_s2963 := by R1 lean_s2536, lean_s2962, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
let lean_s2964 := by R1 lean_s2963, lean_s787, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s2965 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e0 (op e3 e4))))))))))) := by R1 lean_s2964, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s2966 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Eq e1 (op e4 e2))))) := by factor lean_s2965, 8
have lean_s2967 : (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e0 (op e3 e4)))))) := by permutateOr lean_s2966, [3, 2, 0, 1], (- 1)
let lean_s2968 := by R1 lean_s2282, lean_s2967, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
let lean_s2969 := by R1 lean_s28, lean_s30, (Eq (op e2 e2) (op e2 e4)), [(- 1), 0]
let lean_s2970 := by R2 lean_s2969, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2971 := by R2 lean_s2970, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2972 := by R2 lean_s2971, lean_s649, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s2973 := by R1 lean_s2972, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s2974 := by R1 lean_s2973, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s2975 := by R1 lean_s2974, lean_s1606, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s2976 := by R2 lean_s2975, lean_s1632, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s2977 := by R1 lean_s2976, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s2978 := by R1 lean_s2977, lean_s1666, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
have lean_s2979 : (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e3 (op e2 e4))))))))) := by R1 lean_s2978, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s2980 : (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4)))))) := by factor lean_s2979, 6
let lean_s2981 := by R2 lean_s2980, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s2982 := by R1 lean_s2981, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s2983 := by R1 lean_s2982, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s2984 := by R1 lean_s2640, lean_s2662, (Eq e0 (op e1 e0)), [(- 1), 0]
let lean_s2985 := by R1 lean_s2984, lean_s2682, (Eq e0 (op e1 e3)), [(- 1), (- 1)]
let lean_s2986 := by R1 lean_s2985, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s2987 := by R2 lean_s2986, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s2988 := by R2 lean_s2987, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s2989 := by R1 lean_s2988, lean_s2636, (Eq e0 (op e1 e2)), [(- 1), (- 1)]
let lean_s2990 := by R1 lean_s2989, lean_s2637, (Eq (op e1 e2) (op e4 e2)), [(- 1), 0]
let lean_s2991 := by R2 lean_s2990, lean_s2336, (Eq e2 (op e1 e3)), [(- 1), (- 1)]
let lean_s2992 := by R1 lean_s2991, lean_s2358, (Eq e2 (op e2 e3)), [(- 1), 0]
let lean_s2993 := by R2 lean_s2992, lean_s744, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
let lean_s2994 := by R1 lean_s2993, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
let lean_s2995 := by R1 lean_s2994, lean_s2607, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
let lean_s2996 := by R1 lean_s2995, lean_s2609, (Eq (op e0 e4) (op e1 e4)), [(- 1), 0]
let lean_s2997 := by R2 lean_s2996, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s2998 := by R1 lean_s2997, lean_s2169, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s2999 := by R1 lean_s2998, lean_s1668, (Eq e3 e0), [(- 1), 0]
let lean_s3000 := by R1 lean_s2999, lean_s2906, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s3001 := by R1 lean_s3000, lean_s2789, (Eq e2 (op e0 e3)), [(- 1), (- 1)]
have lean_s3002 : (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e2 (op e0 e4))))))))))))) := by R1 lean_s3001, lean_s2791, (Eq (op e0 e3) (op e0 e4)), [(- 1), 0]
have lean_s3003 : (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e4)) (Not (Eq e3 (op e1 e4)))))))) := by factor lean_s3002, 10
have lean_s3004 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e3 (op e1 e4)))))))) := by permutateOr lean_s3003, [2, 3, 0, 4, 1, 5], (- 1)
let lean_s3005 := by R1 lean_s2983, lean_s3004, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s3006 := by R1 lean_s3005, lean_s794, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s3007 := by R1 lean_s1967, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s3008 := by R2 lean_s3007, lean_s2218, (Eq e1 (op e4 e0)), [(- 1), (- 1)]
let lean_s3009 := by R1 lean_s3008, lean_s2240, (Eq e1 (op e4 e1)), [(- 1), 0]
have lean_s3010 : (Eq (Not (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e3))) (Eq e3 (op e2 e4)))) (Not (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e2 e4)))))) := by timed flipCongrArg lean_r46 [Not]
have lean_s3011 : (Not (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e3)) (Eq e3 (op e2 e4))))) := by timed eqResolve lean_a507 lean_s3010
have lean_s3012 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e3 (op e2 e4))))) := by timed flipNotAnd lean_s3011 [(Eq e0 (op e1 e4)), (Eq e1 (op e4 e3)), (Eq e3 (op e2 e4))]
have lean_s3013 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e1 (op e4 e3))))) := by permutateOr lean_s3012, [0, 2, 1], (- 1)
let lean_s3014 := by R1 lean_s3009, lean_s3013, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
let lean_s3015 := by R2 lean_s3014, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s3016 := by R1 lean_s3015, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3017 := by R1 lean_s3016, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s3018 := by R1 lean_s3017, lean_s2169, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s3019 := by R1 lean_s3018, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s3020 : (Or (And (Not (Eq (op e3 e4) (op e4 e4))) (Eq e1 (op e3 e4))) (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Not (Eq e1 (op e3 e4))))) := by timed cnfAndNeg [(Not (Eq (op e3 e4) (op e4 e4))), (Eq e1 (op e3 e4))]
have lean_s3021 : (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e4 e4))))) :=
  (scope (fun lean_a639 : (Not (Eq (op e3 e4) (op e4 e4))) =>
    (scope (fun lean_a640 : (Eq e1 (op e3 e4)) =>
      have lean_s3021 : (Eq (op e3 e4) e1) := by timed Eq.symm lean_a640
      have lean_s3022 : (Eq e1 (op e3 e4)) := by timed Eq.symm lean_s3021
      let lean_s3023 := by timed flipCongrArg lean_s3022 [Eq]
      have lean_s3024 : (Eq (op e4 e4) (op e4 e4)) := by timed rfl
      have lean_s3025 : (Eq (Eq e1 (op e4 e4)) (Eq (op e3 e4) (op e4 e4))) := by timed congr lean_s3023 lean_s3024
      have lean_s3026 : (Eq (Eq (op e3 e4) (op e4 e4)) False) := by timed falseIntro lean_a639
      have lean_s3027 : (Eq (Eq e1 (op e4 e4)) False) := by timed Eq.trans lean_s3025 lean_s3026
      have lean_s3028 : (Not (Eq e1 (op e4 e4))) := by timed falseElim lean_s3027
      show (Not (Eq e1 (op e4 e4))) from lean_s3028
  ))))
have lean_s3022 : (Implies (And (Not (Eq (op e3 e4) (op e4 e4))) (Eq e1 (op e3 e4))) (Not (Eq e1 (op e4 e4)))) := by liftOrNToImp lean_s3021, 2
have lean_s3023 : (Or (Not (And (Not (Eq (op e3 e4) (op e4 e4))) (Eq e1 (op e3 e4)))) (Not (Eq e1 (op e4 e4)))) := by timed impliesElim lean_s3022
have lean_s3024 : (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e4 e4))))) := by R1 lean_s3020, lean_s3023, (And (Not (Eq (op e3 e4) (op e4 e4))) (Eq e1 (op e3 e4))), [(- 1), (- 1)]
have lean_s3025 : (Eq Or Or) := by timed rfl
have lean_s3026 : (Eq (Eq (op e3 e4) (op e4 e4)) (Eq (op e3 e4) (op e4 e4))) := by timed rfl
let lean_s3027 := by timed flipCongrArg lean_s3026 [Eq]
have lean_s3028 : (Eq (Eq (Eq (op e3 e4) (op e4 e4)) (Not (Not (Eq (op e3 e4) (op e4 e4))))) (Eq (Eq (op e3 e4) (op e4 e4)) (Eq (op e3 e4) (op e4 e4)))) := by timed congr lean_s3027 lean_r259
have lean_s3029 : (Eq (Eq (Eq (op e3 e4) (op e4 e4)) (Not (Not (Eq (op e3 e4) (op e4 e4))))) True) := by timed Eq.trans lean_s3028 lean_r283
have lean_s3030 : (Eq (Eq (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Eq (op e3 e4) (op e4 e4))) True) := by timed Eq.trans lean_r267 lean_s3029
have lean_s3031 : (Eq (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Eq (op e3 e4) (op e4 e4))) := by timed trueElim lean_s3030
let lean_s3032 := by timed congr lean_s3025 lean_s3031
let lean_s3033 := by timed congr lean_s3025 lean_s728
let lean_s3034 := by timed congr lean_s3033 lean_s1497
have lean_s3035 : (Eq (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e4 e4))))) (Or (Eq (op e3 e4) (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e4 e4)))))) := by timed congr lean_s3032 lean_s3034
have lean_s3036 : (Or (Eq (op e3 e4) (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e4 e4))))) := by timed eqResolve lean_s3024 lean_s3035
let lean_s3037 := by R1 lean_s3019, lean_s3036, (Eq e1 (op e4 e4)), [(- 1), (- 1)]
have lean_s3038 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e0 (op e1 e4))) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e1 (op e3 e4)))))))) := by R1 lean_s3037, lean_s1381, (Eq (op e3 e4) (op e4 e4)), [(- 1), 0]
have lean_s3039 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e0 (op e1 e4))) (Or (Eq e3 (op e0 e4)) (Not (Eq e1 (op e3 e4))))))) := by factor lean_s3038, (- 1)
let lean_s3040 := by R2 lean_s3039, lean_s1632, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s3041 := by R1 lean_s3040, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
have lean_s3042 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e1 (op e4 e2)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e3 (op e4 e0)))))))))) := by R1 lean_s3041, lean_s1861, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
have lean_s3043 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e1 (op e4 e2)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by factor lean_s3042, 7
let lean_s3044 := by R2 lean_s3043, lean_s1537, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
let lean_s3045 := by R1 lean_s3044, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3046 := by R1 lean_s3045, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
have lean_s3047 : (Eq (Not (And (And (Eq e1 (op e3 e4)) (Eq e3 (op e4 e2))) (Eq e2 (op e0 e4)))) (Not (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e0 e4)))))) := by timed flipCongrArg lean_r48 [Not]
have lean_s3048 : (Not (And (Eq e1 (op e3 e4)) (And (Eq e3 (op e4 e2)) (Eq e2 (op e0 e4))))) := by timed eqResolve lean_a460 lean_s3047
have lean_s3049 : (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e2 (op e0 e4))))) := by timed flipNotAnd lean_s3048 [(Eq e1 (op e3 e4)), (Eq e3 (op e4 e2)), (Eq e2 (op e0 e4))]
have lean_s3050 : (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e3 (op e4 e2))))) := by permutateOr lean_s3049, [2, 0, 1], (- 1)
have lean_s3051 : (Or (Eq e1 (op e4 e2)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e4 e1)) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e1 (op e3 e4)))))))))) := by R1 lean_s3046, lean_s3050, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
have lean_s3052 : (Or (Eq e1 (op e4 e2)) (Or (Eq e3 (op e0 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e4 e1)) (Not (Eq e2 (op e0 e4))))))))) := by factor lean_s3051, 7
let lean_s3053 := by R2 lean_s3052, lean_s1373, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s3054 := by R1 lean_s3053, lean_s1383, (Eq e4 (op e3 e4)), [(- 1), 0]
let lean_s3055 := by R1 lean_s3054, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s3056 := by R1 lean_s3055, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s3057 : (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e4 e1)) (Or (Not (Eq e2 (op e0 e4))) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Not (Eq e2 (op e0 e4)))))))))) := by R1 lean_s3056, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s3058 : (Or (Eq e1 (op e4 e2)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e4 e1)) (Or (Not (Eq e2 (op e0 e4))) (Eq e2 (op e3 e4))))))) := by factor lean_s3057, 7
have lean_s3059 : (Or (Eq e3 (op e4 e1)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e0 e4)))))))) := by permutateOr lean_s3058, [3, 0, 5, 1, 2, 4], (- 1)
let lean_s3060 := by R2 lean_s3006, lean_s3059, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s3061 := by R1 lean_s3060, lean_s1447, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s3062 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e0 e4))) (Not (Eq e2 (op e0 e4))))))))))))))))) := by R1 lean_s3061, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s3063 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e1 e1)) (Or (Not (Eq e2 (op e0 e4))) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4))))))))) := by factor lean_s3062, 14
let lean_s3064 := by R2 lean_s3063, lean_s1048, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
let lean_s3065 := by R1 lean_s3064, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
let lean_s3066 := by R1 lean_s3065, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s3067 := by R1 lean_s2218, lean_s2240, (Eq e1 (op e4 e1)), [(- 1), 0]
let lean_s3068 := by R1 lean_s3067, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s3069 := by R1 lean_s3068, lean_s2515, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
have lean_s3070 : (Or (And (Eq e1 (op e4 e0)) (Eq e2 (op e4 e0))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e2 (op e4 e0))))) := by timed cnfAndNeg [(Eq e1 (op e4 e0)), (Eq e2 (op e4 e0))]
have lean_s3071 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e0))) (Eq e2 e1))) :=
  (scope (fun lean_a640 : (Eq e1 (op e4 e0)) =>
    (scope (fun lean_a641 : (Eq e2 (op e4 e0)) =>
      have lean_s3071 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a641
      have lean_s3072 : (Eq e2 (op e4 e0)) := by timed Eq.symm lean_s3071
      have lean_s3073 : (Eq (op e4 e0) e1) := by timed Eq.symm lean_a640
      have lean_s3074 : (Eq e2 e1) := by timed Eq.trans lean_s3072 lean_s3073
      show (Eq e2 e1) from lean_s3074
  ))))
have lean_s3072 : (Implies (And (Eq e1 (op e4 e0)) (Eq e2 (op e4 e0))) (Eq e2 e1)) := by liftOrNToImp lean_s3071, 2
have lean_s3073 : (Or (Not (And (Eq e1 (op e4 e0)) (Eq e2 (op e4 e0)))) (Eq e2 e1)) := by timed impliesElim lean_s3072
have lean_s3074 : (Or (Not (Eq e1 (op e4 e0))) (Or (Not (Eq e2 (op e4 e0))) (Eq e2 e1))) := by R1 lean_s3070, lean_s3073, (And (Eq e1 (op e4 e0)) (Eq e2 (op e4 e0))), [(- 1), (- 1)]
have lean_s3075 : (Or (Eq e2 e1) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e2 (op e4 e0))))) := by permutateOr lean_s3074, [2, 0, 1], (- 1)
let lean_s3076 := by R1 lean_s3069, lean_s3075, (Eq e1 (op e4 e0)), [(- 1), (- 1)]
let lean_s3077 := by R1 lean_s3076, lean_s2259, (Eq e2 e1), [(- 1), 0]
let lean_s3078 := by R2 lean_s3077, lean_s1428, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s3079 := by R1 lean_s3078, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3080 := by R1 lean_s3079, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s3081 := by R2 lean_s3080, lean_s649, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s3082 := by R1 lean_s3081, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s3083 := by R1 lean_s3082, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s3084 := by R1 lean_s3083, lean_s1666, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s3085 := by R1 lean_s3084, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s3086 : (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e1 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e3 e4))))))))) := by R1 lean_s3085, lean_s1856, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
have lean_s3087 : (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e3 (op e1 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e3 e4)))))))) := by factor lean_s3086, (- 1)
let lean_s3088 := by R2 lean_s3087, lean_s1632, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s3089 := by R1 lean_s3088, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s3090 := by R1 lean_s3089, lean_s1785, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s3091 := by R1 lean_s3090, lean_s1449, (Eq e3 e2), [(- 1), 0]
let lean_s3092 := by R1 lean_s3091, lean_s1626, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
have lean_s3093 : (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e2 (op e1 e4)))))))))) := by R1 lean_s3092, lean_s1628, (Eq e2 e0), [(- 1), 0]
have lean_s3094 : (Or (Eq e1 (op e4 e2)) (Or (Not (Eq e2 (op e1 e4))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by factor lean_s3093, 7
have lean_s3095 : (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e1 e4))) (Not (Eq e1 (op e3 e4)))))))) := by permutateOr lean_s3094, [0, 2, 4, 5, 1, 3], (- 1)
let lean_s3096 := by R1 lean_s3066, lean_s3095, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
let lean_s3097 := by R1 lean_s3096, lean_s2275, (Eq e0 (op e1 e1)), [(- 1), (- 1)]
have lean_s3098 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Not (Eq e1 (op e3 e4)))))))))))))))) := by R2 lean_s3097, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s3099 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4))))))) := by factor lean_s3098, 13
let lean_s3100 := by R2 lean_s3099, lean_s1373, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s3101 := by R1 lean_s3100, lean_s1402, (Eq e3 (op e3 e4)), [(- 1), (- 1)]
let lean_s3102 := by R2 lean_s3101, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3103 := by R1 lean_s3102, lean_s1403, (Eq (op e3 e3) (op e3 e4)), [(- 1), 0]
let lean_s3104 := by R1 lean_s3103, lean_s1380, (Eq e4 (op e3 e4)), [(- 1), (- 1)]
let lean_s3105 := by R2 lean_s3104, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
have lean_s3106 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e3 e4)))))))) := by R1 lean_s3105, lean_s1381, (Eq (op e3 e4) (op e4 e4)), [(- 1), 0]
have lean_s3107 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4)))))) := by factor lean_s3106, 6
have lean_s3108 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e4 e4)))))))) := by R1 lean_s3107, lean_s2967, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
have lean_s3109 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4))))) := by factor lean_s3108, 6
have lean_s3110 : (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Eq e0 (op e4 e4))))) := by permutateOr lean_s3109, [2, 3, 0, 1], (- 1)
have lean_s3111 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e4 e4)))))))))) := by R2 lean_s2968, lean_s3110, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
have lean_s3112 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Eq e1 (op e4 e2)))) := by factor lean_s3111, 8
have lean_s3113 : (Or (Eq e1 (op e4 e2)) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e4 e4)))) := by permutateOr lean_s3112, [2, 0, 1], (- 1)
have lean_s3114 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e4 e4))))))))))) := by R2 lean_s1899, lean_s3113, (Eq e1 (op e4 e2)), [(- 1), (- 1)]
have lean_s3115 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e1 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Not (Eq e3 (op e0 e4))))))))) := by factor lean_s3114, 9
have lean_s3116 : (Or (And (Eq e1 (op e3 e4)) (Eq e2 (op e3 e4))) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e2 (op e3 e4))))) := by timed cnfAndNeg [(Eq e1 (op e3 e4)), (Eq e2 (op e3 e4))]
have lean_s3117 : (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e2 (op e3 e4))) (Eq e2 e1))) :=
  (scope (fun lean_a640 : (Eq e1 (op e3 e4)) =>
    (scope (fun lean_a641 : (Eq e2 (op e3 e4)) =>
      have lean_s3117 : (Eq (op e3 e4) e2) := by timed Eq.symm lean_a641
      have lean_s3118 : (Eq e2 (op e3 e4)) := by timed Eq.symm lean_s3117
      have lean_s3119 : (Eq (op e3 e4) e1) := by timed Eq.symm lean_a640
      have lean_s3120 : (Eq e2 e1) := by timed Eq.trans lean_s3118 lean_s3119
      show (Eq e2 e1) from lean_s3120
  ))))
have lean_s3118 : (Implies (And (Eq e1 (op e3 e4)) (Eq e2 (op e3 e4))) (Eq e2 e1)) := by liftOrNToImp lean_s3117, 2
have lean_s3119 : (Or (Not (And (Eq e1 (op e3 e4)) (Eq e2 (op e3 e4)))) (Eq e2 e1)) := by timed impliesElim lean_s3118
have lean_s3120 : (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e2 (op e3 e4))) (Eq e2 e1))) := by R1 lean_s3116, lean_s3119, (And (Eq e1 (op e3 e4)) (Eq e2 (op e3 e4))), [(- 1), (- 1)]
have lean_s3121 : (Or (Eq e2 e1) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e2 (op e3 e4))))) := by permutateOr lean_s3120, [2, 0, 1], (- 1)
let lean_s3122 := by R1 lean_s3115, lean_s3121, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
let lean_s3123 := by R1 lean_s3122, lean_s2259, (Eq e2 e1), [(- 1), 0]
let lean_s3124 := by R1 lean_s3123, lean_s2275, (Eq e0 (op e1 e1)), [(- 1), (- 1)]
have lean_s3125 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Not (Eq e1 (op e3 e4)))))))))) := by R2 lean_s3124, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s3126 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e3 (op e0 e4))))))) := by factor lean_s3125, 7
let lean_s3127 := by R1 lean_s3126, lean_s787, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
have lean_s3128 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e1 (op e3 e4))))))) := by R1 lean_s3127, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s3129 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e3 (op e0 e4)))))) := by factor lean_s3128, 4
let lean_s3130 := by R1 lean_s1785, lean_s1449, (Eq e3 e2), [(- 1), 0]
let lean_s3131 := by R2 lean_s3130, lean_s1428, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s3132 := by R1 lean_s3131, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3133 := by R1 lean_s3132, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s3134 := by R2 lean_s3133, lean_s1048, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
let lean_s3135 := by R1 lean_s3134, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
let lean_s3136 := by R1 lean_s3135, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s3137 := by R1 lean_s3136, lean_s2495, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
have lean_s3138 : (Or (And (Eq e1 (op e0 e4)) (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e3 (op e0 e4))))) := by timed cnfAndNeg [(Eq e1 (op e0 e4)), (Eq e3 (op e0 e4))]
have lean_s3139 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e0 e4))) (Eq e3 e1))) :=
  (scope (fun lean_a641 : (Eq e1 (op e0 e4)) =>
    (scope (fun lean_a642 : (Eq e3 (op e0 e4)) =>
      have lean_s3139 : (Eq (op e0 e4) e3) := by timed Eq.symm lean_a642
      have lean_s3140 : (Eq e3 (op e0 e4)) := by timed Eq.symm lean_s3139
      have lean_s3141 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a641
      have lean_s3142 : (Eq e3 e1) := by timed Eq.trans lean_s3140 lean_s3141
      show (Eq e3 e1) from lean_s3142
  ))))
have lean_s3140 : (Implies (And (Eq e1 (op e0 e4)) (Eq e3 (op e0 e4))) (Eq e3 e1)) := by liftOrNToImp lean_s3139, 2
have lean_s3141 : (Or (Not (And (Eq e1 (op e0 e4)) (Eq e3 (op e0 e4)))) (Eq e3 e1)) := by timed impliesElim lean_s3140
have lean_s3142 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e0 e4))) (Eq e3 e1))) := by R1 lean_s3138, lean_s3141, (And (Eq e1 (op e0 e4)) (Eq e3 (op e0 e4))), [(- 1), (- 1)]
have lean_s3143 : (Or (Eq e3 e1) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e3 (op e0 e4))))) := by permutateOr lean_s3142, [2, 0, 1], (- 1)
let lean_s3144 := by R1 lean_s3137, lean_s3143, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s3145 := by R1 lean_s3144, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s3146 := by R1 lean_s3145, lean_s2542, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
have lean_s3147 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e1 (op e0 e4))))))) := by R1 lean_s3146, lean_s2259, (Eq e2 e1), [(- 1), 0]
have lean_s3148 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e0 (op e4 e3))))) := by factor lean_s3147, 4
let lean_s3149 := by R2 lean_s3148, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s3150 := by R1 lean_s3149, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s3151 := by R1 lean_s3150, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s3152 := by R2 lean_s981, lean_s986, (Eq e4 (op e4 (op e4 e4))), [(- 1), 0]
let lean_s3153 := by R2 lean_s3152, lean_s1000, (Eq e1 (op e4 (op e4 e1))), [(- 1), (- 1)]
let lean_s3154 := by R2 lean_s3153, lean_s1041, (Eq e2 (op e4 (op e4 e2))), [(- 1), (- 1)]
let lean_s3155 := by R2 lean_s3154, lean_s993, (Eq e0 (op e4 (op e4 e0))), [(- 1), (- 1)]
have lean_s3156 : (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3)))))))))) := by R2 lean_s3155, lean_s1019, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s3157 : (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3)))))) := by factor lean_s3156, (- 1)
let lean_s3158 := by R2 lean_s3157, lean_s649, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s3159 := by R1 lean_s3158, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s3160 := by R1 lean_s3159, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s3161 := by R2 lean_s3160, lean_s1537, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
let lean_s3162 := by R1 lean_s3161, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3163 := by R1 lean_s3162, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s3164 := by R1 lean_s3163, lean_s2621, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s3165 := by R1 lean_s3164, lean_s2550, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s3166 := by R1 lean_s3165, lean_s1581, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
let lean_s3167 := by R1 lean_s3166, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s3168 : (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e4 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e3)) (Eq e4 (op e4 e3)))))) := by andElim lean_s1371, 23
have lean_s3169 : (Or (Eq e1 (op e4 e3)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Eq e3 (op e4 e3)) (Eq e4 (op e4 e3)))))) := by permutateOr lean_s3168, [1, 2, 0, 3, 4], (- 1)
let lean_s3170 := by R2 lean_s3167, lean_s3169, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s3171 := by R1 lean_s3170, lean_s1559, (Eq e3 (op e4 e3)), [(- 1), (- 1)]
let lean_s3172 := by R2 lean_s3171, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3173 := by R1 lean_s3172, lean_s1560, (Eq (op e3 e3) (op e4 e3)), [(- 1), 0]
have lean_s3174 : (Or (And (Eq e4 (op e4 e4)) (Eq e4 (op e4 e3))) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e4 (op e4 e3))))) := by timed cnfAndNeg [(Eq e4 (op e4 e4)), (Eq e4 (op e4 e3))]
have lean_s3175 : (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e4 e3))) (Eq (op e4 e3) (op e4 e4)))) :=
  (scope (fun lean_a641 : (Eq e4 (op e4 e4)) =>
    (scope (fun lean_a642 : (Eq e4 (op e4 e3)) =>
      have lean_s3175 : (Eq (op e4 e3) e4) := by timed Eq.symm lean_a642
      have lean_s3176 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a641
      have lean_s3177 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s3176
      have lean_s3178 : (Eq (op e4 e3) (op e4 e4)) := by timed Eq.trans lean_s3175 lean_s3177
      show (Eq (op e4 e3) (op e4 e4)) from lean_s3178
  ))))
have lean_s3176 : (Implies (And (Eq e4 (op e4 e4)) (Eq e4 (op e4 e3))) (Eq (op e4 e3) (op e4 e4))) := by liftOrNToImp lean_s3175, 2
have lean_s3177 : (Or (Not (And (Eq e4 (op e4 e4)) (Eq e4 (op e4 e3)))) (Eq (op e4 e3) (op e4 e4))) := by timed impliesElim lean_s3176
have lean_s3178 : (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e4 e3))) (Eq (op e4 e3) (op e4 e4)))) := by R1 lean_s3174, lean_s3177, (And (Eq e4 (op e4 e4)) (Eq e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s3179 : (Or (Eq (op e4 e3) (op e4 e4)) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e4 (op e4 e3))))) := by permutateOr lean_s3178, [2, 0, 1], (- 1)
let lean_s3180 := by R1 lean_s3173, lean_s3179, (Eq e4 (op e4 e3)), [(- 1), (- 1)]
let lean_s3181 := by R2 lean_s3180, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
have lean_s3182 : (Not (Eq (op e4 e3) (op e4 e4))) := by andElim lean_s29, 99
let lean_s3183 := by R1 lean_s3181, lean_s3182, (Eq (op e4 e3) (op e4 e4)), [(- 1), 0]
have lean_s3184 : (Or (And (Not (Eq (op e4 e2) (op e4 e3))) (Eq e1 (op e4 e2))) (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Not (Eq e1 (op e4 e2))))) := by timed cnfAndNeg [(Not (Eq (op e4 e2) (op e4 e3))), (Eq e1 (op e4 e2))]
have lean_s3185 : (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e3))))) :=
  (scope (fun lean_a642 : (Not (Eq (op e4 e2) (op e4 e3))) =>
    (scope (fun lean_a643 : (Eq e1 (op e4 e2)) =>
      have lean_s3185 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a643
      have lean_s3186 : (Eq e1 (op e4 e2)) := by timed Eq.symm lean_s3185
      let lean_s3187 := by timed flipCongrArg lean_s3186 [Eq]
      have lean_s3188 : (Eq (op e4 e3) (op e4 e3)) := by timed rfl
      have lean_s3189 : (Eq (Eq e1 (op e4 e3)) (Eq (op e4 e2) (op e4 e3))) := by timed congr lean_s3187 lean_s3188
      have lean_s3190 : (Eq (Eq (op e4 e2) (op e4 e3)) False) := by timed falseIntro lean_a642
      have lean_s3191 : (Eq (Eq e1 (op e4 e3)) False) := by timed Eq.trans lean_s3189 lean_s3190
      have lean_s3192 : (Not (Eq e1 (op e4 e3))) := by timed falseElim lean_s3191
      show (Not (Eq e1 (op e4 e3))) from lean_s3192
  ))))
have lean_s3186 : (Implies (And (Not (Eq (op e4 e2) (op e4 e3))) (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e3)))) := by liftOrNToImp lean_s3185, 2
have lean_s3187 : (Or (Not (And (Not (Eq (op e4 e2) (op e4 e3))) (Eq e1 (op e4 e2)))) (Not (Eq e1 (op e4 e3)))) := by timed impliesElim lean_s3186
have lean_s3188 : (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e3))))) := by R1 lean_s3184, lean_s3187, (And (Not (Eq (op e4 e2) (op e4 e3))) (Eq e1 (op e4 e2))), [(- 1), (- 1)]
have lean_s3189 : (Eq Or Or) := by timed rfl
let lean_s3190 := by timed congr lean_s3189 lean_s833
let lean_s3191 := by timed congr lean_s3189 lean_s732
let lean_s3192 := by timed congr lean_s3191 lean_s2711
have lean_s3193 : (Eq (Or (Not (Not (Eq (op e4 e2) (op e4 e3)))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e3))))) (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e3)))))) := by timed congr lean_s3190 lean_s3192
have lean_s3194 : (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e1 (op e4 e3))))) := by timed eqResolve lean_s3188 lean_s3193
let lean_s3195 := by R1 lean_s3183, lean_s3194, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
have lean_s3196 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Not (Eq e1 (op e4 e2))))))))))) := by R1 lean_s3195, lean_s850, (Eq (op e4 e2) (op e4 e3)), [(- 1), 0]
have lean_s3197 : (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e0 (op e3 e4)))))) := by factor lean_s3196, 8
have lean_s3198 : (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e4 e2)))))) := by permutateOr lean_s3197, [1, 2, 3, 0], (- 1)
let lean_s3199 := by R1 lean_s3151, lean_s3198, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s3200 := by R2 lean_s3199, lean_s3169, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s3201 := by R1 lean_s3179, lean_s3182, (Eq (op e4 e3) (op e4 e4)), [(- 1), 0]
have lean_s3202 : (Not (Eq e4 (op e4 e3))) := by R2 lean_s3201, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
let lean_s3203 := by R1 lean_s3200, lean_s3202, (Eq e4 (op e4 e3)), [(- 1), 0]
let lean_s3204 := by R1 lean_s3203, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s3205 := by R1 lean_s3204, lean_s3194, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
have lean_s3206 : (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Not (Eq e1 (op e4 e2))))))))) := by R1 lean_s3205, lean_s850, (Eq (op e4 e2) (op e4 e3)), [(- 1), 0]
have lean_s3207 : (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e1 (op e4 e2))))))) := by factor lean_s3206, (- 1)
have lean_s3208 : (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by R2 lean_s3207, lean_s3113, (Eq e1 (op e4 e2)), [(- 1), (- 1)]
have lean_s3209 : (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Eq e0 (op e4 e4)))))) := by factor lean_s3208, (- 1)
have lean_s3210 : (Or (And (Not (Eq e2 e0)) (Eq e0 (op e3 e4))) (Or (Not (Not (Eq e2 e0))) (Not (Eq e0 (op e3 e4))))) := by timed cnfAndNeg [(Not (Eq e2 e0)), (Eq e0 (op e3 e4))]
have lean_s3211 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e3 e4))))) :=
  (scope (fun lean_a642 : (Not (Eq e2 e0)) =>
    (scope (fun lean_a643 : (Eq e0 (op e3 e4)) =>
      have lean_s3211 : (Eq e2 e2) := by timed rfl
      let lean_s3212 := by timed flipCongrArg lean_s3211 [Eq]
      have lean_s3213 : (Eq (op e3 e4) e0) := by timed Eq.symm lean_a643
      have lean_s3214 : (Eq (Eq e2 (op e3 e4)) (Eq e2 e0)) := by timed congr lean_s3212 lean_s3213
      have lean_s3215 : (Eq (Eq e2 e0) False) := by timed falseIntro lean_a642
      have lean_s3216 : (Eq (Eq e2 (op e3 e4)) False) := by timed Eq.trans lean_s3214 lean_s3215
      have lean_s3217 : (Not (Eq e2 (op e3 e4))) := by timed falseElim lean_s3216
      show (Not (Eq e2 (op e3 e4))) from lean_s3217
  ))))
have lean_s3212 : (Implies (And (Not (Eq e2 e0)) (Eq e0 (op e3 e4))) (Not (Eq e2 (op e3 e4)))) := by liftOrNToImp lean_s3211, 2
have lean_s3213 : (Or (Not (And (Not (Eq e2 e0)) (Eq e0 (op e3 e4)))) (Not (Eq e2 (op e3 e4)))) := by timed impliesElim lean_s3212
have lean_s3214 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e3 e4))))) := by R1 lean_s3210, lean_s3213, (And (Not (Eq e2 e0)) (Eq e0 (op e3 e4))), [(- 1), (- 1)]
have lean_s3215 : (Eq Or Or) := by timed rfl
let lean_s3216 := by timed congr lean_s3215 lean_s1619
let lean_s3217 := by timed congr lean_s3215 lean_s783
let lean_s3218 := by timed congr lean_s3217 lean_s1802
have lean_s3219 : (Eq (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e3 e4))))) (Or (Eq e2 e0) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e3 e4)))))) := by timed congr lean_s3216 lean_s3218
have lean_s3220 : (Or (Eq e2 e0) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e3 e4))))) := by timed eqResolve lean_s3214 lean_s3219
let lean_s3221 := by R1 lean_s3209, lean_s3220, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
have lean_s3222 : (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Or (Eq e0 (op e4 e4)) (Not (Eq e0 (op e3 e4))))))) := by R1 lean_s3221, lean_s1628, (Eq e2 e0), [(- 1), 0]
have lean_s3223 : (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e0 (op e3 e4))) (Eq e0 (op e4 e4))))) := by factor lean_s3222, 4
let lean_s3224 := by R2 lean_s981, lean_s986, (Eq e4 (op e4 (op e4 e4))), [(- 1), 0]
let lean_s3225 := by R2 lean_s3224, lean_s2296, (Eq e0 (op e4 (op e4 e0))), [(- 1), (- 1)]
have lean_s3226 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e0 (op e4 e2))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e4 e2)))))))) := by R2 lean_s3225, lean_s2289, (Eq e2 (op e4 (op e4 e2))), [(- 1), (- 1)]
have lean_s3227 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e0 (op e4 e2)))))) := by factor lean_s3226, (- 1)
let lean_s3228 := by R2 lean_s3227, lean_s649, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s3229 := by R1 lean_s3228, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s3230 := by R1 lean_s3229, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s3231 : (Or (And (Not (Eq (op e1 e3) (op e3 e3))) (And (Eq e2 (op e1 e3)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1))))) (Or (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e3 (op e4 e1))))))) := by timed cnfAndNeg [(Not (Eq (op e1 e3) (op e3 e3))), (Eq e2 (op e1 e3)), (Eq e3 (op e3 e3)), (Eq e3 (op e4 e1))]
have lean_s3232 : (Or (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1))))))) :=
  (scope (fun lean_a642 : (Not (Eq (op e1 e3) (op e3 e3))) =>
    (scope (fun lean_a643 : (Eq e2 (op e1 e3)) =>
      (scope (fun lean_a644 : (Eq e3 (op e3 e3)) =>
        (scope (fun lean_a645 : (Eq e3 (op e4 e1)) =>
          have lean_s3232 : (Eq (op e1 e3) e2) := by timed Eq.symm lean_a643
          have lean_s3233 : (Eq e2 (op e1 e3)) := by timed Eq.symm lean_s3232
          let lean_s3234 := by timed flipCongrArg lean_s3233 [Eq]
          have lean_s3235 : (Eq (op e4 e1) e3) := by timed Eq.symm lean_a645
          have lean_s3236 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a644
          have lean_s3237 : (Eq e3 (op e3 e3)) := by timed Eq.symm lean_s3236
          have lean_s3238 : (Eq (op e4 e1) (op e3 e3)) := by timed Eq.trans lean_s3235 lean_s3237
          have lean_s3239 : (Eq (Eq e2 (op e4 e1)) (Eq (op e1 e3) (op e3 e3))) := by timed congr lean_s3234 lean_s3238
          have lean_s3240 : (Eq (Eq (op e1 e3) (op e3 e3)) False) := by timed falseIntro lean_a642
          have lean_s3241 : (Eq (Eq e2 (op e4 e1)) False) := by timed Eq.trans lean_s3239 lean_s3240
          have lean_s3242 : (Not (Eq e2 (op e4 e1))) := by timed falseElim lean_s3241
          show (Not (Eq e2 (op e4 e1))) from lean_s3242
  ))))))))
have lean_s3233 : (Implies (And (Not (Eq (op e1 e3) (op e3 e3))) (And (Eq e2 (op e1 e3)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1))))) (Not (Eq e2 (op e4 e1)))) := by liftOrNToImp lean_s3232, 4
have lean_s3234 : (Or (Not (And (Not (Eq (op e1 e3) (op e3 e3))) (And (Eq e2 (op e1 e3)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1)))))) (Not (Eq e2 (op e4 e1)))) := by timed impliesElim lean_s3233
have lean_s3235 : (Or (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1))))))) := by R1 lean_s3231, lean_s3234, (And (Not (Eq (op e1 e3) (op e3 e3))) (And (Eq e2 (op e1 e3)) (And (Eq e3 (op e3 e3)) (Eq e3 (op e4 e1))))), [(- 1), (- 1)]
have lean_s3236 : (Eq Or Or) := by timed rfl
have lean_s3237 : (Eq (Eq (op e1 e3) (op e3 e3)) (Eq (op e1 e3) (op e3 e3))) := by timed rfl
let lean_s3238 := by timed flipCongrArg lean_s3237 [Eq]
have lean_s3239 : (Eq (Eq (Eq (op e1 e3) (op e3 e3)) (Not (Not (Eq (op e1 e3) (op e3 e3))))) (Eq (Eq (op e1 e3) (op e3 e3)) (Eq (op e1 e3) (op e3 e3)))) := by timed congr lean_s3238 lean_r4
have lean_s3240 : (Eq (Eq (Eq (op e1 e3) (op e3 e3)) (Not (Not (Eq (op e1 e3) (op e3 e3))))) True) := by timed Eq.trans lean_s3239 lean_r5
have lean_s3241 : (Eq (Eq (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Eq (op e1 e3) (op e3 e3))) True) := by timed Eq.trans lean_r3 lean_s3240
have lean_s3242 : (Eq (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Eq (op e1 e3) (op e3 e3))) := by timed trueElim lean_s3241
let lean_s3243 := by timed congr lean_s3236 lean_s3242
let lean_s3244 := by timed congr lean_s3236 lean_s2570
let lean_s3245 := by timed congr lean_s3236 lean_s17
let lean_s3246 := by timed congr lean_s3236 lean_s19
let lean_s3247 := by timed congr lean_s3246 lean_s21
let lean_s3248 := by timed congr lean_s3245 lean_s3247
let lean_s3249 := by timed congr lean_s3244 lean_s3248
have lean_s3250 : (Eq (Or (Not (Not (Eq (op e1 e3) (op e3 e3)))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1))))))) (Or (Eq (op e1 e3) (op e3 e3)) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1)))))))) := by timed congr lean_s3243 lean_s3249
have lean_s3251 : (Or (Eq (op e1 e3) (op e3 e3)) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e2 (op e4 e1))))))) := by timed eqResolve lean_s3235 lean_s3250
have lean_s3252 : (Or (Eq (op e1 e3) (op e3 e3)) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e2 (op e1 e3))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e3 (op e4 e1))))))) := by permutateOr lean_s3251, [0, 2, 1, 4, 3], (- 1)
let lean_s3253 := by R1 lean_s3230, lean_s3252, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
have lean_s3254 : (Not (Eq (op e1 e3) (op e3 e3))) := by andElim lean_s29, 35
let lean_s3255 := by R1 lean_s3253, lean_s3254, (Eq (op e1 e3) (op e3 e3)), [(- 1), 0]
let lean_s3256 := by R2 lean_s3255, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3257 := by R2 lean_s3256, lean_s2336, (Eq e2 (op e1 e3)), [(- 1), (- 1)]
let lean_s3258 := by R1 lean_s3257, lean_s2358, (Eq e2 (op e2 e3)), [(- 1), 0]
have lean_s3259 : (Or (And (Not (Eq (op e3 e4) (op e4 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e4 (op e4 e4)) (Eq e4 (op e0 e3))))) (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e4 (op e0 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e3 e4) (op e4 e4))), (Eq e2 (op e3 e4)), (Eq e4 (op e4 e4)), (Eq e4 (op e0 e3))]
have lean_s3260 : (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e0 e3))) (Not (Eq e2 (op e0 e3))))))) :=
  (scope (fun lean_a643 : (Not (Eq (op e3 e4) (op e4 e4))) =>
    (scope (fun lean_a644 : (Eq e2 (op e3 e4)) =>
      (scope (fun lean_a645 : (Eq e4 (op e4 e4)) =>
        (scope (fun lean_a646 : (Eq e4 (op e0 e3)) =>
          have lean_s3260 : (Eq (op e3 e4) e2) := by timed Eq.symm lean_a644
          have lean_s3261 : (Eq e2 (op e3 e4)) := by timed Eq.symm lean_s3260
          let lean_s3262 := by timed flipCongrArg lean_s3261 [Eq]
          have lean_s3263 : (Eq (op e0 e3) e4) := by timed Eq.symm lean_a646
          have lean_s3264 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a645
          have lean_s3265 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s3264
          have lean_s3266 : (Eq (op e0 e3) (op e4 e4)) := by timed Eq.trans lean_s3263 lean_s3265
          have lean_s3267 : (Eq (Eq e2 (op e0 e3)) (Eq (op e3 e4) (op e4 e4))) := by timed congr lean_s3262 lean_s3266
          have lean_s3268 : (Eq (Eq (op e3 e4) (op e4 e4)) False) := by timed falseIntro lean_a643
          have lean_s3269 : (Eq (Eq e2 (op e0 e3)) False) := by timed Eq.trans lean_s3267 lean_s3268
          have lean_s3270 : (Not (Eq e2 (op e0 e3))) := by timed falseElim lean_s3269
          show (Not (Eq e2 (op e0 e3))) from lean_s3270
  ))))))))
have lean_s3261 : (Implies (And (Not (Eq (op e3 e4) (op e4 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e4 (op e4 e4)) (Eq e4 (op e0 e3))))) (Not (Eq e2 (op e0 e3)))) := by liftOrNToImp lean_s3260, 4
have lean_s3262 : (Or (Not (And (Not (Eq (op e3 e4) (op e4 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e4 (op e4 e4)) (Eq e4 (op e0 e3)))))) (Not (Eq e2 (op e0 e3)))) := by timed impliesElim lean_s3261
have lean_s3263 : (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e0 e3))) (Not (Eq e2 (op e0 e3))))))) := by R1 lean_s3259, lean_s3262, (And (Not (Eq (op e3 e4) (op e4 e4))) (And (Eq e2 (op e3 e4)) (And (Eq e4 (op e4 e4)) (Eq e4 (op e0 e3))))), [(- 1), (- 1)]
have lean_s3264 : (Eq Or Or) := by timed rfl
let lean_s3265 := by timed congr lean_s3264 lean_s3031
let lean_s3266 := by timed congr lean_s3264 lean_s1802
have lean_s3267 : (Eq (Not (Eq e4 (op e4 e4))) (Not (Eq e4 (op e4 e4)))) := by timed rfl
let lean_s3268 := by timed congr lean_s3264 lean_s3267
have lean_s3269 : (Eq (Not (Eq e4 (op e0 e3))) (Not (Eq e4 (op e0 e3)))) := by timed rfl
let lean_s3270 := by timed congr lean_s3264 lean_s3269
let lean_s3271 := by timed congr lean_s3270 lean_s2785
let lean_s3272 := by timed congr lean_s3268 lean_s3271
let lean_s3273 := by timed congr lean_s3266 lean_s3272
have lean_s3274 : (Eq (Or (Not (Not (Eq (op e3 e4) (op e4 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e0 e3))) (Not (Eq e2 (op e0 e3))))))) (Or (Eq (op e3 e4) (op e4 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e0 e3))) (Not (Eq e2 (op e0 e3)))))))) := by timed congr lean_s3265 lean_s3273
have lean_s3275 : (Or (Eq (op e3 e4) (op e4 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e4 (op e0 e3))) (Not (Eq e2 (op e0 e3))))))) := by timed eqResolve lean_s3263 lean_s3274
have lean_s3276 : (Or (Eq (op e3 e4) (op e4 e4)) (Or (Not (Eq e4 (op e4 e4))) (Or (Not (Eq e2 (op e0 e3))) (Or (Not (Eq e4 (op e0 e3))) (Not (Eq e2 (op e3 e4))))))) := by permutateOr lean_s3275, [0, 2, 4, 3, 1], (- 1)
let lean_s3277 := by R1 lean_s3258, lean_s3276, (Eq e2 (op e0 e3)), [(- 1), (- 1)]
let lean_s3278 := by R1 lean_s3277, lean_s1381, (Eq (op e3 e4) (op e4 e4)), [(- 1), 0]
let lean_s3279 := by R2 lean_s3278, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
have lean_s3280 : (Or (Eq e4 (op e0 e3)) (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e2 e3)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e4 e3)))))) := by andElim lean_s647, 39
have lean_s3281 : (Or (Eq e4 (op e1 e3)) (Or (Eq e4 (op e2 e3)) (Or (Eq e4 (op e0 e3)) (Or (Eq e4 (op e3 e3)) (Eq e4 (op e4 e3)))))) := by permutateOr lean_s3280, [1, 2, 0, 3, 4], (- 1)
let lean_s3282 := by R2 lean_s3279, lean_s3281, (Eq e4 (op e0 e3)), [(- 1), (- 1)]
let lean_s3283 := by R1 lean_s3282, lean_s3202, (Eq e4 (op e4 e3)), [(- 1), 0]
have lean_s3284 : (Or (And (Not (Eq e4 e3)) (Eq e3 (op e3 e3))) (Or (Not (Not (Eq e4 e3))) (Not (Eq e3 (op e3 e3))))) := by timed cnfAndNeg [(Not (Eq e4 e3)), (Eq e3 (op e3 e3))]
have lean_s3285 : (Or (Not (Not (Eq e4 e3))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e4 (op e3 e3))))) :=
  (scope (fun lean_a644 : (Not (Eq e4 e3)) =>
    (scope (fun lean_a645 : (Eq e3 (op e3 e3)) =>
      have lean_s3285 : (Eq e4 e4) := by timed rfl
      let lean_s3286 := by timed flipCongrArg lean_s3285 [Eq]
      have lean_s3287 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a645
      have lean_s3288 : (Eq (Eq e4 (op e3 e3)) (Eq e4 e3)) := by timed congr lean_s3286 lean_s3287
      have lean_s3289 : (Eq (Eq e4 e3) False) := by timed falseIntro lean_a644
      have lean_s3290 : (Eq (Eq e4 (op e3 e3)) False) := by timed Eq.trans lean_s3288 lean_s3289
      have lean_s3291 : (Not (Eq e4 (op e3 e3))) := by timed falseElim lean_s3290
      show (Not (Eq e4 (op e3 e3))) from lean_s3291
  ))))
have lean_s3286 : (Implies (And (Not (Eq e4 e3)) (Eq e3 (op e3 e3))) (Not (Eq e4 (op e3 e3)))) := by liftOrNToImp lean_s3285, 2
have lean_s3287 : (Or (Not (And (Not (Eq e4 e3)) (Eq e3 (op e3 e3)))) (Not (Eq e4 (op e3 e3)))) := by timed impliesElim lean_s3286
have lean_s3288 : (Or (Not (Not (Eq e4 e3))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e4 (op e3 e3))))) := by R1 lean_s3284, lean_s3287, (And (Not (Eq e4 e3)) (Eq e3 (op e3 e3))), [(- 1), (- 1)]
have lean_s3289 : (Eq Or Or) := by timed rfl
have lean_s3290 : (Eq (Eq e4 e3) (Eq e4 e3)) := by timed rfl
let lean_s3291 := by timed flipCongrArg lean_s3290 [Eq]
have lean_s3292 : (Eq (Eq (Eq e4 e3) (Not (Not (Eq e4 e3)))) (Eq (Eq e4 e3) (Eq e4 e3))) := by timed congr lean_s3291 lean_r7
have lean_s3293 : (Eq (Eq (Eq e4 e3) (Not (Not (Eq e4 e3)))) True) := by timed Eq.trans lean_s3292 lean_r8
have lean_s3294 : (Eq (Eq (Not (Not (Eq e4 e3))) (Eq e4 e3)) True) := by timed Eq.trans lean_r6 lean_s3293
have lean_s3295 : (Eq (Not (Not (Eq e4 e3))) (Eq e4 e3)) := by timed trueElim lean_s3294
let lean_s3296 := by timed congr lean_s3289 lean_s3295
let lean_s3297 := by timed congr lean_s3289 lean_s17
have lean_s3298 : (Eq (Not (Eq e4 (op e3 e3))) (Not (Eq e4 (op e3 e3)))) := by timed rfl
let lean_s3299 := by timed congr lean_s3297 lean_s3298
have lean_s3300 : (Eq (Or (Not (Not (Eq e4 e3))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e4 (op e3 e3))))) (Or (Eq e4 e3) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e4 (op e3 e3)))))) := by timed congr lean_s3296 lean_s3299
have lean_s3301 : (Or (Eq e4 e3) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e4 (op e3 e3))))) := by timed eqResolve lean_s3288 lean_s3300
let lean_s3302 := by R1 lean_s3301, lean_s1460, (Eq e4 e3), [(- 1), 0]
have lean_s3303 : (Not (Eq e4 (op e3 e3))) := by R2 lean_s3302, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3304 := by R1 lean_s3283, lean_s3303, (Eq e4 (op e3 e3)), [(- 1), 0]
have lean_s3305 : (Or (And (Not (Eq e4 e0)) (Eq e0 (op e2 e3))) (Or (Not (Not (Eq e4 e0))) (Not (Eq e0 (op e2 e3))))) := by timed cnfAndNeg [(Not (Eq e4 e0)), (Eq e0 (op e2 e3))]
have lean_s3306 : (Or (Not (Not (Eq e4 e0))) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e4 (op e2 e3))))) :=
  (scope (fun lean_a645 : (Not (Eq e4 e0)) =>
    (scope (fun lean_a646 : (Eq e0 (op e2 e3)) =>
      have lean_s3306 : (Eq e4 e4) := by timed rfl
      let lean_s3307 := by timed flipCongrArg lean_s3306 [Eq]
      have lean_s3308 : (Eq (op e2 e3) e0) := by timed Eq.symm lean_a646
      have lean_s3309 : (Eq (Eq e4 (op e2 e3)) (Eq e4 e0)) := by timed congr lean_s3307 lean_s3308
      have lean_s3310 : (Eq (Eq e4 e0) False) := by timed falseIntro lean_a645
      have lean_s3311 : (Eq (Eq e4 (op e2 e3)) False) := by timed Eq.trans lean_s3309 lean_s3310
      have lean_s3312 : (Not (Eq e4 (op e2 e3))) := by timed falseElim lean_s3311
      show (Not (Eq e4 (op e2 e3))) from lean_s3312
  ))))
have lean_s3307 : (Implies (And (Not (Eq e4 e0)) (Eq e0 (op e2 e3))) (Not (Eq e4 (op e2 e3)))) := by liftOrNToImp lean_s3306, 2
have lean_s3308 : (Or (Not (And (Not (Eq e4 e0)) (Eq e0 (op e2 e3)))) (Not (Eq e4 (op e2 e3)))) := by timed impliesElim lean_s3307
have lean_s3309 : (Or (Not (Not (Eq e4 e0))) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e4 (op e2 e3))))) := by R1 lean_s3305, lean_s3308, (And (Not (Eq e4 e0)) (Eq e0 (op e2 e3))), [(- 1), (- 1)]
have lean_s3310 : (Eq Or Or) := by timed rfl
have lean_s3311 : (Eq (Eq e4 e0) (Eq e4 e0)) := by timed rfl
let lean_s3312 := by timed flipCongrArg lean_s3311 [Eq]
have lean_s3313 : (Eq (Eq (Eq e4 e0) (Not (Not (Eq e4 e0)))) (Eq (Eq e4 e0) (Eq e4 e0))) := by timed congr lean_s3312 lean_r418
have lean_s3314 : (Eq (Eq (Eq e4 e0) (Not (Not (Eq e4 e0)))) True) := by timed Eq.trans lean_s3313 lean_r10
have lean_s3315 : (Eq (Eq (Not (Not (Eq e4 e0))) (Eq e4 e0)) True) := by timed Eq.trans lean_r9 lean_s3314
have lean_s3316 : (Eq (Not (Not (Eq e4 e0))) (Eq e4 e0)) := by timed trueElim lean_s3315
let lean_s3317 := by timed congr lean_s3310 lean_s3316
let lean_s3318 := by timed congr lean_s3310 lean_s2079
have lean_s3319 : (Eq (Not (Eq e4 (op e2 e3))) (Not (Eq e4 (op e2 e3)))) := by timed rfl
let lean_s3320 := by timed congr lean_s3318 lean_s3319
have lean_s3321 : (Eq (Or (Not (Not (Eq e4 e0))) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e4 (op e2 e3))))) (Or (Eq e4 e0) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e4 (op e2 e3)))))) := by timed congr lean_s3317 lean_s3320
have lean_s3322 : (Or (Eq e4 e0) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e4 (op e2 e3))))) := by timed eqResolve lean_s3309 lean_s3321
let lean_s3323 := by R1 lean_s3304, lean_s3322, (Eq e4 (op e2 e3)), [(- 1), (- 1)]
have lean_s3324 : (Not (Eq e4 e0)) := by andElim lean_s709, 3
let lean_s3325 := by R1 lean_s3323, lean_s3324, (Eq e4 e0), [(- 1), 0]
have lean_s3326 : (Eq (Not (And (And (Eq e0 (op e2 e3)) (Eq e2 (op e3 e4))) (Eq e4 (op e1 e3)))) (Not (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e4)) (Eq e4 (op e1 e3)))))) := by timed flipCongrArg lean_r11 [Not]
have lean_s3327 : (Not (And (Eq e0 (op e2 e3)) (And (Eq e2 (op e3 e4)) (Eq e4 (op e1 e3))))) := by timed eqResolve lean_a477 lean_s3326
have lean_s3328 : (Or (Not (Eq e0 (op e2 e3))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e4 (op e1 e3))))) := by timed flipNotAnd lean_s3327 [(Eq e0 (op e2 e3)), (Eq e2 (op e3 e4)), (Eq e4 (op e1 e3))]
have lean_s3329 : (Or (Not (Eq e4 (op e1 e3))) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e2 (op e3 e4))))) := by permutateOr lean_s3328, [2, 0, 1], (- 1)
have lean_s3330 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e0 (op e2 e3))) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e2 (op e3 e4))))))))))))) := by R1 lean_s3325, lean_s3329, (Eq e4 (op e1 e3)), [(- 1), (- 1)]
have lean_s3331 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e3 (op e4 (op e4 e3)))) (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e0 (op e2 e3)))))))))) := by factor lean_s3330, 10
let lean_s3332 := by R2 lean_s3331, lean_s2044, (Eq e0 (op e2 e3)), [(- 1), (- 1)]
let lean_s3333 := by R1 lean_s3332, lean_s2066, (Eq e0 (op e0 e3)), [(- 1), 0]
have lean_s3334 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e3 (op e0 e4)), (Eq e3 (op e3 e3))]
have lean_s3335 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) :=
  (scope (fun lean_a647 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a648 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a649 : (Eq e3 (op e0 e4)) =>
        (scope (fun lean_a650 : (Eq e3 (op e3 e3)) =>
          have lean_s3335 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a648
          have lean_s3336 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s3335
          let lean_s3337 := by timed flipCongrArg lean_s3336 [Eq]
          have lean_s3338 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a650
          have lean_s3339 : (Eq e3 (op e3 e3)) := by timed Eq.symm lean_s3338
          have lean_s3340 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_s3339
          have lean_s3341 : (Eq (op e0 e4) e3) := by timed Eq.symm lean_a649
          have lean_s3342 : (Eq e3 (op e0 e4)) := by timed Eq.symm lean_s3341
          have lean_s3343 : (Eq (op e3 e3) (op e0 e4)) := by timed Eq.trans lean_s3340 lean_s3342
          have lean_s3344 : (Eq (Eq e0 (op e3 e3)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s3337 lean_s3343
          have lean_s3345 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a647
          have lean_s3346 : (Eq (Eq e0 (op e3 e3)) False) := by timed Eq.trans lean_s3344 lean_s3345
          have lean_s3347 : (Not (Eq e0 (op e3 e3))) := by timed falseElim lean_s3346
          show (Not (Eq e0 (op e3 e3))) from lean_s3347
  ))))))))
have lean_s3336 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e0 (op e3 e3)))) := by liftOrNToImp lean_s3335, 4
have lean_s3337 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3)))))) (Not (Eq e0 (op e3 e3)))) := by timed impliesElim lean_s3336
have lean_s3338 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) := by R1 lean_s3334, lean_s3337, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s3339 : (Eq Or Or) := by timed rfl
let lean_s3340 := by timed congr lean_s3339 lean_s864
let lean_s3341 := by timed congr lean_s3339 lean_s759
let lean_s3342 := by timed congr lean_s3339 lean_s1444
let lean_s3343 := by timed congr lean_s3339 lean_s17
let lean_s3344 := by timed congr lean_s3343 lean_s2104
let lean_s3345 := by timed congr lean_s3342 lean_s3344
let lean_s3346 := by timed congr lean_s3341 lean_s3345
have lean_s3347 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3)))))))) := by timed congr lean_s3340 lean_s3346
have lean_s3348 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))) := by timed eqResolve lean_s3338 lean_s3347
have lean_s3349 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e0 (op e3 e3))))))) := by permutateOr lean_s3348, [0, 1, 3, 2, 4], (- 1)
let lean_s3350 := by R1 lean_s3333, lean_s3349, (Eq e0 (op e3 e3)), [(- 1), (- 1)]
let lean_s3351 := by R1 lean_s3350, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s3352 := by R2 lean_s3351, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3353 := by R2 lean_s3352, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s3354 := by R2 lean_s3353, lean_s2408, (Eq e1 (op e4 (op e4 e1))), [(- 1), (- 1)]
have lean_s3355 : (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e1 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e4 e1))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e1 (op e4 e3)))))))))))))) := by R2 lean_s3354, lean_s2415, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s3356 : (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e3 (op e4 e1))) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e1 e3)) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e1 (op e4 e3))))))))))) := by factor lean_s3355, (- 1)
let lean_s3357 := by R2 lean_s3356, lean_s1537, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s3358 := by R1 lean_s3357, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3359 := by R1 lean_s3358, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s3360 := by R1 lean_s3359, lean_s2844, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
have lean_s3361 : (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e1 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e3 (op e4 e0)) (Not (Eq e0 (op e4 e2)))))))))))) := by R1 lean_s3360, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s3362 : (Or (Not (Eq e0 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e1 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e4 e3))) (Eq e3 (op e4 e0)))))))))) := by factor lean_s3361, 9
let lean_s3363 := by R2 lean_s3362, lean_s3169, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
let lean_s3364 := by R1 lean_s3363, lean_s3202, (Eq e4 (op e4 e3)), [(- 1), 0]
let lean_s3365 := by R1 lean_s3364, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s3366 := by R2 lean_s3365, lean_s744, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
have lean_s3367 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e1 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e3 (op e4 e0)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e1)) (Eq e0 (op e4 e4))))))))))))) := by R1 lean_s3366, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s3368 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e1 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e3 (op e4 e0)) (Or (Eq e0 (op e4 e1)) (Eq e0 (op e4 e4)))))))))) := by factor lean_s3367, (- 1)
have lean_s3369 : (Or (Eq e1 (op e0 e3)) (Or (Eq e1 (op e1 e3)) (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e4 e3)))))) := by andElim lean_s647, 33
have lean_s3370 : (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e4 e3)) (Or (Eq e1 (op e0 e3)) (Or (Eq e1 (op e1 e3)) (Eq e1 (op e3 e3)))))) := by permutateOr lean_s3369, [2, 4, 0, 1, 3], (- 1)
have lean_s3371 : (Or (And (Not (Eq (op e1 e1) (op e1 e3))) (Eq e1 (op e1 e1))) (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Not (Eq e1 (op e1 e1))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e1 e3))), (Eq e1 (op e1 e1))]
have lean_s3372 : (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e3))))) :=
  (scope (fun lean_a647 : (Not (Eq (op e1 e1) (op e1 e3))) =>
    (scope (fun lean_a648 : (Eq e1 (op e1 e1)) =>
      have lean_s3372 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a648
      have lean_s3373 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s3372
      let lean_s3374 := by timed flipCongrArg lean_s3373 [Eq]
      have lean_s3375 : (Eq (op e1 e3) (op e1 e3)) := by timed rfl
      have lean_s3376 : (Eq (Eq e1 (op e1 e3)) (Eq (op e1 e1) (op e1 e3))) := by timed congr lean_s3374 lean_s3375
      have lean_s3377 : (Eq (Eq (op e1 e1) (op e1 e3)) False) := by timed falseIntro lean_a647
      have lean_s3378 : (Eq (Eq e1 (op e1 e3)) False) := by timed Eq.trans lean_s3376 lean_s3377
      have lean_s3379 : (Not (Eq e1 (op e1 e3))) := by timed falseElim lean_s3378
      show (Not (Eq e1 (op e1 e3))) from lean_s3379
  ))))
have lean_s3373 : (Implies (And (Not (Eq (op e1 e1) (op e1 e3))) (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e3)))) := by liftOrNToImp lean_s3372, 2
have lean_s3374 : (Or (Not (And (Not (Eq (op e1 e1) (op e1 e3))) (Eq e1 (op e1 e1)))) (Not (Eq e1 (op e1 e3)))) := by timed impliesElim lean_s3373
have lean_s3375 : (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e3))))) := by R1 lean_s3371, lean_s3374, (And (Not (Eq (op e1 e1) (op e1 e3))) (Eq e1 (op e1 e1))), [(- 1), (- 1)]
have lean_s3376 : (Eq Or Or) := by timed rfl
let lean_s3377 := by timed congr lean_s3376 lean_s2567
let lean_s3378 := by timed congr lean_s3376 lean_s730
have lean_s3379 : (Eq (Not (Eq e1 (op e1 e3))) (Not (Eq e1 (op e1 e3)))) := by timed rfl
let lean_s3380 := by timed congr lean_s3378 lean_s3379
have lean_s3381 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e1 e3)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e3))))) (Or (Eq (op e1 e1) (op e1 e3)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e3)))))) := by timed congr lean_s3377 lean_s3380
have lean_s3382 : (Or (Eq (op e1 e1) (op e1 e3)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e3))))) := by timed eqResolve lean_s3375 lean_s3381
let lean_s3383 := by R1 lean_s3382, lean_s2582, (Eq (op e1 e1) (op e1 e3)), [(- 1), 0]
have lean_s3384 : (Not (Eq e1 (op e1 e3))) := by R2 lean_s3383, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s3385 := by R1 lean_s3370, lean_s3384, (Eq e1 (op e1 e3)), [(- 1), 0]
have lean_s3386 : (Or (And (Not (Eq (op e0 e2) (op e0 e3))) (Eq e1 (op e0 e2))) (Or (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Not (Eq e1 (op e0 e2))))) := by timed cnfAndNeg [(Not (Eq (op e0 e2) (op e0 e3))), (Eq e1 (op e0 e2))]
have lean_s3387 : (Or (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Or (Not (Eq e1 (op e0 e2))) (Not (Eq e1 (op e0 e3))))) :=
  (scope (fun lean_a647 : (Not (Eq (op e0 e2) (op e0 e3))) =>
    (scope (fun lean_a648 : (Eq e1 (op e0 e2)) =>
      have lean_s3387 : (Eq (op e0 e2) e1) := by timed Eq.symm lean_a648
      have lean_s3388 : (Eq e1 (op e0 e2)) := by timed Eq.symm lean_s3387
      let lean_s3389 := by timed flipCongrArg lean_s3388 [Eq]
      have lean_s3390 : (Eq (op e0 e3) (op e0 e3)) := by timed rfl
      have lean_s3391 : (Eq (Eq e1 (op e0 e3)) (Eq (op e0 e2) (op e0 e3))) := by timed congr lean_s3389 lean_s3390
      have lean_s3392 : (Eq (Eq (op e0 e2) (op e0 e3)) False) := by timed falseIntro lean_a647
      have lean_s3393 : (Eq (Eq e1 (op e0 e3)) False) := by timed Eq.trans lean_s3391 lean_s3392
      have lean_s3394 : (Not (Eq e1 (op e0 e3))) := by timed falseElim lean_s3393
      show (Not (Eq e1 (op e0 e3))) from lean_s3394
  ))))
have lean_s3388 : (Implies (And (Not (Eq (op e0 e2) (op e0 e3))) (Eq e1 (op e0 e2))) (Not (Eq e1 (op e0 e3)))) := by liftOrNToImp lean_s3387, 2
have lean_s3389 : (Or (Not (And (Not (Eq (op e0 e2) (op e0 e3))) (Eq e1 (op e0 e2)))) (Not (Eq e1 (op e0 e3)))) := by timed impliesElim lean_s3388
have lean_s3390 : (Or (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Or (Not (Eq e1 (op e0 e2))) (Not (Eq e1 (op e0 e3))))) := by R1 lean_s3386, lean_s3389, (And (Not (Eq (op e0 e2) (op e0 e3))) (Eq e1 (op e0 e2))), [(- 1), (- 1)]
have lean_s3391 : (Eq Or Or) := by timed rfl
have lean_s3392 : (Eq (Eq (op e0 e2) (op e0 e3)) (Eq (op e0 e2) (op e0 e3))) := by timed rfl
let lean_s3393 := by timed flipCongrArg lean_s3392 [Eq]
have lean_s3394 : (Eq (Eq (Eq (op e0 e2) (op e0 e3)) (Not (Not (Eq (op e0 e2) (op e0 e3))))) (Eq (Eq (op e0 e2) (op e0 e3)) (Eq (op e0 e2) (op e0 e3)))) := by timed congr lean_s3393 lean_r22
have lean_s3395 : (Eq (Eq (Eq (op e0 e2) (op e0 e3)) (Not (Not (Eq (op e0 e2) (op e0 e3))))) True) := by timed Eq.trans lean_s3394 lean_r24
have lean_s3396 : (Eq (Eq (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Eq (op e0 e2) (op e0 e3))) True) := by timed Eq.trans lean_r20 lean_s3395
have lean_s3397 : (Eq (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Eq (op e0 e2) (op e0 e3))) := by timed trueElim lean_s3396
let lean_s3398 := by timed congr lean_s3391 lean_s3397
have lean_s3399 : (Eq (Not (Eq e1 (op e0 e2))) (Not (Eq e1 (op e0 e2)))) := by timed rfl
let lean_s3400 := by timed congr lean_s3391 lean_s3399
have lean_s3401 : (Eq (Not (Eq e1 (op e0 e3))) (Not (Eq e1 (op e0 e3)))) := by timed rfl
let lean_s3402 := by timed congr lean_s3400 lean_s3401
have lean_s3403 : (Eq (Or (Not (Not (Eq (op e0 e2) (op e0 e3)))) (Or (Not (Eq e1 (op e0 e2))) (Not (Eq e1 (op e0 e3))))) (Or (Eq (op e0 e2) (op e0 e3)) (Or (Not (Eq e1 (op e0 e2))) (Not (Eq e1 (op e0 e3)))))) := by timed congr lean_s3398 lean_s3402
have lean_s3404 : (Or (Eq (op e0 e2) (op e0 e3)) (Or (Not (Eq e1 (op e0 e2))) (Not (Eq e1 (op e0 e3))))) := by timed eqResolve lean_s3390 lean_s3403
let lean_s3405 := by R1 lean_s3385, lean_s3404, (Eq e1 (op e0 e3)), [(- 1), (- 1)]
have lean_s3406 : (Not (Eq (op e0 e2) (op e0 e3))) := by andElim lean_s29, 57
let lean_s3407 := by R1 lean_s3405, lean_s3406, (Eq (op e0 e2) (op e0 e3)), [(- 1), 0]
have lean_s3408 : (Or (And (Not (Eq (op e0 e2) (op e0 e4))) (And (Eq e1 (op e0 e2)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e2) (op e0 e4))), (Eq e1 (op e0 e2)), (Eq e3 (op e0 e4)), (Eq e3 (op e3 e3))]
have lean_s3409 : (Or (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) :=
  (scope (fun lean_a649 : (Not (Eq (op e0 e2) (op e0 e4))) =>
    (scope (fun lean_a650 : (Eq e1 (op e0 e2)) =>
      (scope (fun lean_a651 : (Eq e3 (op e0 e4)) =>
        (scope (fun lean_a652 : (Eq e3 (op e3 e3)) =>
          have lean_s3409 : (Eq (op e0 e2) e1) := by timed Eq.symm lean_a650
          have lean_s3410 : (Eq e1 (op e0 e2)) := by timed Eq.symm lean_s3409
          let lean_s3411 := by timed flipCongrArg lean_s3410 [Eq]
          have lean_s3412 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a652
          have lean_s3413 : (Eq (op e0 e4) e3) := by timed Eq.symm lean_a651
          have lean_s3414 : (Eq e3 (op e0 e4)) := by timed Eq.symm lean_s3413
          have lean_s3415 : (Eq (op e3 e3) (op e0 e4)) := by timed Eq.trans lean_s3412 lean_s3414
          have lean_s3416 : (Eq (Eq e1 (op e3 e3)) (Eq (op e0 e2) (op e0 e4))) := by timed congr lean_s3411 lean_s3415
          have lean_s3417 : (Eq (Eq (op e0 e2) (op e0 e4)) False) := by timed falseIntro lean_a649
          have lean_s3418 : (Eq (Eq e1 (op e3 e3)) False) := by timed Eq.trans lean_s3416 lean_s3417
          have lean_s3419 : (Not (Eq e1 (op e3 e3))) := by timed falseElim lean_s3418
          show (Not (Eq e1 (op e3 e3))) from lean_s3419
  ))))))))
have lean_s3410 : (Implies (And (Not (Eq (op e0 e2) (op e0 e4))) (And (Eq e1 (op e0 e2)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e1 (op e3 e3)))) := by liftOrNToImp lean_s3409, 4
have lean_s3411 : (Or (Not (And (Not (Eq (op e0 e2) (op e0 e4))) (And (Eq e1 (op e0 e2)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3)))))) (Not (Eq e1 (op e3 e3)))) := by timed impliesElim lean_s3410
have lean_s3412 : (Or (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) := by R1 lean_s3408, lean_s3411, (And (Not (Eq (op e0 e2) (op e0 e4))) (And (Eq e1 (op e0 e2)) (And (Eq e3 (op e0 e4)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s3413 : (Eq Or Or) := by timed rfl
have lean_s3414 : (Eq (Eq (op e0 e2) (op e0 e4)) (Eq (op e0 e2) (op e0 e4))) := by timed rfl
let lean_s3415 := by timed flipCongrArg lean_s3414 [Eq]
have lean_s3416 : (Eq (Eq (Eq (op e0 e2) (op e0 e4)) (Not (Not (Eq (op e0 e2) (op e0 e4))))) (Eq (Eq (op e0 e2) (op e0 e4)) (Eq (op e0 e2) (op e0 e4)))) := by timed congr lean_s3415 lean_r13
have lean_s3417 : (Eq (Eq (Eq (op e0 e2) (op e0 e4)) (Not (Not (Eq (op e0 e2) (op e0 e4))))) True) := by timed Eq.trans lean_s3416 lean_r183
have lean_s3418 : (Eq (Eq (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Eq (op e0 e2) (op e0 e4))) True) := by timed Eq.trans lean_r12 lean_s3417
have lean_s3419 : (Eq (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Eq (op e0 e2) (op e0 e4))) := by timed trueElim lean_s3418
let lean_s3420 := by timed congr lean_s3413 lean_s3419
let lean_s3421 := by timed congr lean_s3413 lean_s3399
let lean_s3422 := by timed congr lean_s3413 lean_s1444
let lean_s3423 := by timed congr lean_s3413 lean_s17
have lean_s3424 : (Eq (Not (Eq e1 (op e3 e3))) (Not (Eq e1 (op e3 e3)))) := by timed rfl
let lean_s3425 := by timed congr lean_s3423 lean_s3424
let lean_s3426 := by timed congr lean_s3422 lean_s3425
let lean_s3427 := by timed congr lean_s3421 lean_s3426
have lean_s3428 : (Eq (Or (Not (Not (Eq (op e0 e2) (op e0 e4)))) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) (Or (Eq (op e0 e2) (op e0 e4)) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3)))))))) := by timed congr lean_s3420 lean_s3427
have lean_s3429 : (Or (Eq (op e0 e2) (op e0 e4)) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) := by timed eqResolve lean_s3412 lean_s3428
have lean_s3430 : (Or (Eq (op e0 e2) (op e0 e4)) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e1 (op e3 e3))))))) := by permutateOr lean_s3429, [0, 3, 1, 2, 4], (- 1)
let lean_s3431 := by R1 lean_s3407, lean_s3430, (Eq e1 (op e3 e3)), [(- 1), (- 1)]
have lean_s3432 : (Not (Eq (op e0 e2) (op e0 e4))) := by andElim lean_s29, 58
let lean_s3433 := by R1 lean_s3431, lean_s3432, (Eq (op e0 e2) (op e0 e4)), [(- 1), 0]
have lean_s3434 : (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e4 e3)) (Or (Not (Eq e1 (op e0 e2))) (Or (Not (Eq e1 (op e0 e2))) (Not (Eq e3 (op e0 e4))))))) := by R2 lean_s3433, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
have lean_s3435 : (Or (Eq e1 (op e2 e3)) (Or (Eq e1 (op e4 e3)) (Or (Not (Eq e1 (op e0 e2))) (Not (Eq e3 (op e0 e4)))))) := by factor lean_s3434, (- 1)
have lean_s3436 : (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e1 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e1 (op e3 e2)) (Eq e1 (op e4 e2)))))) := by andElim lean_s647, 23
have lean_s3437 : (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e0 e2)) (Or (Eq e1 (op e1 e2)) (Eq e1 (op e2 e2)))))) := by permutateOr lean_s3436, [3, 4, 0, 1, 2], (- 1)
let lean_s3438 := by R2 lean_s3435, lean_s3437, (Eq e1 (op e0 e2)), [(- 1), (- 1)]
have lean_s3439 : (Or (And (Not (Eq (op e1 e1) (op e1 e2))) (Eq e1 (op e1 e1))) (Or (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Not (Eq e1 (op e1 e1))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e1 e2))), (Eq e1 (op e1 e1))]
have lean_s3440 : (Or (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e2))))) :=
  (scope (fun lean_a650 : (Not (Eq (op e1 e1) (op e1 e2))) =>
    (scope (fun lean_a651 : (Eq e1 (op e1 e1)) =>
      have lean_s3440 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a651
      have lean_s3441 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s3440
      let lean_s3442 := by timed flipCongrArg lean_s3441 [Eq]
      have lean_s3443 : (Eq (op e1 e2) (op e1 e2)) := by timed rfl
      have lean_s3444 : (Eq (Eq e1 (op e1 e2)) (Eq (op e1 e1) (op e1 e2))) := by timed congr lean_s3442 lean_s3443
      have lean_s3445 : (Eq (Eq (op e1 e1) (op e1 e2)) False) := by timed falseIntro lean_a650
      have lean_s3446 : (Eq (Eq e1 (op e1 e2)) False) := by timed Eq.trans lean_s3444 lean_s3445
      have lean_s3447 : (Not (Eq e1 (op e1 e2))) := by timed falseElim lean_s3446
      show (Not (Eq e1 (op e1 e2))) from lean_s3447
  ))))
have lean_s3441 : (Implies (And (Not (Eq (op e1 e1) (op e1 e2))) (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e2)))) := by liftOrNToImp lean_s3440, 2
have lean_s3442 : (Or (Not (And (Not (Eq (op e1 e1) (op e1 e2))) (Eq e1 (op e1 e1)))) (Not (Eq e1 (op e1 e2)))) := by timed impliesElim lean_s3441
have lean_s3443 : (Or (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e2))))) := by R1 lean_s3439, lean_s3442, (And (Not (Eq (op e1 e1) (op e1 e2))) (Eq e1 (op e1 e1))), [(- 1), (- 1)]
have lean_s3444 : (Eq Or Or) := by timed rfl
have lean_s3445 : (Eq (Eq (op e1 e1) (op e1 e2)) (Eq (op e1 e1) (op e1 e2))) := by timed rfl
let lean_s3446 := by timed flipCongrArg lean_s3445 [Eq]
have lean_s3447 : (Eq (Eq (Eq (op e1 e1) (op e1 e2)) (Not (Not (Eq (op e1 e1) (op e1 e2))))) (Eq (Eq (op e1 e1) (op e1 e2)) (Eq (op e1 e1) (op e1 e2)))) := by timed congr lean_s3446 lean_r15
have lean_s3448 : (Eq (Eq (Eq (op e1 e1) (op e1 e2)) (Not (Not (Eq (op e1 e1) (op e1 e2))))) True) := by timed Eq.trans lean_s3447 lean_r16
have lean_s3449 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Eq (op e1 e1) (op e1 e2))) True) := by timed Eq.trans lean_r14 lean_s3448
have lean_s3450 : (Eq (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Eq (op e1 e1) (op e1 e2))) := by timed trueElim lean_s3449
let lean_s3451 := by timed congr lean_s3444 lean_s3450
let lean_s3452 := by timed congr lean_s3444 lean_s730
have lean_s3453 : (Eq (Not (Eq e1 (op e1 e2))) (Not (Eq e1 (op e1 e2)))) := by timed rfl
let lean_s3454 := by timed congr lean_s3452 lean_s3453
have lean_s3455 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e1 e2)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e2))))) (Or (Eq (op e1 e1) (op e1 e2)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e2)))))) := by timed congr lean_s3451 lean_s3454
have lean_s3456 : (Or (Eq (op e1 e1) (op e1 e2)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e1 e2))))) := by timed eqResolve lean_s3443 lean_s3455
have lean_s3457 : (Not (Eq (op e1 e1) (op e1 e2))) := by andElim lean_s29, 64
let lean_s3458 := by R1 lean_s3456, lean_s3457, (Eq (op e1 e1) (op e1 e2)), [(- 1), 0]
have lean_s3459 : (Not (Eq e1 (op e1 e2))) := by R2 lean_s3458, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s3460 := by R1 lean_s3438, lean_s3459, (Eq e1 (op e1 e2)), [(- 1), 0]
have lean_s3461 : (Or (And (Not (Eq e1 e0)) (Eq e0 (op e3 e2))) (Or (Not (Not (Eq e1 e0))) (Not (Eq e0 (op e3 e2))))) := by timed cnfAndNeg [(Not (Eq e1 e0)), (Eq e0 (op e3 e2))]
have lean_s3462 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e3 e2))) (Not (Eq e1 (op e3 e2))))) :=
  (scope (fun lean_a651 : (Not (Eq e1 e0)) =>
    (scope (fun lean_a652 : (Eq e0 (op e3 e2)) =>
      have lean_s3462 : (Eq e1 e1) := by timed rfl
      let lean_s3463 := by timed flipCongrArg lean_s3462 [Eq]
      have lean_s3464 : (Eq (op e3 e2) e0) := by timed Eq.symm lean_a652
      have lean_s3465 : (Eq (Eq e1 (op e3 e2)) (Eq e1 e0)) := by timed congr lean_s3463 lean_s3464
      have lean_s3466 : (Eq (Eq e1 e0) False) := by timed falseIntro lean_a651
      have lean_s3467 : (Eq (Eq e1 (op e3 e2)) False) := by timed Eq.trans lean_s3465 lean_s3466
      have lean_s3468 : (Not (Eq e1 (op e3 e2))) := by timed falseElim lean_s3467
      show (Not (Eq e1 (op e3 e2))) from lean_s3468
  ))))
have lean_s3463 : (Implies (And (Not (Eq e1 e0)) (Eq e0 (op e3 e2))) (Not (Eq e1 (op e3 e2)))) := by liftOrNToImp lean_s3462, 2
have lean_s3464 : (Or (Not (And (Not (Eq e1 e0)) (Eq e0 (op e3 e2)))) (Not (Eq e1 (op e3 e2)))) := by timed impliesElim lean_s3463
have lean_s3465 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e3 e2))) (Not (Eq e1 (op e3 e2))))) := by R1 lean_s3461, lean_s3464, (And (Not (Eq e1 e0)) (Eq e0 (op e3 e2))), [(- 1), (- 1)]
have lean_s3466 : (Eq Or Or) := by timed rfl
let lean_s3467 := by timed congr lean_s3466 lean_s781
have lean_s3468 : (Eq (Not (Eq e0 (op e3 e2))) (Not (Eq e0 (op e3 e2)))) := by timed rfl
let lean_s3469 := by timed congr lean_s3466 lean_s3468
have lean_s3470 : (Eq (Not (Eq e1 (op e3 e2))) (Not (Eq e1 (op e3 e2)))) := by timed rfl
let lean_s3471 := by timed congr lean_s3469 lean_s3470
have lean_s3472 : (Eq (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e3 e2))) (Not (Eq e1 (op e3 e2))))) (Or (Eq e1 e0) (Or (Not (Eq e0 (op e3 e2))) (Not (Eq e1 (op e3 e2)))))) := by timed congr lean_s3467 lean_s3471
have lean_s3473 : (Or (Eq e1 e0) (Or (Not (Eq e0 (op e3 e2))) (Not (Eq e1 (op e3 e2))))) := by timed eqResolve lean_s3465 lean_s3472
let lean_s3474 := by R1 lean_s3460, lean_s3473, (Eq e1 (op e3 e2)), [(- 1), (- 1)]
let lean_s3475 := by R1 lean_s3474, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s3476 : (Or (And (Not (Eq e1 e0)) (Eq e0 (op e4 e3))) (Or (Not (Not (Eq e1 e0))) (Not (Eq e0 (op e4 e3))))) := by timed cnfAndNeg [(Not (Eq e1 e0)), (Eq e0 (op e4 e3))]
have lean_s3477 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e1 (op e4 e3))))) :=
  (scope (fun lean_a652 : (Not (Eq e1 e0)) =>
    (scope (fun lean_a653 : (Eq e0 (op e4 e3)) =>
      have lean_s3477 : (Eq e1 e1) := by timed rfl
      let lean_s3478 := by timed flipCongrArg lean_s3477 [Eq]
      have lean_s3479 : (Eq (op e4 e3) e0) := by timed Eq.symm lean_a653
      have lean_s3480 : (Eq (Eq e1 (op e4 e3)) (Eq e1 e0)) := by timed congr lean_s3478 lean_s3479
      have lean_s3481 : (Eq (Eq e1 e0) False) := by timed falseIntro lean_a652
      have lean_s3482 : (Eq (Eq e1 (op e4 e3)) False) := by timed Eq.trans lean_s3480 lean_s3481
      have lean_s3483 : (Not (Eq e1 (op e4 e3))) := by timed falseElim lean_s3482
      show (Not (Eq e1 (op e4 e3))) from lean_s3483
  ))))
have lean_s3478 : (Implies (And (Not (Eq e1 e0)) (Eq e0 (op e4 e3))) (Not (Eq e1 (op e4 e3)))) := by liftOrNToImp lean_s3477, 2
have lean_s3479 : (Or (Not (And (Not (Eq e1 e0)) (Eq e0 (op e4 e3)))) (Not (Eq e1 (op e4 e3)))) := by timed impliesElim lean_s3478
have lean_s3480 : (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e1 (op e4 e3))))) := by R1 lean_s3476, lean_s3479, (And (Not (Eq e1 e0)) (Eq e0 (op e4 e3))), [(- 1), (- 1)]
have lean_s3481 : (Eq Or Or) := by timed rfl
let lean_s3482 := by timed congr lean_s3481 lean_s781
let lean_s3483 := by timed congr lean_s3481 lean_s872
let lean_s3484 := by timed congr lean_s3483 lean_s2711
have lean_s3485 : (Eq (Or (Not (Not (Eq e1 e0))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e1 (op e4 e3))))) (Or (Eq e1 e0) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e1 (op e4 e3)))))) := by timed congr lean_s3482 lean_s3484
have lean_s3486 : (Or (Eq e1 e0) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e1 (op e4 e3))))) := by timed eqResolve lean_s3480 lean_s3485
let lean_s3487 := by R1 lean_s3475, lean_s3486, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
let lean_s3488 := by R1 lean_s3487, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s3489 : (Or (Eq e0 (op e0 e2)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Or (Eq e0 (op e3 e2)) (Eq e0 (op e4 e2)))))) := by andElim lean_s647, 21
have lean_s3490 : (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e0 e2)) (Eq e0 (op e2 e2)))))) := by permutateOr lean_s3489, [3, 4, 1, 0, 2], (- 1)
let lean_s3491 := by R2 lean_s3488, lean_s3490, (Eq e0 (op e3 e2)), [(- 1), (- 1)]
have lean_s3492 : (Or (And (Not (Eq (op e0 e0) (op e0 e2))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e2))), (Eq e0 (op e0 e0))]
have lean_s3493 : (Or (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e2))))) :=
  (scope (fun lean_a652 : (Not (Eq (op e0 e0) (op e0 e2))) =>
    (scope (fun lean_a653 : (Eq e0 (op e0 e0)) =>
      have lean_s3493 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a653
      have lean_s3494 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s3493
      let lean_s3495 := by timed flipCongrArg lean_s3494 [Eq]
      have lean_s3496 : (Eq (op e0 e2) (op e0 e2)) := by timed rfl
      have lean_s3497 : (Eq (Eq e0 (op e0 e2)) (Eq (op e0 e0) (op e0 e2))) := by timed congr lean_s3495 lean_s3496
      have lean_s3498 : (Eq (Eq (op e0 e0) (op e0 e2)) False) := by timed falseIntro lean_a652
      have lean_s3499 : (Eq (Eq e0 (op e0 e2)) False) := by timed Eq.trans lean_s3497 lean_s3498
      have lean_s3500 : (Not (Eq e0 (op e0 e2))) := by timed falseElim lean_s3499
      show (Not (Eq e0 (op e0 e2))) from lean_s3500
  ))))
have lean_s3494 : (Implies (And (Not (Eq (op e0 e0) (op e0 e2))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e2)))) := by liftOrNToImp lean_s3493, 2
have lean_s3495 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e2))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e0 e2)))) := by timed impliesElim lean_s3494
have lean_s3496 : (Or (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e2))))) := by R1 lean_s3492, lean_s3495, (And (Not (Eq (op e0 e0) (op e0 e2))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s3497 : (Eq Or Or) := by timed rfl
have lean_s3498 : (Eq (Eq (op e0 e0) (op e0 e2)) (Eq (op e0 e0) (op e0 e2))) := by timed rfl
let lean_s3499 := by timed flipCongrArg lean_s3498 [Eq]
have lean_s3500 : (Eq (Eq (Eq (op e0 e0) (op e0 e2)) (Not (Not (Eq (op e0 e0) (op e0 e2))))) (Eq (Eq (op e0 e0) (op e0 e2)) (Eq (op e0 e0) (op e0 e2)))) := by timed congr lean_s3499 lean_r17
have lean_s3501 : (Eq (Eq (Eq (op e0 e0) (op e0 e2)) (Not (Not (Eq (op e0 e0) (op e0 e2))))) True) := by timed Eq.trans lean_s3500 lean_r33
have lean_s3502 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Eq (op e0 e0) (op e0 e2))) True) := by timed Eq.trans lean_r174 lean_s3501
have lean_s3503 : (Eq (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Eq (op e0 e0) (op e0 e2))) := by timed trueElim lean_s3502
let lean_s3504 := by timed congr lean_s3497 lean_s3503
let lean_s3505 := by timed congr lean_s3497 lean_s759
have lean_s3506 : (Eq (Not (Eq e0 (op e0 e2))) (Not (Eq e0 (op e0 e2)))) := by timed rfl
let lean_s3507 := by timed congr lean_s3505 lean_s3506
have lean_s3508 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e2)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e2))))) (Or (Eq (op e0 e0) (op e0 e2)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e2)))))) := by timed congr lean_s3504 lean_s3507
have lean_s3509 : (Or (Eq (op e0 e0) (op e0 e2)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e0 e2))))) := by timed eqResolve lean_s3496 lean_s3508
have lean_s3510 : (Not (Eq (op e0 e0) (op e0 e2))) := by andElim lean_s29, 51
let lean_s3511 := by R1 lean_s3509, lean_s3510, (Eq (op e0 e0) (op e0 e2)), [(- 1), 0]
have lean_s3512 : (Not (Eq e0 (op e0 e2))) := by R2 lean_s3511, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s3513 := by R1 lean_s3491, lean_s3512, (Eq e0 (op e0 e2)), [(- 1), 0]
have lean_s3514 : (Or (And (Eq e0 (op e4 e3)) (Eq e0 (op e4 e2))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e0 (op e4 e2))))) := by timed cnfAndNeg [(Eq e0 (op e4 e3)), (Eq e0 (op e4 e2))]
have lean_s3515 : (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e0 (op e4 e2))) (Eq (op e4 e2) (op e4 e3)))) :=
  (scope (fun lean_a653 : (Eq e0 (op e4 e3)) =>
    (scope (fun lean_a654 : (Eq e0 (op e4 e2)) =>
      have lean_s3515 : (Eq (op e4 e2) e0) := by timed Eq.symm lean_a654
      have lean_s3516 : (Eq (op e4 e3) e0) := by timed Eq.symm lean_a653
      have lean_s3517 : (Eq e0 (op e4 e3)) := by timed Eq.symm lean_s3516
      have lean_s3518 : (Eq (op e4 e2) (op e4 e3)) := by timed Eq.trans lean_s3515 lean_s3517
      show (Eq (op e4 e2) (op e4 e3)) from lean_s3518
  ))))
have lean_s3516 : (Implies (And (Eq e0 (op e4 e3)) (Eq e0 (op e4 e2))) (Eq (op e4 e2) (op e4 e3))) := by liftOrNToImp lean_s3515, 2
have lean_s3517 : (Or (Not (And (Eq e0 (op e4 e3)) (Eq e0 (op e4 e2)))) (Eq (op e4 e2) (op e4 e3))) := by timed impliesElim lean_s3516
have lean_s3518 : (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e0 (op e4 e2))) (Eq (op e4 e2) (op e4 e3)))) := by R1 lean_s3514, lean_s3517, (And (Eq e0 (op e4 e3)) (Eq e0 (op e4 e2))), [(- 1), (- 1)]
have lean_s3519 : (Or (Eq (op e4 e2) (op e4 e3)) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e0 (op e4 e3))))) := by permutateOr lean_s3518, [2, 1, 0], (- 1)
let lean_s3520 := by R1 lean_s3513, lean_s3519, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
have lean_s3521 : (Or (Eq e1 (op e2 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e0 (op e4 e3))) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Not (Eq e0 (op e4 e3)))))))))) := by R1 lean_s3520, lean_s850, (Eq (op e4 e2) (op e4 e3)), [(- 1), 0]
have lean_s3522 : (Or (Eq e1 (op e2 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e0 (op e4 e3))) (Or (Eq e0 (op e1 e2)) (Eq e0 (op e2 e2)))))))) := by factor lean_s3521, 7
have lean_s3523 : (Or (Eq e1 (op e4 e2)) (Or (Eq e1 (op e2 e3)) (Or (Eq e0 (op e1 e2)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e0 (op e4 e3))))))))) := by permutateOr lean_s3522, [2, 0, 5, 6, 3, 1, 4], (- 1)
let lean_s3524 := by R1 lean_s3368, lean_s3523, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
have lean_s3525 : (Or (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e2))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e0 (op e1 e2))))) := by timed cnfAndNeg [(Eq e0 (op e1 e4)), (Eq e0 (op e1 e2))]
have lean_s3526 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e0 (op e1 e2))) (Eq (op e1 e2) (op e1 e4)))) :=
  (scope (fun lean_a653 : (Eq e0 (op e1 e4)) =>
    (scope (fun lean_a654 : (Eq e0 (op e1 e2)) =>
      have lean_s3526 : (Eq (op e1 e2) e0) := by timed Eq.symm lean_a654
      have lean_s3527 : (Eq (op e1 e4) e0) := by timed Eq.symm lean_a653
      have lean_s3528 : (Eq e0 (op e1 e4)) := by timed Eq.symm lean_s3527
      have lean_s3529 : (Eq (op e1 e2) (op e1 e4)) := by timed Eq.trans lean_s3526 lean_s3528
      show (Eq (op e1 e2) (op e1 e4)) from lean_s3529
  ))))
have lean_s3527 : (Implies (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e2))) (Eq (op e1 e2) (op e1 e4))) := by liftOrNToImp lean_s3526, 2
have lean_s3528 : (Or (Not (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e2)))) (Eq (op e1 e2) (op e1 e4))) := by timed impliesElim lean_s3527
have lean_s3529 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e0 (op e1 e2))) (Eq (op e1 e2) (op e1 e4)))) := by R1 lean_s3525, lean_s3528, (And (Eq e0 (op e1 e4)) (Eq e0 (op e1 e2))), [(- 1), (- 1)]
have lean_s3530 : (Or (Eq (op e1 e2) (op e1 e4)) (Or (Not (Eq e0 (op e1 e2))) (Not (Eq e0 (op e1 e4))))) := by permutateOr lean_s3529, [2, 1, 0], (- 1)
let lean_s3531 := by R1 lean_s3524, lean_s3530, (Eq e0 (op e1 e2)), [(- 1), (- 1)]
have lean_s3532 : (Not (Eq (op e1 e2) (op e1 e4))) := by andElim lean_s29, 68
let lean_s3533 := by R1 lean_s3531, lean_s3532, (Eq (op e1 e2) (op e1 e4)), [(- 1), 0]
let lean_s3534 := by R1 lean_s3533, lean_s2040, (Eq e0 (op e1 e3)), [(- 1), (- 1)]
let lean_s3535 := by R1 lean_s3534, lean_s2041, (Eq (op e1 e3) (op e1 e4)), [(- 1), 0]
have lean_s3536 : (Eq (Not (And (And (Eq e0 (op e1 e4)) (Eq e1 (op e4 e2))) (Eq e2 (op e3 e4)))) (Not (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4)))))) := by timed flipCongrArg lean_r18 [Not]
have lean_s3537 : (Not (And (Eq e0 (op e1 e4)) (And (Eq e1 (op e4 e2)) (Eq e2 (op e3 e4))))) := by timed eqResolve lean_a531 lean_s3536
have lean_s3538 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e3 e4))))) := by timed flipNotAnd lean_s3537 [(Eq e0 (op e1 e4)), (Eq e1 (op e4 e2)), (Eq e2 (op e3 e4))]
have lean_s3539 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e1 (op e4 e2))))) := by permutateOr lean_s3538, [0, 2, 1], (- 1)
let lean_s3540 := by R1 lean_s3535, lean_s3539, (Eq e1 (op e4 e2)), [(- 1), (- 1)]
have lean_s3541 : (Eq (Not (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e0))) (Eq e0 (op e1 e4)))) (Not (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e1 e4)))))) := by timed flipCongrArg lean_r19 [Not]
have lean_s3542 : (Not (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e0)) (Eq e0 (op e1 e4))))) := by timed eqResolve lean_a486 lean_s3541
have lean_s3543 : (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e1 e4))))) := by timed flipNotAnd lean_s3542 [(Eq e2 (op e3 e4)), (Eq e3 (op e4 e0)), (Eq e0 (op e1 e4))]
have lean_s3544 : (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e3 (op e4 e0))))) := by permutateOr lean_s3543, [2, 0, 1], (- 1)
have lean_s3545 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e2 e3)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e0 (op e1 e4))) (Not (Eq e2 (op e3 e4)))))))))))))))))) := by R1 lean_s3540, lean_s3544, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
have lean_s3546 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e0 (op e4 e1)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e2 e3)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Not (Eq e0 (op e1 e4)))))))))))) := by factor lean_s3545, 15
let lean_s3547 := by R2 lean_s3546, lean_s1632, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s3548 := by R1 lean_s3547, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
have lean_s3549 : (Or (And (Eq e1 (op e2 e4)) (Eq e1 (op e2 e3))) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e1 (op e2 e3))))) := by timed cnfAndNeg [(Eq e1 (op e2 e4)), (Eq e1 (op e2 e3))]
have lean_s3550 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e1 (op e2 e3))) (Eq (op e2 e3) (op e2 e4)))) :=
  (scope (fun lean_a653 : (Eq e1 (op e2 e4)) =>
    (scope (fun lean_a654 : (Eq e1 (op e2 e3)) =>
      have lean_s3550 : (Eq (op e2 e3) e1) := by timed Eq.symm lean_a654
      have lean_s3551 : (Eq (op e2 e4) e1) := by timed Eq.symm lean_a653
      have lean_s3552 : (Eq e1 (op e2 e4)) := by timed Eq.symm lean_s3551
      have lean_s3553 : (Eq (op e2 e3) (op e2 e4)) := by timed Eq.trans lean_s3550 lean_s3552
      show (Eq (op e2 e3) (op e2 e4)) from lean_s3553
  ))))
have lean_s3551 : (Implies (And (Eq e1 (op e2 e4)) (Eq e1 (op e2 e3))) (Eq (op e2 e3) (op e2 e4))) := by liftOrNToImp lean_s3550, 2
have lean_s3552 : (Or (Not (And (Eq e1 (op e2 e4)) (Eq e1 (op e2 e3)))) (Eq (op e2 e3) (op e2 e4))) := by timed impliesElim lean_s3551
have lean_s3553 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e1 (op e2 e3))) (Eq (op e2 e3) (op e2 e4)))) := by R1 lean_s3549, lean_s3552, (And (Eq e1 (op e2 e4)) (Eq e1 (op e2 e3))), [(- 1), (- 1)]
have lean_s3554 : (Or (Eq (op e2 e3) (op e2 e4)) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e1 (op e2 e4))))) := by permutateOr lean_s3553, [2, 1, 0], (- 1)
let lean_s3555 := by R1 lean_s3548, lean_s3554, (Eq e1 (op e2 e3)), [(- 1), (- 1)]
have lean_s3556 : (Not (Eq (op e2 e3) (op e2 e4))) := by andElim lean_s29, 79
let lean_s3557 := by R1 lean_s3555, lean_s3556, (Eq (op e2 e3) (op e2 e4)), [(- 1), 0]
let lean_s3558 := by R1 lean_s3557, lean_s2018, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s3559 := by R1 lean_s3558, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s3560 : (Eq (Not (And (And (Eq e3 (op e0 e4)) (Eq e0 (op e4 e1))) (Eq e1 (op e2 e4)))) (Not (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e2 e4)))))) := by timed flipCongrArg lean_r345 [Not]
have lean_s3561 : (Not (And (Eq e3 (op e0 e4)) (And (Eq e0 (op e4 e1)) (Eq e1 (op e2 e4))))) := by timed eqResolve lean_a511 lean_s3560
have lean_s3562 : (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e1 (op e2 e4))))) := by timed flipNotAnd lean_s3561 [(Eq e3 (op e0 e4)), (Eq e0 (op e4 e1)), (Eq e1 (op e2 e4))]
have lean_s3563 : (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e0 (op e4 e1))))) := by permutateOr lean_s3562, [0, 2, 1], (- 1)
have lean_s3564 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e1 (op e2 e4))))))))))))))) := by R1 lean_s3559, lean_s3563, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
have lean_s3565 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e3 e4)) (Not (Eq e1 (op e2 e4))))))))))) := by factor lean_s3564, (- 1)
let lean_s3566 := by R2 lean_s3565, lean_s798, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s3567 := by R1 lean_s3566, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s3568 := by R1 lean_s3567, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s3569 := by R1 lean_s3568, lean_s3143, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s3570 := by R1 lean_s3569, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s3571 := by R1 lean_s3570, lean_s1892, (Eq e2 (op e3 e3)), [(- 1), (- 1)]
let lean_s3572 := by R2 lean_s3571, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3573 := by R1 lean_s3572, lean_s1447, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
have lean_s3574 : (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e3 (op e0 e4))))))))))))) := by R1 lean_s3573, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s3575 : (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e2 e2)) (Or (Eq e1 (op e2 e2)) (Or (Eq e0 (op e3 e4)) (Eq e1 (op e3 e4))))))))) := by factor lean_s3574, 10
let lean_s3576 := by R2 lean_s3575, lean_s1428, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s3577 := by R1 lean_s3576, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3578 := by R1 lean_s3577, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s3579 : (Or (And (Not (Eq e0 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2)))) (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e2 (op e2 e2)))))) := by timed cnfAndNeg [(Not (Eq e0 (op e3 e4))), (Eq e2 (op e3 e4)), (Eq e2 (op e2 e2))]
have lean_s3580 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2)))))) :=
  (scope (fun lean_a653 : (Not (Eq e0 (op e3 e4))) =>
    (scope (fun lean_a654 : (Eq e2 (op e3 e4)) =>
      (scope (fun lean_a655 : (Eq e2 (op e2 e2)) =>
        have lean_s3580 : (Eq e0 e0) := by timed rfl
        let lean_s3581 := by timed flipCongrArg lean_s3580 [Eq]
        have lean_s3582 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a655
        have lean_s3583 : (Eq (op e3 e4) e2) := by timed Eq.symm lean_a654
        have lean_s3584 : (Eq e2 (op e3 e4)) := by timed Eq.symm lean_s3583
        have lean_s3585 : (Eq (op e2 e2) (op e3 e4)) := by timed Eq.trans lean_s3582 lean_s3584
        have lean_s3586 : (Eq (Eq e0 (op e2 e2)) (Eq e0 (op e3 e4))) := by timed congr lean_s3581 lean_s3585
        have lean_s3587 : (Eq (Eq e0 (op e3 e4)) False) := by timed falseIntro lean_a653
        have lean_s3588 : (Eq (Eq e0 (op e2 e2)) False) := by timed Eq.trans lean_s3586 lean_s3587
        have lean_s3589 : (Not (Eq e0 (op e2 e2))) := by timed falseElim lean_s3588
        show (Not (Eq e0 (op e2 e2))) from lean_s3589
  ))))))
have lean_s3581 : (Implies (And (Not (Eq e0 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2)))) (Not (Eq e0 (op e2 e2)))) := by liftOrNToImp lean_s3580, 3
have lean_s3582 : (Or (Not (And (Not (Eq e0 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2))))) (Not (Eq e0 (op e2 e2)))) := by timed impliesElim lean_s3581
have lean_s3583 : (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2)))))) := by R1 lean_s3579, lean_s3582, (And (Not (Eq e0 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2)))), [(- 1), (- 1)]
have lean_s3584 : (Eq Or Or) := by timed rfl
let lean_s3585 := by timed congr lean_s3584 lean_s726
let lean_s3586 := by timed congr lean_s3584 lean_s1802
let lean_s3587 := by timed congr lean_s3584 lean_s13
let lean_s3588 := by timed congr lean_s3587 lean_s2427
let lean_s3589 := by timed congr lean_s3586 lean_s3588
have lean_s3590 : (Eq (Or (Not (Not (Eq e0 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2)))))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) := by timed congr lean_s3585 lean_s3589
have lean_s3591 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2)))))) := by timed eqResolve lean_s3583 lean_s3590
have lean_s3592 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e0 (op e2 e2))) (Not (Eq e2 (op e3 e4)))))) := by permutateOr lean_s3591, [0, 2, 3, 1], (- 1)
let lean_s3593 := by R1 lean_s3578, lean_s3592, (Eq e0 (op e2 e2)), [(- 1), (- 1)]
let lean_s3594 := by R2 lean_s3593, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s3595 : (Or (And (Not (Eq e1 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2)))) (Or (Not (Not (Eq e1 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e2 (op e2 e2)))))) := by timed cnfAndNeg [(Not (Eq e1 (op e3 e4))), (Eq e2 (op e3 e4)), (Eq e2 (op e2 e2))]
have lean_s3596 : (Or (Not (Not (Eq e1 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2)))))) :=
  (scope (fun lean_a653 : (Not (Eq e1 (op e3 e4))) =>
    (scope (fun lean_a654 : (Eq e2 (op e3 e4)) =>
      (scope (fun lean_a655 : (Eq e2 (op e2 e2)) =>
        have lean_s3596 : (Eq e1 e1) := by timed rfl
        let lean_s3597 := by timed flipCongrArg lean_s3596 [Eq]
        have lean_s3598 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a655
        have lean_s3599 : (Eq (op e3 e4) e2) := by timed Eq.symm lean_a654
        have lean_s3600 : (Eq e2 (op e3 e4)) := by timed Eq.symm lean_s3599
        have lean_s3601 : (Eq (op e2 e2) (op e3 e4)) := by timed Eq.trans lean_s3598 lean_s3600
        have lean_s3602 : (Eq (Eq e1 (op e2 e2)) (Eq e1 (op e3 e4))) := by timed congr lean_s3597 lean_s3601
        have lean_s3603 : (Eq (Eq e1 (op e3 e4)) False) := by timed falseIntro lean_a653
        have lean_s3604 : (Eq (Eq e1 (op e2 e2)) False) := by timed Eq.trans lean_s3602 lean_s3603
        have lean_s3605 : (Not (Eq e1 (op e2 e2))) := by timed falseElim lean_s3604
        show (Not (Eq e1 (op e2 e2))) from lean_s3605
  ))))))
have lean_s3597 : (Implies (And (Not (Eq e1 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2)))) (Not (Eq e1 (op e2 e2)))) := by liftOrNToImp lean_s3596, 3
have lean_s3598 : (Or (Not (And (Not (Eq e1 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2))))) (Not (Eq e1 (op e2 e2)))) := by timed impliesElim lean_s3597
have lean_s3599 : (Or (Not (Not (Eq e1 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2)))))) := by R1 lean_s3595, lean_s3598, (And (Not (Eq e1 (op e3 e4))) (And (Eq e2 (op e3 e4)) (Eq e2 (op e2 e2)))), [(- 1), (- 1)]
have lean_s3600 : (Eq Or Or) := by timed rfl
have lean_s3601 : (Eq (Eq e1 (op e3 e4)) (Eq e1 (op e3 e4))) := by timed rfl
let lean_s3602 := by timed flipCongrArg lean_s3601 [Eq]
have lean_s3603 : (Eq (Eq (Eq e1 (op e3 e4)) (Not (Not (Eq e1 (op e3 e4))))) (Eq (Eq e1 (op e3 e4)) (Eq e1 (op e3 e4)))) := by timed congr lean_s3602 lean_r155
have lean_s3604 : (Eq (Eq (Eq e1 (op e3 e4)) (Not (Not (Eq e1 (op e3 e4))))) True) := by timed Eq.trans lean_s3603 lean_r39
have lean_s3605 : (Eq (Eq (Not (Not (Eq e1 (op e3 e4)))) (Eq e1 (op e3 e4))) True) := by timed Eq.trans lean_r120 lean_s3604
have lean_s3606 : (Eq (Not (Not (Eq e1 (op e3 e4)))) (Eq e1 (op e3 e4))) := by timed trueElim lean_s3605
let lean_s3607 := by timed congr lean_s3600 lean_s3606
let lean_s3608 := by timed congr lean_s3600 lean_s1802
let lean_s3609 := by timed congr lean_s3600 lean_s13
let lean_s3610 := by timed congr lean_s3609 lean_s2205
let lean_s3611 := by timed congr lean_s3608 lean_s3610
have lean_s3612 : (Eq (Or (Not (Not (Eq e1 (op e3 e4)))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2)))))) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2))))))) := by timed congr lean_s3607 lean_s3611
have lean_s3613 : (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e1 (op e2 e2)))))) := by timed eqResolve lean_s3599 lean_s3612
have lean_s3614 : (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e1 (op e2 e2))) (Not (Eq e2 (op e3 e4)))))) := by permutateOr lean_s3613, [0, 2, 3, 1], (- 1)
let lean_s3615 := by R1 lean_s3594, lean_s3614, (Eq e1 (op e2 e2)), [(- 1), (- 1)]
let lean_s3616 := by R2 lean_s3615, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
let lean_s3617 := by R2 lean_s981, lean_s986, (Eq e4 (op e4 (op e4 e4))), [(- 1), 0]
let lean_s3618 := by R2 lean_s3617, lean_s993, (Eq e0 (op e4 (op e4 e0))), [(- 1), (- 1)]
have lean_s3619 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 e0))) (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3)))))))) := by R2 lean_s3618, lean_s1019, (Eq e3 (op e4 (op e4 e3))), [(- 1), (- 1)]
have lean_s3620 : (Or (Not (Eq e1 (op e4 (op e4 e1)))) (Or (Not (Eq e2 (op e4 (op e4 e2)))) (Or (Not (Eq e3 (op e4 e0))) (Not (Eq e0 (op e4 e3)))))) := by factor lean_s3619, (- 1)
let lean_s3621 := by R2 lean_s3620, lean_s744, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s3622 := by R1 lean_s3621, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s3623 : (Or (And (Not (Eq e2 e0)) (Eq e0 (op e4 e1))) (Or (Not (Not (Eq e2 e0))) (Not (Eq e0 (op e4 e1))))) := by timed cnfAndNeg [(Not (Eq e2 e0)), (Eq e0 (op e4 e1))]
have lean_s3624 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e1))))) :=
  (scope (fun lean_a654 : (Not (Eq e2 e0)) =>
    (scope (fun lean_a655 : (Eq e0 (op e4 e1)) =>
      have lean_s3624 : (Eq e2 e2) := by timed rfl
      let lean_s3625 := by timed flipCongrArg lean_s3624 [Eq]
      have lean_s3626 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_a655
      have lean_s3627 : (Eq e0 (op e4 e1)) := by timed Eq.symm lean_s3626
      have lean_s3628 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_s3627
      have lean_s3629 : (Eq (Eq e2 (op e4 e1)) (Eq e2 e0)) := by timed congr lean_s3625 lean_s3628
      have lean_s3630 : (Eq (Eq e2 e0) False) := by timed falseIntro lean_a654
      have lean_s3631 : (Eq (Eq e2 (op e4 e1)) False) := by timed Eq.trans lean_s3629 lean_s3630
      have lean_s3632 : (Not (Eq e2 (op e4 e1))) := by timed falseElim lean_s3631
      show (Not (Eq e2 (op e4 e1))) from lean_s3632
  ))))
have lean_s3625 : (Implies (And (Not (Eq e2 e0)) (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e1)))) := by liftOrNToImp lean_s3624, 2
have lean_s3626 : (Or (Not (And (Not (Eq e2 e0)) (Eq e0 (op e4 e1)))) (Not (Eq e2 (op e4 e1)))) := by timed impliesElim lean_s3625
have lean_s3627 : (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e1))))) := by R1 lean_s3623, lean_s3626, (And (Not (Eq e2 e0)) (Eq e0 (op e4 e1))), [(- 1), (- 1)]
have lean_s3628 : (Eq Or Or) := by timed rfl
let lean_s3629 := by timed congr lean_s3628 lean_s1619
let lean_s3630 := by timed congr lean_s3628 lean_s1709
let lean_s3631 := by timed congr lean_s3630 lean_s21
have lean_s3632 : (Eq (Or (Not (Not (Eq e2 e0))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e1))))) (Or (Eq e2 e0) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e1)))))) := by timed congr lean_s3629 lean_s3631
have lean_s3633 : (Or (Eq e2 e0) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e1))))) := by timed eqResolve lean_s3627 lean_s3632
let lean_s3634 := by R1 lean_s3622, lean_s3633, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s3635 := by R1 lean_s3634, lean_s1628, (Eq e2 e0), [(- 1), 0]
let lean_s3636 := by R2 lean_s3635, lean_s1000, (Eq e1 (op e4 (op e4 e1))), [(- 1), (- 1)]
have lean_s3637 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e2 (op e4 e1))) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e4 e2)))))))))) := by R2 lean_s3636, lean_s1041, (Eq e2 (op e4 (op e4 e2))), [(- 1), (- 1)]
have lean_s3638 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e1))) (Not (Eq e1 (op e4 e2))))))) := by factor lean_s3637, (- 1)
let lean_s3639 := by R2 lean_s3638, lean_s649, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s3640 := by R1 lean_s3639, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s3641 := by R1 lean_s3640, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s3642 : (Or (And (Not (Eq e3 e2)) (Eq e2 (op e4 e0))) (Or (Not (Not (Eq e3 e2))) (Not (Eq e2 (op e4 e0))))) := by timed cnfAndNeg [(Not (Eq e3 e2)), (Eq e2 (op e4 e0))]
have lean_s3643 : (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0))))) :=
  (scope (fun lean_a654 : (Not (Eq e3 e2)) =>
    (scope (fun lean_a655 : (Eq e2 (op e4 e0)) =>
      have lean_s3643 : (Eq e3 e3) := by timed rfl
      let lean_s3644 := by timed flipCongrArg lean_s3643 [Eq]
      have lean_s3645 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a655
      have lean_s3646 : (Eq (Eq e3 (op e4 e0)) (Eq e3 e2)) := by timed congr lean_s3644 lean_s3645
      have lean_s3647 : (Eq (Eq e3 e2) False) := by timed falseIntro lean_a654
      have lean_s3648 : (Eq (Eq e3 (op e4 e0)) False) := by timed Eq.trans lean_s3646 lean_s3647
      have lean_s3649 : (Not (Eq e3 (op e4 e0))) := by timed falseElim lean_s3648
      show (Not (Eq e3 (op e4 e0))) from lean_s3649
  ))))
have lean_s3644 : (Implies (And (Not (Eq e3 e2)) (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0)))) := by liftOrNToImp lean_s3643, 2
have lean_s3645 : (Or (Not (And (Not (Eq e3 e2)) (Eq e2 (op e4 e0)))) (Not (Eq e3 (op e4 e0)))) := by timed impliesElim lean_s3644
have lean_s3646 : (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0))))) := by R1 lean_s3642, lean_s3645, (And (Not (Eq e3 e2)) (Eq e2 (op e4 e0))), [(- 1), (- 1)]
have lean_s3647 : (Eq Or Or) := by timed rfl
let lean_s3648 := by timed congr lean_s3647 lean_s1441
let lean_s3649 := by timed congr lean_s3647 lean_s1418
let lean_s3650 := by timed congr lean_s3649 lean_s870
have lean_s3651 : (Eq (Or (Not (Not (Eq e3 e2))) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0))))) (Or (Eq e3 e2) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0)))))) := by timed congr lean_s3648 lean_s3650
have lean_s3652 : (Or (Eq e3 e2) (Or (Not (Eq e2 (op e4 e0))) (Not (Eq e3 (op e4 e0))))) := by timed eqResolve lean_s3646 lean_s3651
let lean_s3653 := by R1 lean_s3641, lean_s3652, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
have lean_s3654 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Not (Eq e3 (op e4 e0)))))))) := by R1 lean_s3653, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s3655 : (Or (Not (Eq e3 (op e4 e0))) (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Eq e2 (op e4 e3)))))) := by factor lean_s3654, 5
let lean_s3656 := by R2 lean_s3655, lean_s1537, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
let lean_s3657 := by R1 lean_s3656, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3658 := by R1 lean_s3657, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s3659 := by R1 lean_s3658, lean_s1581, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
have lean_s3660 : (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Or (Eq e3 (op e4 e1)) (Not (Eq e1 (op e4 e2)))))))) := by R1 lean_s3659, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s3661 : (Or (Eq e0 (op e4 e2)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e2 (op e4 e3)) (Eq e3 (op e4 e1)))))) := by factor lean_s3660, 5
let lean_s3662 := by R2 lean_s3661, lean_s2218, (Eq e1 (op e4 e2)), [(- 1), (- 1)]
let lean_s3663 := by R1 lean_s3662, lean_s2240, (Eq e1 (op e4 e1)), [(- 1), 0]
let lean_s3664 := by R1 lean_s3663, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
have lean_s3665 : (Or (And (Eq e0 (op e4 e1)) (Eq e0 (op e3 e1))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e0 (op e3 e1))))) := by timed cnfAndNeg [(Eq e0 (op e4 e1)), (Eq e0 (op e3 e1))]
have lean_s3666 : (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e0 (op e3 e1))) (Eq (op e3 e1) (op e4 e1)))) :=
  (scope (fun lean_a654 : (Eq e0 (op e4 e1)) =>
    (scope (fun lean_a655 : (Eq e0 (op e3 e1)) =>
      have lean_s3666 : (Eq (op e3 e1) e0) := by timed Eq.symm lean_a655
      have lean_s3667 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_a654
      have lean_s3668 : (Eq e0 (op e4 e1)) := by timed Eq.symm lean_s3667
      have lean_s3669 : (Eq (op e3 e1) (op e4 e1)) := by timed Eq.trans lean_s3666 lean_s3668
      show (Eq (op e3 e1) (op e4 e1)) from lean_s3669
  ))))
have lean_s3667 : (Implies (And (Eq e0 (op e4 e1)) (Eq e0 (op e3 e1))) (Eq (op e3 e1) (op e4 e1))) := by liftOrNToImp lean_s3666, 2
have lean_s3668 : (Or (Not (And (Eq e0 (op e4 e1)) (Eq e0 (op e3 e1)))) (Eq (op e3 e1) (op e4 e1))) := by timed impliesElim lean_s3667
have lean_s3669 : (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e0 (op e3 e1))) (Eq (op e3 e1) (op e4 e1)))) := by R1 lean_s3665, lean_s3668, (And (Eq e0 (op e4 e1)) (Eq e0 (op e3 e1))), [(- 1), (- 1)]
have lean_s3670 : (Or (Eq (op e3 e1) (op e4 e1)) (Or (Not (Eq e0 (op e3 e1))) (Not (Eq e0 (op e4 e1))))) := by permutateOr lean_s3669, [2, 1, 0], (- 1)
have lean_s3671 : (Not (Eq (op e3 e1) (op e4 e1))) := by andElim lean_s29, 19
let lean_s3672 := by R1 lean_s3670, lean_s3671, (Eq (op e3 e1) (op e4 e1)), [(- 1), 0]
have lean_s3673 : (Or (Eq e0 (op e3 e0)) (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e3 e3)) (Eq e0 (op e3 e4)))))) := by andElim lean_s647, 30
have lean_s3674 : (Or (Eq e0 (op e3 e2)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e3 e1)) (Or (Eq e0 (op e3 e0)) (Eq e0 (op e3 e3)))))) := by permutateOr lean_s3673, [2, 4, 1, 0, 3], (- 1)
let lean_s3675 := by R2 lean_s3672, lean_s3674, (Eq e0 (op e3 e1)), [(- 1), (- 1)]
have lean_s3676 : (Or (And (Not (Eq (op e0 e0) (op e3 e0))) (Eq e0 (op e0 e0))) (Or (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Not (Eq e0 (op e0 e0))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e3 e0))), (Eq e0 (op e0 e0))]
have lean_s3677 : (Or (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e3 e0))))) :=
  (scope (fun lean_a654 : (Not (Eq (op e0 e0) (op e3 e0))) =>
    (scope (fun lean_a655 : (Eq e0 (op e0 e0)) =>
      have lean_s3677 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a655
      have lean_s3678 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s3677
      let lean_s3679 := by timed flipCongrArg lean_s3678 [Eq]
      have lean_s3680 : (Eq (op e3 e0) (op e3 e0)) := by timed rfl
      have lean_s3681 : (Eq (Eq e0 (op e3 e0)) (Eq (op e0 e0) (op e3 e0))) := by timed congr lean_s3679 lean_s3680
      have lean_s3682 : (Eq (Eq (op e0 e0) (op e3 e0)) False) := by timed falseIntro lean_a654
      have lean_s3683 : (Eq (Eq e0 (op e3 e0)) False) := by timed Eq.trans lean_s3681 lean_s3682
      have lean_s3684 : (Not (Eq e0 (op e3 e0))) := by timed falseElim lean_s3683
      show (Not (Eq e0 (op e3 e0))) from lean_s3684
  ))))
have lean_s3678 : (Implies (And (Not (Eq (op e0 e0) (op e3 e0))) (Eq e0 (op e0 e0))) (Not (Eq e0 (op e3 e0)))) := by liftOrNToImp lean_s3677, 2
have lean_s3679 : (Or (Not (And (Not (Eq (op e0 e0) (op e3 e0))) (Eq e0 (op e0 e0)))) (Not (Eq e0 (op e3 e0)))) := by timed impliesElim lean_s3678
have lean_s3680 : (Or (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e3 e0))))) := by R1 lean_s3676, lean_s3679, (And (Not (Eq (op e0 e0) (op e3 e0))) (Eq e0 (op e0 e0))), [(- 1), (- 1)]
have lean_s3681 : (Eq Or Or) := by timed rfl
have lean_s3682 : (Eq (Eq (op e0 e0) (op e3 e0)) (Eq (op e0 e0) (op e3 e0))) := by timed rfl
let lean_s3683 := by timed flipCongrArg lean_s3682 [Eq]
have lean_s3684 : (Eq (Eq (Eq (op e0 e0) (op e3 e0)) (Not (Not (Eq (op e0 e0) (op e3 e0))))) (Eq (Eq (op e0 e0) (op e3 e0)) (Eq (op e0 e0) (op e3 e0)))) := by timed congr lean_s3683 lean_r23
have lean_s3685 : (Eq (Eq (Eq (op e0 e0) (op e3 e0)) (Not (Not (Eq (op e0 e0) (op e3 e0))))) True) := by timed Eq.trans lean_s3684 lean_r25
have lean_s3686 : (Eq (Eq (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Eq (op e0 e0) (op e3 e0))) True) := by timed Eq.trans lean_r21 lean_s3685
have lean_s3687 : (Eq (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Eq (op e0 e0) (op e3 e0))) := by timed trueElim lean_s3686
let lean_s3688 := by timed congr lean_s3681 lean_s3687
let lean_s3689 := by timed congr lean_s3681 lean_s759
have lean_s3690 : (Eq (Not (Eq e0 (op e3 e0))) (Not (Eq e0 (op e3 e0)))) := by timed rfl
let lean_s3691 := by timed congr lean_s3689 lean_s3690
have lean_s3692 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e3 e0)))) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e3 e0))))) (Or (Eq (op e0 e0) (op e3 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e3 e0)))))) := by timed congr lean_s3688 lean_s3691
have lean_s3693 : (Or (Eq (op e0 e0) (op e3 e0)) (Or (Not (Eq e0 (op e0 e0))) (Not (Eq e0 (op e3 e0))))) := by timed eqResolve lean_s3680 lean_s3692
have lean_s3694 : (Not (Eq (op e0 e0) (op e3 e0))) := by andElim lean_s29, 2
let lean_s3695 := by R1 lean_s3693, lean_s3694, (Eq (op e0 e0) (op e3 e0)), [(- 1), 0]
have lean_s3696 : (Not (Eq e0 (op e3 e0))) := by R2 lean_s3695, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s3697 := by R1 lean_s3675, lean_s3696, (Eq e0 (op e3 e0)), [(- 1), 0]
have lean_s3698 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e3 e2)))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e3 e2)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e1 (op e0 e4)), (Eq e1 (op e1 e1)), (Eq e1 (op e3 e2))]
have lean_s3699 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e3 e2))) (Not (Eq e0 (op e3 e2)))))))) :=
  (scope (fun lean_a655 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a656 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a657 : (Eq e1 (op e0 e4)) =>
        (scope (fun lean_a658 : (Eq e1 (op e1 e1)) =>
          (scope (fun lean_a659 : (Eq e1 (op e3 e2)) =>
            have lean_s3699 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a656
            have lean_s3700 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s3699
            let lean_s3701 := by timed flipCongrArg lean_s3700 [Eq]
            have lean_s3702 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a658
            have lean_s3703 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a657
            have lean_s3704 : (Eq e1 (op e0 e4)) := by timed Eq.symm lean_s3703
            have lean_s3705 : (Eq (op e1 e1) (op e0 e4)) := by timed Eq.trans lean_s3702 lean_s3704
            have lean_s3706 : (Eq (op e0 e4) (op e1 e1)) := by timed Eq.symm lean_s3705
            have lean_s3707 : (Eq (op e3 e2) e1) := by timed Eq.symm lean_a659
            have lean_s3708 : (Eq (op e3 e2) (op e1 e1)) := by timed Eq.trans lean_s3707 lean_a658
            have lean_s3709 : (Eq (op e1 e1) (op e3 e2)) := by timed Eq.symm lean_s3708
            have lean_s3710 : (Eq (op e0 e4) (op e3 e2)) := by timed Eq.trans lean_s3706 lean_s3709
            have lean_s3711 : (Eq (op e3 e2) (op e0 e4)) := by timed Eq.symm lean_s3710
            have lean_s3712 : (Eq (Eq e0 (op e3 e2)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s3701 lean_s3711
            have lean_s3713 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a655
            have lean_s3714 : (Eq (Eq e0 (op e3 e2)) False) := by timed Eq.trans lean_s3712 lean_s3713
            have lean_s3715 : (Not (Eq e0 (op e3 e2))) := by timed falseElim lean_s3714
            show (Not (Eq e0 (op e3 e2))) from lean_s3715
  ))))))))))
have lean_s3700 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e3 e2)))))) (Not (Eq e0 (op e3 e2)))) := by liftOrNToImp lean_s3699, 5
have lean_s3701 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e3 e2))))))) (Not (Eq e0 (op e3 e2)))) := by timed impliesElim lean_s3700
have lean_s3702 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e3 e2))) (Not (Eq e0 (op e3 e2)))))))) := by R1 lean_s3698, lean_s3701, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e3 e2)))))), [(- 1), (- 1)]
have lean_s3703 : (Eq Or Or) := by timed rfl
let lean_s3704 := by timed congr lean_s3703 lean_s864
let lean_s3705 := by timed congr lean_s3703 lean_s759
let lean_s3706 := by timed congr lean_s3703 lean_s841
let lean_s3707 := by timed congr lean_s3703 lean_s730
let lean_s3708 := by timed congr lean_s3703 lean_s3470
let lean_s3709 := by timed congr lean_s3708 lean_s3468
let lean_s3710 := by timed congr lean_s3707 lean_s3709
let lean_s3711 := by timed congr lean_s3706 lean_s3710
let lean_s3712 := by timed congr lean_s3705 lean_s3711
have lean_s3713 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e3 e2))) (Not (Eq e0 (op e3 e2)))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e3 e2))) (Not (Eq e0 (op e3 e2))))))))) := by timed congr lean_s3704 lean_s3712
have lean_s3714 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e3 e2))) (Not (Eq e0 (op e3 e2)))))))) := by timed eqResolve lean_s3702 lean_s3713
have lean_s3715 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e3 e2))) (Not (Eq e1 (op e3 e2)))))))) := by permutateOr lean_s3714, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s3716 := by R1 lean_s3697, lean_s3715, (Eq e0 (op e3 e2)), [(- 1), (- 1)]
let lean_s3717 := by R1 lean_s3716, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s3718 := by R2 lean_s3717, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s3719 := by R2 lean_s3718, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
have lean_s3720 : (Or (Eq e1 (op e3 e0)) (Or (Eq e1 (op e3 e1)) (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e3 e3)) (Eq e1 (op e3 e4)))))) := by andElim lean_s647, 32
have lean_s3721 : (Or (Eq e1 (op e3 e2)) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e0)) (Or (Eq e1 (op e3 e1)) (Eq e1 (op e3 e3)))))) := by permutateOr lean_s3720, [2, 4, 0, 1, 3], (- 1)
let lean_s3722 := by R2 lean_s3719, lean_s3721, (Eq e1 (op e3 e2)), [(- 1), (- 1)]
have lean_s3723 : (Or (And (Not (Eq (op e1 e1) (op e3 e1))) (Eq e1 (op e1 e1))) (Or (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Not (Eq e1 (op e1 e1))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e3 e1))), (Eq e1 (op e1 e1))]
have lean_s3724 : (Or (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e3 e1))))) :=
  (scope (fun lean_a656 : (Not (Eq (op e1 e1) (op e3 e1))) =>
    (scope (fun lean_a657 : (Eq e1 (op e1 e1)) =>
      have lean_s3724 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a657
      have lean_s3725 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s3724
      let lean_s3726 := by timed flipCongrArg lean_s3725 [Eq]
      have lean_s3727 : (Eq (op e3 e1) (op e3 e1)) := by timed rfl
      have lean_s3728 : (Eq (Eq e1 (op e3 e1)) (Eq (op e1 e1) (op e3 e1))) := by timed congr lean_s3726 lean_s3727
      have lean_s3729 : (Eq (Eq (op e1 e1) (op e3 e1)) False) := by timed falseIntro lean_a656
      have lean_s3730 : (Eq (Eq e1 (op e3 e1)) False) := by timed Eq.trans lean_s3728 lean_s3729
      have lean_s3731 : (Not (Eq e1 (op e3 e1))) := by timed falseElim lean_s3730
      show (Not (Eq e1 (op e3 e1))) from lean_s3731
  ))))
have lean_s3725 : (Implies (And (Not (Eq (op e1 e1) (op e3 e1))) (Eq e1 (op e1 e1))) (Not (Eq e1 (op e3 e1)))) := by liftOrNToImp lean_s3724, 2
have lean_s3726 : (Or (Not (And (Not (Eq (op e1 e1) (op e3 e1))) (Eq e1 (op e1 e1)))) (Not (Eq e1 (op e3 e1)))) := by timed impliesElim lean_s3725
have lean_s3727 : (Or (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e3 e1))))) := by R1 lean_s3723, lean_s3726, (And (Not (Eq (op e1 e1) (op e3 e1))) (Eq e1 (op e1 e1))), [(- 1), (- 1)]
have lean_s3728 : (Eq Or Or) := by timed rfl
have lean_s3729 : (Eq (Eq (op e1 e1) (op e3 e1)) (Eq (op e1 e1) (op e3 e1))) := by timed rfl
let lean_s3730 := by timed flipCongrArg lean_s3729 [Eq]
have lean_s3731 : (Eq (Eq (Eq (op e1 e1) (op e3 e1)) (Not (Not (Eq (op e1 e1) (op e3 e1))))) (Eq (Eq (op e1 e1) (op e3 e1)) (Eq (op e1 e1) (op e3 e1)))) := by timed congr lean_s3730 lean_r312
have lean_s3732 : (Eq (Eq (Eq (op e1 e1) (op e3 e1)) (Not (Not (Eq (op e1 e1) (op e3 e1))))) True) := by timed Eq.trans lean_s3731 lean_r309
have lean_s3733 : (Eq (Eq (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Eq (op e1 e1) (op e3 e1))) True) := by timed Eq.trans lean_r315 lean_s3732
have lean_s3734 : (Eq (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Eq (op e1 e1) (op e3 e1))) := by timed trueElim lean_s3733
let lean_s3735 := by timed congr lean_s3728 lean_s3734
let lean_s3736 := by timed congr lean_s3728 lean_s730
have lean_s3737 : (Eq (Not (Eq e1 (op e3 e1))) (Not (Eq e1 (op e3 e1)))) := by timed rfl
let lean_s3738 := by timed congr lean_s3736 lean_s3737
have lean_s3739 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e3 e1)))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e3 e1))))) (Or (Eq (op e1 e1) (op e3 e1)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e3 e1)))))) := by timed congr lean_s3735 lean_s3738
have lean_s3740 : (Or (Eq (op e1 e1) (op e3 e1)) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e3 e1))))) := by timed eqResolve lean_s3727 lean_s3739
have lean_s3741 : (Not (Eq (op e1 e1) (op e3 e1))) := by andElim lean_s29, 15
let lean_s3742 := by R1 lean_s3740, lean_s3741, (Eq (op e1 e1) (op e3 e1)), [(- 1), 0]
have lean_s3743 : (Not (Eq e1 (op e3 e1))) := by R2 lean_s3742, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s3744 := by R1 lean_s3722, lean_s3743, (Eq e1 (op e3 e1)), [(- 1), 0]
have lean_s3745 : (Or (And (Not (Eq (op e2 e0) (op e3 e0))) (Eq e1 (op e2 e0))) (Or (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Not (Eq e1 (op e2 e0))))) := by timed cnfAndNeg [(Not (Eq (op e2 e0) (op e3 e0))), (Eq e1 (op e2 e0))]
have lean_s3746 : (Or (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Or (Not (Eq e1 (op e2 e0))) (Not (Eq e1 (op e3 e0))))) :=
  (scope (fun lean_a657 : (Not (Eq (op e2 e0) (op e3 e0))) =>
    (scope (fun lean_a658 : (Eq e1 (op e2 e0)) =>
      have lean_s3746 : (Eq (op e2 e0) e1) := by timed Eq.symm lean_a658
      have lean_s3747 : (Eq e1 (op e2 e0)) := by timed Eq.symm lean_s3746
      let lean_s3748 := by timed flipCongrArg lean_s3747 [Eq]
      have lean_s3749 : (Eq (op e3 e0) (op e3 e0)) := by timed rfl
      have lean_s3750 : (Eq (Eq e1 (op e3 e0)) (Eq (op e2 e0) (op e3 e0))) := by timed congr lean_s3748 lean_s3749
      have lean_s3751 : (Eq (Eq (op e2 e0) (op e3 e0)) False) := by timed falseIntro lean_a657
      have lean_s3752 : (Eq (Eq e1 (op e3 e0)) False) := by timed Eq.trans lean_s3750 lean_s3751
      have lean_s3753 : (Not (Eq e1 (op e3 e0))) := by timed falseElim lean_s3752
      show (Not (Eq e1 (op e3 e0))) from lean_s3753
  ))))
have lean_s3747 : (Implies (And (Not (Eq (op e2 e0) (op e3 e0))) (Eq e1 (op e2 e0))) (Not (Eq e1 (op e3 e0)))) := by liftOrNToImp lean_s3746, 2
have lean_s3748 : (Or (Not (And (Not (Eq (op e2 e0) (op e3 e0))) (Eq e1 (op e2 e0)))) (Not (Eq e1 (op e3 e0)))) := by timed impliesElim lean_s3747
have lean_s3749 : (Or (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Or (Not (Eq e1 (op e2 e0))) (Not (Eq e1 (op e3 e0))))) := by R1 lean_s3745, lean_s3748, (And (Not (Eq (op e2 e0) (op e3 e0))) (Eq e1 (op e2 e0))), [(- 1), (- 1)]
have lean_s3750 : (Eq Or Or) := by timed rfl
have lean_s3751 : (Eq (Eq (op e2 e0) (op e3 e0)) (Eq (op e2 e0) (op e3 e0))) := by timed rfl
let lean_s3752 := by timed flipCongrArg lean_s3751 [Eq]
have lean_s3753 : (Eq (Eq (Eq (op e2 e0) (op e3 e0)) (Not (Not (Eq (op e2 e0) (op e3 e0))))) (Eq (Eq (op e2 e0) (op e3 e0)) (Eq (op e2 e0) (op e3 e0)))) := by timed congr lean_s3752 lean_r214
have lean_s3754 : (Eq (Eq (Eq (op e2 e0) (op e3 e0)) (Not (Not (Eq (op e2 e0) (op e3 e0))))) True) := by timed Eq.trans lean_s3753 lean_r372
have lean_s3755 : (Eq (Eq (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Eq (op e2 e0) (op e3 e0))) True) := by timed Eq.trans lean_r365 lean_s3754
have lean_s3756 : (Eq (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Eq (op e2 e0) (op e3 e0))) := by timed trueElim lean_s3755
let lean_s3757 := by timed congr lean_s3750 lean_s3756
have lean_s3758 : (Eq (Not (Eq e1 (op e2 e0))) (Not (Eq e1 (op e2 e0)))) := by timed rfl
let lean_s3759 := by timed congr lean_s3750 lean_s3758
have lean_s3760 : (Eq (Not (Eq e1 (op e3 e0))) (Not (Eq e1 (op e3 e0)))) := by timed rfl
let lean_s3761 := by timed congr lean_s3759 lean_s3760
have lean_s3762 : (Eq (Or (Not (Not (Eq (op e2 e0) (op e3 e0)))) (Or (Not (Eq e1 (op e2 e0))) (Not (Eq e1 (op e3 e0))))) (Or (Eq (op e2 e0) (op e3 e0)) (Or (Not (Eq e1 (op e2 e0))) (Not (Eq e1 (op e3 e0)))))) := by timed congr lean_s3757 lean_s3761
have lean_s3763 : (Or (Eq (op e2 e0) (op e3 e0)) (Or (Not (Eq e1 (op e2 e0))) (Not (Eq e1 (op e3 e0))))) := by timed eqResolve lean_s3749 lean_s3762
let lean_s3764 := by R1 lean_s3744, lean_s3763, (Eq e1 (op e3 e0)), [(- 1), (- 1)]
have lean_s3765 : (Not (Eq (op e2 e0) (op e3 e0))) := by andElim lean_s29, 7
let lean_s3766 := by R1 lean_s3764, lean_s3765, (Eq (op e2 e0) (op e3 e0)), [(- 1), 0]
let lean_s3767 := by R2 lean_s3766, lean_s1979, (Eq e1 (op e2 e0)), [(- 1), (- 1)]
let lean_s3768 := by R1 lean_s3767, lean_s2001, (Eq e1 (op e2 e1)), [(- 1), 0]
have lean_s3769 : (Or (And (Eq e1 (op e4 e3)) (Eq e1 (op e2 e3))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e1 (op e2 e3))))) := by timed cnfAndNeg [(Eq e1 (op e4 e3)), (Eq e1 (op e2 e3))]
have lean_s3770 : (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e2 e3))) (Eq (op e2 e3) (op e4 e3)))) :=
  (scope (fun lean_a658 : (Eq e1 (op e4 e3)) =>
    (scope (fun lean_a659 : (Eq e1 (op e2 e3)) =>
      have lean_s3770 : (Eq (op e2 e3) e1) := by timed Eq.symm lean_a659
      have lean_s3771 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_a658
      have lean_s3772 : (Eq e1 (op e4 e3)) := by timed Eq.symm lean_s3771
      have lean_s3773 : (Eq (op e2 e3) (op e4 e3)) := by timed Eq.trans lean_s3770 lean_s3772
      show (Eq (op e2 e3) (op e4 e3)) from lean_s3773
  ))))
have lean_s3771 : (Implies (And (Eq e1 (op e4 e3)) (Eq e1 (op e2 e3))) (Eq (op e2 e3) (op e4 e3))) := by liftOrNToImp lean_s3770, 2
have lean_s3772 : (Or (Not (And (Eq e1 (op e4 e3)) (Eq e1 (op e2 e3)))) (Eq (op e2 e3) (op e4 e3))) := by timed impliesElim lean_s3771
have lean_s3773 : (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e2 e3))) (Eq (op e2 e3) (op e4 e3)))) := by R1 lean_s3769, lean_s3772, (And (Eq e1 (op e4 e3)) (Eq e1 (op e2 e3))), [(- 1), (- 1)]
have lean_s3774 : (Or (Eq (op e2 e3) (op e4 e3)) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e1 (op e4 e3))))) := by permutateOr lean_s3773, [2, 1, 0], (- 1)
let lean_s3775 := by R1 lean_s3768, lean_s3774, (Eq e1 (op e2 e3)), [(- 1), (- 1)]
have lean_s3776 : (Not (Eq (op e2 e3) (op e4 e3))) := by andElim lean_s29, 38
let lean_s3777 := by R1 lean_s3775, lean_s3776, (Eq (op e2 e3) (op e4 e3)), [(- 1), 0]
have lean_s3778 : (Or (And (Not (Eq (op e4 e1) (op e4 e2))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e0)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3)))))) (Or (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e3 (op e4 e2))) (Not (Eq e3 (op e3 e3)))))))) := by timed cnfAndNeg [(Not (Eq (op e4 e1) (op e4 e2))), (Eq e0 (op e4 e1)), (Eq e2 (op e4 e0)), (Eq e3 (op e4 e2)), (Eq e3 (op e3 e3))]
have lean_s3779 : (Or (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3)))))))) :=
  (scope (fun lean_a658 : (Not (Eq (op e4 e1) (op e4 e2))) =>
    (scope (fun lean_a659 : (Eq e0 (op e4 e1)) =>
      (scope (fun lean_a660 : (Eq e2 (op e4 e0)) =>
        (scope (fun lean_a661 : (Eq e3 (op e4 e2)) =>
          (scope (fun lean_a662 : (Eq e3 (op e3 e3)) =>
            have lean_s3779 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_a659
            have lean_s3780 : (Eq e0 (op e4 e1)) := by timed Eq.symm lean_s3779
            let lean_s3781 := by timed flipCongrArg lean_s3780 [Eq]
            have lean_s3782 : (Eq e4 e4) := by timed rfl
            let lean_s3783 := by timed flipCongrArg lean_s3782 [op]
            have lean_s3784 : (Eq (op e4 e0) e2) := by timed Eq.symm lean_a660
            have lean_s3785 : (Eq (op e4 (op e4 e0)) (op e4 e2)) := by timed congr lean_s3783 lean_s3784
            have lean_s3786 : (Eq (op e4 e2) (op e4 (op e4 e0))) := by timed Eq.symm lean_s3785
            have lean_s3787 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a662
            have lean_s3788 : (Eq (op e4 e2) e3) := by timed Eq.symm lean_a661
            have lean_s3789 : (Eq e3 (op e4 e2)) := by timed Eq.symm lean_s3788
            let lean_s3790 := by timed Eq.trans lean_s3787 lean_s3789
            have lean_s3791 : (Eq (op e3 e3) (op e4 (op e4 e0))) := by timed Eq.trans lean_s3790 lean_s3786
            have lean_s3792 : (Eq (op e4 (op e4 e0)) (op e3 e3)) := by timed Eq.symm lean_s3791
            have lean_s3793 : (Eq (op e4 e2) (op e3 e3)) := by timed Eq.trans lean_s3786 lean_s3792
            have lean_s3794 : (Eq (op e3 e3) (op e4 e2)) := by timed Eq.symm lean_s3793
            have lean_s3795 : (Eq (Eq e0 (op e3 e3)) (Eq (op e4 e1) (op e4 e2))) := by timed congr lean_s3781 lean_s3794
            have lean_s3796 : (Eq (Eq (op e4 e1) (op e4 e2)) False) := by timed falseIntro lean_a658
            have lean_s3797 : (Eq (Eq e0 (op e3 e3)) False) := by timed Eq.trans lean_s3795 lean_s3796
            have lean_s3798 : (Not (Eq e0 (op e3 e3))) := by timed falseElim lean_s3797
            show (Not (Eq e0 (op e3 e3))) from lean_s3798
  ))))))))))
have lean_s3780 : (Implies (And (Not (Eq (op e4 e1) (op e4 e2))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e0)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3)))))) (Not (Eq e0 (op e3 e3)))) := by liftOrNToImp lean_s3779, 5
have lean_s3781 : (Or (Not (And (Not (Eq (op e4 e1) (op e4 e2))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e0)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3))))))) (Not (Eq e0 (op e3 e3)))) := by timed impliesElim lean_s3780
have lean_s3782 : (Or (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3)))))))) := by R1 lean_s3778, lean_s3781, (And (Not (Eq (op e4 e1) (op e4 e2))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e0)) (And (Eq e3 (op e4 e2)) (Eq e3 (op e3 e3)))))), [(- 1), (- 1)]
have lean_s3783 : (Eq Or Or) := by timed rfl
have lean_s3784 : (Eq (Eq (op e4 e1) (op e4 e2)) (Eq (op e4 e1) (op e4 e2))) := by timed rfl
let lean_s3785 := by timed flipCongrArg lean_s3784 [Eq]
have lean_s3786 : (Eq (Eq (Eq (op e4 e1) (op e4 e2)) (Not (Not (Eq (op e4 e1) (op e4 e2))))) (Eq (Eq (op e4 e1) (op e4 e2)) (Eq (op e4 e1) (op e4 e2)))) := by timed congr lean_s3785 lean_r69
have lean_s3787 : (Eq (Eq (Eq (op e4 e1) (op e4 e2)) (Not (Not (Eq (op e4 e1) (op e4 e2))))) True) := by timed Eq.trans lean_s3786 lean_r26
have lean_s3788 : (Eq (Eq (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Eq (op e4 e1) (op e4 e2))) True) := by timed Eq.trans lean_r34 lean_s3787
have lean_s3789 : (Eq (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Eq (op e4 e1) (op e4 e2))) := by timed trueElim lean_s3788
let lean_s3790 := by timed congr lean_s3783 lean_s3789
let lean_s3791 := by timed congr lean_s3783 lean_s1709
let lean_s3792 := by timed congr lean_s3783 lean_s1418
let lean_s3793 := by timed congr lean_s3783 lean_s1578
let lean_s3794 := by timed congr lean_s3783 lean_s17
let lean_s3795 := by timed congr lean_s3794 lean_s2104
let lean_s3796 := by timed congr lean_s3793 lean_s3795
let lean_s3797 := by timed congr lean_s3792 lean_s3796
let lean_s3798 := by timed congr lean_s3791 lean_s3797
have lean_s3799 : (Eq (Or (Not (Not (Eq (op e4 e1) (op e4 e2)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3)))))))) (Or (Eq (op e4 e1) (op e4 e2)) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3))))))))) := by timed congr lean_s3790 lean_s3798
have lean_s3800 : (Or (Eq (op e4 e1) (op e4 e2)) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e3 (op e4 e2))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e0 (op e3 e3)))))))) := by timed eqResolve lean_s3782 lean_s3799
have lean_s3801 : (Or (Eq (op e4 e1) (op e4 e2)) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e0 (op e3 e3))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e3 (op e4 e2)))))))) := by permutateOr lean_s3800, [0, 4, 5, 2, 1, 3], (- 1)
let lean_s3802 := by R1 lean_s3777, lean_s3801, (Eq e0 (op e3 e3)), [(- 1), (- 1)]
have lean_s3803 : (Not (Eq (op e4 e1) (op e4 e2))) := by andElim lean_s29, 94
let lean_s3804 := by R1 lean_s3802, lean_s3803, (Eq (op e4 e1) (op e4 e2)), [(- 1), 0]
let lean_s3805 := by R2 lean_s3804, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3806 := by R2 lean_s3805, lean_s1537, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
let lean_s3807 := by R1 lean_s3806, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3808 := by R1 lean_s3807, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s3809 := by R1 lean_s3808, lean_s3652, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
have lean_s3810 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e4 e0))) (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e3 (op e4 e1)) (Not (Eq e2 (op e4 e0)))))))))))))) := by R1 lean_s3809, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s3811 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e2 (op e4 e0))) (Eq e3 (op e4 e1))))))))))) := by factor lean_s3810, 11
let lean_s3812 := by R2 lean_s3811, lean_s649, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s3813 := by R1 lean_s3812, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s3814 := by R1 lean_s3813, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s3815 := by R1 lean_s3814, lean_s3633, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
have lean_s3816 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e3 (op e4 e1)) (Or (Eq e2 (op e4 e3)) (Not (Eq e0 (op e4 e1))))))))))))) := by R1 lean_s3815, lean_s1628, (Eq e2 e0), [(- 1), 0]
have lean_s3817 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e2 e2)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e3 (op e4 e1)) (Eq e2 (op e4 e3))))))))))) := by factor lean_s3816, 10
let lean_s3818 := by R2 lean_s3817, lean_s744, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s3819 := by R1 lean_s3818, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
have lean_s3820 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e3)))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e3)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e1 (op e0 e4)), (Eq e1 (op e1 e1)), (Eq e1 (op e4 e3))]
have lean_s3821 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e0 (op e4 e3)))))))) :=
  (scope (fun lean_a659 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a660 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a661 : (Eq e1 (op e0 e4)) =>
        (scope (fun lean_a662 : (Eq e1 (op e1 e1)) =>
          (scope (fun lean_a663 : (Eq e1 (op e4 e3)) =>
            have lean_s3821 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a660
            have lean_s3822 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s3821
            let lean_s3823 := by timed flipCongrArg lean_s3822 [Eq]
            have lean_s3824 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a662
            have lean_s3825 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a661
            have lean_s3826 : (Eq e1 (op e0 e4)) := by timed Eq.symm lean_s3825
            have lean_s3827 : (Eq (op e1 e1) (op e0 e4)) := by timed Eq.trans lean_s3824 lean_s3826
            have lean_s3828 : (Eq (op e0 e4) (op e1 e1)) := by timed Eq.symm lean_s3827
            have lean_s3829 : (Eq (op e4 e3) e1) := by timed Eq.symm lean_a663
            have lean_s3830 : (Eq (op e4 e3) (op e1 e1)) := by timed Eq.trans lean_s3829 lean_a662
            have lean_s3831 : (Eq (op e1 e1) (op e4 e3)) := by timed Eq.symm lean_s3830
            have lean_s3832 : (Eq (op e0 e4) (op e4 e3)) := by timed Eq.trans lean_s3828 lean_s3831
            have lean_s3833 : (Eq (op e4 e3) (op e0 e4)) := by timed Eq.symm lean_s3832
            have lean_s3834 : (Eq (Eq e0 (op e4 e3)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s3823 lean_s3833
            have lean_s3835 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a659
            have lean_s3836 : (Eq (Eq e0 (op e4 e3)) False) := by timed Eq.trans lean_s3834 lean_s3835
            have lean_s3837 : (Not (Eq e0 (op e4 e3))) := by timed falseElim lean_s3836
            show (Not (Eq e0 (op e4 e3))) from lean_s3837
  ))))))))))
have lean_s3822 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e3)))))) (Not (Eq e0 (op e4 e3)))) := by liftOrNToImp lean_s3821, 5
have lean_s3823 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e3))))))) (Not (Eq e0 (op e4 e3)))) := by timed impliesElim lean_s3822
have lean_s3824 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e0 (op e4 e3)))))))) := by R1 lean_s3820, lean_s3823, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e3)))))), [(- 1), (- 1)]
have lean_s3825 : (Eq Or Or) := by timed rfl
let lean_s3826 := by timed congr lean_s3825 lean_s864
let lean_s3827 := by timed congr lean_s3825 lean_s759
let lean_s3828 := by timed congr lean_s3825 lean_s841
let lean_s3829 := by timed congr lean_s3825 lean_s730
let lean_s3830 := by timed congr lean_s3825 lean_s2711
let lean_s3831 := by timed congr lean_s3830 lean_s872
let lean_s3832 := by timed congr lean_s3829 lean_s3831
let lean_s3833 := by timed congr lean_s3828 lean_s3832
let lean_s3834 := by timed congr lean_s3827 lean_s3833
have lean_s3835 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e0 (op e4 e3)))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e0 (op e4 e3))))))))) := by timed congr lean_s3826 lean_s3834
have lean_s3836 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e3))) (Not (Eq e0 (op e4 e3)))))))) := by timed eqResolve lean_s3824 lean_s3835
have lean_s3837 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e1 (op e4 e3)))))))) := by permutateOr lean_s3836, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s3838 := by R1 lean_s3819, lean_s3837, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s3839 := by R1 lean_s3838, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s3840 := by R2 lean_s3839, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s3841 := by R2 lean_s3840, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
have lean_s3842 : (Eq (Not (And (And (Eq e1 (op e0 e4)) (Eq e0 (op e4 e2))) (Eq e2 (op e3 e4)))) (Not (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e3 e4)))))) := by timed flipCongrArg lean_r132 [Not]
have lean_s3843 : (Not (And (Eq e1 (op e0 e4)) (And (Eq e0 (op e4 e2)) (Eq e2 (op e3 e4))))) := by timed eqResolve lean_a533 lean_s3842
have lean_s3844 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e2 (op e3 e4))))) := by timed flipNotAnd lean_s3843 [(Eq e1 (op e0 e4)), (Eq e0 (op e4 e2)), (Eq e2 (op e3 e4))]
have lean_s3845 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e0 (op e4 e2))))) := by permutateOr lean_s3844, [0, 2, 1], (- 1)
let lean_s3846 := by R1 lean_s3841, lean_s3845, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
have lean_s3847 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3)))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e2 e3)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e1 (op e0 e4)), (Eq e1 (op e1 e1)), (Eq e1 (op e2 e3))]
have lean_s3848 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3)))))))) :=
  (scope (fun lean_a659 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a660 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a661 : (Eq e1 (op e0 e4)) =>
        (scope (fun lean_a662 : (Eq e1 (op e1 e1)) =>
          (scope (fun lean_a663 : (Eq e1 (op e2 e3)) =>
            have lean_s3848 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a660
            have lean_s3849 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s3848
            let lean_s3850 := by timed flipCongrArg lean_s3849 [Eq]
            have lean_s3851 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a662
            have lean_s3852 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a661
            have lean_s3853 : (Eq e1 (op e0 e4)) := by timed Eq.symm lean_s3852
            have lean_s3854 : (Eq (op e1 e1) (op e0 e4)) := by timed Eq.trans lean_s3851 lean_s3853
            have lean_s3855 : (Eq (op e0 e4) (op e1 e1)) := by timed Eq.symm lean_s3854
            have lean_s3856 : (Eq (op e2 e3) e1) := by timed Eq.symm lean_a663
            have lean_s3857 : (Eq (op e2 e3) (op e1 e1)) := by timed Eq.trans lean_s3856 lean_a662
            have lean_s3858 : (Eq (op e1 e1) (op e2 e3)) := by timed Eq.symm lean_s3857
            have lean_s3859 : (Eq (op e0 e4) (op e2 e3)) := by timed Eq.trans lean_s3855 lean_s3858
            have lean_s3860 : (Eq (op e2 e3) (op e0 e4)) := by timed Eq.symm lean_s3859
            have lean_s3861 : (Eq (Eq e0 (op e2 e3)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s3850 lean_s3860
            have lean_s3862 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a659
            have lean_s3863 : (Eq (Eq e0 (op e2 e3)) False) := by timed Eq.trans lean_s3861 lean_s3862
            have lean_s3864 : (Not (Eq e0 (op e2 e3))) := by timed falseElim lean_s3863
            show (Not (Eq e0 (op e2 e3))) from lean_s3864
  ))))))))))
have lean_s3849 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3)))))) (Not (Eq e0 (op e2 e3)))) := by liftOrNToImp lean_s3848, 5
have lean_s3850 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3))))))) (Not (Eq e0 (op e2 e3)))) := by timed impliesElim lean_s3849
have lean_s3851 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3)))))))) := by R1 lean_s3847, lean_s3850, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e2 e3)))))), [(- 1), (- 1)]
have lean_s3852 : (Eq Or Or) := by timed rfl
let lean_s3853 := by timed congr lean_s3852 lean_s864
let lean_s3854 := by timed congr lean_s3852 lean_s759
let lean_s3855 := by timed congr lean_s3852 lean_s841
let lean_s3856 := by timed congr lean_s3852 lean_s730
let lean_s3857 := by timed congr lean_s3852 lean_s2077
let lean_s3858 := by timed congr lean_s3857 lean_s2079
let lean_s3859 := by timed congr lean_s3856 lean_s3858
let lean_s3860 := by timed congr lean_s3855 lean_s3859
let lean_s3861 := by timed congr lean_s3854 lean_s3860
have lean_s3862 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3)))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3))))))))) := by timed congr lean_s3853 lean_s3861
have lean_s3863 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e2 e3))) (Not (Eq e0 (op e2 e3)))))))) := by timed eqResolve lean_s3851 lean_s3862
have lean_s3864 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e2 e3))) (Not (Eq e1 (op e2 e3)))))))) := by permutateOr lean_s3863, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s3865 := by R1 lean_s3864, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s3866 := by R2 lean_s3865, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s3867 := by R2 lean_s3866, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s3868 := by R2 lean_s3867, lean_s3370, (Eq e1 (op e2 e3)), [(- 1), (- 1)]
let lean_s3869 := by R1 lean_s3868, lean_s3384, (Eq e1 (op e1 e3)), [(- 1), 0]
let lean_s3870 := by R2 lean_s3869, lean_s2044, (Eq e0 (op e2 e3)), [(- 1), (- 1)]
let lean_s3871 := by R1 lean_s3870, lean_s2066, (Eq e0 (op e0 e3)), [(- 1), 0]
have lean_s3872 : (Or (And (Not (Eq (op e0 e4) (op e2 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e4) (op e2 e4))), (Eq e1 (op e0 e4)), (Eq e3 (op e2 e4)), (Eq e3 (op e3 e3))]
have lean_s3873 : (Or (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) :=
  (scope (fun lean_a659 : (Not (Eq (op e0 e4) (op e2 e4))) =>
    (scope (fun lean_a660 : (Eq e1 (op e0 e4)) =>
      (scope (fun lean_a661 : (Eq e3 (op e2 e4)) =>
        (scope (fun lean_a662 : (Eq e3 (op e3 e3)) =>
          have lean_s3873 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a660
          have lean_s3874 : (Eq e1 (op e0 e4)) := by timed Eq.symm lean_s3873
          let lean_s3875 := by timed flipCongrArg lean_s3874 [Eq]
          have lean_s3876 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a662
          have lean_s3877 : (Eq (op e2 e4) e3) := by timed Eq.symm lean_a661
          have lean_s3878 : (Eq e3 (op e2 e4)) := by timed Eq.symm lean_s3877
          have lean_s3879 : (Eq (op e3 e3) (op e2 e4)) := by timed Eq.trans lean_s3876 lean_s3878
          have lean_s3880 : (Eq (Eq e1 (op e3 e3)) (Eq (op e0 e4) (op e2 e4))) := by timed congr lean_s3875 lean_s3879
          have lean_s3881 : (Eq (Eq (op e0 e4) (op e2 e4)) False) := by timed falseIntro lean_a659
          have lean_s3882 : (Eq (Eq e1 (op e3 e3)) False) := by timed Eq.trans lean_s3880 lean_s3881
          have lean_s3883 : (Not (Eq e1 (op e3 e3))) := by timed falseElim lean_s3882
          show (Not (Eq e1 (op e3 e3))) from lean_s3883
  ))))))))
have lean_s3874 : (Implies (And (Not (Eq (op e0 e4) (op e2 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e1 (op e3 e3)))) := by liftOrNToImp lean_s3873, 4
have lean_s3875 : (Or (Not (And (Not (Eq (op e0 e4) (op e2 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3)))))) (Not (Eq e1 (op e3 e3)))) := by timed impliesElim lean_s3874
have lean_s3876 : (Or (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) := by R1 lean_s3872, lean_s3875, (And (Not (Eq (op e0 e4) (op e2 e4))) (And (Eq e1 (op e0 e4)) (And (Eq e3 (op e2 e4)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s3877 : (Eq Or Or) := by timed rfl
have lean_s3878 : (Eq (Eq (op e0 e4) (op e2 e4)) (Eq (op e0 e4) (op e2 e4))) := by timed rfl
let lean_s3879 := by timed flipCongrArg lean_s3878 [Eq]
have lean_s3880 : (Eq (Eq (Eq (op e0 e4) (op e2 e4)) (Not (Not (Eq (op e0 e4) (op e2 e4))))) (Eq (Eq (op e0 e4) (op e2 e4)) (Eq (op e0 e4) (op e2 e4)))) := by timed congr lean_s3879 lean_r81
have lean_s3881 : (Eq (Eq (Eq (op e0 e4) (op e2 e4)) (Not (Not (Eq (op e0 e4) (op e2 e4))))) True) := by timed Eq.trans lean_s3880 lean_r83
have lean_s3882 : (Eq (Eq (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Eq (op e0 e4) (op e2 e4))) True) := by timed Eq.trans lean_r79 lean_s3881
have lean_s3883 : (Eq (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Eq (op e0 e4) (op e2 e4))) := by timed trueElim lean_s3882
let lean_s3884 := by timed congr lean_s3877 lean_s3883
let lean_s3885 := by timed congr lean_s3877 lean_s841
let lean_s3886 := by timed congr lean_s3877 lean_s15
let lean_s3887 := by timed congr lean_s3877 lean_s17
let lean_s3888 := by timed congr lean_s3887 lean_s3424
let lean_s3889 := by timed congr lean_s3886 lean_s3888
let lean_s3890 := by timed congr lean_s3885 lean_s3889
have lean_s3891 : (Eq (Or (Not (Not (Eq (op e0 e4) (op e2 e4)))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) (Or (Eq (op e0 e4) (op e2 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3)))))))) := by timed congr lean_s3884 lean_s3890
have lean_s3892 : (Or (Eq (op e0 e4) (op e2 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) := by timed eqResolve lean_s3876 lean_s3891
have lean_s3893 : (Or (Eq (op e0 e4) (op e2 e4)) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e1 (op e3 e3))))))) := by permutateOr lean_s3892, [0, 3, 1, 2, 4], (- 1)
let lean_s3894 := by R1 lean_s3871, lean_s3893, (Eq e1 (op e3 e3)), [(- 1), (- 1)]
have lean_s3895 : (Not (Eq (op e0 e4) (op e2 e4))) := by andElim lean_s29, 41
let lean_s3896 := by R1 lean_s3894, lean_s3895, (Eq (op e0 e4) (op e2 e4)), [(- 1), 0]
let lean_s3897 := by R2 lean_s3896, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
have lean_s3898 : (Or (And (Eq e1 (op e0 e4)) (Eq e1 (op e0 e3))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e1 (op e0 e3))))) := by timed cnfAndNeg [(Eq e1 (op e0 e4)), (Eq e1 (op e0 e3))]
have lean_s3899 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e0 e3))) (Eq (op e0 e3) (op e0 e4)))) :=
  (scope (fun lean_a660 : (Eq e1 (op e0 e4)) =>
    (scope (fun lean_a661 : (Eq e1 (op e0 e3)) =>
      have lean_s3899 : (Eq (op e0 e3) e1) := by timed Eq.symm lean_a661
      have lean_s3900 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a660
      have lean_s3901 : (Eq e1 (op e0 e4)) := by timed Eq.symm lean_s3900
      have lean_s3902 : (Eq (op e0 e3) (op e0 e4)) := by timed Eq.trans lean_s3899 lean_s3901
      show (Eq (op e0 e3) (op e0 e4)) from lean_s3902
  ))))
have lean_s3900 : (Implies (And (Eq e1 (op e0 e4)) (Eq e1 (op e0 e3))) (Eq (op e0 e3) (op e0 e4))) := by liftOrNToImp lean_s3899, 2
have lean_s3901 : (Or (Not (And (Eq e1 (op e0 e4)) (Eq e1 (op e0 e3)))) (Eq (op e0 e3) (op e0 e4))) := by timed impliesElim lean_s3900
have lean_s3902 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e0 e3))) (Eq (op e0 e3) (op e0 e4)))) := by R1 lean_s3898, lean_s3901, (And (Eq e1 (op e0 e4)) (Eq e1 (op e0 e3))), [(- 1), (- 1)]
have lean_s3903 : (Or (Eq (op e0 e3) (op e0 e4)) (Or (Not (Eq e1 (op e0 e3))) (Not (Eq e1 (op e0 e4))))) := by permutateOr lean_s3902, [2, 1, 0], (- 1)
let lean_s3904 := by R1 lean_s3897, lean_s3903, (Eq e1 (op e0 e3)), [(- 1), (- 1)]
let lean_s3905 := by R1 lean_s3904, lean_s2791, (Eq (op e0 e3) (op e0 e4)), [(- 1), 0]
let lean_s3906 := by R1 lean_s3905, lean_s2110, (Eq e0 (op e3 e3)), [(- 1), (- 1)]
let lean_s3907 := by R1 lean_s3906, lean_s2112, (Eq (op e1 e4) (op e2 e4)), [(- 1), 0]
let lean_s3908 := by R2 lean_s3907, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3909 := by R1 lean_s3908, lean_s2040, (Eq e0 (op e1 e3)), [(- 1), (- 1)]
have lean_s3910 : (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e1 e4))) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e0 (op e1 e4))))))))))) := by R1 lean_s3909, lean_s2041, (Eq (op e1 e3) (op e1 e4)), [(- 1), 0]
have lean_s3911 : (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e0 (op e1 e4))))))) := by factor lean_s3910, (- 1)
let lean_s3912 := by R2 lean_s3911, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s3913 := by R1 lean_s3912, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s3914 := by R1 lean_s3913, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s3915 := by R2 lean_s3914, lean_s1632, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s3916 := by R1 lean_s3915, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s3917 := by R1 lean_s3916, lean_s1509, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s3918 := by R1 lean_s3917, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s3919 := by R1 lean_s3918, lean_s1666, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
have lean_s3920 : (Or (Eq e1 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e3 (op e2 e4)))))))))) := by R1 lean_s3919, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s3921 : (Or (Eq e1 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by factor lean_s3920, 7
let lean_s3922 := by R2 lean_s3921, lean_s1428, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s3923 := by R1 lean_s3922, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3924 := by R1 lean_s3923, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s3925 := by R1 lean_s3143, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s3926 := by R2 lean_s3925, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s3927 := by R1 lean_s3926, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s3928 := by R1 lean_s3927, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
have lean_s3929 : (Eq (Not (And (And (Eq e1 (op e2 e4)) (Eq e2 (op e4 e3))) (Eq e3 (op e0 e4)))) (Not (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e0 e4)))))) := by timed flipCongrArg lean_r32 [Not]
have lean_s3930 : (Not (And (Eq e1 (op e2 e4)) (And (Eq e2 (op e4 e3)) (Eq e3 (op e0 e4))))) := by timed eqResolve lean_a459 lean_s3929
have lean_s3931 : (Or (Not (Eq e1 (op e2 e4))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e3 (op e0 e4))))) := by timed flipNotAnd lean_s3930 [(Eq e1 (op e2 e4)), (Eq e2 (op e4 e3)), (Eq e3 (op e0 e4))]
have lean_s3932 : (Or (Not (Eq e3 (op e0 e4))) (Or (Not (Eq e1 (op e2 e4))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s3931, [2, 0, 1], (- 1)
have lean_s3933 : (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e2 (op e4 e3)))))) := by R1 lean_s3928, lean_s3932, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
have lean_s3934 : (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Not (Eq e2 (op e4 e3))))) := by factor lean_s3933, (- 1)
have lean_s3935 : (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e3 (op e0 e4))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s3934, [1, 0, 2], (- 1)
have lean_s3936 : (Or (Eq e1 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e1 e4)) (Or (Eq e1 (op e3 e4)) (Not (Eq e2 (op e4 e3)))))))))) := by R1 lean_s3924, lean_s3935, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s3937 : (Or (Eq e1 (op e4 e3)) (Or (Eq e0 (op e4 e3)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e3 (op e1 e4)) (Not (Eq e2 (op e4 e3))))))))) := by factor lean_s3936, (- 1)
let lean_s3938 := by R1 lean_s3937, lean_s3121, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s3939 := by R1 lean_s3938, lean_s2259, (Eq e2 e1), [(- 1), 0]
let lean_s3940 := by R1 lean_s1716, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s3941 := by R2 lean_s3940, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s3942 := by R2 lean_s3941, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s3943 := by R2 lean_s3942, lean_s1428, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s3944 := by R1 lean_s3943, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3945 := by R1 lean_s3944, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s3946 := by R2 lean_s3945, lean_s1537, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s3947 := by R1 lean_s3946, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s3948 := by R1 lean_s3947, lean_s1562, (Eq e3 (op e4 e3)), [(- 1), 0]
let lean_s3949 := by R1 lean_s3948, lean_s1666, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
let lean_s3950 := by R1 lean_s3949, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s3951 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e0 (op e2 e4))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e3 e4)))))))) := by R1 lean_s3950, lean_s1861, (Eq e3 (op e4 e0)), [(- 1), (- 1)]
have lean_s3952 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e3 e4))))))) := by factor lean_s3951, (- 1)
let lean_s3953 := by R2 lean_s3952, lean_s1632, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s3954 := by R1 lean_s3953, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s3955 := by R1 lean_s3954, lean_s1626, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s3956 := by R1 lean_s3955, lean_s1628, (Eq e2 e0), [(- 1), 0]
let lean_s3957 := by R2 lean_s3956, lean_s1048, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
let lean_s3958 := by R1 lean_s3957, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
let lean_s3959 := by R1 lean_s3958, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
have lean_s3960 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e0 (op e4 e1))))))))))) := by R1 lean_s3959, lean_s794, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
have lean_s3961 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e3 (op e1 e4)) (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Eq e2 (op e3 e4)))))))) := by factor lean_s3960, 8
let lean_s3962 := by R2 lean_s3961, lean_s744, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s3963 := by R1 lean_s3962, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
let lean_s3964 := by R1 lean_s3963, lean_s740, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
let lean_s3965 := by R2 lean_s3964, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s3966 : (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e3 e4))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3))))))))))))))) := by R1 lean_s3965, lean_s2172, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
have lean_s3967 : (Or (Eq e3 (op e4 e2)) (Or (Not (Eq e1 (op e3 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e3)) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e3)))))))))) := by factor lean_s3966, (- 1)
let lean_s3968 := by R2 lean_s3967, lean_s1373, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
let lean_s3969 := by R1 lean_s3968, lean_s1383, (Eq e4 (op e3 e4)), [(- 1), 0]
let lean_s3970 := by R1 lean_s3969, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s3971 : (Or (And (Eq e0 (op e4 e3)) (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e2 (op e4 e3))))) := by timed cnfAndNeg [(Eq e0 (op e4 e3)), (Eq e2 (op e4 e3))]
have lean_s3972 : (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e2 (op e4 e3))) (Eq e2 e0))) :=
  (scope (fun lean_a661 : (Eq e0 (op e4 e3)) =>
    (scope (fun lean_a662 : (Eq e2 (op e4 e3)) =>
      have lean_s3972 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a662
      have lean_s3973 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s3972
      have lean_s3974 : (Eq (op e4 e3) e0) := by timed Eq.symm lean_a661
      have lean_s3975 : (Eq e2 e0) := by timed Eq.trans lean_s3973 lean_s3974
      show (Eq e2 e0) from lean_s3975
  ))))
have lean_s3973 : (Implies (And (Eq e0 (op e4 e3)) (Eq e2 (op e4 e3))) (Eq e2 e0)) := by liftOrNToImp lean_s3972, 2
have lean_s3974 : (Or (Not (And (Eq e0 (op e4 e3)) (Eq e2 (op e4 e3)))) (Eq e2 e0)) := by timed impliesElim lean_s3973
have lean_s3975 : (Or (Not (Eq e0 (op e4 e3))) (Or (Not (Eq e2 (op e4 e3))) (Eq e2 e0))) := by R1 lean_s3971, lean_s3974, (And (Eq e0 (op e4 e3)) (Eq e2 (op e4 e3))), [(- 1), (- 1)]
have lean_s3976 : (Or (Eq e2 e0) (Or (Not (Eq e0 (op e4 e3))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s3975, [2, 0, 1], (- 1)
let lean_s3977 := by R1 lean_s3970, lean_s3976, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s3978 := by R1 lean_s3977, lean_s1628, (Eq e2 e0), [(- 1), 0]
let lean_s3979 := by R1 lean_s3978, lean_s1581, (Eq e3 (op e4 e2)), [(- 1), (- 1)]
have lean_s3980 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e1 (op e4 e2))))))))))) := by R1 lean_s3979, lean_s1511, (Eq e3 e1), [(- 1), 0]
have lean_s3981 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e3))))))) := by factor lean_s3980, 8
have lean_s3982 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by R2 lean_s3981, lean_s3113, (Eq e1 (op e4 e2)), [(- 1), (- 1)]
have lean_s3983 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Not (Eq e2 (op e4 e3)))))) := by factor lean_s3982, 5
have lean_s3984 : (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3)))))) := by permutateOr lean_s3983, [2, 0, 1, 3], (- 1)
let lean_s3985 := by R2 lean_s3939, lean_s3984, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
let lean_s3986 := by R1 lean_s3985, lean_s2172, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s3987 := by R1 lean_s3986, lean_s3976, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s3988 := by R1 lean_s3987, lean_s1628, (Eq e2 e0), [(- 1), 0]
let lean_s3989 := by R1 lean_s3988, lean_s2257, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
have lean_s3990 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e2 (op e4 e3))))))))))))) := by R1 lean_s3989, lean_s2259, (Eq e2 e1), [(- 1), 0]
have lean_s3991 : (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3))))) := by factor lean_s3990, (- 1)
let lean_s3992 := by R1 lean_s1048, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
let lean_s3993 := by R1 lean_s3992, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s3994 := by R1 lean_s3993, lean_s1785, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
let lean_s3995 := by R1 lean_s3994, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s3996 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e1 (op e4 e2)))))) := by R1 lean_s3995, lean_s1465, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
have lean_s3997 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e1 (op e4 e2))))) := by factor lean_s3996, (- 1)
let lean_s3998 := by R2 lean_s3997, lean_s1428, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s3999 := by R1 lean_s3998, lean_s1540, (Eq e3 (op e4 e4)), [(- 1), 0]
let lean_s4000 := by R1 lean_s3999, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s4001 : (Or (And (Eq e0 (op e4 e1)) (Eq e0 (op e2 e1))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e0 (op e2 e1))))) := by timed cnfAndNeg [(Eq e0 (op e4 e1)), (Eq e0 (op e2 e1))]
have lean_s4002 : (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e0 (op e2 e1))) (Eq (op e2 e1) (op e4 e1)))) :=
  (scope (fun lean_a661 : (Eq e0 (op e4 e1)) =>
    (scope (fun lean_a662 : (Eq e0 (op e2 e1)) =>
      have lean_s4002 : (Eq (op e2 e1) e0) := by timed Eq.symm lean_a662
      have lean_s4003 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_a661
      have lean_s4004 : (Eq e0 (op e4 e1)) := by timed Eq.symm lean_s4003
      have lean_s4005 : (Eq (op e2 e1) (op e4 e1)) := by timed Eq.trans lean_s4002 lean_s4004
      show (Eq (op e2 e1) (op e4 e1)) from lean_s4005
  ))))
have lean_s4003 : (Implies (And (Eq e0 (op e4 e1)) (Eq e0 (op e2 e1))) (Eq (op e2 e1) (op e4 e1))) := by liftOrNToImp lean_s4002, 2
have lean_s4004 : (Or (Not (And (Eq e0 (op e4 e1)) (Eq e0 (op e2 e1)))) (Eq (op e2 e1) (op e4 e1))) := by timed impliesElim lean_s4003
have lean_s4005 : (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e0 (op e2 e1))) (Eq (op e2 e1) (op e4 e1)))) := by R1 lean_s4001, lean_s4004, (And (Eq e0 (op e4 e1)) (Eq e0 (op e2 e1))), [(- 1), (- 1)]
have lean_s4006 : (Or (Eq (op e2 e1) (op e4 e1)) (Or (Not (Eq e0 (op e2 e1))) (Not (Eq e0 (op e4 e1))))) := by permutateOr lean_s4005, [2, 1, 0], (- 1)
have lean_s4007 : (Not (Eq (op e2 e1) (op e4 e1))) := by andElim lean_s29, 18
let lean_s4008 := by R1 lean_s4006, lean_s4007, (Eq (op e2 e1) (op e4 e1)), [(- 1), 0]
let lean_s4009 := by R2 lean_s4008, lean_s2372, (Eq e0 (op e2 e1)), [(- 1), (- 1)]
let lean_s4010 := by R1 lean_s4009, lean_s2394, (Eq e0 (op e2 e0)), [(- 1), 0]
let lean_s4011 := by R1 lean_s4010, lean_s3864, (Eq e0 (op e2 e3)), [(- 1), (- 1)]
let lean_s4012 := by R1 lean_s4011, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s4013 := by R2 lean_s4012, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s4014 := by R2 lean_s4013, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
let lean_s4015 := by R2 lean_s4014, lean_s3370, (Eq e1 (op e2 e3)), [(- 1), (- 1)]
let lean_s4016 := by R1 lean_s4015, lean_s3384, (Eq e1 (op e1 e3)), [(- 1), 0]
let lean_s4017 := by R1 lean_s4016, lean_s3903, (Eq e1 (op e0 e3)), [(- 1), (- 1)]
let lean_s4018 := by R1 lean_s4017, lean_s2791, (Eq (op e0 e3) (op e0 e4)), [(- 1), 0]
have lean_s4019 : (Or (And (Not (Eq (op e4 e1) (op e4 e3))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2))))) (Or (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e2 (op e2 e2))))))) := by timed cnfAndNeg [(Not (Eq (op e4 e1) (op e4 e3))), (Eq e0 (op e4 e1)), (Eq e2 (op e4 e3)), (Eq e2 (op e2 e2))]
have lean_s4020 : (Or (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) :=
  (scope (fun lean_a661 : (Not (Eq (op e4 e1) (op e4 e3))) =>
    (scope (fun lean_a662 : (Eq e0 (op e4 e1)) =>
      (scope (fun lean_a663 : (Eq e2 (op e4 e3)) =>
        (scope (fun lean_a664 : (Eq e2 (op e2 e2)) =>
          have lean_s4020 : (Eq (op e4 e1) e0) := by timed Eq.symm lean_a662
          have lean_s4021 : (Eq e0 (op e4 e1)) := by timed Eq.symm lean_s4020
          let lean_s4022 := by timed flipCongrArg lean_s4021 [Eq]
          have lean_s4023 : (Eq (op e2 e2) e2) := by timed Eq.symm lean_a664
          have lean_s4024 : (Eq (op e4 e3) e2) := by timed Eq.symm lean_a663
          have lean_s4025 : (Eq e2 (op e4 e3)) := by timed Eq.symm lean_s4024
          have lean_s4026 : (Eq (op e2 e2) (op e4 e3)) := by timed Eq.trans lean_s4023 lean_s4025
          have lean_s4027 : (Eq (Eq e0 (op e2 e2)) (Eq (op e4 e1) (op e4 e3))) := by timed congr lean_s4022 lean_s4026
          have lean_s4028 : (Eq (Eq (op e4 e1) (op e4 e3)) False) := by timed falseIntro lean_a661
          have lean_s4029 : (Eq (Eq e0 (op e2 e2)) False) := by timed Eq.trans lean_s4027 lean_s4028
          have lean_s4030 : (Not (Eq e0 (op e2 e2))) := by timed falseElim lean_s4029
          show (Not (Eq e0 (op e2 e2))) from lean_s4030
  ))))))))
have lean_s4021 : (Implies (And (Not (Eq (op e4 e1) (op e4 e3))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2))))) (Not (Eq e0 (op e2 e2)))) := by liftOrNToImp lean_s4020, 4
have lean_s4022 : (Or (Not (And (Not (Eq (op e4 e1) (op e4 e3))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2)))))) (Not (Eq e0 (op e2 e2)))) := by timed impliesElim lean_s4021
have lean_s4023 : (Or (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) := by R1 lean_s4019, lean_s4022, (And (Not (Eq (op e4 e1) (op e4 e3))) (And (Eq e0 (op e4 e1)) (And (Eq e2 (op e4 e3)) (Eq e2 (op e2 e2))))), [(- 1), (- 1)]
have lean_s4024 : (Eq Or Or) := by timed rfl
have lean_s4025 : (Eq (Eq (op e4 e1) (op e4 e3)) (Eq (op e4 e1) (op e4 e3))) := by timed rfl
let lean_s4026 := by timed flipCongrArg lean_s4025 [Eq]
have lean_s4027 : (Eq (Eq (Eq (op e4 e1) (op e4 e3)) (Not (Not (Eq (op e4 e1) (op e4 e3))))) (Eq (Eq (op e4 e1) (op e4 e3)) (Eq (op e4 e1) (op e4 e3)))) := by timed congr lean_s4026 lean_r30
have lean_s4028 : (Eq (Eq (Eq (op e4 e1) (op e4 e3)) (Not (Not (Eq (op e4 e1) (op e4 e3))))) True) := by timed Eq.trans lean_s4027 lean_r31
have lean_s4029 : (Eq (Eq (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Eq (op e4 e1) (op e4 e3))) True) := by timed Eq.trans lean_r333 lean_s4028
have lean_s4030 : (Eq (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Eq (op e4 e1) (op e4 e3))) := by timed trueElim lean_s4029
let lean_s4031 := by timed congr lean_s4024 lean_s4030
let lean_s4032 := by timed congr lean_s4024 lean_s1709
let lean_s4033 := by timed congr lean_s4024 lean_s836
let lean_s4034 := by timed congr lean_s4024 lean_s13
let lean_s4035 := by timed congr lean_s4034 lean_s2427
let lean_s4036 := by timed congr lean_s4033 lean_s4035
let lean_s4037 := by timed congr lean_s4032 lean_s4036
have lean_s4038 : (Eq (Or (Not (Not (Eq (op e4 e1) (op e4 e3)))) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) (Or (Eq (op e4 e1) (op e4 e3)) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2)))))))) := by timed congr lean_s4031 lean_s4037
have lean_s4039 : (Or (Eq (op e4 e1) (op e4 e3)) (Or (Not (Eq e0 (op e4 e1))) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e2 (op e2 e2))) (Not (Eq e0 (op e2 e2))))))) := by timed eqResolve lean_s4023 lean_s4038
have lean_s4040 : (Or (Eq (op e4 e1) (op e4 e3)) (Or (Not (Eq e2 (op e2 e2))) (Or (Not (Eq e0 (op e2 e2))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e3))))))) := by permutateOr lean_s4039, [0, 3, 4, 1, 2], (- 1)
let lean_s4041 := by R1 lean_s4018, lean_s4040, (Eq e0 (op e2 e2)), [(- 1), (- 1)]
have lean_s4042 : (Not (Eq (op e4 e1) (op e4 e3))) := by andElim lean_s29, 95
let lean_s4043 := by R1 lean_s4041, lean_s4042, (Eq (op e4 e1) (op e4 e3)), [(- 1), 0]
have lean_s4044 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e4 e3)) (Or (Eq e1 (op e3 e3)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e4 e1))) (Not (Eq e2 (op e4 e3)))))))))) := by R2 lean_s4043, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s4045 : (Or (Not (Eq e0 (op e4 e1))) (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e4 e3)) (Or (Eq e1 (op e3 e3)) (Not (Eq e2 (op e4 e3)))))))) := by factor lean_s4044, (- 1)
let lean_s4046 := by R2 lean_s4045, lean_s744, (Eq e0 (op e4 e1)), [(- 1), (- 1)]
let lean_s4047 := by R1 lean_s4046, lean_s768, (Eq e0 (op e4 e0)), [(- 1), 0]
let lean_s4048 := by R1 lean_s4047, lean_s3893, (Eq e1 (op e3 e3)), [(- 1), (- 1)]
let lean_s4049 := by R1 lean_s4048, lean_s3895, (Eq (op e0 e4) (op e2 e4)), [(- 1), 0]
let lean_s4050 := by R2 lean_s4049, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
have lean_s4051 : (Or (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2)))))) (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Not (Eq e1 (op e4 e2)))))))) := by timed cnfAndNeg [(Not (Eq (op e0 e0) (op e0 e4))), (Eq e0 (op e0 e0)), (Eq e1 (op e0 e4)), (Eq e1 (op e1 e1)), (Eq e1 (op e4 e2))]
have lean_s4052 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2)))))))) :=
  (scope (fun lean_a662 : (Not (Eq (op e0 e0) (op e0 e4))) =>
    (scope (fun lean_a663 : (Eq e0 (op e0 e0)) =>
      (scope (fun lean_a664 : (Eq e1 (op e0 e4)) =>
        (scope (fun lean_a665 : (Eq e1 (op e1 e1)) =>
          (scope (fun lean_a666 : (Eq e1 (op e4 e2)) =>
            have lean_s4052 : (Eq (op e0 e0) e0) := by timed Eq.symm lean_a663
            have lean_s4053 : (Eq e0 (op e0 e0)) := by timed Eq.symm lean_s4052
            let lean_s4054 := by timed flipCongrArg lean_s4053 [Eq]
            have lean_s4055 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a665
            have lean_s4056 : (Eq (op e0 e4) e1) := by timed Eq.symm lean_a664
            have lean_s4057 : (Eq e1 (op e0 e4)) := by timed Eq.symm lean_s4056
            have lean_s4058 : (Eq (op e1 e1) (op e0 e4)) := by timed Eq.trans lean_s4055 lean_s4057
            have lean_s4059 : (Eq (op e0 e4) (op e1 e1)) := by timed Eq.symm lean_s4058
            have lean_s4060 : (Eq (op e4 e2) e1) := by timed Eq.symm lean_a666
            have lean_s4061 : (Eq (op e4 e2) (op e1 e1)) := by timed Eq.trans lean_s4060 lean_a665
            have lean_s4062 : (Eq (op e1 e1) (op e4 e2)) := by timed Eq.symm lean_s4061
            have lean_s4063 : (Eq (op e0 e4) (op e4 e2)) := by timed Eq.trans lean_s4059 lean_s4062
            have lean_s4064 : (Eq (op e4 e2) (op e0 e4)) := by timed Eq.symm lean_s4063
            have lean_s4065 : (Eq (Eq e0 (op e4 e2)) (Eq (op e0 e0) (op e0 e4))) := by timed congr lean_s4054 lean_s4064
            have lean_s4066 : (Eq (Eq (op e0 e0) (op e0 e4)) False) := by timed falseIntro lean_a662
            have lean_s4067 : (Eq (Eq e0 (op e4 e2)) False) := by timed Eq.trans lean_s4065 lean_s4066
            have lean_s4068 : (Not (Eq e0 (op e4 e2))) := by timed falseElim lean_s4067
            show (Not (Eq e0 (op e4 e2))) from lean_s4068
  ))))))))))
have lean_s4053 : (Implies (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2)))))) (Not (Eq e0 (op e4 e2)))) := by liftOrNToImp lean_s4052, 5
have lean_s4054 : (Or (Not (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2))))))) (Not (Eq e0 (op e4 e2)))) := by timed impliesElim lean_s4053
have lean_s4055 : (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2)))))))) := by R1 lean_s4051, lean_s4054, (And (Not (Eq (op e0 e0) (op e0 e4))) (And (Eq e0 (op e0 e0)) (And (Eq e1 (op e0 e4)) (And (Eq e1 (op e1 e1)) (Eq e1 (op e4 e2)))))), [(- 1), (- 1)]
have lean_s4056 : (Eq Or Or) := by timed rfl
let lean_s4057 := by timed congr lean_s4056 lean_s864
let lean_s4058 := by timed congr lean_s4056 lean_s759
let lean_s4059 := by timed congr lean_s4056 lean_s841
let lean_s4060 := by timed congr lean_s4056 lean_s730
let lean_s4061 := by timed congr lean_s4056 lean_s732
let lean_s4062 := by timed congr lean_s4061 lean_s734
let lean_s4063 := by timed congr lean_s4060 lean_s4062
let lean_s4064 := by timed congr lean_s4059 lean_s4063
let lean_s4065 := by timed congr lean_s4058 lean_s4064
have lean_s4066 : (Eq (Or (Not (Not (Eq (op e0 e0) (op e0 e4)))) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2)))))))) (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2))))))))) := by timed congr lean_s4057 lean_s4065
have lean_s4067 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e0 (op e4 e2)))))))) := by timed eqResolve lean_s4055 lean_s4066
have lean_s4068 : (Or (Eq (op e0 e0) (op e0 e4)) (Or (Not (Eq e0 (op e0 e0))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e0 (op e4 e2))) (Not (Eq e1 (op e4 e2)))))))) := by permutateOr lean_s4067, [0, 1, 3, 2, 5, 4], (- 1)
let lean_s4069 := by R1 lean_s4050, lean_s4068, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
let lean_s4070 := by R1 lean_s4069, lean_s882, (Eq (op e0 e0) (op e0 e4)), [(- 1), 0]
let lean_s4071 := by R2 lean_s4070, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s4072 : (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e4 e3)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e1 (op e4 e2)))))))))))) := by R2 lean_s4071, lean_s767, (Eq e0 (op e0 e0)), [(- 1), 0]
have lean_s4073 : (Or (Eq e0 (op e2 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e4 e3)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Not (Eq e1 (op e4 e2)))))))))) := by factor lean_s4072, (- 1)
let lean_s4074 := by R2 lean_s4073, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s4075 := by R1 lean_s4074, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s4076 := by R1 lean_s4075, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s4077 := by R1 lean_s4076, lean_s1509, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s4078 := by R1 lean_s4077, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s4079 := by R1 lean_s4078, lean_s1666, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s4080 := by R1 lean_s4079, lean_s1668, (Eq e3 e0), [(- 1), 0]
let lean_s4081 := by R1 lean_s4080, lean_s3976, (Eq e0 (op e4 e3)), [(- 1), (- 1)]
let lean_s4082 := by R1 lean_s4081, lean_s1628, (Eq e2 e0), [(- 1), 0]
let lean_s4083 := by R1 lean_s4082, lean_s2257, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
have lean_s4084 : (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e2 (op e4 e3))))))))))) := by R1 lean_s4083, lean_s2259, (Eq e2 e1), [(- 1), 0]
have lean_s4085 : (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e1 (op e4 e2))) (Eq e1 (op e3 e4)))))) := by factor lean_s4084, 8
have lean_s4086 : (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e2 (op e4 e3))))))) := by permutateOr lean_s4085, [4, 1, 2, 3, 0], (- 1)
let lean_s4087 := by R1 lean_s4000, lean_s4086, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
have lean_s4088 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e1 (op e3 e4)) (Not (Eq e2 (op e4 e3)))))))))) := by R1 lean_s4087, lean_s3935, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
have lean_s4089 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3))))))) := by factor lean_s4088, (- 1)
have lean_s4090 : (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e2 (op e3 e4)) (Eq e0 (op e4 e4))))))) := by R2 lean_s4089, lean_s3113, (Eq e1 (op e4 e2)), [(- 1), (- 1)]
have lean_s4091 : (Or (Eq e2 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3)))))) := by factor lean_s4090, 5
let lean_s4092 := by R1 lean_s4091, lean_s3220, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
let lean_s4093 := by R1 lean_s4092, lean_s1628, (Eq e2 e0), [(- 1), 0]
let lean_s4094 := by R1 lean_s4093, lean_s787, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s4095 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e0 (op e3 e4)))))) := by R1 lean_s4094, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s4096 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Not (Eq e0 (op e3 e4))))) := by factor lean_s4095, (- 1)
have lean_s4097 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e0 (op e3 e4))) (Not (Eq e2 (op e4 e3))))) := by permutateOr lean_s4096, [0, 2, 1], (- 1)
have lean_s4098 : (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e2 (op e4 e3))) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3)))))) := by R1 lean_s3991, lean_s4097, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
have lean_s4099 : (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e4 e3)))) := by factor lean_s4098, (- 1)
let lean_s4100 := by R1 lean_s3846, lean_s4099, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
have lean_s4101 : (Eq (Not (And (And (Eq e2 (op e3 e4)) (Eq e3 (op e4 e1))) (Eq e1 (op e0 e4)))) (Not (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e0 e4)))))) := by timed flipCongrArg lean_r246 [Not]
have lean_s4102 : (Not (And (Eq e2 (op e3 e4)) (And (Eq e3 (op e4 e1)) (Eq e1 (op e0 e4))))) := by timed eqResolve lean_a462 lean_s4101
have lean_s4103 : (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e3 (op e4 e1))) (Not (Eq e1 (op e0 e4))))) := by timed flipNotAnd lean_s4102 [(Eq e2 (op e3 e4)), (Eq e3 (op e4 e1)), (Eq e1 (op e0 e4))]
have lean_s4104 : (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e3 (op e4 e1))))) := by permutateOr lean_s4103, [2, 0, 1], (- 1)
let lean_s4105 := by R1 lean_s4100, lean_s4104, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
let lean_s4106 := by R1 lean_s4105, lean_s3614, (Eq e1 (op e2 e2)), [(- 1), (- 1)]
have lean_s4107 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e1 (op e4 e3))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e1 (op e3 e4)) (Not (Eq e2 (op e3 e4)))))))))))))))))) := by R2 lean_s4106, lean_s45, (Eq e2 (op e2 e2)), [(- 1), 0]
have lean_s4108 : (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e1 (op e0 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e0 (op e4 e4)) (Not (Eq e2 (op e3 e4)))))))))) := by factor lean_s4107, (- 1)
let lean_s4109 := by R2 lean_s4108, lean_s1373, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
let lean_s4110 := by R1 lean_s4109, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s4111 := by R1 lean_s4110, lean_s1383, (Eq e4 (op e3 e4)), [(- 1), 0]
let lean_s4112 := by R2 lean_s4111, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s4113 := by R1 lean_s4112, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s4114 := by R1 lean_s4113, lean_s817, (Eq e1 (op e1 e4)), [(- 1), (- 1)]
let lean_s4115 := by R2 lean_s4114, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
have lean_s4116 : (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e2 e4)) (Eq e1 (op e3 e4))))))))))) := by R1 lean_s4115, lean_s818, (Eq (op e1 e1) (op e1 e4)), [(- 1), 0]
have lean_s4117 : (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e1 (op e2 e4)) (Or (Not (Eq e1 (op e4 e3))) (Eq e0 (op e4 e4))))))) := by factor lean_s4116, 9
have lean_s4118 : (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e3)) (Or (Eq e0 (op e4 e4)) (Not (Eq e1 (op e4 e3)))))))) := by permutateOr lean_s4117, [3, 1, 0, 2, 5, 4], (- 1)
let lean_s4119 := by R1 lean_s3664, lean_s4118, (Eq e1 (op e4 e3)), [(- 1), (- 1)]
have lean_s4120 : (Or (And (Not (Eq (op e1 e1) (op e1 e4))) (And (Eq e1 (op e1 e1)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3))))) (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e3 (op e3 e3))))))) := by timed cnfAndNeg [(Not (Eq (op e1 e1) (op e1 e4))), (Eq e1 (op e1 e1)), (Eq e3 (op e1 e4)), (Eq e3 (op e3 e3))]
have lean_s4121 : (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) :=
  (scope (fun lean_a662 : (Not (Eq (op e1 e1) (op e1 e4))) =>
    (scope (fun lean_a663 : (Eq e1 (op e1 e1)) =>
      (scope (fun lean_a664 : (Eq e3 (op e1 e4)) =>
        (scope (fun lean_a665 : (Eq e3 (op e3 e3)) =>
          have lean_s4121 : (Eq (op e1 e1) e1) := by timed Eq.symm lean_a663
          have lean_s4122 : (Eq e1 (op e1 e1)) := by timed Eq.symm lean_s4121
          let lean_s4123 := by timed flipCongrArg lean_s4122 [Eq]
          have lean_s4124 : (Eq (op e3 e3) e3) := by timed Eq.symm lean_a665
          have lean_s4125 : (Eq (op e1 e4) e3) := by timed Eq.symm lean_a664
          have lean_s4126 : (Eq e3 (op e1 e4)) := by timed Eq.symm lean_s4125
          have lean_s4127 : (Eq (op e3 e3) (op e1 e4)) := by timed Eq.trans lean_s4124 lean_s4126
          have lean_s4128 : (Eq (Eq e1 (op e3 e3)) (Eq (op e1 e1) (op e1 e4))) := by timed congr lean_s4123 lean_s4127
          have lean_s4129 : (Eq (Eq (op e1 e1) (op e1 e4)) False) := by timed falseIntro lean_a662
          have lean_s4130 : (Eq (Eq e1 (op e3 e3)) False) := by timed Eq.trans lean_s4128 lean_s4129
          have lean_s4131 : (Not (Eq e1 (op e3 e3))) := by timed falseElim lean_s4130
          show (Not (Eq e1 (op e3 e3))) from lean_s4131
  ))))))))
have lean_s4122 : (Implies (And (Not (Eq (op e1 e1) (op e1 e4))) (And (Eq e1 (op e1 e1)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3))))) (Not (Eq e1 (op e3 e3)))) := by liftOrNToImp lean_s4121, 4
have lean_s4123 : (Or (Not (And (Not (Eq (op e1 e1) (op e1 e4))) (And (Eq e1 (op e1 e1)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3)))))) (Not (Eq e1 (op e3 e3)))) := by timed impliesElim lean_s4122
have lean_s4124 : (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) := by R1 lean_s4120, lean_s4123, (And (Not (Eq (op e1 e1) (op e1 e4))) (And (Eq e1 (op e1 e1)) (And (Eq e3 (op e1 e4)) (Eq e3 (op e3 e3))))), [(- 1), (- 1)]
have lean_s4125 : (Eq Or Or) := by timed rfl
let lean_s4126 := by timed congr lean_s4125 lean_s811
let lean_s4127 := by timed congr lean_s4125 lean_s730
let lean_s4128 := by timed congr lean_s4125 lean_s1782
let lean_s4129 := by timed congr lean_s4125 lean_s17
let lean_s4130 := by timed congr lean_s4129 lean_s3424
let lean_s4131 := by timed congr lean_s4128 lean_s4130
let lean_s4132 := by timed congr lean_s4127 lean_s4131
have lean_s4133 : (Eq (Or (Not (Not (Eq (op e1 e1) (op e1 e4)))) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) (Or (Eq (op e1 e1) (op e1 e4)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3)))))))) := by timed congr lean_s4126 lean_s4132
have lean_s4134 : (Or (Eq (op e1 e1) (op e1 e4)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e3 (op e3 e3))) (Not (Eq e1 (op e3 e3))))))) := by timed eqResolve lean_s4124 lean_s4133
have lean_s4135 : (Or (Eq (op e1 e1) (op e1 e4)) (Or (Not (Eq e1 (op e1 e1))) (Or (Not (Eq e3 (op e3 e3))) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e1 (op e3 e3))))))) := by permutateOr lean_s4134, [0, 1, 3, 2, 4], (- 1)
let lean_s4136 := by R1 lean_s4119, lean_s4135, (Eq e1 (op e3 e3)), [(- 1), (- 1)]
let lean_s4137 := by R1 lean_s4136, lean_s818, (Eq (op e1 e1) (op e1 e4)), [(- 1), 0]
let lean_s4138 := by R2 lean_s4137, lean_s43, (Eq e3 (op e3 e3)), [(- 1), 0]
let lean_s4139 := by R2 lean_s4138, lean_s741, (Eq e1 (op e1 e1)), [(- 1), 0]
let lean_s4140 := by R1 lean_s4139, lean_s3845, (Eq e0 (op e4 e2)), [(- 1), (- 1)]
have lean_s4141 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e1 (op e0 e4))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e2 (op e3 e4)))))))))))))) := by R1 lean_s4140, lean_s4104, (Eq e3 (op e4 e1)), [(- 1), (- 1)]
have lean_s4142 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e4 e0)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e1 (op e0 e4))) (Not (Eq e2 (op e3 e4))))))))))) := by factor lean_s4141, (- 1)
let lean_s4143 := by R2 lean_s4142, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s4144 := by R1 lean_s4143, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s4145 := by R1 lean_s4144, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
have lean_s4146 : (Eq (Not (And (And (Eq e3 (op e1 e4)) (Eq e1 (op e4 e0))) (Eq e0 (op e2 e4)))) (Not (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e2 e4)))))) := by timed flipCongrArg lean_r232 [Not]
have lean_s4147 : (Not (And (Eq e3 (op e1 e4)) (And (Eq e1 (op e4 e0)) (Eq e0 (op e2 e4))))) := by timed eqResolve lean_a512 lean_s4146
have lean_s4148 : (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e1 (op e4 e0))) (Not (Eq e0 (op e2 e4))))) := by timed flipNotAnd lean_s4147 [(Eq e3 (op e1 e4)), (Eq e1 (op e4 e0)), (Eq e0 (op e2 e4))]
have lean_s4149 : (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e1 (op e4 e0))))) := by permutateOr lean_s4148, [0, 2, 1], (- 1)
have lean_s4150 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e0 (op e2 e4))))))))))))) := by R1 lean_s4145, lean_s4149, (Eq e1 (op e4 e0)), [(- 1), (- 1)]
have lean_s4151 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e2 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e0 (op e2 e4)))))))))) := by factor lean_s4150, (- 1)
let lean_s4152 := by R1 lean_s4151, lean_s2018, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
have lean_s4153 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e2 (op e3 e4))) (Or (Not (Eq e0 (op e2 e4))) (Not (Eq e0 (op e2 e4)))))))))) := by R1 lean_s4152, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s4154 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e2 (op e3 e4))) (Not (Eq e0 (op e2 e4))))))))) := by factor lean_s4153, (- 1)
let lean_s4155 := by R2 lean_s4154, lean_s1632, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s4156 := by R1 lean_s4155, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s4157 := by R1 lean_s4156, lean_s2169, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s4158 := by R1 lean_s4157, lean_s1668, (Eq e3 e0), [(- 1), 0]
let lean_s4159 := by R2 lean_s4158, lean_s1373, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
let lean_s4160 := by R1 lean_s4159, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
let lean_s4161 := by R1 lean_s4160, lean_s1383, (Eq e4 (op e3 e4)), [(- 1), 0]
have lean_s4162 : (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))))))))) := by R1 lean_s4161, lean_s4099, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
have lean_s4163 : (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Not (Eq e3 (op e1 e4)))))) := by factor lean_s4162, 9
have lean_s4164 : (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e3 (op e1 e4)))))) := by permutateOr lean_s4163, [1, 2, 0, 3], (- 1)
let lean_s4165 := by R1 lean_s3616, lean_s4164, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
let lean_s4166 := by R1 lean_s649, lean_s671, (Eq e2 (op e4 e2)), [(- 1), 0]
let lean_s4167 := by R1 lean_s4166, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s4168 := by R1 lean_s4167, lean_s893, (Eq e2 (op e4 e1)), [(- 1), (- 1)]
let lean_s4169 := by R1 lean_s4168, lean_s1606, (Eq e2 (op e4 e0)), [(- 1), (- 1)]
let lean_s4170 := by R2 lean_s4169, lean_s798, (Eq e1 (op e0 e4)), [(- 1), (- 1)]
let lean_s4171 := by R1 lean_s4170, lean_s820, (Eq e1 (op e1 e4)), [(- 1), 0]
let lean_s4172 := by R1 lean_s4171, lean_s2250, (Eq e1 (op e4 e4)), [(- 1), 0]
let lean_s4173 := by R2 lean_s4172, lean_s1632, (Eq e0 (op e1 e4)), [(- 1), (- 1)]
let lean_s4174 := by R1 lean_s4173, lean_s1647, (Eq e0 (op e0 e4)), [(- 1), 0]
let lean_s4175 := by R1 lean_s4174, lean_s1509, (Eq e1 (op e2 e4)), [(- 1), (- 1)]
let lean_s4176 := by R1 lean_s4175, lean_s1511, (Eq e3 e1), [(- 1), 0]
let lean_s4177 := by R1 lean_s4176, lean_s1666, (Eq e0 (op e2 e4)), [(- 1), (- 1)]
let lean_s4178 := by R1 lean_s4177, lean_s1668, (Eq e3 e0), [(- 1), 0]
have lean_s4179 : (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e3 (op e2 e4))) (Or (Not (Eq e3 (op e2 e4))) (Eq e0 (op e4 e4))))))))) := by R1 lean_s4178, lean_s4099, (Eq e2 (op e4 e3)), [(- 1), (- 1)]
have lean_s4180 : (Or (Not (Eq e3 (op e2 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))) := by factor lean_s4179, (- 1)
have lean_s4181 : (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e3 (op e2 e4)))))) := by permutateOr lean_s4180, [1, 2, 3, 0], (- 1)
have lean_s4182 : (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e1 (op e3 e4)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4)))))))))))))))) := by R1 lean_s4165, lean_s4181, (Eq e3 (op e2 e4)), [(- 1), (- 1)]
have lean_s4183 : (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e2 (op e3 e4))) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e3 e4)) (Eq e1 (op e3 e4)))))) := by factor lean_s4182, 14
let lean_s4184 := by R2 lean_s4183, lean_s1373, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
let lean_s4185 := by R1 lean_s4184, lean_s1383, (Eq e4 (op e3 e4)), [(- 1), 0]
have lean_s4186 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e1 (op e3 e4)) (Eq e0 (op e3 e4))))))) := by R1 lean_s4185, lean_s1405, (Eq e3 (op e3 e4)), [(- 1), 0]
have lean_s4187 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e0 (op e3 e4)) (Eq e1 (op e3 e4))))) := by factor lean_s4186, 5
have lean_s4188 : (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e3 e4)) (Eq e0 (op e4 e4))))) := by permutateOr lean_s4187, [3, 0, 2, 1], (- 1)
have lean_s4189 : (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Eq e0 (op e4 e4))))))) := by R2 lean_s3223, lean_s4188, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
have lean_s4190 : (Or (Eq e1 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Eq e0 (op e4 e4)))) := by factor lean_s4189, (- 1)
have lean_s4191 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Or (Not (Eq e3 (op e0 e4))) (Or (Eq e2 (op e4 e3)) (Eq e0 (op e4 e4)))))) := by R2 lean_s3129, lean_s4190, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s4192 : (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Not (Eq e3 (op e0 e4))))) := by factor lean_s4191, 4
have lean_s4193 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Not (Eq e3 (op e0 e4))))) := by permutateOr lean_s4192, [1, 0, 2], (- 1)
let lean_s4194 := by R1 lean_s1673, lean_s4193, (Eq e3 (op e0 e4)), [(- 1), (- 1)]
let lean_s4195 := by R1 lean_s1048, lean_s1063, (Eq e2 (op e2 e4)), [(- 1), 0]
let lean_s4196 := by R1 lean_s4195, lean_s713, (Eq e2 (op e4 e4)), [(- 1), 0]
let lean_s4197 := by R1 lean_s4196, lean_s1465, (Eq e2 (op e0 e4)), [(- 1), (- 1)]
let lean_s4198 := by R1 lean_s4197, lean_s1785, (Eq e2 (op e1 e4)), [(- 1), (- 1)]
have lean_s4199 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Or (Not (Eq e1 (op e4 e2))) (Not (Eq e3 (op e1 e4)))))) := by R1 lean_s4198, lean_s1449, (Eq e3 e2), [(- 1), 0]
have lean_s4200 : (Or (Eq e2 (op e3 e4)) (Or (Not (Eq e3 (op e1 e4))) (Not (Eq e1 (op e4 e2))))) := by factor lean_s4199, 3
have lean_s4201 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Or (Eq e0 (op e3 e4)) (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Not (Eq e1 (op e4 e2))))))))))) := by R1 lean_s4194, lean_s4200, (Eq e3 (op e1 e4)), [(- 1), (- 1)]
have lean_s4202 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e4 e2))) (Eq e0 (op e3 e4)))))) := by factor lean_s4201, 8
let lean_s4203 := by R2 lean_s4202, lean_s3113, (Eq e1 (op e4 e2)), [(- 1), (- 1)]
let lean_s4204 := by R1 lean_s4203, lean_s787, (Eq e0 (op e3 e4)), [(- 1), (- 1)]
have lean_s4205 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e1 (op e3 e4)))))))) := by R1 lean_s4204, lean_s789, (Eq e1 e0), [(- 1), 0]
have lean_s4206 : (Or (Eq e2 (op e4 e3)) (Or (Eq e2 (op e3 e4)) (Or (Eq e0 (op e4 e4)) (Not (Eq e1 (op e3 e4)))))) := by factor lean_s4205, (- 1)
let lean_s4207 := by R1 lean_s4206, lean_s3121, (Eq e2 (op e3 e4)), [(- 1), (- 1)]
have lean_s4208 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Not (Eq e1 (op e3 e4))) (Not (Eq e1 (op e3 e4)))))) := by R1 lean_s4207, lean_s2259, (Eq e2 e1), [(- 1), 0]
have lean_s4209 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Not (Eq e1 (op e3 e4))))) := by factor lean_s4208, (- 1)
have lean_s4210 : (Or (Eq e2 (op e4 e3)) (Or (Eq e0 (op e4 e4)) (Or (Eq e2 (op e4 e3)) (Eq e0 (op e4 e4))))) := by R2 lean_s4209, lean_s4190, (Eq e1 (op e3 e4)), [(- 1), (- 1)]
have lean_s4211 : (Or (Eq e2 (op e4 e3)) (Eq e0 (op e4 e4))) := by factor lean_s4210, (- 1)
have lean_s4212 : (Or (And (Eq e0 (op e4 e4)) (Eq e4 (op e4 e4))) (Or (Not (Eq e0 (op e4 e4))) (Not (Eq e4 (op e4 e4))))) := by timed cnfAndNeg [(Eq e0 (op e4 e4)), (Eq e4 (op e4 e4))]
have lean_s4213 : (Or (Not (Eq e0 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e0))) :=
  (scope (fun lean_a662 : (Eq e0 (op e4 e4)) =>
    (scope (fun lean_a663 : (Eq e4 (op e4 e4)) =>
      have lean_s4213 : (Eq (op e4 e4) e4) := by timed Eq.symm lean_a663
      have lean_s4214 : (Eq e4 (op e4 e4)) := by timed Eq.symm lean_s4213
      have lean_s4215 : (Eq (op e4 e4) e0) := by timed Eq.symm lean_a662
      have lean_s4216 : (Eq e4 e0) := by timed Eq.trans lean_s4214 lean_s4215
      show (Eq e4 e0) from lean_s4216
  ))))
have lean_s4214 : (Implies (And (Eq e0 (op e4 e4)) (Eq e4 (op e4 e4))) (Eq e4 e0)) := by liftOrNToImp lean_s4213, 2
have lean_s4215 : (Or (Not (And (Eq e0 (op e4 e4)) (Eq e4 (op e4 e4)))) (Eq e4 e0)) := by timed impliesElim lean_s4214
have lean_s4216 : (Or (Not (Eq e0 (op e4 e4))) (Or (Not (Eq e4 (op e4 e4))) (Eq e4 e0))) := by R1 lean_s4212, lean_s4215, (And (Eq e0 (op e4 e4)) (Eq e4 (op e4 e4))), [(- 1), (- 1)]
have lean_s4217 : (Or (Eq e4 e0) (Or (Not (Eq e4 (op e4 e4))) (Not (Eq e0 (op e4 e4))))) := by permutateOr lean_s4216, [2, 1, 0], (- 1)
let lean_s4218 := by R1 lean_s4217, lean_s3324, (Eq e4 e0), [(- 1), 0]
have lean_s4219 : (Not (Eq e0 (op e4 e4))) := by R2 lean_s4218, lean_s712, (Eq e4 (op e4 e4)), [(- 1), 0]
have lean_s4220 : (Not (Eq e2 (op e4 e3))) := by R1 lean_s4099, lean_s4219, (Eq e0 (op e4 e4)), [(- 1), 0]
let lean_s4221 := by R1 lean_s4211, lean_s4220, (Eq e2 (op e4 e3)), [(- 1), 0]
exact (show False from by R1 lean_s4221, lean_s4219, (Eq e0 (op e4 e4)), [0, 0])


