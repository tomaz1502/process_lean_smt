-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x7 : Int}
variable {x4 : Int}
variable {x10 : Int}
variable {x13 : Int}
variable {x6 : Int}
variable {x8 : Int}
variable {x3 : Int}
variable {x13 : Int}
variable {x11 : Int}
variable {x8 : Int}
variable {x11 : Int}
variable {x12 : Int}
variable {x6 : Int}
variable {x4 : Int}
variable {x2 : Int}
variable {x0 : Int}
variable {x0 : Int}
variable {x9 : Int}
variable {x5 : Int}
variable {x12 : Int}
variable {x5 : Int}
variable {x3 : Int}
variable {x1 : Int}
variable {x7 : Int}
variable {x14 : Int}
variable {x9 : Int}
variable {x2 : Int}
variable {x14 : Int}
variable {x10 : Int}
variable {x1 : Int}

theorem th0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 1))))) (Rat.ofInt 0)) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) True) → (Eq (Not True) False) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) → (Eq (Neg.neg x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13)))))))) → (Eq (binrel% HMul.hMul x10 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x10)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)) (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Neg.neg x7) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Neg.neg x1) (Neg.neg x12))))))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12) (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x3 x12))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))))))) → (Eq (Neg.neg x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) → (Eq (Neg.neg x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12)) → (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13)))))))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13))))))) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14))))) → (Eq (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5)) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))))) → (Eq (Neg.neg x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) → (Eq (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0)) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) True) → (Eq (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9)) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12)))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13)))))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Int.ofNat 0)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Rat.ofInt 0)) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (Neg.neg x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)) → (Eq (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x8 x3))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd (Neg.neg x11) (binrel% HAdd.hAdd (Neg.neg x8) x12)))))) → (Eq (Neg.neg x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2)) → (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) x12))))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x0 (Neg.neg x3))))) → (Eq (binrel% GT.gt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)))) → (Eq (Neg.neg x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1)) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x3 x12)))) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) → (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3)))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) → (Eq (Neg.neg x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3)) → (Eq (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10))))) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) → (Eq (Neg.neg x11) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (Rat.ofInt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))))) → (Eq (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x8 x3)))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (Rat.ofInt 0)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12)))) → (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x11))))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd x10 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)))))) (Int.ofNat 1))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) → (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (And (And (And (And (And (And (And (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0)) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))))))))))))))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x12 x14)))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x10))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)))) (Int.ofNat 0))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13)))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Neg.neg x7) x10)))) → (Eq (Neg.neg x13) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Neg.neg x10) (binrel% HAdd.hAdd x4 (Neg.neg x1))))))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))) (Int.ofNat 1))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x12 x14))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Int.ofNat 0))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13))))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (Rat.ofInt 0)) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13))))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))))) → (Eq (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13)) → (Eq (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x11)))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x10 (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))))))))) → (Eq (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10)) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) True) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (Neg.neg (Rat.ofInt 2))) → (Eq (Neg.neg x0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0)) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))))) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) True) → (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (And (And (And (And (And (And (And (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))))) → False :=
fun lean_r0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 1))))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r7 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (Neg.neg x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13)))))))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% HMul.hMul x10 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x10)) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)) (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Neg.neg x7) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Neg.neg x1) (Neg.neg x12))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12) (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x3 x12))))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))))))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (Neg.neg x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (Neg.neg x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12)) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13)))))))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13))))))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14))))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5)) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (Neg.neg x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0)) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9)) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12)))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13)))))))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))))) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r36 : (Eq (Neg.neg x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x8 x3))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd (Neg.neg x11) (binrel% HAdd.hAdd (Neg.neg x8) x12)))))) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (Neg.neg x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2)) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) x12))))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))))) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x0 (Neg.neg x3))))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (Neg.neg x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1)) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x3 x12)))) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3)))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq (Neg.neg x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3)) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10))))) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (Neg.neg x11) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (Rat.ofInt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))))) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8)) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x8 x3)))))) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12)))) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x11))))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd x10 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)))))) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (And (And (And (And (And (And (And (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0)) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x12 x14)))) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x10))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13)))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Neg.neg x7) x10)))) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq (Neg.neg x13) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Neg.neg x10) (binrel% HAdd.hAdd x4 (Neg.neg x1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r65 : (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x12 x14))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13))))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13))))))) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13)) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x11)))))) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x10 (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10)) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) => -- THEORY_REWRITE_BOOL
fun lean_r76 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (Neg.neg (Rat.ofInt 2))) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq (Neg.neg x0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0)) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) True) => -- THEORY_REWRITE_BOOL
fun lean_a82 : (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (And (And (And (And (And (And (And (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) False))))) :=
  (scope (fun lean_a83 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) =>
    (scope (fun lean_a84 : (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0)) =>
      (scope (fun lean_a85 : (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)) =>
        (scope (fun lean_a86 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) =>
          (scope (fun lean_a87 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) =>
            have lean_s0 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) := by timed Eq.symm lean_r3
            have lean_s1 : (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) := by timed eqResolve lean_a87 lean_s0
            have lean_s2 : (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) := by intTightUb lean_s1
            have lean_s3 : (Or (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) False) :=
              (scope (fun lean_a88 : (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) =>
                have lean_s3 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r35
                have lean_s4 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) := by timed And.intro lean_s3 lean_a88
                have lean_s5 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))), (Int.ofNat 0), (Rat.ofInt 1)], 1
                have lean_s6 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s4 lean_s5
                have lean_s7 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) := by timed Eq.symm lean_r0
                have lean_s8 : (binrel% LT.lt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) := by timed eqResolve lean_a86 lean_s7
                have lean_s9 : (binrel% LE.le (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 1)) := by intTightUb lean_s8
                have lean_s10 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 1))) := by timed And.intro lean_s3 lean_s9
                have lean_s11 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 1))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))), (Int.ofNat 1), (Rat.ofInt 1)], 1
                have lean_s12 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s10 lean_s11
                have lean_s13 : (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) := by timed trueElim lean_r6
                have lean_s14 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) := by timed And.intro lean_s13 lean_a85
                have lean_s15 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)))) := by arithMulNeg [(binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))), (Int.ofNat 1), (Neg.neg (Rat.ofInt 2))], 3
                have lean_s16 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1))) := by timed modusPonens lean_s14 lean_s15
                have lean_s17 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r64
                have lean_s18 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) := by timed And.intro lean_s17 lean_a84
                have lean_s19 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)))) := by arithMulNeg [(binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)), (Int.ofNat 0), (Neg.neg (Rat.ofInt 1))], 3
                have lean_s20 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0))) := by timed modusPonens lean_s18 lean_s19
                have lean_s21 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) := by timed Eq.symm lean_r1
                have lean_s22 : (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) := by timed eqResolve lean_a83 lean_s21
                have lean_s23 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) := by timed And.intro lean_s3 lean_s22
                have lean_s24 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))), (Int.ofNat 1), (Rat.ofInt 1)], 0
                have lean_s25 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s23 lean_s24
                have lean_s26 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))) := by sumBounds [lean_s6, lean_s12, lean_s16, lean_s20, lean_s25]
                let lean_s27 := by timed congrHAdd lean_r19 lean_r2
                let lean_s28 := by timed congrHAdd lean_r11 lean_s27
                let lean_s29 := by timed congrHAdd lean_r49 lean_s28
                have lean_s30 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13))))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Rat.ofInt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))))))))) := by timed congrHAdd lean_r21 lean_s29
                have lean_s31 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s30 lean_r68
                let lean_s32 := by timed flipCongrArg lean_s31 [GE.ge]
                let lean_s33 := by timed congrHAdd lean_r33 lean_r76
                let lean_s34 := by timed congrHAdd lean_r78 lean_s33
                let lean_s35 := by timed congrHAdd lean_r76 lean_s34
                have lean_s36 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 1)))))) := by timed congrHAdd lean_r52 lean_s35
                have lean_s37 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s36 lean_r4
                have lean_s38 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s32 lean_s37
                have lean_s39 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))) True) := by timed Eq.trans lean_s38 lean_r5
                have lean_s40 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))))))) (Not True)) := by timed flipCongrArg lean_s39 [Not]
                have lean_s41 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))))))) False) := by timed Eq.trans lean_s40 lean_r7
                have lean_s42 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))))))) False) := by timed Eq.trans lean_r70 lean_s41
                show False from by timed eqResolve lean_s26 lean_s42
              ))
            have lean_s4 : (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) := by liftOrNToNeg lean_s3
            have lean_s5 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))))) := by timed flipCongrArg lean_r9 [Not]
            have lean_s6 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) := by timed Eq.trans lean_s5 lean_r75
            have lean_s7 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) := by timed Eq.trans lean_r42 lean_s6
            have lean_s8 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (binrel% GT.gt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) := by timed Eq.symm lean_s7
            have lean_s9 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) (binrel% GT.gt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) := by timed Eq.trans lean_s6 lean_s8
            have lean_s10 : (binrel% GT.gt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) := by timed eqResolve lean_s4 lean_s9
            have lean_s11 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)))) := by timed Eq.symm lean_s6
            have lean_s12 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0)))) := by timed Eq.trans lean_s7 lean_s11
            have lean_s13 : (Not (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) := by timed eqResolve lean_s10 lean_s12
            show False from by timed contradiction lean_s2 lean_s13
  ))))))))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))), (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)), (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))), (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) := by timed congr lean_s5 lean_r24
have lean_s7 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))))) True) := by timed Eq.trans lean_s6 lean_r81
have lean_s8 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) True) := by timed Eq.trans lean_r29 lean_s7
have lean_s9 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0)))) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)))) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [Eq]
have lean_s17 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) := by timed congr lean_s16 lean_r34
have lean_s18 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))))) True) := by timed Eq.trans lean_s17 lean_r77
have lean_s19 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) True) := by timed Eq.trans lean_r80 lean_s18
have lean_s20 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) := by timed trueElim lean_s19
let lean_s21 := by timed congr lean_s3 lean_s20
have lean_s22 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) := by timed rfl
let lean_s23 := by timed flipCongrArg lean_s22 [Eq]
have lean_s24 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) := by timed congr lean_s23 lean_r75
have lean_s25 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))))) True) := by timed Eq.trans lean_s24 lean_r26
have lean_s26 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) True) := by timed Eq.trans lean_r28 lean_s25
have lean_s27 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) := by timed trueElim lean_s26
let lean_s28 := by timed congr lean_s21 lean_s27
let lean_s29 := by timed congr lean_s14 lean_s28
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))))))) (Or (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (Or (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))))))) := by timed congr lean_s10 lean_s30
have lean_s32 : (Or (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (Or (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))))) := by timed eqResolve lean_s2 lean_s31
have lean_s33 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) (Or (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)) (Or (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)) (Or (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))))))) := by permutateOr lean_s32, [2, 0, 4, 3, 1], (- 1)
have lean_s34 : (Eq And And) := by timed rfl
let lean_s35 := by timed congrHAdd lean_r27 lean_r20
let lean_s36 := by timed congrHAdd lean_r12 lean_s35
let lean_s37 := by timed congrHAdd lean_r50 lean_s36
let lean_s38 := by timed congrHAdd lean_r23 lean_s37
have lean_s39 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x10 (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5))))))) := by timed congrHAdd lean_r71 lean_s38
have lean_s40 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x10 (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13))))))) := by timed Eq.trans lean_s39 lean_r69
have lean_s41 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13))))))) := by timed Eq.trans lean_r73 lean_s40
let lean_s42 := by timed flipCongrArg lean_s41 [GE.ge]
have lean_s43 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s44 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x13)))))) (Int.ofNat 0))) := by timed congr lean_s42 lean_s43
have lean_s45 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)))) := by timed Eq.trans lean_s44 lean_r60
have lean_s46 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))))) := by timed flipCongrArg lean_s45 [Not]
have lean_s47 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1))) := by timed Eq.trans lean_s46 lean_r67
let lean_s48 := by timed congr lean_s34 lean_s47
have lean_s49 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
let lean_s50 := by timed flipCongrArg lean_s49 [LE.le]
have lean_s51 : (Eq x6 x6) := by timed rfl
have lean_s52 : (Eq x3 x3) := by timed rfl
have lean_s53 : (Eq x12 x12) := by timed rfl
let lean_s54 := by timed congrHAdd lean_s52 lean_s53
let lean_s55 := by timed congrHAdd lean_r16 lean_s54
let lean_s56 := by timed congrHAdd lean_s51 lean_s55
have lean_s57 : (Eq (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x3 x12)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x3 x12))))) := by timed congrHAdd lean_r62 lean_s56
have lean_s58 : (Eq (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x3 x12)))) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) := by timed Eq.trans lean_s57 lean_r44
have lean_s59 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) := by timed Eq.trans lean_r14 lean_s58
have lean_s60 : (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))))) := by timed congr lean_s50 lean_s59
have lean_s61 : (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))) (Int.ofNat 1))) := by timed Eq.trans lean_s60 lean_r65
let lean_s62 := by timed congr lean_s34 lean_s61
have lean_s63 : (Eq x11 x11) := by timed rfl
have lean_s64 : (Eq x7 x7) := by timed rfl
have lean_s65 : (Eq x8 x8) := by timed rfl
have lean_s66 : (Eq x4 x4) := by timed rfl
let lean_s67 := by timed congrHAdd lean_s66 lean_r43
let lean_s68 := by timed congrHAdd lean_r36 lean_s67
let lean_s69 := by timed congrHAdd lean_s65 lean_s68
let lean_s70 := by timed congrHAdd lean_s64 lean_s69
have lean_s71 : (Eq (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Neg.neg x10) (binrel% HAdd.hAdd x4 (Neg.neg x1)))))) (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1))))))) := by timed congrHAdd lean_s63 lean_s70
have lean_s72 : (Eq (binrel% HAdd.hAdd x11 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Neg.neg x10) (binrel% HAdd.hAdd x4 (Neg.neg x1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x11)))))) := by timed Eq.trans lean_s71 lean_r72
have lean_s73 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x11)))))) := by timed Eq.trans lean_r63 lean_s72
let lean_s74 := by timed flipCongrArg lean_s73 [LE.le]
have lean_s75 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
have lean_s76 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x11))))) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s74 lean_s75
have lean_s77 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd x10 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)))))) (Int.ofNat 1))) := by timed Eq.trans lean_s76 lean_r55
let lean_s78 := by timed congr lean_s34 lean_s77
have lean_s79 : (Eq x5 x5) := by timed rfl
have lean_s80 : (Eq x10 x10) := by timed rfl
let lean_s81 := by timed congrHAdd lean_r22 lean_s80
let lean_s82 := by timed congrHAdd lean_s79 lean_s81
have lean_s83 : (Eq (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Neg.neg x7) x10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x10)))) := by timed congrHAdd lean_r39 lean_s82
have lean_s84 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x10)))) := by timed Eq.trans lean_r61 lean_s83
let lean_s85 := by timed flipCongrArg lean_s84 [LE.le]
have lean_s86 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x10))) (Int.ofNat 0))) := by timed congr lean_s85 lean_s43
have lean_s87 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)))) (Int.ofNat 0))) := by timed Eq.trans lean_s86 lean_r59
let lean_s88 := by timed congr lean_s34 lean_s87
have lean_s89 : (Eq x14 x14) := by timed rfl
let lean_s90 := by timed congrHAdd lean_s65 lean_s53
let lean_s91 := by timed congrHAdd lean_s89 lean_s90
have lean_s92 : (Eq (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12)))) := by timed congrHAdd lean_r79 lean_s91
have lean_s93 : (Eq (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x8 x12))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x12 x14)))) := by timed Eq.trans lean_s92 lean_r58
have lean_s94 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x12 x14)))) := by timed Eq.trans lean_r53 lean_s93
let lean_s95 := by timed flipCongrArg lean_s94 [LE.le]
have lean_s96 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x12 x14))) (Int.ofNat 0))) := by timed congr lean_s95 lean_s43
have lean_s97 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Int.ofNat 0))) := by timed Eq.trans lean_s96 lean_r66
let lean_s98 := by timed congr lean_s34 lean_s97
have lean_s99 : (Eq x2 x2) := by timed rfl
have lean_s100 : (Eq x0 x0) := by timed rfl
let lean_s101 := by timed congrHAdd lean_s100 lean_r46
let lean_s102 := by timed congrHAdd lean_s79 lean_s101
have lean_s103 : (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x0 (Neg.neg x3)))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3))))) := by timed congrHAdd lean_s99 lean_s102
have lean_s104 : (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x0 (Neg.neg x3)))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) := by timed Eq.trans lean_s103 lean_r45
have lean_s105 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5)))) := by timed Eq.trans lean_r41 lean_s104
let lean_s106 := by timed flipCongrArg lean_s105 [LE.le]
have lean_s107 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 0))) := by timed congr lean_s106 lean_s43
have lean_s108 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)))) := by timed Eq.trans lean_s107 lean_r8
let lean_s109 := by timed congr lean_s34 lean_s108
have lean_s110 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13)))))) := by timed Eq.trans lean_r51 lean_r37
let lean_s111 := by timed flipCongrArg lean_s110 [LE.le]
have lean_s112 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 0))) := by timed congr lean_s111 lean_s43
have lean_s113 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)))) := by timed Eq.trans lean_s112 lean_r9
let lean_s114 := by timed congr lean_s34 lean_s113
let lean_s115 := by timed flipCongrArg lean_s43 [LE.le]
have lean_s116 : (Eq x13 x13) := by timed rfl
let lean_s117 := by timed congrHAdd lean_r43 lean_r17
let lean_s118 := by timed congrHAdd lean_s66 lean_s117
let lean_s119 := by timed congrHAdd lean_s100 lean_s118
let lean_s120 := by timed congrHAdd lean_s116 lean_s119
let lean_s121 := by timed congrHAdd lean_r22 lean_s120
let lean_s122 := by timed congrHAdd lean_s79 lean_s121
have lean_s123 : (Eq (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Neg.neg x7) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Neg.neg x1) (Neg.neg x12)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12))))))))) := by timed congrHAdd lean_r39 lean_s122
have lean_s124 : (Eq (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Neg.neg x7) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Neg.neg x1) (Neg.neg x12)))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13)))))))) := by timed Eq.trans lean_s123 lean_r30
have lean_s125 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13)))))))) := by timed Eq.trans lean_r13 lean_s124
have lean_s126 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13))))))))) := by timed congr lean_s115 lean_s125
have lean_s127 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13))))))) (Int.ofNat 0))) := by timed Eq.trans lean_s126 lean_r18
let lean_s128 := by timed congr lean_s34 lean_s127
let lean_s129 := by timed congrHAdd lean_s65 lean_r74
let lean_s130 := by timed congrHAdd lean_r16 lean_s129
let lean_s131 := by timed congrHAdd lean_s89 lean_s130
have lean_s132 : (Eq (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2))))))) (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10)))))) := by timed congrHAdd lean_s116 lean_s131
have lean_s133 : (Eq (binrel% HAdd.hAdd x13 (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd (Neg.neg x9) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2))))))) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) := by timed Eq.trans lean_s132 lean_r47
have lean_s134 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14))))) := by timed Eq.trans lean_r15 lean_s133
let lean_s135 := by timed flipCongrArg lean_s134 [LE.le]
have lean_s136 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1)) (binrel% LE.le (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 1))) := by timed congr lean_s135 lean_s49
have lean_s137 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)))) := by timed Eq.trans lean_s136 lean_r56
let lean_s138 := by timed congr lean_s34 lean_s137
let lean_s139 := by timed congrHAdd lean_r10 lean_s53
let lean_s140 := by timed congrHAdd lean_r48 lean_s139
let lean_s141 := by timed congrHAdd lean_r62 lean_s140
let lean_s142 := by timed congrHAdd lean_s99 lean_s141
have lean_s143 : (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd (Neg.neg x11) (binrel% HAdd.hAdd (Neg.neg x8) x12))))) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) x12)))))) := by timed congrHAdd lean_s51 lean_s142
have lean_s144 : (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (Neg.neg x13) (binrel% HAdd.hAdd (Neg.neg x11) (binrel% HAdd.hAdd (Neg.neg x8) x12))))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))))) := by timed Eq.trans lean_s143 lean_r40
have lean_s145 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))))) := by timed Eq.trans lean_r38 lean_s144
let lean_s146 := by timed flipCongrArg lean_s145 [LE.le]
have lean_s147 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s146 lean_s75
have lean_s148 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Int.ofNat 0)))) := by timed Eq.trans lean_s147 lean_r32
let lean_s149 := by timed congr lean_s34 lean_s148
let lean_s150 := by timed flipCongrArg lean_s43 [LE.le]
let lean_s151 := by timed congrHAdd lean_s99 lean_r27
have lean_s152 : (Eq (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))) (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9)))) := by timed congrHAdd lean_s89 lean_s151
have lean_s153 : (Eq (binrel% HAdd.hAdd x14 (binrel% HAdd.hAdd x2 (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) := by timed Eq.trans lean_s152 lean_r25
have lean_s154 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14))) := by timed Eq.trans lean_r31 lean_s153
have lean_s155 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)))) := by timed congr lean_s150 lean_s154
have lean_s156 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))) := by timed Eq.trans lean_s155 lean_r54
let lean_s157 := by timed congr lean_s149 lean_s156
let lean_s158 := by timed congr lean_s138 lean_s157
let lean_s159 := by timed congr lean_s128 lean_s158
let lean_s160 := by timed congr lean_s114 lean_s159
let lean_s161 := by timed congr lean_s109 lean_s160
let lean_s162 := by timed congr lean_s98 lean_s161
let lean_s163 := by timed congr lean_s88 lean_s162
let lean_s164 := by timed congr lean_s78 lean_s163
let lean_s165 := by timed congr lean_s62 lean_s164
have lean_s166 : (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0)) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))))))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd x10 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13))))))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Int.ofNat 0))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))))))))))))) := by timed congr lean_s48 lean_s165
have lean_s167 : (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x13 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x0 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul x10 (Int.ofNat 2))))) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2)))) (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 0))) (And (And (And (And (And (And (And (And (And (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x13) x6) (Neg.neg x9)) x3) x12)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x11 x7) x8) (Neg.neg x10)) x4) (Neg.neg x1)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x10) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x14) x8) x12) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x2 x5) x0) (Neg.neg x3)) (Int.ofNat 0))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x5) x9) x0) x8) x3) (Int.ofNat 0))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x5) (Neg.neg x7)) x13) x0) x4) (Neg.neg x1)) (Neg.neg x12)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x13 x14) (Neg.neg x9)) x8) (binrel% HMul.hMul x10 (Neg.neg (Int.ofNat 2)))) (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x2) (Neg.neg x13)) (Neg.neg x11)) (Neg.neg x8)) x12) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x14 x2) (binrel% HMul.hMul x9 (Neg.neg (Int.ofNat 2))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd x10 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13))))))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Int.ofNat 0))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0))))))))))))) := by timed Eq.trans lean_r57 lean_s166
have lean_s168 : (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd x10 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11)))))) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x14)))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x12) x13))))))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x11) (binrel% HAdd.hAdd x12 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x13)))))) (Int.ofNat 0))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0)))))))))))) := by timed eqResolve lean_a82 lean_s167
have lean_s169 : (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0)) := by andElim lean_s168, 10
let lean_s170 := by R2 lean_s33, lean_s169, (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x9) x14)) (Int.ofNat 0)), [(- 1), 0]
have lean_s171 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2))) := by andElim lean_s168, 8
let lean_s172 := by R1 lean_s170, lean_s171, (binrel% GE.ge (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x10) (binrel% HAdd.hAdd x13 x14)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s173 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1))) := by andElim lean_s168, 6
let lean_s174 := by R1 lean_s172, lean_s173, (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 x13))))) (Int.ofNat 1)), [(- 1), 0]
have lean_s175 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1))) := by andElim lean_s168, 5
let lean_s176 := by R1 lean_s174, lean_s175, (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) x5))) (Int.ofNat 1)), [(- 1), 0]
have lean_s177 : (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)) := by andElim lean_s168, 0
exact (show False from by R2 lean_s176, lean_s177, (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x10) x13))))) (Int.ofNat 1)), [0, 0])


