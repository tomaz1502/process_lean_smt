-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x9 : Int}
variable {x4 : Int}
variable {x6 : Int}
variable {x5 : Int}
variable {x1 : Int}
variable {x8 : Int}
variable {x2 : Int}
variable {x6 : Int}
variable {x4 : Int}
variable {x9 : Int}
variable {x7 : Int}
variable {x5 : Int}
variable {x7 : Int}
variable {x1 : Int}
variable {x0 : Int}
variable {x8 : Int}
variable {x2 : Int}
variable {x0 : Int}

theorem th0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9)))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Rat.ofInt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))))) → (Eq (binrel% HMul.hMul x8 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x8)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9)))) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) → (Eq (binrel% HSub.hSub x4 x9) (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Int.ofNat 2)) (Neg.neg x7)))) → (Eq (Neg.neg x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8)))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1))) → (Eq (binrel% HMul.hMul x5 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x5)) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 4)) (binrel% HAdd.hAdd (Rat.ofInt 1) (Rat.ofInt 2)))) (Rat.ofInt 0)) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x0) x2))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x6) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 2)) (Neg.neg x7))))) → (Eq (Neg.neg x0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0)) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Int.ofNat 0)))) → (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 x9))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 1)))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) → (Eq (binrel% GT.gt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) x2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 x9))))) → (Eq (Neg.neg x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))))) → (Eq (Neg.neg x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x1 (Neg.neg x7)))) → (Eq (binrel% HAdd.hAdd x8 x1) (binrel% HAdd.hAdd x1 x8)) → (Eq (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5)) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))))) → (Eq (Neg.neg x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (Neg.neg x7)))))) → (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (Int.ofNat 0))) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) True) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) → (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (Neg.neg x7))))) → (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x1 x8)) (binrel% GE.ge (binrel% HAdd.hAdd x1 x8) (Int.ofNat 1))) → (Eq (binrel% HMul.hMul x2 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x2)) → (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) x8))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Int.ofNat 2) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) → (Eq (binrel% HMul.hMul x9 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x9)) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul (Int.ofNat 4) x8)) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) (binrel% HMul.hMul x9 (Int.ofNat 2)))))) → (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (And (And (And (And (And (And (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0))) (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1))) (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2))) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1)) (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7))) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2)) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)))))))))))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (Rat.ofInt 2)) → (Eq (binrel% HMul.hMul x1 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x1)) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) True) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) x8)))) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) True) → (Eq (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) True) → (Eq (Not True) False) → (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Rat.ofInt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (Rat.ofInt 0)) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (Rat.ofInt 1)) → (Eq (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (Neg.neg (Rat.ofInt 4))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) → (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (And (And (And (And (And (And (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0))) (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1))) (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2))) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)))) → False :=
fun lean_r0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9)))))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Rat.ofInt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul x8 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x8)) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9)))) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HSub.hSub x4 x9) (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))))) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Int.ofNat 2)) (Neg.neg x7)))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (Neg.neg x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8)))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% HMul.hMul x5 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x5)) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 4)) (binrel% HAdd.hAdd (Rat.ofInt 1) (Rat.ofInt 2)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r20 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x0) x2))))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x6) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 2)) (Neg.neg x7))))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (Neg.neg x0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0)) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 x9))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) x2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 x9))))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (Neg.neg x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq (Neg.neg x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2)) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x1 (Neg.neg x7)))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HAdd.hAdd x8 x1) (binrel% HAdd.hAdd x1 x8)) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5)) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))))) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (Neg.neg x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (Neg.neg x7)))))) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (Neg.neg x7))))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x1 x8)) (binrel% GE.ge (binrel% HAdd.hAdd x1 x8) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq (binrel% HMul.hMul x2 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x2)) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) x8))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Int.ofNat 2) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9))))) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (binrel% HMul.hMul x9 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x9)) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r52 : (Eq (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul (Int.ofNat 4) x8)) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) (binrel% HMul.hMul x9 (Int.ofNat 2)))))) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (And (And (And (And (And (And (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0))) (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1))) (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2))) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1)) (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7))) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2)) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (Rat.ofInt 2)) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq (binrel% HMul.hMul x1 (Int.ofNat 2)) (binrel% HMul.hMul (Int.ofNat 2) x1)) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) x8)))) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r62 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Rat.ofInt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (Rat.ofInt 1)) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (Neg.neg (Rat.ofInt 4))) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) => -- THEORY_REWRITE_ARITH
fun lean_a70 : (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (And (And (And (And (And (And (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0))) (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1))) (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2))) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) False)))) :=
  (scope (fun lean_a71 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) =>
    (scope (fun lean_a72 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) =>
      (scope (fun lean_a73 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) =>
        (scope (fun lean_a74 : (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) =>
          have lean_s0 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) := by timed Eq.symm lean_r0
          have lean_s1 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) := by timed eqResolve lean_a74 lean_s0
          have lean_s2 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) := by intTightUb lean_s1
          have lean_s3 : (Or (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) False) :=
            (scope (fun lean_a75 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) =>
              have lean_s3 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r51
              have lean_s4 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) := by timed And.intro lean_s3 lean_a75
              have lean_s5 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))), (Int.ofNat 1), (Rat.ofInt 1)], 1
              have lean_s6 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s4 lean_s5
              have lean_s7 : (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) := by timed trueElim lean_r61
              have lean_s8 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) (binrel% LT.lt (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) := by timed Eq.symm lean_r10
              have lean_s9 : (binrel% LT.lt (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) := by timed eqResolve lean_a73 lean_s8
              have lean_s10 : (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 2))) := by intTightUb lean_s9
              have lean_s11 : (And (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 2)))) := by timed And.intro lean_s7 lean_s10
              have lean_s12 : (Implies (And (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 2)))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))))) := by arithMulPos [(binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))), (Neg.neg (Int.ofNat 2)), (Rat.ofInt 2)], 1
              have lean_s13 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2)))) := by timed modusPonens lean_s11 lean_s12
              have lean_s14 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r19
              have lean_s15 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) := by timed And.intro lean_s14 lean_a72
              have lean_s16 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))))) := by arithMulNeg [(binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))), (Neg.neg (Int.ofNat 1)), (Neg.neg (Rat.ofInt 1))], 3
              have lean_s17 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1)))) := by timed modusPonens lean_s15 lean_s16
              have lean_s18 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) := by timed Eq.symm lean_r48
              have lean_s19 : (binrel% LT.lt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) := by timed eqResolve lean_a71 lean_s18
              have lean_s20 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) := by timed And.intro lean_s3 lean_s19
              have lean_s21 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))) := by arithMulPos [(binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))), (Int.ofNat 2), (Rat.ofInt 1)], 0
              have lean_s22 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))) := by timed modusPonens lean_s20 lean_s21
              have lean_s23 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) := by sumBounds [lean_s6, lean_s13, lean_s17, lean_s22]
              let lean_s24 := by timed congrHAdd lean_r8 lean_r3
              let lean_s25 := by timed congrHAdd lean_r2 lean_s24
              have lean_s26 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Rat.ofInt (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))))))) := by timed congrHAdd lean_r1 lean_s25
              have lean_s27 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s26 lean_r65
              let lean_s28 := by timed flipCongrArg lean_s27 [GE.ge]
              let lean_s29 := by timed congrHAdd lean_r67 lean_r56
              let lean_s30 := by timed congrHAdd lean_r68 lean_s29
              have lean_s31 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 4)) (binrel% HAdd.hAdd (Rat.ofInt 1) (Rat.ofInt 2))))) := by timed congrHAdd lean_r69 lean_s30
              have lean_s32 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s31 lean_r17
              have lean_s33 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s28 lean_s32
              have lean_s34 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) True) := by timed Eq.trans lean_s33 lean_r66
              have lean_s35 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) (Not True)) := by timed flipCongrArg lean_s34 [Not]
              have lean_s36 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) False) := by timed Eq.trans lean_s35 lean_r62
              have lean_s37 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 2) (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (Int.ofNat 1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) False) := by timed Eq.trans lean_r6 lean_s36
              show False from by timed eqResolve lean_s23 lean_s37
            ))
          have lean_s4 : (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) := by liftOrNToNeg lean_s3
          have lean_s5 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))))) := by timed flipCongrArg lean_r4 [Not]
          have lean_s6 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) := by timed Eq.trans lean_s5 lean_r50
          have lean_s7 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) := by timed Eq.trans lean_r27 lean_s6
          have lean_s8 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (binrel% GT.gt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) := by timed Eq.symm lean_s7
          have lean_s9 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) (binrel% GT.gt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) := by timed Eq.trans lean_s6 lean_s8
          have lean_s10 : (binrel% GT.gt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) := by timed eqResolve lean_s4 lean_s9
          have lean_s11 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)))) := by timed Eq.symm lean_s6
          have lean_s12 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)) (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1)))) := by timed Eq.trans lean_s7 lean_s11
          have lean_s13 : (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) := by timed eqResolve lean_s10 lean_s12
          show False from by timed contradiction lean_s2 lean_s13
  ))))))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))), (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))), (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) := by timed congr lean_s5 lean_r64
have lean_s7 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))))) True) := by timed Eq.trans lean_s6 lean_r60
have lean_s8 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) True) := by timed Eq.trans lean_r30 lean_s7
have lean_s9 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))))) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) := by timed rfl
let lean_s14 := by timed flipCongrArg lean_s13 [Eq]
have lean_s15 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) := by timed congr lean_s14 lean_r46
have lean_s16 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))))) True) := by timed Eq.trans lean_s15 lean_r39
have lean_s17 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) True) := by timed Eq.trans lean_r12 lean_s16
have lean_s18 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) := by timed trueElim lean_s17
let lean_s19 := by timed congr lean_s3 lean_s18
have lean_s20 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) := by timed rfl
let lean_s21 := by timed flipCongrArg lean_s20 [Eq]
have lean_s22 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) := by timed congr lean_s21 lean_r50
have lean_s23 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))))) True) := by timed Eq.trans lean_s22 lean_r58
have lean_s24 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) True) := by timed Eq.trans lean_r55 lean_s23
have lean_s25 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) := by timed trueElim lean_s24
let lean_s26 := by timed congr lean_s19 lean_s25
let lean_s27 := by timed congr lean_s12 lean_s26
have lean_s28 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))))))) (Or (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) (Or (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))))) := by timed congr lean_s10 lean_s27
have lean_s29 : (Or (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) (Or (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))))) := by timed eqResolve lean_s2 lean_s28
have lean_s30 : (Or (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))) (Or (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)) (Or (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))))))) := by permutateOr lean_s29, [2, 3, 0, 1], (- 1)
have lean_s31 : (Eq And And) := by timed rfl
let lean_s32 := by timed congrHAdd lean_r44 lean_r49
let lean_s33 := by timed congrHAdd lean_r52 lean_s32
have lean_s34 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) (binrel% HMul.hMul x9 (Int.ofNat 2))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Int.ofNat 2) x9))))) := by timed congrHAdd lean_r34 lean_s33
have lean_s35 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) (binrel% HMul.hMul x9 (Int.ofNat 2))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9))))) := by timed Eq.trans lean_s34 lean_r47
have lean_s36 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9))))) := by timed Eq.trans lean_r53 lean_s35
let lean_s37 := by timed flipCongrArg lean_s36 [GE.ge]
have lean_s38 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
have lean_s39 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) x8) (binrel% HMul.hMul (Int.ofNat 2) x9)))) (Neg.neg (Int.ofNat 2)))) := by timed congr lean_s37 lean_s38
have lean_s40 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) := by timed Eq.trans lean_s39 lean_r9
have lean_s41 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))))) := by timed flipCongrArg lean_s40 [Not]
let lean_s42 := by timed congr lean_s31 lean_s41
have lean_s43 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s44 := by timed flipCongrArg lean_s43 [LE.le]
have lean_s45 : (Eq x6 x6) := by timed rfl
have lean_s46 : (Eq x9 x9) := by timed rfl
have lean_s47 : (Eq x8 x8) := by timed rfl
let lean_s48 := by timed congrHAdd lean_r44 lean_s47
let lean_s49 := by timed congrHAdd lean_s46 lean_s48
have lean_s50 : (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) x8))) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) x8)))) := by timed congrHAdd lean_s45 lean_s49
have lean_s51 : (Eq (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x2 (Int.ofNat 2)) x8))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) := by timed Eq.trans lean_s50 lean_r45
have lean_s52 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9)))) := by timed Eq.trans lean_r59 lean_s51
have lean_s53 : (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))))) := by timed congr lean_s44 lean_s52
have lean_s54 : (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) := by timed Eq.trans lean_s53 lean_r41
let lean_s55 := by timed congr lean_s31 lean_s54
have lean_s56 : (Eq x0 x0) := by timed rfl
have lean_s57 : (Eq x5 x5) := by timed rfl
let lean_s58 := by timed congrHAdd lean_s57 lean_r29
let lean_s59 := by timed congrHAdd lean_s56 lean_s58
have lean_s60 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (Neg.neg x7)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) := by timed congrHAdd lean_r57 lean_s59
have lean_s61 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (Neg.neg x7)))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) := by timed Eq.trans lean_s60 lean_r5
have lean_s62 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) := by timed Eq.trans lean_r42 lean_s61
let lean_s63 := by timed flipCongrArg lean_s62 [LE.le]
have lean_s64 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s65 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 0))) := by timed congr lean_s63 lean_s64
have lean_s66 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 1)))) := by timed Eq.trans lean_s65 lean_r25
let lean_s67 := by timed congr lean_s31 lean_s66
let lean_s68 := by timed flipCongrArg lean_r11 [LE.le]
have lean_s69 : (Eq (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s68 lean_s43
have lean_s70 : (Eq (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Int.ofNat 0)))) := by timed Eq.trans lean_s69 lean_r23
let lean_s71 := by timed congr lean_s31 lean_s70
let lean_s72 := by timed congrHAdd lean_r16 lean_r29
have lean_s73 : (Eq (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Int.ofNat 2)) (Neg.neg x7))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) := by timed congrHAdd lean_r14 lean_s72
have lean_s74 : (Eq (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Int.ofNat 2)) (Neg.neg x7))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) := by timed Eq.trans lean_s73 lean_r18
have lean_s75 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) := by timed Eq.trans lean_r13 lean_s74
let lean_s76 := by timed flipCongrArg lean_s75 [LE.le]
have lean_s77 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s78 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 1))) := by timed congr lean_s76 lean_s77
have lean_s79 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)))) := by timed Eq.trans lean_s78 lean_r4
let lean_s80 := by timed congr lean_s31 lean_s79
let lean_s81 := by timed flipCongrArg lean_s43 [LE.le]
let lean_s82 := by timed congrHAdd lean_r7 lean_r29
let lean_s83 := by timed congrHAdd lean_s46 lean_s82
have lean_s84 : (Eq (binrel% HAdd.hAdd (Neg.neg x6) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 2)) (Neg.neg x7)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) := by timed congrHAdd lean_r36 lean_s83
have lean_s85 : (Eq (binrel% HAdd.hAdd (Neg.neg x6) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 2)) (Neg.neg x7)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) := by timed Eq.trans lean_s84 lean_r26
have lean_s86 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9)))) := by timed Eq.trans lean_r21 lean_s85
have lean_s87 : (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7))) (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))))) := by timed congr lean_s81 lean_s86
have lean_s88 : (Eq (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)))) := by timed Eq.trans lean_s87 lean_r63
let lean_s89 := by timed congr lean_s31 lean_s88
let lean_s90 := by timed flipCongrArg lean_s64 [LE.le]
have lean_s91 : (Eq x1 x1) := by timed rfl
let lean_s92 := by timed congrHAdd lean_s91 lean_r29
have lean_s93 : (Eq (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x1 (Neg.neg x7))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) := by timed congrHAdd lean_r31 lean_s92
have lean_s94 : (Eq (binrel% HAdd.hAdd (Neg.neg x2) (binrel% HAdd.hAdd x1 (Neg.neg x7))) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) := by timed Eq.trans lean_s93 lean_r40
have lean_s95 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) := by timed Eq.trans lean_r32 lean_s94
have lean_s96 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) := by timed congr lean_s90 lean_s95
have lean_s97 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7))) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (Int.ofNat 0))) := by timed Eq.trans lean_s96 lean_r38
let lean_s98 := by timed congr lean_s31 lean_s97
let lean_s99 := by timed congrHAdd lean_s47 lean_r29
let lean_s100 := by timed congrHAdd lean_s57 lean_s99
let lean_s101 := by timed congrHAdd lean_s45 lean_s100
have lean_s102 : (Eq (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (Neg.neg x7))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))))) := by timed congrHAdd lean_r22 lean_s101
have lean_s103 : (Eq (binrel% HAdd.hAdd (Neg.neg x0) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x8 (Neg.neg x7))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))))) := by timed Eq.trans lean_s102 lean_r35
have lean_s104 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))))) := by timed Eq.trans lean_r37 lean_s103
let lean_s105 := by timed flipCongrArg lean_s104 [LE.le]
have lean_s106 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8)))) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s105 lean_s43
have lean_s107 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1))) := by timed Eq.trans lean_s106 lean_r15
let lean_s108 := by timed congr lean_s31 lean_s107
let lean_s109 := by timed flipCongrArg lean_s64 [LE.le]
have lean_s110 : (Eq x4 x4) := by timed rfl
have lean_s111 : (Eq x2 x2) := by timed rfl
let lean_s112 := by timed congrHAdd lean_r22 lean_s111
let lean_s113 := by timed congrHAdd lean_s45 lean_s112
let lean_s114 := by timed congrHAdd lean_s110 lean_s113
have lean_s115 : (Eq (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x0) x2)))) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) x2))))) := by timed congrHAdd lean_s46 lean_s114
have lean_s116 : (Eq (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd (Neg.neg x0) x2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 x9))))) := by timed Eq.trans lean_s115 lean_r28
have lean_s117 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 x9))))) := by timed Eq.trans lean_r20 lean_s116
have lean_s118 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2)) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x6 x9)))))) := by timed congr lean_s109 lean_s117
have lean_s119 : (Eq (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 1)))) := by timed Eq.trans lean_s118 lean_r24
let lean_s120 := by timed congr lean_s31 lean_s119
let lean_s121 := by timed flipCongrArg lean_s77 [LE.le]
have lean_s122 : (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x1 x8))) := by timed congr lean_s121 lean_r33
have lean_s123 : (Eq (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)) (binrel% GE.ge (binrel% HAdd.hAdd x1 x8) (Int.ofNat 1))) := by timed Eq.trans lean_s122 lean_r43
let lean_s124 := by timed congr lean_s120 lean_s123
let lean_s125 := by timed congr lean_s108 lean_s124
let lean_s126 := by timed congr lean_s98 lean_s125
let lean_s127 := by timed congr lean_s89 lean_s126
let lean_s128 := by timed congr lean_s80 lean_s127
let lean_s129 := by timed congr lean_s71 lean_s128
let lean_s130 := by timed congr lean_s67 lean_s129
let lean_s131 := by timed congr lean_s55 lean_s130
have lean_s132 : (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1)) (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7))) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2)) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1))))))))))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x1 x8) (Int.ofNat 1)))))))))))) := by timed congr lean_s42 lean_s131
have lean_s133 : (Eq (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul x5 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x8 (Int.ofNat 4)) (binrel% HMul.hMul x2 (Int.ofNat 2))) (binrel% HMul.hMul x9 (Int.ofNat 2)))) (Neg.neg (Int.ofNat 2)))) (And (And (And (And (And (And (And (And (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x6 x9) (binrel% HMul.hMul x2 (Int.ofNat 2))) x8)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul x1 (Int.ofNat 2)) x0) x5) (Neg.neg x7)) (Int.ofNat 0))) (binrel% LE.le (binrel% HSub.hSub x4 x9) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x8) (binrel% HMul.hMul x5 (Int.ofNat 2))) (Neg.neg x7)) (Int.ofNat 1))) (binrel% LE.le (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x6) x9) (binrel% HMul.hMul x8 (Int.ofNat 2))) (Neg.neg x7)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x2) x1) (Neg.neg x7)))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg x0) x6) x5) x8) (Neg.neg x7)) (Neg.neg (Int.ofNat 1)))) (binrel% LE.le (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd x9 x4) x6) (Neg.neg x0)) x2))) (binrel% LE.le (Int.ofNat 1) (binrel% HAdd.hAdd x8 x1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x1 x8) (Int.ofNat 1)))))))))))) := by timed Eq.trans lean_r54 lean_s132
have lean_s134 : (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x1) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x1 x8) (Int.ofNat 1))))))))))) := by timed eqResolve lean_a70 lean_s133
have lean_s135 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2))) := by andElim lean_s134, 5
let lean_s136 := by R1 lean_s30, lean_s135, (binrel% GE.ge (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s137 : (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2))) := by andElim lean_s134, 4
let lean_s138 := by R1 lean_s136, lean_s137, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 2)), [(- 1), 0]
have lean_s139 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) := by andElim lean_s134, 1
let lean_s140 := by R2 lean_s138, lean_s139, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HAdd.hAdd x6 (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))), [(- 1), 0]
have lean_s141 : (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1)))) := by andElim lean_s134, 0
exact (show False from by R1 lean_s140, lean_s141, (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x8) x9))) (Neg.neg (Int.ofNat 1))), [0, 0])


