-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x2 : Int}
variable {x9 : Int}
variable {x8 : Int}
variable {x3 : Int}
variable {x4 : Int}
variable {x0 : Int}
variable {x5 : Int}
variable {x7 : Int}
variable {x7 : Int}
variable {x6 : Int}
variable {x8 : Int}
variable {x1 : Int}
variable {x1 : Int}
variable {x3 : Int}
variable {x6 : Int}
variable {x9 : Int}
variable {x0 : Int}
variable {x4 : Int}
variable {x2 : Int}
variable {x5 : Int}

theorem th0 : (Eq (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) x8)))) → (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))) → (Eq (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x1 (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 x8))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) x4)) (Int.ofNat 1))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 x8)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 0))) → (Eq (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x0 (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8))))) → (Eq (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x9))))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 2)))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) x8) → (Eq (binrel% LE.le x8 (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge x8 (Int.ofNat 0)))) → (Eq (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) x0) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x7) x8))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Int.ofNat 0)))) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x2) x2) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x6 x7)))) (Int.ofNat 0))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 1)))) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x9) (Int.ofNat 0)) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x9)))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x6) (Int.ofNat 0)) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x0) x0) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x1) (Int.ofNat 0)) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) x8))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x7) x8)))) → (Eq (binrel% LE.le (Int.ofNat 0) (Neg.neg (Int.ofNat 1))) False) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x4) x4) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x3) (Int.ofNat 0)) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x4) (Int.ofNat 0)) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (Int.ofNat 0)))))))))) (Int.ofNat 0)) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) x8))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0))) → (Eq (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6))))) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x0) (Int.ofNat 0)) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x5) x5) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x8) x8) → (Eq (And False (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x6 x7)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) x4)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))) (Int.ofNat 0)) (And (Not (binrel% GE.ge x8 (Int.ofNat 0))) (And (Not (binrel% GE.ge x0 (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 1))))))))))))))))) False) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x5) (Int.ofNat 0)) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x7) (Int.ofNat 0)) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x7) x7) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))))) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x8) (Int.ofNat 0)) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9)))) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x9) x9) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x3) x3) → (Eq (binrel% HMul.hMul (Int.ofNat 1) x1) x1) → (Eq (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) → (Eq (binrel% LE.le x0 (Int.ofNat 1)) (Not (binrel% GE.ge x0 (Int.ofNat 2)))) → (Eq (binrel% HMul.hMul (Int.ofNat 0) x2) (Int.ofNat 0)) → (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (Int.ofNat 0)))))))))))))))) → False :=
fun lean_r0 : (Eq (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) x8)))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x1 (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 x8))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) x4)) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 x8)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x0 (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8))))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x9))))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) x8) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% LE.le x8 (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge x8 (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) x0) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x7) x8))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x2) x2) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x6 x7)))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x9) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x9)))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x6) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x0) x0) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x1) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) x8))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x7) x8)))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (binrel% LE.le (Int.ofNat 0) (Neg.neg (Int.ofNat 1))) False) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x4) x4) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x3) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x4) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (Int.ofNat 0)))))))))) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) x8))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6))))) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x0) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x5) x5) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x8) x8) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (And False (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x6 x7)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) x4)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))) (Int.ofNat 0)) (And (Not (binrel% GE.ge x8 (Int.ofNat 0))) (And (Not (binrel% GE.ge x0 (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 1))))))))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x5) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x7) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x7) x7) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))))) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x8) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9)))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x9) x9) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x3) x3) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (binrel% HMul.hMul (Int.ofNat 1) x1) x1) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0)))))))))) (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (binrel% LE.le x0 (Int.ofNat 1)) (Not (binrel% GE.ge x0 (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (binrel% HMul.hMul (Int.ofNat 0) x2) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_a50 : (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (Int.ofNat 0)))))))))))))))) => by
have lean_s0 : (Eq And And) := by timed rfl
have lean_s1 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0)) := by timed rfl
have lean_s2 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)) := by timed rfl
let lean_s3 := by timed congrHAdd lean_s2 lean_r18
let lean_s4 := by timed congrHAdd lean_s1 lean_s3
let lean_s5 := by timed congrHAdd lean_r39 lean_s4
let lean_s6 := by timed congrHAdd lean_s1 lean_s5
let lean_s7 := by timed congrHAdd lean_r19 lean_s6
let lean_s8 := by timed congrHAdd lean_r19 lean_s7
let lean_s9 := by timed congrHAdd lean_r35 lean_s8
let lean_s10 := by timed congrHAdd lean_r32 lean_s9
have lean_s11 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r26 lean_s10
have lean_s12 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 0)) := by timed Eq.trans lean_s11 lean_r27
let lean_s13 := by timed flipCongrArg lean_s12 [LE.le]
have lean_s14 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
have lean_s15 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (Int.ofNat 0) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s13 lean_s14
have lean_s16 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) False) := by timed Eq.trans lean_s15 lean_r22
let lean_s17 := by timed congr lean_s0 lean_s16
have lean_s18 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1)) := by timed rfl
let lean_s19 := by timed congrHAdd lean_r45 lean_r18
let lean_s20 := by timed congrHAdd lean_s18 lean_s19
let lean_s21 := by timed congrHAdd lean_s1 lean_s20
let lean_s22 := by timed congrHAdd lean_s2 lean_s21
let lean_s23 := by timed congrHAdd lean_s1 lean_s22
let lean_s24 := by timed congrHAdd lean_r45 lean_s23
let lean_s25 := by timed congrHAdd lean_r34 lean_s24
let lean_s26 := by timed congrHAdd lean_r32 lean_s25
have lean_s27 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x1 (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r32 lean_s26
have lean_s28 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 x8))) := by timed Eq.trans lean_s27 lean_r2
let lean_s29 := by timed flipCongrArg lean_s28 [LE.le]
have lean_s30 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s31 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 x8)) (Int.ofNat 0))) := by timed congr lean_s29 lean_s30
have lean_s32 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 0))) := by timed Eq.trans lean_s31 lean_r4
let lean_s33 := by timed congr lean_s0 lean_s32
have lean_s34 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) := by timed rfl
have lean_s35 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3)) := by timed rfl
have lean_s36 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)) := by timed rfl
let lean_s37 := by timed congrHAdd lean_s18 lean_s36
let lean_s38 := by timed congrHAdd lean_s35 lean_s37
let lean_s39 := by timed congrHAdd lean_r18 lean_s38
let lean_s40 := by timed congrHAdd lean_r34 lean_s39
let lean_s41 := by timed congrHAdd lean_s34 lean_s40
let lean_s42 := by timed congrHAdd lean_r23 lean_s41
let lean_s43 := by timed congrHAdd lean_r18 lean_s42
let lean_s44 := by timed congrHAdd lean_r49 lean_s43
have lean_s45 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6))))))))))) := by timed congrHAdd lean_r16 lean_s44
have lean_s46 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)))))) := by timed Eq.trans lean_s45 lean_r38
let lean_s47 := by timed flipCongrArg lean_s46 [LE.le]
have lean_s48 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))))) (Int.ofNat 0))) := by timed congr lean_s47 lean_s30
have lean_s49 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x6 x7)))) (Int.ofNat 0))) := by timed Eq.trans lean_s48 lean_r14
let lean_s50 := by timed congr lean_s0 lean_s49
have lean_s51 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)) := by timed rfl
let lean_s52 := by timed congrHAdd lean_r20 lean_r39
let lean_s53 := by timed congrHAdd lean_s18 lean_s52
let lean_s54 := by timed congrHAdd lean_r16 lean_s53
let lean_s55 := by timed congrHAdd lean_r24 lean_s54
let lean_s56 := by timed congrHAdd lean_s51 lean_s55
let lean_s57 := by timed congrHAdd lean_r26 lean_s56
let lean_s58 := by timed congrHAdd lean_r49 lean_s57
let lean_s59 := by timed congrHAdd lean_r32 lean_s58
have lean_s60 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r23 lean_s59
have lean_s61 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) x8)))) := by timed Eq.trans lean_s60 lean_r0
let lean_s62 := by timed flipCongrArg lean_s61 [LE.le]
have lean_s63 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) x8))) (Int.ofNat 0))) := by timed congr lean_s62 lean_s30
have lean_s64 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0))) := by timed Eq.trans lean_s63 lean_r28
let lean_s65 := by timed congr lean_s0 lean_s64
have lean_s66 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)) := by timed rfl
let lean_s67 := by timed congrHAdd lean_r30 lean_r18
let lean_s68 := by timed congrHAdd lean_s66 lean_s67
let lean_s69 := by timed congrHAdd lean_s1 lean_s68
let lean_s70 := by timed congrHAdd lean_r24 lean_s69
let lean_s71 := by timed congrHAdd lean_r35 lean_s70
let lean_s72 := by timed congrHAdd lean_s1 lean_s71
let lean_s73 := by timed congrHAdd lean_r13 lean_s72
let lean_s74 := by timed congrHAdd lean_r19 lean_s73
have lean_s75 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r13 lean_s74
have lean_s76 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))) := by timed Eq.trans lean_s75 lean_r1
let lean_s77 := by timed flipCongrArg lean_s76 [LE.le]
have lean_s78 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4))) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s77 lean_s14
have lean_s79 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) x4)) (Int.ofNat 1))) := by timed Eq.trans lean_s78 lean_r3
let lean_s80 := by timed congr lean_s0 lean_s79
let lean_s81 := by timed congrHAdd lean_s1 lean_r34
let lean_s82 := by timed congrHAdd lean_r44 lean_s81
let lean_s83 := by timed congrHAdd lean_s1 lean_s82
let lean_s84 := by timed congrHAdd lean_r42 lean_s83
let lean_s85 := by timed congrHAdd lean_r34 lean_s84
let lean_s86 := by timed congrHAdd lean_s34 lean_s85
let lean_s87 := by timed congrHAdd lean_r16 lean_s86
let lean_s88 := by timed congrHAdd lean_r20 lean_s87
have lean_s89 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r45 lean_s88
have lean_s90 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x9))))) := by timed Eq.trans lean_s89 lean_r6
let lean_s91 := by timed flipCongrArg lean_s90 [LE.le]
have lean_s92 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x0) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x9)))) (Int.ofNat 0))) := by timed congr lean_s91 lean_s30
have lean_s93 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 0))) := by timed Eq.trans lean_s92 lean_r17
let lean_s94 := by timed congr lean_s0 lean_s93
have lean_s95 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2)) := by timed rfl
let lean_s96 := by timed congrHAdd lean_r19 lean_r26
let lean_s97 := by timed congrHAdd lean_s95 lean_s96
let lean_s98 := by timed congrHAdd lean_r18 lean_s97
let lean_s99 := by timed congrHAdd lean_r30 lean_s98
let lean_s100 := by timed congrHAdd lean_r18 lean_s99
let lean_s101 := by timed congrHAdd lean_r23 lean_s100
let lean_s102 := by timed congrHAdd lean_r16 lean_s101
let lean_s103 := by timed congrHAdd lean_r32 lean_s102
have lean_s104 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x0 (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r45 lean_s103
have lean_s105 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8))))) := by timed Eq.trans lean_s104 lean_r5
let lean_s106 := by timed flipCongrArg lean_s105 [LE.le]
have lean_s107 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s108 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (Int.ofNat 1)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 1))) := by timed congr lean_s106 lean_s107
have lean_s109 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 2)))) := by timed Eq.trans lean_s108 lean_r7
let lean_s110 := by timed congr lean_s0 lean_s109
let lean_s111 := by timed congrHAdd lean_s35 lean_s2
let lean_s112 := by timed congrHAdd lean_r20 lean_s111
let lean_s113 := by timed congrHAdd lean_r18 lean_s112
let lean_s114 := by timed congrHAdd lean_r26 lean_s113
let lean_s115 := by timed congrHAdd lean_r49 lean_s114
let lean_s116 := by timed congrHAdd lean_r36 lean_s115
let lean_s117 := by timed congrHAdd lean_s51 lean_s116
let lean_s118 := by timed congrHAdd lean_r26 lean_s117
have lean_s119 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))))))))) := by timed congrHAdd lean_r24 lean_s118
have lean_s120 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) := by timed Eq.trans lean_s119 lean_r25
let lean_s121 := by timed flipCongrArg lean_s120 [LE.le]
have lean_s122 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0))) := by timed congr lean_s121 lean_s30
have lean_s123 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))) (Int.ofNat 0))) := by timed Eq.trans lean_s122 lean_r43
let lean_s124 := by timed congr lean_s0 lean_s123
let lean_s125 := by timed congrHAdd lean_r32 lean_s66
let lean_s126 := by timed congrHAdd lean_r39 lean_s125
let lean_s127 := by timed congrHAdd lean_r18 lean_s126
let lean_s128 := by timed congrHAdd lean_r39 lean_s127
let lean_s129 := by timed congrHAdd lean_r20 lean_s128
let lean_s130 := by timed congrHAdd lean_r23 lean_s129
let lean_s131 := by timed congrHAdd lean_r39 lean_s130
let lean_s132 := by timed congrHAdd lean_r35 lean_s131
have lean_s133 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x8 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4))))))))))) := by timed congrHAdd lean_r39 lean_s132
have lean_s134 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) x8) := by timed Eq.trans lean_s133 lean_r8
let lean_s135 := by timed flipCongrArg lean_s134 [LE.le]
have lean_s136 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) (Neg.neg (Int.ofNat 1))) (binrel% LE.le x8 (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s135 lean_s14
have lean_s137 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge x8 (Int.ofNat 0)))) := by timed Eq.trans lean_s136 lean_r9
let lean_s138 := by timed congr lean_s0 lean_s137
let lean_s139 := by timed congrHAdd lean_r18 lean_r18
let lean_s140 := by timed congrHAdd lean_r34 lean_s139
let lean_s141 := by timed congrHAdd lean_r34 lean_s140
let lean_s142 := by timed congrHAdd lean_r49 lean_s141
let lean_s143 := by timed congrHAdd lean_r49 lean_s142
let lean_s144 := by timed congrHAdd lean_r20 lean_s143
let lean_s145 := by timed congrHAdd lean_r35 lean_s144
let lean_s146 := by timed congrHAdd lean_r26 lean_s145
have lean_s147 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r19 lean_s146
have lean_s148 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) x0) := by timed Eq.trans lean_s147 lean_r10
let lean_s149 := by timed flipCongrArg lean_s148 [LE.le]
have lean_s150 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 1)) (binrel% LE.le x0 (Int.ofNat 1))) := by timed congr lean_s149 lean_s107
have lean_s151 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 1)) (Not (binrel% GE.ge x0 (Int.ofNat 2)))) := by timed Eq.trans lean_s150 lean_r48
let lean_s152 := by timed congr lean_s0 lean_s151
let lean_s153 := by timed congrHAdd lean_r39 lean_r16
let lean_s154 := by timed congrHAdd lean_r20 lean_s153
let lean_s155 := by timed congrHAdd lean_r49 lean_s154
let lean_s156 := by timed congrHAdd lean_s35 lean_s155
let lean_s157 := by timed congrHAdd lean_r39 lean_s156
let lean_s158 := by timed congrHAdd lean_r30 lean_s157
let lean_s159 := by timed congrHAdd lean_s34 lean_s158
let lean_s160 := by timed congrHAdd lean_r44 lean_s159
have lean_s161 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (binrel% HAdd.hAdd x2 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r13 lean_s160
have lean_s162 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7))) := by timed Eq.trans lean_s161 lean_r47
let lean_s163 := by timed flipCongrArg lean_s162 [LE.le]
have lean_s164 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 0))) := by timed congr lean_s163 lean_s30
have lean_s165 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 1)))) := by timed Eq.trans lean_s164 lean_r46
let lean_s166 := by timed congr lean_s0 lean_s165
let lean_s167 := by timed congrHAdd lean_r30 lean_r20
let lean_s168 := by timed congrHAdd lean_r20 lean_s167
let lean_s169 := by timed congrHAdd lean_r44 lean_s168
let lean_s170 := by timed congrHAdd lean_s66 lean_s169
let lean_s171 := by timed congrHAdd lean_r42 lean_s170
let lean_s172 := by timed congrHAdd lean_r19 lean_s171
let lean_s173 := by timed congrHAdd lean_r32 lean_s172
let lean_s174 := by timed congrHAdd lean_s35 lean_s173
have lean_s175 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x8 (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x9 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r16 lean_s174
have lean_s176 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9)))) := by timed Eq.trans lean_s175 lean_r41
let lean_s177 := by timed flipCongrArg lean_s176 [LE.le]
have lean_s178 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (Neg.neg (Int.ofNat 1))) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s177 lean_s14
have lean_s179 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Int.ofNat 0)))) := by timed Eq.trans lean_s178 lean_r12
let lean_s180 := by timed congr lean_s0 lean_s179
let lean_s181 := by timed congrHAdd lean_r16 lean_s51
let lean_s182 := by timed congrHAdd lean_r35 lean_s181
let lean_s183 := by timed congrHAdd lean_r26 lean_s182
let lean_s184 := by timed congrHAdd lean_s35 lean_s183
let lean_s185 := by timed congrHAdd lean_r19 lean_s184
let lean_s186 := by timed congrHAdd lean_r35 lean_s185
let lean_s187 := by timed congrHAdd lean_s2 lean_s186
let lean_s188 := by timed congrHAdd lean_r36 lean_s187
have lean_s189 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5))))))))))) := by timed congrHAdd lean_r30 lean_s188
have lean_s190 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))) := by timed Eq.trans lean_s189 lean_r37
let lean_s191 := by timed flipCongrArg lean_s190 [LE.le]
have lean_s192 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 0))) := by timed congr lean_s191 lean_s30
have lean_s193 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1)))) := by timed Eq.trans lean_s192 lean_r40
let lean_s194 := by timed congr lean_s0 lean_s193
let lean_s195 := by timed congrHAdd lean_r20 lean_r32
let lean_s196 := by timed congrHAdd lean_r36 lean_s195
let lean_s197 := by timed congrHAdd lean_r24 lean_s196
let lean_s198 := by timed congrHAdd lean_r26 lean_s197
let lean_s199 := by timed congrHAdd lean_r23 lean_s198
let lean_s200 := by timed congrHAdd lean_s35 lean_s199
let lean_s201 := by timed congrHAdd lean_r39 lean_s200
let lean_s202 := by timed congrHAdd lean_r36 lean_s201
have lean_s203 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x7 (binrel% HAdd.hAdd (Int.ofNat 0) x8)))))))))) := by timed congrHAdd lean_r34 lean_s202
have lean_s204 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x7) x8)))) := by timed Eq.trans lean_s203 lean_r21
let lean_s205 := by timed flipCongrArg lean_s204 [LE.le]
have lean_s206 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x7) x8))) (Int.ofNat 0))) := by timed congr lean_s205 lean_s30
have lean_s207 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0))) := by timed Eq.trans lean_s206 lean_r11
let lean_s208 := by timed congr lean_s0 lean_s207
let lean_s209 := by timed congrHAdd lean_r26 lean_r30
let lean_s210 := by timed congrHAdd lean_r31 lean_s209
let lean_s211 := by timed congrHAdd lean_r19 lean_s210
let lean_s212 := by timed congrHAdd lean_r26 lean_s211
let lean_s213 := by timed congrHAdd lean_r35 lean_s212
let lean_s214 := by timed congrHAdd lean_s36 lean_s213
let lean_s215 := by timed congrHAdd lean_r30 lean_s214
let lean_s216 := by timed congrHAdd lean_r26 lean_s215
have lean_s217 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (Int.ofNat 0) (Int.ofNat 0))))))))))) := by timed congrHAdd lean_r23 lean_s216
have lean_s218 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6))))) := by timed Eq.trans lean_s217 lean_r29
let lean_s219 := by timed flipCongrArg lean_s218 [LE.le]
have lean_s220 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 0))) := by timed congr lean_s219 lean_s30
have lean_s221 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 1)))) := by timed Eq.trans lean_s220 lean_r15
let lean_s222 := by timed congr lean_s208 lean_s221
let lean_s223 := by timed congr lean_s194 lean_s222
let lean_s224 := by timed congr lean_s180 lean_s223
let lean_s225 := by timed congr lean_s166 lean_s224
let lean_s226 := by timed congr lean_s152 lean_s225
let lean_s227 := by timed congr lean_s138 lean_s226
let lean_s228 := by timed congr lean_s124 lean_s227
let lean_s229 := by timed congr lean_s110 lean_s228
let lean_s230 := by timed congr lean_s94 lean_s229
let lean_s231 := by timed congr lean_s80 lean_s230
let lean_s232 := by timed congr lean_s65 lean_s231
let lean_s233 := by timed congr lean_s50 lean_s232
let lean_s234 := by timed congr lean_s33 lean_s233
have lean_s235 : (Eq (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (Int.ofNat 0)))))))))))))))) (And False (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x6 x7)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x2) x4)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x9))))) (Int.ofNat 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd x4 x8)))) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd x5 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) x8))) (Int.ofNat 0)) (And (Not (binrel% GE.ge x8 (Int.ofNat 0))) (And (Not (binrel% GE.ge x0 (Int.ofNat 2))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7)) (Int.ofNat 1))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd x8 x9))) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd x7 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8))))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd x3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) x7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))) (Int.ofNat 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x0 (binrel% HAdd.hAdd x4 (binrel% HAdd.hAdd x5 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))) (Int.ofNat 1)))))))))))))))))) := by timed congr lean_s17 lean_s234
have lean_s236 : (Eq (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 0) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x0) (binrel% HMul.hMul (Int.ofNat 0) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HMul.hMul (Int.ofNat 0) x4)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x6) (binrel% HMul.hMul (Int.ofNat 0) x6)))))))))) (Int.ofNat 1)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HMul.hMul (Int.ofNat 0) x9)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x9) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HMul.hMul (Int.ofNat 0) x1)))))))))) (Neg.neg (Int.ofNat 1))) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x9) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x5)))))))))) (Int.ofNat 0)) (And (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x8) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x3) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x1) (binrel% HMul.hMul (Int.ofNat 1) x8)))))))))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) x6) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x7) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 1) x5) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 0) x4) (binrel% HMul.hMul (Int.ofNat 0) x0)))))))))) (Int.ofNat 0)))))))))))))))) False) := by timed Eq.trans lean_s235 lean_r33
exact (show False from by timed eqResolve lean_a50 lean_s236)


