-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {px5f1x5f0 : Int}
variable {px5f1x5f1 : Int}
variable {px5f0x5f0 : Int}
variable {px5f2x5f1 : Int}
variable {px5f0x5f0 : Int}
variable {px5f1x5f0 : Int}
variable {px5f0x5f1 : Int}
variable {px5f2x5f0 : Int}
variable {px5f0x5f1 : Int}
variable {px5f2x5f0 : Int}
variable {px5f1x5f1 : Int}
variable {px5f2x5f1 : Int}

theorem th0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f1)))) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f1)))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f1)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))) (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) True) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (Rat.ofInt 2)) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) True) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f1))) (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (Rat.ofInt 0)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (Neg.neg (Rat.ofInt 1))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))))) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (binrel% GT.gt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))))) → (Eq (Not True) False) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2))))) (Rat.ofInt 0)) → (binrel% GE.ge px5f0x5f0 (Int.ofNat 0)) → (binrel% LE.le px5f0x5f0 (Int.ofNat 1)) → (binrel% GE.ge px5f0x5f1 (Int.ofNat 0)) → (binrel% LE.le px5f0x5f1 (Int.ofNat 1)) → (binrel% GE.ge px5f1x5f0 (Int.ofNat 0)) → (binrel% LE.le px5f1x5f0 (Int.ofNat 1)) → (binrel% GE.ge px5f1x5f1 (Int.ofNat 0)) → (binrel% LE.le px5f1x5f1 (Int.ofNat 1)) → (binrel% GE.ge px5f2x5f0 (Int.ofNat 0)) → (binrel% LE.le px5f2x5f0 (Int.ofNat 1)) → (binrel% GE.ge px5f2x5f1 (Int.ofNat 0)) → (binrel% LE.le px5f2x5f1 (Int.ofNat 1)) → (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1)) → (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1)) → (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1)) → (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 1)) → (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) → False :=
fun lean_r0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f1)))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r5 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f1)))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f1)))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))) (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (Rat.ofInt 2)) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r15 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f1))) (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2))))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_a26 : (binrel% GE.ge px5f0x5f0 (Int.ofNat 0)) =>
fun lean_a27 : (binrel% LE.le px5f0x5f0 (Int.ofNat 1)) =>
fun lean_a28 : (binrel% GE.ge px5f0x5f1 (Int.ofNat 0)) =>
fun lean_a29 : (binrel% LE.le px5f0x5f1 (Int.ofNat 1)) =>
fun lean_a30 : (binrel% GE.ge px5f1x5f0 (Int.ofNat 0)) =>
fun lean_a31 : (binrel% LE.le px5f1x5f0 (Int.ofNat 1)) =>
fun lean_a32 : (binrel% GE.ge px5f1x5f1 (Int.ofNat 0)) =>
fun lean_a33 : (binrel% LE.le px5f1x5f1 (Int.ofNat 1)) =>
fun lean_a34 : (binrel% GE.ge px5f2x5f0 (Int.ofNat 0)) =>
fun lean_a35 : (binrel% LE.le px5f2x5f0 (Int.ofNat 1)) =>
fun lean_a36 : (binrel% GE.ge px5f2x5f1 (Int.ofNat 0)) =>
fun lean_a37 : (binrel% LE.le px5f2x5f1 (Int.ofNat 1)) =>
fun lean_a38 : (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1)) =>
fun lean_a39 : (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1)) =>
fun lean_a40 : (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1)) =>
fun lean_a41 : (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 1)) =>
fun lean_a42 : (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) False))))) :=
  (scope (fun lean_a43 : (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) =>
    (scope (fun lean_a44 : (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1)) =>
      (scope (fun lean_a45 : (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1)) =>
        (scope (fun lean_a46 : (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1)) =>
          (scope (fun lean_a47 : (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) =>
            have lean_s0 : (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) := by timed eqResolve lean_a42 lean_r10
            have lean_s1 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) := by timed Eq.symm lean_r0
            have lean_s2 : (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) := by timed eqResolve lean_s0 lean_s1
            have lean_s3 : (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) := by intTightUb lean_s2
            have lean_s4 : (Or (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) False) :=
              (scope (fun lean_a45 : (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) =>
                have lean_s4 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r4
                have lean_s5 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) := by timed And.intro lean_s4 lean_a45
                have lean_s6 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)), (Int.ofNat 1), (Rat.ofInt 1)], 1
                have lean_s7 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s5 lean_s6
                have lean_s8 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r14
                have lean_s9 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) := by timed And.intro lean_s8 lean_a46
                have lean_s10 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)))) := by arithMulNeg [(binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1), (Int.ofNat 1), (Neg.neg (Rat.ofInt 1))], 3
                have lean_s11 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1))) := by timed modusPonens lean_s9 lean_s10
                have lean_s12 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) := by timed And.intro lean_s8 lean_a45
                have lean_s13 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)))) := by arithMulNeg [(binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1), (Int.ofNat 1), (Neg.neg (Rat.ofInt 1))], 3
                have lean_s14 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1))) := by timed modusPonens lean_s12 lean_s13
                have lean_s15 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) := by timed And.intro lean_s8 lean_a44
                have lean_s16 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)))) := by arithMulNeg [(binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1), (Int.ofNat 1), (Neg.neg (Rat.ofInt 1))], 3
                have lean_s17 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1))) := by timed modusPonens lean_s15 lean_s16
                have lean_s18 : (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) := by timed eqResolve lean_a41 lean_r9
                have lean_s19 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) := by timed Eq.symm lean_r6
                have lean_s20 : (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) := by timed eqResolve lean_s18 lean_s19
                have lean_s21 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) := by timed And.intro lean_s4 lean_s20
                have lean_s22 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))) := by arithMulPos [(binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)), (Int.ofNat 2), (Rat.ofInt 1)], 0
                have lean_s23 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))) := by timed modusPonens lean_s21 lean_s22
                have lean_s24 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) := by sumBounds [lean_s7, lean_s11, lean_s14, lean_s17, lean_s23]
                let lean_s25 := by timed congrHAdd lean_r7 lean_r8
                let lean_s26 := by timed congrHAdd lean_r5 lean_s25
                let lean_s27 := by timed congrHAdd lean_r3 lean_s26
                have lean_s28 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f0x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f1x5f1))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) px5f2x5f1))) (Rat.ofInt (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)))))))) := by timed congrHAdd lean_r2 lean_s27
                have lean_s29 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s28 lean_r15
                let lean_s30 := by timed flipCongrArg lean_s29 [GE.ge]
                let lean_s31 := by timed congrHAdd lean_r16 lean_r12
                let lean_s32 := by timed congrHAdd lean_r16 lean_s31
                let lean_s33 := by timed congrHAdd lean_r16 lean_s32
                have lean_s34 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2)))))) := by timed congrHAdd lean_r18 lean_s33
                have lean_s35 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s34 lean_r25
                have lean_s36 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s30 lean_s35
                have lean_s37 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) True) := by timed Eq.trans lean_s36 lean_r20
                have lean_s38 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))))) (Not True)) := by timed flipCongrArg lean_s37 [Not]
                have lean_s39 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))))))) False) := by timed Eq.trans lean_s38 lean_r23
                have lean_s40 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1)) (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0))))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))))))) False) := by timed Eq.trans lean_r1 lean_s39
                show False from by timed eqResolve lean_s24 lean_s40
              ))
            have lean_s5 : (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) := by liftOrNToNeg lean_s4
            have lean_s6 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))))) := by timed flipCongrArg lean_r10 [Not]
            have lean_s7 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) := by timed Eq.trans lean_s6 lean_r24
            have lean_s8 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) := by timed Eq.trans lean_r21 lean_s7
            have lean_s9 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (binrel% GT.gt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) := by timed Eq.symm lean_s8
            have lean_s10 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) (binrel% GT.gt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) := by timed Eq.trans lean_s7 lean_s9
            have lean_s11 : (binrel% GT.gt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) := by timed eqResolve lean_s5 lean_s10
            have lean_s12 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)))) := by timed Eq.symm lean_s7
            have lean_s13 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)) (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1)))) := by timed Eq.trans lean_s8 lean_s12
            have lean_s14 : (Not (binrel% LE.le (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 1))) := by timed eqResolve lean_s11 lean_s13
            show False from by timed contradiction lean_s3 lean_s14
  ))))))))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1)), (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1)), (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1)), (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) := by timed congr lean_s5 lean_r17
have lean_s7 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))))) True) := by timed Eq.trans lean_s6 lean_r13
have lean_s8 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) True) := by timed Eq.trans lean_r19 lean_s7
have lean_s9 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1)))) := by timed rfl
let lean_s12 := by timed congr lean_s3 lean_s11
have lean_s13 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1)))) := by timed rfl
let lean_s14 := by timed congr lean_s3 lean_s13
have lean_s15 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1)))) := by timed rfl
let lean_s16 := by timed congr lean_s3 lean_s15
have lean_s17 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) := by timed rfl
let lean_s18 := by timed flipCongrArg lean_s17 [Eq]
have lean_s19 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) := by timed congr lean_s18 lean_r24
have lean_s20 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))))) True) := by timed Eq.trans lean_s19 lean_r11
have lean_s21 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) True) := by timed Eq.trans lean_r22 lean_s20
have lean_s22 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) := by timed trueElim lean_s21
let lean_s23 := by timed congr lean_s16 lean_s22
let lean_s24 := by timed congr lean_s14 lean_s23
let lean_s25 := by timed congr lean_s12 lean_s24
have lean_s26 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))))))) (Or (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))))))) := by timed congr lean_s10 lean_s25
have lean_s27 : (Or (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)))))) := by timed eqResolve lean_s2 lean_s26
have lean_s28 : (Or (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)) (Or (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1))))))) := by permutateOr lean_s27, [0, 4, 3, 2, 1], (- 1)
have lean_s29 : (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2))) := by timed eqResolve lean_a42 lean_r10
let lean_s30 := by R1 lean_s28, lean_s29, (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f1 (binrel% HAdd.hAdd px5f1x5f1 px5f2x5f1)) (Int.ofNat 2)), [(- 1), 0]
have lean_s31 : (Not (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2))) := by timed eqResolve lean_a41 lean_r9
let lean_s32 := by R1 lean_s30, lean_s31, (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 (binrel% HAdd.hAdd px5f1x5f0 px5f2x5f0)) (Int.ofNat 2)), [(- 1), 0]
let lean_s33 := by R2 lean_s32, lean_a40, (binrel% GE.ge (binrel% HAdd.hAdd px5f2x5f0 px5f2x5f1) (Int.ofNat 1)), [(- 1), 0]
let lean_s34 := by R2 lean_s33, lean_a39, (binrel% GE.ge (binrel% HAdd.hAdd px5f1x5f0 px5f1x5f1) (Int.ofNat 1)), [(- 1), 0]
exact (show False from by R2 lean_s34, lean_a38, (binrel% GE.ge (binrel% HAdd.hAdd px5f0x5f0 px5f0x5f1) (Int.ofNat 1)), [0, 0])


