-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f25 : Rat}
variable {xx5f18 : Rat}
variable {xx5f18 : Rat}
variable {xx5f28 : Rat}
variable {xx5f21 : Rat}
variable {xx5f19 : Rat}
variable {xx5f12 : Prop}
variable {xx5f19 : Rat}
variable {xx5f4 : Prop}
variable {xx5f9 : Prop}
variable {xx5f24 : Rat}
variable {xx5f3 : Prop}
variable {xx5f6 : Rat}
variable {xx5f2 : Prop}
variable {xx5f31 : Rat}
variable {xx5f2 : Prop}
variable {xx5f15 : Rat}
variable {xx5f5 : Prop}
variable {xx5f8 : Prop}
variable {xx5f20 : Rat}
variable {xx5f21 : Rat}
variable {xx5f16 : Prop}
variable {xx5f17 : Prop}
variable {xx5f13 : Prop}
variable {xx5f12 : Prop}
variable {xx5f28 : Rat}
variable {xx5f0 : Prop}
variable {xx5f11 : Prop}
variable {xx5f9 : Prop}
variable {xx5f4 : Prop}
variable {xx5f26 : Prop}
variable {xx5f29 : Prop}
variable {xx5f20 : Rat}
variable {xx5f0 : Prop}
variable {xx5f13 : Prop}
variable {xx5f27 : Prop}
variable {xx5f30 : Prop}
variable {xx5f1 : Prop}
variable {xx5f10 : Prop}
variable {xx5f17 : Prop}
variable {xx5f23 : Prop}
variable {xx5f16 : Prop}
variable {xx5f11 : Prop}
variable {xx5f1 : Prop}
variable {xx5f3 : Prop}
variable {xx5f5 : Prop}
variable {xx5f25 : Rat}
variable {xx5f24 : Rat}
variable {xx5f7 : Rat}
variable {xx5f7 : Rat}
variable {xx5f29 : Prop}
variable {xx5f8 : Prop}
variable {xx5f15 : Rat}
variable {xx5f30 : Prop}
variable {xx5f26 : Prop}
variable {xx5f27 : Prop}
variable {xx5f22 : Prop}
variable {xx5f22 : Prop}
variable {xx5f6 : Rat}
variable {xx5f23 : Prop}
variable {xx5f10 : Prop}
variable {xx5f14 : Prop}
variable {xx5f14 : Prop}
variable {xx5f31 : Rat}

theorem th0 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (binrel% GE.ge xx5f24 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (And (Not xx5f2) (Not xx5f3))) (And (Not xx5f4) (Not xx5f5))) (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0)))) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)))) (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5))))) (Or (Not xx5f11) (Not xx5f10))) (Or (Not xx5f23) (Not xx5f22))) (Or (Not xx5f27) (Not xx5f26))) (Or (Not xx5f30) (Not xx5f29))) (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f24 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0))) (And (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5)))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29))))))))))))))))))))) → (Eq (binrel% LE.le xx5f24 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% GE.ge xx5f24 (Rat.ofInt 0)) (binrel% GE.ge xx5f24 (Int.ofNat 0))) → (Eq (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))))))))) → (Eq (Not (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) (binrel% GE.ge xx5f6 (Int.ofNat 0))) → (Eq (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f2) (Or xx5f3 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))))) → (Eq (Eq xx5f9 xx5f3) (Eq xx5f3 xx5f9)) → (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21))))))))))) → (Eq (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)) True) → (Eq (And (Eq xx5f31 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f4 (And xx5f5 (And False (And (Not xx5f12) (And (Not xx5f13) (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0)))))))))) False) → (Eq (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))))))))) → (Eq (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f0 (And (Not xx5f1) (And (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2))) (And (Not xx5f22) (And xx5f23 (And (Not xx5f16) (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))))) → (Eq (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or False (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))))))) → (Eq (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or False (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))))))) → (Eq (Eq xx5f18 xx5f6) (Eq xx5f6 xx5f18)) → (Eq (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or False (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) → (Eq (Eq xx5f19 xx5f6) (Eq xx5f6 xx5f19)) → (Eq (And (Eq xx5f28 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f2 (And (Not xx5f3) (And False (And (Not xx5f10) (And (Not xx5f11) (And (Not xx5f8) (And xx5f9 (Eq xx5f19 (Rat.ofInt 0))))))))))) False) → (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) True) → (Eq (Eq xx5f13 xx5f5) (Eq xx5f5 xx5f13)) → (Eq (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) → (Eq (Eq xx5f12 xx5f4) (Eq xx5f4 xx5f12)) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f31 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f4 (And xx5f5 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Not xx5f12) (And (Not xx5f13) (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) xx5f6) → (Eq (Eq xx5f17 xx5f1) (Eq xx5f1 xx5f17)) → (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)))))))) → (Eq (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))) (And (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f12 xx5f4) (And (Eq xx5f13 xx5f5) (Eq xx5f20 xx5f21))))))))) → (Eq (Eq xx5f15 xx5f6) (Eq xx5f6 xx5f15)) → (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21))))))))))) → (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 1)) False) → (Eq (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0)))))))))) → (Eq (Not True) False) → (Eq (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) → (Eq (binrel% LE.le xx5f6 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))) → (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0))))))))))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0))))))))))) → (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0))))))))))))) → (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f2 (And (Not xx5f3) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f10) (And (Not xx5f11) (And (Not xx5f8) (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) → (Eq (binrel% LE.le xx5f6 (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2)))) → (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))))))) → (Eq (Eq xx5f16 xx5f0) (Eq xx5f0 xx5f16)) → (Eq (Eq xx5f8 xx5f2) (Eq xx5f2 xx5f8)) → (Eq (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))))))) → (Eq (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f2) (Or (Not xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))))) → (Eq (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f4) (Or xx5f5 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))))) → (Eq (binrel% LE.le xx5f6 (Rat.ofInt 5)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))) → (Eq (binrel% GE.ge xx5f6 (Rat.ofInt 0)) (binrel% GE.ge xx5f6 (Int.ofNat 0))) → (Eq (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or xx5f0 (Or (Not xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))))) → (Eq (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or (Not xx5f0) (Or (Not xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))))) → (Eq (Not (Not (binrel% GE.ge xx5f7 (Int.ofNat 0)))) (binrel% GE.ge xx5f7 (Int.ofNat 0))) → (Eq (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or (Not xx5f0) (Or xx5f1 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))))))))) → (Eq (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f12 xx5f4) (And (Eq xx5f13 xx5f5) (Eq xx5f20 xx5f21))))))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) → (Eq (And (Eq xx5f25 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f0 (And (Not xx5f1) (And False (And (Not xx5f22) (And xx5f23 (And (Not xx5f16) (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) False) → (Eq (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))) (Or (Not xx5f4) (Or (Not xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) → (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))))))) → (Eq (binrel% LT.lt xx5f6 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f6 (Rat.ofInt 0)))) → (Eq (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) → (Eq (binrel% LT.lt xx5f7 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f7 (Rat.ofInt 0)))) → (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (binrel% GE.ge xx5f24 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (And (Not xx5f2) (Not xx5f3))) (And (Not xx5f4) (Not xx5f5))) (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0)))) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)))) (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5))))) (Or (Not xx5f11) (Not xx5f10))) (Or (Not xx5f23) (Not xx5f22))) (Or (Not xx5f27) (Not xx5f26))) (Or (Not xx5f30) (Not xx5f29))) → False :=
fun lean_r0 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (binrel% GE.ge xx5f24 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (And (Not xx5f2) (Not xx5f3))) (And (Not xx5f4) (Not xx5f5))) (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0)))) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)))) (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5))))) (Or (Not xx5f11) (Not xx5f10))) (Or (Not xx5f23) (Not xx5f22))) (Or (Not xx5f27) (Not xx5f26))) (Or (Not xx5f30) (Not xx5f29))) (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f24 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0))) (And (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5)))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq (binrel% LE.le xx5f24 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% GE.ge xx5f24 (Rat.ofInt 0)) (binrel% GE.ge xx5f24 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq (Not (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) (binrel% GE.ge xx5f6 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f2) (Or xx5f3 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))))) => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq (Eq xx5f9 xx5f3) (Eq xx5f3 xx5f9)) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)) True) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (And (Eq xx5f31 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f4 (And xx5f5 (And False (And (Not xx5f12) (And (Not xx5f13) (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0)))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13))))) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f0 (And (Not xx5f1) (And (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2))) (And (Not xx5f22) (And xx5f23 (And (Not xx5f16) (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or False (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or False (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq (Eq xx5f18 xx5f6) (Eq xx5f6 xx5f18)) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or False (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq (Eq xx5f19 xx5f6) (Eq xx5f6 xx5f19)) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (And (Eq xx5f28 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f2 (And (Not xx5f3) (And False (And (Not xx5f10) (And (Not xx5f11) (And (Not xx5f8) (And xx5f9 (Eq xx5f19 (Rat.ofInt 0))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) True) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (Eq xx5f13 xx5f5) (Eq xx5f5 xx5f13)) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq (Eq xx5f12 xx5f4) (Eq xx5f4 xx5f12)) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f31 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f4 (And xx5f5 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Not xx5f12) (And (Not xx5f13) (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) xx5f6) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (Eq xx5f17 xx5f1) (Eq xx5f1 xx5f17)) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))) (And (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f12 xx5f4) (And (Eq xx5f13 xx5f5) (Eq xx5f20 xx5f21))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq (Eq xx5f15 xx5f6) (Eq xx5f6 xx5f15)) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 1)) False) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (binrel% LE.le xx5f6 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (And (Eq xx5f28 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f2 (And (Not xx5f3) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f10) (And (Not xx5f11) (And (Not xx5f8) (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq (binrel% LE.le xx5f6 (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq (Eq xx5f16 xx5f0) (Eq xx5f0 xx5f16)) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq (Eq xx5f8 xx5f2) (Eq xx5f2 xx5f8)) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f2) (Or (Not xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))))) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f4) (Or xx5f5 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))))) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq (binrel% LE.le xx5f6 (Rat.ofInt 5)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq (binrel% GE.ge xx5f6 (Rat.ofInt 0)) (binrel% GE.ge xx5f6 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or xx5f0 (Or (Not xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))))) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or (Not xx5f0) (Or (Not xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))))) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq (Not (Not (binrel% GE.ge xx5f7 (Int.ofNat 0)))) (binrel% GE.ge xx5f7 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or (Not xx5f0) (Or xx5f1 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))))) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f12 xx5f4) (And (Eq xx5f13 xx5f5) (Eq xx5f20 xx5f21))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq (And (Eq xx5f25 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f0 (And (Not xx5f1) (And False (And (Not xx5f22) (And xx5f23 (And (Not xx5f16) (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))) (Or (Not xx5f4) (Or (Not xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))))) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq (binrel% LT.lt xx5f6 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f6 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq (binrel% LT.lt xx5f7 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f7 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_a62 : (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (binrel% GE.ge xx5f24 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (And (Not xx5f2) (Not xx5f3))) (And (Not xx5f4) (Not xx5f5))) (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0)))) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)))) (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5))))) (Or (Not xx5f11) (Not xx5f10))) (Or (Not xx5f23) (Not xx5f22))) (Or (Not xx5f27) (Not xx5f26))) (Or (Not xx5f30) (Not xx5f29))) => by
have lean_s0 : (Eq And And) := by timed rfl
let lean_s1 := by timed congr lean_s0 lean_r1
let lean_s2 := by timed congr lean_s0 lean_r2
have lean_s3 : (Eq (Not xx5f0) (Not xx5f0)) := by timed rfl
let lean_s4 := by timed congr lean_s0 lean_s3
have lean_s5 : (Eq (Not xx5f1) (Not xx5f1)) := by timed rfl
let lean_s6 := by timed congr lean_s0 lean_s5
have lean_s7 : (Eq (Not xx5f2) (Not xx5f2)) := by timed rfl
let lean_s8 := by timed congr lean_s0 lean_s7
have lean_s9 : (Eq (Not xx5f3) (Not xx5f3)) := by timed rfl
let lean_s10 := by timed congr lean_s0 lean_s9
have lean_s11 : (Eq (Not xx5f4) (Not xx5f4)) := by timed rfl
let lean_s12 := by timed congr lean_s0 lean_s11
have lean_s13 : (Eq (Not xx5f5) (Not xx5f5)) := by timed rfl
let lean_s14 := by timed congr lean_s0 lean_s13
have lean_s15 : (Eq (Not (binrel% GE.ge xx5f7 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f7 (Int.ofNat 0)))) := by timed flipCongrArg lean_r60 [Not]
have lean_s16 : (Eq (binrel% LT.lt xx5f7 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f7 (Int.ofNat 0)))) := by timed Eq.trans lean_r61 lean_s15
have lean_s17 : (Eq (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f7 (Int.ofNat 0))))) := by timed flipCongrArg lean_s16 [Not]
have lean_s18 : (Eq (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0))) (binrel% GE.ge xx5f7 (Int.ofNat 0))) := by timed Eq.trans lean_s17 lean_r50
let lean_s19 := by timed congr lean_s0 lean_s18
have lean_s20 : (Eq (Not (binrel% GE.ge xx5f6 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) := by timed flipCongrArg lean_r47 [Not]
have lean_s21 : (Eq (binrel% LT.lt xx5f6 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) := by timed Eq.trans lean_r59 lean_s20
have lean_s22 : (Eq (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f6 (Int.ofNat 0))))) := by timed flipCongrArg lean_s21 [Not]
have lean_s23 : (Eq (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (binrel% GE.ge xx5f6 (Int.ofNat 0))) := by timed Eq.trans lean_s22 lean_r4
let lean_s24 := by timed congr lean_s0 lean_s23
have lean_s25 : (Eq (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed rfl
let lean_s26 := by timed congr lean_s0 lean_s25
have lean_s27 : (Eq Or Or) := by timed rfl
let lean_s28 := by timed congr lean_s27 lean_r57
have lean_s29 : (Eq And And) := by timed rfl
have lean_s30 : (Eq (Eq xx5f25 (Rat.ofInt 1)) (Eq xx5f25 (Rat.ofInt 1))) := by timed rfl
let lean_s31 := by timed congr lean_s29 lean_s30
have lean_s32 : (Eq (Not xx5f14) (Not xx5f14)) := by timed rfl
let lean_s33 := by timed congr lean_s29 lean_s32
have lean_s34 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s35 := by timed congr lean_s29 lean_s34
let lean_s36 := by timed congr lean_s29 lean_s5
have lean_s37 : (Eq (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2))) (Not True)) := by timed flipCongrArg lean_r8 [Not]
have lean_s38 : (Eq (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2))) False) := by timed Eq.trans lean_s37 lean_r32
let lean_s39 := by timed congr lean_s29 lean_s38
have lean_s40 : (Eq (Not xx5f22) (Not xx5f22)) := by timed rfl
let lean_s41 := by timed congr lean_s29 lean_s40
have lean_s42 : (Eq xx5f23 xx5f23) := by timed rfl
let lean_s43 := by timed congr lean_s29 lean_s42
have lean_s44 : (Eq (Not xx5f16) (Not xx5f16)) := by timed rfl
let lean_s45 := by timed congr lean_s29 lean_s44
have lean_s46 : (Eq xx5f17 xx5f17) := by timed rfl
let lean_s47 := by timed congr lean_s29 lean_s46
have lean_s48 : (Eq (Eq xx5f18 (Rat.ofInt 0)) (Eq xx5f18 (Rat.ofInt 0))) := by timed rfl
let lean_s49 := by timed congr lean_s47 lean_s48
let lean_s50 := by timed congr lean_s45 lean_s49
let lean_s51 := by timed congr lean_s43 lean_s50
let lean_s52 := by timed congr lean_s41 lean_s51
let lean_s53 := by timed congr lean_s39 lean_s52
let lean_s54 := by timed congr lean_s36 lean_s53
let lean_s55 := by timed congr lean_s35 lean_s54
let lean_s56 := by timed congr lean_s33 lean_s55
have lean_s57 : (Eq (And (Eq xx5f25 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f0 (And (Not xx5f1) (And (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2))) (And (Not xx5f22) (And xx5f23 (And (Not xx5f16) (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) (And (Eq xx5f25 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f0 (And (Not xx5f1) (And False (And (Not xx5f22) (And xx5f23 (And (Not xx5f16) (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))))) := by timed congr lean_s31 lean_s56
have lean_s58 : (Eq (And (Eq xx5f25 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f0 (And (Not xx5f1) (And (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2))) (And (Not xx5f22) (And xx5f23 (And (Not xx5f16) (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) False) := by timed Eq.trans lean_s57 lean_r55
have lean_s59 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) False) := by timed Eq.trans lean_r12 lean_s58
let lean_s60 := by timed congr lean_s27 lean_s59
let lean_s61 := by timed congr lean_s27 lean_r21
let lean_s62 := by timed congr lean_s27 lean_r54
have lean_s63 : (Eq And And) := by timed rfl
have lean_s64 : (Eq (Eq xx5f25 (Rat.ofInt 4)) (Eq xx5f25 (Rat.ofInt 4))) := by timed rfl
let lean_s65 := by timed congr lean_s63 lean_s64
have lean_s66 : (Eq xx5f14 xx5f14) := by timed rfl
let lean_s67 := by timed congr lean_s63 lean_s66
have lean_s68 : (Eq Or Or) := by timed rfl
let lean_s69 := by timed congr lean_s68 lean_s3
have lean_s70 : (Eq xx5f1 xx5f1) := by timed rfl
let lean_s71 := by timed congr lean_s68 lean_s70
let lean_s72 := by timed flipCongrArg lean_r24 [LE.le]
have lean_s73 : (Eq (Rat.ofInt 5) (Rat.ofInt 5)) := by timed rfl
have lean_s74 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)) (binrel% LE.le xx5f6 (Rat.ofInt 5))) := by timed congr lean_s72 lean_s73
have lean_s75 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))) := by timed Eq.trans lean_s74 lean_r46
let lean_s76 := by timed congr lean_s71 lean_s75
have lean_s77 : (Eq (Or (Not xx5f0) (Or xx5f1 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))))) := by timed congr lean_s69 lean_s76
have lean_s78 : (Eq (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))))) := by timed Eq.trans lean_r51 lean_s77
let lean_s79 := by timed congr lean_s63 lean_s78
have lean_s80 : (Eq Or Or) := by timed rfl
let lean_s81 := by timed congr lean_s80 lean_s34
let lean_s82 := by timed congr lean_s80 lean_s5
let lean_s83 := by timed congr lean_s82 lean_s75
have lean_s84 : (Eq (Or xx5f0 (Or (Not xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))))) := by timed congr lean_s81 lean_s83
have lean_s85 : (Eq (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))))) := by timed Eq.trans lean_r48 lean_s84
let lean_s86 := by timed congr lean_s63 lean_s85
have lean_s87 : (Eq Or Or) := by timed rfl
let lean_s88 := by timed congr lean_s87 lean_s3
let lean_s89 := by timed congr lean_s87 lean_s5
let lean_s90 := by timed congr lean_s89 lean_s75
have lean_s91 : (Eq (Or (Not xx5f0) (Or (Not xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))))) := by timed congr lean_s88 lean_s90
have lean_s92 : (Eq (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5)))))) := by timed Eq.trans lean_r49 lean_s91
let lean_s93 := by timed congr lean_s63 lean_s92
have lean_s94 : (Eq xx5f18 xx5f18) := by timed rfl
let lean_s95 := by timed flipCongrArg lean_s94 [Eq]
have lean_s96 : (Eq (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (Eq xx5f18 xx5f6)) := by timed congr lean_s95 lean_r24
have lean_s97 : (Eq (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (Eq xx5f6 xx5f18)) := by timed Eq.trans lean_s96 lean_r15
let lean_s98 := by timed congr lean_s63 lean_s97
have lean_s99 : (Eq (Eq xx5f22 xx5f26) (Eq xx5f22 xx5f26)) := by timed rfl
let lean_s100 := by timed congr lean_s63 lean_s99
have lean_s101 : (Eq (Eq xx5f23 xx5f27) (Eq xx5f23 xx5f27)) := by timed rfl
let lean_s102 := by timed congr lean_s63 lean_s101
let lean_s103 := by timed congr lean_s63 lean_r41
let lean_s104 := by timed congr lean_s103 lean_r25
let lean_s105 := by timed congr lean_s102 lean_s104
let lean_s106 := by timed congr lean_s100 lean_s105
let lean_s107 := by timed congr lean_s98 lean_s106
let lean_s108 := by timed congr lean_s93 lean_s107
let lean_s109 := by timed congr lean_s86 lean_s108
let lean_s110 := by timed congr lean_s79 lean_s109
let lean_s111 := by timed congr lean_s67 lean_s110
have lean_s112 : (Eq (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5))) (And (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))))))))) (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) := by timed congr lean_s65 lean_s111
have lean_s113 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) := by timed Eq.trans lean_r52 lean_s112
let lean_s114 := by timed congr lean_s27 lean_s113
have lean_s115 : (Eq And And) := by timed rfl
have lean_s116 : (Eq (Eq xx5f25 (Rat.ofInt 5)) (Eq xx5f25 (Rat.ofInt 5))) := by timed rfl
let lean_s117 := by timed congr lean_s115 lean_s116
let lean_s118 := by timed congr lean_s115 lean_s32
let lean_s119 := by timed congr lean_s115 lean_s48
let lean_s120 := by timed congr lean_s115 lean_s40
let lean_s121 := by timed congr lean_s115 lean_s42
let lean_s122 := by timed congr lean_s115 lean_r41
let lean_s123 := by timed congr lean_s122 lean_r25
let lean_s124 := by timed congr lean_s121 lean_s123
let lean_s125 := by timed congr lean_s120 lean_s124
let lean_s126 := by timed congr lean_s119 lean_s125
let lean_s127 := by timed congr lean_s118 lean_s126
have lean_s128 : (Eq (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))) := by timed congr lean_s117 lean_s127
have lean_s129 : (Eq (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))) := by timed Eq.trans lean_r43 lean_s128
let lean_s130 := by timed congr lean_s114 lean_s129
let lean_s131 := by timed congr lean_s62 lean_s130
let lean_s132 := by timed congr lean_s61 lean_s131
let lean_s133 := by timed congr lean_s60 lean_s132
have lean_s134 : (Eq (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))))))) (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or False (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))))) := by timed congr lean_s28 lean_s133
have lean_s135 : (Eq (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))))))) (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) := by timed Eq.trans lean_s134 lean_r16
have lean_s136 : (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) := by timed Eq.trans lean_r58 lean_s135
let lean_s137 := by timed congr lean_s0 lean_s136
have lean_s138 : (Eq Or Or) := by timed rfl
let lean_s139 := by timed congr lean_s138 lean_r35
have lean_s140 : (Eq And And) := by timed rfl
have lean_s141 : (Eq (Eq xx5f28 (Rat.ofInt 1)) (Eq xx5f28 (Rat.ofInt 1))) := by timed rfl
let lean_s142 := by timed congr lean_s140 lean_s141
let lean_s143 := by timed congr lean_s140 lean_s32
have lean_s144 : (Eq xx5f2 xx5f2) := by timed rfl
let lean_s145 := by timed congr lean_s140 lean_s144
let lean_s146 := by timed congr lean_s140 lean_s9
let lean_s147 := by timed congr lean_s140 lean_r30
have lean_s148 : (Eq (Not xx5f10) (Not xx5f10)) := by timed rfl
let lean_s149 := by timed congr lean_s140 lean_s148
have lean_s150 : (Eq (Not xx5f11) (Not xx5f11)) := by timed rfl
let lean_s151 := by timed congr lean_s140 lean_s150
have lean_s152 : (Eq (Not xx5f8) (Not xx5f8)) := by timed rfl
let lean_s153 := by timed congr lean_s140 lean_s152
have lean_s154 : (Eq xx5f9 xx5f9) := by timed rfl
let lean_s155 := by timed congr lean_s140 lean_s154
have lean_s156 : (Eq (Eq xx5f19 (Rat.ofInt 0)) (Eq xx5f19 (Rat.ofInt 0))) := by timed rfl
let lean_s157 := by timed congr lean_s155 lean_s156
let lean_s158 := by timed congr lean_s153 lean_s157
let lean_s159 := by timed congr lean_s151 lean_s158
let lean_s160 := by timed congr lean_s149 lean_s159
let lean_s161 := by timed congr lean_s147 lean_s160
let lean_s162 := by timed congr lean_s146 lean_s161
let lean_s163 := by timed congr lean_s145 lean_s162
let lean_s164 := by timed congr lean_s143 lean_s163
have lean_s165 : (Eq (And (Eq xx5f28 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f2 (And (Not xx5f3) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f10) (And (Not xx5f11) (And (Not xx5f8) (And xx5f9 (Eq xx5f19 (Rat.ofInt 0))))))))))) (And (Eq xx5f28 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f2 (And (Not xx5f3) (And False (And (Not xx5f10) (And (Not xx5f11) (And (Not xx5f8) (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) := by timed congr lean_s142 lean_s164
have lean_s166 : (Eq (And (Eq xx5f28 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f2 (And (Not xx5f3) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f10) (And (Not xx5f11) (And (Not xx5f8) (And xx5f9 (Eq xx5f19 (Rat.ofInt 0))))))))))) False) := by timed Eq.trans lean_s165 lean_r18
have lean_s167 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) False) := by timed Eq.trans lean_r38 lean_s166
let lean_s168 := by timed congr lean_s138 lean_s167
let lean_s169 := by timed congr lean_s138 lean_r37
let lean_s170 := by timed congr lean_s138 lean_r36
have lean_s171 : (Eq And And) := by timed rfl
have lean_s172 : (Eq (Eq xx5f28 (Rat.ofInt 4)) (Eq xx5f28 (Rat.ofInt 4))) := by timed rfl
let lean_s173 := by timed congr lean_s171 lean_s172
let lean_s174 := by timed congr lean_s171 lean_s66
have lean_s175 : (Eq Or Or) := by timed rfl
let lean_s176 := by timed congr lean_s175 lean_s7
have lean_s177 : (Eq xx5f3 xx5f3) := by timed rfl
let lean_s178 := by timed congr lean_s175 lean_s177
let lean_s179 := by timed flipCongrArg lean_r24 [LE.le]
have lean_s180 : (Eq (Rat.ofInt 1) (Rat.ofInt 1)) := by timed rfl
have lean_s181 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)) (binrel% LE.le xx5f6 (Rat.ofInt 1))) := by timed congr lean_s179 lean_s180
have lean_s182 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))) := by timed Eq.trans lean_s181 lean_r34
let lean_s183 := by timed congr lean_s178 lean_s182
have lean_s184 : (Eq (Or (Not xx5f2) (Or xx5f3 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))))) := by timed congr lean_s176 lean_s183
have lean_s185 : (Eq (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))))) := by timed Eq.trans lean_r5 lean_s184
let lean_s186 := by timed congr lean_s171 lean_s185
have lean_s187 : (Eq Or Or) := by timed rfl
let lean_s188 := by timed congr lean_s187 lean_s7
let lean_s189 := by timed congr lean_s187 lean_s9
let lean_s190 := by timed congr lean_s189 lean_s182
have lean_s191 : (Eq (Or (Not xx5f2) (Or (Not xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))))) := by timed congr lean_s188 lean_s190
have lean_s192 : (Eq (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))))) := by timed Eq.trans lean_r44 lean_s191
let lean_s193 := by timed congr lean_s171 lean_s192
have lean_s194 : (Eq xx5f19 xx5f19) := by timed rfl
let lean_s195 := by timed flipCongrArg lean_s194 [Eq]
have lean_s196 : (Eq (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (Eq xx5f19 xx5f6)) := by timed congr lean_s195 lean_r24
have lean_s197 : (Eq (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (Eq xx5f6 xx5f19)) := by timed Eq.trans lean_s196 lean_r17
let lean_s198 := by timed congr lean_s171 lean_s197
have lean_s199 : (Eq (Eq xx5f10 xx5f29) (Eq xx5f10 xx5f29)) := by timed rfl
let lean_s200 := by timed congr lean_s171 lean_s199
have lean_s201 : (Eq (Eq xx5f11 xx5f30) (Eq xx5f11 xx5f30)) := by timed rfl
let lean_s202 := by timed congr lean_s171 lean_s201
let lean_s203 := by timed congr lean_s171 lean_r42
let lean_s204 := by timed congr lean_s203 lean_r6
let lean_s205 := by timed congr lean_s202 lean_s204
let lean_s206 := by timed congr lean_s200 lean_s205
let lean_s207 := by timed congr lean_s198 lean_s206
let lean_s208 := by timed congr lean_s193 lean_s207
let lean_s209 := by timed congr lean_s186 lean_s208
let lean_s210 := by timed congr lean_s174 lean_s209
have lean_s211 : (Eq (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))))))) (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))) := by timed congr lean_s173 lean_s210
have lean_s212 : (Eq (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))) := by timed Eq.trans lean_r3 lean_s211
let lean_s213 := by timed congr lean_s138 lean_s212
have lean_s214 : (Eq And And) := by timed rfl
have lean_s215 : (Eq (Eq xx5f28 (Rat.ofInt 5)) (Eq xx5f28 (Rat.ofInt 5))) := by timed rfl
let lean_s216 := by timed congr lean_s214 lean_s215
let lean_s217 := by timed congr lean_s214 lean_s32
let lean_s218 := by timed congr lean_s214 lean_s40
let lean_s219 := by timed congr lean_s214 lean_s42
let lean_s220 := by timed congr lean_s214 lean_s156
let lean_s221 := by timed congr lean_s214 lean_s148
have lean_s222 : (Eq xx5f11 xx5f11) := by timed rfl
let lean_s223 := by timed congr lean_s214 lean_s222
let lean_s224 := by timed congr lean_s214 lean_r42
let lean_s225 := by timed congr lean_s224 lean_r6
let lean_s226 := by timed congr lean_s223 lean_s225
let lean_s227 := by timed congr lean_s221 lean_s226
let lean_s228 := by timed congr lean_s220 lean_s227
let lean_s229 := by timed congr lean_s219 lean_s228
let lean_s230 := by timed congr lean_s218 lean_s229
let lean_s231 := by timed congr lean_s217 lean_s230
have lean_s232 : (Eq (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))) := by timed congr lean_s216 lean_s231
have lean_s233 : (Eq (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))) := by timed Eq.trans lean_r10 lean_s232
let lean_s234 := by timed congr lean_s213 lean_s233
let lean_s235 := by timed congr lean_s170 lean_s234
let lean_s236 := by timed congr lean_s169 lean_s235
let lean_s237 := by timed congr lean_s168 lean_s236
have lean_s238 : (Eq (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))))))) (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or False (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))))))))) := by timed congr lean_s139 lean_s237
have lean_s239 : (Eq (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))))))) (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))))))) := by timed Eq.trans lean_s238 lean_r13
have lean_s240 : (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9)))))))))))))) := by timed Eq.trans lean_r40 lean_s239
let lean_s241 := by timed congr lean_s0 lean_s240
have lean_s242 : (Eq Or Or) := by timed rfl
let lean_s243 := by timed congr lean_s242 lean_r7
let lean_s244 := by timed congr lean_s242 lean_r31
let lean_s245 := by timed congr lean_s242 lean_r29
have lean_s246 : (Eq And And) := by timed rfl
have lean_s247 : (Eq (Eq xx5f31 (Rat.ofInt 3)) (Eq xx5f31 (Rat.ofInt 3))) := by timed rfl
let lean_s248 := by timed congr lean_s246 lean_s247
let lean_s249 := by timed congr lean_s246 lean_s32
have lean_s250 : (Eq xx5f4 xx5f4) := by timed rfl
let lean_s251 := by timed congr lean_s246 lean_s250
have lean_s252 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s253 := by timed congr lean_s246 lean_s252
have lean_s254 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (Not True)) := by timed flipCongrArg lean_r19 [Not]
have lean_s255 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) False) := by timed Eq.trans lean_s254 lean_r32
let lean_s256 := by timed congr lean_s246 lean_s255
have lean_s257 : (Eq (Not xx5f12) (Not xx5f12)) := by timed rfl
let lean_s258 := by timed congr lean_s246 lean_s257
have lean_s259 : (Eq (Not xx5f13) (Not xx5f13)) := by timed rfl
let lean_s260 := by timed congr lean_s246 lean_s259
have lean_s261 : (Eq (Eq xx5f20 xx5f21) (Eq xx5f20 xx5f21)) := by timed rfl
let lean_s262 := by timed congr lean_s246 lean_s261
have lean_s263 : (Eq (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f15 (Rat.ofInt 0))) := by timed rfl
let lean_s264 := by timed congr lean_s262 lean_s263
let lean_s265 := by timed congr lean_s260 lean_s264
let lean_s266 := by timed congr lean_s258 lean_s265
let lean_s267 := by timed congr lean_s256 lean_s266
let lean_s268 := by timed congr lean_s253 lean_s267
let lean_s269 := by timed congr lean_s251 lean_s268
let lean_s270 := by timed congr lean_s249 lean_s269
have lean_s271 : (Eq (And (Eq xx5f31 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f4 (And xx5f5 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Not xx5f12) (And (Not xx5f13) (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0)))))))))) (And (Eq xx5f31 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f4 (And xx5f5 (And False (And (Not xx5f12) (And (Not xx5f13) (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))))) := by timed congr lean_s248 lean_s270
have lean_s272 : (Eq (And (Eq xx5f31 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f4 (And xx5f5 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Not xx5f12) (And (Not xx5f13) (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0)))))))))) False) := by timed Eq.trans lean_s271 lean_r9
have lean_s273 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) False) := by timed Eq.trans lean_r23 lean_s272
let lean_s274 := by timed congr lean_s242 lean_s273
have lean_s275 : (Eq And And) := by timed rfl
have lean_s276 : (Eq (Eq xx5f31 (Rat.ofInt 4)) (Eq xx5f31 (Rat.ofInt 4))) := by timed rfl
let lean_s277 := by timed congr lean_s275 lean_s276
let lean_s278 := by timed congr lean_s275 lean_s66
have lean_s279 : (Eq Or Or) := by timed rfl
let lean_s280 := by timed congr lean_s279 lean_s11
let lean_s281 := by timed congr lean_s279 lean_s252
let lean_s282 := by timed congr lean_s281 lean_s182
have lean_s283 : (Eq (Or (Not xx5f4) (Or xx5f5 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))))) := by timed congr lean_s280 lean_s282
have lean_s284 : (Eq (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1)))))) := by timed Eq.trans lean_r45 lean_s283
let lean_s285 := by timed congr lean_s275 lean_s284
have lean_s286 : (Eq Or Or) := by timed rfl
let lean_s287 := by timed congr lean_s286 lean_s11
let lean_s288 := by timed congr lean_s286 lean_s13
let lean_s289 := by timed flipCongrArg lean_r24 [LE.le]
have lean_s290 : (Eq (Rat.ofInt 2) (Rat.ofInt 2)) := by timed rfl
have lean_s291 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)) (binrel% LE.le xx5f6 (Rat.ofInt 2))) := by timed congr lean_s289 lean_s290
have lean_s292 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2)))) := by timed Eq.trans lean_s291 lean_r39
let lean_s293 := by timed congr lean_s288 lean_s292
have lean_s294 : (Eq (Or (Not xx5f4) (Or (Not xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2)))))) := by timed congr lean_s287 lean_s293
have lean_s295 : (Eq (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))) (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2)))))) := by timed Eq.trans lean_r56 lean_s294
let lean_s296 := by timed congr lean_s275 lean_s295
have lean_s297 : (Eq xx5f15 xx5f15) := by timed rfl
let lean_s298 := by timed flipCongrArg lean_s297 [Eq]
have lean_s299 : (Eq (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (Eq xx5f15 xx5f6)) := by timed congr lean_s298 lean_r24
have lean_s300 : (Eq (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (Eq xx5f6 xx5f15)) := by timed Eq.trans lean_s299 lean_r28
let lean_s301 := by timed congr lean_s275 lean_s300
let lean_s302 := by timed congr lean_s275 lean_r22
let lean_s303 := by timed congr lean_s275 lean_r20
let lean_s304 := by timed congr lean_s303 lean_s261
let lean_s305 := by timed congr lean_s302 lean_s304
let lean_s306 := by timed congr lean_s301 lean_s305
let lean_s307 := by timed congr lean_s296 lean_s306
let lean_s308 := by timed congr lean_s285 lean_s307
let lean_s309 := by timed congr lean_s278 lean_s308
have lean_s310 : (Eq (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1))) (And (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2))) (And (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6)) (And (Eq xx5f12 xx5f4) (And (Eq xx5f13 xx5f5) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))) := by timed congr lean_s277 lean_s309
have lean_s311 : (Eq (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))) := by timed Eq.trans lean_r27 lean_s310
let lean_s312 := by timed congr lean_s242 lean_s311
have lean_s313 : (Eq And And) := by timed rfl
have lean_s314 : (Eq (Eq xx5f31 (Rat.ofInt 5)) (Eq xx5f31 (Rat.ofInt 5))) := by timed rfl
let lean_s315 := by timed congr lean_s313 lean_s314
let lean_s316 := by timed congr lean_s313 lean_s32
let lean_s317 := by timed congr lean_s313 lean_s148
let lean_s318 := by timed congr lean_s313 lean_s222
let lean_s319 := by timed congr lean_s313 lean_s263
let lean_s320 := by timed congr lean_s313 lean_r22
let lean_s321 := by timed congr lean_s313 lean_r20
let lean_s322 := by timed congr lean_s321 lean_s261
let lean_s323 := by timed congr lean_s320 lean_s322
let lean_s324 := by timed congr lean_s319 lean_s323
let lean_s325 := by timed congr lean_s318 lean_s324
let lean_s326 := by timed congr lean_s317 lean_s325
let lean_s327 := by timed congr lean_s316 lean_s326
have lean_s328 : (Eq (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f12 xx5f4) (And (Eq xx5f13 xx5f5) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))) := by timed congr lean_s315 lean_s327
have lean_s329 : (Eq (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))) := by timed Eq.trans lean_r53 lean_s328
let lean_s330 := by timed congr lean_s312 lean_s329
let lean_s331 := by timed congr lean_s274 lean_s330
let lean_s332 := by timed congr lean_s245 lean_s331
let lean_s333 := by timed congr lean_s244 lean_s332
have lean_s334 : (Eq (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))))))) (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or False (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))))))))) := by timed congr lean_s243 lean_s333
have lean_s335 : (Eq (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (Or (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))))))) (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))))))) := by timed Eq.trans lean_s334 lean_r14
have lean_s336 : (Eq (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21))))))))))))) := by timed Eq.trans lean_r26 lean_s335
let lean_s337 := by timed congr lean_s0 lean_s336
let lean_s338 := by timed flipCongrArg lean_r11 [Or]
have lean_s339 : (Eq (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5)))) (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5)))))) := by timed congr lean_s338 lean_r33
let lean_s340 := by timed congr lean_s0 lean_s339
have lean_s341 : (Eq (Or (Not xx5f11) (Not xx5f10)) (Or (Not xx5f11) (Not xx5f10))) := by timed rfl
let lean_s342 := by timed congr lean_s0 lean_s341
have lean_s343 : (Eq (Or (Not xx5f23) (Not xx5f22)) (Or (Not xx5f23) (Not xx5f22))) := by timed rfl
let lean_s344 := by timed congr lean_s0 lean_s343
have lean_s345 : (Eq (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f27) (Not xx5f26))) := by timed rfl
let lean_s346 := by timed congr lean_s0 lean_s345
have lean_s347 : (Eq (Or (Not xx5f30) (Not xx5f29)) (Or (Not xx5f30) (Not xx5f29))) := by timed rfl
let lean_s348 := by timed congr lean_s346 lean_s347
let lean_s349 := by timed congr lean_s344 lean_s348
let lean_s350 := by timed congr lean_s342 lean_s349
let lean_s351 := by timed congr lean_s340 lean_s350
let lean_s352 := by timed congr lean_s337 lean_s351
let lean_s353 := by timed congr lean_s241 lean_s352
let lean_s354 := by timed congr lean_s137 lean_s353
let lean_s355 := by timed congr lean_s26 lean_s354
let lean_s356 := by timed congr lean_s24 lean_s355
let lean_s357 := by timed congr lean_s19 lean_s356
let lean_s358 := by timed congr lean_s14 lean_s357
let lean_s359 := by timed congr lean_s12 lean_s358
let lean_s360 := by timed congr lean_s10 lean_s359
let lean_s361 := by timed congr lean_s8 lean_s360
let lean_s362 := by timed congr lean_s6 lean_s361
let lean_s363 := by timed congr lean_s4 lean_s362
let lean_s364 := by timed congr lean_s2 lean_s363
have lean_s365 : (Eq (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f24 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0))) (And (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5)))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29)))))))))))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f24 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) (And (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))))))) (And (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))))))) (And (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29))))))))))))))))))))) := by timed congr lean_s1 lean_s364
have lean_s366 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f24 (Rat.ofInt 1)) (binrel% GE.ge xx5f24 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (And (Not xx5f2) (Not xx5f3))) (And (Not xx5f4) (Not xx5f5))) (Not (binrel% LT.lt xx5f7 (Rat.ofInt 0)))) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f0)) (Not xx5f1)) (Not xx5f22)) (Not xx5f23)) xx5f16) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 1)) (Not xx5f14)) xx5f0) (Not xx5f1)) (Not (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Not xx5f22) xx5f23)) (Not xx5f16)) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f0)) xx5f1) (And (Not xx5f22) xx5f23)) xx5f16) xx5f17) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 3)) (Not xx5f14)) xx5f0) xx5f1) xx5f22) (Not xx5f23)) (Not xx5f16)) (Not xx5f17)) (Eq xx5f18 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f25 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f0) xx5f1) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or xx5f0 (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Or (Or (Not xx5f0) (Not xx5f1)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 5)))) (Eq xx5f18 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f22 xx5f26)) (Eq xx5f23 xx5f27)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1)))) (And (And (And (And (Eq xx5f25 (Rat.ofInt 5)) (Not xx5f14)) (Eq xx5f18 (Rat.ofInt 0))) (And (Not xx5f22) xx5f23)) (And (Eq xx5f16 xx5f0) (Eq xx5f17 xx5f1))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f2)) (Not xx5f3)) (Not xx5f22)) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 1)) (Not xx5f14)) xx5f2) (Not xx5f3)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f10)) (Not xx5f11)) (Not xx5f8)) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f2)) xx5f3) xx5f22) (Not xx5f23)) (And (Not xx5f10) xx5f11)) xx5f8) xx5f9) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 3)) (Not xx5f14)) xx5f2) xx5f3) xx5f10) (Not xx5f11)) (Not xx5f8)) (Not xx5f9)) (Eq xx5f19 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f2) xx5f3) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f2) (Not xx5f3)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Eq xx5f19 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (Eq xx5f10 xx5f29)) (Eq xx5f11 xx5f30)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3)))) (And (And (And (And (And (And (Eq xx5f28 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f22)) xx5f23) (Eq xx5f19 (Rat.ofInt 0))) (And (Not xx5f10) xx5f11)) (And (Eq xx5f8 xx5f2) (Eq xx5f9 xx5f3))))) (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 0)) (Not xx5f14)) (Not xx5f4)) (Not xx5f5)) (Not xx5f10)) (Not xx5f11)) xx5f12) (Not xx5f13)) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21)) (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 1)) (Not xx5f14)) xx5f4) (Not xx5f5)) (Not xx5f12)) xx5f13) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 2)) (Not xx5f14)) (Not xx5f4)) xx5f5) xx5f10) (Not xx5f11)) xx5f12) xx5f13) (Eq xx5f15 (Rat.ofInt 0))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 3)) (Not xx5f14)) xx5f4) xx5f5) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Not xx5f12)) (Not xx5f13)) (Eq xx5f20 xx5f21)) (Eq xx5f15 (Rat.ofInt 0)))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 4)) xx5f14) (Or (Or (Not xx5f4) xx5f5) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 1)))) (Or (Or (Not xx5f4) (Not xx5f5)) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6) (Rat.ofInt 2)))) (Eq xx5f15 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f6))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21))) (And (And (And (And (And (And (Eq xx5f31 (Rat.ofInt 5)) (Not xx5f14)) (Not xx5f10)) xx5f11) (Eq xx5f15 (Rat.ofInt 0))) (And (Eq xx5f12 xx5f4) (Eq xx5f13 xx5f5))) (Eq xx5f20 xx5f21)))) (Or (And (And (Not xx5f16) xx5f17) (Or (Not xx5f12) (Not xx5f13))) (And (And (Not xx5f0) xx5f1) (Or (Not xx5f4) (Not xx5f5))))) (Or (Not xx5f11) (Not xx5f10))) (Or (Not xx5f23) (Not xx5f22))) (Or (Not xx5f27) (Not xx5f26))) (Or (Not xx5f30) (Not xx5f29))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f24 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) (And (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))))))) (And (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))))))) (And (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29))))))))))))))))))))) := by timed Eq.trans lean_r0 lean_s365
have lean_s367 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f24 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) (And (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))))))) (And (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))))))) (And (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29)))))))))))))))))))) := by timed eqResolve lean_a62 lean_s366
have lean_s368 : (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) := by andElim lean_s367, 11
have lean_s369 : (Or (Not (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) := by timed @cnfOrPos [(And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))), (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))), (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))), (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))), (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))]
have lean_s370 : (Or (Not (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) xx5f16) := by timed @cnfAndPos [(Eq xx5f25 (Rat.ofInt 0)), (Not xx5f14), (Not xx5f0), (Not xx5f1), (Not xx5f22), (Not xx5f23), xx5f16, (Not xx5f17), (Eq xx5f18 (Rat.ofInt 0))] 6
have lean_s371 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f24 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) (And (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))))))) (And (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))))))) (And (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29)))))))))))))))))))) := by timed eqResolve lean_a62 lean_s366
have lean_s372 : (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) := by andElim lean_s371, 14
have lean_s373 : (Or (Not (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) xx5f1) := by timed @cnfAndPos [(Not xx5f0), xx5f1, (Or (Not xx5f4) (Not xx5f5))] 1
have lean_s374 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f24 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) (And (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))))))) (And (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))))))) (And (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29)))))))))))))))))))) := by timed eqResolve lean_a62 lean_s366
have lean_s375 : (Not xx5f1) := by andElim lean_s374, 3
have lean_s376 : (Not (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) := by R1 lean_s373, lean_s375, xx5f1, [(- 1), 0]
have lean_s377 : (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) := by R1 lean_s372, lean_s376, (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5)))), [(- 1), 0]
have lean_s378 : (Not xx5f16) := by andElim lean_s377, 0
have lean_s379 : (Not (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) := by R1 lean_s370, lean_s378, xx5f16, [(- 1), 0]
let lean_s380 := by R1 lean_s369, lean_s379, (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))), [(- 1), 0]
have lean_s381 : (Or (Not (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) xx5f1) := by timed @cnfAndPos [(Eq xx5f25 (Rat.ofInt 2)), (Not xx5f14), (Not xx5f0), xx5f1, (Not xx5f22), xx5f23, xx5f16, xx5f17, (Eq xx5f18 (Rat.ofInt 0))] 3
have lean_s382 : (Not xx5f1) := by andElim lean_s374, 3
have lean_s383 : (Not (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0))))))))))) := by R1 lean_s381, lean_s382, xx5f1, [(- 1), 0]
let lean_s384 := by R1 lean_s380, lean_s383, (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))), [(- 1), 0]
have lean_s385 : (Or (Not (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) xx5f0) := by timed @cnfAndPos [(Eq xx5f25 (Rat.ofInt 3)), (Not xx5f14), xx5f0, xx5f1, xx5f22, (Not xx5f23), (Not xx5f16), (Not xx5f17), (Eq xx5f18 (Rat.ofInt 0))] 2
have lean_s386 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f24) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f24 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f24 (smtIte xx5f14 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) (And (Or (And (Eq xx5f28 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f22) (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f2) (And xx5f3 (And xx5f22 (And (Not xx5f23) (And (Not xx5f10) (And xx5f11 (And xx5f8 (And xx5f9 (Eq xx5f19 (Rat.ofInt 0)))))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f2 (And xx5f3 (And xx5f10 (And (Not xx5f11) (And (Not xx5f8) (And (Not xx5f9) (Eq xx5f19 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f28 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f2) (Or xx5f3 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f2) (Or (Not xx5f3) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Eq xx5f6 xx5f19) (And (Eq xx5f10 xx5f29) (And (Eq xx5f11 xx5f30) (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))) (And (Eq xx5f28 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f19 (Rat.ofInt 0)) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f2 xx5f8) (Eq xx5f3 xx5f9))))))))))))) (And (Or (And (Eq xx5f31 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f10) (And (Not xx5f11) (And xx5f12 (And (Not xx5f13) (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 1)) (And (Not xx5f14) (And xx5f4 (And (Not xx5f5) (And (Not xx5f12) (And xx5f13 (And (Eq xx5f20 xx5f21) (Eq xx5f15 (Rat.ofInt 0))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f4) (And xx5f5 (And xx5f10 (And (Not xx5f11) (And xx5f12 (And xx5f13 (And (Eq xx5f15 (Rat.ofInt 0)) (Eq xx5f20 xx5f21)))))))))) (Or (And (Eq xx5f31 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f4) (Or xx5f5 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 1))))) (And (Or (Not xx5f4) (Or (Not xx5f5) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 2))))) (And (Eq xx5f6 xx5f15) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))) (And (Eq xx5f31 (Rat.ofInt 5)) (And (Not xx5f14) (And (Not xx5f10) (And xx5f11 (And (Eq xx5f15 (Rat.ofInt 0)) (And (Eq xx5f4 xx5f12) (And (Eq xx5f5 xx5f13) (Eq xx5f20 xx5f21)))))))))))) (And (Or (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5))))) (And (Or (Not xx5f11) (Not xx5f10)) (And (Or (Not xx5f23) (Not xx5f22)) (And (Or (Not xx5f27) (Not xx5f26)) (Or (Not xx5f30) (Not xx5f29)))))))))))))))))))) := by timed eqResolve lean_a62 lean_s366
have lean_s387 : (Not xx5f0) := by andElim lean_s386, 2
have lean_s388 : (Not (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0))))))))))) := by R1 lean_s385, lean_s387, xx5f0, [(- 1), 0]
let lean_s389 := by R1 lean_s384, lean_s388, (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))), [(- 1), 0]
have lean_s390 : (Or (Not (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) (Eq xx5f1 xx5f17)) := by timed @cnfAndPos [(Eq xx5f25 (Rat.ofInt 4)), xx5f14, (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))), (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))), (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))), (Eq xx5f6 xx5f18), (Eq xx5f22 xx5f26), (Eq xx5f23 xx5f27), (Eq xx5f0 xx5f16), (Eq xx5f1 xx5f17)] 9
have lean_s391 : (Or (Not (Eq xx5f1 xx5f17)) (Or xx5f1 (Not xx5f17))) := by timed cnfEquivPos2
have lean_s392 : (Not xx5f1) := by andElim lean_s374, 3
let lean_s393 := by R1 lean_s391, lean_s392, xx5f1, [(- 1), 0]
have lean_s394 : (And (Not xx5f16) (And xx5f17 (Or (Not xx5f12) (Not xx5f13)))) := by R1 lean_s372, lean_s376, (And (Not xx5f0) (And xx5f1 (Or (Not xx5f4) (Not xx5f5)))), [(- 1), 0]
have lean_s395 : xx5f17 := by andElim lean_s394, 1
have lean_s396 : (Not (Eq xx5f1 xx5f17)) := by R2 lean_s393, lean_s395, xx5f17, [(- 1), 0]
have lean_s397 : (Not (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))))))) := by R1 lean_s390, lean_s396, (Eq xx5f1 xx5f17), [(- 1), 0]
let lean_s398 := by R1 lean_s389, lean_s397, (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))), [(- 1), 0]
have lean_s399 : (Or (Not (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))) (Eq xx5f1 xx5f17)) := by timed @cnfAndPos [(Eq xx5f25 (Rat.ofInt 5)), (Not xx5f14), (Eq xx5f18 (Rat.ofInt 0)), (Not xx5f22), xx5f23, (Eq xx5f0 xx5f16), (Eq xx5f1 xx5f17)] 6
let lean_s400 := by R1 lean_s391, lean_s392, xx5f1, [(- 1), 0]
have lean_s401 : (Not (Eq xx5f1 xx5f17)) := by R2 lean_s400, lean_s395, xx5f17, [(- 1), 0]
have lean_s402 : (Not (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))) := by R1 lean_s399, lean_s401, (Eq xx5f1 xx5f17), [(- 1), 0]
have lean_s403 : (Not (Or (And (Eq xx5f25 (Rat.ofInt 0)) (And (Not xx5f14) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f22) (And (Not xx5f23) (And xx5f16 (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 2)) (And (Not xx5f14) (And (Not xx5f0) (And xx5f1 (And (Not xx5f22) (And xx5f23 (And xx5f16 (And xx5f17 (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 3)) (And (Not xx5f14) (And xx5f0 (And xx5f1 (And xx5f22 (And (Not xx5f23) (And (Not xx5f16) (And (Not xx5f17) (Eq xx5f18 (Rat.ofInt 0)))))))))) (Or (And (Eq xx5f25 (Rat.ofInt 4)) (And xx5f14 (And (Or (Not xx5f0) (Or xx5f1 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or xx5f0 (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Or (Not xx5f0) (Or (Not xx5f1) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 5))))) (And (Eq xx5f6 xx5f18) (And (Eq xx5f22 xx5f26) (And (Eq xx5f23 xx5f27) (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))) (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17)))))))))))) := by R1 lean_s398, lean_s402, (And (Eq xx5f25 (Rat.ofInt 5)) (And (Not xx5f14) (And (Eq xx5f18 (Rat.ofInt 0)) (And (Not xx5f22) (And xx5f23 (And (Eq xx5f0 xx5f16) (Eq xx5f1 xx5f17))))))), [(- 1), 0]
exact (show False from by timed contradiction lean_s368 lean_s403)


