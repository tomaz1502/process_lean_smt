-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f20 : Rat}
variable {xx5f21 : Rat}
variable {xx5f13 : Rat}
variable {xx5f18 : Prop}
variable {xx5f2 : Prop}
variable {xx5f9 : Prop}
variable {xx5f8 : Rat}
variable {xx5f3 : Prop}
variable {xx5f19 : Prop}
variable {xx5f6 : Prop}
variable {xx5f10 : Prop}
variable {xx5f7 : Prop}
variable {xx5f16 : Prop}
variable {xx5f11 : Prop}
variable {xx5f12 : Prop}
variable {xx5f6 : Prop}
variable {xx5f15 : Prop}
variable {xx5f19 : Prop}
variable {xx5f16 : Prop}
variable {xx5f1 : Prop}
variable {xx5f1 : Prop}
variable {xx5f17 : Rat}
variable {xx5f4 : Prop}
variable {xx5f5 : Prop}
variable {xx5f7 : Prop}
variable {xx5f8 : Rat}
variable {xx5f10 : Prop}
variable {xx5f9 : Prop}
variable {xx5f0 : Prop}
variable {xx5f15 : Prop}
variable {xx5f17 : Rat}
variable {xx5f22 : Rat}
variable {xx5f5 : Prop}
variable {xx5f11 : Prop}
variable {xx5f3 : Prop}
variable {xx5f14 : Prop}
variable {xx5f12 : Prop}
variable {xx5f2 : Prop}
variable {xx5f0 : Prop}
variable {xx5f18 : Prop}
variable {xx5f22 : Rat}
variable {xx5f13 : Rat}
variable {xx5f21 : Rat}
variable {xx5f14 : Prop}
variable {xx5f20 : Rat}
variable {xx5f4 : Prop}

theorem th0 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (binrel% GE.ge xx5f20 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not xx5f2)) (Not xx5f3)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f6)) (Not xx5f7)) (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0)))) (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))))) (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f20 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0))) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))))))))))))))))))) → (Eq (binrel% LE.le xx5f20 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% GE.ge xx5f20 (Rat.ofInt 0)) (binrel% GE.ge xx5f20 (Int.ofNat 0))) → (Eq (binrel% LT.lt xx5f8 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f8 (Rat.ofInt 0)))) → (Eq (binrel% GE.ge xx5f8 (Rat.ofInt 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)))))))))))) → (Eq (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3)))))))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 2)) (And (Not xx5f11) (And xx5f12 (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (Eq xx5f14 xx5f3))))))))))) → (Eq (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And False (And (Not xx5f11) (And xx5f12 (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14)))))))))) False) → (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3))))))))))) → (Eq (Eq xx5f13 xx5f8) (Eq xx5f8 xx5f13)) → (Eq (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3))))))))) → (Eq (Or (Or xx5f0 xx5f1) xx5f9) (Or xx5f0 (Or xx5f1 xx5f9))) → (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3)))))))))) → (Eq (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))))) → (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 True))) True) → (Eq (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))))) → (Eq (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))))) → (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 1)) False) → (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))) → (Eq (Eq xx5f17 xx5f8) (Eq xx5f8 xx5f17)) → (Eq (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or (Or xx5f4 xx5f5) xx5f9) (And (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7)))))))))))))))) → (Eq (binrel% LE.le xx5f8 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))) → (Eq (Not False) True) → (Eq (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))))) → (Eq (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))))) → (Eq (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or False (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) → (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)) True) → (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7))))))))))) → (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)) True) → (Eq (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And False (And xx5f15 (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10)))))))))) False) → (Eq (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or False (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or False (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))))))))))) → (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 False))) (Or (Not xx5f0) (Or xx5f1 xx5f9))) → (Eq (Eq xx5f16 xx5f5) (Eq xx5f5 xx5f16)) → (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 True))) True) → (Eq (Eq xx5f10 xx5f7) (Eq xx5f7 xx5f10)) → (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 6)) False) → (Eq (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))))) → (Eq (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))))) → (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) True) → (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))) → (Eq (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))))) → (Eq (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16))))) → (Eq (Eq xx5f12 xx5f1) (Eq xx5f1 xx5f12)) → (Eq (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) xx5f8) → (Eq (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))) → (Eq (Eq xx5f19 xx5f6) (Eq xx5f6 xx5f19)) → (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))) → (Eq (binrel% LE.le xx5f8 (Rat.ofInt 6)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6)))) → (Eq (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And False (And (Not xx5f15) (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10)))))))))) False) → (Eq (Not True) False) → (Eq (Not (Not (binrel% GE.ge xx5f8 (Int.ofNat 0)))) (binrel% GE.ge xx5f8 (Int.ofNat 0))) → (Eq (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7))))))))) → (Eq (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))))) → (Eq (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And True (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) → (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 2)) False) → (Eq (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And True (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or (Or xx5f0 xx5f1) xx5f9) (And (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))) (And (Or (Or xx5f0 (Not xx5f1)) xx5f9) (And (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7))))))))))) → (Eq (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7)))))))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 6)) (And xx5f15 (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7))))))))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (Eq xx5f14 xx5f3)))))))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))) → (Eq (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f15) (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7))))))))))) → (Eq (Eq xx5f18 xx5f2) (Eq xx5f2 xx5f18)) → (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7)))))))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))) → (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 False))) (Or (Not xx5f4) (Or xx5f5 xx5f9))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))))))))))))) → (Eq (Eq xx5f15 xx5f4) (Eq xx5f4 xx5f15)) → (Eq (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))))) → (Eq (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))) → (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 False))) (Or xx5f4 (Or (Not xx5f5) xx5f9))) → (Eq (Eq xx5f14 xx5f3) (Eq xx5f3 xx5f14)) → (Eq (Or (Or xx5f4 xx5f5) xx5f9) (Or xx5f4 (Or xx5f5 xx5f9))) → (Eq (Eq xx5f11 xx5f0) (Eq xx5f0 xx5f11)) → (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 True))) True) → (Eq (binrel% LE.le xx5f8 (Rat.ofInt 3)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3)))) → (Eq (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))) (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))))) → (Eq (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And True (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) → (Eq (Or (Or xx5f0 (Not xx5f1)) xx5f9) (Or xx5f0 (Or (Not xx5f1) xx5f9))) → (Eq (binrel% LE.le xx5f8 (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2)))) → (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (binrel% GE.ge xx5f20 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not xx5f2)) (Not xx5f3)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f6)) (Not xx5f7)) (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0)))) (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))))) → False :=
fun lean_r0 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (binrel% GE.ge xx5f20 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not xx5f2)) (Not xx5f3)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f6)) (Not xx5f7)) (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0)))) (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))))) (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f20 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0))) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq (binrel% LE.le xx5f20 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% GE.ge xx5f20 (Rat.ofInt 0)) (binrel% GE.ge xx5f20 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% LT.lt xx5f8 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f8 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% GE.ge xx5f8 (Rat.ofInt 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 2)) (And (Not xx5f11) (And xx5f12 (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (Eq xx5f14 xx5f3))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And False (And (Not xx5f11) (And xx5f12 (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14)))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq (Eq xx5f13 xx5f8) (Eq xx5f8 xx5f13)) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (Or (Or xx5f0 xx5f1) xx5f9) (Or xx5f0 (Or xx5f1 xx5f9))) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))))) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 True))) True) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))))) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))))) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 1)) False) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq (Eq xx5f17 xx5f8) (Eq xx5f8 xx5f17)) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))))) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or (Or xx5f4 xx5f5) xx5f9) (And (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7)))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (binrel% LE.le xx5f8 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (Not False) True) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))))) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))))) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or False (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)) True) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)) True) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And False (And xx5f15 (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10)))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or False (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or False (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 False))) (Or (Not xx5f0) (Or xx5f1 xx5f9))) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq (Eq xx5f16 xx5f5) (Eq xx5f5 xx5f16)) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 True))) True) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq (Eq xx5f10 xx5f7) (Eq xx5f7 xx5f10)) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 6)) False) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))))) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))))) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) True) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))))) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16))))) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq (Eq xx5f12 xx5f1) (Eq xx5f1 xx5f12)) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) xx5f8) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq (Eq xx5f19 xx5f6) (Eq xx5f6 xx5f19)) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq (binrel% LE.le xx5f8 (Rat.ofInt 6)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And False (And (Not xx5f15) (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10)))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq (Not (Not (binrel% GE.ge xx5f8 (Int.ofNat 0)))) (binrel% GE.ge xx5f8 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r55 : (Eq (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))))) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And True (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 2)) False) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And True (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or (Or xx5f0 xx5f1) xx5f9) (And (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))) (And (Or (Or xx5f0 (Not xx5f1)) xx5f9) (And (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 6)) (And xx5f15 (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (Eq xx5f14 xx5f3)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f15) (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq (Eq xx5f18 xx5f2) (Eq xx5f2 xx5f18)) => -- THEORY_REWRITE_BOOL
fun lean_r68 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 False))) (Or (Not xx5f4) (Or xx5f5 xx5f9))) => -- THEORY_REWRITE_BOOL
fun lean_r71 : (Eq (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq (Eq xx5f15 xx5f4) (Eq xx5f4 xx5f15)) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))))) => -- THEORY_REWRITE_BOOL
fun lean_r74 : (Eq (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))) => -- THEORY_REWRITE_BOOL
fun lean_r75 : (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 False))) (Or xx5f4 (Or (Not xx5f5) xx5f9))) => -- THEORY_REWRITE_BOOL
fun lean_r76 : (Eq (Eq xx5f14 xx5f3) (Eq xx5f3 xx5f14)) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq (Or (Or xx5f4 xx5f5) xx5f9) (Or xx5f4 (Or xx5f5 xx5f9))) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq (Eq xx5f11 xx5f0) (Eq xx5f0 xx5f11)) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 True))) True) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq (binrel% LE.le xx5f8 (Rat.ofInt 3)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))) (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))))) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And True (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq (Or (Or xx5f0 (Not xx5f1)) xx5f9) (Or xx5f0 (Or (Not xx5f1) xx5f9))) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq (binrel% LE.le xx5f8 (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_a85 : (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (binrel% GE.ge xx5f20 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not xx5f2)) (Not xx5f3)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f6)) (Not xx5f7)) (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0)))) (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))))) => by
have lean_s0 : (Eq And And) := by timed rfl
let lean_s1 := by timed congr lean_s0 lean_r1
let lean_s2 := by timed congr lean_s0 lean_r2
have lean_s3 : (Eq (Not xx5f0) (Not xx5f0)) := by timed rfl
let lean_s4 := by timed congr lean_s0 lean_s3
have lean_s5 : (Eq (Not xx5f1) (Not xx5f1)) := by timed rfl
let lean_s6 := by timed congr lean_s0 lean_s5
have lean_s7 : (Eq (Not xx5f2) (Not xx5f2)) := by timed rfl
let lean_s8 := by timed congr lean_s0 lean_s7
have lean_s9 : (Eq (Not xx5f3) (Not xx5f3)) := by timed rfl
let lean_s10 := by timed congr lean_s0 lean_s9
have lean_s11 : (Eq (Not xx5f4) (Not xx5f4)) := by timed rfl
let lean_s12 := by timed congr lean_s0 lean_s11
have lean_s13 : (Eq (Not xx5f5) (Not xx5f5)) := by timed rfl
let lean_s14 := by timed congr lean_s0 lean_s13
have lean_s15 : (Eq (Not xx5f6) (Not xx5f6)) := by timed rfl
let lean_s16 := by timed congr lean_s0 lean_s15
have lean_s17 : (Eq (Not xx5f7) (Not xx5f7)) := by timed rfl
let lean_s18 := by timed congr lean_s0 lean_s17
have lean_s19 : (Eq (Not (binrel% GE.ge xx5f8 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f8 (Int.ofNat 0)))) := by timed flipCongrArg lean_r4 [Not]
have lean_s20 : (Eq (binrel% LT.lt xx5f8 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f8 (Int.ofNat 0)))) := by timed Eq.trans lean_r3 lean_s19
have lean_s21 : (Eq (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f8 (Int.ofNat 0))))) := by timed flipCongrArg lean_s20 [Not]
have lean_s22 : (Eq (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0))) (binrel% GE.ge xx5f8 (Int.ofNat 0))) := by timed Eq.trans lean_s21 lean_r54
let lean_s23 := by timed congr lean_s0 lean_s22
have lean_s24 : (Eq (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed rfl
let lean_s25 := by timed congr lean_s0 lean_s24
have lean_s26 : (Eq Or Or) := by timed rfl
have lean_s27 : (Eq And And) := by timed rfl
have lean_s28 : (Eq (Eq xx5f21 (Rat.ofInt 0)) (Eq xx5f21 (Rat.ofInt 0))) := by timed rfl
let lean_s29 := by timed congr lean_s27 lean_s28
let lean_s30 := by timed congr lean_s27 lean_s3
let lean_s31 := by timed congr lean_s27 lean_s5
have lean_s32 : (Eq (Not xx5f9) (Not xx5f9)) := by timed rfl
let lean_s33 := by timed congr lean_s27 lean_s32
let lean_s34 := by timed congr lean_s27 lean_r78
let lean_s35 := by timed congr lean_s27 lean_r45
let lean_s36 := by timed congr lean_s27 lean_r67
have lean_s37 : (Eq (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f13 (Rat.ofInt 0))) := by timed rfl
let lean_s38 := by timed congr lean_s27 lean_s37
let lean_s39 := by timed congr lean_s38 lean_r76
let lean_s40 := by timed congr lean_s36 lean_s39
let lean_s41 := by timed congr lean_s35 lean_s40
let lean_s42 := by timed congr lean_s34 lean_s41
let lean_s43 := by timed congr lean_s33 lean_s42
let lean_s44 := by timed congr lean_s31 lean_s43
let lean_s45 := by timed congr lean_s30 lean_s44
have lean_s46 : (Eq (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3))))))))) (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by timed congr lean_s29 lean_s45
have lean_s47 : (Eq (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by timed Eq.trans lean_r6 lean_s46
let lean_s48 := by timed congr lean_s26 lean_s47
have lean_s49 : (Eq And And) := by timed rfl
have lean_s50 : (Eq (Eq xx5f21 (Rat.ofInt 1)) (Eq xx5f21 (Rat.ofInt 1))) := by timed rfl
let lean_s51 := by timed congr lean_s49 lean_s50
let lean_s52 := by timed congr lean_s49 lean_s3
let lean_s53 := by timed congr lean_s49 lean_s5
let lean_s54 := by timed congr lean_s49 lean_s32
have lean_s55 : (Eq xx5f11 xx5f11) := by timed rfl
let lean_s56 := by timed congr lean_s49 lean_s55
have lean_s57 : (Eq (Not xx5f12) (Not xx5f12)) := by timed rfl
let lean_s58 := by timed congr lean_s49 lean_s57
let lean_s59 := by timed congr lean_s49 lean_s37
let lean_s60 := by timed congr lean_s49 lean_r67
let lean_s61 := by timed congr lean_s60 lean_r76
let lean_s62 := by timed congr lean_s59 lean_s61
let lean_s63 := by timed congr lean_s58 lean_s62
let lean_s64 := by timed congr lean_s56 lean_s63
let lean_s65 := by timed congr lean_s54 lean_s64
let lean_s66 := by timed congr lean_s53 lean_s65
let lean_s67 := by timed congr lean_s52 lean_s66
have lean_s68 : (Eq (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (Eq xx5f14 xx5f3))))))))) (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14)))))))))) := by timed congr lean_s51 lean_s67
have lean_s69 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14)))))))))) := by timed Eq.trans lean_r64 lean_s68
let lean_s70 := by timed congr lean_s26 lean_s69
have lean_s71 : (Eq And And) := by timed rfl
have lean_s72 : (Eq (Eq xx5f21 (Rat.ofInt 2)) (Eq xx5f21 (Rat.ofInt 2))) := by timed rfl
let lean_s73 := by timed congr lean_s71 lean_s72
let lean_s74 := by timed congr lean_s71 lean_s3
let lean_s75 := by timed congr lean_s71 lean_s5
have lean_s76 : (Eq xx5f9 xx5f9) := by timed rfl
let lean_s77 := by timed congr lean_s71 lean_s76
let lean_s78 := by timed flipCongrArg lean_r47 [LE.le]
have lean_s79 : (Eq (Rat.ofInt 1) (Rat.ofInt 1)) := by timed rfl
have lean_s80 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (binrel% LE.le xx5f8 (Rat.ofInt 1))) := by timed congr lean_s78 lean_s79
have lean_s81 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))) := by timed Eq.trans lean_s80 lean_r24
let lean_s82 := by timed congr lean_s71 lean_s81
have lean_s83 : (Eq xx5f13 xx5f13) := by timed rfl
let lean_s84 := by timed flipCongrArg lean_s83 [Eq]
have lean_s85 : (Eq (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (Eq xx5f13 xx5f8)) := by timed congr lean_s84 lean_r47
have lean_s86 : (Eq (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (Eq xx5f8 xx5f13)) := by timed Eq.trans lean_s85 lean_r11
let lean_s87 := by timed congr lean_s71 lean_s86
let lean_s88 := by timed congr lean_s71 lean_r67
let lean_s89 := by timed congr lean_s71 lean_r78
let lean_s90 := by timed congr lean_s71 lean_r45
let lean_s91 := by timed congr lean_s90 lean_r76
let lean_s92 := by timed congr lean_s89 lean_s91
let lean_s93 := by timed congr lean_s88 lean_s92
let lean_s94 := by timed congr lean_s87 lean_s93
let lean_s95 := by timed congr lean_s82 lean_s94
let lean_s96 := by timed congr lean_s77 lean_s95
let lean_s97 := by timed congr lean_s75 lean_s96
let lean_s98 := by timed congr lean_s74 lean_s97
have lean_s99 : (Eq (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3)))))))))) (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by timed congr lean_s73 lean_s98
have lean_s100 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by timed Eq.trans lean_r7 lean_s99
let lean_s101 := by timed congr lean_s26 lean_s100
have lean_s102 : (Eq And And) := by timed rfl
have lean_s103 : (Eq (Eq xx5f21 (Rat.ofInt 3)) (Eq xx5f21 (Rat.ofInt 3))) := by timed rfl
let lean_s104 := by timed congr lean_s102 lean_s103
have lean_s105 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s106 := by timed congr lean_s102 lean_s105
let lean_s107 := by timed congr lean_s102 lean_s5
let lean_s108 := by timed congr lean_s102 lean_s32
let lean_s109 := by timed congr lean_s102 lean_r58
have lean_s110 : (Eq (Not xx5f11) (Not xx5f11)) := by timed rfl
let lean_s111 := by timed congr lean_s102 lean_s110
have lean_s112 : (Eq xx5f12 xx5f12) := by timed rfl
let lean_s113 := by timed congr lean_s102 lean_s112
let lean_s114 := by timed congr lean_s102 lean_s37
let lean_s115 := by timed congr lean_s102 lean_r67
let lean_s116 := by timed congr lean_s115 lean_r76
let lean_s117 := by timed congr lean_s114 lean_s116
let lean_s118 := by timed congr lean_s113 lean_s117
let lean_s119 := by timed congr lean_s111 lean_s118
let lean_s120 := by timed congr lean_s109 lean_s119
let lean_s121 := by timed congr lean_s108 lean_s120
let lean_s122 := by timed congr lean_s107 lean_s121
let lean_s123 := by timed congr lean_s106 lean_s122
have lean_s124 : (Eq (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 2)) (And (Not xx5f11) (And xx5f12 (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (Eq xx5f14 xx5f3)))))))))) (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And False (And (Not xx5f11) (And xx5f12 (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))))) := by timed congr lean_s104 lean_s123
have lean_s125 : (Eq (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 2)) (And (Not xx5f11) (And xx5f12 (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (Eq xx5f14 xx5f3)))))))))) False) := by timed Eq.trans lean_s124 lean_r9
have lean_s126 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) False) := by timed Eq.trans lean_r8 lean_s125
let lean_s127 := by timed congr lean_s26 lean_s126
have lean_s128 : (Eq And And) := by timed rfl
have lean_s129 : (Eq (Eq xx5f21 (Rat.ofInt 4)) (Eq xx5f21 (Rat.ofInt 4))) := by timed rfl
let lean_s130 := by timed congr lean_s128 lean_s129
let lean_s131 := by timed congr lean_s128 lean_s105
let lean_s132 := by timed congr lean_s128 lean_s5
let lean_s133 := by timed congr lean_s128 lean_s32
let lean_s134 := by timed congr lean_s128 lean_r31
let lean_s135 := by timed congr lean_s128 lean_r78
let lean_s136 := by timed congr lean_s128 lean_r45
let lean_s137 := by timed congr lean_s128 lean_r67
let lean_s138 := by timed congr lean_s128 lean_s37
let lean_s139 := by timed congr lean_s138 lean_r76
let lean_s140 := by timed congr lean_s137 lean_s139
let lean_s141 := by timed congr lean_s136 lean_s140
let lean_s142 := by timed congr lean_s135 lean_s141
let lean_s143 := by timed congr lean_s134 lean_s142
let lean_s144 := by timed congr lean_s133 lean_s143
let lean_s145 := by timed congr lean_s132 lean_s144
let lean_s146 := by timed congr lean_s131 lean_s145
have lean_s147 : (Eq (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3)))))))))) (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And True (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))))) := by timed congr lean_s130 lean_s146
have lean_s148 : (Eq (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3)))))))))) (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by timed Eq.trans lean_s147 lean_r82
have lean_s149 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by timed Eq.trans lean_r10 lean_s148
let lean_s150 := by timed congr lean_s26 lean_s149
have lean_s151 : (Eq And And) := by timed rfl
have lean_s152 : (Eq (Eq xx5f21 (Rat.ofInt 5)) (Eq xx5f21 (Rat.ofInt 5))) := by timed rfl
let lean_s153 := by timed congr lean_s151 lean_s152
let lean_s154 := by timed congr lean_s151 lean_s105
let lean_s155 := by timed congr lean_s151 lean_s5
let lean_s156 := by timed congr lean_s151 lean_s76
let lean_s157 := by timed flipCongrArg lean_r47 [LE.le]
have lean_s158 : (Eq (Rat.ofInt 2) (Rat.ofInt 2)) := by timed rfl
have lean_s159 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)) (binrel% LE.le xx5f8 (Rat.ofInt 2))) := by timed congr lean_s157 lean_s158
have lean_s160 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2)))) := by timed Eq.trans lean_s159 lean_r84
let lean_s161 := by timed congr lean_s151 lean_s160
let lean_s162 := by timed congr lean_s151 lean_s86
let lean_s163 := by timed congr lean_s151 lean_r67
let lean_s164 := by timed congr lean_s151 lean_r78
let lean_s165 := by timed congr lean_s151 lean_r45
let lean_s166 := by timed congr lean_s165 lean_r76
let lean_s167 := by timed congr lean_s164 lean_s166
let lean_s168 := by timed congr lean_s163 lean_s167
let lean_s169 := by timed congr lean_s162 lean_s168
let lean_s170 := by timed congr lean_s161 lean_s169
let lean_s171 := by timed congr lean_s156 lean_s170
let lean_s172 := by timed congr lean_s155 lean_s171
let lean_s173 := by timed congr lean_s154 lean_s172
have lean_s174 : (Eq (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3)))))))))) (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by timed congr lean_s153 lean_s173
have lean_s175 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by timed Eq.trans lean_r65 lean_s174
let lean_s176 := by timed congr lean_s26 lean_s175
have lean_s177 : (Eq And And) := by timed rfl
have lean_s178 : (Eq (Eq xx5f21 (Rat.ofInt 6)) (Eq xx5f21 (Rat.ofInt 6))) := by timed rfl
let lean_s179 := by timed congr lean_s177 lean_s178
let lean_s180 := by timed congr lean_s177 lean_s3
have lean_s181 : (Eq xx5f1 xx5f1) := by timed rfl
let lean_s182 := by timed congr lean_s177 lean_s181
let lean_s183 := by timed congr lean_s177 lean_s32
let lean_s184 := by timed congr lean_s177 lean_s55
let lean_s185 := by timed congr lean_s177 lean_s112
let lean_s186 := by timed congr lean_s177 lean_r67
let lean_s187 := by timed congr lean_s177 lean_s37
let lean_s188 := by timed congr lean_s187 lean_r76
let lean_s189 := by timed congr lean_s186 lean_s188
let lean_s190 := by timed congr lean_s185 lean_s189
let lean_s191 := by timed congr lean_s184 lean_s190
let lean_s192 := by timed congr lean_s183 lean_s191
let lean_s193 := by timed congr lean_s182 lean_s192
let lean_s194 := by timed congr lean_s180 lean_s193
have lean_s195 : (Eq (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3))))))))) (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by timed congr lean_s179 lean_s194
have lean_s196 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by timed Eq.trans lean_r14 lean_s195
let lean_s197 := by timed congr lean_s26 lean_s196
have lean_s198 : (Eq And And) := by timed rfl
have lean_s199 : (Eq (Eq xx5f21 (Rat.ofInt 7)) (Eq xx5f21 (Rat.ofInt 7))) := by timed rfl
let lean_s200 := by timed congr lean_s198 lean_s199
let lean_s201 := by timed congr lean_s198 lean_s3
let lean_s202 := by timed congr lean_s198 lean_s181
let lean_s203 := by timed congr lean_s198 lean_s76
let lean_s204 := by timed flipCongrArg lean_r47 [LE.le]
have lean_s205 : (Eq (Rat.ofInt 3) (Rat.ofInt 3)) := by timed rfl
have lean_s206 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)) (binrel% LE.le xx5f8 (Rat.ofInt 3))) := by timed congr lean_s204 lean_s205
have lean_s207 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3)))) := by timed Eq.trans lean_s206 lean_r80
let lean_s208 := by timed congr lean_s198 lean_s207
let lean_s209 := by timed congr lean_s198 lean_s86
let lean_s210 := by timed congr lean_s198 lean_r67
let lean_s211 := by timed congr lean_s198 lean_r78
let lean_s212 := by timed congr lean_s198 lean_r45
let lean_s213 := by timed congr lean_s212 lean_r76
let lean_s214 := by timed congr lean_s211 lean_s213
let lean_s215 := by timed congr lean_s210 lean_s214
let lean_s216 := by timed congr lean_s209 lean_s215
let lean_s217 := by timed congr lean_s208 lean_s216
let lean_s218 := by timed congr lean_s203 lean_s217
let lean_s219 := by timed congr lean_s202 lean_s218
let lean_s220 := by timed congr lean_s201 lean_s219
have lean_s221 : (Eq (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)) (And (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3)))))))))) (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by timed congr lean_s200 lean_s220
have lean_s222 : (Eq (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by timed Eq.trans lean_r20 lean_s221
let lean_s223 := by timed congr lean_s26 lean_s222
have lean_s224 : (Eq And And) := by timed rfl
have lean_s225 : (Eq (Eq xx5f21 (Rat.ofInt 8)) (Eq xx5f21 (Rat.ofInt 8))) := by timed rfl
let lean_s226 := by timed congr lean_s224 lean_s225
let lean_s227 := by timed congr lean_s224 lean_s105
let lean_s228 := by timed congr lean_s224 lean_s181
let lean_s229 := by timed congr lean_s224 lean_r78
let lean_s230 := by timed congr lean_s224 lean_r45
let lean_s231 := by timed congr lean_s224 lean_r67
let lean_s232 := by timed congr lean_s224 lean_s37
let lean_s233 := by timed congr lean_s232 lean_r76
let lean_s234 := by timed congr lean_s231 lean_s233
let lean_s235 := by timed congr lean_s230 lean_s234
let lean_s236 := by timed congr lean_s229 lean_s235
let lean_s237 := by timed congr lean_s228 lean_s236
let lean_s238 := by timed congr lean_s227 lean_s237
have lean_s239 : (Eq (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (And (Eq xx5f18 xx5f2) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f14 xx5f3)))))))) (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) := by timed congr lean_s226 lean_s238
have lean_s240 : (Eq (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) := by timed Eq.trans lean_r12 lean_s239
let lean_s241 := by timed congr lean_s26 lean_s240
have lean_s242 : (Eq And And) := by timed rfl
have lean_s243 : (Eq (Eq xx5f21 (Rat.ofInt 9)) (Eq xx5f21 (Rat.ofInt 9))) := by timed rfl
let lean_s244 := by timed congr lean_s242 lean_s243
let lean_s245 := by timed congr lean_s242 lean_r13
have lean_s246 : (Eq Or Or) := by timed rfl
let lean_s247 := by timed congr lean_s246 lean_s105
let lean_s248 := by timed congr lean_s246 lean_s181
let lean_s249 := by timed congr lean_s246 lean_s32
have lean_s250 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))) := by timed flipCongrArg lean_s81 [Not]
let lean_s251 := by timed congr lean_s249 lean_s250
let lean_s252 := by timed congr lean_s248 lean_s251
have lean_s253 : (Eq (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))))) (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))))))) := by timed congr lean_s247 lean_s252
have lean_s254 : (Eq (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))))))) := by timed Eq.trans lean_r15 lean_s253
let lean_s255 := by timed congr lean_s242 lean_s254
have lean_s256 : (Eq Or Or) := by timed rfl
let lean_s257 := by timed congr lean_s256 lean_s3
let lean_s258 := by timed congr lean_s256 lean_s181
let lean_s259 := by timed congr lean_s256 lean_s76
have lean_s260 : (Eq (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not False)) := by timed flipCongrArg lean_r58 [Not]
have lean_s261 : (Eq (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))) True) := by timed Eq.trans lean_s260 lean_r25
let lean_s262 := by timed congr lean_s259 lean_s261
let lean_s263 := by timed congr lean_s258 lean_s262
have lean_s264 : (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))))) (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 True)))) := by timed congr lean_s257 lean_s263
have lean_s265 : (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))))) True) := by timed Eq.trans lean_s264 lean_r16
have lean_s266 : (Eq (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))) True) := by timed Eq.trans lean_r39 lean_s265
let lean_s267 := by timed congr lean_s242 lean_s266
have lean_s268 : (Eq Or Or) := by timed rfl
let lean_s269 := by timed congr lean_s268 lean_s3
let lean_s270 := by timed congr lean_s268 lean_s181
let lean_s271 := by timed congr lean_s268 lean_s76
have lean_s272 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (Not True)) := by timed flipCongrArg lean_r31 [Not]
have lean_s273 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) False) := by timed Eq.trans lean_s272 lean_r53
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s270 lean_s274
have lean_s276 : (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))))) (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 False)))) := by timed congr lean_s269 lean_s275
have lean_s277 : (Eq (Or (Not xx5f0) (Or xx5f1 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))))) (Or (Not xx5f0) (Or xx5f1 xx5f9))) := by timed Eq.trans lean_s276 lean_r34
have lean_s278 : (Eq (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 xx5f9))) := by timed Eq.trans lean_r17 lean_s277
let lean_s279 := by timed congr lean_s242 lean_s278
have lean_s280 : (Eq Or Or) := by timed rfl
let lean_s281 := by timed congr lean_s280 lean_s3
let lean_s282 := by timed congr lean_s280 lean_s181
let lean_s283 := by timed congr lean_s280 lean_s32
have lean_s284 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))) := by timed flipCongrArg lean_s160 [Not]
let lean_s285 := by timed congr lean_s283 lean_s284
let lean_s286 := by timed congr lean_s282 lean_s285
have lean_s287 : (Eq (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))))) (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2)))))))) := by timed congr lean_s281 lean_s286
have lean_s288 : (Eq (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))) (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2)))))))) := by timed Eq.trans lean_r73 lean_s287
let lean_s289 := by timed congr lean_s242 lean_s288
let lean_s290 := by timed congr lean_s242 lean_r83
have lean_s291 : (Eq Or Or) := by timed rfl
let lean_s292 := by timed congr lean_s291 lean_s105
let lean_s293 := by timed congr lean_s291 lean_s5
let lean_s294 := by timed congr lean_s291 lean_s32
have lean_s295 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))) := by timed flipCongrArg lean_s207 [Not]
let lean_s296 := by timed congr lean_s294 lean_s295
let lean_s297 := by timed congr lean_s293 lean_s296
have lean_s298 : (Eq (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))))) (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3)))))))) := by timed congr lean_s292 lean_s297
have lean_s299 : (Eq (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))) (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3)))))))) := by timed Eq.trans lean_r81 lean_s298
let lean_s300 := by timed congr lean_s242 lean_s299
have lean_s301 : (Eq (Or (Not xx5f0) (Not xx5f1)) (Or (Not xx5f0) (Not xx5f1))) := by timed rfl
let lean_s302 := by timed congr lean_s242 lean_s301
let lean_s303 := by timed congr lean_s242 lean_s37
let lean_s304 := by timed congr lean_s242 lean_r67
let lean_s305 := by timed congr lean_s242 lean_r78
let lean_s306 := by timed congr lean_s242 lean_r45
let lean_s307 := by timed congr lean_s306 lean_r76
let lean_s308 := by timed congr lean_s305 lean_s307
let lean_s309 := by timed congr lean_s304 lean_s308
let lean_s310 := by timed congr lean_s303 lean_s309
let lean_s311 := by timed congr lean_s302 lean_s310
let lean_s312 := by timed congr lean_s300 lean_s311
let lean_s313 := by timed congr lean_s290 lean_s312
let lean_s314 := by timed congr lean_s289 lean_s313
let lean_s315 := by timed congr lean_s279 lean_s314
let lean_s316 := by timed congr lean_s267 lean_s315
let lean_s317 := by timed congr lean_s255 lean_s316
let lean_s318 := by timed congr lean_s245 lean_s317
have lean_s319 : (Eq (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or (Or xx5f0 xx5f1) xx5f9) (And (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))) (And (Or (Or xx5f0 (Not xx5f1)) xx5f9) (And (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3)))))))))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))) := by timed congr lean_s244 lean_s318
have lean_s320 : (Eq (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or (Or xx5f0 xx5f1) xx5f9) (And (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2)))) (And (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2)))) (And (Or (Or xx5f0 (Not xx5f1)) xx5f9) (And (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3)))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f18 xx5f2) (And (Eq xx5f11 xx5f0) (And (Eq xx5f12 xx5f1) (Eq xx5f14 xx5f3)))))))))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) := by timed Eq.trans lean_s319 lean_r46
have lean_s321 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) := by timed Eq.trans lean_r60 lean_s320
let lean_s322 := by timed congr lean_s241 lean_s321
let lean_s323 := by timed congr lean_s223 lean_s322
let lean_s324 := by timed congr lean_s197 lean_s323
let lean_s325 := by timed congr lean_s176 lean_s324
let lean_s326 := by timed congr lean_s150 lean_s325
let lean_s327 := by timed congr lean_s127 lean_s326
let lean_s328 := by timed congr lean_s101 lean_s327
let lean_s329 := by timed congr lean_s70 lean_s328
have lean_s330 : (Eq (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or False (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))))) := by timed congr lean_s48 lean_s329
have lean_s331 : (Eq (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)) (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) := by timed Eq.trans lean_s330 lean_r28
have lean_s332 : (Eq (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) := by timed Eq.trans lean_r5 lean_s331
let lean_s333 := by timed congr lean_s0 lean_s332
have lean_s334 : (Eq Or Or) := by timed rfl
have lean_s335 : (Eq And And) := by timed rfl
have lean_s336 : (Eq (Eq xx5f22 (Rat.ofInt 0)) (Eq xx5f22 (Rat.ofInt 0))) := by timed rfl
let lean_s337 := by timed congr lean_s335 lean_s336
let lean_s338 := by timed congr lean_s335 lean_s11
let lean_s339 := by timed congr lean_s335 lean_s13
let lean_s340 := by timed congr lean_s335 lean_s32
have lean_s341 : (Eq xx5f15 xx5f15) := by timed rfl
let lean_s342 := by timed congr lean_s335 lean_s341
have lean_s343 : (Eq (Not xx5f16) (Not xx5f16)) := by timed rfl
let lean_s344 := by timed congr lean_s335 lean_s343
have lean_s345 : (Eq (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f17 (Rat.ofInt 0))) := by timed rfl
let lean_s346 := by timed congr lean_s335 lean_s345
let lean_s347 := by timed congr lean_s335 lean_r49
let lean_s348 := by timed congr lean_s347 lean_r37
let lean_s349 := by timed congr lean_s346 lean_s348
let lean_s350 := by timed congr lean_s344 lean_s349
let lean_s351 := by timed congr lean_s342 lean_s350
let lean_s352 := by timed congr lean_s340 lean_s351
let lean_s353 := by timed congr lean_s339 lean_s352
let lean_s354 := by timed congr lean_s338 lean_s353
have lean_s355 : (Eq (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7))))))))) (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10)))))))))) := by timed congr lean_s337 lean_s354
have lean_s356 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10)))))))))) := by timed Eq.trans lean_r68 lean_s355
let lean_s357 := by timed congr lean_s334 lean_s356
have lean_s358 : (Eq And And) := by timed rfl
have lean_s359 : (Eq (Eq xx5f22 (Rat.ofInt 1)) (Eq xx5f22 (Rat.ofInt 1))) := by timed rfl
let lean_s360 := by timed congr lean_s358 lean_s359
let lean_s361 := by timed congr lean_s358 lean_s11
let lean_s362 := by timed congr lean_s358 lean_s13
let lean_s363 := by timed congr lean_s358 lean_s32
let lean_s364 := by timed congr lean_s358 lean_r72
let lean_s365 := by timed congr lean_s358 lean_r35
let lean_s366 := by timed congr lean_s358 lean_r49
let lean_s367 := by timed congr lean_s358 lean_s345
let lean_s368 := by timed congr lean_s367 lean_r37
let lean_s369 := by timed congr lean_s366 lean_s368
let lean_s370 := by timed congr lean_s365 lean_s369
let lean_s371 := by timed congr lean_s364 lean_s370
let lean_s372 := by timed congr lean_s363 lean_s371
let lean_s373 := by timed congr lean_s362 lean_s372
let lean_s374 := by timed congr lean_s361 lean_s373
have lean_s375 : (Eq (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7))))))))) (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) := by timed congr lean_s360 lean_s374
have lean_s376 : (Eq (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) := by timed Eq.trans lean_r62 lean_s375
let lean_s377 := by timed congr lean_s334 lean_s376
have lean_s378 : (Eq And And) := by timed rfl
have lean_s379 : (Eq (Eq xx5f22 (Rat.ofInt 2)) (Eq xx5f22 (Rat.ofInt 2))) := by timed rfl
let lean_s380 := by timed congr lean_s378 lean_s379
let lean_s381 := by timed congr lean_s378 lean_s11
let lean_s382 := by timed congr lean_s378 lean_s13
let lean_s383 := by timed congr lean_s378 lean_s76
let lean_s384 := by timed congr lean_s378 lean_s81
have lean_s385 : (Eq xx5f17 xx5f17) := by timed rfl
let lean_s386 := by timed flipCongrArg lean_s385 [Eq]
have lean_s387 : (Eq (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (Eq xx5f17 xx5f8)) := by timed congr lean_s386 lean_r47
have lean_s388 : (Eq (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (Eq xx5f8 xx5f17)) := by timed Eq.trans lean_s387 lean_r21
let lean_s389 := by timed congr lean_s378 lean_s388
let lean_s390 := by timed congr lean_s378 lean_r49
let lean_s391 := by timed congr lean_s378 lean_r72
let lean_s392 := by timed congr lean_s378 lean_r35
let lean_s393 := by timed congr lean_s392 lean_r37
let lean_s394 := by timed congr lean_s391 lean_s393
let lean_s395 := by timed congr lean_s390 lean_s394
let lean_s396 := by timed congr lean_s389 lean_s395
let lean_s397 := by timed congr lean_s384 lean_s396
let lean_s398 := by timed congr lean_s383 lean_s397
let lean_s399 := by timed congr lean_s382 lean_s398
let lean_s400 := by timed congr lean_s381 lean_s399
have lean_s401 : (Eq (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))) := by timed congr lean_s380 lean_s400
have lean_s402 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))) := by timed Eq.trans lean_r50 lean_s401
let lean_s403 := by timed congr lean_s334 lean_s402
have lean_s404 : (Eq And And) := by timed rfl
have lean_s405 : (Eq (Eq xx5f22 (Rat.ofInt 3)) (Eq xx5f22 (Rat.ofInt 3))) := by timed rfl
let lean_s406 := by timed congr lean_s404 lean_s405
have lean_s407 : (Eq xx5f4 xx5f4) := by timed rfl
let lean_s408 := by timed congr lean_s404 lean_s407
let lean_s409 := by timed congr lean_s404 lean_s13
let lean_s410 := by timed congr lean_s404 lean_s32
let lean_s411 := by timed congr lean_s404 lean_r19
have lean_s412 : (Eq (Not xx5f15) (Not xx5f15)) := by timed rfl
let lean_s413 := by timed congr lean_s404 lean_s412
have lean_s414 : (Eq xx5f16 xx5f16) := by timed rfl
let lean_s415 := by timed congr lean_s404 lean_s414
let lean_s416 := by timed congr lean_s404 lean_s345
let lean_s417 := by timed congr lean_s404 lean_r49
let lean_s418 := by timed congr lean_s417 lean_r37
let lean_s419 := by timed congr lean_s416 lean_s418
let lean_s420 := by timed congr lean_s415 lean_s419
let lean_s421 := by timed congr lean_s413 lean_s420
let lean_s422 := by timed congr lean_s411 lean_s421
let lean_s423 := by timed congr lean_s410 lean_s422
let lean_s424 := by timed congr lean_s409 lean_s423
let lean_s425 := by timed congr lean_s408 lean_s424
have lean_s426 : (Eq (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f15) (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And False (And (Not xx5f15) (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))))) := by timed congr lean_s406 lean_s425
have lean_s427 : (Eq (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 1)) (And (Not xx5f15) (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7)))))))))) False) := by timed Eq.trans lean_s426 lean_r52
have lean_s428 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) False) := by timed Eq.trans lean_r66 lean_s427
let lean_s429 := by timed congr lean_s334 lean_s428
have lean_s430 : (Eq And And) := by timed rfl
have lean_s431 : (Eq (Eq xx5f22 (Rat.ofInt 4)) (Eq xx5f22 (Rat.ofInt 4))) := by timed rfl
let lean_s432 := by timed congr lean_s430 lean_s431
let lean_s433 := by timed congr lean_s430 lean_s407
let lean_s434 := by timed congr lean_s430 lean_s13
let lean_s435 := by timed congr lean_s430 lean_s32
let lean_s436 := by timed congr lean_s430 lean_r41
let lean_s437 := by timed congr lean_s430 lean_r72
let lean_s438 := by timed congr lean_s430 lean_r35
let lean_s439 := by timed congr lean_s430 lean_r49
let lean_s440 := by timed congr lean_s430 lean_s345
let lean_s441 := by timed congr lean_s440 lean_r37
let lean_s442 := by timed congr lean_s439 lean_s441
let lean_s443 := by timed congr lean_s438 lean_s442
let lean_s444 := by timed congr lean_s437 lean_s443
let lean_s445 := by timed congr lean_s436 lean_s444
let lean_s446 := by timed congr lean_s435 lean_s445
let lean_s447 := by timed congr lean_s434 lean_s446
let lean_s448 := by timed congr lean_s433 lean_s447
have lean_s449 : (Eq (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And True (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))))) := by timed congr lean_s432 lean_s448
have lean_s450 : (Eq (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) := by timed Eq.trans lean_s449 lean_r57
have lean_s451 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) := by timed Eq.trans lean_r30 lean_s450
let lean_s452 := by timed congr lean_s334 lean_s451
have lean_s453 : (Eq And And) := by timed rfl
have lean_s454 : (Eq (Eq xx5f22 (Rat.ofInt 5)) (Eq xx5f22 (Rat.ofInt 5))) := by timed rfl
let lean_s455 := by timed congr lean_s453 lean_s454
let lean_s456 := by timed congr lean_s453 lean_s407
let lean_s457 := by timed congr lean_s453 lean_s13
let lean_s458 := by timed congr lean_s453 lean_s76
let lean_s459 := by timed congr lean_s453 lean_s81
let lean_s460 := by timed congr lean_s453 lean_s388
let lean_s461 := by timed congr lean_s453 lean_r49
let lean_s462 := by timed congr lean_s453 lean_r72
let lean_s463 := by timed congr lean_s453 lean_r35
let lean_s464 := by timed congr lean_s463 lean_r37
let lean_s465 := by timed congr lean_s462 lean_s464
let lean_s466 := by timed congr lean_s461 lean_s465
let lean_s467 := by timed congr lean_s460 lean_s466
let lean_s468 := by timed congr lean_s459 lean_s467
let lean_s469 := by timed congr lean_s458 lean_s468
let lean_s470 := by timed congr lean_s457 lean_s469
let lean_s471 := by timed congr lean_s456 lean_s470
have lean_s472 : (Eq (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))) := by timed congr lean_s455 lean_s471
have lean_s473 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))) := by timed Eq.trans lean_r69 lean_s472
let lean_s474 := by timed congr lean_s334 lean_s473
have lean_s475 : (Eq And And) := by timed rfl
have lean_s476 : (Eq (Eq xx5f22 (Rat.ofInt 6)) (Eq xx5f22 (Rat.ofInt 6))) := by timed rfl
let lean_s477 := by timed congr lean_s475 lean_s476
let lean_s478 := by timed congr lean_s475 lean_s11
have lean_s479 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s480 := by timed congr lean_s475 lean_s479
let lean_s481 := by timed congr lean_s475 lean_s32
let lean_s482 := by timed congr lean_s475 lean_r38
let lean_s483 := by timed congr lean_s475 lean_s341
let lean_s484 := by timed congr lean_s475 lean_s414
let lean_s485 := by timed congr lean_s475 lean_s345
let lean_s486 := by timed congr lean_s475 lean_r49
let lean_s487 := by timed congr lean_s486 lean_r37
let lean_s488 := by timed congr lean_s485 lean_s487
let lean_s489 := by timed congr lean_s484 lean_s488
let lean_s490 := by timed congr lean_s483 lean_s489
let lean_s491 := by timed congr lean_s482 lean_s490
let lean_s492 := by timed congr lean_s481 lean_s491
let lean_s493 := by timed congr lean_s480 lean_s492
let lean_s494 := by timed congr lean_s478 lean_s493
have lean_s495 : (Eq (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 6)) (And xx5f15 (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And False (And xx5f15 (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))))) := by timed congr lean_s477 lean_s494
have lean_s496 : (Eq (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq (Rat.ofInt 0) (Rat.ofInt 6)) (And xx5f15 (And xx5f16 (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (Eq xx5f10 xx5f7)))))))))) False) := by timed Eq.trans lean_s495 lean_r32
have lean_s497 : (Eq (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) False) := by timed Eq.trans lean_r63 lean_s496
let lean_s498 := by timed congr lean_s334 lean_s497
have lean_s499 : (Eq And And) := by timed rfl
have lean_s500 : (Eq (Eq xx5f22 (Rat.ofInt 7)) (Eq xx5f22 (Rat.ofInt 7))) := by timed rfl
let lean_s501 := by timed congr lean_s499 lean_s500
let lean_s502 := by timed congr lean_s499 lean_s11
let lean_s503 := by timed congr lean_s499 lean_s479
let lean_s504 := by timed congr lean_s499 lean_s32
let lean_s505 := by timed congr lean_s499 lean_r29
let lean_s506 := by timed congr lean_s499 lean_r72
let lean_s507 := by timed congr lean_s499 lean_r35
let lean_s508 := by timed congr lean_s499 lean_r49
let lean_s509 := by timed congr lean_s499 lean_s345
let lean_s510 := by timed congr lean_s509 lean_r37
let lean_s511 := by timed congr lean_s508 lean_s510
let lean_s512 := by timed congr lean_s507 lean_s511
let lean_s513 := by timed congr lean_s506 lean_s512
let lean_s514 := by timed congr lean_s505 lean_s513
let lean_s515 := by timed congr lean_s504 lean_s514
let lean_s516 := by timed congr lean_s503 lean_s515
let lean_s517 := by timed congr lean_s502 lean_s516
have lean_s518 : (Eq (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And True (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))))) := by timed congr lean_s501 lean_s517
have lean_s519 : (Eq (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) := by timed Eq.trans lean_s518 lean_r59
have lean_s520 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))))) := by timed Eq.trans lean_r61 lean_s519
let lean_s521 := by timed congr lean_s334 lean_s520
have lean_s522 : (Eq And And) := by timed rfl
have lean_s523 : (Eq (Eq xx5f22 (Rat.ofInt 8)) (Eq xx5f22 (Rat.ofInt 8))) := by timed rfl
let lean_s524 := by timed congr lean_s522 lean_s523
let lean_s525 := by timed congr lean_s522 lean_s11
let lean_s526 := by timed congr lean_s522 lean_s479
let lean_s527 := by timed congr lean_s522 lean_s76
let lean_s528 := by timed flipCongrArg lean_r47 [LE.le]
have lean_s529 : (Eq (Rat.ofInt 6) (Rat.ofInt 6)) := by timed rfl
have lean_s530 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)) (binrel% LE.le xx5f8 (Rat.ofInt 6))) := by timed congr lean_s528 lean_s529
have lean_s531 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6)))) := by timed Eq.trans lean_s530 lean_r51
let lean_s532 := by timed congr lean_s522 lean_s531
let lean_s533 := by timed congr lean_s522 lean_s388
let lean_s534 := by timed congr lean_s522 lean_r49
let lean_s535 := by timed congr lean_s522 lean_r72
let lean_s536 := by timed congr lean_s522 lean_r35
let lean_s537 := by timed congr lean_s536 lean_r37
let lean_s538 := by timed congr lean_s535 lean_s537
let lean_s539 := by timed congr lean_s534 lean_s538
let lean_s540 := by timed congr lean_s533 lean_s539
let lean_s541 := by timed congr lean_s532 lean_s540
let lean_s542 := by timed congr lean_s527 lean_s541
let lean_s543 := by timed congr lean_s526 lean_s542
let lean_s544 := by timed congr lean_s525 lean_s543
have lean_s545 : (Eq (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)) (And (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7)))))))))) (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))) := by timed congr lean_s524 lean_s544
have lean_s546 : (Eq (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))) := by timed Eq.trans lean_r42 lean_s545
let lean_s547 := by timed congr lean_s334 lean_s546
have lean_s548 : (Eq And And) := by timed rfl
have lean_s549 : (Eq (Eq xx5f22 (Rat.ofInt 9)) (Eq xx5f22 (Rat.ofInt 9))) := by timed rfl
let lean_s550 := by timed congr lean_s548 lean_s549
let lean_s551 := by timed congr lean_s548 lean_s407
let lean_s552 := by timed congr lean_s548 lean_s479
let lean_s553 := by timed congr lean_s548 lean_r72
let lean_s554 := by timed congr lean_s548 lean_r35
let lean_s555 := by timed congr lean_s548 lean_r49
let lean_s556 := by timed congr lean_s548 lean_s345
let lean_s557 := by timed congr lean_s556 lean_r37
let lean_s558 := by timed congr lean_s555 lean_s557
let lean_s559 := by timed congr lean_s554 lean_s558
let lean_s560 := by timed congr lean_s553 lean_s559
let lean_s561 := by timed congr lean_s552 lean_s560
let lean_s562 := by timed congr lean_s551 lean_s561
have lean_s563 : (Eq (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (And (Eq xx5f19 xx5f6) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f10 xx5f7)))))))) (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) := by timed congr lean_s550 lean_s562
have lean_s564 : (Eq (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) := by timed Eq.trans lean_r55 lean_s563
let lean_s565 := by timed congr lean_s334 lean_s564
have lean_s566 : (Eq And And) := by timed rfl
have lean_s567 : (Eq (Eq xx5f22 (Rat.ofInt 10)) (Eq xx5f22 (Rat.ofInt 10))) := by timed rfl
let lean_s568 := by timed congr lean_s566 lean_s567
let lean_s569 := by timed congr lean_s566 lean_r77
have lean_s570 : (Eq Or Or) := by timed rfl
let lean_s571 := by timed congr lean_s570 lean_s407
let lean_s572 := by timed congr lean_s570 lean_s479
let lean_s573 := by timed congr lean_s570 lean_s32
let lean_s574 := by timed congr lean_s573 lean_s250
let lean_s575 := by timed congr lean_s572 lean_s574
have lean_s576 : (Eq (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))))) (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))))))) := by timed congr lean_s571 lean_s575
have lean_s577 : (Eq (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))))))) := by timed Eq.trans lean_r43 lean_s576
let lean_s578 := by timed congr lean_s566 lean_s577
have lean_s579 : (Eq Or Or) := by timed rfl
let lean_s580 := by timed congr lean_s579 lean_s11
let lean_s581 := by timed congr lean_s579 lean_s479
let lean_s582 := by timed congr lean_s579 lean_s76
have lean_s583 : (Eq (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not False)) := by timed flipCongrArg lean_r19 [Not]
have lean_s584 : (Eq (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))) True) := by timed Eq.trans lean_s583 lean_r25
let lean_s585 := by timed congr lean_s582 lean_s584
let lean_s586 := by timed congr lean_s581 lean_s585
have lean_s587 : (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))))) (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 True)))) := by timed congr lean_s580 lean_s586
have lean_s588 : (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))))) True) := by timed Eq.trans lean_s587 lean_r36
have lean_s589 : (Eq (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))) True) := by timed Eq.trans lean_r18 lean_s588
let lean_s590 := by timed congr lean_s566 lean_s589
have lean_s591 : (Eq Or Or) := by timed rfl
let lean_s592 := by timed congr lean_s591 lean_s11
let lean_s593 := by timed congr lean_s591 lean_s479
let lean_s594 := by timed congr lean_s591 lean_s76
have lean_s595 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (Not True)) := by timed flipCongrArg lean_r41 [Not]
have lean_s596 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) False) := by timed Eq.trans lean_s595 lean_r53
let lean_s597 := by timed congr lean_s594 lean_s596
let lean_s598 := by timed congr lean_s593 lean_s597
have lean_s599 : (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))))) (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 False)))) := by timed congr lean_s592 lean_s598
have lean_s600 : (Eq (Or (Not xx5f4) (Or xx5f5 (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))))) (Or (Not xx5f4) (Or xx5f5 xx5f9))) := by timed Eq.trans lean_s599 lean_r70
have lean_s601 : (Eq (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 xx5f9))) := by timed Eq.trans lean_r56 lean_s600
let lean_s602 := by timed congr lean_s566 lean_s601
have lean_s603 : (Eq Or Or) := by timed rfl
let lean_s604 := by timed congr lean_s603 lean_s11
let lean_s605 := by timed congr lean_s603 lean_s479
let lean_s606 := by timed congr lean_s603 lean_s32
let lean_s607 := by timed congr lean_s606 lean_s250
let lean_s608 := by timed congr lean_s605 lean_s607
have lean_s609 : (Eq (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))))) (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))))))) := by timed congr lean_s604 lean_s608
have lean_s610 : (Eq (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1)))))))) := by timed Eq.trans lean_r22 lean_s609
let lean_s611 := by timed congr lean_s566 lean_s610
have lean_s612 : (Eq Or Or) := by timed rfl
let lean_s613 := by timed congr lean_s612 lean_s407
let lean_s614 := by timed congr lean_s612 lean_s13
let lean_s615 := by timed congr lean_s612 lean_s76
have lean_s616 : (Eq (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))) (Not False)) := by timed flipCongrArg lean_r38 [Not]
have lean_s617 : (Eq (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))) True) := by timed Eq.trans lean_s616 lean_r25
let lean_s618 := by timed congr lean_s615 lean_s617
let lean_s619 := by timed congr lean_s614 lean_s618
have lean_s620 : (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))))) (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 True)))) := by timed congr lean_s613 lean_s619
have lean_s621 : (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))))) True) := by timed Eq.trans lean_s620 lean_r79
have lean_s622 : (Eq (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))) True) := by timed Eq.trans lean_r26 lean_s621
let lean_s623 := by timed congr lean_s566 lean_s622
have lean_s624 : (Eq Or Or) := by timed rfl
let lean_s625 := by timed congr lean_s624 lean_s407
let lean_s626 := by timed congr lean_s624 lean_s13
let lean_s627 := by timed congr lean_s624 lean_s76
have lean_s628 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (Not True)) := by timed flipCongrArg lean_r29 [Not]
have lean_s629 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) False) := by timed Eq.trans lean_s628 lean_r53
let lean_s630 := by timed congr lean_s627 lean_s629
let lean_s631 := by timed congr lean_s626 lean_s630
have lean_s632 : (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))))) (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 False)))) := by timed congr lean_s625 lean_s631
have lean_s633 : (Eq (Or xx5f4 (Or (Not xx5f5) (Or xx5f9 (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))))) (Or xx5f4 (Or (Not xx5f5) xx5f9))) := by timed Eq.trans lean_s632 lean_r75
have lean_s634 : (Eq (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) xx5f9))) := by timed Eq.trans lean_r27 lean_s633
let lean_s635 := by timed congr lean_s566 lean_s634
have lean_s636 : (Eq Or Or) := by timed rfl
let lean_s637 := by timed congr lean_s636 lean_s407
let lean_s638 := by timed congr lean_s636 lean_s13
let lean_s639 := by timed congr lean_s636 lean_s32
have lean_s640 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))) := by timed flipCongrArg lean_s531 [Not]
let lean_s641 := by timed congr lean_s639 lean_s640
let lean_s642 := by timed congr lean_s638 lean_s641
have lean_s643 : (Eq (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))))) (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6)))))))) := by timed congr lean_s637 lean_s642
have lean_s644 : (Eq (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))) (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6)))))))) := by timed Eq.trans lean_r40 lean_s643
let lean_s645 := by timed congr lean_s566 lean_s644
have lean_s646 : (Eq (Or (Not xx5f4) (Not xx5f5)) (Or (Not xx5f4) (Not xx5f5))) := by timed rfl
let lean_s647 := by timed congr lean_s566 lean_s646
let lean_s648 := by timed congr lean_s566 lean_s345
let lean_s649 := by timed congr lean_s566 lean_r49
let lean_s650 := by timed congr lean_s566 lean_r72
let lean_s651 := by timed congr lean_s566 lean_r35
let lean_s652 := by timed congr lean_s651 lean_r37
let lean_s653 := by timed congr lean_s650 lean_s652
let lean_s654 := by timed congr lean_s649 lean_s653
let lean_s655 := by timed congr lean_s648 lean_s654
let lean_s656 := by timed congr lean_s647 lean_s655
let lean_s657 := by timed congr lean_s645 lean_s656
let lean_s658 := by timed congr lean_s635 lean_s657
let lean_s659 := by timed congr lean_s623 lean_s658
let lean_s660 := by timed congr lean_s611 lean_s659
let lean_s661 := by timed congr lean_s602 lean_s660
let lean_s662 := by timed congr lean_s590 lean_s661
let lean_s663 := by timed congr lean_s578 lean_s662
let lean_s664 := by timed congr lean_s569 lean_s663
have lean_s665 : (Eq (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or (Or xx5f4 xx5f5) xx5f9) (And (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And True (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))))) := by timed congr lean_s568 lean_s664
have lean_s666 : (Eq (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or (Or xx5f4 xx5f5) xx5f9) (And (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1)))) (And (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6)))) (And (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6)))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f19 xx5f6) (And (Eq xx5f15 xx5f4) (And (Eq xx5f16 xx5f5) (Eq xx5f10 xx5f7))))))))))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))) := by timed Eq.trans lean_s665 lean_r48
have lean_s667 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))) := by timed Eq.trans lean_r23 lean_s666
let lean_s668 := by timed congr lean_s565 lean_s667
let lean_s669 := by timed congr lean_s547 lean_s668
let lean_s670 := by timed congr lean_s521 lean_s669
let lean_s671 := by timed congr lean_s498 lean_s670
let lean_s672 := by timed congr lean_s474 lean_s671
let lean_s673 := by timed congr lean_s452 lean_s672
let lean_s674 := by timed congr lean_s429 lean_s673
let lean_s675 := by timed congr lean_s403 lean_s674
let lean_s676 := by timed congr lean_s377 lean_s675
have lean_s677 : (Eq (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)))))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or False (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or False (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))))))))))))) := by timed congr lean_s357 lean_s676
have lean_s678 : (Eq (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)) (Or (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)))))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))))))))))) := by timed Eq.trans lean_s677 lean_r33
have lean_s679 : (Eq (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))))))))))))))) := by timed Eq.trans lean_r71 lean_s678
let lean_s680 := by timed congr lean_s0 lean_s679
let lean_s681 := by timed flipCongrArg lean_r44 [Or]
have lean_s682 : (Eq (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5)))) (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5)))))) := by timed congr lean_s681 lean_r74
let lean_s683 := by timed congr lean_s680 lean_s682
let lean_s684 := by timed congr lean_s333 lean_s683
let lean_s685 := by timed congr lean_s25 lean_s684
let lean_s686 := by timed congr lean_s23 lean_s685
let lean_s687 := by timed congr lean_s18 lean_s686
let lean_s688 := by timed congr lean_s16 lean_s687
let lean_s689 := by timed congr lean_s14 lean_s688
let lean_s690 := by timed congr lean_s12 lean_s689
let lean_s691 := by timed congr lean_s10 lean_s690
let lean_s692 := by timed congr lean_s8 lean_s691
let lean_s693 := by timed congr lean_s6 lean_s692
let lean_s694 := by timed congr lean_s4 lean_s693
let lean_s695 := by timed congr lean_s2 lean_s694
have lean_s696 : (Eq (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f20 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0))) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5)))))))))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f20 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))) (And (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))) (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5)))))))))))))))))))) := by timed congr lean_s1 lean_s695
have lean_s697 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f20 (Rat.ofInt 1)) (binrel% GE.ge xx5f20 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not xx5f2)) (Not xx5f3)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f6)) (Not xx5f7)) (Not (binrel% LT.lt xx5f8 (Rat.ofInt 0)))) (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3)) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (Not xx5f1))) (Not xx5f9)) xx5f11) (Not xx5f12)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 3)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 2))) (Not xx5f11)) xx5f12) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (Not xx5f1))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (Not xx5f1))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) xx5f1)) (Not xx5f9)) xx5f11) xx5f12) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) xx5f1)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))) (Eq xx5f13 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 8)) xx5f0) xx5f1) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f18 xx5f2)) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f14 xx5f3))) (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f21 (Rat.ofInt 9)) (Or (Or xx5f0 xx5f1) xx5f9)) (Or (Or (Or xx5f0 xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 2))))) (Or (Or (Or (Not xx5f0) xx5f1) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 2))))) (Or (Or xx5f0 (Not xx5f1)) xx5f9)) (Or (Or (Or xx5f0 (Not xx5f1)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 3))))) (Or (Not xx5f0) (Not xx5f1))) (Eq xx5f13 (Rat.ofInt 0))) (Eq xx5f18 xx5f2)) (And (Eq xx5f11 xx5f0) (Eq xx5f12 xx5f1))) (Eq xx5f14 xx5f3)))) (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) xx5f15) (Not xx5f16)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7)) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (Not xx5f5))) (Not xx5f9)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 3)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 1))) (Not xx5f15)) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (Not xx5f5))) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (Not xx5f5))) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 6)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (Eq (Rat.ofInt 0) (Rat.ofInt 6))) xx5f15) xx5f16) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) xx5f5)) (Not xx5f9)) (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) xx5f5)) xx5f9) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))) (Eq xx5f17 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 9)) xx5f4) xx5f5) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f19 xx5f6)) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f10 xx5f7))) (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f22 (Rat.ofInt 10)) (Or (Or xx5f4 xx5f5) xx5f9)) (Or (Or (Or xx5f4 xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 1))))) (Or (Or (Or (Not xx5f4) xx5f5) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 1))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (Eq (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) xx5f9) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 6))))) (Or (Or (Or xx5f4 (Not xx5f5)) (Not xx5f9)) (Not (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f8) (Rat.ofInt 6))))) (Or (Not xx5f4) (Not xx5f5))) (Eq xx5f17 (Rat.ofInt 0))) (Eq xx5f19 xx5f6)) (And (Eq xx5f15 xx5f4) (Eq xx5f16 xx5f5))) (Eq xx5f10 xx5f7)))) (Or (And (And (Not xx5f11) xx5f12) (Or xx5f15 (Not xx5f16))) (And (And (Not xx5f0) xx5f1) (Or xx5f4 (Not xx5f5))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f20 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))) (And (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))) (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5)))))))))))))))))))) := by timed Eq.trans lean_r0 lean_s696
have lean_s698 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f20 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))) (And (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))) (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))))))))))))))))) := by timed eqResolve lean_a85 lean_s697
have lean_s699 : (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))) := by andElim lean_s698, 12
have lean_s700 : (Or (Not (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) := by timed @cnfOrPos [(And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))), (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))), (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))), (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))), (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))), (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))), (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))), (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))), (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))]
have lean_s701 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) (Eq xx5f1 xx5f12)) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 0)), (Not xx5f0), (Not xx5f1), (Not xx5f9), (Eq xx5f0 xx5f11), (Eq xx5f1 xx5f12), (Eq xx5f2 xx5f18), (Eq xx5f13 (Rat.ofInt 0)), (Eq xx5f3 xx5f14)] 5
have lean_s702 : (Or (Not (Eq xx5f1 xx5f12)) (Or xx5f1 (Not xx5f12))) := by timed cnfEquivPos2
have lean_s703 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f20 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))) (And (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))) (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))))))))))))))))) := by timed eqResolve lean_a85 lean_s697
have lean_s704 : (Not xx5f1) := by andElim lean_s703, 3
let lean_s705 := by R1 lean_s702, lean_s704, xx5f1, [(- 1), 0]
have lean_s706 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f20 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))) (And (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))) (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))))))))))))))))) := by timed eqResolve lean_a85 lean_s697
have lean_s707 : (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))) := by andElim lean_s706, 14
have lean_s708 : (Or (Not (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))) xx5f1) := by timed @cnfAndPos [(Not xx5f0), xx5f1, (Or xx5f4 (Not xx5f5))] 1
have lean_s709 : (Not xx5f1) := by andElim lean_s703, 3
have lean_s710 : (Not (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))) := by R1 lean_s708, lean_s709, xx5f1, [(- 1), 0]
have lean_s711 : (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) := by R1 lean_s707, lean_s710, (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5)))), [(- 1), 0]
have lean_s712 : xx5f12 := by andElim lean_s711, 1
have lean_s713 : (Not (Eq xx5f1 xx5f12)) := by R2 lean_s705, lean_s712, xx5f12, [(- 1), 0]
have lean_s714 : (Not (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by R1 lean_s701, lean_s713, (Eq xx5f1 xx5f12), [(- 1), 0]
let lean_s715 := by R1 lean_s700, lean_s714, (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))), [(- 1), 0]
have lean_s716 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14)))))))))) xx5f11) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 1)), (Not xx5f0), (Not xx5f1), (Not xx5f9), xx5f11, (Not xx5f12), (Eq xx5f13 (Rat.ofInt 0)), (Eq xx5f2 xx5f18), (Eq xx5f3 xx5f14)] 4
have lean_s717 : (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) := by R1 lean_s707, lean_s710, (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5)))), [(- 1), 0]
have lean_s718 : (Not xx5f11) := by andElim lean_s717, 0
have lean_s719 : (Not (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14)))))))))) := by R1 lean_s716, lean_s718, xx5f11, [(- 1), 0]
let lean_s720 := by R1 lean_s715, lean_s719, (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))), [(- 1), 0]
have lean_s721 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) (Eq xx5f1 xx5f12)) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 2)), (Not xx5f0), (Not xx5f1), xx5f9, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))), (Eq xx5f8 xx5f13), (Eq xx5f2 xx5f18), (Eq xx5f0 xx5f11), (Eq xx5f1 xx5f12), (Eq xx5f3 xx5f14)] 8
let lean_s722 := by R1 lean_s702, lean_s704, xx5f1, [(- 1), 0]
have lean_s723 : (Not (Eq xx5f1 xx5f12)) := by R2 lean_s722, lean_s712, xx5f12, [(- 1), 0]
have lean_s724 : (Not (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by R1 lean_s721, lean_s723, (Eq xx5f1 xx5f12), [(- 1), 0]
let lean_s725 := by R1 lean_s720, lean_s724, (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))), [(- 1), 0]
have lean_s726 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) xx5f0) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 4)), xx5f0, (Not xx5f1), (Not xx5f9), (Eq xx5f0 xx5f11), (Eq xx5f1 xx5f12), (Eq xx5f2 xx5f18), (Eq xx5f13 (Rat.ofInt 0)), (Eq xx5f3 xx5f14)] 1
have lean_s727 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f20) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f20 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f2) (And (Not xx5f3) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f6) (And (Not xx5f7) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Eq xx5f20 (smtIte xx5f9 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))))))))))) (And (Or (And (Eq xx5f22 (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And xx5f15 (And (Not xx5f16) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 1)) (And (Not xx5f4) (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 2)) (And (Not xx5f4) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 4)) (And xx5f4 (And (Not xx5f5) (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 5)) (And xx5f4 (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 7)) (And (Not xx5f4) (And xx5f5 (And (Not xx5f9) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 8)) (And (Not xx5f4) (And xx5f5 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))) (And (Eq xx5f8 xx5f17) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10)))))))))) (Or (And (Eq xx5f22 (Rat.ofInt 9)) (And xx5f4 (And xx5f5 (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (And (Eq xx5f6 xx5f19) (And (Eq xx5f17 (Rat.ofInt 0)) (Eq xx5f7 xx5f10)))))))) (And (Eq xx5f22 (Rat.ofInt 10)) (And (Or xx5f4 (Or xx5f5 xx5f9)) (And (Or xx5f4 (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f4) (Or xx5f5 xx5f9)) (And (Or (Not xx5f4) (Or xx5f5 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or xx5f4 (Or (Not xx5f5) xx5f9)) (And (Or xx5f4 (Or (Not xx5f5) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 6))))))) (And (Or (Not xx5f4) (Not xx5f5)) (And (Eq xx5f17 (Rat.ofInt 0)) (And (Eq xx5f6 xx5f19) (And (Eq xx5f4 xx5f15) (And (Eq xx5f5 xx5f16) (Eq xx5f7 xx5f10))))))))))))))))))))) (Or (And (Not xx5f11) (And xx5f12 (Or xx5f15 (Not xx5f16)))) (And (Not xx5f0) (And xx5f1 (Or xx5f4 (Not xx5f5))))))))))))))))))) := by timed eqResolve lean_a85 lean_s697
have lean_s728 : (Not xx5f0) := by andElim lean_s727, 2
have lean_s729 : (Not (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by R1 lean_s726, lean_s728, xx5f0, [(- 1), 0]
let lean_s730 := by R1 lean_s725, lean_s729, (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))), [(- 1), 0]
have lean_s731 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) xx5f0) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 5)), xx5f0, (Not xx5f1), xx5f9, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))), (Eq xx5f8 xx5f13), (Eq xx5f2 xx5f18), (Eq xx5f0 xx5f11), (Eq xx5f1 xx5f12), (Eq xx5f3 xx5f14)] 1
have lean_s732 : (Not xx5f0) := by andElim lean_s727, 2
have lean_s733 : (Not (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by R1 lean_s731, lean_s732, xx5f0, [(- 1), 0]
let lean_s734 := by R1 lean_s730, lean_s733, (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))), [(- 1), 0]
have lean_s735 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) xx5f1) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 6)), (Not xx5f0), xx5f1, (Not xx5f9), xx5f11, xx5f12, (Eq xx5f2 xx5f18), (Eq xx5f13 (Rat.ofInt 0)), (Eq xx5f3 xx5f14)] 2
have lean_s736 : (Not xx5f1) := by andElim lean_s703, 3
have lean_s737 : (Not (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))))) := by R1 lean_s735, lean_s736, xx5f1, [(- 1), 0]
let lean_s738 := by R1 lean_s734, lean_s737, (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))), [(- 1), 0]
have lean_s739 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) xx5f1) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 7)), (Not xx5f0), xx5f1, xx5f9, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))), (Eq xx5f8 xx5f13), (Eq xx5f2 xx5f18), (Eq xx5f0 xx5f11), (Eq xx5f1 xx5f12), (Eq xx5f3 xx5f14)] 2
have lean_s740 : (Not xx5f1) := by andElim lean_s703, 3
have lean_s741 : (Not (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))) := by R1 lean_s739, lean_s740, xx5f1, [(- 1), 0]
let lean_s742 := by R1 lean_s738, lean_s741, (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))), [(- 1), 0]
have lean_s743 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) xx5f0) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 8)), xx5f0, xx5f1, (Eq xx5f0 xx5f11), (Eq xx5f1 xx5f12), (Eq xx5f2 xx5f18), (Eq xx5f13 (Rat.ofInt 0)), (Eq xx5f3 xx5f14)] 1
have lean_s744 : (Not xx5f0) := by andElim lean_s727, 2
have lean_s745 : (Not (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) := by R1 lean_s743, lean_s744, xx5f0, [(- 1), 0]
let lean_s746 := by R1 lean_s742, lean_s745, (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))), [(- 1), 0]
have lean_s747 : (Or (Not (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) (Eq xx5f1 xx5f12)) := by timed @cnfAndPos [(Eq xx5f21 (Rat.ofInt 9)), (Or xx5f0 (Or xx5f1 xx5f9)), (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))), (Or (Not xx5f0) (Or xx5f1 xx5f9)), (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))), (Or xx5f0 (Or (Not xx5f1) xx5f9)), (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))), (Or (Not xx5f0) (Not xx5f1)), (Eq xx5f13 (Rat.ofInt 0)), (Eq xx5f2 xx5f18), (Eq xx5f0 xx5f11), (Eq xx5f1 xx5f12), (Eq xx5f3 xx5f14)] 11
let lean_s748 := by R1 lean_s702, lean_s704, xx5f1, [(- 1), 0]
have lean_s749 : (Not (Eq xx5f1 xx5f12)) := by R2 lean_s748, lean_s712, xx5f12, [(- 1), 0]
have lean_s750 : (Not (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))) := by R1 lean_s747, lean_s749, (Eq xx5f1 xx5f12), [(- 1), 0]
have lean_s751 : (Not (Or (And (Eq xx5f21 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 1)) (And (Not xx5f0) (And (Not xx5f1) (And (Not xx5f9) (And xx5f11 (And (Not xx5f12) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 2)) (And (Not xx5f0) (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 4)) (And xx5f0 (And (Not xx5f1) (And (Not xx5f9) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 5)) (And xx5f0 (And (Not xx5f1) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 6)) (And (Not xx5f0) (And xx5f1 (And (Not xx5f9) (And xx5f11 (And xx5f12 (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 7)) (And (Not xx5f0) (And xx5f1 (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))) (And (Eq xx5f8 xx5f13) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))) (Or (And (Eq xx5f21 (Rat.ofInt 8)) (And xx5f0 (And xx5f1 (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (And (Eq xx5f2 xx5f18) (And (Eq xx5f13 (Rat.ofInt 0)) (Eq xx5f3 xx5f14)))))))) (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14)))))))))))))))))))))) := by R1 lean_s746, lean_s750, (And (Eq xx5f21 (Rat.ofInt 9)) (And (Or xx5f0 (Or xx5f1 xx5f9)) (And (Or xx5f0 (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 1))))))) (And (Or (Not xx5f0) (Or xx5f1 xx5f9)) (And (Or (Not xx5f0) (Or xx5f1 (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))))))) (And (Or xx5f0 (Or (Not xx5f1) xx5f9)) (And (Or xx5f0 (Or (Not xx5f1) (Or (Not xx5f9) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 3))))))) (And (Or (Not xx5f0) (Not xx5f1)) (And (Eq xx5f13 (Rat.ofInt 0)) (And (Eq xx5f2 xx5f18) (And (Eq xx5f0 xx5f11) (And (Eq xx5f1 xx5f12) (Eq xx5f3 xx5f14))))))))))))), [(- 1), 0]
exact (show False from by timed contradiction lean_s699 lean_s751)


