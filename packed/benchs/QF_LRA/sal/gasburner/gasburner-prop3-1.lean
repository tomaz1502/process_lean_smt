-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f7 : Rat}
variable {xx5f8 : Rat}
variable {xx5f5 : Prop}
variable {xx5f1 : Rat}
variable {xx5f2 : Rat}
variable {xx5f9 : Prop}
variable {xx5f4 : Rat}
variable {xx5f3 : Rat}
variable {xx5f0 : Prop}
variable {xx5f9 : Prop}
variable {xx5f4 : Rat}
variable {xx5f2 : Rat}
variable {xx5f6 : Rat}
variable {xx5f1 : Rat}
variable {xx5f5 : Prop}
variable {xx5f8 : Rat}
variable {xx5f7 : Rat}
variable {xx5f6 : Rat}
variable {xx5f0 : Prop}
variable {xx5f3 : Rat}

theorem th0 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) (And (Not xx5f5) (And xx5f9 (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (binrel% GE.ge xx5f1 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Int.ofNat 0))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge xx5f8 (Int.ofNat 2))) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0))) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4)) → (Eq (binrel% HAdd.hAdd xx5f2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4))) (Rat.ofInt 0)) → (Eq (Eq xx5f4 xx5f2) (Eq xx5f2 xx5f4)) → (Eq (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) xx5f2) → (Eq (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% GE.ge xx5f6 (Rat.ofInt 0)) (binrel% GE.ge xx5f6 (Int.ofNat 0))) → (Eq (binrel% LE.le xx5f2 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) → (Eq (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60)) True) → (Eq (Not True) False) → (Eq (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) (binrel% HMul.hMul (Int.ofNat 20) xx5f3)) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat) (smtIte xx5f0 (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) Rat)) → (Eq (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge xx5f8 (Int.ofNat 2))) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0))) (Not xx5f9)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) → (Eq (Not (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) (binrel% GE.ge xx5f6 (Int.ofNat 0))) → (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And True (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And True (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) → (Eq (binrel% GE.ge xx5f4 (Rat.ofInt 60)) (binrel% GE.ge xx5f4 (Int.ofNat 60))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)) (Neg.neg (Rat.ofInt 60))) → (Eq (And False False) False) → (Eq (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And True (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) → (Eq (binrel% LT.lt xx5f2 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f2 (Rat.ofInt 0)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)) → (Eq (Eq xx5f3 xx5f2) (Eq xx5f2 xx5f3)) → (Eq (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (Or False (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9)))))))))) (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9)))))))))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) → (Eq (smtIte False (Rat.ofInt 0) xx5f2 Rat) xx5f2) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)) (Rat.ofInt 1)) → (Eq (Not (Not (binrel% GE.ge xx5f4 (Int.ofNat 60)))) (binrel% GE.ge xx5f4 (Int.ofNat 60))) → (Eq (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) → (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) (And (Not xx5f5) (And xx5f9 (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (binrel% GE.ge xx5f1 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Int.ofNat 0))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))))))) → (Eq (Eq xx5f9 xx5f0) (Eq xx5f0 xx5f9)) → (Eq (Or (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))) False) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (And (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1))) (And (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (And (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (And (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat)) (Eq xx5f9 xx5f0))))))))) → (Eq (Not (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) (binrel% GE.ge xx5f2 (Int.ofNat 0))) → (Eq (binrel% GT.gt xx5f2 (Rat.ofInt 1)) (Not (binrel% LE.le xx5f2 (Rat.ofInt 1)))) → (Eq (binrel% GE.ge xx5f2 (Rat.ofInt 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) → (Eq (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))) (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))))) → (Eq (And (Eq xx5f8 (Rat.ofInt 1)) (And (Not xx5f5) (And xx5f0 (And False (And (Not xx5f9) (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) False) → (Eq (binrel% LE.le (binrel% HMul.hMul (Int.ofNat 20) xx5f3) xx5f4) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 60)) (Rat.ofInt 0))) (Neg.neg (Rat.ofInt 59))) → (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)) True) → (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (Eq xx5f8 (Rat.ofInt 1)) (And (Not xx5f5) (And xx5f0 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30))) (And (Not xx5f9) (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))))) → (Eq (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) → (Eq (binrel% LT.lt xx5f6 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f6 (Rat.ofInt 0)))) → (Eq (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) → (Eq (And (And (And (And (And (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge xx5f7 (Rat.ofInt 0))) (Not xx5f0)) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))) (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))))))))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (Eq xx5f0 False) (Not xx5f0)) → (Eq (binrel% LT.lt xx5f4 (Rat.ofInt 60)) (Not (binrel% GE.ge xx5f4 (Rat.ofInt 60)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 60))) False) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 60))) (Neg.neg (Rat.ofInt 60))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) xx5f2) → (Eq (binrel% HAdd.hAdd xx5f4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0)) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) xx5f4) → (Eq (binrel% LE.le xx5f4 (Rat.ofInt 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0))) → (Eq (Eq False xx5f9) (Not xx5f9)) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (Not False) True) → (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 59))) False) → (And (And (And (And (And (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge xx5f7 (Rat.ofInt 0))) (Not xx5f0)) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))) → False :=
fun lean_h0 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) (And (Not xx5f5) (And xx5f9 (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (binrel% GE.ge xx5f1 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Int.ofNat 0))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge xx5f8 (Int.ofNat 2))) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0))) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) => -- PREPROCESS
fun lean_r1 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4)) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HAdd.hAdd xx5f2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (Eq xx5f4 xx5f2) (Eq xx5f2 xx5f4)) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) True) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) xx5f2) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% GE.ge xx5f6 (Rat.ofInt 0)) (binrel% GE.ge xx5f6 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% LE.le xx5f2 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60)) True) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) (binrel% HMul.hMul (Int.ofNat 20) xx5f3)) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r15 : (Eq (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat) (smtIte xx5f0 (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) Rat)) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge xx5f8 (Int.ofNat 2))) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0))) (Not xx5f9)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq (Not (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) (binrel% GE.ge xx5f6 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And True (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And True (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r20 : (Eq (binrel% GE.ge xx5f4 (Rat.ofInt 60)) (binrel% GE.ge xx5f4 (Int.ofNat 60))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)) (Neg.neg (Rat.ofInt 60))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (And False False) False) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And True (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (binrel% LT.lt xx5f2 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f2 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (Eq xx5f3 xx5f2) (Eq xx5f2 xx5f3)) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (Or False (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9)))))))))) (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (smtIte False (Rat.ofInt 0) xx5f2 Rat) xx5f2) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)) (Rat.ofInt 1)) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (Not (Not (binrel% GE.ge xx5f4 (Int.ofNat 60)))) (binrel% GE.ge xx5f4 (Int.ofNat 60))) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) (And (Not xx5f5) (And xx5f9 (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (binrel% GE.ge xx5f1 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Int.ofNat 0))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (Eq xx5f9 xx5f0) (Eq xx5f0 xx5f9)) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq (Or (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))) False) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (And (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1))) (And (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (And (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (And (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat)) (Eq xx5f9 xx5f0))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq (Not (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) (binrel% GE.ge xx5f2 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq (binrel% GT.gt xx5f2 (Rat.ofInt 1)) (Not (binrel% LE.le xx5f2 (Rat.ofInt 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (binrel% GE.ge xx5f2 (Rat.ofInt 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))) (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))))) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq (And (Eq xx5f8 (Rat.ofInt 1)) (And (Not xx5f5) (And xx5f0 (And False (And (Not xx5f9) (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq (binrel% LE.le (binrel% HMul.hMul (Int.ofNat 20) xx5f3) xx5f4) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 60)) (Rat.ofInt 0))) (Neg.neg (Rat.ofInt 59))) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)) True) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (Eq xx5f8 (Rat.ofInt 1)) (And (Not xx5f5) (And xx5f0 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30))) (And (Not xx5f9) (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq (binrel% LT.lt xx5f6 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f6 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq (And (And (And (And (And (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge xx5f7 (Rat.ofInt 0))) (Not xx5f0)) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))) (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq (Eq xx5f0 False) (Not xx5f0)) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq (binrel% LT.lt xx5f4 (Rat.ofInt 60)) (Not (binrel% GE.ge xx5f4 (Rat.ofInt 60)))) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 60))) False) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 60))) (Neg.neg (Rat.ofInt 60))) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) xx5f2) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq (binrel% HAdd.hAdd xx5f4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) xx5f4) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq (binrel% LE.le xx5f4 (Rat.ofInt 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq (Eq False xx5f9) (Not xx5f9)) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r63 : (Eq (Not False) True) => -- THEORY_REWRITE_BOOL
fun lean_r64 : (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 59))) False) => -- THEORY_REWRITE_ARITH
fun lean_a65 : (And (And (And (And (And (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge xx5f7 (Rat.ofInt 0))) (Not xx5f0)) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))) => by
have lean_s0 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge xx5f4 (Int.ofNat 60))) (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) False))) :=
  (scope (fun lean_a66 : (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) =>
    (scope (fun lean_a67 : (binrel% GE.ge xx5f4 (Int.ofNat 60)) =>
      (scope (fun lean_a68 : (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) =>
        have lean_s0 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (binrel% LE.le xx5f2 (Rat.ofInt 1))) := by timed Eq.symm lean_r9
        have lean_s1 : (binrel% LE.le xx5f2 (Rat.ofInt 1)) := by timed eqResolve lean_a68 lean_s0
        have lean_s2 : (Or (Not (binrel% LE.le xx5f2 (Rat.ofInt 1))) False) :=
          (scope (fun lean_a69 : (binrel% LE.le xx5f2 (Rat.ofInt 1)) =>
            have lean_s2 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r62
            have lean_s3 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le xx5f2 (Rat.ofInt 1))) := by timed And.intro lean_s2 lean_a69
            have lean_s4 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le xx5f2 (Rat.ofInt 1))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)))) := by arithMulPos [xx5f2, (Rat.ofInt 1), (Rat.ofInt 1)], 1
            have lean_s5 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1))) := by timed modusPonens lean_s3 lean_s4
            have lean_s6 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r14
            have lean_s7 : (Eq (binrel% GE.ge xx5f4 (Int.ofNat 60)) (binrel% GE.ge xx5f4 (Rat.ofInt 60))) := by timed Eq.symm lean_r20
            have lean_s8 : (binrel% GE.ge xx5f4 (Rat.ofInt 60)) := by timed eqResolve lean_a67 lean_s7
            have lean_s9 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Rat.ofInt 60))) := by timed And.intro lean_s6 lean_s8
            have lean_s10 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Rat.ofInt 60))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)))) := by arithMulNeg [xx5f4, (Rat.ofInt 60), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s11 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60))) := by timed modusPonens lean_s9 lean_s10
            have lean_s12 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0))) := by timed Eq.symm lean_r1
            have lean_s13 : (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0)) := by timed eqResolve lean_a66 lean_s12
            have lean_s14 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0))) := by timed And.intro lean_s6 lean_s13
            have lean_s15 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Rat.ofInt 0))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) := by arithMulNeg [(binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)), (Rat.ofInt 0), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s16 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))) := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))))) := by sumBounds [lean_s5, lean_s11, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r28 lean_r2
            have lean_s19 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))))) (binrel% HAdd.hAdd xx5f2 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4)))) := by timed congrHAdd lean_r57 lean_s18
            have lean_s20 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s19 lean_r3
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r21 lean_r51
            have lean_s23 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 60)) (Rat.ofInt 0)))) := by timed congrHAdd lean_r30 lean_s22
            have lean_s24 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) (Neg.neg (Rat.ofInt 59))) := by timed Eq.trans lean_s23 lean_r43
            have lean_s25 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 59)))) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))))) False) := by timed Eq.trans lean_s25 lean_r64
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s3 : (Not (binrel% LE.le xx5f2 (Rat.ofInt 1))) := by liftOrNToNeg lean_s2
        have lean_s4 : (Eq (Not (binrel% LE.le xx5f2 (Rat.ofInt 1))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))))) := by timed flipCongrArg lean_r9 [Not]
        have lean_s5 : (Eq (binrel% GT.gt xx5f2 (Rat.ofInt 1)) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))))) := by timed Eq.trans lean_r38 lean_s4
        have lean_s6 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (binrel% GT.gt xx5f2 (Rat.ofInt 1))) := by timed Eq.symm lean_s5
        have lean_s7 : (Eq (Not (binrel% LE.le xx5f2 (Rat.ofInt 1))) (binrel% GT.gt xx5f2 (Rat.ofInt 1))) := by timed Eq.trans lean_s4 lean_s6
        have lean_s8 : (binrel% GT.gt xx5f2 (Rat.ofInt 1)) := by timed eqResolve lean_s3 lean_s7
        have lean_s9 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (Not (binrel% LE.le xx5f2 (Rat.ofInt 1)))) := by timed Eq.symm lean_s4
        have lean_s10 : (Eq (binrel% GT.gt xx5f2 (Rat.ofInt 1)) (Not (binrel% LE.le xx5f2 (Rat.ofInt 1)))) := by timed Eq.trans lean_s5 lean_s9
        have lean_s11 : (Not (binrel% LE.le xx5f2 (Rat.ofInt 1))) := by timed eqResolve lean_s8 lean_s10
        show False from by timed contradiction lean_s1 lean_s11
  ))))))
have lean_s1 : (Not (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge xx5f4 (Int.ofNat 60))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))))) := by timed flipNotAnd lean_s1 [(binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)), (binrel% GE.ge xx5f4 (Int.ofNat 60)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))]
have lean_s3 : (Or (Not (binrel% GE.ge xx5f4 (Int.ofNat 60))) (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))))) := by permutateOr lean_s2, [1, 2, 0], (- 1)
have lean_s4 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))), (binrel% GE.ge xx5f8 (Int.ofNat 2)), xx5f5, (binrel% GE.ge xx5f2 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)), (Not xx5f9)] 8
have lean_s5 : (Or (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9)))))))))))))) := by permutateOr lean_s4, [1, 0], (- 1)
have lean_s6 : (Eq And And) := by timed rfl
let lean_s7 := by timed congr lean_s6 lean_r7
let lean_s8 := by timed congr lean_s6 lean_r49
have lean_s9 : (Eq (Not xx5f0) (Not xx5f0)) := by timed rfl
let lean_s10 := by timed congr lean_s6 lean_s9
have lean_s11 : (Eq (Not (binrel% GE.ge xx5f6 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) := by timed flipCongrArg lean_r8 [Not]
have lean_s12 : (Eq (binrel% LT.lt xx5f6 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f6 (Int.ofNat 0)))) := by timed Eq.trans lean_r48 lean_s11
have lean_s13 : (Eq (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f6 (Int.ofNat 0))))) := by timed flipCongrArg lean_s12 [Not]
have lean_s14 : (Eq (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (binrel% GE.ge xx5f6 (Int.ofNat 0))) := by timed Eq.trans lean_s13 lean_r18
let lean_s15 := by timed congr lean_s6 lean_s14
have lean_s16 : (Eq (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed rfl
let lean_s17 := by timed congr lean_s6 lean_s16
have lean_s18 : (Eq Or Or) := by timed rfl
let lean_s19 := by timed congr lean_s18 lean_r47
have lean_s20 : (Eq And And) := by timed rfl
have lean_s21 : (Eq (Eq xx5f8 (Rat.ofInt 1)) (Eq xx5f8 (Rat.ofInt 1))) := by timed rfl
let lean_s22 := by timed congr lean_s20 lean_s21
have lean_s23 : (Eq (Not xx5f5) (Not xx5f5)) := by timed rfl
let lean_s24 := by timed congr lean_s20 lean_s23
have lean_s25 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s26 := by timed congr lean_s20 lean_s25
have lean_s27 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30))) (Not True)) := by timed flipCongrArg lean_r44 [Not]
have lean_s28 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30))) False) := by timed Eq.trans lean_s27 lean_r12
let lean_s29 := by timed congr lean_s20 lean_s28
have lean_s30 : (Eq (Not xx5f9) (Not xx5f9)) := by timed rfl
let lean_s31 := by timed congr lean_s20 lean_s30
have lean_s32 : (Eq (Eq xx5f1 (Rat.ofInt 0)) (Eq xx5f1 (Rat.ofInt 0))) := by timed rfl
let lean_s33 := by timed congr lean_s20 lean_s32
have lean_s34 : (Eq (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f4 (Rat.ofInt 0))) := by timed rfl
let lean_s35 := by timed congr lean_s20 lean_s34
have lean_s36 : (Eq (Eq xx5f3 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))) := by timed rfl
let lean_s37 := by timed congr lean_s35 lean_s36
let lean_s38 := by timed congr lean_s33 lean_s37
let lean_s39 := by timed congr lean_s31 lean_s38
let lean_s40 := by timed congr lean_s29 lean_s39
let lean_s41 := by timed congr lean_s26 lean_s40
let lean_s42 := by timed congr lean_s24 lean_s41
have lean_s43 : (Eq (And (Eq xx5f8 (Rat.ofInt 1)) (And (Not xx5f5) (And xx5f0 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30))) (And (Not xx5f9) (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) (And (Eq xx5f8 (Rat.ofInt 1)) (And (Not xx5f5) (And xx5f0 (And False (And (Not xx5f9) (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))))) := by timed congr lean_s22 lean_s42
have lean_s44 : (Eq (And (Eq xx5f8 (Rat.ofInt 1)) (And (Not xx5f5) (And xx5f0 (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30))) (And (Not xx5f9) (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) False) := by timed Eq.trans lean_s43 lean_r41
have lean_s45 : (Eq (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) False) := by timed Eq.trans lean_r46 lean_s44
let lean_s46 := by timed congr lean_s18 lean_s45
have lean_s47 : (Eq And And) := by timed rfl
have lean_s48 : (Eq (Eq xx5f8 (Rat.ofInt 2)) (Eq xx5f8 (Rat.ofInt 2))) := by timed rfl
let lean_s49 := by timed congr lean_s47 lean_s48
have lean_s50 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s51 := by timed congr lean_s47 lean_s50
have lean_s52 : (Eq (Not (binrel% GE.ge xx5f2 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) := by timed flipCongrArg lean_r39 [Not]
have lean_s53 : (Eq (binrel% LT.lt xx5f2 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) := by timed Eq.trans lean_r24 lean_s52
have lean_s54 : (Eq (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f2 (Int.ofNat 0))))) := by timed flipCongrArg lean_s53 [Not]
have lean_s55 : (Eq (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (binrel% GE.ge xx5f2 (Int.ofNat 0))) := by timed Eq.trans lean_s54 lean_r37
let lean_s56 := by timed congr lean_s47 lean_s55
let lean_s57 := by timed flipCongrArg lean_s25 [Or]
let lean_s58 := by timed flipCongrArg lean_r6 [LE.le]
have lean_s59 : (Eq (Rat.ofInt 1) (Rat.ofInt 1)) := by timed rfl
have lean_s60 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)) (binrel% LE.le xx5f2 (Rat.ofInt 1))) := by timed congr lean_s58 lean_s59
have lean_s61 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) := by timed Eq.trans lean_s60 lean_r9
have lean_s62 : (Eq (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1))) (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))))) := by timed congr lean_s57 lean_s61
let lean_s63 := by timed congr lean_s47 lean_s62
have lean_s64 : (Eq xx5f1 xx5f1) := by timed rfl
let lean_s65 := by timed flipCongrArg lean_s64 [Eq]
have lean_s66 : (Eq (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (Eq xx5f1 xx5f2)) := by timed congr lean_s65 lean_r6
let lean_s67 := by timed congr lean_s47 lean_s66
have lean_s68 : (Eq xx5f4 xx5f4) := by timed rfl
let lean_s69 := by timed flipCongrArg lean_s68 [Eq]
have lean_s70 : (Eq (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (Eq xx5f4 xx5f2)) := by timed congr lean_s69 lean_r6
have lean_s71 : (Eq (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (Eq xx5f2 xx5f4)) := by timed Eq.trans lean_s70 lean_r4
let lean_s72 := by timed congr lean_s47 lean_s71
have lean_s73 : (Eq xx5f3 xx5f3) := by timed rfl
let lean_s74 := by timed flipCongrArg lean_s73 [Eq]
have lean_s75 : (Eq (Rat.ofInt 0) (Rat.ofInt 0)) := by timed rfl
have lean_s76 : (Eq (smtIte xx5f0 (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) Rat) (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) := by timed congrIte lean_s25 lean_s75 lean_r6
have lean_s77 : (Eq (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat) (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) := by timed Eq.trans lean_r15 lean_s76
have lean_s78 : (Eq (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat)) (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat))) := by timed congr lean_s74 lean_s77
let lean_s79 := by timed congr lean_s47 lean_s78
let lean_s80 := by timed congr lean_s79 lean_r34
let lean_s81 := by timed congr lean_s72 lean_s80
let lean_s82 := by timed congr lean_s67 lean_s81
let lean_s83 := by timed congr lean_s63 lean_s82
let lean_s84 := by timed congr lean_s56 lean_s83
let lean_s85 := by timed congr lean_s51 lean_s84
have lean_s86 : (Eq (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (And (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1))) (And (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (And (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2)) (And (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat)) (Eq xx5f9 xx5f0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) := by timed congr lean_s49 lean_s85
have lean_s87 : (Eq (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) := by timed Eq.trans lean_r36 lean_s86
let lean_s88 := by timed congr lean_s46 lean_s87
have lean_s89 : (Eq (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (Or False (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))))) := by timed congr lean_s19 lean_s88
have lean_s90 : (Eq (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (Or (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9)))))))))) := by timed Eq.trans lean_s89 lean_r27
have lean_s91 : (Eq (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))) (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9)))))))))) := by timed Eq.trans lean_r40 lean_s90
let lean_s92 := by timed congr lean_s6 lean_s91
have lean_s93 : (Eq (Not (binrel% GE.ge xx5f4 (Rat.ofInt 60))) (Not (binrel% GE.ge xx5f4 (Int.ofNat 60)))) := by timed flipCongrArg lean_r20 [Not]
have lean_s94 : (Eq (binrel% LT.lt xx5f4 (Rat.ofInt 60)) (Not (binrel% GE.ge xx5f4 (Int.ofNat 60)))) := by timed Eq.trans lean_r53 lean_s93
have lean_s95 : (Eq (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (Not (binrel% GE.ge xx5f4 (Int.ofNat 60))))) := by timed flipCongrArg lean_s94 [Not]
have lean_s96 : (Eq (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (binrel% GE.ge xx5f4 (Int.ofNat 60))) := by timed Eq.trans lean_s95 lean_r31
let lean_s97 := by timed flipCongrArg lean_s96 [And]
let lean_s98 := by timed flipCongrArg lean_r13 [LE.le]
have lean_s99 : (Eq (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4) (binrel% LE.le (binrel% HMul.hMul (Int.ofNat 20) xx5f3) xx5f4)) := by timed congr lean_s98 lean_s68
have lean_s100 : (Eq (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))) := by timed Eq.trans lean_s99 lean_r42
have lean_s101 : (Eq (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s100 [Not]
have lean_s102 : (Eq (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))) := by timed congr lean_s97 lean_s101
let lean_s103 := by timed flipCongrArg lean_s102 [Or]
have lean_s104 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not True)) := by timed flipCongrArg lean_r11 [Not]
have lean_s105 : (Eq (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) False) := by timed Eq.trans lean_s104 lean_r12
let lean_s106 := by timed flipCongrArg lean_s105 [And]
let lean_s107 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s108 : (Eq (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)) (binrel% LE.le (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s107 lean_s75
have lean_s109 : (Eq (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)) True) := by timed Eq.trans lean_s108 lean_r16
have lean_s110 : (Eq (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0))) (Not True)) := by timed flipCongrArg lean_s109 [Not]
have lean_s111 : (Eq (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0))) False) := by timed Eq.trans lean_s110 lean_r12
have lean_s112 : (Eq (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))) (And False False)) := by timed congr lean_s106 lean_s111
have lean_s113 : (Eq (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))) False) := by timed Eq.trans lean_s112 lean_r22
have lean_s114 : (Eq (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0))))) (Or (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))) False)) := by timed congr lean_s103 lean_s113
have lean_s115 : (Eq (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))) := by timed Eq.trans lean_s114 lean_r35
let lean_s116 := by timed congr lean_s92 lean_s115
let lean_s117 := by timed congr lean_s17 lean_s116
let lean_s118 := by timed congr lean_s15 lean_s117
let lean_s119 := by timed congr lean_s10 lean_s118
let lean_s120 := by timed congr lean_s8 lean_s119
have lean_s121 : (Eq (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))))) := by timed congr lean_s7 lean_s120
have lean_s122 : (Eq (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f7 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0))) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))))) := by timed Eq.trans lean_s121 lean_r45
have lean_s123 : (Eq (And (And (And (And (And (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge xx5f7 (Rat.ofInt 0))) (Not xx5f0)) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))))) := by timed Eq.trans lean_r50 lean_s122
have lean_s124 : (Eq And And) := by timed rfl
have lean_s125 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s126 := by timed flipCongrArg lean_s125 [HMul.hMul]
have lean_s127 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) := by timed eqResolve lean_a65 lean_s123
have lean_s128 : (Not xx5f0) := by andElim lean_s127, 2
have lean_s129 : (Eq (Not xx5f0) (Eq xx5f0 False)) := by timed Eq.symm lean_r52
have lean_s130 : (Eq xx5f0 False) := by timed eqResolve lean_s128 lean_s129
have lean_s131 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) := by timed eqResolve lean_a65 lean_s123
have lean_s132 : (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by andElim lean_s131, 4
have lean_s133 : (And (Eq xx5f0 False) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed And.intro lean_s130 lean_s132
have lean_s134 : (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by andElim lean_s133, 1
have lean_s135 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s126 lean_s134
let lean_s136 := by timed flipCongrArg lean_s135 [GE.ge]
have lean_s137 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s136 lean_s125
let lean_s138 := by timed congr lean_s124 lean_s137
let lean_s139 := by timed flipCongrArg lean_s134 [GE.ge]
have lean_s140 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s141 : (Eq (binrel% GE.ge xx5f7 (Int.ofNat 0)) (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0))) := by timed congr lean_s139 lean_s140
let lean_s142 := by timed congr lean_s124 lean_s141
have lean_s143 : (Eq xx5f0 False) := by andElim lean_s133, 0
have lean_s144 : (Eq (Not xx5f0) (Not False)) := by timed flipCongrArg lean_s143 [Not]
let lean_s145 := by timed congr lean_s124 lean_s144
have lean_s146 : (Eq (binrel% GE.ge xx5f6 (Int.ofNat 0)) (binrel% GE.ge xx5f6 (Int.ofNat 0))) := by timed rfl
let lean_s147 := by timed congr lean_s124 lean_s146
let lean_s148 := by timed flipCongrArg lean_s134 [Eq]
have lean_s149 : (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed rfl
have lean_s150 : (Eq (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s148 lean_s149
let lean_s151 := by timed congr lean_s124 lean_s150
have lean_s152 : (Eq And And) := by timed rfl
have lean_s153 : (Eq (Eq xx5f8 (Rat.ofInt 0)) (Eq xx5f8 (Rat.ofInt 0))) := by timed rfl
let lean_s154 := by timed congr lean_s152 lean_s153
have lean_s155 : (Eq (Not xx5f5) (Not xx5f5)) := by timed rfl
let lean_s156 := by timed congr lean_s152 lean_s155
let lean_s157 := by timed congr lean_s152 lean_s144
have lean_s158 : (Eq xx5f9 xx5f9) := by timed rfl
let lean_s159 := by timed congr lean_s152 lean_s158
have lean_s160 : (Eq (Eq xx5f1 (Rat.ofInt 0)) (Eq xx5f1 (Rat.ofInt 0))) := by timed rfl
let lean_s161 := by timed congr lean_s152 lean_s160
have lean_s162 : (Eq (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f4 (Rat.ofInt 0))) := by timed rfl
let lean_s163 := by timed congr lean_s152 lean_s162
have lean_s164 : (Eq (Eq xx5f3 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))) := by timed rfl
let lean_s165 := by timed congr lean_s163 lean_s164
let lean_s166 := by timed congr lean_s161 lean_s165
let lean_s167 := by timed congr lean_s159 lean_s166
let lean_s168 := by timed congr lean_s157 lean_s167
let lean_s169 := by timed congr lean_s156 lean_s168
have lean_s170 : (Eq (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) := by timed congr lean_s154 lean_s169
let lean_s171 := by timed flipCongrArg lean_s170 [Or]
have lean_s172 : (Eq And And) := by timed rfl
have lean_s173 : (Eq (Eq xx5f8 (Rat.ofInt 2)) (Eq xx5f8 (Rat.ofInt 2))) := by timed rfl
let lean_s174 := by timed congr lean_s172 lean_s173
have lean_s175 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s176 := by timed congr lean_s172 lean_s175
have lean_s177 : (Eq (binrel% GE.ge xx5f2 (Int.ofNat 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) := by timed rfl
let lean_s178 := by timed congr lean_s172 lean_s177
let lean_s179 := by timed flipCongrArg lean_s143 [Or]
have lean_s180 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) := by timed rfl
have lean_s181 : (Eq (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))))) := by timed congr lean_s179 lean_s180
let lean_s182 := by timed congr lean_s172 lean_s181
have lean_s183 : (Eq (Eq xx5f1 xx5f2) (Eq xx5f1 xx5f2)) := by timed rfl
let lean_s184 := by timed congr lean_s172 lean_s183
have lean_s185 : (Eq (Eq xx5f2 xx5f4) (Eq xx5f2 xx5f4)) := by timed rfl
let lean_s186 := by timed congr lean_s172 lean_s185
have lean_s187 : (Eq xx5f3 xx5f3) := by timed rfl
let lean_s188 := by timed flipCongrArg lean_s187 [Eq]
have lean_s189 : (Eq (Rat.ofInt 0) (Rat.ofInt 0)) := by timed rfl
have lean_s190 : (Eq xx5f2 xx5f2) := by timed rfl
have lean_s191 : (Eq (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat) (smtIte False (Rat.ofInt 0) xx5f2 Rat)) := by timed congrIte lean_s143 lean_s189 lean_s190
have lean_s192 : (Eq (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat))) := by timed congr lean_s188 lean_s191
let lean_s193 := by timed congr lean_s172 lean_s192
let lean_s194 := by timed flipCongrArg lean_s143 [Eq]
have lean_s195 : (Eq (Eq xx5f0 xx5f9) (Eq False xx5f9)) := by timed congr lean_s194 lean_s158
let lean_s196 := by timed congr lean_s193 lean_s195
let lean_s197 := by timed congr lean_s186 lean_s196
let lean_s198 := by timed congr lean_s184 lean_s197
let lean_s199 := by timed congr lean_s182 lean_s198
let lean_s200 := by timed congr lean_s178 lean_s199
let lean_s201 := by timed congr lean_s176 lean_s200
have lean_s202 : (Eq (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq False xx5f9))))))))) := by timed congr lean_s174 lean_s201
have lean_s203 : (Eq (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq False xx5f9)))))))))) := by timed congr lean_s171 lean_s202
let lean_s204 := by timed congr lean_s124 lean_s203
have lean_s205 : (Eq (binrel% GE.ge xx5f4 (Int.ofNat 60)) (binrel% GE.ge xx5f4 (Int.ofNat 60))) := by timed rfl
let lean_s206 := by timed congr lean_s124 lean_s205
have lean_s207 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))) := by timed rfl
let lean_s208 := by timed congr lean_s206 lean_s207
let lean_s209 := by timed congr lean_s204 lean_s208
let lean_s210 := by timed congr lean_s151 lean_s209
let lean_s211 := by timed congr lean_s147 lean_s210
let lean_s212 := by timed congr lean_s145 lean_s211
let lean_s213 := by timed congr lean_s142 lean_s212
have lean_s214 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (Not False) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq False xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))))) := by timed congr lean_s138 lean_s213
have lean_s215 : (Eq And And) := by timed rfl
have lean_s216 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1)))) := by timed rfl
let lean_s217 := by timed congr lean_s215 lean_s216
have lean_s218 : (Eq (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0))) := by timed rfl
let lean_s219 := by timed congr lean_s215 lean_s218
let lean_s220 := by timed congr lean_s215 lean_r63
have lean_s221 : (Eq (binrel% GE.ge xx5f6 (Int.ofNat 0)) (binrel% GE.ge xx5f6 (Int.ofNat 0))) := by timed rfl
let lean_s222 := by timed congr lean_s215 lean_s221
let lean_s223 := by timed congr lean_s215 lean_r5
have lean_s224 : (Eq And And) := by timed rfl
have lean_s225 : (Eq (Eq xx5f8 (Rat.ofInt 0)) (Eq xx5f8 (Rat.ofInt 0))) := by timed rfl
let lean_s226 := by timed congr lean_s224 lean_s225
let lean_s227 := by timed congr lean_s224 lean_s23
let lean_s228 := by timed congr lean_s224 lean_r63
have lean_s229 : (Eq xx5f9 xx5f9) := by timed rfl
let lean_s230 := by timed congr lean_s224 lean_s229
let lean_s231 := by timed congr lean_s224 lean_s32
let lean_s232 := by timed congr lean_s224 lean_s34
let lean_s233 := by timed congr lean_s232 lean_s36
let lean_s234 := by timed congr lean_s231 lean_s233
let lean_s235 := by timed congr lean_s230 lean_s234
let lean_s236 := by timed congr lean_s228 lean_s235
let lean_s237 := by timed congr lean_s227 lean_s236
have lean_s238 : (Eq (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And True (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))))) := by timed congr lean_s226 lean_s237
have lean_s239 : (Eq (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) := by timed Eq.trans lean_s238 lean_r23
let lean_s240 := by timed flipCongrArg lean_s239 [Or]
have lean_s241 : (Eq And And) := by timed rfl
let lean_s242 := by timed congr lean_s241 lean_s48
let lean_s243 := by timed congr lean_s241 lean_s50
have lean_s244 : (Eq (binrel% GE.ge xx5f2 (Int.ofNat 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) := by timed rfl
let lean_s245 := by timed congr lean_s241 lean_s244
let lean_s246 := by timed congr lean_s241 lean_r10
have lean_s247 : (Eq (Eq xx5f1 xx5f2) (Eq xx5f1 xx5f2)) := by timed rfl
let lean_s248 := by timed congr lean_s241 lean_s247
have lean_s249 : (Eq (Eq xx5f2 xx5f4) (Eq xx5f2 xx5f4)) := by timed rfl
let lean_s250 := by timed congr lean_s241 lean_s249
let lean_s251 := by timed flipCongrArg lean_s73 [Eq]
have lean_s252 : (Eq (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f3 xx5f2)) := by timed congr lean_s251 lean_r29
have lean_s253 : (Eq (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f2 xx5f3)) := by timed Eq.trans lean_s252 lean_r26
let lean_s254 := by timed congr lean_s241 lean_s253
let lean_s255 := by timed congr lean_s254 lean_r61
let lean_s256 := by timed congr lean_s250 lean_s255
let lean_s257 := by timed congr lean_s248 lean_s256
let lean_s258 := by timed congr lean_s246 lean_s257
let lean_s259 := by timed congr lean_s245 lean_s258
let lean_s260 := by timed congr lean_s243 lean_s259
have lean_s261 : (Eq (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq False xx5f9)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) := by timed congr lean_s242 lean_s260
have lean_s262 : (Eq (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq False xx5f9))))))))) (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9)))))))))) := by timed congr lean_s240 lean_s261
let lean_s263 := by timed congr lean_s215 lean_s262
have lean_s264 : (Eq (binrel% GE.ge xx5f4 (Int.ofNat 60)) (binrel% GE.ge xx5f4 (Int.ofNat 60))) := by timed rfl
let lean_s265 := by timed congr lean_s215 lean_s264
have lean_s266 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))) := by timed rfl
let lean_s267 := by timed congr lean_s265 lean_s266
let lean_s268 := by timed congr lean_s263 lean_s267
let lean_s269 := by timed congr lean_s223 lean_s268
let lean_s270 := by timed congr lean_s222 lean_s269
let lean_s271 := by timed congr lean_s220 lean_s270
let lean_s272 := by timed congr lean_s219 lean_s271
have lean_s273 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (Not False) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq False xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And True (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And True (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))))) := by timed congr lean_s217 lean_s272
have lean_s274 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (Not False) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not False) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte False (Rat.ofInt 0) xx5f2 Rat)) (Eq False xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) := by timed Eq.trans lean_s273 lean_r19
have lean_s275 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (Not xx5f0) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And (Not xx5f0) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0)))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f3 (smtIte xx5f0 (Rat.ofInt 0) xx5f2 Rat)) (Eq xx5f0 xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (Eq xx5f8 (Rat.ofInt 0)) (And (Not xx5f5) (And xx5f9 (And (Eq xx5f1 (Rat.ofInt 0)) (And (Eq xx5f4 (Rat.ofInt 0)) (Eq xx5f3 (Rat.ofInt 0))))))) (And (Eq xx5f8 (Rat.ofInt 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (Eq xx5f1 xx5f2) (And (Eq xx5f2 xx5f4) (And (Eq xx5f2 xx5f3) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) := by timed Eq.trans lean_s214 lean_s274
let lean_s276 := by timed Eq.trans lean_s123 lean_s275
let lean_s277 := by timed Eq.trans lean_s276 lean_h0
have lean_s278 : (Eq And And) := by timed rfl
let lean_s279 := by timed congr lean_s278 lean_s216
let lean_s280 := by timed congr lean_s278 lean_s218
let lean_s281 := by timed congr lean_s278 lean_s221
let lean_s282 := by timed flipCongrArg lean_r33 [Or]
have lean_s283 : (Eq (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) (And (Not xx5f5) (And xx5f9 (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (binrel% GE.ge xx5f1 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Int.ofNat 0))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge xx5f8 (Int.ofNat 2))) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0))) (Not xx5f9))))))))) (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9)))))))))))))) := by timed congr lean_s282 lean_r17
let lean_s284 := by timed congr lean_s278 lean_s283
let lean_s285 := by timed congr lean_s278 lean_s264
let lean_s286 := by timed congr lean_s285 lean_s266
let lean_s287 := by timed congr lean_s284 lean_s286
let lean_s288 := by timed congr lean_s281 lean_s287
let lean_s289 := by timed congr lean_s280 lean_s288
have lean_s290 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) (And (Not xx5f5) (And xx5f9 (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (binrel% GE.ge xx5f1 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Int.ofNat 0))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge xx5f8 (Int.ofNat 2))) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0))) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) := by timed congr lean_s279 lean_s289
have lean_s291 : (Eq And And) := by timed rfl
have lean_s292 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s293 := by timed flipCongrArg lean_s292 [HMul.hMul]
have lean_s294 : (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed rfl
let lean_s295 := by timed flipCongrArg lean_s294 [Eq]
have lean_s296 : (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed rfl
have lean_s297 : (Eq (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s295 lean_s296
let lean_s298 := by timed Eq.trans lean_r32 lean_s297
have lean_s299 : (Eq (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) True) := by timed Eq.trans lean_s298 lean_r5
have lean_s300 : (Eq (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed trueElim lean_s299
have lean_s301 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s293 lean_s300
let lean_s302 := by timed flipCongrArg lean_s301 [GE.ge]
have lean_s303 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s302 lean_s292
let lean_s304 := by timed congr lean_s291 lean_s303
let lean_s305 := by timed flipCongrArg lean_s300 [GE.ge]
have lean_s306 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s307 : (Eq (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0))) := by timed congr lean_s305 lean_s306
let lean_s308 := by timed congr lean_s291 lean_s307
have lean_s309 : (Eq (binrel% GE.ge xx5f6 (Int.ofNat 0)) (binrel% GE.ge xx5f6 (Int.ofNat 0))) := by timed rfl
let lean_s310 := by timed congr lean_s291 lean_s309
have lean_s311 : (Eq (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9)))))))))))))) := by timed rfl
let lean_s312 := by timed congr lean_s291 lean_s311
have lean_s313 : (Eq (binrel% GE.ge xx5f4 (Int.ofNat 60)) (binrel% GE.ge xx5f4 (Int.ofNat 60))) := by timed rfl
let lean_s314 := by timed congr lean_s291 lean_s313
have lean_s315 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))) := by timed rfl
let lean_s316 := by timed congr lean_s314 lean_s315
let lean_s317 := by timed congr lean_s312 lean_s316
let lean_s318 := by timed congr lean_s310 lean_s317
let lean_s319 := by timed congr lean_s308 lean_s318
have lean_s320 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) := by timed congr lean_s304 lean_s319
have lean_s321 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (binrel% GE.ge xx5f8 (Int.ofNat 0))) (And (Not xx5f5) (And xx5f9 (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (binrel% GE.ge xx5f1 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Int.ofNat 0))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (binrel% GE.ge xx5f8 (Int.ofNat 2))) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0))) (Not xx5f9))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) := by timed Eq.trans lean_s290 lean_s320
have lean_s322 : (Eq (And (And (And (And (And (And (binrel% LE.le xx5f7 (Rat.ofInt 1)) (binrel% GE.ge xx5f7 (Rat.ofInt 0))) (Not xx5f0)) (Not (binrel% LT.lt xx5f6 (Rat.ofInt 0)))) (Eq xx5f7 (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Or (Or (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 0)) (Not xx5f5)) (Not xx5f0)) xx5f9) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 1)) (Not xx5f5)) xx5f0) (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 30)))) (Not xx5f9)) (Eq xx5f1 (Rat.ofInt 0))) (Eq xx5f4 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 0)))) (And (And (And (And (And (And (And (Eq xx5f8 (Rat.ofInt 2)) xx5f5) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or xx5f0 (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 1)))) (Eq xx5f1 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f4 (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2))) (Eq xx5f3 (smtIte (Not xx5f0) (binrel% HAdd.hAdd (Rat.ofInt 0) xx5f2) (Rat.ofInt 0) Rat))) (Eq xx5f9 xx5f0)))) (Or (And (Not (binrel% LT.lt xx5f4 (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul xx5f3 (Rat.ofInt 20)) xx5f4))) (And (Not (binrel% LT.lt (Rat.ofInt 0) (Rat.ofInt 60))) (Not (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 0) (Rat.ofInt 20)) (Rat.ofInt 0)))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0))))))))) := by timed Eq.trans lean_s277 lean_s321
have lean_s323 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f5 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f6 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) xx5f4)) (Int.ofNat 0)))))))) := by timed eqResolve lean_a65 lean_s322
have lean_s324 : (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) := by andElim lean_s323, 3
have lean_s325 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)), (binrel% GE.ge xx5f8 (Int.ofNat 0)), (Not xx5f5), xx5f9, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)), (binrel% GE.ge xx5f1 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)), (binrel% GE.ge xx5f4 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)), (binrel% GE.ge xx5f3 (Int.ofNat 0))] 6
have lean_s326 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))))) := by permutateOr lean_s325, [1, 0], (- 1)
have lean_s327 : (Or (Not (binrel% GE.ge xx5f4 (Int.ofNat 60))) (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0))) False)) :=
  (scope (fun lean_a70 : (binrel% GE.ge xx5f4 (Int.ofNat 60)) =>
    (scope (fun lean_a71 : (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) =>
      have lean_s327 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r62
      have lean_s328 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (binrel% LE.le xx5f4 (Rat.ofInt 0))) := by timed Eq.symm lean_r60
      have lean_s329 : (binrel% LE.le xx5f4 (Rat.ofInt 0)) := by timed eqResolve lean_a71 lean_s328
      have lean_s330 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le xx5f4 (Rat.ofInt 0))) := by timed And.intro lean_s327 lean_s329
      have lean_s331 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le xx5f4 (Rat.ofInt 0))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)))) := by arithMulPos [xx5f4, (Rat.ofInt 0), (Rat.ofInt 1)], 1
      have lean_s332 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0))) := by timed modusPonens lean_s330 lean_s331
      have lean_s333 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r14
      have lean_s334 : (Eq (binrel% GE.ge xx5f4 (Int.ofNat 60)) (binrel% GE.ge xx5f4 (Rat.ofInt 60))) := by timed Eq.symm lean_r20
      have lean_s335 : (binrel% GE.ge xx5f4 (Rat.ofInt 60)) := by timed eqResolve lean_a70 lean_s334
      have lean_s336 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Rat.ofInt 60))) := by timed And.intro lean_s333 lean_s335
      have lean_s337 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge xx5f4 (Rat.ofInt 60))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)))) := by arithMulNeg [xx5f4, (Rat.ofInt 60), (Neg.neg (Rat.ofInt 1))], 3
      have lean_s338 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60))) := by timed modusPonens lean_s336 lean_s337
      have lean_s339 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)))) := by sumBounds [lean_s332, lean_s338]
      let lean_s340 := by timed flipCongrArg lean_r59 [HAdd.hAdd]
      have lean_s341 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4)) (binrel% HAdd.hAdd xx5f4 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4))) := by timed congr lean_s340 lean_r28
      have lean_s342 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4)) (Rat.ofInt 0)) := by timed Eq.trans lean_s341 lean_r58
      let lean_s343 := by timed flipCongrArg lean_s342 [LE.le]
      let lean_s344 := by timed flipCongrArg lean_r54 [HAdd.hAdd]
      have lean_s345 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60))) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 60)))) := by timed congr lean_s344 lean_r21
      have lean_s346 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60))) (Neg.neg (Rat.ofInt 60))) := by timed Eq.trans lean_s345 lean_r56
      have lean_s347 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 60)))) := by timed congr lean_s343 lean_s346
      have lean_s348 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f4)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 60)))) False) := by timed Eq.trans lean_s347 lean_r55
      show False from by timed eqResolve lean_s339 lean_s348
  ))))
have lean_s328 : (Not (And (binrel% GE.ge xx5f4 (Int.ofNat 60)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)))) := by liftOrNToNeg lean_s327
have lean_s329 : (Or (Not (binrel% GE.ge xx5f4 (Int.ofNat 60))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)))) := by timed flipNotAnd lean_s328 [(binrel% GE.ge xx5f4 (Int.ofNat 60)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0))]
have lean_s330 : (binrel% GE.ge xx5f4 (Int.ofNat 60)) := by andElim lean_s323, 4
have lean_s331 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0))) := by R2 lean_s329, lean_s330, (binrel% GE.ge xx5f4 (Int.ofNat 60)), [(- 1), 0]
have lean_s332 : (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0)))))))))))) := by R1 lean_s326, lean_s331, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)), [(- 1), 0]
have lean_s333 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9)))))))))))) := by R1 lean_s324, lean_s332, (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Int.ofNat 0)) (And (binrel% GE.ge xx5f8 (Int.ofNat 0)) (And (Not xx5f5) (And xx5f9 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) (Int.ofNat 0)) (And (binrel% GE.ge xx5f1 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge xx5f4 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3) (Int.ofNat 0)) (binrel% GE.ge xx5f3 (Int.ofNat 0))))))))))), [(- 1), 0]
have lean_s334 : (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) := by R2 lean_s5, lean_s333, (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9)))))))))))), [(- 1), 0]
let lean_s335 := by R2 lean_s3, lean_s334, (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)), [(- 1), 0]
have lean_s336 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9))))))))))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1)))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))), (binrel% GE.ge xx5f8 (Int.ofNat 2)), xx5f5, (binrel% GE.ge xx5f2 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)), (Not xx5f9)] 4
have lean_s337 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9)))))))))))))) := by permutateOr lean_s336, [1, 0], (- 1)
have lean_s338 : (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) := by R2 lean_s337, lean_s333, (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f8) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge xx5f8 (Int.ofNat 2)) (And xx5f5 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f1) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f4) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f4)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f3) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f3)) (Int.ofNat 0)) (Not xx5f9)))))))))))), [(- 1), 0]
let lean_s339 := by R2 lean_s335, lean_s338, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 1))), [(- 1), 0]
exact (show False from by R2 lean_s339, lean_s330, (binrel% GE.ge xx5f4 (Int.ofNat 60)), [0, 0])


