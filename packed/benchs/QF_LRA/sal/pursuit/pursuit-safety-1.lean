-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5f10 : Rat}
variable {xx5f12 : Rat}
variable {xx5f2 : Rat}
variable {xx5f8 : Prop}
variable {xx5f11 : Rat}
variable {xx5f1 : Prop}
variable {xx5f0 : Prop}
variable {xx5f9 : Rat}
variable {xx5f5 : Prop}
variable {xx5f4 : Prop}
variable {xx5f4 : Prop}
variable {xx5f5 : Prop}
variable {xx5f0 : Prop}
variable {xx5f1 : Prop}
variable {xx5f6 : Rat}
variable {xx5f3 : Rat}
variable {xx5f11 : Rat}
variable {xx5f2 : Rat}
variable {xx5f7 : Rat}
variable {xx5f6 : Rat}
variable {xx5f8 : Prop}
variable {xx5f12 : Rat}
variable {xx5f7 : Rat}
variable {xx5f10 : Rat}
variable {xx5f3 : Rat}
variable {xx5f9 : Rat}

theorem th0 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (binrel% GE.ge xx5f12 (Int.ofNat 0))) (And (Not xx5f8) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% GE.ge xx5f6 (Int.ofNat 10))) (And (Not xx5f4) (Not xx5f5))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (binrel% GE.ge xx5f12 (Int.ofNat 8))) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0))) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) xx5f6) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6)) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)) (Rat.ofInt 10)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f11))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) → (Eq (And (Not False) False) False) → (Eq (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40))))) → (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And True (And True (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5)))))))) → (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (binrel% GE.ge xx5f12 (Int.ofNat 0))) (And (Not xx5f8) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% GE.ge xx5f6 (Int.ofNat 10))) (And (Not xx5f4) (Not xx5f5))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5)))))))))))) → (Eq (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) → (Eq (Or (Not False) False) (Not False)) → (Eq (Or False (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) → (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))))) → (Eq (smtIte False (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20))) → (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And True (And True (And True (And True (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))) → (Eq (Eq xx5f7 (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7))) → (Eq (smtIte False (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) → (Eq (Eq xx5f6 (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)))) → (Eq (Or (Eq xx5f3 xx5f6) False) (Eq xx5f3 xx5f6)) → (Eq (Eq xx5f5 xx5f1) (Eq xx5f1 xx5f5)) → (Eq (smtIte False (Rat.ofInt 10) xx5f11 Rat) xx5f11) → (Eq (binrel% HMul.hMul xx5f2 (Rat.ofInt 5)) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) → (Eq (binrel% GE.ge (Neg.neg (Rat.ofInt 30)) (Rat.ofInt 0)) False) → (Eq (Or False False) False) → (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And True (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) → (Eq (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And True (And True (And True (And True (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))) → (Eq (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) True) → (Eq (Eq False xx5f5) (Not xx5f5)) → (Eq (Eq xx5f4 xx5f0) (Eq xx5f0 xx5f4)) → (Eq (And (Eq xx5f12 (Rat.ofInt 4)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And False (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) → (Eq (binrel% LE.le (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f6))) → (Eq (binrel% GE.ge xx5f6 (Rat.ofInt 20)) (binrel% GE.ge xx5f6 (Int.ofNat 20))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or False (Or False (Or False (Or False (Or False (Or False (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f6) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)))) (Rat.ofInt 0)) → (Eq (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) → (Eq (Eq xx5f6 xx5f6) True) → (Eq (Not (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) (binrel% GE.ge xx5f2 (Int.ofNat 0))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 50) (Neg.neg (Rat.ofInt 120))) (Neg.neg (Rat.ofInt 70))) → (Eq (Eq False xx5f4) (Not xx5f4)) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f12 (Rat.ofInt 3)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And xx5f4 (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) (Rat.ofInt 20)) → (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))) (And True (And (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And True (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))))))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))))))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) → (Eq (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) False) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) → (Eq (Eq (Rat.ofInt 2) (Rat.ofInt 2)) True) → (Eq (And False True) False) → (Eq (binrel% LT.lt xx5f11 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f11 (Rat.ofInt 0)))) → (Eq (smtIte False (Rat.ofInt 0) (Rat.ofInt 10) Rat) (Rat.ofInt 10)) → (Eq (binrel% GE.ge xx5f11 (Rat.ofInt 0)) (binrel% GE.ge xx5f11 (Int.ofNat 0))) → (Eq (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (Or False (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))))))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2))) → (Eq (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 4)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2)))))))))))) → (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)))) → (Eq (Eq xx5f0 False) (Not xx5f0)) → (Eq (Not False) True) → (Eq (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (Or xx5f0 (Or xx5f1 (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))))) → (Eq (binrel% GE.ge xx5f2 (Rat.ofInt 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)))) → (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)))) False) → (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5)) (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) → (Eq (binrel% GE.ge (binrel% HMul.hMul (Int.ofNat 2) xx5f11) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20))) → (Eq (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) True) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) → (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f6) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) → (Eq (binrel% LE.le xx5f6 (Rat.ofInt 10)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10)))) → (Eq (And (Eq xx5f12 (Rat.ofInt 5)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And False (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (And (Eq xx5f1 xx5f5) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) → (Eq (Eq (Rat.ofInt 10) (Rat.ofInt 40)) False) → (Eq (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) → (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (And (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (And (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (Rat.ofInt 50)) → (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (binrel% GE.ge xx5f12 (Int.ofNat 8))) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0))) (And (Not xx5f4) (Not xx5f5))))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) → (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f2))) → (Eq (smtIte False (Rat.ofInt 40) (Rat.ofInt 10) Rat) (Rat.ofInt 10)) → (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And True (And True (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And True (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (And True (And True (Or (Not xx5f5) (Not xx5f4)))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) → (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 10))) False) → (Eq (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (Or (Not False) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) → (Eq (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 120)) (Neg.neg (Rat.ofInt 120))) → (Eq (Or (Not False) (Not False)) (Not False)) → (Eq (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2)) (Not (binrel% GE.ge (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20)) (Neg.neg (Rat.ofInt 20))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)) (Rat.ofInt 40)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) → (Eq (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6)) (Rat.ofInt 0)) → (Eq (Not True) False) → (Eq (Not (Not (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))))) (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4)))) → (Eq (Eq (Rat.ofInt 20) (Rat.ofInt 10)) False) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) (Rat.ofInt 0)) (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4)))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0))) → (Eq (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))) (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) → (Eq (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (Or (Not xx5f0) (Or xx5f1 (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))))) → (Eq (binrel% LT.lt xx5f2 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f2 (Rat.ofInt 0)))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 70)) (Rat.ofInt 40)) (Neg.neg (Rat.ofInt 30))) → (Eq (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6)) (Rat.ofInt 120)) → (Eq (Eq (Rat.ofInt 20) (Rat.ofInt 40)) False) → (Eq (binrel% LE.le xx5f2 (Rat.ofInt 5)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) → (Eq (Not (Not (binrel% GE.ge xx5f11 (Int.ofNat 0)))) (binrel% GE.ge xx5f11 (Int.ofNat 0))) → (Eq (Eq (Rat.ofInt 20) (Rat.ofInt 0)) False) → (Eq (And (Eq xx5f12 (Rat.ofInt 6)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And True (And True (And True (And False (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) False) → (Eq (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 6)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))))) → (Eq (Eq (Rat.ofInt 10) (Rat.ofInt 0)) False) → (Eq (Not (Not (binrel% GE.ge xx5f9 (Int.ofNat 0)))) (binrel% GE.ge xx5f9 (Int.ofNat 0))) → (Eq (smtIte False (Rat.ofInt 40) (Rat.ofInt 20) Rat) (Rat.ofInt 20)) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (Or False (Or False False)) False) → (Eq (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40))))) → (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 5)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2)))))))))))) → (Eq (And (Eq xx5f12 (Rat.ofInt 3)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And True (And True (And True (And False (And xx5f4 (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) False) → (Eq (And (Eq xx5f12 (Rat.ofInt 2)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And False (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) → (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 2)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2)))))))))))) → (Eq (And (Eq xx5f12 (Rat.ofInt 1)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And False (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (And (Eq xx5f1 xx5f5) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 10) (Neg.neg (Rat.ofInt 20))) (Neg.neg (Rat.ofInt 10))) → (Eq (smtIte False (Rat.ofInt 0) (Rat.ofInt 20) Rat) (Rat.ofInt 20)) → (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 1)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2)))))))))))) → (Eq (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Rat.ofInt 4))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4))) → (Eq (binrel% GE.ge xx5f9 (Rat.ofInt 0)) (binrel% GE.ge xx5f9 (Int.ofNat 0))) → (Eq (Or True (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) True) → (Eq (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 0)) True) → (Eq (binrel% LT.lt xx5f9 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f9 (Rat.ofInt 0)))) → (Eq (binrel% GE.ge xx5f10 (Rat.ofInt 0)) (binrel% GE.ge xx5f10 (Int.ofNat 0))) → (Eq (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1)))) → (Eq (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge xx5f10 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0)))) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0)))) (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))) (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10)))) (Or (Not xx5f1) (Not xx5f0))) (Or (Not xx5f5) (Not xx5f4))) (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f10 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0))) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0))) (And (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10))) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4))))))))))))) → (Eq (Eq xx5f1 False) (Not xx5f1)) → (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge xx5f10 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0)))) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0)))) (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))) (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10)))) (Or (Not xx5f1) (Not xx5f0))) (Or (Not xx5f5) (Not xx5f4))) → False :=
fun lean_h0 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (binrel% GE.ge xx5f12 (Int.ofNat 0))) (And (Not xx5f8) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% GE.ge xx5f6 (Int.ofNat 10))) (And (Not xx5f4) (Not xx5f5))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (binrel% GE.ge xx5f12 (Int.ofNat 8))) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0))) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) => -- PREPROCESS
fun lean_r1 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) xx5f6) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6)) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)) (Rat.ofInt 10)) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f11))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (And (Not False) False) False) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40))))) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And True (And True (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (binrel% GE.ge xx5f12 (Int.ofNat 0))) (And (Not xx5f8) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% GE.ge xx5f6 (Int.ofNat 10))) (And (Not xx5f4) (Not xx5f5))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (Or (Not False) False) (Not False)) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq (Or False (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (smtIte False (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20))) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And True (And True (And True (And True (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq (Eq xx5f7 (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (smtIte False (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (Eq xx5f6 (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (Or (Eq xx5f3 xx5f6) False) (Eq xx5f3 xx5f6)) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq (Eq xx5f5 xx5f1) (Eq xx5f1 xx5f5)) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq (smtIte False (Rat.ofInt 10) xx5f11 Rat) xx5f11) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (binrel% HMul.hMul xx5f2 (Rat.ofInt 5)) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% GE.ge (Neg.neg (Rat.ofInt 30)) (Rat.ofInt 0)) False) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (Or False False) False) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And True (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And True (And True (And True (And True (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r29 : (Eq (Eq False xx5f5) (Not xx5f5)) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (Eq xx5f4 xx5f0) (Eq xx5f0 xx5f4)) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq (And (Eq xx5f12 (Rat.ofInt 4)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And False (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq (binrel% LE.le (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f6))) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% GE.ge xx5f6 (Rat.ofInt 20)) (binrel% GE.ge xx5f6 (Int.ofNat 20))) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r37 : (Eq (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or False (Or False (Or False (Or False (Or False (Or False (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f6) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq (Eq xx5f6 xx5f6) True) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq (Not (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) (binrel% GE.ge xx5f2 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 50) (Neg.neg (Rat.ofInt 120))) (Neg.neg (Rat.ofInt 70))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (Eq False xx5f4) (Not xx5f4)) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f12 (Rat.ofInt 3)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And xx5f4 (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) (Rat.ofInt 20)) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))) (And True (And (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And True (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2))) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f2) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq (Eq (Rat.ofInt 2) (Rat.ofInt 2)) True) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq (And False True) False) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq (binrel% LT.lt xx5f11 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f11 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq (smtIte False (Rat.ofInt 0) (Rat.ofInt 10) Rat) (Rat.ofInt 10)) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq (binrel% GE.ge xx5f11 (Rat.ofInt 0)) (binrel% GE.ge xx5f11 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (Or False (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2))) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 4)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq (Eq xx5f0 False) (Not xx5f0)) => -- THEORY_REWRITE_BOOL
fun lean_r65 : (Eq (Not False) True) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (Or xx5f0 (Or xx5f1 (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))))) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq (binrel% GE.ge xx5f2 (Rat.ofInt 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)))) False) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5)) (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6))) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Int.ofNat 2) xx5f11) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20))) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) True) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f6) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq (binrel% LE.le xx5f6 (Rat.ofInt 10)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq (And (Eq xx5f12 (Rat.ofInt 5)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And False (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (And (Eq xx5f1 xx5f5) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq (Eq (Rat.ofInt 10) (Rat.ofInt 40)) False) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (And (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (And (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (Rat.ofInt 50)) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (binrel% GE.ge xx5f12 (Int.ofNat 8))) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0))) (And (Not xx5f4) (Not xx5f5))))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f2))) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq (smtIte False (Rat.ofInt 40) (Rat.ofInt 10) Rat) (Rat.ofInt 10)) => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And True (And True (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And True (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (And True (And True (Or (Not xx5f5) (Not xx5f4)))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r86 : (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 10))) False) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (Or (Not False) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 120)) (Neg.neg (Rat.ofInt 120))) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq (Or (Not False) (Not False)) (Not False)) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2)) (Not (binrel% GE.ge (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2)))) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20)) (Neg.neg (Rat.ofInt 20))) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)) (Rat.ofInt 40)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq (Not (Not (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))))) (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4)))) => -- THEORY_REWRITE_BOOL
fun lean_r97 : (Eq (Eq (Rat.ofInt 20) (Rat.ofInt 10)) False) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) (Rat.ofInt 0)) (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))) (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) => -- THEORY_REWRITE_BOOL
fun lean_r101 : (Eq (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (Or (Not xx5f0) (Or xx5f1 (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))))) => -- THEORY_REWRITE_BOOL
fun lean_r102 : (Eq (binrel% LT.lt xx5f2 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f2 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 70)) (Rat.ofInt 40)) (Neg.neg (Rat.ofInt 30))) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6)) (Rat.ofInt 120)) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq (Eq (Rat.ofInt 20) (Rat.ofInt 40)) False) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq (binrel% LE.le xx5f2 (Rat.ofInt 5)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq (Not (Not (binrel% GE.ge xx5f11 (Int.ofNat 0)))) (binrel% GE.ge xx5f11 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r108 : (Eq (Eq (Rat.ofInt 20) (Rat.ofInt 0)) False) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq (And (Eq xx5f12 (Rat.ofInt 6)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And True (And True (And True (And False (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 6)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r111 : (Eq (Eq (Rat.ofInt 10) (Rat.ofInt 0)) False) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq (Not (Not (binrel% GE.ge xx5f9 (Int.ofNat 0)))) (binrel% GE.ge xx5f9 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r113 : (Eq (smtIte False (Rat.ofInt 40) (Rat.ofInt 20) Rat) (Rat.ofInt 20)) => -- THEORY_REWRITE_BOOL
fun lean_r114 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r115 : (Eq (Or False (Or False False)) False) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40))))) => -- THEORY_REWRITE_BOOL
fun lean_r117 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 5)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r118 : (Eq (And (Eq xx5f12 (Rat.ofInt 3)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And True (And True (And True (And False (And xx5f4 (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r119 : (Eq (And (Eq xx5f12 (Rat.ofInt 2)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And False (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r120 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 2)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r121 : (Eq (And (Eq xx5f12 (Rat.ofInt 1)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And False (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (And (Eq xx5f1 xx5f5) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r122 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 10) (Neg.neg (Rat.ofInt 20))) (Neg.neg (Rat.ofInt 10))) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq (smtIte False (Rat.ofInt 0) (Rat.ofInt 20) Rat) (Rat.ofInt 20)) => -- THEORY_REWRITE_BOOL
fun lean_r124 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (And (Eq xx5f12 (Rat.ofInt 1)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r126 : (Eq (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r127 : (Eq (binrel% LE.le (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Rat.ofInt 4))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq (binrel% GE.ge xx5f9 (Rat.ofInt 0)) (binrel% GE.ge xx5f9 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq (Or True (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r130 : (Eq (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r131 : (Eq (binrel% LT.lt xx5f9 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f9 (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq (binrel% GE.ge xx5f10 (Rat.ofInt 0)) (binrel% GE.ge xx5f10 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge xx5f10 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0)))) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0)))) (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))) (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10)))) (Or (Not xx5f1) (Not xx5f0))) (Or (Not xx5f5) (Not xx5f4))) (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f10 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0))) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0))) (And (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10))) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r135 : (Eq (Eq xx5f1 False) (Not xx5f1)) => -- THEORY_REWRITE_BOOL
fun lean_a136 : (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge xx5f10 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0)))) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0)))) (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))) (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10)))) (Or (Not xx5f1) (Not xx5f0))) (Or (Not xx5f5) (Not xx5f4))) => by
have lean_s0 : (Or (Not (binrel% GE.ge xx5f6 (Int.ofNat 20))) (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10)))) False)) :=
  (scope (fun lean_a137 : (binrel% GE.ge xx5f6 (Int.ofNat 20)) =>
    (scope (fun lean_a138 : (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) =>
      have lean_s0 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r36
      have lean_s1 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% LE.le xx5f6 (Rat.ofInt 10))) := by timed Eq.symm lean_r76
      have lean_s2 : (binrel% LE.le xx5f6 (Rat.ofInt 10)) := by timed eqResolve lean_a138 lean_s1
      have lean_s3 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le xx5f6 (Rat.ofInt 10))) := by timed And.intro lean_s0 lean_s2
      have lean_s4 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le xx5f6 (Rat.ofInt 10))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)))) := by arithMulPos [xx5f6, (Rat.ofInt 10), (Rat.ofInt 1)], 1
      have lean_s5 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10))) := by timed modusPonens lean_s3 lean_s4
      have lean_s6 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r114
      have lean_s7 : (Eq (binrel% GE.ge xx5f6 (Int.ofNat 20)) (binrel% GE.ge xx5f6 (Rat.ofInt 20))) := by timed Eq.symm lean_r34
      have lean_s8 : (binrel% GE.ge xx5f6 (Rat.ofInt 20)) := by timed eqResolve lean_a137 lean_s7
      have lean_s9 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge xx5f6 (Rat.ofInt 20))) := by timed And.intro lean_s6 lean_s8
      have lean_s10 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge xx5f6 (Rat.ofInt 20))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20)))) := by arithMulNeg [xx5f6, (Rat.ofInt 20), (Neg.neg (Rat.ofInt 1))], 3
      have lean_s11 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20))) := by timed modusPonens lean_s9 lean_s10
      have lean_s12 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20)))) := by sumBounds [lean_s5, lean_s11]
      let lean_s13 := by timed flipCongrArg lean_r1 [HAdd.hAdd]
      have lean_s14 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6))) := by timed congr lean_s13 lean_r2
      have lean_s15 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6)) (Rat.ofInt 0)) := by timed Eq.trans lean_s14 lean_r94
      let lean_s16 := by timed flipCongrArg lean_s15 [LE.le]
      let lean_s17 := by timed flipCongrArg lean_r3 [HAdd.hAdd]
      have lean_s18 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20))) (binrel% HAdd.hAdd (Rat.ofInt 10) (Neg.neg (Rat.ofInt 20)))) := by timed congr lean_s17 lean_r92
      have lean_s19 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20))) (Neg.neg (Rat.ofInt 10))) := by timed Eq.trans lean_s18 lean_r122
      have lean_s20 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20)))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 10)))) := by timed congr lean_s16 lean_s19
      have lean_s21 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) xx5f6) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f6)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 20)))) False) := by timed Eq.trans lean_s20 lean_r86
      show False from by timed eqResolve lean_s12 lean_s21
  ))))
have lean_s1 : (Not (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (binrel% GE.ge xx5f6 (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))))) := by timed flipNotAnd lean_s1 [(binrel% GE.ge xx5f6 (Int.ofNat 20)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10)))]
have lean_s3 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5)))))))))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10)))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)), (binrel% GE.ge xx5f12 (Int.ofNat 0)), (Not xx5f8), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)), (binrel% GE.ge xx5f7 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))), (binrel% GE.ge xx5f6 (Int.ofNat 20)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))), (binrel% GE.ge xx5f6 (Int.ofNat 10)), (Not xx5f4), (Not xx5f5)] 7
have lean_s4 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))))) := by permutateOr lean_s3, [1, 0], (- 1)
have lean_s5 : (Eq And And) := by timed rfl
let lean_s6 := by timed congr lean_s5 lean_r133
let lean_s7 := by timed congr lean_s5 lean_r132
have lean_s8 : (Eq (Not xx5f0) (Not xx5f0)) := by timed rfl
let lean_s9 := by timed congr lean_s5 lean_s8
have lean_s10 : (Eq (Not xx5f1) (Not xx5f1)) := by timed rfl
let lean_s11 := by timed congr lean_s5 lean_s10
have lean_s12 : (Eq (Not (binrel% GE.ge xx5f9 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f9 (Int.ofNat 0)))) := by timed flipCongrArg lean_r128 [Not]
have lean_s13 : (Eq (binrel% LT.lt xx5f9 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f9 (Int.ofNat 0)))) := by timed Eq.trans lean_r131 lean_s12
have lean_s14 : (Eq (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f9 (Int.ofNat 0))))) := by timed flipCongrArg lean_s13 [Not]
have lean_s15 : (Eq (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0))) (binrel% GE.ge xx5f9 (Int.ofNat 0))) := by timed Eq.trans lean_s14 lean_r112
let lean_s16 := by timed congr lean_s5 lean_s15
have lean_s17 : (Eq (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed rfl
let lean_s18 := by timed congr lean_s5 lean_s17
have lean_s19 : (Eq (Not (binrel% GE.ge xx5f11 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f11 (Int.ofNat 0)))) := by timed flipCongrArg lean_r58 [Not]
have lean_s20 : (Eq (binrel% LT.lt xx5f11 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f11 (Int.ofNat 0)))) := by timed Eq.trans lean_r56 lean_s19
have lean_s21 : (Eq (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f11 (Int.ofNat 0))))) := by timed flipCongrArg lean_s20 [Not]
have lean_s22 : (Eq (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0))) (binrel% GE.ge xx5f11 (Int.ofNat 0))) := by timed Eq.trans lean_s21 lean_r107
let lean_s23 := by timed congr lean_s5 lean_s22
have lean_s24 : (Eq Or Or) := by timed rfl
have lean_s25 : (Eq And And) := by timed rfl
have lean_s26 : (Eq (Eq xx5f12 (Rat.ofInt 0)) (Eq xx5f12 (Rat.ofInt 0))) := by timed rfl
let lean_s27 := by timed congr lean_s25 lean_s26
have lean_s28 : (Eq (Not xx5f8) (Not xx5f8)) := by timed rfl
let lean_s29 := by timed congr lean_s25 lean_s28
let lean_s30 := by timed congr lean_s25 lean_s8
let lean_s31 := by timed congr lean_s25 lean_s10
let lean_s32 := by timed congr lean_s25 lean_r54
have lean_s33 : (Eq (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (Not False)) := by timed flipCongrArg lean_r108 [Not]
have lean_s34 : (Eq (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) True) := by timed Eq.trans lean_s33 lean_r65
let lean_s35 := by timed congr lean_s25 lean_s34
have lean_s36 : (Eq (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (Not False)) := by timed flipCongrArg lean_r105 [Not]
have lean_s37 : (Eq (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) True) := by timed Eq.trans lean_s36 lean_r65
let lean_s38 := by timed congr lean_s25 lean_s37
let lean_s39 := by timed flipCongrArg lean_r81 [HAdd.hAdd]
have lean_s40 : (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) := by timed rfl
let lean_s41 := by timed flipCongrArg lean_s40 [HMul.hMul]
have lean_s42 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 120))) := by timed congr lean_s41 lean_r104
have lean_s43 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Neg.neg (Rat.ofInt 120))) := by timed Eq.trans lean_s42 lean_r89
have lean_s44 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6)))) (binrel% HAdd.hAdd (Rat.ofInt 50) (Neg.neg (Rat.ofInt 120)))) := by timed congr lean_s39 lean_s43
have lean_s45 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6)))) (Neg.neg (Rat.ofInt 70))) := by timed Eq.trans lean_s44 lean_r42
have lean_s46 : (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Neg.neg (Rat.ofInt 70))) := by timed Eq.trans lean_r13 lean_s45
let lean_s47 := by timed flipCongrArg lean_s46 [HAdd.hAdd]
have lean_s48 : (Eq (Rat.ofInt 40) (Rat.ofInt 40)) := by timed rfl
have lean_s49 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (binrel% HAdd.hAdd (Neg.neg (Rat.ofInt 70)) (Rat.ofInt 40))) := by timed congr lean_s47 lean_s48
have lean_s50 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Neg.neg (Rat.ofInt 30))) := by timed Eq.trans lean_s49 lean_r103
let lean_s51 := by timed flipCongrArg lean_s50 [GE.ge]
have lean_s52 : (Eq (Rat.ofInt 0) (Rat.ofInt 0)) := by timed rfl
have lean_s53 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (binrel% GE.ge (Neg.neg (Rat.ofInt 30)) (Rat.ofInt 0))) := by timed congr lean_s51 lean_s52
have lean_s54 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) False) := by timed Eq.trans lean_s53 lean_r24
have lean_s55 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not False)) := by timed flipCongrArg lean_s54 [Not]
have lean_s56 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) True) := by timed Eq.trans lean_s55 lean_r65
have lean_s57 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) True) := by timed Eq.trans lean_r74 lean_s56
let lean_s58 := by timed congr lean_s25 lean_s57
have lean_s59 : (Eq (Eq xx5f7 (Rat.ofInt 0)) (Eq xx5f7 (Rat.ofInt 0))) := by timed rfl
let lean_s60 := by timed congr lean_s25 lean_s59
have lean_s61 : (Eq (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f3 (Rat.ofInt 20))) := by timed rfl
let lean_s62 := by timed congr lean_s25 lean_s61
have lean_s63 : (Eq (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f6 (Rat.ofInt 10))) := by timed rfl
let lean_s64 := by timed congr lean_s25 lean_s63
let lean_s65 := by timed congr lean_s25 lean_r30
let lean_s66 := by timed congr lean_s65 lean_r21
let lean_s67 := by timed congr lean_s64 lean_s66
let lean_s68 := by timed congr lean_s62 lean_s67
let lean_s69 := by timed congr lean_s60 lean_s68
let lean_s70 := by timed congr lean_s58 lean_s69
let lean_s71 := by timed congr lean_s38 lean_s70
let lean_s72 := by timed congr lean_s35 lean_s71
let lean_s73 := by timed congr lean_s32 lean_s72
let lean_s74 := by timed congr lean_s31 lean_s73
let lean_s75 := by timed congr lean_s30 lean_s74
let lean_s76 := by timed congr lean_s29 lean_s75
have lean_s77 : (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And True (And True (And True (And True (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))))) := by timed congr lean_s27 lean_s76
have lean_s78 : (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))) := by timed Eq.trans lean_s77 lean_r16
have lean_s79 : (Eq (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))) := by timed Eq.trans lean_r125 lean_s78
let lean_s80 := by timed congr lean_s24 lean_s79
have lean_s81 : (Eq And And) := by timed rfl
have lean_s82 : (Eq (Eq xx5f12 (Rat.ofInt 1)) (Eq xx5f12 (Rat.ofInt 1))) := by timed rfl
let lean_s83 := by timed congr lean_s81 lean_s82
let lean_s84 := by timed congr lean_s81 lean_s28
let lean_s85 := by timed congr lean_s81 lean_s8
let lean_s86 := by timed congr lean_s81 lean_s10
have lean_s87 : (Eq Or Or) := by timed rfl
let lean_s88 := by timed congr lean_s87 lean_r105
let lean_s89 := by timed congr lean_s87 lean_r111
let lean_s90 := by timed congr lean_s89 lean_r78
have lean_s91 : (Eq (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Or False (Or False False))) := by timed congr lean_s88 lean_s90
have lean_s92 : (Eq (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) False) := by timed Eq.trans lean_s91 lean_r115
have lean_s93 : (Eq (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) False) := by timed Eq.trans lean_r7 lean_s92
let lean_s94 := by timed congr lean_s81 lean_s93
have lean_s95 : (Eq xx5f3 xx5f3) := by timed rfl
let lean_s96 := by timed flipCongrArg lean_s95 [Eq]
have lean_s97 : (Eq (Rat.ofInt 20) (Rat.ofInt 20)) := by timed rfl
have lean_s98 : (Eq (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat) (smtIte False (Rat.ofInt 0) (Rat.ofInt 20) Rat)) := by timed congrIte lean_r105 lean_s52 lean_s97
have lean_s99 : (Eq (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat) (Rat.ofInt 20)) := by timed Eq.trans lean_s98 lean_r123
have lean_s100 : (Eq (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat)) (Eq xx5f3 (Rat.ofInt 20))) := by timed congr lean_s96 lean_s99
let lean_s101 := by timed congr lean_s81 lean_s100
have lean_s102 : (Eq xx5f6 xx5f6) := by timed rfl
let lean_s103 := by timed flipCongrArg lean_s102 [Eq]
have lean_s104 : (Eq (Rat.ofInt 10) (Rat.ofInt 10)) := by timed rfl
have lean_s105 : (Eq (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) (smtIte False (Rat.ofInt 40) (Rat.ofInt 10) Rat)) := by timed congrIte lean_r111 lean_s48 lean_s104
have lean_s106 : (Eq (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) (Rat.ofInt 10)) := by timed Eq.trans lean_s105 lean_r84
have lean_s107 : (Eq (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat) (smtIte False (Rat.ofInt 0) (Rat.ofInt 10) Rat)) := by timed congrIte lean_r78 lean_s52 lean_s106
have lean_s108 : (Eq (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat) (Rat.ofInt 10)) := by timed Eq.trans lean_s107 lean_r57
have lean_s109 : (Eq (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (Eq xx5f6 (Rat.ofInt 10))) := by timed congr lean_s103 lean_s108
let lean_s110 := by timed congr lean_s81 lean_s109
let lean_s111 := by timed congr lean_s81 lean_r30
let lean_s112 := by timed congr lean_s81 lean_r21
have lean_s113 : (Eq (Eq xx5f7 (Rat.ofInt 2)) (Eq xx5f7 (Rat.ofInt 2))) := by timed rfl
let lean_s114 := by timed congr lean_s112 lean_s113
let lean_s115 := by timed congr lean_s111 lean_s114
let lean_s116 := by timed congr lean_s110 lean_s115
let lean_s117 := by timed congr lean_s101 lean_s116
let lean_s118 := by timed congr lean_s94 lean_s117
let lean_s119 := by timed congr lean_s86 lean_s118
let lean_s120 := by timed congr lean_s85 lean_s119
let lean_s121 := by timed congr lean_s84 lean_s120
have lean_s122 : (Eq (And (Eq xx5f12 (Rat.ofInt 1)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2))))))))))) (And (Eq xx5f12 (Rat.ofInt 1)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And False (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (And (Eq xx5f1 xx5f5) (Eq xx5f7 (Rat.ofInt 2)))))))))))) := by timed congr lean_s83 lean_s121
have lean_s123 : (Eq (And (Eq xx5f12 (Rat.ofInt 1)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) := by timed Eq.trans lean_s122 lean_r121
have lean_s124 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) False) := by timed Eq.trans lean_r124 lean_s123
let lean_s125 := by timed congr lean_s24 lean_s124
have lean_s126 : (Eq And And) := by timed rfl
have lean_s127 : (Eq (Eq xx5f12 (Rat.ofInt 2)) (Eq xx5f12 (Rat.ofInt 2))) := by timed rfl
let lean_s128 := by timed congr lean_s126 lean_s127
let lean_s129 := by timed congr lean_s126 lean_s28
let lean_s130 := by timed congr lean_s126 lean_s8
let lean_s131 := by timed congr lean_s126 lean_s10
let lean_s132 := by timed flipCongrArg lean_r108 [Or]
have lean_s133 : (Eq (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (Or False False)) := by timed congr lean_s132 lean_r105
have lean_s134 : (Eq (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) False) := by timed Eq.trans lean_s133 lean_r25
let lean_s135 := by timed congr lean_s126 lean_s134
have lean_s136 : (Eq (Not xx5f4) (Not xx5f4)) := by timed rfl
let lean_s137 := by timed congr lean_s126 lean_s136
have lean_s138 : (Eq xx5f5 xx5f5) := by timed rfl
let lean_s139 := by timed congr lean_s126 lean_s138
let lean_s140 := by timed congr lean_s126 lean_s61
let lean_s141 := by timed congr lean_s126 lean_s63
let lean_s142 := by timed congr lean_s141 lean_s113
let lean_s143 := by timed congr lean_s140 lean_s142
let lean_s144 := by timed congr lean_s139 lean_s143
let lean_s145 := by timed congr lean_s137 lean_s144
let lean_s146 := by timed congr lean_s135 lean_s145
let lean_s147 := by timed congr lean_s131 lean_s146
let lean_s148 := by timed congr lean_s130 lean_s147
let lean_s149 := by timed congr lean_s129 lean_s148
have lean_s150 : (Eq (And (Eq xx5f12 (Rat.ofInt 2)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) (And (Eq xx5f12 (Rat.ofInt 2)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And False (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2)))))))))))) := by timed congr lean_s128 lean_s149
have lean_s151 : (Eq (And (Eq xx5f12 (Rat.ofInt 2)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) := by timed Eq.trans lean_s150 lean_r119
have lean_s152 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) False) := by timed Eq.trans lean_r120 lean_s151
let lean_s153 := by timed congr lean_s24 lean_s152
have lean_s154 : (Eq And And) := by timed rfl
have lean_s155 : (Eq (Eq xx5f12 (Rat.ofInt 3)) (Eq xx5f12 (Rat.ofInt 3))) := by timed rfl
let lean_s156 := by timed congr lean_s154 lean_s155
let lean_s157 := by timed congr lean_s154 lean_s28
let lean_s158 := by timed congr lean_s154 lean_s8
let lean_s159 := by timed congr lean_s154 lean_s10
let lean_s160 := by timed congr lean_s154 lean_r54
let lean_s161 := by timed congr lean_s154 lean_s34
let lean_s162 := by timed congr lean_s154 lean_s37
have lean_s163 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not True)) := by timed flipCongrArg lean_s57 [Not]
have lean_s164 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) False) := by timed Eq.trans lean_s163 lean_r95
let lean_s165 := by timed congr lean_s154 lean_s164
have lean_s166 : (Eq xx5f4 xx5f4) := by timed rfl
let lean_s167 := by timed congr lean_s154 lean_s166
have lean_s168 : (Eq (Not xx5f5) (Not xx5f5)) := by timed rfl
let lean_s169 := by timed congr lean_s154 lean_s168
let lean_s170 := by timed congr lean_s154 lean_s59
let lean_s171 := by timed congr lean_s154 lean_s61
let lean_s172 := by timed congr lean_s171 lean_s63
let lean_s173 := by timed congr lean_s170 lean_s172
let lean_s174 := by timed congr lean_s169 lean_s173
let lean_s175 := by timed congr lean_s167 lean_s174
let lean_s176 := by timed congr lean_s165 lean_s175
let lean_s177 := by timed congr lean_s162 lean_s176
let lean_s178 := by timed congr lean_s161 lean_s177
let lean_s179 := by timed congr lean_s160 lean_s178
let lean_s180 := by timed congr lean_s159 lean_s179
let lean_s181 := by timed congr lean_s158 lean_s180
let lean_s182 := by timed congr lean_s157 lean_s181
have lean_s183 : (Eq (And (Eq xx5f12 (Rat.ofInt 3)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And xx5f4 (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) (And (Eq xx5f12 (Rat.ofInt 3)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And True (And True (And True (And False (And xx5f4 (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))))))) := by timed congr lean_s156 lean_s182
have lean_s184 : (Eq (And (Eq xx5f12 (Rat.ofInt 3)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And xx5f4 (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) False) := by timed Eq.trans lean_s183 lean_r118
have lean_s185 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) False) := by timed Eq.trans lean_r45 lean_s184
let lean_s186 := by timed congr lean_s24 lean_s185
have lean_s187 : (Eq And And) := by timed rfl
have lean_s188 : (Eq (Eq xx5f12 (Rat.ofInt 4)) (Eq xx5f12 (Rat.ofInt 4))) := by timed rfl
let lean_s189 := by timed congr lean_s187 lean_s188
let lean_s190 := by timed congr lean_s187 lean_s28
have lean_s191 : (Eq xx5f0 xx5f0) := by timed rfl
let lean_s192 := by timed congr lean_s187 lean_s191
let lean_s193 := by timed congr lean_s187 lean_s10
let lean_s194 := by timed congr lean_s187 lean_s134
let lean_s195 := by timed congr lean_s187 lean_s136
let lean_s196 := by timed congr lean_s187 lean_s138
let lean_s197 := by timed congr lean_s187 lean_s61
let lean_s198 := by timed congr lean_s187 lean_s63
let lean_s199 := by timed congr lean_s198 lean_s113
let lean_s200 := by timed congr lean_s197 lean_s199
let lean_s201 := by timed congr lean_s196 lean_s200
let lean_s202 := by timed congr lean_s195 lean_s201
let lean_s203 := by timed congr lean_s194 lean_s202
let lean_s204 := by timed congr lean_s193 lean_s203
let lean_s205 := by timed congr lean_s192 lean_s204
let lean_s206 := by timed congr lean_s190 lean_s205
have lean_s207 : (Eq (And (Eq xx5f12 (Rat.ofInt 4)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) (And (Eq xx5f12 (Rat.ofInt 4)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And False (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2)))))))))))) := by timed congr lean_s189 lean_s206
have lean_s208 : (Eq (And (Eq xx5f12 (Rat.ofInt 4)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not xx5f4) (And xx5f5 (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) := by timed Eq.trans lean_s207 lean_r31
have lean_s209 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) False) := by timed Eq.trans lean_r62 lean_s208
let lean_s210 := by timed congr lean_s24 lean_s209
have lean_s211 : (Eq And And) := by timed rfl
have lean_s212 : (Eq (Eq xx5f12 (Rat.ofInt 5)) (Eq xx5f12 (Rat.ofInt 5))) := by timed rfl
let lean_s213 := by timed congr lean_s211 lean_s212
let lean_s214 := by timed congr lean_s211 lean_s28
let lean_s215 := by timed congr lean_s211 lean_s191
let lean_s216 := by timed congr lean_s211 lean_s10
have lean_s217 : (Eq Or Or) := by timed rfl
let lean_s218 := by timed congr lean_s217 lean_r108
let lean_s219 := by timed congr lean_s217 lean_r111
let lean_s220 := by timed congr lean_s219 lean_r78
have lean_s221 : (Eq (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Or False (Or False False))) := by timed congr lean_s218 lean_s220
have lean_s222 : (Eq (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Or (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) False) := by timed Eq.trans lean_s221 lean_r115
have lean_s223 : (Eq (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) False) := by timed Eq.trans lean_r116 lean_s222
let lean_s224 := by timed congr lean_s211 lean_s223
let lean_s225 := by timed flipCongrArg lean_s95 [Eq]
have lean_s226 : (Eq (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat) (smtIte False (Rat.ofInt 40) (Rat.ofInt 20) Rat)) := by timed congrIte lean_r108 lean_s48 lean_s97
have lean_s227 : (Eq (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat) (Rat.ofInt 20)) := by timed Eq.trans lean_s226 lean_r113
have lean_s228 : (Eq (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat)) (Eq xx5f3 (Rat.ofInt 20))) := by timed congr lean_s225 lean_s227
let lean_s229 := by timed congr lean_s211 lean_s228
let lean_s230 := by timed congr lean_s211 lean_s109
let lean_s231 := by timed congr lean_s211 lean_r30
let lean_s232 := by timed congr lean_s211 lean_r21
let lean_s233 := by timed congr lean_s232 lean_s113
let lean_s234 := by timed congr lean_s231 lean_s233
let lean_s235 := by timed congr lean_s230 lean_s234
let lean_s236 := by timed congr lean_s229 lean_s235
let lean_s237 := by timed congr lean_s224 lean_s236
let lean_s238 := by timed congr lean_s216 lean_s237
let lean_s239 := by timed congr lean_s215 lean_s238
let lean_s240 := by timed congr lean_s214 lean_s239
have lean_s241 : (Eq (And (Eq xx5f12 (Rat.ofInt 5)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2))))))))))) (And (Eq xx5f12 (Rat.ofInt 5)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And False (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (And (Eq xx5f1 xx5f5) (Eq xx5f7 (Rat.ofInt 2)))))))))))) := by timed congr lean_s213 lean_s240
have lean_s242 : (Eq (And (Eq xx5f12 (Rat.ofInt 5)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40))) (And (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat)) (And (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat)) (And (Eq xx5f4 xx5f0) (And (Eq xx5f5 xx5f1) (Eq xx5f7 (Rat.ofInt 2))))))))))) False) := by timed Eq.trans lean_s241 lean_r77
have lean_s243 : (Eq (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) False) := by timed Eq.trans lean_r117 lean_s242
let lean_s244 := by timed congr lean_s24 lean_s243
have lean_s245 : (Eq And And) := by timed rfl
have lean_s246 : (Eq (Eq xx5f12 (Rat.ofInt 6)) (Eq xx5f12 (Rat.ofInt 6))) := by timed rfl
let lean_s247 := by timed congr lean_s245 lean_s246
let lean_s248 := by timed congr lean_s245 lean_s28
let lean_s249 := by timed congr lean_s245 lean_s191
let lean_s250 := by timed congr lean_s245 lean_s10
let lean_s251 := by timed congr lean_s245 lean_r54
let lean_s252 := by timed congr lean_s245 lean_s34
let lean_s253 := by timed congr lean_s245 lean_s37
let lean_s254 := by timed congr lean_s245 lean_s164
let lean_s255 := by timed congr lean_s245 lean_s59
let lean_s256 := by timed congr lean_s245 lean_s61
let lean_s257 := by timed congr lean_s245 lean_s63
let lean_s258 := by timed congr lean_s245 lean_r30
let lean_s259 := by timed congr lean_s258 lean_r21
let lean_s260 := by timed congr lean_s257 lean_s259
let lean_s261 := by timed congr lean_s256 lean_s260
let lean_s262 := by timed congr lean_s255 lean_s261
let lean_s263 := by timed congr lean_s254 lean_s262
let lean_s264 := by timed congr lean_s253 lean_s263
let lean_s265 := by timed congr lean_s252 lean_s264
let lean_s266 := by timed congr lean_s251 lean_s265
let lean_s267 := by timed congr lean_s250 lean_s266
let lean_s268 := by timed congr lean_s249 lean_s267
let lean_s269 := by timed congr lean_s248 lean_s268
have lean_s270 : (Eq (And (Eq xx5f12 (Rat.ofInt 6)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))))))))))) (And (Eq xx5f12 (Rat.ofInt 6)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And True (And True (And True (And False (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))))) := by timed congr lean_s247 lean_s269
have lean_s271 : (Eq (And (Eq xx5f12 (Rat.ofInt 6)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))))))))))) False) := by timed Eq.trans lean_s270 lean_r109
have lean_s272 : (Eq (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) False) := by timed Eq.trans lean_r110 lean_s271
let lean_s273 := by timed congr lean_s24 lean_s272
have lean_s274 : (Eq And And) := by timed rfl
have lean_s275 : (Eq (Eq xx5f12 (Rat.ofInt 7)) (Eq xx5f12 (Rat.ofInt 7))) := by timed rfl
let lean_s276 := by timed congr lean_s274 lean_s275
let lean_s277 := by timed congr lean_s274 lean_s28
let lean_s278 := by timed congr lean_s274 lean_s191
let lean_s279 := by timed congr lean_s274 lean_s10
let lean_s280 := by timed congr lean_s274 lean_r54
let lean_s281 := by timed congr lean_s274 lean_s34
let lean_s282 := by timed congr lean_s274 lean_s37
let lean_s283 := by timed congr lean_s274 lean_s57
let lean_s284 := by timed congr lean_s274 lean_s136
let lean_s285 := by timed congr lean_s274 lean_s168
let lean_s286 := by timed congr lean_s274 lean_s59
let lean_s287 := by timed congr lean_s274 lean_s61
let lean_s288 := by timed congr lean_s287 lean_s63
let lean_s289 := by timed congr lean_s286 lean_s288
let lean_s290 := by timed congr lean_s285 lean_s289
let lean_s291 := by timed congr lean_s284 lean_s290
let lean_s292 := by timed congr lean_s283 lean_s291
let lean_s293 := by timed congr lean_s282 lean_s292
let lean_s294 := by timed congr lean_s281 lean_s293
let lean_s295 := by timed congr lean_s280 lean_s294
let lean_s296 := by timed congr lean_s279 lean_s295
let lean_s297 := by timed congr lean_s278 lean_s296
let lean_s298 := by timed congr lean_s277 lean_s297
have lean_s299 : (Eq (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And True (And True (And True (And True (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))))))) := by timed congr lean_s276 lean_s298
have lean_s300 : (Eq (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Eq (Rat.ofInt 2) (Rat.ofInt 2)) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0))) (And (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40))) (And (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))))))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))) := by timed Eq.trans lean_s299 lean_r27
have lean_s301 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))) := by timed Eq.trans lean_r49 lean_s300
let lean_s302 := by timed congr lean_s24 lean_s301
have lean_s303 : (Eq And And) := by timed rfl
have lean_s304 : (Eq (Eq xx5f12 (Rat.ofInt 8)) (Eq xx5f12 (Rat.ofInt 8))) := by timed rfl
let lean_s305 := by timed congr lean_s303 lean_s304
have lean_s306 : (Eq xx5f8 xx5f8) := by timed rfl
let lean_s307 := by timed congr lean_s303 lean_s306
have lean_s308 : (Eq (Not (binrel% GE.ge xx5f2 (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) := by timed flipCongrArg lean_r67 [Not]
have lean_s309 : (Eq (binrel% LT.lt xx5f2 (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f2 (Int.ofNat 0)))) := by timed Eq.trans lean_r102 lean_s308
have lean_s310 : (Eq (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f2 (Int.ofNat 0))))) := by timed flipCongrArg lean_s309 [Not]
have lean_s311 : (Eq (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (binrel% GE.ge xx5f2 (Int.ofNat 0))) := by timed Eq.trans lean_s310 lean_r41
let lean_s312 := by timed congr lean_s303 lean_s311
have lean_s313 : (Eq Or Or) := by timed rfl
let lean_s314 := by timed congr lean_s313 lean_s191
have lean_s315 : (Eq xx5f1 xx5f1) := by timed rfl
let lean_s316 := by timed congr lean_s313 lean_s315
have lean_s317 : (Eq And And) := by timed rfl
let lean_s318 := by timed flipCongrArg lean_r5 [LE.le]
have lean_s319 : (Eq (Rat.ofInt 2) (Rat.ofInt 2)) := by timed rfl
have lean_s320 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (binrel% LE.le (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) (Rat.ofInt 2))) := by timed congr lean_s318 lean_s319
have lean_s321 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0))) := by timed Eq.trans lean_s320 lean_r99
let lean_s322 := by timed congr lean_s317 lean_s321
let lean_s323 := by timed flipCongrArg lean_s97 [HAdd.hAdd]
have lean_s324 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) := by timed congr lean_s323 lean_r23
have lean_s325 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) := by timed Eq.trans lean_s324 lean_r51
let lean_s326 := by timed flipCongrArg lean_s325 [GE.ge]
have lean_s327 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) (Rat.ofInt 0))) := by timed congr lean_s326 lean_s52
have lean_s328 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)) (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4)))) := by timed Eq.trans lean_s327 lean_r98
have lean_s329 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0))) (Not (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))))) := by timed flipCongrArg lean_s328 [Not]
have lean_s330 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)) (Not (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))))) := by timed Eq.trans lean_r44 lean_s329
have lean_s331 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0))) (Not (Not (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4)))))) := by timed flipCongrArg lean_s330 [Not]
have lean_s332 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0))) (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4)))) := by timed Eq.trans lean_s331 lean_r96
let lean_s333 := by timed congr lean_s317 lean_s332
let lean_s334 := by timed flipCongrArg lean_s104 [HAdd.hAdd]
have lean_s335 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2))) := by timed congr lean_s334 lean_r88
have lean_s336 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2))) := by timed Eq.trans lean_s335 lean_r60
let lean_s337 := by timed flipCongrArg lean_s336 [LE.le]
have lean_s338 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)) (binrel% LE.le (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)) (Rat.ofInt 40))) := by timed congr lean_s337 lean_s48
have lean_s339 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) := by timed Eq.trans lean_s338 lean_r93
let lean_s340 := by timed congr lean_s333 lean_s339
have lean_s341 : (Eq (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (And (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) := by timed congr lean_s322 lean_s340
have lean_s342 : (Eq (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) := by timed Eq.trans lean_r100 lean_s341
let lean_s343 := by timed congr lean_s316 lean_s342
have lean_s344 : (Eq (Or xx5f0 (Or xx5f1 (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))))) := by timed congr lean_s314 lean_s343
have lean_s345 : (Eq (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))))) := by timed Eq.trans lean_r66 lean_s344
let lean_s346 := by timed congr lean_s303 lean_s345
have lean_s347 : (Eq Or Or) := by timed rfl
let lean_s348 := by timed congr lean_s347 lean_s8
let lean_s349 := by timed congr lean_s347 lean_s315
let lean_s350 := by timed congr lean_s349 lean_s342
have lean_s351 : (Eq (Or (Not xx5f0) (Or xx5f1 (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))))) := by timed congr lean_s348 lean_s350
have lean_s352 : (Eq (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))))) := by timed Eq.trans lean_r101 lean_s351
let lean_s353 := by timed congr lean_s303 lean_s352
have lean_s354 : (Eq (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1))) := by timed rfl
let lean_s355 := by timed flipCongrArg lean_s354 [Or]
let lean_s356 := by timed flipCongrArg lean_r10 [GE.ge]
let lean_s357 := by timed flipCongrArg lean_r46 [HAdd.hAdd]
have lean_s358 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f2)) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2))) := by timed congr lean_s357 lean_r53
have lean_s359 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2))) := by timed Eq.trans lean_s358 lean_r50
have lean_s360 : (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2))) := by timed Eq.trans lean_r83 lean_s359
have lean_s361 : (Eq (binrel% GE.ge (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2)) (binrel% GE.ge (binrel% HMul.hMul (Int.ofNat 2) xx5f11) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2)))) := by timed congr lean_s356 lean_s360
have lean_s362 : (Eq (binrel% GE.ge (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20))) := by timed Eq.trans lean_s361 lean_r72
have lean_s363 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)))) := by timed flipCongrArg lean_s362 [Not]
have lean_s364 : (Eq (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)))) := by timed Eq.trans lean_r91 lean_s363
have lean_s365 : (Eq (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20))))) := by timed flipCongrArg lean_s364 [Not]
have lean_s366 : (Eq (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20))) := by timed Eq.trans lean_s365 lean_r15
let lean_s367 := by timed flipCongrArg lean_s366 [And]
have lean_s368 : (Eq xx5f11 xx5f11) := by timed rfl
let lean_s369 := by timed flipCongrArg lean_s368 [LE.le]
have lean_s370 : (Eq (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HMul.hMul (Int.ofNat 6) xx5f2)))) := by timed congr lean_s369 lean_s336
have lean_s371 : (Eq (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) := by timed Eq.trans lean_s370 lean_r61
have lean_s372 : (Eq (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) := by timed congr lean_s367 lean_s371
have lean_s373 : (Eq (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))))) := by timed congr lean_s355 lean_s372
let lean_s374 := by timed congr lean_s303 lean_s373
have lean_s375 : (Eq xx5f7 xx5f7) := by timed rfl
let lean_s376 := by timed flipCongrArg lean_s375 [Eq]
have lean_s377 : (Eq (And (Not xx5f0) xx5f1) (And (Not xx5f0) xx5f1)) := by timed rfl
have lean_s378 : (Eq (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat) (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) := by timed congrIte lean_s377 lean_s319 lean_r5
have lean_s379 : (Eq (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat)) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat))) := by timed congr lean_s376 lean_s378
let lean_s380 := by timed congr lean_s303 lean_s379
let lean_s381 := by timed flipCongrArg lean_s95 [Eq]
have lean_s382 : (Eq (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat) (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) := by timed congrIte lean_s377 lean_s97 lean_s325
have lean_s383 : (Eq (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat)) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat))) := by timed congr lean_s381 lean_s382
let lean_s384 := by timed congr lean_s303 lean_s383
have lean_s385 : (Eq (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) := by timed rfl
let lean_s386 := by timed congr lean_s303 lean_s385
let lean_s387 := by timed congr lean_s303 lean_r30
let lean_s388 := by timed congr lean_s387 lean_r21
let lean_s389 := by timed congr lean_s386 lean_s388
let lean_s390 := by timed congr lean_s384 lean_s389
let lean_s391 := by timed congr lean_s380 lean_s390
let lean_s392 := by timed congr lean_s374 lean_s391
let lean_s393 := by timed congr lean_s353 lean_s392
let lean_s394 := by timed congr lean_s346 lean_s393
let lean_s395 := by timed congr lean_s312 lean_s394
let lean_s396 := by timed congr lean_s307 lean_s395
have lean_s397 : (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0))) (And (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (And (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40)))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))) := by timed congr lean_s305 lean_s396
have lean_s398 : (Eq (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))) := by timed Eq.trans lean_r80 lean_s397
let lean_s399 := by timed congr lean_s302 lean_s398
let lean_s400 := by timed congr lean_s273 lean_s399
let lean_s401 := by timed congr lean_s244 lean_s400
let lean_s402 := by timed congr lean_s210 lean_s401
let lean_s403 := by timed congr lean_s186 lean_s402
let lean_s404 := by timed congr lean_s153 lean_s403
let lean_s405 := by timed congr lean_s125 lean_s404
have lean_s406 : (Eq (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or False (Or False (Or False (Or False (Or False (Or False (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))))))))))) := by timed congr lean_s80 lean_s405
have lean_s407 : (Eq (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2))) (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Or (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))))) := by timed Eq.trans lean_s406 lean_r37
have lean_s408 : (Eq (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5)))))))))))))) := by timed Eq.trans lean_r126 lean_s407
let lean_s409 := by timed congr lean_s5 lean_s408
have lean_s410 : (Eq (Eq xx5f3 xx5f6) (Eq xx5f3 xx5f6)) := by timed rfl
let lean_s411 := by timed flipCongrArg lean_s410 [Or]
have lean_s412 : (Eq (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10))) (Or (Eq xx5f3 xx5f6) False)) := by timed congr lean_s411 lean_r97
have lean_s413 : (Eq (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10))) (Eq xx5f3 xx5f6)) := by timed Eq.trans lean_s412 lean_r20
let lean_s414 := by timed congr lean_s5 lean_s413
have lean_s415 : (Eq (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f1) (Not xx5f0))) := by timed rfl
let lean_s416 := by timed congr lean_s5 lean_s415
have lean_s417 : (Eq (Or (Not xx5f5) (Not xx5f4)) (Or (Not xx5f5) (Not xx5f4))) := by timed rfl
let lean_s418 := by timed congr lean_s416 lean_s417
let lean_s419 := by timed congr lean_s414 lean_s418
let lean_s420 := by timed congr lean_s409 lean_s419
let lean_s421 := by timed congr lean_s23 lean_s420
let lean_s422 := by timed congr lean_s18 lean_s421
let lean_s423 := by timed congr lean_s16 lean_s422
let lean_s424 := by timed congr lean_s11 lean_s423
let lean_s425 := by timed congr lean_s9 lean_s424
let lean_s426 := by timed congr lean_s7 lean_s425
have lean_s427 : (Eq (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (And (binrel% GE.ge xx5f10 (Rat.ofInt 0)) (And (Not xx5f0) (And (Not xx5f1) (And (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0))) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0))) (And (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10))) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4)))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4))))))))))))) := by timed congr lean_s6 lean_s426
have lean_s428 : (Eq (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge xx5f10 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0)))) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0)))) (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))) (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10)))) (Or (Not xx5f1) (Not xx5f0))) (Or (Not xx5f5) (Not xx5f4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4))))))))))))) := by timed Eq.trans lean_r134 lean_s427
have lean_s429 : (Eq And And) := by timed rfl
have lean_s430 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s431 := by timed flipCongrArg lean_s430 [HMul.hMul]
have lean_s432 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4)))))))))))) := by timed eqResolve lean_a136 lean_s428
have lean_s433 : (Not xx5f1) := by andElim lean_s432, 3
have lean_s434 : (Eq (Not xx5f1) (Eq xx5f1 False)) := by timed Eq.symm lean_r135
have lean_s435 : (Eq xx5f1 False) := by timed eqResolve lean_s433 lean_s434
have lean_s436 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4)))))))))))) := by timed eqResolve lean_a136 lean_s428
have lean_s437 : (Not xx5f0) := by andElim lean_s436, 2
have lean_s438 : (Eq (Not xx5f0) (Eq xx5f0 False)) := by timed Eq.symm lean_r64
have lean_s439 : (Eq xx5f0 False) := by timed eqResolve lean_s437 lean_s438
have lean_s440 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4)))))))))))) := by timed eqResolve lean_a136 lean_s428
have lean_s441 : (Eq xx5f3 xx5f6) := by andElim lean_s440, 8
have lean_s442 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4)))))))))))) := by timed eqResolve lean_a136 lean_s428
have lean_s443 : (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by andElim lean_s442, 5
let lean_s444 := by timed And.intro lean_s441 lean_s443
let lean_s445 := by timed And.intro lean_s439 lean_s444
have lean_s446 : (And (Eq xx5f1 False) (And (Eq xx5f0 False) (And (Eq xx5f3 xx5f6) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))))) := by timed And.intro lean_s435 lean_s445
have lean_s447 : (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by andElim lean_s446, 3
have lean_s448 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s431 lean_s447
let lean_s449 := by timed flipCongrArg lean_s448 [GE.ge]
have lean_s450 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s449 lean_s430
let lean_s451 := by timed congr lean_s429 lean_s450
let lean_s452 := by timed flipCongrArg lean_s447 [GE.ge]
have lean_s453 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s454 : (Eq (binrel% GE.ge xx5f10 (Int.ofNat 0)) (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0))) := by timed congr lean_s452 lean_s453
let lean_s455 := by timed congr lean_s429 lean_s454
have lean_s456 : (Eq xx5f0 False) := by andElim lean_s446, 1
have lean_s457 : (Eq (Not xx5f0) (Not False)) := by timed flipCongrArg lean_s456 [Not]
let lean_s458 := by timed congr lean_s429 lean_s457
have lean_s459 : (Eq xx5f1 False) := by andElim lean_s446, 0
have lean_s460 : (Eq (Not xx5f1) (Not False)) := by timed flipCongrArg lean_s459 [Not]
let lean_s461 := by timed congr lean_s429 lean_s460
have lean_s462 : (Eq (binrel% GE.ge xx5f9 (Int.ofNat 0)) (binrel% GE.ge xx5f9 (Int.ofNat 0))) := by timed rfl
let lean_s463 := by timed congr lean_s429 lean_s462
let lean_s464 := by timed flipCongrArg lean_s447 [Eq]
have lean_s465 : (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed rfl
have lean_s466 : (Eq (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s464 lean_s465
let lean_s467 := by timed congr lean_s429 lean_s466
have lean_s468 : (Eq (binrel% GE.ge xx5f11 (Int.ofNat 0)) (binrel% GE.ge xx5f11 (Int.ofNat 0))) := by timed rfl
let lean_s469 := by timed congr lean_s429 lean_s468
have lean_s470 : (Eq Or Or) := by timed rfl
have lean_s471 : (Eq And And) := by timed rfl
have lean_s472 : (Eq (Eq xx5f12 (Rat.ofInt 0)) (Eq xx5f12 (Rat.ofInt 0))) := by timed rfl
let lean_s473 := by timed congr lean_s471 lean_s472
have lean_s474 : (Eq (Not xx5f8) (Not xx5f8)) := by timed rfl
let lean_s475 := by timed congr lean_s471 lean_s474
let lean_s476 := by timed congr lean_s471 lean_s457
let lean_s477 := by timed congr lean_s471 lean_s460
have lean_s478 : (Eq (Eq xx5f7 (Rat.ofInt 0)) (Eq xx5f7 (Rat.ofInt 0))) := by timed rfl
let lean_s479 := by timed congr lean_s471 lean_s478
have lean_s480 : (Eq xx5f3 xx5f6) := by andElim lean_s446, 2
let lean_s481 := by timed flipCongrArg lean_s480 [Eq]
have lean_s482 : (Eq (Rat.ofInt 20) (Rat.ofInt 20)) := by timed rfl
have lean_s483 : (Eq (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 20))) := by timed congr lean_s481 lean_s482
let lean_s484 := by timed congr lean_s471 lean_s483
have lean_s485 : (Eq (Eq xx5f6 (Rat.ofInt 10)) (Eq xx5f6 (Rat.ofInt 10))) := by timed rfl
let lean_s486 := by timed congr lean_s471 lean_s485
let lean_s487 := by timed flipCongrArg lean_s456 [Eq]
have lean_s488 : (Eq xx5f4 xx5f4) := by timed rfl
have lean_s489 : (Eq (Eq xx5f0 xx5f4) (Eq False xx5f4)) := by timed congr lean_s487 lean_s488
let lean_s490 := by timed congr lean_s471 lean_s489
let lean_s491 := by timed flipCongrArg lean_s459 [Eq]
have lean_s492 : (Eq xx5f5 xx5f5) := by timed rfl
have lean_s493 : (Eq (Eq xx5f1 xx5f5) (Eq False xx5f5)) := by timed congr lean_s491 lean_s492
let lean_s494 := by timed congr lean_s490 lean_s493
let lean_s495 := by timed congr lean_s486 lean_s494
let lean_s496 := by timed congr lean_s484 lean_s495
let lean_s497 := by timed congr lean_s479 lean_s496
let lean_s498 := by timed congr lean_s477 lean_s497
let lean_s499 := by timed congr lean_s476 lean_s498
let lean_s500 := by timed congr lean_s475 lean_s499
have lean_s501 : (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5)))))))))) := by timed congr lean_s473 lean_s500
let lean_s502 := by timed congr lean_s470 lean_s501
have lean_s503 : (Eq And And) := by timed rfl
have lean_s504 : (Eq (Eq xx5f12 (Rat.ofInt 7)) (Eq xx5f12 (Rat.ofInt 7))) := by timed rfl
let lean_s505 := by timed congr lean_s503 lean_s504
let lean_s506 := by timed congr lean_s503 lean_s474
let lean_s507 := by timed congr lean_s503 lean_s456
let lean_s508 := by timed congr lean_s503 lean_s460
have lean_s509 : (Eq (Not xx5f4) (Not xx5f4)) := by timed rfl
let lean_s510 := by timed congr lean_s503 lean_s509
have lean_s511 : (Eq (Not xx5f5) (Not xx5f5)) := by timed rfl
let lean_s512 := by timed congr lean_s503 lean_s511
let lean_s513 := by timed congr lean_s503 lean_s478
let lean_s514 := by timed congr lean_s503 lean_s483
let lean_s515 := by timed congr lean_s514 lean_s485
let lean_s516 := by timed congr lean_s513 lean_s515
let lean_s517 := by timed congr lean_s512 lean_s516
let lean_s518 := by timed congr lean_s510 lean_s517
let lean_s519 := by timed congr lean_s508 lean_s518
let lean_s520 := by timed congr lean_s507 lean_s519
let lean_s521 := by timed congr lean_s506 lean_s520
have lean_s522 : (Eq (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10))))))))))) := by timed congr lean_s505 lean_s521
let lean_s523 := by timed congr lean_s470 lean_s522
have lean_s524 : (Eq And And) := by timed rfl
have lean_s525 : (Eq (Eq xx5f12 (Rat.ofInt 8)) (Eq xx5f12 (Rat.ofInt 8))) := by timed rfl
let lean_s526 := by timed congr lean_s524 lean_s525
have lean_s527 : (Eq xx5f8 xx5f8) := by timed rfl
let lean_s528 := by timed congr lean_s524 lean_s527
have lean_s529 : (Eq (binrel% GE.ge xx5f2 (Int.ofNat 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) := by timed rfl
let lean_s530 := by timed congr lean_s524 lean_s529
have lean_s531 : (Eq Or Or) := by timed rfl
let lean_s532 := by timed congr lean_s531 lean_s456
let lean_s533 := by timed congr lean_s531 lean_s459
have lean_s534 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) := by timed rfl
let lean_s535 := by timed congr lean_s533 lean_s534
have lean_s536 : (Eq (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))))) := by timed congr lean_s532 lean_s535
let lean_s537 := by timed congr lean_s524 lean_s536
have lean_s538 : (Eq Or Or) := by timed rfl
let lean_s539 := by timed congr lean_s538 lean_s457
let lean_s540 := by timed congr lean_s538 lean_s459
let lean_s541 := by timed congr lean_s540 lean_s534
have lean_s542 : (Eq (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))))) := by timed congr lean_s539 lean_s541
let lean_s543 := by timed congr lean_s524 lean_s542
let lean_s544 := by timed flipCongrArg lean_s456 [Or]
have lean_s545 : (Eq (Or xx5f0 xx5f1) (Or False False)) := by timed congr lean_s544 lean_s459
let lean_s546 := by timed flipCongrArg lean_s545 [And]
let lean_s547 := by timed flipCongrArg lean_s457 [Or]
have lean_s548 : (Eq (Or (Not xx5f0) xx5f1) (Or (Not False) False)) := by timed congr lean_s547 lean_s459
have lean_s549 : (Eq (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Or False False) (Or (Not False) False))) := by timed congr lean_s546 lean_s548
let lean_s550 := by timed flipCongrArg lean_s549 [Or]
have lean_s551 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) := by timed rfl
have lean_s552 : (Eq (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))))) := by timed congr lean_s550 lean_s551
let lean_s553 := by timed congr lean_s524 lean_s552
have lean_s554 : (Eq xx5f7 xx5f7) := by timed rfl
let lean_s555 := by timed flipCongrArg lean_s554 [Eq]
let lean_s556 := by timed flipCongrArg lean_s457 [And]
have lean_s557 : (Eq (And (Not xx5f0) xx5f1) (And (Not False) False)) := by timed congr lean_s556 lean_s459
have lean_s558 : (Eq (Rat.ofInt 2) (Rat.ofInt 2)) := by timed rfl
have lean_s559 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) := by timed rfl
have lean_s560 : (Eq (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat) (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) := by timed congrIte lean_s557 lean_s558 lean_s559
have lean_s561 : (Eq (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat))) := by timed congr lean_s555 lean_s560
let lean_s562 := by timed congr lean_s524 lean_s561
let lean_s563 := by timed flipCongrArg lean_s480 [Eq]
have lean_s564 : (Eq (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) := by timed rfl
have lean_s565 : (Eq (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat) (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) := by timed congrIte lean_s557 lean_s482 lean_s564
have lean_s566 : (Eq (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat))) := by timed congr lean_s563 lean_s565
let lean_s567 := by timed congr lean_s524 lean_s566
have lean_s568 : (Eq xx5f6 xx5f6) := by timed rfl
let lean_s569 := by timed flipCongrArg lean_s568 [Eq]
have lean_s570 : (Eq (Rat.ofInt 10) (Rat.ofInt 10)) := by timed rfl
have lean_s571 : (Eq xx5f11 xx5f11) := by timed rfl
have lean_s572 : (Eq (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat) (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) := by timed congrIte lean_s557 lean_s570 lean_s571
have lean_s573 : (Eq (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat))) := by timed congr lean_s569 lean_s572
let lean_s574 := by timed congr lean_s524 lean_s573
let lean_s575 := by timed congr lean_s524 lean_s489
let lean_s576 := by timed congr lean_s575 lean_s493
let lean_s577 := by timed congr lean_s574 lean_s576
let lean_s578 := by timed congr lean_s567 lean_s577
let lean_s579 := by timed congr lean_s562 lean_s578
let lean_s580 := by timed congr lean_s553 lean_s579
let lean_s581 := by timed congr lean_s543 lean_s580
let lean_s582 := by timed congr lean_s537 lean_s581
let lean_s583 := by timed congr lean_s530 lean_s582
let lean_s584 := by timed congr lean_s528 lean_s583
have lean_s585 : (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5)))))))))))) := by timed congr lean_s526 lean_s584
let lean_s586 := by timed congr lean_s523 lean_s585
have lean_s587 : (Eq (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5)))))))))))))) := by timed congr lean_s502 lean_s586
let lean_s588 := by timed congr lean_s429 lean_s587
let lean_s589 := by timed flipCongrArg lean_s480 [Eq]
have lean_s590 : (Eq (Eq xx5f3 xx5f6) (Eq xx5f6 xx5f6)) := by timed congr lean_s589 lean_s568
let lean_s591 := by timed congr lean_s429 lean_s590
let lean_s592 := by timed flipCongrArg lean_s460 [Or]
have lean_s593 : (Eq (Or (Not xx5f1) (Not xx5f0)) (Or (Not False) (Not False))) := by timed congr lean_s592 lean_s457
let lean_s594 := by timed congr lean_s429 lean_s593
have lean_s595 : (Eq (Or (Not xx5f5) (Not xx5f4)) (Or (Not xx5f5) (Not xx5f4))) := by timed rfl
let lean_s596 := by timed congr lean_s594 lean_s595
let lean_s597 := by timed congr lean_s591 lean_s596
let lean_s598 := by timed congr lean_s588 lean_s597
let lean_s599 := by timed congr lean_s469 lean_s598
let lean_s600 := by timed congr lean_s467 lean_s599
let lean_s601 := by timed congr lean_s463 lean_s600
let lean_s602 := by timed congr lean_s461 lean_s601
let lean_s603 := by timed congr lean_s458 lean_s602
let lean_s604 := by timed congr lean_s455 lean_s603
have lean_s605 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4)))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (Not False) (And (Not False) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5))))))))))))) (And (Eq xx5f6 xx5f6) (And (Or (Not False) (Not False)) (Or (Not xx5f5) (Not xx5f4))))))))))))) := by timed congr lean_s451 lean_s604
have lean_s606 : (Eq And And) := by timed rfl
have lean_s607 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1)))) := by timed rfl
let lean_s608 := by timed congr lean_s606 lean_s607
have lean_s609 : (Eq (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0))) := by timed rfl
let lean_s610 := by timed congr lean_s606 lean_s609
let lean_s611 := by timed congr lean_s606 lean_r65
let lean_s612 := by timed congr lean_s606 lean_r65
have lean_s613 : (Eq (binrel% GE.ge xx5f9 (Int.ofNat 0)) (binrel% GE.ge xx5f9 (Int.ofNat 0))) := by timed rfl
let lean_s614 := by timed congr lean_s606 lean_s613
let lean_s615 := by timed congr lean_s606 lean_r73
have lean_s616 : (Eq (binrel% GE.ge xx5f11 (Int.ofNat 0)) (binrel% GE.ge xx5f11 (Int.ofNat 0))) := by timed rfl
let lean_s617 := by timed congr lean_s606 lean_s616
have lean_s618 : (Eq Or Or) := by timed rfl
have lean_s619 : (Eq And And) := by timed rfl
let lean_s620 := by timed congr lean_s619 lean_s26
let lean_s621 := by timed congr lean_s619 lean_s28
let lean_s622 := by timed congr lean_s619 lean_r65
let lean_s623 := by timed congr lean_s619 lean_r65
let lean_s624 := by timed congr lean_s619 lean_s59
have lean_s625 : (Eq (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 20))) := by timed rfl
let lean_s626 := by timed congr lean_s619 lean_s625
let lean_s627 := by timed congr lean_s619 lean_s63
let lean_s628 := by timed congr lean_s619 lean_r43
let lean_s629 := by timed congr lean_s628 lean_r29
let lean_s630 := by timed congr lean_s627 lean_s629
let lean_s631 := by timed congr lean_s626 lean_s630
let lean_s632 := by timed congr lean_s624 lean_s631
let lean_s633 := by timed congr lean_s623 lean_s632
let lean_s634 := by timed congr lean_s622 lean_s633
let lean_s635 := by timed congr lean_s621 lean_s634
have lean_s636 : (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And True (And True (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5)))))))))) := by timed congr lean_s620 lean_s635
have lean_s637 : (Eq (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5)))))))) := by timed Eq.trans lean_s636 lean_r8
let lean_s638 := by timed congr lean_s618 lean_s637
let lean_s639 := by timed congr lean_s618 lean_r52
have lean_s640 : (Eq And And) := by timed rfl
let lean_s641 := by timed congr lean_s640 lean_s304
let lean_s642 := by timed congr lean_s640 lean_s306
have lean_s643 : (Eq (binrel% GE.ge xx5f2 (Int.ofNat 0)) (binrel% GE.ge xx5f2 (Int.ofNat 0))) := by timed rfl
let lean_s644 := by timed congr lean_s640 lean_s643
let lean_s645 := by timed congr lean_s640 lean_r39
let lean_s646 := by timed flipCongrArg lean_r65 [Or]
have lean_s647 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) := by timed rfl
have lean_s648 : (Eq (Or (Not False) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) (Or True (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) := by timed congr lean_s646 lean_s647
have lean_s649 : (Eq (Or (Not False) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))))) True) := by timed Eq.trans lean_s648 lean_r129
have lean_s650 : (Eq (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) True) := by timed Eq.trans lean_r87 lean_s649
let lean_s651 := by timed congr lean_s640 lean_s650
let lean_s652 := by timed flipCongrArg lean_r25 [And]
have lean_s653 : (Eq (Or (Not False) False) True) := by timed Eq.trans lean_r11 lean_r65
have lean_s654 : (Eq (And (Or False False) (Or (Not False) False)) (And False True)) := by timed congr lean_s652 lean_s653
have lean_s655 : (Eq (And (Or False False) (Or (Not False) False)) False) := by timed Eq.trans lean_s654 lean_r55
let lean_s656 := by timed flipCongrArg lean_s655 [Or]
have lean_s657 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) := by timed rfl
have lean_s658 : (Eq (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (Or False (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))))) := by timed congr lean_s656 lean_s657
have lean_s659 : (Eq (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) := by timed Eq.trans lean_s658 lean_r12
let lean_s660 := by timed congr lean_s640 lean_s659
let lean_s661 := by timed flipCongrArg lean_s375 [Eq]
have lean_s662 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) := by timed rfl
have lean_s663 : (Eq (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat) (smtIte False (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) := by timed congrIte lean_r6 lean_s319 lean_s662
have lean_s664 : (Eq (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2)) := by timed Eq.trans lean_s663 lean_r14
have lean_s665 : (Eq (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (Eq xx5f7 (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2))) := by timed congr lean_s661 lean_s664
have lean_s666 : (Eq (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7))) := by timed Eq.trans lean_s665 lean_r17
let lean_s667 := by timed congr lean_s640 lean_s666
let lean_s668 := by timed flipCongrArg lean_s102 [Eq]
have lean_s669 : (Eq (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) := by timed rfl
have lean_s670 : (Eq (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat) (smtIte False (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) := by timed congrIte lean_r6 lean_s97 lean_s669
have lean_s671 : (Eq (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2))) := by timed Eq.trans lean_s670 lean_r18
have lean_s672 : (Eq (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (Eq xx5f6 (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)))) := by timed congr lean_s668 lean_s671
have lean_s673 : (Eq (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)))) := by timed Eq.trans lean_s672 lean_r19
let lean_s674 := by timed congr lean_s640 lean_s673
let lean_s675 := by timed flipCongrArg lean_s102 [Eq]
have lean_s676 : (Eq (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat) (smtIte False (Rat.ofInt 10) xx5f11 Rat)) := by timed congrIte lean_r6 lean_s104 lean_s368
have lean_s677 : (Eq (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat) xx5f11) := by timed Eq.trans lean_s676 lean_r22
have lean_s678 : (Eq (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (Eq xx5f6 xx5f11)) := by timed congr lean_s675 lean_s677
let lean_s679 := by timed congr lean_s640 lean_s678
let lean_s680 := by timed congr lean_s640 lean_r43
let lean_s681 := by timed congr lean_s680 lean_r29
let lean_s682 := by timed congr lean_s679 lean_s681
let lean_s683 := by timed congr lean_s674 lean_s682
let lean_s684 := by timed congr lean_s667 lean_s683
let lean_s685 := by timed congr lean_s660 lean_s684
let lean_s686 := by timed congr lean_s651 lean_s685
let lean_s687 := by timed congr lean_s645 lean_s686
let lean_s688 := by timed congr lean_s644 lean_s687
let lean_s689 := by timed congr lean_s642 lean_s688
have lean_s690 : (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))) (And True (And (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))) := by timed congr lean_s641 lean_s689
have lean_s691 : (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))) (And True (And (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) := by timed Eq.trans lean_r48 lean_r26
have lean_s692 : (Eq (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5))))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) := by timed Eq.trans lean_s690 lean_s691
let lean_s693 := by timed congr lean_s639 lean_s692
have lean_s694 : (Eq (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5))))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (Or False (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))))) := by timed congr lean_s638 lean_s693
have lean_s695 : (Eq (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5))))))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5))))))))))))))) := by timed Eq.trans lean_s694 lean_r59
let lean_s696 := by timed congr lean_s606 lean_s695
let lean_s697 := by timed congr lean_s606 lean_r40
have lean_s698 : (Eq (Or (Not False) (Not False)) True) := by timed Eq.trans lean_r90 lean_r65
let lean_s699 := by timed congr lean_s606 lean_s698
let lean_s700 := by timed congr lean_s699 lean_s417
let lean_s701 := by timed congr lean_s697 lean_s700
let lean_s702 := by timed congr lean_s696 lean_s701
let lean_s703 := by timed congr lean_s617 lean_s702
let lean_s704 := by timed congr lean_s615 lean_s703
let lean_s705 := by timed congr lean_s614 lean_s704
let lean_s706 := by timed congr lean_s612 lean_s705
let lean_s707 := by timed congr lean_s611 lean_s706
let lean_s708 := by timed congr lean_s610 lean_s707
have lean_s709 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (Not False) (And (Not False) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5))))))))))))) (And (Eq xx5f6 xx5f6) (And (Or (Not False) (Not False)) (Or (Not xx5f5) (Not xx5f4)))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And True (And True (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And True (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (And True (And True (Or (Not xx5f5) (Not xx5f4))))))))))))) := by timed congr lean_s608 lean_s708
have lean_s710 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (Not False) (And (Not False) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not False) (And (Not False) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq False xx5f4) (Eq False xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And False (And (Not False) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or False (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not False) (Or False (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or False False) (Or (Not False) False)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not False) False) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not False) False) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq False xx5f4) (Eq False xx5f5))))))))))))) (And (Eq xx5f6 xx5f6) (And (Or (Not False) (Not False)) (Or (Not xx5f5) (Not xx5f4)))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) := by timed Eq.trans lean_s709 lean_r85
have lean_s711 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f10) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge xx5f10 (Int.ofNat 0)) (And (Not xx5f0) (And (Not xx5f1) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Not xx5f0) (And (Not xx5f1) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))) (Or (And (Eq xx5f12 (Rat.ofInt 7)) (And (Not xx5f8) (And xx5f0 (And (Not xx5f1) (And (Not xx5f4) (And (Not xx5f5) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f3 (Rat.ofInt 20)) (Eq xx5f6 (Rat.ofInt 10)))))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (Or xx5f0 (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (Not xx5f0) (Or xx5f1 (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))))))) (And (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) (And (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Int.ofNat 2) xx5f2) Rat)) (And (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Int.ofNat 20) (binrel% HMul.hMul (Int.ofNat 5) xx5f2)) Rat)) (And (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat)) (And (Eq xx5f0 xx5f4) (Eq xx5f1 xx5f5))))))))))))) (And (Eq xx5f3 xx5f6) (And (Or (Not xx5f1) (Not xx5f0)) (Or (Not xx5f5) (Not xx5f4)))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (Eq xx5f12 (Rat.ofInt 0)) (And (Not xx5f8) (And (Eq xx5f7 (Rat.ofInt 0)) (And (Eq xx5f6 (Rat.ofInt 20)) (And (Eq xx5f6 (Rat.ofInt 10)) (And (Not xx5f4) (Not xx5f5))))))) (And (Eq xx5f12 (Rat.ofInt 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) xx5f7)) (And (Eq xx5f2 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6))) (And (Eq xx5f6 xx5f11) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) := by timed Eq.trans lean_s605 lean_s710
let lean_s712 := by timed Eq.trans lean_s428 lean_s711
let lean_s713 := by timed Eq.trans lean_s712 lean_h0
have lean_s714 : (Eq And And) := by timed rfl
let lean_s715 := by timed congr lean_s714 lean_s607
let lean_s716 := by timed congr lean_s714 lean_s609
let lean_s717 := by timed congr lean_s714 lean_s613
let lean_s718 := by timed congr lean_s714 lean_s616
let lean_s719 := by timed flipCongrArg lean_r9 [Or]
have lean_s720 : (Eq (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (binrel% GE.ge xx5f12 (Int.ofNat 0))) (And (Not xx5f8) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% GE.ge xx5f6 (Int.ofNat 10))) (And (Not xx5f4) (Not xx5f5))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (binrel% GE.ge xx5f12 (Int.ofNat 8))) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0))) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))))) := by timed congr lean_s719 lean_r82
let lean_s721 := by timed congr lean_s714 lean_s720
let lean_s722 := by timed congr lean_s721 lean_s417
let lean_s723 := by timed congr lean_s718 lean_s722
let lean_s724 := by timed congr lean_s717 lean_s723
let lean_s725 := by timed congr lean_s716 lean_s724
have lean_s726 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (binrel% GE.ge xx5f12 (Int.ofNat 0))) (And (Not xx5f8) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% GE.ge xx5f6 (Int.ofNat 10))) (And (Not xx5f4) (Not xx5f5))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (binrel% GE.ge xx5f12 (Int.ofNat 8))) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0))) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) := by timed congr lean_s715 lean_s725
have lean_s727 : (Eq And And) := by timed rfl
have lean_s728 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s729 := by timed flipCongrArg lean_s728 [HMul.hMul]
have lean_s730 : (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed rfl
let lean_s731 := by timed flipCongrArg lean_s730 [Eq]
have lean_s732 : (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed rfl
have lean_s733 : (Eq (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s731 lean_s732
let lean_s734 := by timed Eq.trans lean_r79 lean_s733
have lean_s735 : (Eq (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) True) := by timed Eq.trans lean_s734 lean_r73
have lean_s736 : (Eq (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) := by timed trueElim lean_s735
have lean_s737 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) := by timed congr lean_s729 lean_s736
let lean_s738 := by timed flipCongrArg lean_s737 [GE.ge]
have lean_s739 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s738 lean_s728
let lean_s740 := by timed congr lean_s727 lean_s739
let lean_s741 := by timed flipCongrArg lean_s736 [GE.ge]
have lean_s742 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s743 : (Eq (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0))) := by timed congr lean_s741 lean_s742
let lean_s744 := by timed congr lean_s727 lean_s743
have lean_s745 : (Eq (binrel% GE.ge xx5f9 (Int.ofNat 0)) (binrel% GE.ge xx5f9 (Int.ofNat 0))) := by timed rfl
let lean_s746 := by timed congr lean_s727 lean_s745
have lean_s747 : (Eq (binrel% GE.ge xx5f11 (Int.ofNat 0)) (binrel% GE.ge xx5f11 (Int.ofNat 0))) := by timed rfl
let lean_s748 := by timed congr lean_s727 lean_s747
have lean_s749 : (Eq (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))))) := by timed rfl
let lean_s750 := by timed congr lean_s727 lean_s749
have lean_s751 : (Eq (Or (Not xx5f5) (Not xx5f4)) (Or (Not xx5f5) (Not xx5f4))) := by timed rfl
let lean_s752 := by timed congr lean_s750 lean_s751
let lean_s753 := by timed congr lean_s748 lean_s752
let lean_s754 := by timed congr lean_s746 lean_s753
let lean_s755 := by timed congr lean_s744 lean_s754
have lean_s756 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not xx5f5) (Not xx5f4))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) := by timed congr lean_s740 lean_s755
have lean_s757 : (Eq (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (binrel% GE.ge xx5f12 (Int.ofNat 0))) (And (Not xx5f8) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (binrel% GE.ge xx5f7 (Int.ofNat 0))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (binrel% GE.ge xx5f6 (Int.ofNat 10))) (And (Not xx5f4) (Not xx5f5))))))) (And (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (binrel% GE.ge xx5f12 (Int.ofNat 8))) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4)))) (And (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0))) (And (Not xx5f4) (Not xx5f5)))))))))))))) (Or (Not xx5f5) (Not xx5f4))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) := by timed Eq.trans lean_s726 lean_s756
have lean_s758 : (Eq (And (And (And (And (And (And (And (And (And (binrel% LE.le xx5f10 (Rat.ofInt 1)) (binrel% GE.ge xx5f10 (Rat.ofInt 0))) (And (Not xx5f0) (Not xx5f1))) (Not (binrel% LT.lt xx5f9 (Rat.ofInt 0)))) (Eq xx5f10 (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat))) (Not (binrel% LT.lt xx5f11 (Rat.ofInt 0)))) (Or (Or (Or (Or (Or (Or (Or (Or (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 0)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 1)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 40)) (Rat.ofInt 0) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 2)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 3)) (Not xx5f8)) (And (Not xx5f0) (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) xx5f4) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 4)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (And (Not xx5f4) xx5f5)) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 5)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Or (Or (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Eq (Rat.ofInt 10) (Rat.ofInt 0))) (Eq (Rat.ofInt 10) (Rat.ofInt 40)))) (Eq xx5f3 (smtIte (Eq (Rat.ofInt 20) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 20) Rat))) (Eq xx5f6 (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 40)) (Rat.ofInt 0) (smtIte (Eq (Rat.ofInt 10) (Rat.ofInt 0)) (Rat.ofInt 40) (Rat.ofInt 10) Rat) Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))) (Eq xx5f7 (Rat.ofInt 2)))) (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 6)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0)))) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1)))) (And (And (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 7)) (Not xx5f8)) (And xx5f0 (Not xx5f1))) (Eq (Rat.ofInt 2) (Rat.ofInt 2))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 0)))) (Not (Eq (Rat.ofInt 20) (Rat.ofInt 40)))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 5)) (binrel% HMul.hMul (Rat.ofInt 20) (Rat.ofInt 6))) (Rat.ofInt 40)) (Rat.ofInt 0))) (Not xx5f4)) (Not xx5f5)) (Eq xx5f7 (Rat.ofInt 0))) (Eq xx5f3 (Rat.ofInt 20))) (Eq xx5f6 (Rat.ofInt 10)))) (And (And (And (And (And (And (And (And (And (Eq xx5f12 (Rat.ofInt 8)) xx5f8) (Not (binrel% LT.lt xx5f2 (Rat.ofInt 0)))) (Or (Or xx5f0 xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (Or (Not xx5f0) xx5f1) (And (And (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) (Rat.ofInt 2)) (Not (binrel% LT.lt (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) (Rat.ofInt 0)))) (binrel% LE.le (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))) (Rat.ofInt 40))))) (Or (And (Or xx5f0 xx5f1) (Or (Not xx5f0) xx5f1)) (And (Not (binrel% LT.lt (binrel% HMul.hMul xx5f11 (Rat.ofInt 2)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 10) (Rat.ofInt 2)) xx5f2))) (binrel% LE.le xx5f11 (binrel% HAdd.hAdd (Rat.ofInt 10) (binrel% HMul.hMul xx5f2 (Rat.ofInt 6))))))) (Eq xx5f7 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 2) xx5f2) Rat))) (Eq xx5f3 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 20) (binrel% HAdd.hAdd (Rat.ofInt 20) (binrel% HMul.hMul xx5f2 (Rat.ofInt 5))) Rat))) (Eq xx5f6 (smtIte (And (Not xx5f0) xx5f1) (Rat.ofInt 10) xx5f11 Rat))) (And (Eq xx5f4 xx5f0) (Eq xx5f5 xx5f1))))) (Or (Eq xx5f3 xx5f6) (Eq (Rat.ofInt 20) (Rat.ofInt 10)))) (Or (Not xx5f1) (Not xx5f0))) (Or (Not xx5f5) (Not xx5f4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not xx5f5) (Not xx5f4)))))))) := by timed Eq.trans lean_s713 lean_s757
have lean_s759 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat)) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (smtIte xx5f8 (Rat.ofInt 0) (Rat.ofInt 1) Rat) (Int.ofNat 0)) (And (binrel% GE.ge xx5f9 (Int.ofNat 0)) (And (binrel% GE.ge xx5f11 (Int.ofNat 0)) (And (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not xx5f5) (Not xx5f4))))))) := by timed eqResolve lean_a136 lean_s758
have lean_s760 : (Or (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) := by andElim lean_s759, 4
have lean_s761 : (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) False)))) :=
  (scope (fun lean_a139 : (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) =>
    (scope (fun lean_a140 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) =>
      (scope (fun lean_a141 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) =>
        (scope (fun lean_a142 : (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) =>
          have lean_s761 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) False) :=
            (scope (fun lean_a143 : (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) =>
              have lean_s761 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r114
              have lean_s762 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) := by timed And.intro lean_s761 lean_a143
              have lean_s763 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))) := by arithMulNeg [(binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)), (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))), (Neg.neg (Rat.ofInt 1))], 3
              have lean_s764 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) := by timed modusPonens lean_s762 lean_s763
              have lean_s765 : (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 0)) := by timed trueElim lean_r130
              have lean_s766 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% LE.le (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Rat.ofInt 4)))) := by timed Eq.symm lean_r127
              have lean_s767 : (binrel% LE.le (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Rat.ofInt 4))) := by timed eqResolve lean_a141 lean_s766
              have lean_s768 : (And (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Rat.ofInt 4)))) := by timed And.intro lean_s765 lean_s767
              have lean_s769 : (Implies (And (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Rat.ofInt 4)))) (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))))) := by arithMulPos [(binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)), (Neg.neg (Rat.ofInt 4)), (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6))], 1
              have lean_s770 : (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4)))) := by timed modusPonens lean_s768 lean_s769
              have lean_s771 : (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by timed trueElim lean_r28
              have lean_s772 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Rat.ofInt 0))) := by timed Eq.symm lean_r32
              have lean_s773 : (binrel% LE.le (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Rat.ofInt 0)) := by timed eqResolve lean_a140 lean_s772
              have lean_s774 : (And (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Rat.ofInt 0))) := by timed And.intro lean_s771 lean_s773
              have lean_s775 : (Implies (And (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Rat.ofInt 0))) (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)))) := by arithMulPos [(binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)), (Rat.ofInt 0), (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))], 1
              have lean_s776 : (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0))) := by timed modusPonens lean_s774 lean_s775
              have lean_s777 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (binrel% LE.le xx5f2 (Rat.ofInt 5))) := by timed Eq.symm lean_r106
              have lean_s778 : (binrel% LE.le xx5f2 (Rat.ofInt 5)) := by timed eqResolve lean_a139 lean_s777
              have lean_s779 : (And (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (binrel% LE.le xx5f2 (Rat.ofInt 5))) := by timed And.intro lean_s771 lean_s778
              have lean_s780 : (Implies (And (binrel% GT.gt (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (binrel% LE.le xx5f2 (Rat.ofInt 5))) (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5)))) := by arithMulPos [xx5f2, (Rat.ofInt 5), (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))], 1
              have lean_s781 : (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5))) := by timed modusPonens lean_s779 lean_s780
              have lean_s782 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5)))))) := by sumBounds [lean_s764, lean_s770, lean_s776, lean_s781]
              have lean_s783 : (Eq (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)) := by timed rfl
              let lean_s784 := by timed congrHAdd lean_r75 lean_s783
              let lean_s785 := by timed congrHAdd lean_r33 lean_s784
              have lean_s786 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) xx5f2) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f6) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2))))) := by timed congrHAdd lean_r4 lean_s785
              have lean_s787 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s786 lean_r38
              let lean_s788 := by timed flipCongrArg lean_s787 [LE.le]
              let lean_s789 := by timed congrHAdd lean_r47 lean_r70
              let lean_s790 := by timed congrHAdd lean_r68 lean_s789
              have lean_s791 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5))))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)))))) := by timed congrHAdd lean_r35 lean_s790
              have lean_s792 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)))) := by timed Eq.trans lean_s791 lean_r63
              have lean_s793 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5)))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6))))) := by timed congr lean_s788 lean_s792
              have lean_s794 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) xx5f2)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 6)) (Neg.neg (Rat.ofInt 4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 0)) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6)) (Rat.ofInt 5)))))) False) := by timed Eq.trans lean_s793 lean_r69
              show False from by timed eqResolve lean_s782 lean_s794
            ))
          have lean_s762 : (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) := by liftOrNToNeg lean_s761
          have lean_s763 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (binrel% LT.lt (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) := by timed Eq.symm lean_r71
          have lean_s764 : (binrel% LT.lt (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) := by timed eqResolve lean_s762 lean_s763
          have lean_s765 : (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) := by timed eqResolve lean_s764 lean_r71
          show False from by timed contradiction lean_a142 lean_s765
  ))))))))
have lean_s762 : (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))))) := by liftOrNToNeg lean_s761
have lean_s763 : (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4))) (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))))))) := by timed flipNotAnd lean_s762 [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))]
have lean_s764 : (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)))))) := by permutateOr lean_s763, [0, 3, 2, 1], (- 1)
have lean_s765 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))), (binrel% GE.ge xx5f12 (Int.ofNat 8)), xx5f8, (binrel% GE.ge xx5f2 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)), (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)), (Not xx5f4), (Not xx5f5)] 13
have lean_s766 : (Or (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))))) := by permutateOr lean_s765, [1, 0], (- 1)
let lean_s767 := by R2 lean_s764, lean_s766, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s768 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))), (binrel% GE.ge xx5f12 (Int.ofNat 8)), xx5f8, (binrel% GE.ge xx5f2 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)), (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)), (Not xx5f4), (Not xx5f5)] 11
have lean_s769 : (Or (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))))) := by permutateOr lean_s768, [1, 0], (- 1)
let lean_s770 := by R2 lean_s767, lean_s769, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s771 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))), (binrel% GE.ge xx5f12 (Int.ofNat 8)), xx5f8, (binrel% GE.ge xx5f2 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)), (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)), (Not xx5f4), (Not xx5f5)] 8
have lean_s772 : (Or (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))))) := by permutateOr lean_s771, [1, 0], (- 1)
let lean_s773 := by R2 lean_s770, lean_s772, (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))), [(- 1), (- 1)]
have lean_s774 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5)))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))), (binrel% GE.ge xx5f12 (Int.ofNat 8)), xx5f8, (binrel% GE.ge xx5f2 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)), (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)), (Not xx5f4), (Not xx5f5)] 6
have lean_s775 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))))) := by permutateOr lean_s774, [1, 0], (- 1)
have lean_s776 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))))))) := by R2 lean_s773, lean_s775, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))), [(- 1), (- 1)]
have lean_s777 : (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5)))))))))))))))))) := by factor lean_s776, 3
have lean_s778 : (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))) := by R1 lean_s760, lean_s777, (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Neg.neg (Int.ofNat 8))) (And (binrel% GE.ge xx5f12 (Int.ofNat 8)) (And xx5f8 (And (binrel% GE.ge xx5f2 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Int.ofNat 0)) (And (binrel% GE.ge xx5f2 (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (Neg.neg (Int.ofNat 5))) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Int.ofNat 2) xx5f11)) (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 6))) xx5f11)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) xx5f7) (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7)) (Neg.neg (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f2) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) xx5f6)) (Int.ofNat 4)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f2 (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) xx5f6)) (Neg.neg (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) xx5f11) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd xx5f6 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f11)) (Int.ofNat 0)) (And (Not xx5f4) (Not xx5f5))))))))))))))))), [(- 1), 0]
have lean_s779 : (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) := by R2 lean_s4, lean_s778, (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))), [(- 1), 0]
let lean_s780 := by R2 lean_s2, lean_s779, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))), [(- 1), 0]
have lean_s781 : (Or (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5)))))))))))) (binrel% GE.ge xx5f6 (Int.ofNat 20))) := by timed @cnfAndPos [(binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)), (binrel% GE.ge xx5f12 (Int.ofNat 0)), (Not xx5f8), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)), (binrel% GE.ge xx5f7 (Int.ofNat 0)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))), (binrel% GE.ge xx5f6 (Int.ofNat 20)), (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))), (binrel% GE.ge xx5f6 (Int.ofNat 10)), (Not xx5f4), (Not xx5f5)] 6
have lean_s782 : (Or (binrel% GE.ge xx5f6 (Int.ofNat 20)) (Not (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))))) := by permutateOr lean_s781, [1, 0], (- 1)
have lean_s783 : (binrel% GE.ge xx5f6 (Int.ofNat 20)) := by R2 lean_s782, lean_s778, (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f12) (Int.ofNat 0)) (And (binrel% GE.ge xx5f12 (Int.ofNat 0)) (And (Not xx5f8) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f7) (Int.ofNat 0)) (And (binrel% GE.ge xx5f7 (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 20))) (And (binrel% GE.ge xx5f6 (Int.ofNat 20)) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) xx5f6) (Neg.neg (Int.ofNat 10))) (And (binrel% GE.ge xx5f6 (Int.ofNat 10)) (And (Not xx5f4) (Not xx5f5))))))))))), [(- 1), 0]
exact (show False from by R2 lean_s780, lean_s783, (binrel% GE.ge xx5f6 (Int.ofNat 20)), [0, 0])


