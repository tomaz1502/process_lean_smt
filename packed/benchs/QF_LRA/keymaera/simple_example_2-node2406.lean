-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {buscore2dollarskuscore1 : Rat}
variable {e : Rat}
variable {e : Rat}
variable {auscore2dollarskuscore1 : Rat}
variable {buscore2dollarskuscore1 : Rat}
variable {auscore2dollarskuscore1 : Rat}
variable {cuscore2dollarskuscore1 : Rat}
variable {cuscore2dollarskuscore1 : Rat}

theorem th0 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) cuscore2dollarskuscore1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)) → (Eq (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (Rat.ofInt 5) (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3)) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2)))))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 3)) (Neg.neg (Rat.ofInt 3))) → (Eq (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2)) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2)))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (Neg.neg (Rat.ofInt 3))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2)) (Neg.neg (Rat.ofInt 2))) → (Eq (binrel% HAdd.hAdd cuscore2dollarskuscore1 (Neg.neg (Rat.ofInt 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) cuscore2dollarskuscore1)) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (Rat.ofInt 5) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) cuscore2dollarskuscore1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) cuscore2dollarskuscore1))) → (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 3)))) → (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1))) (Rat.ofInt 10)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))) → (Not (Implies (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (Rat.ofInt 10)) (Or (Eq e (Rat.ofInt 0)) (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (Rat.ofInt 10))))) → False :=
fun lean_r0 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) cuscore2dollarskuscore1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1)) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (Rat.ofInt 5) (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3)) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2)))))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 3)) (Neg.neg (Rat.ofInt 3))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2)) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (Neg.neg (Rat.ofInt 3))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2)) (Neg.neg (Rat.ofInt 2))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HAdd.hAdd cuscore2dollarskuscore1 (Neg.neg (Rat.ofInt 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) cuscore2dollarskuscore1)) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (Rat.ofInt 5) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) cuscore2dollarskuscore1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) cuscore2dollarskuscore1))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1))) (Rat.ofInt 10)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))) => -- THEORY_REWRITE_ARITH
fun lean_a13 : (Not (Implies (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (Rat.ofInt 10)) (Or (Eq e (Rat.ofInt 0)) (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (Rat.ofInt 10))))) => by
have lean_s0 : (Or (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))) (Not (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))))) := by timed @cnfOrNeg [(Eq e (Rat.ofInt 0)), (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))] 1
have lean_s1 : (Eq cuscore2dollarskuscore1 cuscore2dollarskuscore1) := by timed rfl
let lean_s2 := by timed congrHAdd lean_r2 lean_s1
have lean_s3 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) cuscore2dollarskuscore1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) cuscore2dollarskuscore1))) := by timed congrHAdd lean_r1 lean_s2
have lean_s4 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) cuscore2dollarskuscore1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) := by timed Eq.trans lean_s3 lean_r0
have lean_s5 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) := by timed Eq.trans lean_r10 lean_s4
let lean_s6 := by timed flipCongrArg lean_s5 [Eq]
have lean_s7 : (Eq (Rat.ofInt 10) (Rat.ofInt 10)) := by timed rfl
have lean_s8 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (Rat.ofInt 10)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1))) (Rat.ofInt 10))) := by timed congr lean_s6 lean_s7
have lean_s9 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (Rat.ofInt 10)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))) := by timed Eq.trans lean_s8 lean_r12
let lean_s10 := by timed flipCongrArg lean_s9 [Implies]
have lean_s11 : (Eq (Eq e (Rat.ofInt 0)) (Eq e (Rat.ofInt 0))) := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Or]
have lean_s13 : (Eq (Rat.ofInt 5) (Rat.ofInt 5)) := by timed rfl
let lean_s14 := by timed flipCongrArg lean_r2 [HAdd.hAdd]
have lean_s15 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (Neg.neg (Rat.ofInt 3)))) := by timed congr lean_s14 lean_r4
have lean_s16 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 3))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1))) := by timed Eq.trans lean_s15 lean_r6
have lean_s17 : (Eq (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1))) := by timed Eq.trans lean_r11 lean_s16
let lean_s18 := by timed flipCongrArg lean_s1 [HAdd.hAdd]
have lean_s19 : (Eq (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2))) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (Neg.neg (Rat.ofInt 2)))) := by timed congr lean_s18 lean_r7
have lean_s20 : (Eq (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) cuscore2dollarskuscore1)) := by timed Eq.trans lean_s19 lean_r8
have lean_s21 : (Eq (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) cuscore2dollarskuscore1)) := by timed Eq.trans lean_r5 lean_s20
let lean_s22 := by timed congrHAdd lean_s17 lean_s21
let lean_s23 := by timed congrHAdd lean_s13 lean_s22
have lean_s24 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (Rat.ofInt 5) (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3)) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (Rat.ofInt 5) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) cuscore2dollarskuscore1))))) := by timed congrHAdd lean_r1 lean_s23
have lean_s25 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HAdd.hAdd (Rat.ofInt 5) (binrel% HAdd.hAdd (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3)) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) := by timed Eq.trans lean_s24 lean_r9
have lean_s26 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1)))) := by timed Eq.trans lean_r3 lean_s25
let lean_s27 := by timed flipCongrArg lean_s26 [Eq]
have lean_s28 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (Rat.ofInt 10)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 3) buscore2dollarskuscore1) (binrel% HAdd.hAdd cuscore2dollarskuscore1 (binrel% HMul.hMul (Int.ofNat 5) auscore2dollarskuscore1))) (Rat.ofInt 10))) := by timed congr lean_s27 lean_s7
have lean_s29 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (Rat.ofInt 10)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))) := by timed Eq.trans lean_s28 lean_r12
have lean_s30 : (Eq (Or (Eq e (Rat.ofInt 0)) (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (Rat.ofInt 10))) (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))))) := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq (Implies (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (Rat.ofInt 10)) (Or (Eq e (Rat.ofInt 0)) (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (Rat.ofInt 10)))) (Implies (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))) (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))))) := by timed congr lean_s10 lean_s30
have lean_s32 : (Eq (Not (Implies (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1)) cuscore2dollarskuscore1) (Rat.ofInt 10)) (Or (Eq e (Rat.ofInt 0)) (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 5) auscore2dollarskuscore1) (Rat.ofInt 5)) (binrel% HSub.hSub (binrel% HMul.hMul (Rat.ofInt 3) buscore2dollarskuscore1) (Rat.ofInt 3))) (binrel% HSub.hSub cuscore2dollarskuscore1 (Rat.ofInt 2))) (Rat.ofInt 10))))) (Not (Implies (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))) (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))))))) := by timed flipCongrArg lean_s31 [Not]
have lean_s33 : (Not (Implies (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))) (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))))) := by timed eqResolve lean_a13 lean_s32
have lean_s34 : (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))) := by timed notImplies1 lean_s33
have lean_s35 : (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))) := by R2 lean_s0, lean_s34, (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))), [(- 1), 0]
have lean_s36 : (Not (Implies (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))) (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1))))))) := by timed eqResolve lean_a13 lean_s32
have lean_s37 : (Not (Or (Eq e (Rat.ofInt 0)) (Eq buscore2dollarskuscore1 (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 10) (Int.ofNat 3)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 3))) cuscore2dollarskuscore1) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 5) (Int.ofNat 3))) auscore2dollarskuscore1)))))) := by timed notImplies2 lean_s36
exact (show False from by timed contradiction lean_s35 lean_s37)


