-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {skoX : Rat}
variable {skoY : Rat}
variable {pi : Rat}
variable {skoX : Rat}
variable {skoY : Rat}
variable {pi : Rat}

theorem th0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Rat.ofInt 0)))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) → (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) → (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% GE.ge skoX (Rat.ofInt 0)) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (binrel% LE.le skoY skoX) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) skoX) skoX) → (Eq (binrel% LE.le skoY (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) → (Eq (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) skoX) skoX) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)) (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) → (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)))) → (Eq (binrel% HAdd.hAdd pi (Rat.ofInt 0)) pi) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))) → (Eq (And True (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) → (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))))))))))) → (Eq (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) → (Eq (Not True) False) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) → (Eq (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) (Rat.ofInt 0)) → (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))))))))) → False :=
fun lean_r0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r1 : (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r3 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% GE.ge skoX (Rat.ofInt 0)) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% LE.le skoY skoX) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) True) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) skoX) skoX) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% LE.le skoY (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) skoX) skoX) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)) (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% HAdd.hAdd pi (Rat.ofInt 0)) pi) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (And True (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_a34 : (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (Or (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) False)) :=
  (scope (fun lean_a35 : (Not (binrel% GE.ge skoX (Int.ofNat 0))) =>
    (scope (fun lean_a36 : (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) =>
      have lean_s0 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r0
      have lean_s1 : (Eq (Not (binrel% GE.ge skoX (Rat.ofInt 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed flipCongrArg lean_r7 [Not]
      have lean_s2 : (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed Eq.trans lean_r1 lean_s1
      have lean_s3 : (Eq (Not (binrel% GE.ge skoX (Int.ofNat 0))) (binrel% LT.lt skoX (Rat.ofInt 0))) := by timed Eq.symm lean_s2
      have lean_s4 : (binrel% LT.lt skoX (Rat.ofInt 0)) := by timed eqResolve lean_a35 lean_s3
      have lean_s5 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt skoX (Rat.ofInt 0))) := by timed And.intro lean_s0 lean_s4
      have lean_s6 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt skoX (Rat.ofInt 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)))) := by arithMulPos [skoX, (Rat.ofInt 0), (Rat.ofInt 1)], 0
      have lean_s7 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0))) := by timed modusPonens lean_s5 lean_s6
      have lean_s8 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r2
      have lean_s9 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s8 lean_a36
      have lean_s10 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoX, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 3
      have lean_s11 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s9 lean_s10
      have lean_s12 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by sumBounds [lean_s7, lean_s11]
      let lean_s13 := by timed flipCongrArg lean_r13 [HAdd.hAdd]
      have lean_s14 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) := by timed congr lean_s13 lean_r33
      have lean_s15 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (Rat.ofInt 0)) := by timed Eq.trans lean_s14 lean_r31
      let lean_s16 := by timed flipCongrArg lean_s15 [GE.ge]
      let lean_s17 := by timed flipCongrArg lean_r23 [HAdd.hAdd]
      have lean_s18 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed congr lean_s17 lean_r30
      have lean_s19 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.trans lean_s18 lean_r17
      have lean_s20 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed congr lean_s16 lean_s19
      have lean_s21 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_s20 lean_r9
      have lean_s22 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Not True)) := by timed flipCongrArg lean_s21 [Not]
      have lean_s23 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) False) := by timed Eq.trans lean_s22 lean_r29
      have lean_s24 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) False) := by timed Eq.trans lean_r3 lean_s23
      show False from by timed eqResolve lean_s12 lean_s24
  ))))
have lean_s1 : (Not (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge skoX (Int.ofNat 0))), (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))]
let lean_s3 := by timed flipCongrArg lean_r27 [Or]
have lean_s4 : (Eq (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
have lean_s5 : (Eq (Or (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Or (binrel% GE.ge skoX (Int.ofNat 0)) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s3 lean_s4
have lean_s6 : (Or (binrel% GE.ge skoX (Int.ofNat 0)) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed eqResolve lean_s2 lean_s5
have lean_s7 : (Eq And And) := by timed rfl
have lean_s8 : (Eq (Eq skoY (Rat.ofInt 0)) (Eq skoY (Rat.ofInt 0))) := by timed rfl
let lean_s9 := by timed congr lean_s7 lean_s8
have lean_s10 : (Eq (Not (binrel% LE.le skoY skoX)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_r8 [Not]
let lean_s11 := by timed congr lean_s7 lean_s10
let lean_s12 := by timed flipCongrArg lean_r25 [LE.le]
have lean_s13 : (Eq skoX skoX) := by timed rfl
have lean_s14 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)) skoX)) := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.trans lean_s14 lean_r28
let lean_s16 := by timed congr lean_s7 lean_s15
let lean_s17 := by timed flipCongrArg lean_r20 [LE.le]
have lean_s18 : (Eq pi pi) := by timed rfl
have lean_s19 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi)) := by timed congr lean_s17 lean_s18
have lean_s20 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) := by timed Eq.trans lean_s19 lean_r24
have lean_s21 : (Eq (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed flipCongrArg lean_s20 [Not]
let lean_s22 := by timed congr lean_s7 lean_s21
let lean_s23 := by timed flipCongrArg lean_s18 [LE.le]
have lean_s24 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))) (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))) := by timed congr lean_s23 lean_r15
have lean_s25 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) := by timed Eq.trans lean_s24 lean_r4
have lean_s26 : (Eq (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed flipCongrArg lean_s25 [Not]
let lean_s27 := by timed congr lean_s7 lean_s26
have lean_s28 : (Eq skoY skoY) := by timed rfl
let lean_s29 := by timed flipCongrArg lean_s28 [LE.le]
let lean_s30 := by timed flipCongrArg lean_r32 [HMul.hMul]
have lean_s31 : (Eq (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) := by timed rfl
have lean_s32 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)))) := by timed congr lean_s30 lean_s31
have lean_s33 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)))) := by timed Eq.trans lean_s32 lean_r18
have lean_s34 : (Eq (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5)))) := by timed Eq.trans lean_r12 lean_s33
let lean_s35 := by timed flipCongrArg lean_s34 [HAdd.hAdd]
let lean_s36 := by timed flipCongrArg lean_s18 [HMul.hMul]
have lean_s37 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)))) := by timed congr lean_s36 lean_r22
have lean_s38 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) := by timed Eq.trans lean_s37 lean_r5
have lean_s39 : (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi))) := by timed congr lean_s35 lean_s38
have lean_s40 : (Eq (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))))) (binrel% LE.le skoY (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 5))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)))) := by timed congr lean_s29 lean_s39
have lean_s41 : (Eq (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) := by timed Eq.trans lean_s40 lean_r11
let lean_s42 := by timed congr lean_s27 lean_s41
let lean_s43 := by timed congr lean_s22 lean_s42
let lean_s44 := by timed congr lean_s16 lean_s43
let lean_s45 := by timed congr lean_s11 lean_s44
have lean_s46 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))))))))) := by timed congr lean_s9 lean_s45
have lean_s47 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))))))))) := by timed Eq.trans lean_r26 lean_s46
have lean_s48 : (Eq And And) := by timed rfl
have lean_s49 : (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) := by timed eqResolve lean_a34 lean_s47
have lean_s50 : (Eq skoY (Rat.ofInt 0)) := by andElim lean_s49, 0
let lean_s51 := by timed flipCongrArg lean_s50 [Eq]
have lean_s52 : (Eq (Rat.ofInt 0) (Rat.ofInt 0)) := by timed rfl
have lean_s53 : (Eq (Eq skoY (Rat.ofInt 0)) (Eq (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s51 lean_s52
let lean_s54 := by timed congr lean_s48 lean_s53
have lean_s55 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s56 := by timed flipCongrArg lean_s55 [HMul.hMul]
have lean_s57 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0))) := by timed congr lean_s56 lean_s50
let lean_s58 := by timed flipCongrArg lean_s57 [HAdd.hAdd]
have lean_s59 : (Eq skoX skoX) := by timed rfl
have lean_s60 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX)) := by timed congr lean_s58 lean_s59
let lean_s61 := by timed flipCongrArg lean_s60 [GE.ge]
have lean_s62 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s63 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) := by timed congr lean_s61 lean_s62
have lean_s64 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_s63 [Not]
let lean_s65 := by timed congr lean_s48 lean_s64
have lean_s66 : (Eq (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed rfl
let lean_s67 := by timed congr lean_s48 lean_s66
have lean_s68 : (Eq (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed rfl
let lean_s69 := by timed congr lean_s48 lean_s68
have lean_s70 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed rfl
let lean_s71 := by timed congr lean_s48 lean_s70
have lean_s72 : (Eq pi pi) := by timed rfl
let lean_s73 := by timed flipCongrArg lean_s72 [HAdd.hAdd]
have lean_s74 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
let lean_s75 := by timed flipCongrArg lean_s74 [HMul.hMul]
have lean_s76 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) := by timed congr lean_s75 lean_s50
have lean_s77 : (Eq (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0)))) := by timed congr lean_s73 lean_s76
let lean_s78 := by timed flipCongrArg lean_s77 [GE.ge]
have lean_s79 : (Eq (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))) := by timed rfl
have lean_s80 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) := by timed congr lean_s78 lean_s79
let lean_s81 := by timed congr lean_s71 lean_s80
let lean_s82 := by timed congr lean_s69 lean_s81
let lean_s83 := by timed congr lean_s67 lean_s82
let lean_s84 := by timed congr lean_s65 lean_s83
have lean_s85 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))))))))) := by timed congr lean_s54 lean_s84
have lean_s86 : (Eq And And) := by timed rfl
let lean_s87 := by timed congr lean_s86 lean_r16
let lean_s88 := by timed flipCongrArg lean_r6 [HAdd.hAdd]
have lean_s89 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (binrel% HAdd.hAdd (Rat.ofInt 0) skoX)) := by timed congr lean_s88 lean_s13
have lean_s90 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) skoX) := by timed Eq.trans lean_s89 lean_r10
let lean_s91 := by timed flipCongrArg lean_s90 [GE.ge]
have lean_s92 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s93 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))) := by timed congr lean_s91 lean_s92
have lean_s94 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed flipCongrArg lean_s93 [Not]
let lean_s95 := by timed congr lean_s86 lean_s94
have lean_s96 : (Eq (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed rfl
let lean_s97 := by timed congr lean_s86 lean_s96
have lean_s98 : (Eq (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed rfl
let lean_s99 := by timed congr lean_s86 lean_s98
have lean_s100 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed rfl
let lean_s101 := by timed congr lean_s86 lean_s100
let lean_s102 := by timed flipCongrArg lean_s18 [HAdd.hAdd]
have lean_s103 : (Eq (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (binrel% HAdd.hAdd pi (Rat.ofInt 0))) := by timed congr lean_s102 lean_r14
have lean_s104 : (Eq (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) pi) := by timed Eq.trans lean_s103 lean_r19
let lean_s105 := by timed flipCongrArg lean_s104 [GE.ge]
have lean_s106 : (Eq (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))) := by timed rfl
have lean_s107 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) := by timed congr lean_s105 lean_s106
let lean_s108 := by timed congr lean_s101 lean_s107
let lean_s109 := by timed congr lean_s99 lean_s108
let lean_s110 := by timed congr lean_s97 lean_s109
let lean_s111 := by timed congr lean_s95 lean_s110
have lean_s112 : (Eq (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) (And True (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))))))))) := by timed congr lean_s87 lean_s111
have lean_s113 : (Eq (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) := by timed Eq.trans lean_s112 lean_r21
have lean_s114 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) := by timed Eq.trans lean_s85 lean_s113
have lean_s115 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le skoY skoX)) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) skoX) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (binrel% LE.le skoY (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 5)) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))))))))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))))))) := by timed Eq.trans lean_s47 lean_s114
have lean_s116 : (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))))))) := by timed eqResolve lean_a34 lean_s115
have lean_s117 : (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by andElim lean_s116, 1
let lean_s118 := by R2 lean_s6, lean_s117, (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))), [(- 1), 0]
have lean_s119 : (Not (binrel% GE.ge skoX (Int.ofNat 0))) := by andElim lean_s116, 0
exact (show False from by R1 lean_s118, lean_s119, (binrel% GE.ge skoX (Int.ofNat 0)), [0, 0])


