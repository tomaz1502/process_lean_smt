-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {skoY : Rat}
variable {pi : Rat}
variable {skoX : Rat}
variable {pi : Rat}
variable {skoY : Rat}
variable {skoX : Rat}

theorem th0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))) → (Eq (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) (Rat.ofInt 0)) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) → (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) → (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Rat.ofInt 0)))) → (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX)))))))) → (Eq (binrel% LE.le skoY skoX) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) → (Eq (binrel% GE.ge skoX (Rat.ofInt 0)) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) skoX) skoX) → (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)) (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) True) → (Eq (binrel% LE.le skoY (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))))) → (Eq (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) skoX) skoX) → (Eq (Not True) False) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (And True (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))))))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) → (Eq (binrel% HAdd.hAdd pi (Rat.ofInt 0)) pi) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX))))))) → False :=
fun lean_r0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r1 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq (binrel% LE.le skoY skoX) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r13 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% GE.ge skoX (Rat.ofInt 0)) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) skoX) skoX) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)) (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) True) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% LE.le skoY (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) skoX) skoX) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (And True (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (binrel% HAdd.hAdd pi (Rat.ofInt 0)) pi) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_a31 : (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (Or (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) False)) :=
  (scope (fun lean_a32 : (Not (binrel% GE.ge skoX (Int.ofNat 0))) =>
    (scope (fun lean_a33 : (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) =>
      have lean_s0 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r0
      have lean_s1 : (Eq (Not (binrel% GE.ge skoX (Rat.ofInt 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed flipCongrArg lean_r14 [Not]
      have lean_s2 : (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed Eq.trans lean_r8 lean_s1
      have lean_s3 : (Eq (Not (binrel% GE.ge skoX (Int.ofNat 0))) (binrel% LT.lt skoX (Rat.ofInt 0))) := by timed Eq.symm lean_s2
      have lean_s4 : (binrel% LT.lt skoX (Rat.ofInt 0)) := by timed eqResolve lean_a32 lean_s3
      have lean_s5 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt skoX (Rat.ofInt 0))) := by timed And.intro lean_s0 lean_s4
      have lean_s6 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt skoX (Rat.ofInt 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)))) := by arithMulPos [skoX, (Rat.ofInt 0), (Rat.ofInt 1)], 0
      have lean_s7 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0))) := by timed modusPonens lean_s5 lean_s6
      have lean_s8 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r12
      have lean_s9 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) := by timed And.intro lean_s8 lean_a33
      have lean_s10 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by arithMulNeg [skoX, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)), (Neg.neg (Rat.ofInt 1))], 3
      have lean_s11 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) := by timed modusPonens lean_s9 lean_s10
      have lean_s12 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by sumBounds [lean_s7, lean_s11]
      let lean_s13 := by timed flipCongrArg lean_r22 [HAdd.hAdd]
      have lean_s14 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) := by timed congr lean_s13 lean_r30
      have lean_s15 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (Rat.ofInt 0)) := by timed Eq.trans lean_s14 lean_r5
      let lean_s16 := by timed flipCongrArg lean_s15 [GE.ge]
      let lean_s17 := by timed flipCongrArg lean_r28 [HAdd.hAdd]
      have lean_s18 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by timed congr lean_s17 lean_r13
      have lean_s19 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) := by timed Eq.trans lean_s18 lean_r26
      have lean_s20 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by timed congr lean_s16 lean_s19
      have lean_s21 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) True) := by timed Eq.trans lean_s20 lean_r18
      have lean_s22 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))))) (Not True)) := by timed flipCongrArg lean_s21 [Not]
      have lean_s23 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))))) False) := by timed Eq.trans lean_s22 lean_r23
      have lean_s24 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) False) := by timed Eq.trans lean_r20 lean_s23
      show False from by timed eqResolve lean_s12 lean_s24
  ))))
have lean_s1 : (Not (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge skoX (Int.ofNat 0))), (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))]
let lean_s3 := by timed flipCongrArg lean_r21 [Or]
have lean_s4 : (Eq (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by timed rfl
have lean_s5 : (Eq (Or (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) (Or (binrel% GE.ge skoX (Int.ofNat 0)) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))))) := by timed congr lean_s3 lean_s4
have lean_s6 : (Or (binrel% GE.ge skoX (Int.ofNat 0)) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))))) := by timed eqResolve lean_s2 lean_s5
have lean_s7 : (Eq And And) := by timed rfl
have lean_s8 : (Eq (Eq skoY (Rat.ofInt 0)) (Eq skoY (Rat.ofInt 0))) := by timed rfl
let lean_s9 := by timed congr lean_s7 lean_s8
have lean_s10 : (Eq pi pi) := by timed rfl
let lean_s11 := by timed flipCongrArg lean_s10 [LE.le]
have lean_s12 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))) (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))) := by timed congr lean_s11 lean_r17
have lean_s13 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) := by timed Eq.trans lean_s12 lean_r16
have lean_s14 : (Eq (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed flipCongrArg lean_s13 [Not]
let lean_s15 := by timed congr lean_s7 lean_s14
let lean_s16 := by timed flipCongrArg lean_r4 [LE.le]
have lean_s17 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi)) := by timed congr lean_s16 lean_s10
have lean_s18 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) := by timed Eq.trans lean_s17 lean_r1
have lean_s19 : (Eq (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed flipCongrArg lean_s18 [Not]
let lean_s20 := by timed congr lean_s7 lean_s19
have lean_s21 : (Eq skoY skoY) := by timed rfl
let lean_s22 := by timed flipCongrArg lean_s21 [LE.le]
let lean_s23 := by timed flipCongrArg lean_s10 [HMul.hMul]
have lean_s24 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)))) := by timed congr lean_s23 lean_r2
have lean_s25 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) := by timed Eq.trans lean_s24 lean_r7
have lean_s26 : (Eq (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (binrel% LE.le skoY (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi))) := by timed congr lean_s22 lean_s25
have lean_s27 : (Eq (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0))) := by timed Eq.trans lean_s26 lean_r19
let lean_s28 := by timed congr lean_s7 lean_s27
let lean_s29 := by timed flipCongrArg lean_r3 [LE.le]
have lean_s30 : (Eq skoX skoX) := by timed rfl
have lean_s31 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)) skoX)) := by timed congr lean_s29 lean_s30
have lean_s32 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) := by timed Eq.trans lean_s31 lean_r6
let lean_s33 := by timed congr lean_s7 lean_s32
have lean_s34 : (Eq (Not (binrel% LE.le skoY skoX)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_r10 [Not]
let lean_s35 := by timed congr lean_s33 lean_s34
let lean_s36 := by timed congr lean_s28 lean_s35
let lean_s37 := by timed congr lean_s20 lean_s36
let lean_s38 := by timed congr lean_s15 lean_s37
have lean_s39 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))))))))) := by timed congr lean_s9 lean_s38
have lean_s40 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))))))))) := by timed Eq.trans lean_r9 lean_s39
have lean_s41 : (Eq And And) := by timed rfl
have lean_s42 : (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)))))))) := by timed eqResolve lean_a31 lean_s40
have lean_s43 : (Eq skoY (Rat.ofInt 0)) := by andElim lean_s42, 0
let lean_s44 := by timed flipCongrArg lean_s43 [Eq]
have lean_s45 : (Eq (Rat.ofInt 0) (Rat.ofInt 0)) := by timed rfl
have lean_s46 : (Eq (Eq skoY (Rat.ofInt 0)) (Eq (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s44 lean_s45
let lean_s47 := by timed congr lean_s41 lean_s46
have lean_s48 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed rfl
let lean_s49 := by timed congr lean_s41 lean_s48
have lean_s50 : (Eq (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed rfl
let lean_s51 := by timed congr lean_s41 lean_s50
have lean_s52 : (Eq pi pi) := by timed rfl
let lean_s53 := by timed flipCongrArg lean_s52 [HAdd.hAdd]
have lean_s54 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
let lean_s55 := by timed flipCongrArg lean_s54 [HMul.hMul]
have lean_s56 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) := by timed congr lean_s55 lean_s43
have lean_s57 : (Eq (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0)))) := by timed congr lean_s53 lean_s56
let lean_s58 := by timed flipCongrArg lean_s57 [GE.ge]
have lean_s59 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s60 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (Int.ofNat 0))) := by timed congr lean_s58 lean_s59
let lean_s61 := by timed congr lean_s41 lean_s60
have lean_s62 : (Eq (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) := by timed rfl
let lean_s63 := by timed congr lean_s41 lean_s62
have lean_s64 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s65 := by timed flipCongrArg lean_s64 [HMul.hMul]
have lean_s66 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0))) := by timed congr lean_s65 lean_s43
let lean_s67 := by timed flipCongrArg lean_s66 [HAdd.hAdd]
have lean_s68 : (Eq skoX skoX) := by timed rfl
have lean_s69 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX)) := by timed congr lean_s67 lean_s68
let lean_s70 := by timed flipCongrArg lean_s69 [GE.ge]
have lean_s71 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) := by timed congr lean_s70 lean_s59
have lean_s72 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_s71 [Not]
let lean_s73 := by timed congr lean_s63 lean_s72
let lean_s74 := by timed congr lean_s61 lean_s73
let lean_s75 := by timed congr lean_s51 lean_s74
let lean_s76 := by timed congr lean_s49 lean_s75
have lean_s77 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)))))))) (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))))))))) := by timed congr lean_s47 lean_s76
have lean_s78 : (Eq And And) := by timed rfl
let lean_s79 := by timed congr lean_s78 lean_r29
have lean_s80 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed rfl
let lean_s81 := by timed congr lean_s78 lean_s80
have lean_s82 : (Eq (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed rfl
let lean_s83 := by timed congr lean_s78 lean_s82
let lean_s84 := by timed flipCongrArg lean_s10 [HAdd.hAdd]
have lean_s85 : (Eq (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (binrel% HAdd.hAdd pi (Rat.ofInt 0))) := by timed congr lean_s84 lean_r11
have lean_s86 : (Eq (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) pi) := by timed Eq.trans lean_s85 lean_r27
let lean_s87 := by timed flipCongrArg lean_s86 [GE.ge]
have lean_s88 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s89 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (Int.ofNat 0)) (binrel% GE.ge pi (Int.ofNat 0))) := by timed congr lean_s87 lean_s88
let lean_s90 := by timed congr lean_s78 lean_s89
have lean_s91 : (Eq (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20)))) := by timed rfl
let lean_s92 := by timed congr lean_s78 lean_s91
let lean_s93 := by timed flipCongrArg lean_r24 [HAdd.hAdd]
have lean_s94 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (binrel% HAdd.hAdd (Rat.ofInt 0) skoX)) := by timed congr lean_s93 lean_s30
have lean_s95 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) skoX) := by timed Eq.trans lean_s94 lean_r15
let lean_s96 := by timed flipCongrArg lean_s95 [GE.ge]
have lean_s97 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))) := by timed congr lean_s96 lean_s88
have lean_s98 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed flipCongrArg lean_s97 [Not]
let lean_s99 := by timed congr lean_s92 lean_s98
let lean_s100 := by timed congr lean_s90 lean_s99
let lean_s101 := by timed congr lean_s83 lean_s100
let lean_s102 := by timed congr lean_s81 lean_s101
have lean_s103 : (Eq (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)))))))) (And True (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0))))))))) := by timed congr lean_s79 lean_s102
have lean_s104 : (Eq (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) (Rat.ofInt 0))) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))))))) := by timed Eq.trans lean_s103 lean_r25
have lean_s105 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge (binrel% HAdd.hAdd pi (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) skoY)) (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))))))) := by timed Eq.trans lean_s77 lean_s104
have lean_s106 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (And (binrel% LE.le skoY (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)))) (And (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 20)) skoX) (Not (binrel% LE.le skoY skoX))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))))))) := by timed Eq.trans lean_s40 lean_s105
have lean_s107 : (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (And (binrel% GE.ge pi (Int.ofNat 0)) (And (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) (Not (binrel% GE.ge skoX (Int.ofNat 0))))))) := by timed eqResolve lean_a31 lean_s106
have lean_s108 : (Not (binrel% GE.ge skoX (Int.ofNat 0))) := by andElim lean_s107, 4
let lean_s109 := by R1 lean_s6, lean_s108, (binrel% GE.ge skoX (Int.ofNat 0)), [(- 1), 0]
have lean_s110 : (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))) := by andElim lean_s107, 3
exact (show False from by R2 lean_s109, lean_s110, (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 20))), [0, 0])


