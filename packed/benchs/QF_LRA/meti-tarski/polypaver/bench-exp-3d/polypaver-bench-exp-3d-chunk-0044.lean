-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {skoZ : Rat}
variable {skoX : Rat}
variable {skoY : Rat}
variable {skoZ : Rat}
variable {skoY : Rat}
variable {skoX : Rat}

theorem th0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) → (Eq (Neg.neg (Rat.ofInt 14)) (Neg.neg (Rat.ofInt 14))) → (Eq (binrel% LE.le skoY (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) → (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) → (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) → (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) → (Eq (binrel% LE.le skoX (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) → (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) → (Eq (Not True) False) → (Eq (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% GE.ge skoY (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) → (Eq (binrel% LE.le (Rat.ofInt 0) skoX) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) → (Eq (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 14)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) → (Eq (binrel% LE.le skoZ (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) → (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX)))))))) (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX))))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) → (Eq (binrel% LE.le (Rat.ofInt 0) skoZ) (binrel% GE.ge skoZ (Int.ofNat 0))) → (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) → (Eq (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 14)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9)))) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 55) (Int.ofNat 18)))) True) → (Eq (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 55) (Int.ofNat 18)))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Rat.ofInt 0)) → (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX)))))))) → False :=
fun lean_r0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r1 : (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (Neg.neg (Rat.ofInt 14)) (Neg.neg (Rat.ofInt 14))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% LE.le skoY (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% LE.le skoX (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% GE.ge skoY (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% LE.le (Rat.ofInt 0) skoX) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 14)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% LE.le skoZ (Rat.ofInt 1)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r23 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX)))))))) (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (binrel% LE.le (Rat.ofInt 0) skoZ) (binrel% GE.ge skoZ (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 14)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9)))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 55) (Int.ofNat 18)))) True) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 55) (Int.ofNat 18)))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_a35 : (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX)))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) False)) :=
  (scope (fun lean_a36 : (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) =>
    (scope (fun lean_a37 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) =>
      have lean_s0 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r0
      have lean_s1 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) := by timed Eq.symm lean_r8
      have lean_s2 : (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) := by timed eqResolve lean_a37 lean_s1
      have lean_s3 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) := by timed And.intro lean_s0 lean_s2
      have lean_s4 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))))) := by arithMulPos [(binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)), (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))), (Rat.ofInt 1)], 1
      have lean_s5 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) := by timed modusPonens lean_s3 lean_s4
      have lean_s6 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r22
      have lean_s7 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) := by timed flipCongrArg lean_r1 [Not]
      have lean_s8 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) := by timed Eq.trans lean_r11 lean_s7
      have lean_s9 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) := by timed Eq.symm lean_s8
      have lean_s10 : (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))) := by timed eqResolve lean_a36 lean_s9
      have lean_s11 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) := by timed And.intro lean_s6 lean_s10
      have lean_s12 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) := by arithMulNeg [(binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)), (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)), (Neg.neg (Rat.ofInt 1))], 2
      have lean_s13 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) := by timed modusPonens lean_s11 lean_s12
      have lean_s14 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) := by sumBounds [lean_s5, lean_s13]
      let lean_s15 := by timed flipCongrArg lean_r24 [HAdd.hAdd]
      have lean_s16 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))))) := by timed congr lean_s15 lean_r21
      have lean_s17 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s16 lean_r34
      let lean_s18 := by timed flipCongrArg lean_s17 [GE.ge]
      let lean_s19 := by timed flipCongrArg lean_r26 [HAdd.hAdd]
      have lean_s20 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) := by timed congr lean_s19 lean_r15
      have lean_s21 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 55) (Int.ofNat 18)))) := by timed Eq.trans lean_s20 lean_r32
      have lean_s22 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 55) (Int.ofNat 18))))) := by timed congr lean_s18 lean_s21
      have lean_s23 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) True) := by timed Eq.trans lean_s22 lean_r31
      have lean_s24 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) (Not True)) := by timed flipCongrArg lean_s23 [Not]
      have lean_s25 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) False) := by timed Eq.trans lean_s24 lean_r13
      have lean_s26 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) False) := by timed Eq.trans lean_r2 lean_s25
      show False from by timed eqResolve lean_s14 lean_s26
  ))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))]
let lean_s3 := by timed flipCongrArg lean_r29 [Or]
have lean_s4 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) := by timed rfl
have lean_s5 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) (Or (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))))) := by timed congr lean_s3 lean_s4
have lean_s6 : (Or (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))))) := by timed eqResolve lean_s2 lean_s5
have lean_s7 : (Eq And And) := by timed rfl
have lean_s8 : (Eq skoZ skoZ) := by timed rfl
let lean_s9 := by timed flipCongrArg lean_s8 [LE.le]
let lean_s10 := by timed flipCongrArg lean_r4 [HMul.hMul]
have lean_s11 : (Eq (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9))) := by timed rfl
have lean_s12 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 14)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 14)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9)))) := by timed congr lean_s10 lean_s11
have lean_s13 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 14)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 9))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) := by timed Eq.trans lean_s12 lean_r19
have lean_s14 : (Eq (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) := by timed Eq.trans lean_r30 lean_s13
have lean_s15 : (Eq skoX skoX) := by timed rfl
let lean_s16 := by timed flipCongrArg lean_s15 [HMul.hMul]
have lean_s17 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s16 lean_r9
have lean_s18 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) := by timed Eq.trans lean_s17 lean_r28
have lean_s19 : (Eq skoY skoY) := by timed rfl
let lean_s20 := by timed flipCongrArg lean_s19 [HMul.hMul]
have lean_s21 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s20 lean_r9
have lean_s22 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) := by timed Eq.trans lean_s21 lean_r7
let lean_s23 := by timed congrHAdd lean_s18 lean_s22
have lean_s24 : (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)))) := by timed congrHAdd lean_s14 lean_s23
have lean_s25 : (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) := by timed Eq.trans lean_s24 lean_r18
have lean_s26 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) := by timed Eq.trans lean_r23 lean_s25
have lean_s27 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% LE.le skoZ (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))))) := by timed congr lean_s9 lean_s26
have lean_s28 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9)))) := by timed Eq.trans lean_s27 lean_r17
let lean_s29 := by timed congr lean_s7 lean_s28
let lean_s30 := by timed flipCongrArg lean_s8 [LE.le]
let lean_s31 := by timed congrHAdd lean_s18 lean_s22
have lean_s32 : (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)))) := by timed congrHAdd lean_r33 lean_s31
have lean_s33 : (Eq (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) := by timed Eq.trans lean_s32 lean_r12
have lean_s34 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) := by timed Eq.trans lean_r3 lean_s33
have lean_s35 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))))) := by timed congr lean_s30 lean_s34
have lean_s36 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) := by timed Eq.trans lean_s35 lean_r6
have lean_s37 : (Eq (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))))) := by timed flipCongrArg lean_s36 [Not]
let lean_s38 := by timed congr lean_s7 lean_s37
let lean_s39 := by timed congr lean_s7 lean_r20
let lean_s40 := by timed congr lean_s7 lean_r5
let lean_s41 := by timed congr lean_s7 lean_r10
let lean_s42 := by timed congr lean_s7 lean_r27
let lean_s43 := by timed congr lean_s7 lean_r14
let lean_s44 := by timed congr lean_s43 lean_r16
let lean_s45 := by timed congr lean_s42 lean_s44
let lean_s46 := by timed congr lean_s41 lean_s45
let lean_s47 := by timed congr lean_s40 lean_s46
let lean_s48 := by timed congr lean_s39 lean_s47
let lean_s49 := by timed congr lean_s38 lean_s48
have lean_s50 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX)))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge skoZ (Int.ofNat 0)) (And (binrel% GE.ge skoY (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0)))))))))) := by timed congr lean_s29 lean_s49
have lean_s51 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Neg.neg (Rat.ofInt 14)) (Rat.ofInt 9)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HDiv.hDiv (Rat.ofInt 3) (Rat.ofInt 2)) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) (And (binrel% LE.le skoZ (Rat.ofInt 1)) (And (binrel% LE.le skoY (Rat.ofInt 1)) (And (binrel% LE.le skoX (Rat.ofInt 1)) (And (binrel% LE.le (Rat.ofInt 0) skoZ) (And (binrel% LE.le (Rat.ofInt 0) skoY) (binrel% LE.le (Rat.ofInt 0) skoX)))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge skoZ (Int.ofNat 0)) (And (binrel% GE.ge skoY (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0)))))))))) := by timed Eq.trans lean_r25 lean_s50
have lean_s52 : (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (Int.ofNat 1))) (And (binrel% GE.ge skoZ (Int.ofNat 0)) (And (binrel% GE.ge skoY (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))))))))) := by timed eqResolve lean_a35 lean_s51
have lean_s53 : (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2))))) := by andElim lean_s52, 1
let lean_s54 := by R1 lean_s6, lean_s53, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 2)))), [(- 1), 0]
have lean_s55 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))) := by andElim lean_s52, 0
exact (show False from by R2 lean_s54, lean_s55, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (binrel% HDiv.hDiv (Int.ofNat 14) (Int.ofNat 9))), [0, 0])


