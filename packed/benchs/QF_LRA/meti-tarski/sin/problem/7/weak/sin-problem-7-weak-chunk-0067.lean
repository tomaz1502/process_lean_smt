-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {skoX : Rat}
variable {skoY : Rat}
variable {pi : Rat}
variable {skoX : Rat}
variable {skoY : Rat}
variable {pi : Rat}

theorem th0 : (Eq (binrel% GE.ge skoX (Rat.ofInt 0)) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (binrel% GT.gt skoX (Rat.ofInt 0)) (Not (binrel% LE.le skoX (Rat.ofInt 0)))) → (Eq (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) (Rat.ofInt 0)) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) → (Eq (binrel% LE.le skoX (Rat.ofInt 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)) (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) skoX) skoX) → (Eq (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) → (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) → (Eq (binrel% GE.ge (binrel% HMul.hMul (Int.ofNat 2000) skoX) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) skoX) skoX) → (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) → (Eq (binrel% HMul.hMul skoX (Rat.ofInt 2000)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))) → (Eq (binrel% LE.le skoY skoX) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi) skoY) (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) → (Eq (And True (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))) → (Eq (binrel% LE.le skoY (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))))) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) → (Eq (binrel% LE.le (binrel% HMul.hMul (Int.ofNat 2000) skoX) skoY) (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) → (Eq (Not True) False) → (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))))))))))) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Rat.ofInt 0)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) → (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))))))))))) → False :=
fun lean_r0 : (Eq (binrel% GE.ge skoX (Rat.ofInt 0)) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% GT.gt skoX (Rat.ofInt 0)) (Not (binrel% LE.le skoX (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r4 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% LE.le skoX (Rat.ofInt 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)) (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) skoX) skoX) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq (Eq (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Int.ofNat 2000) skoX) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r18 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) skoX) skoX) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HMul.hMul skoX (Rat.ofInt 2000)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (binrel% LE.le skoY skoX) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi) skoY) (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (And True (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (binrel% LE.le skoY (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))))) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq (binrel% LE.le (binrel% HMul.hMul (Int.ofNat 2000) skoX) skoY) (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_a39 : (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))))))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) (Or (Not (Not (binrel% GE.ge skoX (Int.ofNat 0)))) False)) :=
  (scope (fun lean_a40 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) =>
    (scope (fun lean_a41 : (Not (binrel% GE.ge skoX (Int.ofNat 0))) =>
      have lean_s0 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r3
      have lean_s1 : (Eq (Not (binrel% GE.ge skoX (Rat.ofInt 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed flipCongrArg lean_r0 [Not]
      have lean_s2 : (Eq (binrel% LT.lt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed Eq.trans lean_r37 lean_s1
      have lean_s3 : (Eq (Not (binrel% GE.ge skoX (Int.ofNat 0))) (binrel% LT.lt skoX (Rat.ofInt 0))) := by timed Eq.symm lean_s2
      have lean_s4 : (binrel% LT.lt skoX (Rat.ofInt 0)) := by timed eqResolve lean_a41 lean_s3
      have lean_s5 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt skoX (Rat.ofInt 0))) := by timed And.intro lean_s0 lean_s4
      have lean_s6 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt skoX (Rat.ofInt 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)))) := by arithMulPos [skoX, (Rat.ofInt 0), (Rat.ofInt 1)], 0
      have lean_s7 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0))) := by timed modusPonens lean_s5 lean_s6
      have lean_s8 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r17
      have lean_s9 : (Eq (Not (binrel% LE.le skoX (Rat.ofInt 0))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_r6 [Not]
      have lean_s10 : (Eq (binrel% GT.gt skoX (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) := by timed Eq.trans lean_r1 lean_s9
      have lean_s11 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (binrel% GT.gt skoX (Rat.ofInt 0))) := by timed Eq.symm lean_s10
      have lean_s12 : (binrel% GT.gt skoX (Rat.ofInt 0)) := by timed eqResolve lean_a40 lean_s11
      have lean_s13 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (Rat.ofInt 0))) := by timed And.intro lean_s8 lean_s12
      have lean_s14 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (Rat.ofInt 0))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) := by arithMulNeg [skoX, (Rat.ofInt 0), (Neg.neg (Rat.ofInt 1))], 2
      have lean_s15 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))) := by timed modusPonens lean_s13 lean_s14
      have lean_s16 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) := by sumBounds [lean_s7, lean_s15]
      let lean_s17 := by timed flipCongrArg lean_r8 [HAdd.hAdd]
      have lean_s18 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd skoX (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) := by timed congr lean_s17 lean_r28
      have lean_s19 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (Rat.ofInt 0)) := by timed Eq.trans lean_s18 lean_r2
      let lean_s20 := by timed flipCongrArg lean_s19 [GE.ge]
      let lean_s21 := by timed flipCongrArg lean_r4 [HAdd.hAdd]
      have lean_s22 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s21 lean_r38
      have lean_s23 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))) (Rat.ofInt 0)) := by timed Eq.trans lean_s22 lean_r24
      have lean_s24 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s20 lean_s23
      have lean_s25 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) True) := by timed Eq.trans lean_s24 lean_r36
      have lean_s26 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))))) (Not True)) := by timed flipCongrArg lean_s25 [Not]
      have lean_s27 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0))))) False) := by timed Eq.trans lean_s26 lean_r34
      have lean_s28 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Rat.ofInt 0)))) False) := by timed Eq.trans lean_r31 lean_s27
      show False from by timed eqResolve lean_s16 lean_s28
  ))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) (Not (Not (binrel% GE.ge skoX (Int.ofNat 0))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))), (Not (binrel% GE.ge skoX (Int.ofNat 0)))]
let lean_s3 := by timed flipCongrArg lean_r32 [Or]
have lean_s4 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) (Not (Not (binrel% GE.ge skoX (Int.ofNat 0))))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed congr lean_s3 lean_r9
have lean_s5 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))) := by timed eqResolve lean_s2 lean_s4
have lean_s6 : (Eq And And) := by timed rfl
have lean_s7 : (Eq (Eq skoY (Rat.ofInt 0)) (Eq skoY (Rat.ofInt 0))) := by timed rfl
let lean_s8 := by timed congr lean_s6 lean_s7
let lean_s9 := by timed flipCongrArg lean_r21 [LE.le]
have lean_s10 : (Eq skoY skoY) := by timed rfl
have lean_s11 : (Eq (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY) (binrel% LE.le (binrel% HMul.hMul (Int.ofNat 2000) skoX) skoY)) := by timed congr lean_s9 lean_s10
have lean_s12 : (Eq (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY) (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) := by timed Eq.trans lean_s11 lean_r33
have lean_s13 : (Eq (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s12 [Not]
let lean_s14 := by timed congr lean_s6 lean_s13
let lean_s15 := by timed flipCongrArg lean_s13 [Or]
let lean_s16 := by timed flipCongrArg lean_s10 [LE.le]
have lean_s17 : (Eq (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))) (binrel% LE.le skoY (binrel% HMul.hMul (Int.ofNat 2000) skoX))) := by timed congr lean_s16 lean_r21
have lean_s18 : (Eq (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))) := by timed Eq.trans lean_s17 lean_r27
have lean_s19 : (Eq (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s18 [Not]
have lean_s20 : (Eq (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))))) := by timed congr lean_s15 lean_s19
let lean_s21 := by timed congr lean_s6 lean_s20
have lean_s22 : (Eq (Not (binrel% LE.le skoY skoX)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_r23 [Not]
let lean_s23 := by timed congr lean_s6 lean_s22
have lean_s24 : (Eq (Not (binrel% LE.le skoX (Rat.ofInt 0))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_r6 [Not]
let lean_s25 := by timed congr lean_s6 lean_s24
have lean_s26 : (Eq pi pi) := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [HMul.hMul]
have lean_s28 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)))) := by timed congr lean_s27 lean_r30
have lean_s29 : (Eq (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi)) := by timed Eq.trans lean_s28 lean_r29
let lean_s30 := by timed flipCongrArg lean_s29 [LE.le]
have lean_s31 : (Eq (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY) (binrel% LE.le (binrel% HMul.hMul (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2)) pi) skoY)) := by timed congr lean_s30 lean_s10
have lean_s32 : (Eq (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY) (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) := by timed Eq.trans lean_s31 lean_r25
have lean_s33 : (Eq (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s32 [Not]
let lean_s34 := by timed congr lean_s6 lean_s33
let lean_s35 := by timed flipCongrArg lean_r22 [LE.le]
have lean_s36 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)) pi)) := by timed congr lean_s35 lean_s26
have lean_s37 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi) (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) := by timed Eq.trans lean_s36 lean_r5
have lean_s38 : (Eq (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed flipCongrArg lean_s37 [Not]
let lean_s39 := by timed congr lean_s6 lean_s38
let lean_s40 := by timed flipCongrArg lean_s26 [LE.le]
have lean_s41 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))) (binrel% LE.le pi (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))) := by timed congr lean_s40 lean_r7
have lean_s42 : (Eq (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) := by timed Eq.trans lean_s41 lean_r20
have lean_s43 : (Eq (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed flipCongrArg lean_s42 [Not]
let lean_s44 := by timed congr lean_s39 lean_s43
let lean_s45 := by timed congr lean_s34 lean_s44
let lean_s46 := by timed congr lean_s25 lean_s45
let lean_s47 := by timed congr lean_s23 lean_s46
let lean_s48 := by timed congr lean_s21 lean_s47
let lean_s49 := by timed congr lean_s14 lean_s48
have lean_s50 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))))) := by timed congr lean_s8 lean_s49
have lean_s51 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))))))))))) (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))))) := by timed Eq.trans lean_r35 lean_s50
have lean_s52 : (Eq And And) := by timed rfl
have lean_s53 : (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))))) := by timed eqResolve lean_a39 lean_s51
have lean_s54 : (Eq skoY (Rat.ofInt 0)) := by andElim lean_s53, 0
let lean_s55 := by timed flipCongrArg lean_s54 [Eq]
have lean_s56 : (Eq (Rat.ofInt 0) (Rat.ofInt 0)) := by timed rfl
have lean_s57 : (Eq (Eq skoY (Rat.ofInt 0)) (Eq (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s55 lean_s56
let lean_s58 := by timed congr lean_s52 lean_s57
let lean_s59 := by timed flipCongrArg lean_s54 [HAdd.hAdd]
have lean_s60 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) := by timed rfl
have lean_s61 : (Eq (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX))) := by timed congr lean_s59 lean_s60
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s64 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) := by timed congr lean_s62 lean_s63
have lean_s65 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s64 [Not]
let lean_s66 := by timed congr lean_s52 lean_s65
let lean_s67 := by timed flipCongrArg lean_s65 [Or]
have lean_s68 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s69 := by timed flipCongrArg lean_s68 [HMul.hMul]
have lean_s70 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0))) := by timed congr lean_s69 lean_s54
let lean_s71 := by timed flipCongrArg lean_s70 [HAdd.hAdd]
have lean_s72 : (Eq (binrel% HMul.hMul (Int.ofNat 2000) skoX) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) := by timed rfl
have lean_s73 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX))) := by timed congr lean_s71 lean_s72
let lean_s74 := by timed flipCongrArg lean_s73 [GE.ge]
have lean_s75 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))) := by timed congr lean_s74 lean_s63
have lean_s76 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s75 [Not]
have lean_s77 : (Eq (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))))) := by timed congr lean_s67 lean_s76
let lean_s78 := by timed congr lean_s52 lean_s77
let lean_s79 := by timed flipCongrArg lean_s70 [HAdd.hAdd]
have lean_s80 : (Eq skoX skoX) := by timed rfl
have lean_s81 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX)) := by timed congr lean_s79 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [GE.ge]
have lean_s83 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) := by timed congr lean_s82 lean_s63
have lean_s84 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_s83 [Not]
let lean_s85 := by timed congr lean_s52 lean_s84
have lean_s86 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) := by timed rfl
let lean_s87 := by timed congr lean_s52 lean_s86
let lean_s88 := by timed flipCongrArg lean_s54 [HAdd.hAdd]
have lean_s89 : (Eq (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) := by timed rfl
have lean_s90 : (Eq (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi))) := by timed congr lean_s88 lean_s89
let lean_s91 := by timed flipCongrArg lean_s90 [GE.ge]
have lean_s92 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) := by timed congr lean_s91 lean_s63
have lean_s93 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s92 [Not]
let lean_s94 := by timed congr lean_s52 lean_s93
have lean_s95 : (Eq (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed rfl
let lean_s96 := by timed congr lean_s52 lean_s95
have lean_s97 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed rfl
let lean_s98 := by timed congr lean_s96 lean_s97
let lean_s99 := by timed congr lean_s94 lean_s98
let lean_s100 := by timed congr lean_s87 lean_s99
let lean_s101 := by timed congr lean_s85 lean_s100
let lean_s102 := by timed congr lean_s78 lean_s101
let lean_s103 := by timed congr lean_s66 lean_s102
have lean_s104 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))))) (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))))) := by timed congr lean_s58 lean_s103
have lean_s105 : (Eq And And) := by timed rfl
let lean_s106 := by timed congr lean_s105 lean_r10
let lean_s107 := by timed flipCongrArg lean_r11 [GE.ge]
have lean_s108 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s109 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX) (Int.ofNat 0))) := by timed congr lean_s107 lean_s108
have lean_s110 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) := by timed Eq.trans lean_s109 lean_r14
have lean_s111 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) := by timed flipCongrArg lean_s110 [Not]
let lean_s112 := by timed congr lean_s105 lean_s111
let lean_s113 := by timed flipCongrArg lean_s111 [Or]
let lean_s114 := by timed flipCongrArg lean_r12 [HAdd.hAdd]
have lean_s115 : (Eq (binrel% HMul.hMul (Int.ofNat 2000) skoX) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) := by timed rfl
have lean_s116 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Int.ofNat 2000) skoX))) := by timed congr lean_s114 lean_s115
have lean_s117 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) := by timed Eq.trans lean_s116 lean_r15
let lean_s118 := by timed flipCongrArg lean_s117 [GE.ge]
have lean_s119 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Int.ofNat 2000) skoX) (Int.ofNat 0))) := by timed congr lean_s118 lean_s108
have lean_s120 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))) := by timed Eq.trans lean_s119 lean_r16
have lean_s121 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed flipCongrArg lean_s120 [Not]
have lean_s122 : (Eq (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0))))) := by timed congr lean_s113 lean_s121
let lean_s123 := by timed congr lean_s105 lean_s122
let lean_s124 := by timed flipCongrArg lean_r12 [HAdd.hAdd]
have lean_s125 : (Eq skoX skoX) := by timed rfl
have lean_s126 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (binrel% HAdd.hAdd (Rat.ofInt 0) skoX)) := by timed congr lean_s124 lean_s125
have lean_s127 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) skoX) := by timed Eq.trans lean_s126 lean_r19
let lean_s128 := by timed flipCongrArg lean_s127 [GE.ge]
have lean_s129 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0)) (binrel% GE.ge skoX (Int.ofNat 0))) := by timed congr lean_s128 lean_s108
have lean_s130 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) := by timed flipCongrArg lean_s129 [Not]
let lean_s131 := by timed congr lean_s105 lean_s130
have lean_s132 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)))) := by timed rfl
let lean_s133 := by timed congr lean_s105 lean_s132
let lean_s134 := by timed flipCongrArg lean_r18 [GE.ge]
have lean_s135 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi) (Int.ofNat 0))) := by timed congr lean_s134 lean_s108
have lean_s136 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) := by timed Eq.trans lean_s135 lean_r13
have lean_s137 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0)))) := by timed flipCongrArg lean_s136 [Not]
let lean_s138 := by timed congr lean_s105 lean_s137
have lean_s139 : (Eq (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000))))) := by timed rfl
let lean_s140 := by timed congr lean_s105 lean_s139
have lean_s141 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))) := by timed rfl
let lean_s142 := by timed congr lean_s140 lean_s141
let lean_s143 := by timed congr lean_s138 lean_s142
let lean_s144 := by timed congr lean_s133 lean_s143
let lean_s145 := by timed congr lean_s131 lean_s144
let lean_s146 := by timed congr lean_s123 lean_s145
let lean_s147 := by timed congr lean_s112 lean_s146
have lean_s148 : (Eq (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))))) (And True (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))))) := by timed congr lean_s106 lean_s147
have lean_s149 : (Eq (And (Eq (Rat.ofInt 0) (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Rat.ofInt 0)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))) := by timed Eq.trans lean_s148 lean_r26
have lean_s150 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (Int.ofNat 2000)) skoX)) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Int.ofNat 2000) skoX)) (Int.ofNat 0)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoY (binrel% HMul.hMul (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 2))) pi)) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))) := by timed Eq.trans lean_s104 lean_s149
have lean_s151 : (Eq (And (Eq skoY (Rat.ofInt 0)) (And (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (And (Or (Not (binrel% LE.le (binrel% HMul.hMul skoX (Rat.ofInt 2000)) skoY)) (Not (binrel% LE.le skoY (binrel% HMul.hMul skoX (Rat.ofInt 2000))))) (And (Not (binrel% LE.le skoY skoX)) (And (Not (binrel% LE.le skoX (Rat.ofInt 0))) (And (Not (binrel% LE.le (binrel% HMul.hMul pi (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 2))) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 31415927) (Rat.ofInt 10000000)) pi)) (Not (binrel% LE.le pi (binrel% HDiv.hDiv (Rat.ofInt 15707963) (Rat.ofInt 5000000))))))))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000))))))))))) := by timed Eq.trans lean_s51 lean_s150
have lean_s152 : (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (And (Or (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) (Not (binrel% GE.ge skoX (Int.ofNat 0)))) (And (Not (binrel% GE.ge skoX (Int.ofNat 0))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Int.ofNat 0))) (And (Not (binrel% GE.ge pi (binrel% HDiv.hDiv (Int.ofNat 31415927) (Int.ofNat 10000000)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) pi) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 15707963) (Int.ofNat 5000000)))))))))) := by timed eqResolve lean_a39 lean_s151
have lean_s153 : (Not (binrel% GE.ge skoX (Int.ofNat 0))) := by andElim lean_s152, 2
let lean_s154 := by R1 lean_s5, lean_s153, (binrel% GE.ge skoX (Int.ofNat 0)), [(- 1), 0]
have lean_s155 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0))) := by andElim lean_s152, 0
exact (show False from by R1 lean_s154, lean_s155, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Int.ofNat 0)), [0, 0])


