-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {skoW : Rat}
variable {skoX : Rat}
variable {skoZ : Rat}
variable {skoW : Rat}
variable {skoX : Rat}
variable {skoY : Rat}
variable {skoY : Rat}
variable {skoZ : Rat}

theorem th0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% GT.gt skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))))) (Rat.ofInt 0)) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) → (Eq (Not True) False) → (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) → (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)))) → (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) → (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) → (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) → (Eq (binrel% LE.le (Rat.ofInt 3) skoX) (binrel% GE.ge skoX (Int.ofNat 3))) → (Eq (binrel% LE.le (Rat.ofInt 3) skoW) (binrel% GE.ge skoW (Int.ofNat 3))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LE.le (Rat.ofInt 3) skoY) (binrel% GE.ge skoY (Int.ofNat 3))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LE.le (Rat.ofInt 3) skoZ) (binrel% GE.ge skoZ (Int.ofNat 3))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)) → (Eq (binrel% LE.le skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) True) → (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))))) (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))))))))))))) → (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))))) → False :=
fun lean_r0 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r1 : (Eq (binrel% GT.gt skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r4 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% LE.le (Rat.ofInt 3) skoX) (binrel% GE.ge skoX (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% LE.le (Rat.ofInt 3) skoW) (binrel% GE.ge skoW (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (binrel% LE.le (Rat.ofInt 3) skoY) (binrel% GE.ge skoY (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq (binrel% LE.le (Rat.ofInt 3) skoZ) (binrel% GE.ge skoZ (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (binrel% LE.le skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) True) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))))) (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_a49 : (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) False))))) :=
  (scope (fun lean_a50 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
    (scope (fun lean_a51 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
      (scope (fun lean_a52 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
        (scope (fun lean_a53 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
          (scope (fun lean_a54 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)) =>
            have lean_s0 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) := by timed Eq.symm lean_r9
            have lean_s1 : (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) := by timed eqResolve lean_a54 lean_s0
            have lean_s2 : (Or (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) False) :=
              (scope (fun lean_a55 : (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) =>
                have lean_s2 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r0
                have lean_s3 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) := by timed And.intro lean_s2 lean_a55
                have lean_s4 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)))) := by arithMulPos [(binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))), (Rat.ofInt 0), (Rat.ofInt 1)], 1
                have lean_s5 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0))) := by timed modusPonens lean_s3 lean_s4
                have lean_s6 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r3
                have lean_s7 : (Eq (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r14 [Not]
                have lean_s8 : (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r41 lean_s7
                have lean_s9 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s8
                have lean_s10 : (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a53 lean_s9
                have lean_s11 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s6 lean_s10
                have lean_s12 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoZ, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
                have lean_s13 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s11 lean_s12
                have lean_s14 : (Eq (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r37 [Not]
                have lean_s15 : (Eq (binrel% GT.gt skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r1 lean_s14
                have lean_s16 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s15
                have lean_s17 : (binrel% GT.gt skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a52 lean_s16
                have lean_s18 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s6 lean_s17
                have lean_s19 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoW, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
                have lean_s20 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s18 lean_s19
                have lean_s21 : (Eq (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r22 [Not]
                have lean_s22 : (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r2 lean_s21
                have lean_s23 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s22
                have lean_s24 : (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a51 lean_s23
                have lean_s25 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s6 lean_s24
                have lean_s26 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoX, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
                have lean_s27 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s25 lean_s26
                have lean_s28 : (Eq (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r27 [Not]
                have lean_s29 : (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r13 lean_s28
                have lean_s30 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s29
                have lean_s31 : (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a50 lean_s30
                have lean_s32 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s6 lean_s31
                have lean_s33 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoY, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
                have lean_s34 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s32 lean_s33
                have lean_s35 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) := by sumBounds [lean_s5, lean_s13, lean_s20, lean_s27, lean_s34]
                let lean_s36 := by timed congrHAdd lean_r33 lean_r16
                let lean_s37 := by timed congrHAdd lean_r36 lean_s36
                let lean_s38 := by timed congrHAdd lean_r4 lean_s37
                have lean_s39 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)))))) := by timed congrHAdd lean_r29 lean_s38
                have lean_s40 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s39 lean_r5
                let lean_s41 := by timed flipCongrArg lean_s40 [GE.ge]
                let lean_s42 := by timed congrHAdd lean_r7 lean_r7
                let lean_s43 := by timed congrHAdd lean_r7 lean_s42
                let lean_s44 := by timed congrHAdd lean_r7 lean_s43
                have lean_s45 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) := by timed congrHAdd lean_r6 lean_s44
                have lean_s46 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5)))) := by timed Eq.trans lean_s45 lean_r45
                have lean_s47 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 2) (Int.ofNat 5))))) := by timed congr lean_s41 lean_s46
                have lean_s48 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) True) := by timed Eq.trans lean_s47 lean_r39
                have lean_s49 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))) (Not True)) := by timed flipCongrArg lean_s48 [Not]
                have lean_s50 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))) False) := by timed Eq.trans lean_s49 lean_r8
                have lean_s51 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) False) := by timed Eq.trans lean_r42 lean_s50
                show False from by timed eqResolve lean_s35 lean_s51
              ))
            have lean_s3 : (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) := by liftOrNToNeg lean_s2
            have lean_s4 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)))) := by timed flipCongrArg lean_r9 [Not]
            have lean_s5 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)))) := by timed Eq.trans lean_r11 lean_s4
            have lean_s6 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) := by timed Eq.symm lean_s5
            have lean_s7 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) := by timed Eq.trans lean_s4 lean_s6
            have lean_s8 : (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) := by timed eqResolve lean_s3 lean_s7
            have lean_s9 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)))) := by timed Eq.symm lean_s4
            have lean_s10 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0)))) := by timed Eq.trans lean_s5 lean_s9
            have lean_s11 : (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX (binrel% HAdd.hAdd skoW skoZ))) (Rat.ofInt 0))) := by timed eqResolve lean_s8 lean_s10
            show False from by timed contradiction lean_s1 lean_s11
  ))))))))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s5 lean_r23
have lean_s7 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s6 lean_r20
have lean_s8 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r21 lean_s7
have lean_s9 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s12 lean_r48
have lean_s14 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s13 lean_r47
have lean_s15 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r26 lean_s14
have lean_s16 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s19 lean_r46
have lean_s21 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s20 lean_r44
have lean_s22 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r15 lean_s21
have lean_s23 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s26 := by timed flipCongrArg lean_s25 [Eq]
have lean_s27 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s26 lean_r30
have lean_s28 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s27 lean_r38
have lean_s29 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r43 lean_s28
have lean_s30 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s29
let lean_s31 := by timed congr lean_s3 lean_s30
have lean_s32 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)))) := by timed rfl
let lean_s33 := by timed congr lean_s31 lean_s32
let lean_s34 := by timed congr lean_s24 lean_s33
let lean_s35 := by timed congr lean_s17 lean_s34
have lean_s36 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))))))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)))))))) := by timed congr lean_s10 lean_s35
have lean_s37 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))))))) := by timed eqResolve lean_s2 lean_s36
have lean_s38 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))))))) := by permutateOr lean_s37, [2, 1, 0, 3, 4], (- 1)
have lean_s39 : (Eq And And) := by timed rfl
have lean_s40 : (Eq skoZ skoZ) := by timed rfl
let lean_s41 := by timed flipCongrArg lean_s40 [LE.le]
have lean_s42 : (Eq skoW skoW) := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [HMul.hMul]
have lean_s44 : (Eq (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s43 lean_r17
have lean_s45 : (Eq (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)) := by timed Eq.trans lean_s44 lean_r35
have lean_s46 : (Eq skoX skoX) := by timed rfl
let lean_s47 := by timed flipCongrArg lean_s46 [HMul.hMul]
have lean_s48 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s47 lean_r17
have lean_s49 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) := by timed Eq.trans lean_s48 lean_r34
have lean_s50 : (Eq skoY skoY) := by timed rfl
let lean_s51 := by timed flipCongrArg lean_s50 [HMul.hMul]
have lean_s52 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s51 lean_r17
have lean_s53 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) := by timed Eq.trans lean_s52 lean_r10
let lean_s54 := by timed congrHAdd lean_s49 lean_s53
have lean_s55 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)))) := by timed congrHAdd lean_s45 lean_s54
have lean_s56 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)))) := by timed Eq.trans lean_s55 lean_r25
have lean_s57 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW)))) := by timed Eq.trans lean_r32 lean_s56
have lean_s58 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW))))) := by timed congr lean_s41 lean_s57
have lean_s59 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0))) := by timed Eq.trans lean_s58 lean_r12
let lean_s60 := by timed congr lean_s39 lean_s59
have lean_s61 : (Eq (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (Not (binrel% GE.ge skoW (Int.ofNat 3)))) := by timed flipCongrArg lean_r19 [Not]
let lean_s62 := by timed congr lean_s39 lean_s61
have lean_s63 : (Eq (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (Not (binrel% GE.ge skoX (Int.ofNat 3)))) := by timed flipCongrArg lean_r18 [Not]
let lean_s64 := by timed congr lean_s39 lean_s63
have lean_s65 : (Eq (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (Not (binrel% GE.ge skoY (Int.ofNat 3)))) := by timed flipCongrArg lean_r24 [Not]
let lean_s66 := by timed congr lean_s39 lean_s65
have lean_s67 : (Eq (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (Not (binrel% GE.ge skoZ (Int.ofNat 3)))) := by timed flipCongrArg lean_r31 [Not]
let lean_s68 := by timed congr lean_s39 lean_s67
let lean_s69 := by timed flipCongrArg lean_s42 [LE.le]
have lean_s70 : (Eq (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoW (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s69 lean_r28
have lean_s71 : (Eq (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s70 lean_r37
have lean_s72 : (Eq (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s71 [Not]
let lean_s73 := by timed congr lean_s39 lean_s72
let lean_s74 := by timed flipCongrArg lean_s46 [LE.le]
have lean_s75 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s74 lean_r28
have lean_s76 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s75 lean_r22
have lean_s77 : (Eq (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s76 [Not]
let lean_s78 := by timed congr lean_s39 lean_s77
let lean_s79 := by timed flipCongrArg lean_s50 [LE.le]
have lean_s80 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s79 lean_r28
have lean_s81 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s80 lean_r27
have lean_s82 : (Eq (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s81 [Not]
let lean_s83 := by timed congr lean_s39 lean_s82
let lean_s84 := by timed flipCongrArg lean_s40 [LE.le]
have lean_s85 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s84 lean_r28
have lean_s86 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s85 lean_r14
have lean_s87 : (Eq (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s86 [Not]
let lean_s88 := by timed congr lean_s83 lean_s87
let lean_s89 := by timed congr lean_s78 lean_s88
let lean_s90 := by timed congr lean_s73 lean_s89
let lean_s91 := by timed congr lean_s68 lean_s90
let lean_s92 := by timed congr lean_s66 lean_s91
let lean_s93 := by timed congr lean_s64 lean_s92
let lean_s94 := by timed congr lean_s62 lean_s93
have lean_s95 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)) (And (Not (binrel% GE.ge skoW (Int.ofNat 3))) (And (Not (binrel% GE.ge skoX (Int.ofNat 3))) (And (Not (binrel% GE.ge skoY (Int.ofNat 3))) (And (Not (binrel% GE.ge skoZ (Int.ofNat 3))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))))))) := by timed congr lean_s60 lean_s94
have lean_s96 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul skoW (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoW)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoW (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)) (And (Not (binrel% GE.ge skoW (Int.ofNat 3))) (And (Not (binrel% GE.ge skoX (Int.ofNat 3))) (And (Not (binrel% GE.ge skoY (Int.ofNat 3))) (And (Not (binrel% GE.ge skoZ (Int.ofNat 3))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))))))) := by timed Eq.trans lean_r40 lean_s95
have lean_s97 : (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)) (And (Not (binrel% GE.ge skoW (Int.ofNat 3))) (And (Not (binrel% GE.ge skoX (Int.ofNat 3))) (And (Not (binrel% GE.ge skoY (Int.ofNat 3))) (And (Not (binrel% GE.ge skoZ (Int.ofNat 3))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))))))) := by timed eqResolve lean_a49 lean_s96
have lean_s98 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s97, 8
let lean_s99 := by R1 lean_s38, lean_s98, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s100 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s97, 7
let lean_s101 := by R1 lean_s99, lean_s100, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s102 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s97, 6
let lean_s103 := by R1 lean_s101, lean_s102, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s104 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s97, 5
let lean_s105 := by R1 lean_s103, lean_s104, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s106 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)) := by andElim lean_s97, 0
exact (show False from by R2 lean_s105, lean_s106, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoW) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Int.ofNat 0)), [0, 0])


