-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {skoX : Rat}
variable {skoY : Rat}
variable {skoZ : Rat}
variable {skoX : Rat}
variable {skoY : Rat}
variable {skoZ : Rat}

theorem th0 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) → (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) skoZ) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) → (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))))))))))) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) True) → (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) → (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoY) (binrel% GE.ge skoY (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Rat.ofInt 0)) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoZ) (binrel% GE.ge skoZ (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) → (Eq (Not True) False) → (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) → False :=
fun lean_r0 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r1 : (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) True) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r15 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) skoZ) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoY) (binrel% GE.ge skoY (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoZ) (binrel% GE.ge skoZ (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_a44 : (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) False)))) :=
  (scope (fun lean_a45 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
    (scope (fun lean_a46 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
      (scope (fun lean_a47 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
        (scope (fun lean_a48 : (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) =>
          have lean_s0 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) := by timed flipCongrArg lean_r42 [Not]
          have lean_s1 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) := by timed Eq.trans lean_r28 lean_s0
          have lean_s2 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) := by timed Eq.symm lean_s1
          have lean_s3 : (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) := by timed eqResolve lean_a48 lean_s2
          have lean_s4 : (Or (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) False) :=
            (scope (fun lean_a49 : (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) =>
              have lean_s4 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r14
              have lean_s5 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) := by timed And.intro lean_s4 lean_a49
              have lean_s6 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)))) := by arithMulPos [(binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)), (Rat.ofInt 0), (Rat.ofInt 1)], 0
              have lean_s7 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0))) := by timed modusPonens lean_s5 lean_s6
              have lean_s8 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r0
              have lean_s9 : (Eq (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r11 [Not]
              have lean_s10 : (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r5 lean_s9
              have lean_s11 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s10
              have lean_s12 : (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a47 lean_s11
              have lean_s13 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s8 lean_s12
              have lean_s14 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoX, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
              have lean_s15 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s13 lean_s14
              have lean_s16 : (Eq (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r25 [Not]
              have lean_s17 : (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r34 lean_s16
              have lean_s18 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s17
              have lean_s19 : (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a46 lean_s18
              have lean_s20 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s8 lean_s19
              have lean_s21 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoY, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
              have lean_s22 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s20 lean_s21
              have lean_s23 : (Eq (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r20 [Not]
              have lean_s24 : (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r1 lean_s23
              have lean_s25 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s24
              have lean_s26 : (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a45 lean_s25
              have lean_s27 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s8 lean_s26
              have lean_s28 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoZ, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
              have lean_s29 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s27 lean_s28
              have lean_s30 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) := by sumBounds [lean_s7, lean_s15, lean_s22, lean_s29]
              let lean_s31 := by timed congrHAdd lean_r19 lean_r6
              let lean_s32 := by timed congrHAdd lean_r4 lean_s31
              have lean_s33 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))))) := by timed congrHAdd lean_r3 lean_s32
              have lean_s34 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s33 lean_r37
              let lean_s35 := by timed flipCongrArg lean_s34 [GE.ge]
              let lean_s36 := by timed congrHAdd lean_r27 lean_r27
              let lean_s37 := by timed congrHAdd lean_r27 lean_s36
              have lean_s38 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) := by timed congrHAdd lean_r7 lean_s37
              have lean_s39 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) := by timed Eq.trans lean_s38 lean_r9
              have lean_s40 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10))))) := by timed congr lean_s35 lean_s39
              have lean_s41 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s40 lean_r8
              have lean_s42 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) (Not True)) := by timed flipCongrArg lean_s41 [Not]
              have lean_s43 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) False) := by timed Eq.trans lean_s42 lean_r43
              have lean_s44 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) False) := by timed Eq.trans lean_r2 lean_s43
              show False from by timed eqResolve lean_s30 lean_s44
            ))
          have lean_s5 : (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) := by liftOrNToNeg lean_s4
          have lean_s6 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))))) := by timed flipCongrArg lean_s1 [Not]
          have lean_s7 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) := by timed Eq.trans lean_s6 lean_r29
          have lean_s8 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) := by timed Eq.symm lean_r42
          have lean_s9 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) := by timed Eq.trans lean_s7 lean_s8
          have lean_s10 : (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) := by timed eqResolve lean_s5 lean_s9
          have lean_s11 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)))) := by timed Eq.symm lean_s7
          have lean_s12 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)) (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0)))) := by timed Eq.trans lean_r42 lean_s11
          have lean_s13 : (Not (binrel% LT.lt (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Rat.ofInt 0))) := by timed eqResolve lean_s10 lean_s12
          show False from by timed contradiction lean_s3 lean_s13
  ))))))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s5 lean_r23
have lean_s7 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s6 lean_r39
have lean_s8 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r40 lean_s7
have lean_s9 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s12 lean_r38
have lean_s14 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s13 lean_r36
have lean_s15 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r12 lean_s14
have lean_s16 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s19 lean_r33
have lean_s21 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s20 lean_r32
have lean_s22 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r17 lean_s21
have lean_s23 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) := by timed rfl
let lean_s26 := by timed flipCongrArg lean_s25 [Eq]
have lean_s27 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))))) (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) := by timed congr lean_s26 lean_r29
have lean_s28 : (Eq (Eq (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))))) True) := by timed Eq.trans lean_s27 lean_r24
have lean_s29 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) True) := by timed Eq.trans lean_r31 lean_s28
have lean_s30 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) := by timed trueElim lean_s29
let lean_s31 := by timed congr lean_s24 lean_s30
let lean_s32 := by timed congr lean_s17 lean_s31
have lean_s33 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))))))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))))) := by timed congr lean_s10 lean_s32
have lean_s34 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))))) := by timed eqResolve lean_s2 lean_s33
have lean_s35 : (Or (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) := by permutateOr lean_s34, [3, 2, 1, 0], (- 1)
have lean_s36 : (Eq And And) := by timed rfl
have lean_s37 : (Eq skoX skoX) := by timed rfl
let lean_s38 := by timed flipCongrArg lean_s37 [HMul.hMul]
have lean_s39 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s38 lean_r30
have lean_s40 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) := by timed Eq.trans lean_s39 lean_r10
let lean_s41 := by timed flipCongrArg lean_s40 [HAdd.hAdd]
have lean_s42 : (Eq skoY skoY) := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [HMul.hMul]
have lean_s44 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s43 lean_r30
have lean_s45 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) := by timed Eq.trans lean_s44 lean_r13
have lean_s46 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) := by timed congr lean_s41 lean_s45
have lean_s47 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) := by timed Eq.trans lean_s46 lean_r15
let lean_s48 := by timed flipCongrArg lean_s47 [LE.le]
have lean_s49 : (Eq skoZ skoZ) := by timed rfl
have lean_s50 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ) (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) skoZ)) := by timed congr lean_s48 lean_s49
have lean_s51 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ) (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) := by timed Eq.trans lean_s50 lean_r18
have lean_s52 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)))) := by timed flipCongrArg lean_s51 [Not]
let lean_s53 := by timed congr lean_s36 lean_s52
let lean_s54 := by timed flipCongrArg lean_r16 [LE.le]
have lean_s55 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoX)) := by timed congr lean_s54 lean_s37
have lean_s56 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX) (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) := by timed Eq.trans lean_s55 lean_r22
have lean_s57 : (Eq (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10))))) := by timed flipCongrArg lean_s56 [Not]
let lean_s58 := by timed congr lean_s36 lean_s57
let lean_s59 := by timed flipCongrArg lean_r16 [LE.le]
have lean_s60 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoY)) := by timed congr lean_s59 lean_s42
have lean_s61 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY) (binrel% GE.ge skoY (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) := by timed Eq.trans lean_s60 lean_r35
have lean_s62 : (Eq (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (Not (binrel% GE.ge skoY (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10))))) := by timed flipCongrArg lean_s61 [Not]
let lean_s63 := by timed congr lean_s36 lean_s62
let lean_s64 := by timed flipCongrArg lean_r16 [LE.le]
have lean_s65 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ) (binrel% LE.le (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)) skoZ)) := by timed congr lean_s64 lean_s49
have lean_s66 : (Eq (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ) (binrel% GE.ge skoZ (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) := by timed Eq.trans lean_s65 lean_r41
have lean_s67 : (Eq (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (Not (binrel% GE.ge skoZ (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10))))) := by timed flipCongrArg lean_s66 [Not]
let lean_s68 := by timed congr lean_s36 lean_s67
let lean_s69 := by timed flipCongrArg lean_s37 [LE.le]
have lean_s70 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s69 lean_r26
have lean_s71 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s70 lean_r11
have lean_s72 : (Eq (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s71 [Not]
let lean_s73 := by timed congr lean_s36 lean_s72
let lean_s74 := by timed flipCongrArg lean_s42 [LE.le]
have lean_s75 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s74 lean_r26
have lean_s76 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s75 lean_r25
have lean_s77 : (Eq (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s76 [Not]
let lean_s78 := by timed congr lean_s36 lean_s77
let lean_s79 := by timed flipCongrArg lean_s49 [LE.le]
have lean_s80 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s79 lean_r26
have lean_s81 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s80 lean_r20
have lean_s82 : (Eq (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s81 [Not]
let lean_s83 := by timed congr lean_s78 lean_s82
let lean_s84 := by timed congr lean_s73 lean_s83
let lean_s85 := by timed congr lean_s68 lean_s84
let lean_s86 := by timed congr lean_s63 lean_s85
let lean_s87 := by timed congr lean_s58 lean_s86
have lean_s88 : (Eq (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) (And (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge skoY (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge skoZ (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))))) := by timed congr lean_s53 lean_s87
have lean_s89 : (Eq (And (Not (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) skoZ)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoX)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoY)) (And (Not (binrel% LE.le (binrel% HDiv.hDiv (Rat.ofInt 11) (Rat.ofInt 10)) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) (And (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge skoY (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge skoZ (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))))) := by timed Eq.trans lean_r21 lean_s88
have lean_s90 : (And (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) (And (Not (binrel% GE.ge skoX (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge skoY (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge skoZ (binrel% HDiv.hDiv (Int.ofNat 11) (Int.ofNat 10)))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))))) := by timed eqResolve lean_a44 lean_s89
have lean_s91 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s90, 6
let lean_s92 := by R1 lean_s35, lean_s91, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s93 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s90, 5
let lean_s94 := by R1 lean_s92, lean_s93, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s95 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s90, 4
let lean_s96 := by R1 lean_s94, lean_s95, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s97 : (Not (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0))) := by andElim lean_s90, 0
exact (show False from by R1 lean_s96, lean_s97, (binrel% GE.ge (binrel% HAdd.hAdd skoZ (binrel% HAdd.hAdd skoY skoX)) (Int.ofNat 0)), [0, 0])


