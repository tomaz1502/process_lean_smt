-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {skoX : Rat}
variable {skoZ : Rat}
variable {skoY : Rat}
variable {skoX : Rat}
variable {skoY : Rat}
variable {skoZ : Rat}

theorem th0 : (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)))) (Rat.ofInt 0)) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) → (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) → (Eq (binrel% LE.le (Rat.ofInt 3) skoZ) (binrel% GE.ge skoZ (Int.ofNat 3))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) → (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) → (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) → (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) → (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))))))))))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) → (Eq (binrel% LE.le (Rat.ofInt 3) skoX) (binrel% GE.ge skoX (Int.ofNat 3))) → (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (Not True) False) → (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) → (Eq (binrel% LE.le (Rat.ofInt 3) skoY) (binrel% GE.ge skoY (Int.ofNat 3))) → (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) → (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) → False :=
fun lean_r0 : (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r2 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r4 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ)) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% LE.le (Rat.ofInt 3) skoZ) (binrel% GE.ge skoZ (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (Neg.neg (Rat.ofInt 1)) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r26 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% LE.le (Rat.ofInt 3) skoX) (binrel% GE.ge skoX (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq (binrel% LE.le (Rat.ofInt 3) skoY) (binrel% GE.ge skoY (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) True) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) => -- THEORY_REWRITE_ARITH
fun lean_a40 : (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) => by
have lean_s0 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) False)))) :=
  (scope (fun lean_a41 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
    (scope (fun lean_a42 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
      (scope (fun lean_a43 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) =>
        (scope (fun lean_a44 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)) =>
          have lean_s0 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) := by timed Eq.symm lean_r19
          have lean_s1 : (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) := by timed eqResolve lean_a44 lean_s0
          have lean_s2 : (Or (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) False) :=
            (scope (fun lean_a45 : (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) =>
              have lean_s2 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r3
              have lean_s3 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) := by timed And.intro lean_s2 lean_a45
              have lean_s4 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)))) := by arithMulPos [(binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)), (Rat.ofInt 0), (Rat.ofInt 1)], 1
              have lean_s5 : (binrel% LE.le (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0))) := by timed modusPonens lean_s3 lean_s4
              have lean_s6 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r1
              have lean_s7 : (Eq (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r30 [Not]
              have lean_s8 : (Eq (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r0 lean_s7
              have lean_s9 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s8
              have lean_s10 : (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a43 lean_s9
              have lean_s11 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s6 lean_s10
              have lean_s12 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoZ, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
              have lean_s13 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s11 lean_s12
              have lean_s14 : (Eq (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r23 [Not]
              have lean_s15 : (Eq (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r27 lean_s14
              have lean_s16 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s15
              have lean_s17 : (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a42 lean_s16
              have lean_s18 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s6 lean_s17
              have lean_s19 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoX, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
              have lean_s20 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s18 lean_s19
              have lean_s21 : (Eq (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_r24 [Not]
              have lean_s22 : (Eq (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed Eq.trans lean_r15 lean_s21
              have lean_s23 : (Eq (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed Eq.symm lean_s22
              have lean_s24 : (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) := by timed eqResolve lean_a41 lean_s23
              have lean_s25 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed And.intro lean_s6 lean_s24
              have lean_s26 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GT.gt skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by arithMulNeg [skoY, (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)), (Neg.neg (Rat.ofInt 1))], 2
              have lean_s27 : (binrel% LT.lt (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed modusPonens lean_s25 lean_s26
              have lean_s28 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) := by sumBounds [lean_s5, lean_s13, lean_s20, lean_s27]
              let lean_s29 := by timed congrHAdd lean_r6 lean_r7
              let lean_s30 := by timed congrHAdd lean_r5 lean_s29
              have lean_s31 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))))) := by timed congrHAdd lean_r4 lean_s30
              have lean_s32 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s31 lean_r8
              let lean_s33 := by timed flipCongrArg lean_s32 [GE.ge]
              let lean_s34 := by timed congrHAdd lean_r11 lean_r11
              let lean_s35 := by timed congrHAdd lean_r11 lean_s34
              have lean_s36 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) := by timed congrHAdd lean_r22 lean_s35
              have lean_s37 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10)))) := by timed Eq.trans lean_s36 lean_r39
              have lean_s38 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (binrel% GE.ge (Rat.ofInt 0) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 3) (Int.ofNat 10))))) := by timed congr lean_s33 lean_s37
              have lean_s39 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s38 lean_r38
              have lean_s40 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) (Not True)) := by timed flipCongrArg lean_s39 [Not]
              have lean_s41 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))) False) := by timed Eq.trans lean_s40 lean_r34
              have lean_s42 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoZ) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoX) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) skoY)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Rat.ofInt 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) False) := by timed Eq.trans lean_r2 lean_s41
              show False from by timed eqResolve lean_s28 lean_s42
            ))
          have lean_s3 : (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) := by liftOrNToNeg lean_s2
          have lean_s4 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))) := by timed flipCongrArg lean_r19 [Not]
          have lean_s5 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))) := by timed Eq.trans lean_r10 lean_s4
          have lean_s6 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) := by timed Eq.symm lean_s5
          have lean_s7 : (Eq (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) := by timed Eq.trans lean_s4 lean_s6
          have lean_s8 : (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) := by timed eqResolve lean_s3 lean_s7
          have lean_s9 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)))) := by timed Eq.symm lean_s4
          have lean_s10 : (Eq (binrel% GT.gt (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)) (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0)))) := by timed Eq.trans lean_s5 lean_s9
          have lean_s11 : (Not (binrel% LE.le (binrel% HAdd.hAdd skoY (binrel% HAdd.hAdd skoX skoZ)) (Rat.ofInt 0))) := by timed eqResolve lean_s8 lean_s10
          show False from by timed contradiction lean_s1 lean_s11
  ))))))))
have lean_s1 : (Not (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))))) := by liftOrNToNeg lean_s0
have lean_s2 : (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))))) := by timed flipNotAnd lean_s1 [(Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))), (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))]
have lean_s3 : (Eq Or Or) := by timed rfl
have lean_s4 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s5 := by timed flipCongrArg lean_s4 [Eq]
have lean_s6 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s5 lean_r35
have lean_s7 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s6 lean_r14
have lean_s8 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r37 lean_s7
have lean_s9 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s8
let lean_s10 := by timed congr lean_s3 lean_s9
have lean_s11 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [Eq]
have lean_s13 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s12 lean_r32
have lean_s14 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s13 lean_r26
have lean_s15 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r33 lean_s14
have lean_s16 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s15
let lean_s17 := by timed congr lean_s3 lean_s16
have lean_s18 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed congr lean_s19 lean_r18
have lean_s21 : (Eq (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))) True) := by timed Eq.trans lean_s20 lean_r31
have lean_s22 : (Eq (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) True) := by timed Eq.trans lean_r9 lean_s21
have lean_s23 : (Eq (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s3 lean_s23
have lean_s25 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))) := by timed rfl
let lean_s26 := by timed congr lean_s24 lean_s25
let lean_s27 := by timed congr lean_s17 lean_s26
have lean_s28 : (Eq (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Or (Not (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))))))) := by timed congr lean_s10 lean_s27
have lean_s29 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))))) := by timed eqResolve lean_s2 lean_s28
have lean_s30 : (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Or (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)))))) := by permutateOr lean_s29, [1, 0, 2, 3], (- 1)
have lean_s31 : (Eq And And) := by timed rfl
have lean_s32 : (Eq skoZ skoZ) := by timed rfl
let lean_s33 := by timed flipCongrArg lean_s32 [LE.le]
have lean_s34 : (Eq skoX skoX) := by timed rfl
let lean_s35 := by timed flipCongrArg lean_s34 [HMul.hMul]
have lean_s36 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s35 lean_r21
have lean_s37 : (Eq (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)) := by timed Eq.trans lean_s36 lean_r20
let lean_s38 := by timed flipCongrArg lean_s37 [HAdd.hAdd]
have lean_s39 : (Eq skoY skoY) := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [HMul.hMul]
have lean_s41 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s40 lean_r21
have lean_s42 : (Eq (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY)) := by timed Eq.trans lean_s41 lean_r12
have lean_s43 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY))) := by timed congr lean_s38 lean_s42
have lean_s44 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX))) := by timed Eq.trans lean_s43 lean_r16
have lean_s45 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX)))) := by timed congr lean_s33 lean_s44
have lean_s46 : (Eq (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0))) := by timed Eq.trans lean_s45 lean_r17
let lean_s47 := by timed congr lean_s31 lean_s46
have lean_s48 : (Eq (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (Not (binrel% GE.ge skoX (Int.ofNat 3)))) := by timed flipCongrArg lean_r29 [Not]
let lean_s49 := by timed congr lean_s31 lean_s48
have lean_s50 : (Eq (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (Not (binrel% GE.ge skoY (Int.ofNat 3)))) := by timed flipCongrArg lean_r36 [Not]
let lean_s51 := by timed congr lean_s31 lean_s50
have lean_s52 : (Eq (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (Not (binrel% GE.ge skoZ (Int.ofNat 3)))) := by timed flipCongrArg lean_r13 [Not]
let lean_s53 := by timed congr lean_s31 lean_s52
let lean_s54 := by timed flipCongrArg lean_s34 [LE.le]
have lean_s55 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoX (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s54 lean_r28
have lean_s56 : (Eq (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s55 lean_r23
have lean_s57 : (Eq (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s56 [Not]
let lean_s58 := by timed congr lean_s31 lean_s57
let lean_s59 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s60 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoY (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s59 lean_r28
have lean_s61 : (Eq (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s60 lean_r24
have lean_s62 : (Eq (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s61 [Not]
let lean_s63 := by timed congr lean_s31 lean_s62
let lean_s64 := by timed flipCongrArg lean_s32 [LE.le]
have lean_s65 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% LE.le skoZ (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))) := by timed congr lean_s64 lean_r28
have lean_s66 : (Eq (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by timed Eq.trans lean_s65 lean_r30
have lean_s67 : (Eq (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))) := by timed flipCongrArg lean_s66 [Not]
let lean_s68 := by timed congr lean_s63 lean_s67
let lean_s69 := by timed congr lean_s58 lean_s68
let lean_s70 := by timed congr lean_s53 lean_s69
let lean_s71 := by timed congr lean_s51 lean_s70
let lean_s72 := by timed congr lean_s49 lean_s71
have lean_s73 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)) (And (Not (binrel% GE.ge skoX (Int.ofNat 3))) (And (Not (binrel% GE.ge skoY (Int.ofNat 3))) (And (Not (binrel% GE.ge skoZ (Int.ofNat 3))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))))) := by timed congr lean_s47 lean_s72
have lean_s74 : (Eq (And (binrel% LE.le skoZ (binrel% HAdd.hAdd (binrel% HMul.hMul skoX (Neg.neg (Rat.ofInt 1))) (binrel% HMul.hMul skoY (Neg.neg (Rat.ofInt 1))))) (And (Not (binrel% LE.le (Rat.ofInt 3) skoX)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoY)) (And (Not (binrel% LE.le (Rat.ofInt 3) skoZ)) (And (Not (binrel% LE.le skoX (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (And (Not (binrel% LE.le skoY (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))) (Not (binrel% LE.le skoZ (binrel% HDiv.hDiv (Rat.ofInt 1) (Rat.ofInt 10)))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)) (And (Not (binrel% GE.ge skoX (Int.ofNat 3))) (And (Not (binrel% GE.ge skoY (Int.ofNat 3))) (And (Not (binrel% GE.ge skoZ (Int.ofNat 3))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))))))))))) := by timed Eq.trans lean_r25 lean_s73
have lean_s75 : (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)) (And (Not (binrel% GE.ge skoX (Int.ofNat 3))) (And (Not (binrel% GE.ge skoY (Int.ofNat 3))) (And (Not (binrel% GE.ge skoZ (Int.ofNat 3))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (And (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))))))))) := by timed eqResolve lean_a40 lean_s74
have lean_s76 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s75, 6
let lean_s77 := by R1 lean_s30, lean_s76, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s78 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s75, 5
let lean_s79 := by R1 lean_s77, lean_s78, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s80 : (Not (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10))))) := by andElim lean_s75, 4
let lean_s81 := by R1 lean_s79, lean_s80, (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (Neg.neg (binrel% HDiv.hDiv (Int.ofNat 1) (Int.ofNat 10)))), [(- 1), 0]
have lean_s82 : (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)) := by andElim lean_s75, 0
exact (show False from by R2 lean_s81, lean_s82, (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoY) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoX) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) skoZ))) (Int.ofNat 0)), [0, 0])


