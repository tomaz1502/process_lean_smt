-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {S1 : Type u} [Nonempty S1]
variable {f1 : S1}
variable {f3 : (Int -> Int -> Int)}
variable {f4 : Int}
variable {f1 : S1}
variable {f2 : S1}
variable {f3 : (Int -> Int -> Int)}
variable {f2 : S1}
variable {f4 : Int}

theorem th0 : (Eq (binrel% LT.lt (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (Not (binrel% GE.ge (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))))) → (Eq (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (binrel% HAdd.hAdd (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))))) → (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4))) → (Eq (binrel% HAdd.hAdd (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)))) (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) → (Eq (binrel% GE.ge (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) (binrel% GE.ge f4 (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 1)))) (binrel% HMul.hMul (Int.ofNat 4) f4)) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (Int.ofNat 2)) (binrel% GE.ge f4 (Int.ofNat 1))) → (Not (Eq f1 f2)) → (Not (Implies (binrel% LT.lt (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)))) → False :=
fun lean_r0 : (Eq (binrel% LT.lt (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (Not (binrel% GE.ge (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (binrel% HAdd.hAdd (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)))) (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% GE.ge (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) (binrel% GE.ge f4 (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 1)))) (binrel% HMul.hMul (Int.ofNat 4) f4)) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (Int.ofNat 2)) (binrel% GE.ge f4 (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_a13 : (Not (Eq f1 f2)) =>
fun lean_a14 : (Not (Implies (binrel% LT.lt (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)))) => by
let lean_s0 := by timed flipCongrArg lean_r10 [f3]
have lean_s1 : (Eq (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HMul.hMul (Int.ofNat 4) f4)) := by timed rfl
have lean_s2 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
let lean_s3 := by timed congrHAdd lean_s2 lean_r3
have lean_s4 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 1))))) := by timed congrHAdd lean_s1 lean_s3
have lean_s5 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) (binrel% HMul.hMul (Int.ofNat 4) f4)) := by timed Eq.trans lean_s4 lean_r11
have lean_s6 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Int.ofNat 4) f4)) := by timed Eq.trans lean_r8 lean_s5
have lean_s7 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Int.ofNat 4) f4)) := by timed Eq.trans lean_r2 lean_s6
have lean_s8 : (Eq (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))) := by timed congr lean_s0 lean_s7
let lean_s9 := by timed flipCongrArg lean_s8 [GE.ge]
let lean_s10 := by timed flipCongrArg lean_s8 [HAdd.hAdd]
have lean_s11 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s12 := by timed flipCongrArg lean_s11 [HMul.hMul]
have lean_s13 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)))) := by timed congr lean_s12 lean_r10
have lean_s14 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4))) := by timed Eq.trans lean_s13 lean_r4
have lean_s15 : (Eq (binrel% HAdd.hAdd (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)))) (binrel% HAdd.hAdd (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4)))) := by timed congr lean_s10 lean_s14
have lean_s16 : (Eq (binrel% HAdd.hAdd (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) := by timed Eq.trans lean_s15 lean_r5
have lean_s17 : (Eq (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) := by timed Eq.trans lean_r1 lean_s16
let lean_s18 := by timed flipCongrArg lean_s17 [HAdd.hAdd]
have lean_s19 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s20 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)))) (Int.ofNat 2))) := by timed congr lean_s18 lean_s19
have lean_s21 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4))))) := by timed Eq.trans lean_s20 lean_r6
have lean_s22 : (Eq (binrel% GE.ge (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% GE.ge (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f4) (f3 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (binrel% HMul.hMul (Int.ofNat 4) f4)))))) := by timed congr lean_s9 lean_s21
have lean_s23 : (Eq (binrel% GE.ge (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% GE.ge f4 (Int.ofNat 1))) := by timed Eq.trans lean_s22 lean_r7
have lean_s24 : (Eq (Not (binrel% GE.ge (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2)))) (Not (binrel% GE.ge f4 (Int.ofNat 1)))) := by timed flipCongrArg lean_s23 [Not]
have lean_s25 : (Eq (binrel% LT.lt (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (Not (binrel% GE.ge f4 (Int.ofNat 1)))) := by timed Eq.trans lean_r0 lean_s24
let lean_s26 := by timed flipCongrArg lean_s25 [Implies]
let lean_s27 := by timed flipCongrArg lean_r10 [GE.ge]
have lean_s28 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f4)) (Int.ofNat 2))) := by timed congr lean_s27 lean_s19
have lean_s29 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)) (binrel% GE.ge f4 (Int.ofNat 1))) := by timed Eq.trans lean_s28 lean_r12
have lean_s30 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2))) (Not (binrel% GE.ge f4 (Int.ofNat 1)))) := by timed flipCongrArg lean_s29 [Not]
have lean_s31 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)) (Not (binrel% GE.ge f4 (Int.ofNat 1)))) := by timed Eq.trans lean_r9 lean_s30
have lean_s32 : (Eq (Implies (binrel% LT.lt (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2))) (Implies (Not (binrel% GE.ge f4 (Int.ofNat 1))) (Not (binrel% GE.ge f4 (Int.ofNat 1))))) := by timed congr lean_s26 lean_s31
have lean_s33 : (Eq (Not (Implies (binrel% LT.lt (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f3 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f4) (Int.ofNat 1)) (Int.ofNat 2)))) (Not (Implies (Not (binrel% GE.ge f4 (Int.ofNat 1))) (Not (binrel% GE.ge f4 (Int.ofNat 1)))))) := by timed flipCongrArg lean_s32 [Not]
have lean_s34 : (Not (Implies (Not (binrel% GE.ge f4 (Int.ofNat 1))) (Not (binrel% GE.ge f4 (Int.ofNat 1))))) := by timed eqResolve lean_a14 lean_s33
have lean_s35 : (Not (Not (binrel% GE.ge f4 (Int.ofNat 1)))) := by timed notImplies2 lean_s34
have lean_s36 : (binrel% GE.ge f4 (Int.ofNat 1)) := by timed notNotElim lean_s35
have lean_s37 : (Not (Implies (Not (binrel% GE.ge f4 (Int.ofNat 1))) (Not (binrel% GE.ge f4 (Int.ofNat 1))))) := by timed eqResolve lean_a14 lean_s33
have lean_s38 : (Not (binrel% GE.ge f4 (Int.ofNat 1))) := by timed notImplies1 lean_s37
exact (show False from by timed contradiction lean_s36 lean_s38)


