-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {S1 : Type u} [Nonempty S1]
variable {f3 : Int}
variable {f4 : Int}
variable {f1 : S1}
variable {f2 : S1}
variable {f2 : S1}
variable {f1 : S1}
variable {f3 : Int}
variable {f4 : Int}

theorem th0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)) (Rat.ofInt 0)) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) True) → (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))))) → (Eq (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0))) True) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) → (Eq (Not True) False) → (Eq (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (binrel% GE.ge f3 (Int.ofNat 0))) (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))))) → (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) True) → (Eq (binrel% LT.lt f4 (Int.ofNat 0)) (Not (binrel% GE.ge f4 (Int.ofNat 0)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 2) f3) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f3))) → (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) → (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) → (Eq (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))))) → (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (binrel% GE.ge f3 (Int.ofNat 0))) → (Eq (Implies (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) False) (Not (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Rat.ofInt 0)) → (Eq (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0))) True) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0))) (Rat.ofInt 0)) → (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) → (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) → (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) True) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (Rat.ofInt 0)) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f3)))) (Rat.ofInt 0)) → (Eq (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) → (Eq (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (Rat.ofInt 0)) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)))) (Rat.ofInt 0)) → (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) → (Eq (binrel% LT.lt f3 (Int.ofNat 0)) (Not (binrel% GE.ge f3 (Int.ofNat 0)))) → (Eq (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) True) → (Eq (smtIte (Not (binrel% GE.ge f4 (Int.ofNat 0))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) → (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) → (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) → (Eq (smtIte (Not (binrel% GE.ge f3 (Int.ofNat 0))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))))) → (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) True) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))))) → (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) → (Eq (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) → (Eq (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (binrel% GE.ge f4 (Int.ofNat 0))) → (Eq (binrel% HMul.hMul (Rat.ofInt 2) f4) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f4))) → (Eq (Implies (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) False) (Not (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))))) → (Eq (Implies (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) False) (Not (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f4)))) (Rat.ofInt 0)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))))) → (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) True) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))))) → (Eq (Eq (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (binrel% GE.ge f4 (Int.ofNat 0))) (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))))) → (Eq (Implies (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) False) (Not (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))))) → (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)))) (Rat.ofInt 0)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))))) → (Not (Eq f1 f2)) → (Not (And (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int)))) → False :=
fun lean_r0 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r3 : (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (binrel% GE.ge f3 (Int.ofNat 0))) (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) True) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% LT.lt f4 (Int.ofNat 0)) (Not (binrel% GE.ge f4 (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HMul.hMul (Rat.ofInt 2) f3) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f3))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (binrel% GE.ge f3 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq (Implies (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) False) (Not (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))))) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r27 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) True) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f3)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r33 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (binrel% LT.lt f3 (Int.ofNat 0)) (Not (binrel% GE.ge f3 (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r38 : (Eq (smtIte (Not (binrel% GE.ge f4 (Int.ofNat 0))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq (smtIte (Not (binrel% GE.ge f3 (Int.ofNat 0))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))))) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (binrel% GE.ge f4 (Int.ofNat 0))) => -- THEORY_REWRITE_BOOL
fun lean_r48 : (Eq (binrel% HMul.hMul (Rat.ofInt 2) f4) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f4))) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (Implies (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) False) (Not (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))))) => -- THEORY_REWRITE_BOOL
fun lean_r50 : (Eq (Implies (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) False) (Not (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))))) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f4)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))))) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) True) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))))) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq (Eq (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (binrel% GE.ge f4 (Int.ofNat 0))) (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))))) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq (Implies (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) False) (Not (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))))) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))))) => -- THEORY_REWRITE_ARITH
fun lean_a61 : (Not (Eq f1 f2)) =>
fun lean_a62 : (Not (And (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int)))) => by
have lean_s0 : (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))))))) :=
  (scope (fun lean_a63 : (binrel% GE.ge f4 (Int.ofNat 0)) =>
    (scope (fun lean_a64 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) =>
      (scope (fun lean_a65 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) =>
        let lean_s0 := by timed And.intro lean_a65 lean_a64
        have lean_s1 : (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)))) := by timed And.intro lean_a63 lean_s0
        show (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)))) from lean_s1
  ))))))
have lean_s1 : (Implies (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))))) := by liftOrNToImp lean_s0, 3
have lean_s2 : (Eq (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) False))) :=
  (scope (fun lean_a66 : (binrel% GE.ge f4 (Int.ofNat 0)) =>
    (scope (fun lean_a67 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) =>
      (scope (fun lean_a68 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) =>
        have lean_s4 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0))) := by timed Eq.symm lean_r24
        have lean_s5 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0)) := by timed eqResolve lean_a68 lean_s4
        have lean_s6 : (Or (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0))) False) :=
          (scope (fun lean_a66 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0)) =>
            have lean_s6 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r26
            have lean_s7 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0))) := by timed And.intro lean_s6 lean_a66
            have lean_s8 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s9 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s7 lean_s8
            have lean_s10 : (Eq (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed Eq.symm lean_r31
            have lean_s11 : (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) := by timed eqResolve lean_a67 lean_s10
            have lean_s12 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed And.intro lean_s6 lean_s11
            have lean_s13 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int), (Int.ofNat 0), (Rat.ofInt 1)], 0
            have lean_s14 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s12 lean_s13
            have lean_s15 : (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) := by timed trueElim lean_r2
            have lean_s16 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0))) := by timed And.intro lean_s15 lean_a66
            have lean_s17 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))) := by arithMulNeg [f4, (Int.ofNat 0), (Neg.neg (Rat.ofInt 2))], 3
            have lean_s18 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))) := by timed modusPonens lean_s16 lean_s17
            have lean_s19 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) := by sumBounds [lean_s9, lean_s14, lean_s18]
            let lean_s20 := by timed congrHAdd lean_r25 lean_r59
            have lean_s21 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))))) := by timed congrHAdd lean_r60 lean_s20
            have lean_s22 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (Rat.ofInt 0)) := by timed Eq.trans lean_s21 lean_r58
            let lean_s23 := by timed flipCongrArg lean_s22 [GE.ge]
            let lean_s24 := by timed congrHAdd lean_r28 lean_r33
            have lean_s25 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0)))) := by timed congrHAdd lean_r28 lean_s24
            have lean_s26 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s25 lean_r21
            have lean_s27 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s23 lean_s26
            have lean_s28 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) True) := by timed Eq.trans lean_s27 lean_r22
            have lean_s29 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))))) (Not True)) := by timed flipCongrArg lean_s28 [Not]
            have lean_s30 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))))) False) := by timed Eq.trans lean_s29 lean_r7
            have lean_s31 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) False) := by timed Eq.trans lean_r0 lean_s30
            show False from by timed eqResolve lean_s19 lean_s31
          ))
        have lean_s7 : (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (Int.ofNat 0))) := by liftOrNToNeg lean_s6
        show False from by timed contradiction lean_s5 lean_s7
  ))))))
have lean_s5 : (Not (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))))) := by liftOrNToNeg lean_s4
have lean_s6 : (Eq (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)))) False) := by timed falseIntro lean_s5
have lean_s7 : (Eq (Implies (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))))) (Implies (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) False)) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq (Implies (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))))) (Not (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))))) := by timed Eq.trans lean_s7 lean_r56
have lean_s9 : (Not (And (binrel% GE.ge f4 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) := by timed flipNotAnd lean_s9 [(binrel% GE.ge f4 (Int.ofNat 0)), (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)), (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))]
have lean_s11 : (Eq Or Or) := by timed rfl
have lean_s12 : (Eq (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Not (binrel% GE.ge f4 (Int.ofNat 0)))) := by timed rfl
let lean_s13 := by timed congr lean_s11 lean_s12
have lean_s14 : (Eq (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)))) := by timed rfl
let lean_s15 := by timed congr lean_s11 lean_s14
have lean_s16 : (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed rfl
let lean_s17 := by timed flipCongrArg lean_s16 [Eq]
have lean_s18 : (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) := by timed congr lean_s17 lean_r45
have lean_s19 : (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) True) := by timed Eq.trans lean_s18 lean_r43
have lean_s20 : (Eq (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) True) := by timed Eq.trans lean_r46 lean_s19
have lean_s21 : (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed trueElim lean_s20
let lean_s22 := by timed congr lean_s15 lean_s21
have lean_s23 : (Eq (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) := by timed congr lean_s13 lean_s22
have lean_s24 : (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) := by timed eqResolve lean_s10 lean_s23
have lean_s25 : (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Or (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))))) := by permutateOr lean_s24, [0, 2, 1], (- 1)
have lean_s26 : (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) Prop) := by timed iteIntro
have lean_s27 : (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0))) := by timed rfl
have lean_s28 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) := by timed rfl
let lean_s29 := by timed flipCongrArg lean_s28 [Eq]
have lean_s30 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) := by timed rfl
have lean_s31 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) := by timed congr lean_s29 lean_s30
let lean_s32 := by timed Eq.trans lean_r39 lean_s31
have lean_s33 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) True) := by timed Eq.trans lean_s32 lean_r27
have lean_s34 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) := by timed trueElim lean_s33
let lean_s35 := by timed flipCongrArg lean_s34 [Eq]
have lean_s36 : (Eq (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Int.ofNat 2) f4)) := by timed rfl
have lean_s37 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) := by timed congr lean_s35 lean_s36
let lean_s38 := by timed flipCongrArg lean_s34 [Eq]
have lean_s39 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) := by timed rfl
have lean_s40 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) := by timed congr lean_s38 lean_s39
have lean_s41 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) Prop) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) Prop)) := by timed congrIte lean_s27 lean_s37 lean_s40
have lean_s42 : (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) Prop) := by timed eqResolve lean_s26 lean_s41
have lean_s43 : (Or (Not (binrel% GE.ge f4 (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4))) := by timed iteElim1 lean_s42
have lean_s44 : (Or (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))))))) :=
  (scope (fun lean_a67 : (Not (binrel% GE.ge f4 (Int.ofNat 0))) =>
    (scope (fun lean_a68 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) =>
      (scope (fun lean_a69 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) =>
        let lean_s44 := by timed And.intro lean_a69 lean_a68
        have lean_s45 : (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)))) := by timed And.intro lean_a67 lean_s44
        show (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)))) from lean_s45
  ))))))
have lean_s45 : (Implies (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))))) := by liftOrNToImp lean_s44, 3
have lean_s46 : (Eq (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) := by timed rfl
let lean_s47 := by timed flipCongrArg lean_s46 [Implies]
have lean_s48 : (Or (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) False))) :=
  (scope (fun lean_a69 : (Not (binrel% GE.ge f4 (Int.ofNat 0))) =>
    (scope (fun lean_a70 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) =>
      (scope (fun lean_a71 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) =>
        have lean_s48 : (Eq (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0))) := by timed Eq.symm lean_r13
        have lean_s49 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0)) := by timed eqResolve lean_a71 lean_s48
        have lean_s50 : (Or (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0))) False) :=
          (scope (fun lean_a69 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0)) =>
            have lean_s50 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r32
            have lean_s51 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0))) := by timed And.intro lean_s50 lean_a69
            have lean_s52 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)))) := by arithMulNeg [(binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)), (Int.ofNat 0), (Neg.neg (Rat.ofInt 1))], 4
            have lean_s53 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0))) := by timed modusPonens lean_s51 lean_s52
            have lean_s54 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r26
            have lean_s55 : (Eq (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed Eq.symm lean_r31
            have lean_s56 : (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) := by timed eqResolve lean_a70 lean_s55
            have lean_s57 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed And.intro lean_s54 lean_s56
            have lean_s58 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int), (Int.ofNat 0), (Rat.ofInt 1)], 0
            have lean_s59 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s57 lean_s58
            have lean_s60 : (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) := by timed trueElim lean_r37
            have lean_s61 : (Eq (Not (binrel% GE.ge f4 (Int.ofNat 0))) (binrel% LT.lt f4 (Int.ofNat 0))) := by timed Eq.symm lean_r10
            have lean_s62 : (binrel% LT.lt f4 (Int.ofNat 0)) := by timed eqResolve lean_a69 lean_s61
            have lean_s63 : (And (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) (binrel% LT.lt f4 (Int.ofNat 0))) := by timed And.intro lean_s60 lean_s62
            have lean_s64 : (Implies (And (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) (binrel% LT.lt f4 (Int.ofNat 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 2) f4) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))) := by arithMulPos [f4, (Int.ofNat 0), (Rat.ofInt 2)], 0
            have lean_s65 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 2) f4) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))) := by timed modusPonens lean_s63 lean_s64
            have lean_s66 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) := by sumBounds [lean_s53, lean_s59, lean_s65]
            let lean_s67 := by timed congrHAdd lean_r25 lean_r48
            have lean_s68 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f4))))) := by timed congrHAdd lean_r52 lean_s67
            have lean_s69 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (Rat.ofInt 0)) := by timed Eq.trans lean_s68 lean_r51
            let lean_s70 := by timed flipCongrArg lean_s69 [GE.ge]
            let lean_s71 := by timed congrHAdd lean_r28 lean_r1
            have lean_s72 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0)))) := by timed congrHAdd lean_r19 lean_s71
            have lean_s73 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s72 lean_r21
            have lean_s74 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s70 lean_s73
            have lean_s75 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) True) := by timed Eq.trans lean_s74 lean_r22
            have lean_s76 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))))) (Not True)) := by timed flipCongrArg lean_s75 [Not]
            have lean_s77 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))))) False) := by timed Eq.trans lean_s76 lean_r7
            have lean_s78 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f4))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) False) := by timed Eq.trans lean_r54 lean_s77
            show False from by timed eqResolve lean_s66 lean_s78
          ))
        have lean_s51 : (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f4) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) (Int.ofNat 0))) := by liftOrNToNeg lean_s50
        show False from by timed contradiction lean_s49 lean_s51
  ))))))
have lean_s49 : (Not (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))))) := by liftOrNToNeg lean_s48
have lean_s50 : (Eq (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)))) False) := by timed falseIntro lean_s49
have lean_s51 : (Eq (Implies (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))))) (Implies (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) False)) := by timed congr lean_s47 lean_s50
have lean_s52 : (Eq (Implies (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))))) (Not (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))))) := by timed Eq.trans lean_s51 lean_r49
have lean_s53 : (Not (And (Not (binrel% GE.ge f4 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) := by timed eqResolve lean_s45 lean_s52
have lean_s54 : (Or (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) := by timed flipNotAnd lean_s53 [(Not (binrel% GE.ge f4 (Int.ofNat 0))), (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)), (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))]
have lean_s55 : (Eq Or Or) := by timed rfl
have lean_s56 : (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0))) := by timed rfl
let lean_s57 := by timed flipCongrArg lean_s56 [Eq]
have lean_s58 : (Eq (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f4 (Int.ofNat 0))))) (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0)))) := by timed congr lean_s57 lean_r47
have lean_s59 : (Eq (Eq (binrel% GE.ge f4 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f4 (Int.ofNat 0))))) True) := by timed Eq.trans lean_s58 lean_r5
have lean_s60 : (Eq (Eq (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (binrel% GE.ge f4 (Int.ofNat 0))) True) := by timed Eq.trans lean_r55 lean_s59
have lean_s61 : (Eq (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (binrel% GE.ge f4 (Int.ofNat 0))) := by timed trueElim lean_s60
let lean_s62 := by timed congr lean_s55 lean_s61
have lean_s63 : (Eq (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)))) := by timed rfl
let lean_s64 := by timed congr lean_s55 lean_s63
let lean_s65 := by timed congr lean_s64 lean_s21
have lean_s66 : (Eq (Or (Not (Not (binrel% GE.ge f4 (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))))) (Or (binrel% GE.ge f4 (Int.ofNat 0)) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) := by timed congr lean_s62 lean_s65
have lean_s67 : (Or (binrel% GE.ge f4 (Int.ofNat 0)) (Or (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) := by timed eqResolve lean_s54 lean_s66
have lean_s68 : (Or (binrel% GE.ge f4 (Int.ofNat 0)) (Or (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (Not (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))))) := by permutateOr lean_s67, [0, 2, 1], (- 1)
have lean_s69 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
let lean_s70 := by timed flipCongrArg lean_s69 [LE.le]
have lean_s71 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) := by timed rfl
have lean_s72 : (Eq (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Int.ofNat 2) f3)) := by timed rfl
have lean_s73 : (Eq (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int) (smtIte (Not (binrel% GE.ge f3 (Int.ofNat 0))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) := by timed congrIte lean_r36 lean_s71 lean_s72
have lean_s74 : (Eq (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) := by timed Eq.trans lean_s73 lean_r41
have lean_s75 : (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) := by timed congr lean_s70 lean_s74
have lean_s76 : (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed Eq.trans lean_s75 lean_r40
let lean_s77 := by timed flipCongrArg lean_s76 [And]
let lean_s78 := by timed flipCongrArg lean_s69 [LE.le]
have lean_s79 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)) := by timed rfl
have lean_s80 : (Eq (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Int.ofNat 2) f4)) := by timed rfl
have lean_s81 : (Eq (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int) (smtIte (Not (binrel% GE.ge f4 (Int.ofNat 0))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int)) := by timed congrIte lean_r10 lean_s79 lean_s80
have lean_s82 : (Eq (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) := by timed Eq.trans lean_s81 lean_r38
have lean_s83 : (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int)) (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int))) := by timed congr lean_s78 lean_s82
have lean_s84 : (Eq (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed Eq.trans lean_s83 lean_r3
have lean_s85 : (Eq (And (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int))) (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) := by timed congr lean_s77 lean_s84
have lean_s86 : (Eq (Not (And (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int)))) (Not (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) := by timed flipCongrArg lean_s85 [Not]
have lean_s87 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) := by timed rfl
let lean_s88 := by timed flipCongrArg lean_s87 [Eq]
have lean_s89 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) := by timed rfl
have lean_s90 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) := by timed congr lean_s88 lean_s89
let lean_s91 := by timed Eq.trans lean_r57 lean_s90
have lean_s92 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) True) := by timed Eq.trans lean_s91 lean_r9
have lean_s93 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) := by timed trueElim lean_s92
let lean_s94 := by timed flipCongrArg lean_s93 [GE.ge]
have lean_s95 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s96 : (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed congr lean_s94 lean_s95
let lean_s97 := by timed flipCongrArg lean_s96 [And]
have lean_s98 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int)) := by timed trueElim lean_s33
let lean_s99 := by timed flipCongrArg lean_s98 [GE.ge]
have lean_s100 : (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by timed congr lean_s99 lean_s95
have lean_s101 : (Eq (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) := by timed congr lean_s97 lean_s100
have lean_s102 : (Eq (Not (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) (Not (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) := by timed flipCongrArg lean_s101 [Not]
have lean_s103 : (Eq (Not (And (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f3 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Int.ofNat 2) f3) Int)) (binrel% LE.le (Int.ofNat 0) (smtIte (binrel% LT.lt f4 (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) (binrel% HMul.hMul (Int.ofNat 2) f4) Int)))) (Not (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))))) := by timed Eq.trans lean_s86 lean_s102
have lean_s104 : (Not (And (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) := by timed eqResolve lean_a62 lean_s103
have lean_s105 : (Or (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)))) := by timed flipNotAnd lean_s104 [(binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)), (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))]
have lean_s106 : (Or (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))))))) :=
  (scope (fun lean_a70 : (Not (binrel% GE.ge f3 (Int.ofNat 0))) =>
    (scope (fun lean_a71 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) =>
      (scope (fun lean_a72 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) =>
        let lean_s106 := by timed And.intro lean_a72 lean_a71
        have lean_s107 : (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)))) := by timed And.intro lean_a70 lean_s106
        show (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)))) from lean_s107
  ))))))
have lean_s107 : (Implies (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))))) := by liftOrNToImp lean_s106, 3
have lean_s108 : (Eq (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) := by timed rfl
let lean_s109 := by timed flipCongrArg lean_s108 [Implies]
have lean_s110 : (Or (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) False))) :=
  (scope (fun lean_a73 : (Not (binrel% GE.ge f3 (Int.ofNat 0))) =>
    (scope (fun lean_a74 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) =>
      (scope (fun lean_a75 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) =>
        have lean_s110 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0))) := by timed Eq.symm lean_r23
        have lean_s111 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0)) := by timed eqResolve lean_a75 lean_s110
        have lean_s112 : (Or (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0))) False) :=
          (scope (fun lean_a73 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0)) =>
            have lean_s112 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r32
            have lean_s113 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0))) := by timed And.intro lean_s112 lean_a73
            have lean_s114 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)))) := by arithMulNeg [(binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)), (Int.ofNat 0), (Neg.neg (Rat.ofInt 1))], 4
            have lean_s115 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0))) := by timed modusPonens lean_s113 lean_s114
            have lean_s116 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r26
            have lean_s117 : (Eq (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed Eq.symm lean_r30
            have lean_s118 : (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) := by timed eqResolve lean_a74 lean_s117
            have lean_s119 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed And.intro lean_s116 lean_s118
            have lean_s120 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int), (Int.ofNat 0), (Rat.ofInt 1)], 0
            have lean_s121 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s119 lean_s120
            have lean_s122 : (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) := by timed trueElim lean_r37
            have lean_s123 : (Eq (Not (binrel% GE.ge f3 (Int.ofNat 0))) (binrel% LT.lt f3 (Int.ofNat 0))) := by timed Eq.symm lean_r36
            have lean_s124 : (binrel% LT.lt f3 (Int.ofNat 0)) := by timed eqResolve lean_a73 lean_s123
            have lean_s125 : (And (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) (binrel% LT.lt f3 (Int.ofNat 0))) := by timed And.intro lean_s122 lean_s124
            have lean_s126 : (Implies (And (binrel% GT.gt (Rat.ofInt 2) (Int.ofNat 0)) (binrel% LT.lt f3 (Int.ofNat 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 2) f3) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))) := by arithMulPos [f3, (Int.ofNat 0), (Rat.ofInt 2)], 0
            have lean_s127 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 2) f3) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))) := by timed modusPonens lean_s125 lean_s126
            have lean_s128 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) := by sumBounds [lean_s115, lean_s121, lean_s127]
            let lean_s129 := by timed congrHAdd lean_r6 lean_r11
            have lean_s130 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (binrel% HMul.hMul (Int.ofNat 2) f3))))) := by timed congrHAdd lean_r42 lean_s129
            have lean_s131 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (Rat.ofInt 0)) := by timed Eq.trans lean_s130 lean_r29
            let lean_s132 := by timed flipCongrArg lean_s131 [GE.ge]
            let lean_s133 := by timed congrHAdd lean_r28 lean_r1
            have lean_s134 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0)))) := by timed congrHAdd lean_r19 lean_s133
            have lean_s135 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s134 lean_r21
            have lean_s136 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s132 lean_s135
            have lean_s137 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) True) := by timed Eq.trans lean_s136 lean_r22
            have lean_s138 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))))) (Not True)) := by timed flipCongrArg lean_s137 [Not]
            have lean_s139 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0)))))) False) := by timed Eq.trans lean_s138 lean_r7
            have lean_s140 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 2) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Rat.ofInt 2) (Int.ofNat 0))))) False) := by timed Eq.trans lean_r44 lean_s139
            show False from by timed eqResolve lean_s128 lean_s140
          ))
        have lean_s113 : (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Int.ofNat 0))) := by liftOrNToNeg lean_s112
        show False from by timed contradiction lean_s111 lean_s113
  ))))))
have lean_s111 : (Not (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))))) := by liftOrNToNeg lean_s110
have lean_s112 : (Eq (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)))) False) := by timed falseIntro lean_s111
have lean_s113 : (Eq (Implies (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))))) (Implies (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) False)) := by timed congr lean_s109 lean_s112
have lean_s114 : (Eq (Implies (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))))) (Not (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))))) := by timed Eq.trans lean_s113 lean_r50
have lean_s115 : (Not (And (Not (binrel% GE.ge f3 (Int.ofNat 0))) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) := by timed eqResolve lean_s107 lean_s114
have lean_s116 : (Or (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) := by timed flipNotAnd lean_s115 [(Not (binrel% GE.ge f3 (Int.ofNat 0))), (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)), (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))]
have lean_s117 : (Eq Or Or) := by timed rfl
have lean_s118 : (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0))) := by timed rfl
let lean_s119 := by timed flipCongrArg lean_s118 [Eq]
have lean_s120 : (Eq (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f3 (Int.ofNat 0))))) (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0)))) := by timed congr lean_s119 lean_r17
have lean_s121 : (Eq (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (Not (Not (binrel% GE.ge f3 (Int.ofNat 0))))) True) := by timed Eq.trans lean_s120 lean_r20
have lean_s122 : (Eq (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (binrel% GE.ge f3 (Int.ofNat 0))) True) := by timed Eq.trans lean_r8 lean_s121
have lean_s123 : (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (binrel% GE.ge f3 (Int.ofNat 0))) := by timed trueElim lean_s122
let lean_s124 := by timed congr lean_s117 lean_s123
have lean_s125 : (Eq (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)))) := by timed rfl
let lean_s126 := by timed congr lean_s117 lean_s125
have lean_s127 : (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed rfl
let lean_s128 := by timed flipCongrArg lean_s127 [Eq]
have lean_s129 : (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) := by timed congr lean_s128 lean_r12
have lean_s130 : (Eq (Eq (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) True) := by timed Eq.trans lean_s129 lean_r53
have lean_s131 : (Eq (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) True) := by timed Eq.trans lean_r15 lean_s130
have lean_s132 : (Eq (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed trueElim lean_s131
let lean_s133 := by timed congr lean_s126 lean_s132
have lean_s134 : (Eq (Or (Not (Not (binrel% GE.ge f3 (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) (Or (binrel% GE.ge f3 (Int.ofNat 0)) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) := by timed congr lean_s124 lean_s133
have lean_s135 : (Or (binrel% GE.ge f3 (Int.ofNat 0)) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) := by timed eqResolve lean_s116 lean_s134
have lean_s136 : (Or (binrel% GE.ge f3 (Int.ofNat 0)) (Or (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))))) := by permutateOr lean_s135, [0, 2, 1], (- 1)
have lean_s137 : (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) Prop) := by timed iteIntro
have lean_s138 : (Eq (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0))) := by timed rfl
have lean_s139 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) := by timed trueElim lean_s92
let lean_s140 := by timed flipCongrArg lean_s139 [Eq]
have lean_s141 : (Eq (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Int.ofNat 2) f3)) := by timed rfl
have lean_s142 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) := by timed congr lean_s140 lean_s141
let lean_s143 := by timed flipCongrArg lean_s139 [Eq]
have lean_s144 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) := by timed rfl
have lean_s145 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) := by timed congr lean_s143 lean_s144
have lean_s146 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) Prop) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) Prop)) := by timed congrIte lean_s138 lean_s142 lean_s145
have lean_s147 : (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)) Prop) := by timed eqResolve lean_s137 lean_s146
have lean_s148 : (Or (binrel% GE.ge f3 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))) := by timed iteElim2 lean_s147
have lean_s149 : (Or (binrel% GE.ge f3 (Int.ofNat 0)) (Or (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0)))) := by R2 lean_s136, lean_s148, (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3)), [(- 1), (- 1)]
have lean_s150 : (Or (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by factor lean_s149, 2
have lean_s151 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))))))) :=
  (scope (fun lean_a74 : (binrel% GE.ge f3 (Int.ofNat 0)) =>
    (scope (fun lean_a75 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) =>
      (scope (fun lean_a76 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) =>
        let lean_s151 := by timed And.intro lean_a76 lean_a75
        have lean_s152 : (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)))) := by timed And.intro lean_a74 lean_s151
        show (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)))) from lean_s152
  ))))))
have lean_s152 : (Implies (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))))) := by liftOrNToImp lean_s151, 3
have lean_s153 : (Eq (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) := by timed rfl
let lean_s154 := by timed flipCongrArg lean_s153 [Implies]
have lean_s155 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) False))) :=
  (scope (fun lean_a76 : (binrel% GE.ge f3 (Int.ofNat 0)) =>
    (scope (fun lean_a77 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) =>
      (scope (fun lean_a78 : (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) =>
        have lean_s155 : (Eq (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0))) := by timed Eq.symm lean_r35
        have lean_s156 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0)) := by timed eqResolve lean_a78 lean_s155
        have lean_s157 : (Or (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0))) False) :=
          (scope (fun lean_a76 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0)) =>
            have lean_s157 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r26
            have lean_s158 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0))) := by timed And.intro lean_s157 lean_a76
            have lean_s159 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s160 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s158 lean_s159
            have lean_s161 : (Eq (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed Eq.symm lean_r30
            have lean_s162 : (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) := by timed eqResolve lean_a77 lean_s161
            have lean_s163 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by timed And.intro lean_s157 lean_s162
            have lean_s164 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (binrel% LT.lt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int), (Int.ofNat 0), (Rat.ofInt 1)], 0
            have lean_s165 : (binrel% LT.lt (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s163 lean_s164
            have lean_s166 : (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) := by timed trueElim lean_r2
            have lean_s167 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0))) := by timed And.intro lean_s166 lean_a76
            have lean_s168 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)) (binrel% GE.ge f3 (Int.ofNat 0))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))) := by arithMulNeg [f3, (Int.ofNat 0), (Neg.neg (Rat.ofInt 2))], 3
            have lean_s169 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))) := by timed modusPonens lean_s167 lean_s168
            have lean_s170 : (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) := by sumBounds [lean_s160, lean_s165, lean_s169]
            let lean_s171 := by timed congrHAdd lean_r6 lean_r14
            have lean_s172 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (Rat.ofInt (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (Rat.ofInt (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3))))) := by timed congrHAdd lean_r16 lean_s171
            have lean_s173 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (Rat.ofInt 0)) := by timed Eq.trans lean_s172 lean_r34
            let lean_s174 := by timed flipCongrArg lean_s173 [GE.ge]
            let lean_s175 := by timed congrHAdd lean_r28 lean_r33
            have lean_s176 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Rat.ofInt 0)))) := by timed congrHAdd lean_r28 lean_s175
            have lean_s177 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))) (Rat.ofInt 0)) := by timed Eq.trans lean_s176 lean_r21
            have lean_s178 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) (binrel% GE.ge (Rat.ofInt 0) (Rat.ofInt 0))) := by timed congr lean_s174 lean_s177
            have lean_s179 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) True) := by timed Eq.trans lean_s178 lean_r22
            have lean_s180 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))))) (Not True)) := by timed flipCongrArg lean_s179 [Not]
            have lean_s181 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0)))))) False) := by timed Eq.trans lean_s180 lean_r7
            have lean_s182 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) f3))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 2)) (Int.ofNat 0))))) False) := by timed Eq.trans lean_r4 lean_s181
            show False from by timed eqResolve lean_s170 lean_s182
          ))
        have lean_s158 : (Not (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int))) (Int.ofNat 0))) := by liftOrNToNeg lean_s157
        show False from by timed contradiction lean_s156 lean_s158
  ))))))
have lean_s156 : (Not (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))))) := by liftOrNToNeg lean_s155
have lean_s157 : (Eq (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)))) False) := by timed falseIntro lean_s156
have lean_s158 : (Eq (Implies (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))))) (Implies (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) False)) := by timed congr lean_s154 lean_s157
have lean_s159 : (Eq (Implies (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))))) (Not (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))))) := by timed Eq.trans lean_s158 lean_r18
have lean_s160 : (Not (And (binrel% GE.ge f3 (Int.ofNat 0)) (And (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)) (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) := by timed eqResolve lean_s152 lean_s159
have lean_s161 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) := by timed flipNotAnd lean_s160 [(binrel% GE.ge f3 (Int.ofNat 0)), (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)), (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))]
have lean_s162 : (Eq Or Or) := by timed rfl
have lean_s163 : (Eq (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Not (binrel% GE.ge f3 (Int.ofNat 0)))) := by timed rfl
let lean_s164 := by timed congr lean_s162 lean_s163
have lean_s165 : (Eq (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)))) := by timed rfl
let lean_s166 := by timed congr lean_s162 lean_s165
let lean_s167 := by timed congr lean_s166 lean_s132
have lean_s168 : (Eq (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) (Not (Not (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))))) (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))))) := by timed congr lean_s164 lean_s167
have lean_s169 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)))) := by timed eqResolve lean_s161 lean_s168
have lean_s170 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))))) := by permutateOr lean_s169, [0, 2, 1], (- 1)
have lean_s171 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3))) := by timed iteElim1 lean_s147
have lean_s172 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (Or (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (Not (binrel% GE.ge f3 (Int.ofNat 0))))) := by R2 lean_s170, lean_s171, (Eq (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (binrel% HMul.hMul (Int.ofNat 2) f3)), [(- 1), (- 1)]
have lean_s173 : (Or (Not (binrel% GE.ge f3 (Int.ofNat 0))) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by factor lean_s172, 2
have lean_s174 : (Or (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0))) := by R1 lean_s150, lean_s173, (binrel% GE.ge f3 (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s175 : (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)) := by factor lean_s174, 1
have lean_s176 : (Not (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0))) := by R2 lean_s105, lean_s175, (binrel% GE.ge (smtIte (binrel% GE.ge f3 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f3) Int) (Int.ofNat 0)), [(- 1), 0]
let lean_s177 := by R1 lean_s68, lean_s176, (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)), [(- 1), 0]
have lean_s178 : (Or (binrel% GE.ge f4 (Int.ofNat 0)) (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4))) := by timed iteElim2 lean_s42
have lean_s179 : (Or (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% GE.ge f4 (Int.ofNat 0))) := by R2 lean_s177, lean_s178, (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4)), [(- 1), (- 1)]
have lean_s180 : (binrel% GE.ge f4 (Int.ofNat 0)) := by factor lean_s179, 1
have lean_s181 : (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)) := by R2 lean_s43, lean_s180, (binrel% GE.ge f4 (Int.ofNat 0)), [(- 1), 0]
let lean_s182 := by R2 lean_s25, lean_s181, (Eq (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (binrel% HMul.hMul (Int.ofNat 2) f4)), [(- 1), 0]
let lean_s183 := by R2 lean_s182, lean_s180, (binrel% GE.ge f4 (Int.ofNat 0)), [(- 1), 0]
exact (show False from by R1 lean_s183, lean_s176, (binrel% GE.ge (smtIte (binrel% GE.ge f4 (Int.ofNat 0)) (binrel% HMul.hMul (Int.ofNat 2) f4) (binrel% HMul.hMul (Neg.neg (Int.ofNat 2)) f4) Int) (Int.ofNat 0)), [0, 0])


