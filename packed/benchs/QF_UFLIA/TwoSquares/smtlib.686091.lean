-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000


universe u
variable {S1 : Type u} [Nonempty S1]
variable {f2 : S1}
variable {f4 : (Int -> Int -> Int)}
variable {f1 : S1}
variable {f1 : S1}
variable {f3 : Int}
variable {f2 : S1}
variable {f4 : (Int -> Int -> Int)}
variable {f3 : Int}

theorem th0 : (Eq (binrel% GE.ge (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) (binrel% GE.ge f3 (Int.ofNat 1))) → (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2)))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)))) (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) → (Eq (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (binrel% HAdd.hAdd (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3))) → (Eq (binrel% HAdd.hAdd (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) → (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 1)))) (binrel% GE.ge f3 (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 1)))) (binrel% HMul.hMul (Int.ofNat 4) f3)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))))) → (Eq (binrel% LT.lt (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))) (Not (binrel% GE.ge (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (Int.ofNat 2)) (binrel% GE.ge f3 (Int.ofNat 1))) → (Not (Eq f1 f2)) → (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2))) → (binrel% LT.lt (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))) → False :=
fun lean_r0 : (Eq (binrel% GE.ge (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) (binrel% GE.ge f3 (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)))) (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (binrel% HAdd.hAdd (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HAdd.hAdd (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (Not (Not (binrel% GE.ge f3 (Int.ofNat 1)))) (binrel% GE.ge f3 (Int.ofNat 1))) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 1)))) (binrel% HMul.hMul (Int.ofNat 4) f3)) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% LT.lt (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))) (Not (binrel% GE.ge (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (Int.ofNat 2)) (binrel% GE.ge f3 (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_a14 : (Not (Eq f1 f2)) =>
fun lean_a15 : (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2))) =>
fun lean_a16 : (binrel% LT.lt (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))) => by
let lean_s0 := by timed flipCongrArg lean_r5 [GE.ge]
have lean_s1 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s2 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (Int.ofNat 2))) := by timed congr lean_s0 lean_s1
have lean_s3 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2)) (binrel% GE.ge f3 (Int.ofNat 1))) := by timed Eq.trans lean_s2 lean_r13
have lean_s4 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2))) (Not (binrel% GE.ge f3 (Int.ofNat 1)))) := by timed flipCongrArg lean_s3 [Not]
have lean_s5 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2)) (Not (binrel% GE.ge f3 (Int.ofNat 1)))) := by timed Eq.trans lean_r2 lean_s4
have lean_s6 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2))) (Not (Not (binrel% GE.ge f3 (Int.ofNat 1))))) := by timed flipCongrArg lean_s5 [Not]
have lean_s7 : (Eq (Not (binrel% LT.lt (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 2))) (binrel% GE.ge f3 (Int.ofNat 1))) := by timed Eq.trans lean_s6 lean_r8
have lean_s8 : (binrel% GE.ge f3 (Int.ofNat 1)) := by timed eqResolve lean_a15 lean_s7
let lean_s9 := by timed flipCongrArg lean_r5 [f4]
have lean_s10 : (Eq (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HMul.hMul (Int.ofNat 4) f3)) := by timed rfl
have lean_s11 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
let lean_s12 := by timed congrHAdd lean_s11 lean_r12
have lean_s13 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 1))))) := by timed congrHAdd lean_s10 lean_s12
have lean_s14 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) (binrel% HMul.hMul (Int.ofNat 4) f3)) := by timed Eq.trans lean_s13 lean_r9
have lean_s15 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Int.ofNat 4) f3)) := by timed Eq.trans lean_r10 lean_s14
have lean_s16 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HMul.hMul (Int.ofNat 4) f3)) := by timed Eq.trans lean_r1 lean_s15
have lean_s17 : (Eq (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))) := by timed congr lean_s9 lean_s16
let lean_s18 := by timed flipCongrArg lean_s17 [GE.ge]
let lean_s19 := by timed flipCongrArg lean_s17 [HAdd.hAdd]
have lean_s20 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s21 := by timed flipCongrArg lean_s20 [HMul.hMul]
have lean_s22 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)))) := by timed congr lean_s21 lean_r5
have lean_s23 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3))) := by timed Eq.trans lean_s22 lean_r6
have lean_s24 : (Eq (binrel% HAdd.hAdd (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)))) (binrel% HAdd.hAdd (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3)))) := by timed congr lean_s19 lean_s23
have lean_s25 : (Eq (binrel% HAdd.hAdd (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) := by timed Eq.trans lean_s24 lean_r7
have lean_s26 : (Eq (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) := by timed Eq.trans lean_r4 lean_s25
let lean_s27 := by timed flipCongrArg lean_s26 [HAdd.hAdd]
have lean_s28 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)))) (Int.ofNat 2))) := by timed congr lean_s27 lean_s1
have lean_s29 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3))))) := by timed Eq.trans lean_s28 lean_r3
have lean_s30 : (Eq (binrel% GE.ge (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% GE.ge (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) f3) (f4 (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Int.ofNat 4) f3)) (binrel% HMul.hMul (Int.ofNat 4) f3)))))) := by timed congr lean_s18 lean_s29
have lean_s31 : (Eq (binrel% GE.ge (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))) (binrel% GE.ge f3 (Int.ofNat 1))) := by timed Eq.trans lean_s30 lean_r0
have lean_s32 : (Eq (Not (binrel% GE.ge (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2)))) (Not (binrel% GE.ge f3 (Int.ofNat 1)))) := by timed flipCongrArg lean_s31 [Not]
have lean_s33 : (Eq (binrel% LT.lt (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HSub.hSub (f4 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) f3) (Int.ofNat 1))) (Int.ofNat 2))) (Not (binrel% GE.ge f3 (Int.ofNat 1)))) := by timed Eq.trans lean_r11 lean_s32
have lean_s34 : (Not (binrel% GE.ge f3 (Int.ofNat 1))) := by timed eqResolve lean_a16 lean_s33
exact (show False from by timed contradiction lean_s8 lean_s34)


