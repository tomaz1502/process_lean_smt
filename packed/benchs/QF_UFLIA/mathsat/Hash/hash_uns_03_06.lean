-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {hashx5f3 : (Int -> Int)}
variable {hashx5f4 : (Int -> Int)}
variable {hashx5f6 : (Int -> Int)}
variable {hashx5f5 : (Int -> Int)}
variable {x2 : Int}
variable {x1 : Int}
variable {hashx5f2 : (Int -> Int)}
variable {x3 : Int}
variable {x2 : Int}
variable {hashx5f6 : (Int -> Int)}
variable {hashx5f1 : (Int -> Int)}
variable {hashx5f5 : (Int -> Int)}
variable {hashx5f3 : (Int -> Int)}
variable {hashx5f4 : (Int -> Int)}
variable {x1 : Int}
variable {hashx5f1 : (Int -> Int)}
variable {x3 : Int}
variable {hashx5f2 : (Int -> Int)}

theorem th0 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (Ne (hashx5f1 x1) (hashx5f1 x3))) (Ne (hashx5f1 x2) (hashx5f1 x3))) (Ne (hashx5f2 x1) (hashx5f2 x2))) (Ne (hashx5f2 x1) (hashx5f2 x3))) (Ne (hashx5f2 x2) (hashx5f2 x3))) (Ne (hashx5f3 x1) (hashx5f3 x2))) (Ne (hashx5f3 x1) (hashx5f3 x3))) (Ne (hashx5f3 x2) (hashx5f3 x3))) (Ne (hashx5f4 x1) (hashx5f4 x2))) (Ne (hashx5f4 x1) (hashx5f4 x3))) (Ne (hashx5f4 x2) (hashx5f4 x3))) (Ne (hashx5f5 x1) (hashx5f5 x2))) (Ne (hashx5f5 x1) (hashx5f5 x3))) (Ne (hashx5f5 x2) (hashx5f5 x3))) (Ne (hashx5f6 x1) (hashx5f6 x2))) (Ne (hashx5f6 x1) (hashx5f6 x3))) (Ne (hashx5f6 x2) (hashx5f6 x3))) (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3))) (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3))) (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3))) (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3))) (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3))) (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3))) (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3))) (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3))) (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3))) (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3))) (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3))) (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3))) (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3))) (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3))) (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3))) (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3))) (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3))) (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3))) (Ne x1 x2)) (Ne x1 x3)) (Ne x2 x3)) (binrel% LE.le (Int.ofNat 0) x1)) (binrel% LT.lt x1 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x2)) (binrel% LT.lt x2 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x3)) (binrel% LT.lt x3 (Int.ofNat 4))) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (And (Ne (hashx5f1 x1) (hashx5f1 x3)) (And (Ne (hashx5f1 x2) (hashx5f1 x3)) (And (Ne (hashx5f2 x1) (hashx5f2 x2)) (And (Ne (hashx5f2 x1) (hashx5f2 x3)) (And (Ne (hashx5f2 x2) (hashx5f2 x3)) (And (Ne (hashx5f3 x1) (hashx5f3 x2)) (And (Ne (hashx5f3 x1) (hashx5f3 x3)) (And (Ne (hashx5f3 x2) (hashx5f3 x3)) (And (Ne (hashx5f4 x1) (hashx5f4 x2)) (And (Ne (hashx5f4 x1) (hashx5f4 x3)) (And (Ne (hashx5f4 x2) (hashx5f4 x3)) (And (Ne (hashx5f5 x1) (hashx5f5 x2)) (And (Ne (hashx5f5 x1) (hashx5f5 x3)) (And (Ne (hashx5f5 x2) (hashx5f5 x3)) (And (Ne (hashx5f6 x1) (hashx5f6 x2)) (And (Ne (hashx5f6 x1) (hashx5f6 x3)) (And (Ne (hashx5f6 x2) (hashx5f6 x3)) (And (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3)) (And (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3)) (And (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3)) (And (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3)) (And (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3)) (And (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3)) (And (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3)) (And (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3)) (And (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3)) (And (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3)) (And (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3)) (And (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3)) (And (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3)) (And (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3)) (And (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3)) (And (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3)) (And (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3)) (And (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3)) (And (Ne x1 x2) (And (Ne x1 x3) (And (Ne x2 x3) (And (binrel% LE.le (Int.ofNat 0) x1) (And (binrel% LT.lt x1 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x2) (And (binrel% LT.lt x2 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x3) (And (binrel% LT.lt x3 (Int.ofNat 4)) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)))))))))))))))))))))))))))))))))))))))))))))))) → (Eq (Ne (hashx5f2 x1) (hashx5f2 x3)) (Not (Eq (hashx5f2 x1) (hashx5f2 x3)))) → (Eq (Ne (hashx5f2 x2) (hashx5f2 x3)) (Not (Eq (hashx5f2 x2) (hashx5f2 x3)))) → (Eq (Ne (hashx5f3 x1) (hashx5f3 x2)) (Not (Eq (hashx5f3 x1) (hashx5f3 x2)))) → (Eq (Ne (hashx5f3 x1) (hashx5f3 x3)) (Not (Eq (hashx5f3 x1) (hashx5f3 x3)))) → (Eq (Ne (hashx5f3 x2) (hashx5f3 x3)) (Not (Eq (hashx5f3 x2) (hashx5f3 x3)))) → (Eq (Ne (hashx5f5 x2) (hashx5f5 x3)) (Not (Eq (hashx5f5 x2) (hashx5f5 x3)))) → (Eq (Ne (hashx5f6 x1) (hashx5f6 x2)) (Not (Eq (hashx5f6 x1) (hashx5f6 x2)))) → (Eq (Eq (hashx5f1 x1) x2) (Eq x2 (hashx5f1 x1))) → (Eq (Eq (hashx5f1 x1) x3) (Eq x3 (hashx5f1 x1))) → (Eq (Eq (hashx5f1 x2) x2) (Eq x2 (hashx5f1 x2))) → (Eq (Eq (hashx5f1 x2) x3) (Eq x3 (hashx5f1 x2))) → (Eq (Eq (hashx5f1 x3) x3) (Eq x3 (hashx5f1 x3))) → (Eq (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3)) (Or (Eq (hashx5f2 x1) x1) (Or (Eq (hashx5f2 x1) x2) (Eq (hashx5f2 x1) x3)))) → (Eq (Eq (hashx5f2 x1) x1) (Eq x1 (hashx5f2 x1))) → (Eq (Eq (hashx5f2 x1) x2) (Eq x2 (hashx5f2 x1))) → (Eq (Eq (hashx5f2 x1) x3) (Eq x3 (hashx5f2 x1))) → (Eq (Ne (hashx5f4 x1) (hashx5f4 x2)) (Not (Eq (hashx5f4 x1) (hashx5f4 x2)))) → (Eq (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3)) (Or (Eq (hashx5f2 x2) x1) (Or (Eq (hashx5f2 x2) x2) (Eq (hashx5f2 x2) x3)))) → (Eq (Ne (hashx5f4 x2) (hashx5f4 x3)) (Not (Eq (hashx5f4 x2) (hashx5f4 x3)))) → (Eq (Eq (hashx5f2 x2) x2) (Eq x2 (hashx5f2 x2))) → (Eq (Ne (hashx5f5 x1) (hashx5f5 x2)) (Not (Eq (hashx5f5 x1) (hashx5f5 x2)))) → (Eq (Eq (hashx5f2 x2) x3) (Eq x3 (hashx5f2 x2))) → (Eq (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3)) (Or (Eq (hashx5f2 x3) x1) (Or (Eq (hashx5f2 x3) x2) (Eq (hashx5f2 x3) x3)))) → (Eq (Eq (hashx5f2 x3) x1) (Eq x1 (hashx5f2 x3))) → (Eq (Eq (hashx5f2 x3) x2) (Eq x2 (hashx5f2 x3))) → (Eq (Eq (hashx5f2 x3) x3) (Eq x3 (hashx5f2 x3))) → (Eq (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3)) (Or (Eq (hashx5f3 x1) x1) (Or (Eq (hashx5f3 x1) x2) (Eq (hashx5f3 x1) x3)))) → (Eq (Eq (hashx5f3 x1) x1) (Eq x1 (hashx5f3 x1))) → (Eq (Eq (hashx5f3 x1) x2) (Eq x2 (hashx5f3 x1))) → (Eq (Eq (hashx5f5 x3) x1) (Eq x1 (hashx5f5 x3))) → (Eq (Eq (hashx5f5 x3) x2) (Eq x2 (hashx5f5 x3))) → (Eq (Eq (hashx5f5 x3) x3) (Eq x3 (hashx5f5 x3))) → (Eq (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3)) (Or (Eq (hashx5f5 x1) x1) (Or (Eq (hashx5f5 x1) x2) (Eq (hashx5f5 x1) x3)))) → (Eq (Ne (hashx5f6 x1) (hashx5f6 x3)) (Not (Eq (hashx5f6 x1) (hashx5f6 x3)))) → (Eq (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3)) (Or (Eq (hashx5f6 x1) x1) (Or (Eq (hashx5f6 x1) x2) (Eq (hashx5f6 x1) x3)))) → (Eq (Eq (hashx5f1 x3) x1) (Eq x1 (hashx5f1 x3))) → (Eq (Eq (hashx5f6 x3) x3) (Eq x3 (hashx5f6 x3))) → (Eq (Ne (hashx5f5 x1) (hashx5f5 x3)) (Not (Eq (hashx5f5 x1) (hashx5f5 x3)))) → (Eq (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) True) → (Eq (Ne (hashx5f6 x2) (hashx5f6 x3)) (Not (Eq (hashx5f6 x2) (hashx5f6 x3)))) → (Eq (Eq (hashx5f6 x1) x1) (Eq x1 (hashx5f6 x1))) → (Eq (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3)) (Or (Eq (hashx5f1 x1) x1) (Or (Eq (hashx5f1 x1) x2) (Eq (hashx5f1 x1) x3)))) → (Eq (Eq (hashx5f6 x1) x2) (Eq x2 (hashx5f6 x1))) → (Eq (Eq (hashx5f1 x1) x1) (Eq x1 (hashx5f1 x1))) → (Eq (Eq (hashx5f6 x1) x3) (Eq x3 (hashx5f6 x1))) → (Eq (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3)) (Or (Eq (hashx5f6 x3) x1) (Or (Eq (hashx5f6 x3) x2) (Eq (hashx5f6 x3) x3)))) → (Eq (Ne (hashx5f4 x1) (hashx5f4 x3)) (Not (Eq (hashx5f4 x1) (hashx5f4 x3)))) → (Eq (Eq (hashx5f2 x2) x1) (Eq x1 (hashx5f2 x2))) → (Eq (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1))) → (Eq (Eq (hashx5f6 x3) x1) (Eq x1 (hashx5f6 x3))) → (Eq (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3)) (Or (Eq (hashx5f1 x3) x1) (Or (Eq (hashx5f1 x3) x2) (Eq (hashx5f1 x3) x3)))) → (Eq (Eq (hashx5f6 x3) x2) (Eq x2 (hashx5f6 x3))) → (Eq (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3)) (Or (Eq (hashx5f5 x2) x1) (Or (Eq (hashx5f5 x2) x2) (Eq (hashx5f5 x2) x3)))) → (Eq (Ne x1 x2) (Not (Eq x1 x2))) → (Eq (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3)) (Or (Eq (hashx5f4 x3) x1) (Or (Eq (hashx5f4 x3) x2) (Eq (hashx5f4 x3) x3)))) → (Eq (Eq (hashx5f1 x2) x1) (Eq x1 (hashx5f1 x2))) → (Eq (Eq (hashx5f6 x2) x3) (Eq x3 (hashx5f6 x2))) → (Eq (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3)) (Or (Eq (hashx5f5 x3) x1) (Or (Eq (hashx5f5 x3) x2) (Eq (hashx5f5 x3) x3)))) → (Eq (binrel% LE.le (Int.ofNat 0) x2) (binrel% GE.ge x2 (Int.ofNat 0))) → (Eq (Eq (hashx5f4 x1) x2) (Eq x2 (hashx5f4 x1))) → (Eq (Not True) False) → (Eq (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3)) (Or (Eq (hashx5f1 x2) x1) (Or (Eq (hashx5f1 x2) x2) (Eq (hashx5f1 x2) x3)))) → (Eq (Eq (hashx5f6 x2) x2) (Eq x2 (hashx5f6 x2))) → (Eq (binrel% LT.lt x1 (Int.ofNat 4)) (Not (binrel% GE.ge x1 (Int.ofNat 4)))) → (Eq (Eq (hashx5f1 x3) x2) (Eq x2 (hashx5f1 x3))) → (Eq (And (Not (Eq (hashx5f1 x1) (hashx5f1 x2))) (And (Not (Eq (hashx5f1 x1) (hashx5f1 x3))) (And (Not (Eq (hashx5f1 x2) (hashx5f1 x3))) (And (Not (Eq (hashx5f2 x1) (hashx5f2 x2))) (And (Not (Eq (hashx5f2 x1) (hashx5f2 x3))) (And (Not (Eq (hashx5f2 x2) (hashx5f2 x3))) (And (Not (Eq (hashx5f3 x1) (hashx5f3 x2))) (And (Not (Eq (hashx5f3 x1) (hashx5f3 x3))) (And (Not (Eq (hashx5f3 x2) (hashx5f3 x3))) (And (Not (Eq (hashx5f4 x1) (hashx5f4 x2))) (And (Not (Eq (hashx5f4 x1) (hashx5f4 x3))) (And (Not (Eq (hashx5f4 x2) (hashx5f4 x3))) (And (Not (Eq (hashx5f5 x1) (hashx5f5 x2))) (And (Not (Eq (hashx5f5 x1) (hashx5f5 x3))) (And (Not (Eq (hashx5f5 x2) (hashx5f5 x3))) (And (Not (Eq (hashx5f6 x1) (hashx5f6 x2))) (And (Not (Eq (hashx5f6 x1) (hashx5f6 x3))) (And (Not (Eq (hashx5f6 x2) (hashx5f6 x3))) (And (Or (Eq x1 (hashx5f1 x1)) (Or (Eq x2 (hashx5f1 x1)) (Eq x3 (hashx5f1 x1)))) (And (Or (Eq x1 (hashx5f1 x2)) (Or (Eq x2 (hashx5f1 x2)) (Eq x3 (hashx5f1 x2)))) (And (Or (Eq x1 (hashx5f1 x3)) (Or (Eq x2 (hashx5f1 x3)) (Eq x3 (hashx5f1 x3)))) (And (Or (Eq x1 (hashx5f2 x1)) (Or (Eq x2 (hashx5f2 x1)) (Eq x3 (hashx5f2 x1)))) (And (Or (Eq x1 (hashx5f2 x2)) (Or (Eq x2 (hashx5f2 x2)) (Eq x3 (hashx5f2 x2)))) (And (Or (Eq x1 (hashx5f2 x3)) (Or (Eq x2 (hashx5f2 x3)) (Eq x3 (hashx5f2 x3)))) (And (Or (Eq x1 (hashx5f3 x1)) (Or (Eq x2 (hashx5f3 x1)) (Eq x3 (hashx5f3 x1)))) (And (Or (Eq x1 (hashx5f3 x2)) (Or (Eq x2 (hashx5f3 x2)) (Eq x3 (hashx5f3 x2)))) (And (Or (Eq x1 (hashx5f3 x3)) (Or (Eq x2 (hashx5f3 x3)) (Eq x3 (hashx5f3 x3)))) (And (Or (Eq x1 (hashx5f4 x1)) (Or (Eq x2 (hashx5f4 x1)) (Eq x3 (hashx5f4 x1)))) (And (Or (Eq x1 (hashx5f4 x2)) (Or (Eq x2 (hashx5f4 x2)) (Eq x3 (hashx5f4 x2)))) (And (Or (Eq x1 (hashx5f4 x3)) (Or (Eq x2 (hashx5f4 x3)) (Eq x3 (hashx5f4 x3)))) (And (Or (Eq x1 (hashx5f5 x1)) (Or (Eq x2 (hashx5f5 x1)) (Eq x3 (hashx5f5 x1)))) (And (Or (Eq x1 (hashx5f5 x2)) (Or (Eq x2 (hashx5f5 x2)) (Eq x3 (hashx5f5 x2)))) (And (Or (Eq x1 (hashx5f5 x3)) (Or (Eq x2 (hashx5f5 x3)) (Eq x3 (hashx5f5 x3)))) (And (Or (Eq x1 (hashx5f6 x1)) (Or (Eq x2 (hashx5f6 x1)) (Eq x3 (hashx5f6 x1)))) (And (Or (Eq x1 (hashx5f6 x2)) (Or (Eq x2 (hashx5f6 x2)) (Eq x3 (hashx5f6 x2)))) (And (Or (Eq x1 (hashx5f6 x3)) (Or (Eq x2 (hashx5f6 x3)) (Eq x3 (hashx5f6 x3)))) (And (Not (Eq x1 x2)) (And (Not (Eq x1 x3)) (And (Not (Eq x2 x3)) (And (binrel% GE.ge x1 (Int.ofNat 0)) (And (Not (binrel% GE.ge x1 (Int.ofNat 4))) (And (binrel% GE.ge x2 (Int.ofNat 0)) (And (Not (binrel% GE.ge x2 (Int.ofNat 4))) (And (binrel% GE.ge x3 (Int.ofNat 0)) (And (Not (binrel% GE.ge x3 (Int.ofNat 4))) False))))))))))))))))))))))))))))))))))))))))))))) False) → (Eq (Eq (hashx5f4 x1) x1) (Eq x1 (hashx5f4 x1))) → (Eq (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3)) (Or (Eq (hashx5f6 x2) x1) (Or (Eq (hashx5f6 x2) x2) (Eq (hashx5f6 x2) x3)))) → (Eq (Eq (hashx5f4 x3) x2) (Eq x2 (hashx5f4 x3))) → (Eq (Eq (hashx5f3 x2) x3) (Eq x3 (hashx5f3 x2))) → (Eq (binrel% LT.lt x3 (Int.ofNat 4)) (Not (binrel% GE.ge x3 (Int.ofNat 4)))) → (Eq (Eq (hashx5f3 x2) x2) (Eq x2 (hashx5f3 x2))) → (Eq (binrel% LE.le (Int.ofNat 0) x3) (binrel% GE.ge x3 (Int.ofNat 0))) → (Eq (Eq (hashx5f3 x2) x1) (Eq x1 (hashx5f3 x2))) → (Eq (binrel% LT.lt x2 (Int.ofNat 4)) (Not (binrel% GE.ge x2 (Int.ofNat 4)))) → (Eq (Eq (hashx5f4 x1) x3) (Eq x3 (hashx5f4 x1))) → (Eq (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3)) (Or (Eq (hashx5f3 x2) x1) (Or (Eq (hashx5f3 x2) x2) (Eq (hashx5f3 x2) x3)))) → (Eq (Eq (hashx5f6 x2) x1) (Eq x1 (hashx5f6 x2))) → (Eq (Eq (hashx5f5 x2) x3) (Eq x3 (hashx5f5 x2))) → (Eq (binrel% LE.le (Int.ofNat 0) x1) (binrel% GE.ge x1 (Int.ofNat 0))) → (Eq (Eq (hashx5f4 x3) x3) (Eq x3 (hashx5f4 x3))) → (Eq (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) (Not (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)))) → (Eq (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3)) (Or (Eq (hashx5f4 x1) x1) (Or (Eq (hashx5f4 x1) x2) (Eq (hashx5f4 x1) x3)))) → (Eq (Eq (hashx5f4 x3) x1) (Eq x1 (hashx5f4 x3))) → (Eq (Ne x2 x3) (Not (Eq x2 x3))) → (Eq (Eq (hashx5f5 x2) x2) (Eq x2 (hashx5f5 x2))) → (Eq (Ne x1 x3) (Not (Eq x1 x3))) → (Eq (Eq (hashx5f5 x2) x1) (Eq x1 (hashx5f5 x2))) → (Eq (Eq (hashx5f5 x1) x3) (Eq x3 (hashx5f5 x1))) → (Eq (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3)) (Or (Eq (hashx5f4 x2) x1) (Or (Eq (hashx5f4 x2) x2) (Eq (hashx5f4 x2) x3)))) → (Eq (Eq (hashx5f5 x1) x2) (Eq x2 (hashx5f5 x1))) → (Eq (Eq (hashx5f5 x1) x1) (Eq x1 (hashx5f5 x1))) → (Eq (Eq (hashx5f4 x2) x3) (Eq x3 (hashx5f4 x2))) → (Eq (Ne (hashx5f1 x1) (hashx5f1 x2)) (Not (Eq (hashx5f1 x1) (hashx5f1 x2)))) → (Eq (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3)) (Or (Eq (hashx5f3 x3) x1) (Or (Eq (hashx5f3 x3) x2) (Eq (hashx5f3 x3) x3)))) → (Eq (Eq (hashx5f4 x2) x2) (Eq x2 (hashx5f4 x2))) → (Eq (Eq (hashx5f4 x2) x1) (Eq x1 (hashx5f4 x2))) → (Eq (Ne (hashx5f2 x1) (hashx5f2 x2)) (Not (Eq (hashx5f2 x1) (hashx5f2 x2)))) → (Eq (Eq (hashx5f3 x3) x3) (Eq x3 (hashx5f3 x3))) → (Eq (Ne (hashx5f1 x2) (hashx5f1 x3)) (Not (Eq (hashx5f1 x2) (hashx5f1 x3)))) → (Eq (Eq (hashx5f3 x3) x2) (Eq x2 (hashx5f3 x3))) → (Eq (Ne (hashx5f1 x1) (hashx5f1 x3)) (Not (Eq (hashx5f1 x1) (hashx5f1 x3)))) → (Eq (Eq (hashx5f3 x3) x1) (Eq x1 (hashx5f3 x3))) → (Eq (Eq (hashx5f3 x1) x3) (Eq x3 (hashx5f3 x1))) → (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (Ne (hashx5f1 x1) (hashx5f1 x3))) (Ne (hashx5f1 x2) (hashx5f1 x3))) (Ne (hashx5f2 x1) (hashx5f2 x2))) (Ne (hashx5f2 x1) (hashx5f2 x3))) (Ne (hashx5f2 x2) (hashx5f2 x3))) (Ne (hashx5f3 x1) (hashx5f3 x2))) (Ne (hashx5f3 x1) (hashx5f3 x3))) (Ne (hashx5f3 x2) (hashx5f3 x3))) (Ne (hashx5f4 x1) (hashx5f4 x2))) (Ne (hashx5f4 x1) (hashx5f4 x3))) (Ne (hashx5f4 x2) (hashx5f4 x3))) (Ne (hashx5f5 x1) (hashx5f5 x2))) (Ne (hashx5f5 x1) (hashx5f5 x3))) (Ne (hashx5f5 x2) (hashx5f5 x3))) (Ne (hashx5f6 x1) (hashx5f6 x2))) (Ne (hashx5f6 x1) (hashx5f6 x3))) (Ne (hashx5f6 x2) (hashx5f6 x3))) (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3))) (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3))) (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3))) (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3))) (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3))) (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3))) (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3))) (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3))) (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3))) (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3))) (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3))) (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3))) (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3))) (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3))) (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3))) (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3))) (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3))) (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3))) (Ne x1 x2)) (Ne x1 x3)) (Ne x2 x3)) (binrel% LE.le (Int.ofNat 0) x1)) (binrel% LT.lt x1 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x2)) (binrel% LT.lt x2 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x3)) (binrel% LT.lt x3 (Int.ofNat 4))) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) → False :=
fun lean_r0 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (Ne (hashx5f1 x1) (hashx5f1 x3))) (Ne (hashx5f1 x2) (hashx5f1 x3))) (Ne (hashx5f2 x1) (hashx5f2 x2))) (Ne (hashx5f2 x1) (hashx5f2 x3))) (Ne (hashx5f2 x2) (hashx5f2 x3))) (Ne (hashx5f3 x1) (hashx5f3 x2))) (Ne (hashx5f3 x1) (hashx5f3 x3))) (Ne (hashx5f3 x2) (hashx5f3 x3))) (Ne (hashx5f4 x1) (hashx5f4 x2))) (Ne (hashx5f4 x1) (hashx5f4 x3))) (Ne (hashx5f4 x2) (hashx5f4 x3))) (Ne (hashx5f5 x1) (hashx5f5 x2))) (Ne (hashx5f5 x1) (hashx5f5 x3))) (Ne (hashx5f5 x2) (hashx5f5 x3))) (Ne (hashx5f6 x1) (hashx5f6 x2))) (Ne (hashx5f6 x1) (hashx5f6 x3))) (Ne (hashx5f6 x2) (hashx5f6 x3))) (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3))) (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3))) (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3))) (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3))) (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3))) (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3))) (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3))) (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3))) (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3))) (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3))) (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3))) (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3))) (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3))) (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3))) (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3))) (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3))) (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3))) (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3))) (Ne x1 x2)) (Ne x1 x3)) (Ne x2 x3)) (binrel% LE.le (Int.ofNat 0) x1)) (binrel% LT.lt x1 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x2)) (binrel% LT.lt x2 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x3)) (binrel% LT.lt x3 (Int.ofNat 4))) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (And (Ne (hashx5f1 x1) (hashx5f1 x3)) (And (Ne (hashx5f1 x2) (hashx5f1 x3)) (And (Ne (hashx5f2 x1) (hashx5f2 x2)) (And (Ne (hashx5f2 x1) (hashx5f2 x3)) (And (Ne (hashx5f2 x2) (hashx5f2 x3)) (And (Ne (hashx5f3 x1) (hashx5f3 x2)) (And (Ne (hashx5f3 x1) (hashx5f3 x3)) (And (Ne (hashx5f3 x2) (hashx5f3 x3)) (And (Ne (hashx5f4 x1) (hashx5f4 x2)) (And (Ne (hashx5f4 x1) (hashx5f4 x3)) (And (Ne (hashx5f4 x2) (hashx5f4 x3)) (And (Ne (hashx5f5 x1) (hashx5f5 x2)) (And (Ne (hashx5f5 x1) (hashx5f5 x3)) (And (Ne (hashx5f5 x2) (hashx5f5 x3)) (And (Ne (hashx5f6 x1) (hashx5f6 x2)) (And (Ne (hashx5f6 x1) (hashx5f6 x3)) (And (Ne (hashx5f6 x2) (hashx5f6 x3)) (And (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3)) (And (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3)) (And (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3)) (And (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3)) (And (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3)) (And (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3)) (And (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3)) (And (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3)) (And (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3)) (And (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3)) (And (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3)) (And (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3)) (And (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3)) (And (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3)) (And (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3)) (And (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3)) (And (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3)) (And (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3)) (And (Ne x1 x2) (And (Ne x1 x3) (And (Ne x2 x3) (And (binrel% LE.le (Int.ofNat 0) x1) (And (binrel% LT.lt x1 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x2) (And (binrel% LT.lt x2 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x3) (And (binrel% LT.lt x3 (Int.ofNat 4)) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq (Ne (hashx5f2 x1) (hashx5f2 x3)) (Not (Eq (hashx5f2 x1) (hashx5f2 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r2 : (Eq (Ne (hashx5f2 x2) (hashx5f2 x3)) (Not (Eq (hashx5f2 x2) (hashx5f2 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r3 : (Eq (Ne (hashx5f3 x1) (hashx5f3 x2)) (Not (Eq (hashx5f3 x1) (hashx5f3 x2)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r4 : (Eq (Ne (hashx5f3 x1) (hashx5f3 x3)) (Not (Eq (hashx5f3 x1) (hashx5f3 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r5 : (Eq (Ne (hashx5f3 x2) (hashx5f3 x3)) (Not (Eq (hashx5f3 x2) (hashx5f3 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r6 : (Eq (Ne (hashx5f5 x2) (hashx5f5 x3)) (Not (Eq (hashx5f5 x2) (hashx5f5 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r7 : (Eq (Ne (hashx5f6 x1) (hashx5f6 x2)) (Not (Eq (hashx5f6 x1) (hashx5f6 x2)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r8 : (Eq (Eq (hashx5f1 x1) x2) (Eq x2 (hashx5f1 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (Eq (hashx5f1 x1) x3) (Eq x3 (hashx5f1 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (Eq (hashx5f1 x2) x2) (Eq x2 (hashx5f1 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (Eq (hashx5f1 x2) x3) (Eq x3 (hashx5f1 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (Eq (hashx5f1 x3) x3) (Eq x3 (hashx5f1 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3)) (Or (Eq (hashx5f2 x1) x1) (Or (Eq (hashx5f2 x1) x2) (Eq (hashx5f2 x1) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq (Eq (hashx5f2 x1) x1) (Eq x1 (hashx5f2 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (Eq (hashx5f2 x1) x2) (Eq x2 (hashx5f2 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (Eq (hashx5f2 x1) x3) (Eq x3 (hashx5f2 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (Ne (hashx5f4 x1) (hashx5f4 x2)) (Not (Eq (hashx5f4 x1) (hashx5f4 x2)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r18 : (Eq (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3)) (Or (Eq (hashx5f2 x2) x1) (Or (Eq (hashx5f2 x2) x2) (Eq (hashx5f2 x2) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq (Ne (hashx5f4 x2) (hashx5f4 x3)) (Not (Eq (hashx5f4 x2) (hashx5f4 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r20 : (Eq (Eq (hashx5f2 x2) x2) (Eq x2 (hashx5f2 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (Ne (hashx5f5 x1) (hashx5f5 x2)) (Not (Eq (hashx5f5 x1) (hashx5f5 x2)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r22 : (Eq (Eq (hashx5f2 x2) x3) (Eq x3 (hashx5f2 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3)) (Or (Eq (hashx5f2 x3) x1) (Or (Eq (hashx5f2 x3) x2) (Eq (hashx5f2 x3) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq (Eq (hashx5f2 x3) x1) (Eq x1 (hashx5f2 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (Eq (hashx5f2 x3) x2) (Eq x2 (hashx5f2 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (Eq (hashx5f2 x3) x3) (Eq x3 (hashx5f2 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3)) (Or (Eq (hashx5f3 x1) x1) (Or (Eq (hashx5f3 x1) x2) (Eq (hashx5f3 x1) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq (Eq (hashx5f3 x1) x1) (Eq x1 (hashx5f3 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (Eq (hashx5f3 x1) x2) (Eq x2 (hashx5f3 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (Eq (hashx5f5 x3) x1) (Eq x1 (hashx5f5 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (Eq (hashx5f5 x3) x2) (Eq x2 (hashx5f5 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (Eq (hashx5f5 x3) x3) (Eq x3 (hashx5f5 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3)) (Or (Eq (hashx5f5 x1) x1) (Or (Eq (hashx5f5 x1) x2) (Eq (hashx5f5 x1) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq (Ne (hashx5f6 x1) (hashx5f6 x3)) (Not (Eq (hashx5f6 x1) (hashx5f6 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r35 : (Eq (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3)) (Or (Eq (hashx5f6 x1) x1) (Or (Eq (hashx5f6 x1) x2) (Eq (hashx5f6 x1) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq (Eq (hashx5f1 x3) x1) (Eq x1 (hashx5f1 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (Eq (hashx5f6 x3) x3) (Eq x3 (hashx5f6 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (Ne (hashx5f5 x1) (hashx5f5 x3)) (Not (Eq (hashx5f5 x1) (hashx5f5 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r39 : (Eq (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) True) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (Ne (hashx5f6 x2) (hashx5f6 x3)) (Not (Eq (hashx5f6 x2) (hashx5f6 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r41 : (Eq (Eq (hashx5f6 x1) x1) (Eq x1 (hashx5f6 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3)) (Or (Eq (hashx5f1 x1) x1) (Or (Eq (hashx5f1 x1) x2) (Eq (hashx5f1 x1) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq (Eq (hashx5f6 x1) x2) (Eq x2 (hashx5f6 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq (Eq (hashx5f1 x1) x1) (Eq x1 (hashx5f1 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (Eq (hashx5f6 x1) x3) (Eq x3 (hashx5f6 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3)) (Or (Eq (hashx5f6 x3) x1) (Or (Eq (hashx5f6 x3) x2) (Eq (hashx5f6 x3) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq (Ne (hashx5f4 x1) (hashx5f4 x3)) (Not (Eq (hashx5f4 x1) (hashx5f4 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r48 : (Eq (Eq (hashx5f2 x2) x1) (Eq x1 (hashx5f2 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq (Eq (hashx5f6 x3) x1) (Eq x1 (hashx5f6 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3)) (Or (Eq (hashx5f1 x3) x1) (Or (Eq (hashx5f1 x3) x2) (Eq (hashx5f1 x3) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq (Eq (hashx5f6 x3) x2) (Eq x2 (hashx5f6 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3)) (Or (Eq (hashx5f5 x2) x1) (Or (Eq (hashx5f5 x2) x2) (Eq (hashx5f5 x2) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq (Ne x1 x2) (Not (Eq x1 x2))) => -- THEORY_REWRITE_BUILTIN
fun lean_r55 : (Eq (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3)) (Or (Eq (hashx5f4 x3) x1) (Or (Eq (hashx5f4 x3) x2) (Eq (hashx5f4 x3) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq (Eq (hashx5f1 x2) x1) (Eq x1 (hashx5f1 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq (Eq (hashx5f6 x2) x3) (Eq x3 (hashx5f6 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3)) (Or (Eq (hashx5f5 x3) x1) (Or (Eq (hashx5f5 x3) x2) (Eq (hashx5f5 x3) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq (binrel% LE.le (Int.ofNat 0) x2) (binrel% GE.ge x2 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq (Eq (hashx5f4 x1) x2) (Eq x2 (hashx5f4 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3)) (Or (Eq (hashx5f1 x2) x1) (Or (Eq (hashx5f1 x2) x2) (Eq (hashx5f1 x2) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq (Eq (hashx5f6 x2) x2) (Eq x2 (hashx5f6 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq (binrel% LT.lt x1 (Int.ofNat 4)) (Not (binrel% GE.ge x1 (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq (Eq (hashx5f1 x3) x2) (Eq x2 (hashx5f1 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq (And (Not (Eq (hashx5f1 x1) (hashx5f1 x2))) (And (Not (Eq (hashx5f1 x1) (hashx5f1 x3))) (And (Not (Eq (hashx5f1 x2) (hashx5f1 x3))) (And (Not (Eq (hashx5f2 x1) (hashx5f2 x2))) (And (Not (Eq (hashx5f2 x1) (hashx5f2 x3))) (And (Not (Eq (hashx5f2 x2) (hashx5f2 x3))) (And (Not (Eq (hashx5f3 x1) (hashx5f3 x2))) (And (Not (Eq (hashx5f3 x1) (hashx5f3 x3))) (And (Not (Eq (hashx5f3 x2) (hashx5f3 x3))) (And (Not (Eq (hashx5f4 x1) (hashx5f4 x2))) (And (Not (Eq (hashx5f4 x1) (hashx5f4 x3))) (And (Not (Eq (hashx5f4 x2) (hashx5f4 x3))) (And (Not (Eq (hashx5f5 x1) (hashx5f5 x2))) (And (Not (Eq (hashx5f5 x1) (hashx5f5 x3))) (And (Not (Eq (hashx5f5 x2) (hashx5f5 x3))) (And (Not (Eq (hashx5f6 x1) (hashx5f6 x2))) (And (Not (Eq (hashx5f6 x1) (hashx5f6 x3))) (And (Not (Eq (hashx5f6 x2) (hashx5f6 x3))) (And (Or (Eq x1 (hashx5f1 x1)) (Or (Eq x2 (hashx5f1 x1)) (Eq x3 (hashx5f1 x1)))) (And (Or (Eq x1 (hashx5f1 x2)) (Or (Eq x2 (hashx5f1 x2)) (Eq x3 (hashx5f1 x2)))) (And (Or (Eq x1 (hashx5f1 x3)) (Or (Eq x2 (hashx5f1 x3)) (Eq x3 (hashx5f1 x3)))) (And (Or (Eq x1 (hashx5f2 x1)) (Or (Eq x2 (hashx5f2 x1)) (Eq x3 (hashx5f2 x1)))) (And (Or (Eq x1 (hashx5f2 x2)) (Or (Eq x2 (hashx5f2 x2)) (Eq x3 (hashx5f2 x2)))) (And (Or (Eq x1 (hashx5f2 x3)) (Or (Eq x2 (hashx5f2 x3)) (Eq x3 (hashx5f2 x3)))) (And (Or (Eq x1 (hashx5f3 x1)) (Or (Eq x2 (hashx5f3 x1)) (Eq x3 (hashx5f3 x1)))) (And (Or (Eq x1 (hashx5f3 x2)) (Or (Eq x2 (hashx5f3 x2)) (Eq x3 (hashx5f3 x2)))) (And (Or (Eq x1 (hashx5f3 x3)) (Or (Eq x2 (hashx5f3 x3)) (Eq x3 (hashx5f3 x3)))) (And (Or (Eq x1 (hashx5f4 x1)) (Or (Eq x2 (hashx5f4 x1)) (Eq x3 (hashx5f4 x1)))) (And (Or (Eq x1 (hashx5f4 x2)) (Or (Eq x2 (hashx5f4 x2)) (Eq x3 (hashx5f4 x2)))) (And (Or (Eq x1 (hashx5f4 x3)) (Or (Eq x2 (hashx5f4 x3)) (Eq x3 (hashx5f4 x3)))) (And (Or (Eq x1 (hashx5f5 x1)) (Or (Eq x2 (hashx5f5 x1)) (Eq x3 (hashx5f5 x1)))) (And (Or (Eq x1 (hashx5f5 x2)) (Or (Eq x2 (hashx5f5 x2)) (Eq x3 (hashx5f5 x2)))) (And (Or (Eq x1 (hashx5f5 x3)) (Or (Eq x2 (hashx5f5 x3)) (Eq x3 (hashx5f5 x3)))) (And (Or (Eq x1 (hashx5f6 x1)) (Or (Eq x2 (hashx5f6 x1)) (Eq x3 (hashx5f6 x1)))) (And (Or (Eq x1 (hashx5f6 x2)) (Or (Eq x2 (hashx5f6 x2)) (Eq x3 (hashx5f6 x2)))) (And (Or (Eq x1 (hashx5f6 x3)) (Or (Eq x2 (hashx5f6 x3)) (Eq x3 (hashx5f6 x3)))) (And (Not (Eq x1 x2)) (And (Not (Eq x1 x3)) (And (Not (Eq x2 x3)) (And (binrel% GE.ge x1 (Int.ofNat 0)) (And (Not (binrel% GE.ge x1 (Int.ofNat 4))) (And (binrel% GE.ge x2 (Int.ofNat 0)) (And (Not (binrel% GE.ge x2 (Int.ofNat 4))) (And (binrel% GE.ge x3 (Int.ofNat 0)) (And (Not (binrel% GE.ge x3 (Int.ofNat 4))) False))))))))))))))))))))))))))))))))))))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq (Eq (hashx5f4 x1) x1) (Eq x1 (hashx5f4 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3)) (Or (Eq (hashx5f6 x2) x1) (Or (Eq (hashx5f6 x2) x2) (Eq (hashx5f6 x2) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq (Eq (hashx5f4 x3) x2) (Eq x2 (hashx5f4 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq (Eq (hashx5f3 x2) x3) (Eq x3 (hashx5f3 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq (binrel% LT.lt x3 (Int.ofNat 4)) (Not (binrel% GE.ge x3 (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq (Eq (hashx5f3 x2) x2) (Eq x2 (hashx5f3 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq (binrel% LE.le (Int.ofNat 0) x3) (binrel% GE.ge x3 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq (Eq (hashx5f3 x2) x1) (Eq x1 (hashx5f3 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq (binrel% LT.lt x2 (Int.ofNat 4)) (Not (binrel% GE.ge x2 (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq (Eq (hashx5f4 x1) x3) (Eq x3 (hashx5f4 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3)) (Or (Eq (hashx5f3 x2) x1) (Or (Eq (hashx5f3 x2) x2) (Eq (hashx5f3 x2) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq (Eq (hashx5f6 x2) x1) (Eq x1 (hashx5f6 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq (Eq (hashx5f5 x2) x3) (Eq x3 (hashx5f5 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq (binrel% LE.le (Int.ofNat 0) x1) (binrel% GE.ge x1 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq (Eq (hashx5f4 x3) x3) (Eq x3 (hashx5f4 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) (Not (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r83 : (Eq (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3)) (Or (Eq (hashx5f4 x1) x1) (Or (Eq (hashx5f4 x1) x2) (Eq (hashx5f4 x1) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq (Eq (hashx5f4 x3) x1) (Eq x1 (hashx5f4 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq (Ne x2 x3) (Not (Eq x2 x3))) => -- THEORY_REWRITE_BUILTIN
fun lean_r86 : (Eq (Eq (hashx5f5 x2) x2) (Eq x2 (hashx5f5 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq (Ne x1 x3) (Not (Eq x1 x3))) => -- THEORY_REWRITE_BUILTIN
fun lean_r88 : (Eq (Eq (hashx5f5 x2) x1) (Eq x1 (hashx5f5 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq (Eq (hashx5f5 x1) x3) (Eq x3 (hashx5f5 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3)) (Or (Eq (hashx5f4 x2) x1) (Or (Eq (hashx5f4 x2) x2) (Eq (hashx5f4 x2) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq (Eq (hashx5f5 x1) x2) (Eq x2 (hashx5f5 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq (Eq (hashx5f5 x1) x1) (Eq x1 (hashx5f5 x1))) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq (Eq (hashx5f4 x2) x3) (Eq x3 (hashx5f4 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq (Ne (hashx5f1 x1) (hashx5f1 x2)) (Not (Eq (hashx5f1 x1) (hashx5f1 x2)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r95 : (Eq (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3)) (Or (Eq (hashx5f3 x3) x1) (Or (Eq (hashx5f3 x3) x2) (Eq (hashx5f3 x3) x3)))) => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq (Eq (hashx5f4 x2) x2) (Eq x2 (hashx5f4 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq (Eq (hashx5f4 x2) x1) (Eq x1 (hashx5f4 x2))) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq (Ne (hashx5f2 x1) (hashx5f2 x2)) (Not (Eq (hashx5f2 x1) (hashx5f2 x2)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r99 : (Eq (Eq (hashx5f3 x3) x3) (Eq x3 (hashx5f3 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq (Ne (hashx5f1 x2) (hashx5f1 x3)) (Not (Eq (hashx5f1 x2) (hashx5f1 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r101 : (Eq (Eq (hashx5f3 x3) x2) (Eq x2 (hashx5f3 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq (Ne (hashx5f1 x1) (hashx5f1 x3)) (Not (Eq (hashx5f1 x1) (hashx5f1 x3)))) => -- THEORY_REWRITE_BUILTIN
fun lean_r103 : (Eq (Eq (hashx5f3 x3) x1) (Eq x1 (hashx5f3 x3))) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq (Eq (hashx5f3 x1) x3) (Eq x3 (hashx5f3 x1))) => -- THEORY_REWRITE_ARITH
fun lean_a105 : (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (Ne (hashx5f1 x1) (hashx5f1 x3))) (Ne (hashx5f1 x2) (hashx5f1 x3))) (Ne (hashx5f2 x1) (hashx5f2 x2))) (Ne (hashx5f2 x1) (hashx5f2 x3))) (Ne (hashx5f2 x2) (hashx5f2 x3))) (Ne (hashx5f3 x1) (hashx5f3 x2))) (Ne (hashx5f3 x1) (hashx5f3 x3))) (Ne (hashx5f3 x2) (hashx5f3 x3))) (Ne (hashx5f4 x1) (hashx5f4 x2))) (Ne (hashx5f4 x1) (hashx5f4 x3))) (Ne (hashx5f4 x2) (hashx5f4 x3))) (Ne (hashx5f5 x1) (hashx5f5 x2))) (Ne (hashx5f5 x1) (hashx5f5 x3))) (Ne (hashx5f5 x2) (hashx5f5 x3))) (Ne (hashx5f6 x1) (hashx5f6 x2))) (Ne (hashx5f6 x1) (hashx5f6 x3))) (Ne (hashx5f6 x2) (hashx5f6 x3))) (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3))) (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3))) (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3))) (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3))) (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3))) (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3))) (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3))) (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3))) (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3))) (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3))) (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3))) (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3))) (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3))) (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3))) (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3))) (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3))) (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3))) (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3))) (Ne x1 x2)) (Ne x1 x3)) (Ne x2 x3)) (binrel% LE.le (Int.ofNat 0) x1)) (binrel% LT.lt x1 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x2)) (binrel% LT.lt x2 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x3)) (binrel% LT.lt x3 (Int.ofNat 4))) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) => by
have lean_s0 : (Eq And And) := by timed rfl
let lean_s1 := by timed congr lean_s0 lean_r94
let lean_s2 := by timed congr lean_s0 lean_r102
let lean_s3 := by timed congr lean_s0 lean_r100
let lean_s4 := by timed congr lean_s0 lean_r98
let lean_s5 := by timed congr lean_s0 lean_r1
let lean_s6 := by timed congr lean_s0 lean_r2
let lean_s7 := by timed congr lean_s0 lean_r3
let lean_s8 := by timed congr lean_s0 lean_r4
let lean_s9 := by timed congr lean_s0 lean_r5
let lean_s10 := by timed congr lean_s0 lean_r17
let lean_s11 := by timed congr lean_s0 lean_r47
let lean_s12 := by timed congr lean_s0 lean_r19
let lean_s13 := by timed congr lean_s0 lean_r21
let lean_s14 := by timed congr lean_s0 lean_r38
let lean_s15 := by timed congr lean_s0 lean_r6
let lean_s16 := by timed congr lean_s0 lean_r7
let lean_s17 := by timed congr lean_s0 lean_r34
let lean_s18 := by timed congr lean_s0 lean_r40
have lean_s19 : (Eq Or Or) := by timed rfl
let lean_s20 := by timed congr lean_s19 lean_r44
let lean_s21 := by timed congr lean_s19 lean_r8
let lean_s22 := by timed congr lean_s21 lean_r9
have lean_s23 : (Eq (Or (Eq (hashx5f1 x1) x1) (Or (Eq (hashx5f1 x1) x2) (Eq (hashx5f1 x1) x3))) (Or (Eq x1 (hashx5f1 x1)) (Or (Eq x2 (hashx5f1 x1)) (Eq x3 (hashx5f1 x1))))) := by timed congr lean_s20 lean_s22
have lean_s24 : (Eq (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3)) (Or (Eq x1 (hashx5f1 x1)) (Or (Eq x2 (hashx5f1 x1)) (Eq x3 (hashx5f1 x1))))) := by timed Eq.trans lean_r42 lean_s23
let lean_s25 := by timed congr lean_s0 lean_s24
have lean_s26 : (Eq Or Or) := by timed rfl
let lean_s27 := by timed congr lean_s26 lean_r56
let lean_s28 := by timed congr lean_s26 lean_r10
let lean_s29 := by timed congr lean_s28 lean_r11
have lean_s30 : (Eq (Or (Eq (hashx5f1 x2) x1) (Or (Eq (hashx5f1 x2) x2) (Eq (hashx5f1 x2) x3))) (Or (Eq x1 (hashx5f1 x2)) (Or (Eq x2 (hashx5f1 x2)) (Eq x3 (hashx5f1 x2))))) := by timed congr lean_s27 lean_s29
have lean_s31 : (Eq (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3)) (Or (Eq x1 (hashx5f1 x2)) (Or (Eq x2 (hashx5f1 x2)) (Eq x3 (hashx5f1 x2))))) := by timed Eq.trans lean_r62 lean_s30
let lean_s32 := by timed congr lean_s0 lean_s31
have lean_s33 : (Eq Or Or) := by timed rfl
let lean_s34 := by timed congr lean_s33 lean_r36
let lean_s35 := by timed congr lean_s33 lean_r65
let lean_s36 := by timed congr lean_s35 lean_r12
have lean_s37 : (Eq (Or (Eq (hashx5f1 x3) x1) (Or (Eq (hashx5f1 x3) x2) (Eq (hashx5f1 x3) x3))) (Or (Eq x1 (hashx5f1 x3)) (Or (Eq x2 (hashx5f1 x3)) (Eq x3 (hashx5f1 x3))))) := by timed congr lean_s34 lean_s36
have lean_s38 : (Eq (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3)) (Or (Eq x1 (hashx5f1 x3)) (Or (Eq x2 (hashx5f1 x3)) (Eq x3 (hashx5f1 x3))))) := by timed Eq.trans lean_r51 lean_s37
let lean_s39 := by timed congr lean_s0 lean_s38
have lean_s40 : (Eq Or Or) := by timed rfl
let lean_s41 := by timed congr lean_s40 lean_r14
let lean_s42 := by timed congr lean_s40 lean_r15
let lean_s43 := by timed congr lean_s42 lean_r16
have lean_s44 : (Eq (Or (Eq (hashx5f2 x1) x1) (Or (Eq (hashx5f2 x1) x2) (Eq (hashx5f2 x1) x3))) (Or (Eq x1 (hashx5f2 x1)) (Or (Eq x2 (hashx5f2 x1)) (Eq x3 (hashx5f2 x1))))) := by timed congr lean_s41 lean_s43
have lean_s45 : (Eq (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3)) (Or (Eq x1 (hashx5f2 x1)) (Or (Eq x2 (hashx5f2 x1)) (Eq x3 (hashx5f2 x1))))) := by timed Eq.trans lean_r13 lean_s44
let lean_s46 := by timed congr lean_s0 lean_s45
have lean_s47 : (Eq Or Or) := by timed rfl
let lean_s48 := by timed congr lean_s47 lean_r48
let lean_s49 := by timed congr lean_s47 lean_r20
let lean_s50 := by timed congr lean_s49 lean_r22
have lean_s51 : (Eq (Or (Eq (hashx5f2 x2) x1) (Or (Eq (hashx5f2 x2) x2) (Eq (hashx5f2 x2) x3))) (Or (Eq x1 (hashx5f2 x2)) (Or (Eq x2 (hashx5f2 x2)) (Eq x3 (hashx5f2 x2))))) := by timed congr lean_s48 lean_s50
have lean_s52 : (Eq (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3)) (Or (Eq x1 (hashx5f2 x2)) (Or (Eq x2 (hashx5f2 x2)) (Eq x3 (hashx5f2 x2))))) := by timed Eq.trans lean_r18 lean_s51
let lean_s53 := by timed congr lean_s0 lean_s52
have lean_s54 : (Eq Or Or) := by timed rfl
let lean_s55 := by timed congr lean_s54 lean_r24
let lean_s56 := by timed congr lean_s54 lean_r25
let lean_s57 := by timed congr lean_s56 lean_r26
have lean_s58 : (Eq (Or (Eq (hashx5f2 x3) x1) (Or (Eq (hashx5f2 x3) x2) (Eq (hashx5f2 x3) x3))) (Or (Eq x1 (hashx5f2 x3)) (Or (Eq x2 (hashx5f2 x3)) (Eq x3 (hashx5f2 x3))))) := by timed congr lean_s55 lean_s57
have lean_s59 : (Eq (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3)) (Or (Eq x1 (hashx5f2 x3)) (Or (Eq x2 (hashx5f2 x3)) (Eq x3 (hashx5f2 x3))))) := by timed Eq.trans lean_r23 lean_s58
let lean_s60 := by timed congr lean_s0 lean_s59
have lean_s61 : (Eq Or Or) := by timed rfl
let lean_s62 := by timed congr lean_s61 lean_r28
let lean_s63 := by timed congr lean_s61 lean_r29
let lean_s64 := by timed congr lean_s63 lean_r104
have lean_s65 : (Eq (Or (Eq (hashx5f3 x1) x1) (Or (Eq (hashx5f3 x1) x2) (Eq (hashx5f3 x1) x3))) (Or (Eq x1 (hashx5f3 x1)) (Or (Eq x2 (hashx5f3 x1)) (Eq x3 (hashx5f3 x1))))) := by timed congr lean_s62 lean_s64
have lean_s66 : (Eq (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3)) (Or (Eq x1 (hashx5f3 x1)) (Or (Eq x2 (hashx5f3 x1)) (Eq x3 (hashx5f3 x1))))) := by timed Eq.trans lean_r27 lean_s65
let lean_s67 := by timed congr lean_s0 lean_s66
have lean_s68 : (Eq Or Or) := by timed rfl
let lean_s69 := by timed congr lean_s68 lean_r74
let lean_s70 := by timed congr lean_s68 lean_r72
let lean_s71 := by timed congr lean_s70 lean_r70
have lean_s72 : (Eq (Or (Eq (hashx5f3 x2) x1) (Or (Eq (hashx5f3 x2) x2) (Eq (hashx5f3 x2) x3))) (Or (Eq x1 (hashx5f3 x2)) (Or (Eq x2 (hashx5f3 x2)) (Eq x3 (hashx5f3 x2))))) := by timed congr lean_s69 lean_s71
have lean_s73 : (Eq (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3)) (Or (Eq x1 (hashx5f3 x2)) (Or (Eq x2 (hashx5f3 x2)) (Eq x3 (hashx5f3 x2))))) := by timed Eq.trans lean_r77 lean_s72
let lean_s74 := by timed congr lean_s0 lean_s73
have lean_s75 : (Eq Or Or) := by timed rfl
let lean_s76 := by timed congr lean_s75 lean_r103
let lean_s77 := by timed congr lean_s75 lean_r101
let lean_s78 := by timed congr lean_s77 lean_r99
have lean_s79 : (Eq (Or (Eq (hashx5f3 x3) x1) (Or (Eq (hashx5f3 x3) x2) (Eq (hashx5f3 x3) x3))) (Or (Eq x1 (hashx5f3 x3)) (Or (Eq x2 (hashx5f3 x3)) (Eq x3 (hashx5f3 x3))))) := by timed congr lean_s76 lean_s78
have lean_s80 : (Eq (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3)) (Or (Eq x1 (hashx5f3 x3)) (Or (Eq x2 (hashx5f3 x3)) (Eq x3 (hashx5f3 x3))))) := by timed Eq.trans lean_r95 lean_s79
let lean_s81 := by timed congr lean_s0 lean_s80
have lean_s82 : (Eq Or Or) := by timed rfl
let lean_s83 := by timed congr lean_s82 lean_r67
let lean_s84 := by timed congr lean_s82 lean_r60
let lean_s85 := by timed congr lean_s84 lean_r76
have lean_s86 : (Eq (Or (Eq (hashx5f4 x1) x1) (Or (Eq (hashx5f4 x1) x2) (Eq (hashx5f4 x1) x3))) (Or (Eq x1 (hashx5f4 x1)) (Or (Eq x2 (hashx5f4 x1)) (Eq x3 (hashx5f4 x1))))) := by timed congr lean_s83 lean_s85
have lean_s87 : (Eq (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3)) (Or (Eq x1 (hashx5f4 x1)) (Or (Eq x2 (hashx5f4 x1)) (Eq x3 (hashx5f4 x1))))) := by timed Eq.trans lean_r83 lean_s86
let lean_s88 := by timed congr lean_s0 lean_s87
have lean_s89 : (Eq Or Or) := by timed rfl
let lean_s90 := by timed congr lean_s89 lean_r97
let lean_s91 := by timed congr lean_s89 lean_r96
let lean_s92 := by timed congr lean_s91 lean_r93
have lean_s93 : (Eq (Or (Eq (hashx5f4 x2) x1) (Or (Eq (hashx5f4 x2) x2) (Eq (hashx5f4 x2) x3))) (Or (Eq x1 (hashx5f4 x2)) (Or (Eq x2 (hashx5f4 x2)) (Eq x3 (hashx5f4 x2))))) := by timed congr lean_s90 lean_s92
have lean_s94 : (Eq (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3)) (Or (Eq x1 (hashx5f4 x2)) (Or (Eq x2 (hashx5f4 x2)) (Eq x3 (hashx5f4 x2))))) := by timed Eq.trans lean_r90 lean_s93
let lean_s95 := by timed congr lean_s0 lean_s94
have lean_s96 : (Eq Or Or) := by timed rfl
let lean_s97 := by timed congr lean_s96 lean_r84
let lean_s98 := by timed congr lean_s96 lean_r69
let lean_s99 := by timed congr lean_s98 lean_r81
have lean_s100 : (Eq (Or (Eq (hashx5f4 x3) x1) (Or (Eq (hashx5f4 x3) x2) (Eq (hashx5f4 x3) x3))) (Or (Eq x1 (hashx5f4 x3)) (Or (Eq x2 (hashx5f4 x3)) (Eq x3 (hashx5f4 x3))))) := by timed congr lean_s97 lean_s99
have lean_s101 : (Eq (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3)) (Or (Eq x1 (hashx5f4 x3)) (Or (Eq x2 (hashx5f4 x3)) (Eq x3 (hashx5f4 x3))))) := by timed Eq.trans lean_r55 lean_s100
let lean_s102 := by timed congr lean_s0 lean_s101
have lean_s103 : (Eq Or Or) := by timed rfl
let lean_s104 := by timed congr lean_s103 lean_r92
let lean_s105 := by timed congr lean_s103 lean_r91
let lean_s106 := by timed congr lean_s105 lean_r89
have lean_s107 : (Eq (Or (Eq (hashx5f5 x1) x1) (Or (Eq (hashx5f5 x1) x2) (Eq (hashx5f5 x1) x3))) (Or (Eq x1 (hashx5f5 x1)) (Or (Eq x2 (hashx5f5 x1)) (Eq x3 (hashx5f5 x1))))) := by timed congr lean_s104 lean_s106
have lean_s108 : (Eq (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3)) (Or (Eq x1 (hashx5f5 x1)) (Or (Eq x2 (hashx5f5 x1)) (Eq x3 (hashx5f5 x1))))) := by timed Eq.trans lean_r33 lean_s107
let lean_s109 := by timed congr lean_s0 lean_s108
have lean_s110 : (Eq Or Or) := by timed rfl
let lean_s111 := by timed congr lean_s110 lean_r88
let lean_s112 := by timed congr lean_s110 lean_r86
let lean_s113 := by timed congr lean_s112 lean_r79
have lean_s114 : (Eq (Or (Eq (hashx5f5 x2) x1) (Or (Eq (hashx5f5 x2) x2) (Eq (hashx5f5 x2) x3))) (Or (Eq x1 (hashx5f5 x2)) (Or (Eq x2 (hashx5f5 x2)) (Eq x3 (hashx5f5 x2))))) := by timed congr lean_s111 lean_s113
have lean_s115 : (Eq (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3)) (Or (Eq x1 (hashx5f5 x2)) (Or (Eq x2 (hashx5f5 x2)) (Eq x3 (hashx5f5 x2))))) := by timed Eq.trans lean_r53 lean_s114
let lean_s116 := by timed congr lean_s0 lean_s115
have lean_s117 : (Eq Or Or) := by timed rfl
let lean_s118 := by timed congr lean_s117 lean_r30
let lean_s119 := by timed congr lean_s117 lean_r31
let lean_s120 := by timed congr lean_s119 lean_r32
have lean_s121 : (Eq (Or (Eq (hashx5f5 x3) x1) (Or (Eq (hashx5f5 x3) x2) (Eq (hashx5f5 x3) x3))) (Or (Eq x1 (hashx5f5 x3)) (Or (Eq x2 (hashx5f5 x3)) (Eq x3 (hashx5f5 x3))))) := by timed congr lean_s118 lean_s120
have lean_s122 : (Eq (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3)) (Or (Eq x1 (hashx5f5 x3)) (Or (Eq x2 (hashx5f5 x3)) (Eq x3 (hashx5f5 x3))))) := by timed Eq.trans lean_r58 lean_s121
let lean_s123 := by timed congr lean_s0 lean_s122
have lean_s124 : (Eq Or Or) := by timed rfl
let lean_s125 := by timed congr lean_s124 lean_r41
let lean_s126 := by timed congr lean_s124 lean_r43
let lean_s127 := by timed congr lean_s126 lean_r45
have lean_s128 : (Eq (Or (Eq (hashx5f6 x1) x1) (Or (Eq (hashx5f6 x1) x2) (Eq (hashx5f6 x1) x3))) (Or (Eq x1 (hashx5f6 x1)) (Or (Eq x2 (hashx5f6 x1)) (Eq x3 (hashx5f6 x1))))) := by timed congr lean_s125 lean_s127
have lean_s129 : (Eq (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3)) (Or (Eq x1 (hashx5f6 x1)) (Or (Eq x2 (hashx5f6 x1)) (Eq x3 (hashx5f6 x1))))) := by timed Eq.trans lean_r35 lean_s128
let lean_s130 := by timed congr lean_s0 lean_s129
have lean_s131 : (Eq Or Or) := by timed rfl
let lean_s132 := by timed congr lean_s131 lean_r78
let lean_s133 := by timed congr lean_s131 lean_r63
let lean_s134 := by timed congr lean_s133 lean_r57
have lean_s135 : (Eq (Or (Eq (hashx5f6 x2) x1) (Or (Eq (hashx5f6 x2) x2) (Eq (hashx5f6 x2) x3))) (Or (Eq x1 (hashx5f6 x2)) (Or (Eq x2 (hashx5f6 x2)) (Eq x3 (hashx5f6 x2))))) := by timed congr lean_s132 lean_s134
have lean_s136 : (Eq (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3)) (Or (Eq x1 (hashx5f6 x2)) (Or (Eq x2 (hashx5f6 x2)) (Eq x3 (hashx5f6 x2))))) := by timed Eq.trans lean_r68 lean_s135
let lean_s137 := by timed congr lean_s0 lean_s136
have lean_s138 : (Eq Or Or) := by timed rfl
let lean_s139 := by timed congr lean_s138 lean_r50
let lean_s140 := by timed congr lean_s138 lean_r52
let lean_s141 := by timed congr lean_s140 lean_r37
have lean_s142 : (Eq (Or (Eq (hashx5f6 x3) x1) (Or (Eq (hashx5f6 x3) x2) (Eq (hashx5f6 x3) x3))) (Or (Eq x1 (hashx5f6 x3)) (Or (Eq x2 (hashx5f6 x3)) (Eq x3 (hashx5f6 x3))))) := by timed congr lean_s139 lean_s141
have lean_s143 : (Eq (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3)) (Or (Eq x1 (hashx5f6 x3)) (Or (Eq x2 (hashx5f6 x3)) (Eq x3 (hashx5f6 x3))))) := by timed Eq.trans lean_r46 lean_s142
let lean_s144 := by timed congr lean_s0 lean_s143
let lean_s145 := by timed congr lean_s0 lean_r54
let lean_s146 := by timed congr lean_s0 lean_r87
let lean_s147 := by timed congr lean_s0 lean_r85
let lean_s148 := by timed congr lean_s0 lean_r80
let lean_s149 := by timed congr lean_s0 lean_r64
let lean_s150 := by timed congr lean_s0 lean_r59
let lean_s151 := by timed congr lean_s0 lean_r75
let lean_s152 := by timed congr lean_s0 lean_r73
let lean_s153 := by timed congr lean_s0 lean_r71
have lean_s154 : (Eq (Eq (hashx5f1 x1) (hashx5f2 x1)) (Eq (hashx5f1 x1) (hashx5f2 x1))) := by timed rfl
have lean_s155 : (Eq (hashx5f2 x1) (hashx5f2 x1)) := by timed rfl
have lean_s156 : (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) := by timed congrIte lean_s154 lean_s155 lean_r49
let lean_s157 := by timed flipCongrArg lean_s156 [Eq]
have lean_s158 : (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) := by timed rfl
have lean_s159 : (Eq (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) := by timed congr lean_s157 lean_s158
have lean_s160 : (Eq (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) True) := by timed Eq.trans lean_s159 lean_r39
have lean_s161 : (Eq (Not (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) (Not True)) := by timed flipCongrArg lean_s160 [Not]
have lean_s162 : (Eq (Not (Eq (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) False) := by timed Eq.trans lean_s161 lean_r61
have lean_s163 : (Eq (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int)) False) := by timed Eq.trans lean_r82 lean_s162
let lean_s164 := by timed congr lean_s153 lean_s163
let lean_s165 := by timed congr lean_s152 lean_s164
let lean_s166 := by timed congr lean_s151 lean_s165
let lean_s167 := by timed congr lean_s150 lean_s166
let lean_s168 := by timed congr lean_s149 lean_s167
let lean_s169 := by timed congr lean_s148 lean_s168
let lean_s170 := by timed congr lean_s147 lean_s169
let lean_s171 := by timed congr lean_s146 lean_s170
let lean_s172 := by timed congr lean_s145 lean_s171
let lean_s173 := by timed congr lean_s144 lean_s172
let lean_s174 := by timed congr lean_s137 lean_s173
let lean_s175 := by timed congr lean_s130 lean_s174
let lean_s176 := by timed congr lean_s123 lean_s175
let lean_s177 := by timed congr lean_s116 lean_s176
let lean_s178 := by timed congr lean_s109 lean_s177
let lean_s179 := by timed congr lean_s102 lean_s178
let lean_s180 := by timed congr lean_s95 lean_s179
let lean_s181 := by timed congr lean_s88 lean_s180
let lean_s182 := by timed congr lean_s81 lean_s181
let lean_s183 := by timed congr lean_s74 lean_s182
let lean_s184 := by timed congr lean_s67 lean_s183
let lean_s185 := by timed congr lean_s60 lean_s184
let lean_s186 := by timed congr lean_s53 lean_s185
let lean_s187 := by timed congr lean_s46 lean_s186
let lean_s188 := by timed congr lean_s39 lean_s187
let lean_s189 := by timed congr lean_s32 lean_s188
let lean_s190 := by timed congr lean_s25 lean_s189
let lean_s191 := by timed congr lean_s18 lean_s190
let lean_s192 := by timed congr lean_s17 lean_s191
let lean_s193 := by timed congr lean_s16 lean_s192
let lean_s194 := by timed congr lean_s15 lean_s193
let lean_s195 := by timed congr lean_s14 lean_s194
let lean_s196 := by timed congr lean_s13 lean_s195
let lean_s197 := by timed congr lean_s12 lean_s196
let lean_s198 := by timed congr lean_s11 lean_s197
let lean_s199 := by timed congr lean_s10 lean_s198
let lean_s200 := by timed congr lean_s9 lean_s199
let lean_s201 := by timed congr lean_s8 lean_s200
let lean_s202 := by timed congr lean_s7 lean_s201
let lean_s203 := by timed congr lean_s6 lean_s202
let lean_s204 := by timed congr lean_s5 lean_s203
let lean_s205 := by timed congr lean_s4 lean_s204
let lean_s206 := by timed congr lean_s3 lean_s205
let lean_s207 := by timed congr lean_s2 lean_s206
have lean_s208 : (Eq (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (And (Ne (hashx5f1 x1) (hashx5f1 x3)) (And (Ne (hashx5f1 x2) (hashx5f1 x3)) (And (Ne (hashx5f2 x1) (hashx5f2 x2)) (And (Ne (hashx5f2 x1) (hashx5f2 x3)) (And (Ne (hashx5f2 x2) (hashx5f2 x3)) (And (Ne (hashx5f3 x1) (hashx5f3 x2)) (And (Ne (hashx5f3 x1) (hashx5f3 x3)) (And (Ne (hashx5f3 x2) (hashx5f3 x3)) (And (Ne (hashx5f4 x1) (hashx5f4 x2)) (And (Ne (hashx5f4 x1) (hashx5f4 x3)) (And (Ne (hashx5f4 x2) (hashx5f4 x3)) (And (Ne (hashx5f5 x1) (hashx5f5 x2)) (And (Ne (hashx5f5 x1) (hashx5f5 x3)) (And (Ne (hashx5f5 x2) (hashx5f5 x3)) (And (Ne (hashx5f6 x1) (hashx5f6 x2)) (And (Ne (hashx5f6 x1) (hashx5f6 x3)) (And (Ne (hashx5f6 x2) (hashx5f6 x3)) (And (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3)) (And (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3)) (And (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3)) (And (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3)) (And (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3)) (And (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3)) (And (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3)) (And (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3)) (And (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3)) (And (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3)) (And (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3)) (And (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3)) (And (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3)) (And (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3)) (And (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3)) (And (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3)) (And (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3)) (And (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3)) (And (Ne x1 x2) (And (Ne x1 x3) (And (Ne x2 x3) (And (binrel% LE.le (Int.ofNat 0) x1) (And (binrel% LT.lt x1 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x2) (And (binrel% LT.lt x2 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x3) (And (binrel% LT.lt x3 (Int.ofNat 4)) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (hashx5f1 x1) (hashx5f1 x2))) (And (Not (Eq (hashx5f1 x1) (hashx5f1 x3))) (And (Not (Eq (hashx5f1 x2) (hashx5f1 x3))) (And (Not (Eq (hashx5f2 x1) (hashx5f2 x2))) (And (Not (Eq (hashx5f2 x1) (hashx5f2 x3))) (And (Not (Eq (hashx5f2 x2) (hashx5f2 x3))) (And (Not (Eq (hashx5f3 x1) (hashx5f3 x2))) (And (Not (Eq (hashx5f3 x1) (hashx5f3 x3))) (And (Not (Eq (hashx5f3 x2) (hashx5f3 x3))) (And (Not (Eq (hashx5f4 x1) (hashx5f4 x2))) (And (Not (Eq (hashx5f4 x1) (hashx5f4 x3))) (And (Not (Eq (hashx5f4 x2) (hashx5f4 x3))) (And (Not (Eq (hashx5f5 x1) (hashx5f5 x2))) (And (Not (Eq (hashx5f5 x1) (hashx5f5 x3))) (And (Not (Eq (hashx5f5 x2) (hashx5f5 x3))) (And (Not (Eq (hashx5f6 x1) (hashx5f6 x2))) (And (Not (Eq (hashx5f6 x1) (hashx5f6 x3))) (And (Not (Eq (hashx5f6 x2) (hashx5f6 x3))) (And (Or (Eq x1 (hashx5f1 x1)) (Or (Eq x2 (hashx5f1 x1)) (Eq x3 (hashx5f1 x1)))) (And (Or (Eq x1 (hashx5f1 x2)) (Or (Eq x2 (hashx5f1 x2)) (Eq x3 (hashx5f1 x2)))) (And (Or (Eq x1 (hashx5f1 x3)) (Or (Eq x2 (hashx5f1 x3)) (Eq x3 (hashx5f1 x3)))) (And (Or (Eq x1 (hashx5f2 x1)) (Or (Eq x2 (hashx5f2 x1)) (Eq x3 (hashx5f2 x1)))) (And (Or (Eq x1 (hashx5f2 x2)) (Or (Eq x2 (hashx5f2 x2)) (Eq x3 (hashx5f2 x2)))) (And (Or (Eq x1 (hashx5f2 x3)) (Or (Eq x2 (hashx5f2 x3)) (Eq x3 (hashx5f2 x3)))) (And (Or (Eq x1 (hashx5f3 x1)) (Or (Eq x2 (hashx5f3 x1)) (Eq x3 (hashx5f3 x1)))) (And (Or (Eq x1 (hashx5f3 x2)) (Or (Eq x2 (hashx5f3 x2)) (Eq x3 (hashx5f3 x2)))) (And (Or (Eq x1 (hashx5f3 x3)) (Or (Eq x2 (hashx5f3 x3)) (Eq x3 (hashx5f3 x3)))) (And (Or (Eq x1 (hashx5f4 x1)) (Or (Eq x2 (hashx5f4 x1)) (Eq x3 (hashx5f4 x1)))) (And (Or (Eq x1 (hashx5f4 x2)) (Or (Eq x2 (hashx5f4 x2)) (Eq x3 (hashx5f4 x2)))) (And (Or (Eq x1 (hashx5f4 x3)) (Or (Eq x2 (hashx5f4 x3)) (Eq x3 (hashx5f4 x3)))) (And (Or (Eq x1 (hashx5f5 x1)) (Or (Eq x2 (hashx5f5 x1)) (Eq x3 (hashx5f5 x1)))) (And (Or (Eq x1 (hashx5f5 x2)) (Or (Eq x2 (hashx5f5 x2)) (Eq x3 (hashx5f5 x2)))) (And (Or (Eq x1 (hashx5f5 x3)) (Or (Eq x2 (hashx5f5 x3)) (Eq x3 (hashx5f5 x3)))) (And (Or (Eq x1 (hashx5f6 x1)) (Or (Eq x2 (hashx5f6 x1)) (Eq x3 (hashx5f6 x1)))) (And (Or (Eq x1 (hashx5f6 x2)) (Or (Eq x2 (hashx5f6 x2)) (Eq x3 (hashx5f6 x2)))) (And (Or (Eq x1 (hashx5f6 x3)) (Or (Eq x2 (hashx5f6 x3)) (Eq x3 (hashx5f6 x3)))) (And (Not (Eq x1 x2)) (And (Not (Eq x1 x3)) (And (Not (Eq x2 x3)) (And (binrel% GE.ge x1 (Int.ofNat 0)) (And (Not (binrel% GE.ge x1 (Int.ofNat 4))) (And (binrel% GE.ge x2 (Int.ofNat 0)) (And (Not (binrel% GE.ge x2 (Int.ofNat 4))) (And (binrel% GE.ge x3 (Int.ofNat 0)) (And (Not (binrel% GE.ge x3 (Int.ofNat 4))) False)))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s1 lean_s207
have lean_s209 : (Eq (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (And (Ne (hashx5f1 x1) (hashx5f1 x3)) (And (Ne (hashx5f1 x2) (hashx5f1 x3)) (And (Ne (hashx5f2 x1) (hashx5f2 x2)) (And (Ne (hashx5f2 x1) (hashx5f2 x3)) (And (Ne (hashx5f2 x2) (hashx5f2 x3)) (And (Ne (hashx5f3 x1) (hashx5f3 x2)) (And (Ne (hashx5f3 x1) (hashx5f3 x3)) (And (Ne (hashx5f3 x2) (hashx5f3 x3)) (And (Ne (hashx5f4 x1) (hashx5f4 x2)) (And (Ne (hashx5f4 x1) (hashx5f4 x3)) (And (Ne (hashx5f4 x2) (hashx5f4 x3)) (And (Ne (hashx5f5 x1) (hashx5f5 x2)) (And (Ne (hashx5f5 x1) (hashx5f5 x3)) (And (Ne (hashx5f5 x2) (hashx5f5 x3)) (And (Ne (hashx5f6 x1) (hashx5f6 x2)) (And (Ne (hashx5f6 x1) (hashx5f6 x3)) (And (Ne (hashx5f6 x2) (hashx5f6 x3)) (And (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3)) (And (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3)) (And (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3)) (And (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3)) (And (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3)) (And (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3)) (And (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3)) (And (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3)) (And (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3)) (And (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3)) (And (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3)) (And (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3)) (And (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3)) (And (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3)) (And (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3)) (And (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3)) (And (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3)) (And (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3)) (And (Ne x1 x2) (And (Ne x1 x3) (And (Ne x2 x3) (And (binrel% LE.le (Int.ofNat 0) x1) (And (binrel% LT.lt x1 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x2) (And (binrel% LT.lt x2 (Int.ofNat 4)) (And (binrel% LE.le (Int.ofNat 0) x3) (And (binrel% LT.lt x3 (Int.ofNat 4)) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))))))))))))))))))))))))))))))))))))))))))))))) False) := by timed Eq.trans lean_s208 lean_r66
have lean_s210 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Ne (hashx5f1 x1) (hashx5f1 x2)) (Ne (hashx5f1 x1) (hashx5f1 x3))) (Ne (hashx5f1 x2) (hashx5f1 x3))) (Ne (hashx5f2 x1) (hashx5f2 x2))) (Ne (hashx5f2 x1) (hashx5f2 x3))) (Ne (hashx5f2 x2) (hashx5f2 x3))) (Ne (hashx5f3 x1) (hashx5f3 x2))) (Ne (hashx5f3 x1) (hashx5f3 x3))) (Ne (hashx5f3 x2) (hashx5f3 x3))) (Ne (hashx5f4 x1) (hashx5f4 x2))) (Ne (hashx5f4 x1) (hashx5f4 x3))) (Ne (hashx5f4 x2) (hashx5f4 x3))) (Ne (hashx5f5 x1) (hashx5f5 x2))) (Ne (hashx5f5 x1) (hashx5f5 x3))) (Ne (hashx5f5 x2) (hashx5f5 x3))) (Ne (hashx5f6 x1) (hashx5f6 x2))) (Ne (hashx5f6 x1) (hashx5f6 x3))) (Ne (hashx5f6 x2) (hashx5f6 x3))) (Or (Or (Eq (hashx5f1 x1) x1) (Eq (hashx5f1 x1) x2)) (Eq (hashx5f1 x1) x3))) (Or (Or (Eq (hashx5f1 x2) x1) (Eq (hashx5f1 x2) x2)) (Eq (hashx5f1 x2) x3))) (Or (Or (Eq (hashx5f1 x3) x1) (Eq (hashx5f1 x3) x2)) (Eq (hashx5f1 x3) x3))) (Or (Or (Eq (hashx5f2 x1) x1) (Eq (hashx5f2 x1) x2)) (Eq (hashx5f2 x1) x3))) (Or (Or (Eq (hashx5f2 x2) x1) (Eq (hashx5f2 x2) x2)) (Eq (hashx5f2 x2) x3))) (Or (Or (Eq (hashx5f2 x3) x1) (Eq (hashx5f2 x3) x2)) (Eq (hashx5f2 x3) x3))) (Or (Or (Eq (hashx5f3 x1) x1) (Eq (hashx5f3 x1) x2)) (Eq (hashx5f3 x1) x3))) (Or (Or (Eq (hashx5f3 x2) x1) (Eq (hashx5f3 x2) x2)) (Eq (hashx5f3 x2) x3))) (Or (Or (Eq (hashx5f3 x3) x1) (Eq (hashx5f3 x3) x2)) (Eq (hashx5f3 x3) x3))) (Or (Or (Eq (hashx5f4 x1) x1) (Eq (hashx5f4 x1) x2)) (Eq (hashx5f4 x1) x3))) (Or (Or (Eq (hashx5f4 x2) x1) (Eq (hashx5f4 x2) x2)) (Eq (hashx5f4 x2) x3))) (Or (Or (Eq (hashx5f4 x3) x1) (Eq (hashx5f4 x3) x2)) (Eq (hashx5f4 x3) x3))) (Or (Or (Eq (hashx5f5 x1) x1) (Eq (hashx5f5 x1) x2)) (Eq (hashx5f5 x1) x3))) (Or (Or (Eq (hashx5f5 x2) x1) (Eq (hashx5f5 x2) x2)) (Eq (hashx5f5 x2) x3))) (Or (Or (Eq (hashx5f5 x3) x1) (Eq (hashx5f5 x3) x2)) (Eq (hashx5f5 x3) x3))) (Or (Or (Eq (hashx5f6 x1) x1) (Eq (hashx5f6 x1) x2)) (Eq (hashx5f6 x1) x3))) (Or (Or (Eq (hashx5f6 x2) x1) (Eq (hashx5f6 x2) x2)) (Eq (hashx5f6 x2) x3))) (Or (Or (Eq (hashx5f6 x3) x1) (Eq (hashx5f6 x3) x2)) (Eq (hashx5f6 x3) x3))) (Ne x1 x2)) (Ne x1 x3)) (Ne x2 x3)) (binrel% LE.le (Int.ofNat 0) x1)) (binrel% LT.lt x1 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x2)) (binrel% LT.lt x2 (Int.ofNat 4))) (binrel% LE.le (Int.ofNat 0) x3)) (binrel% LT.lt x3 (Int.ofNat 4))) (Ne (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HAdd.hAdd (hashx5f1 x1) (hashx5f1 x1)) Int) (smtIte (Eq (hashx5f1 x1) (hashx5f2 x1)) (hashx5f2 x1) (binrel% HMul.hMul (Int.ofNat 2) (hashx5f1 x1)) Int))) False) := by timed Eq.trans lean_r0 lean_s209
exact (show False from by timed eqResolve lean_a105 lean_s210)


