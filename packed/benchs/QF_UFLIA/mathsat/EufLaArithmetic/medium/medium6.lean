-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {Succ : (Int -> Int)}
variable {z : Int}
variable {Pred : (Int -> Int)}
variable {Succ : (Int -> Int)}
variable {Sum : (Int -> Int -> Int)}
variable {Pred : (Int -> Int)}
variable {x : Int}
variable {x : Int}
variable {Sum : (Int -> Int -> Int)}
variable {y : Int}
variable {y : Int}
variable {z : Int}

theorem th0 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) True) â†’ (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6)))) (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (Not (Eq z (Int.ofNat 6)))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6))) (And (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) â†’ (Eq (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6))))))))) â†’ (Eq (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))) â†’ (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) y) (Int.ofNat 6)) (binrel% GE.ge y (Int.ofNat 5))) â†’ (Eq (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) y)) â†’ (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) â†’ (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) True) â†’ (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) â†’ (Eq (Eq (Int.ofNat 1) (Int.ofNat 1)) True) â†’ (Eq (Eq (Int.ofNat 2) (Int.ofNat 2)) True) â†’ (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) â†’ (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)))) â†’ (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) (Neg.neg (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) â†’ (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) â†’ (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) â†’ (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6))) (binrel% HAdd.hAdd y x) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) â†’ (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) â†’ (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)))) â†’ (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) â†’ (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))) â†’ (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)) (Neg.neg (Int.ofNat 6))) â†’ (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (Neg.neg (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x))) â†’ (Eq (Eq (Int.ofNat 6) (Int.ofNat 6)) True) â†’ (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))))) â†’ (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y)) â†’ (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And True (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) â†’ (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) â†’ (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))))) â†’ (Eq (binrel% HAdd.hAdd x y) (binrel% HAdd.hAdd y x)) â†’ (Eq (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 6)))) â†’ (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) True) â†’ (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))))) â†’ (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) â†’ (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) â†’ (Eq (smtIte (Not (binrel% GE.ge y (Int.ofNat 5))) (binrel% HAdd.hAdd (Int.ofNat 1) y) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) â†’ (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6)))) (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (Not (Eq z (Int.ofNat 6)))) â†’ False :=
fun lean_r0 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) True) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6)))) (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (Not (Eq z (Int.ofNat 6)))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6))) (And (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) y) (Int.ofNat 6)) (binrel% GE.ge y (Int.ofNat 5))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) y)) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) True) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (Eq (Int.ofNat 1) (Int.ofNat 1)) True) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (Eq (Int.ofNat 2) (Int.ofNat 2)) True) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) (Neg.neg (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6))) (binrel% HAdd.hAdd y x) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)) (Neg.neg (Int.ofNat 6))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (Neg.neg (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x))) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (Eq (Int.ofNat 6) (Int.ofNat 6)) True) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y)) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And True (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r27 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% HAdd.hAdd x y) (binrel% HAdd.hAdd y x)) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) True) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (smtIte (Not (binrel% GE.ge y (Int.ofNat 5))) (binrel% HAdd.hAdd (Int.ofNat 1) y) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) => -- THEORY_REWRITE_BOOL
fun lean_a36 : (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6)))) (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (Not (Eq z (Int.ofNat 6)))) => by
have lean_s0 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 5))]
have lean_s1 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a37 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
    (scope (fun lean_a38 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
      (scope (fun lean_a39 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a40 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
          (scope (fun lean_a41 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) =>
            (scope (fun lean_a42 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
              (scope (fun lean_a43 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
                (scope (fun lean_a44 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a45 : (Eq y (Int.ofNat 5)) =>
                    let lean_s1 := by timed And.intro lean_a38 lean_a40
                    let lean_s2 := by timed And.intro lean_a43 lean_s1
                    let lean_s3 := by timed And.intro lean_a45 lean_s2
                    let lean_s4 := by timed And.intro lean_a37 lean_s3
                    let lean_s5 := by timed And.intro lean_a44 lean_s4
                    let lean_s6 := by timed And.intro lean_a41 lean_s5
                    let lean_s7 := by timed And.intro lean_a39 lean_s6
                    have lean_s8 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a42 lean_s7
                    have lean_s9 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a46 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
                        (scope (fun lean_a47 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                          (scope (fun lean_a48 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) =>
                            (scope (fun lean_a49 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a50 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
                                (scope (fun lean_a51 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a52 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a53 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a54 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
                                        have lean_s9 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a49
                                        have lean_s10 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s9
                                        let lean_s11 := by timed flipCongrArg lean_s10 [Sum]
                                        have lean_s12 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a51
                                        have lean_s13 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s12
                                        have lean_s14 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s13 [Succ]
                                        have lean_s15 : (Eq (Int.ofNat 6) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a50
                                        have lean_s16 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s15
                                        have lean_s17 : (Eq (Succ y) (Int.ofNat 6)) := by timed Eq.trans lean_s14 lean_s16
                                        have lean_s18 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 6))) := by timed congr lean_s11 lean_s17
                                        have lean_s19 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 0) (Int.ofNat 6))) := by timed Eq.symm lean_a48
                                        have lean_s20 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) := by timed Eq.symm lean_s19
                                        have lean_s21 : (Eq (Sum x (Succ y)) (Int.ofNat 6)) := by timed Eq.trans lean_s18 lean_s20
                                        have lean_s22 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s21 [Pred]
                                        have lean_s23 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a47
                                        have lean_s24 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s23
                                        have lean_s25 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s22 lean_s24
                                        let lean_s26 := by timed flipCongrArg lean_s25 [Sum]
                                        let lean_s27 := by timed flipCongrArg lean_s13 [Sum]
                                        let lean_s28 := by timed flipCongrArg lean_s10 [Sum]
                                        have lean_s29 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s28 lean_s13
                                        have lean_s30 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed Eq.symm lean_a54
                                        have lean_s31 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by timed Eq.symm lean_s30
                                        have lean_s32 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s29 lean_s31
                                        have lean_s33 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s32 [Pred]
                                        have lean_s34 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a53
                                        have lean_s35 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s34
                                        have lean_s36 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s33 lean_s35
                                        have lean_s37 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s27 lean_s36
                                        have lean_s38 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a52
                                        have lean_s39 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s38
                                        have lean_s40 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s37 lean_s39
                                        have lean_s41 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s26 lean_s40
                                        have lean_s42 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a46
                                        have lean_s43 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s42
                                        have lean_s44 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s41 lean_s43
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s44
                      ))))))))))))))))))
                    have lean_s10 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s9, 9
                    have lean_s11 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s8 lean_s10
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s11
  ))))))))))))))))))
have lean_s2 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1, 9
have lean_s3 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s2
have lean_s4 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s0, lean_s3, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s5 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s4, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s6 : (Eq And And) := by timed rfl
have lean_s7 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s8 := by timed congr lean_s6 lean_s7
have lean_s9 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s10 := by timed congr lean_s6 lean_s9
have lean_s11 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s12 := by timed congr lean_s6 lean_s11
have lean_s13 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s14 := by timed congr lean_s6 lean_s13
have lean_s15 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s16 := by timed congr lean_s6 lean_s15
have lean_s17 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s18 := by timed congr lean_s6 lean_s17
have lean_s19 : (Eq (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) := by timed rfl
let lean_s20 := by timed congr lean_s6 lean_s19
have lean_s21 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s22 := by timed congr lean_s6 lean_s21
have lean_s23 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s24 := by timed congr lean_s6 lean_s23
have lean_s25 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s26 := by timed congr lean_s6 lean_s25
have lean_s27 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s28 := by timed congr lean_s6 lean_s27
have lean_s29 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s30 := by timed congr lean_s6 lean_s29
have lean_s31 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s32 := by timed congr lean_s6 lean_s31
have lean_s33 : (Eq (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) := by timed rfl
let lean_s34 := by timed congr lean_s6 lean_s33
have lean_s35 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
let lean_s36 := by timed congr lean_s6 lean_s35
have lean_s37 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) := by timed rfl
let lean_s38 := by timed congr lean_s6 lean_s37
have lean_s39 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) := by timed rfl
let lean_s40 := by timed congr lean_s6 lean_s39
have lean_s41 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s42 := by timed congr lean_s6 lean_s41
have lean_s43 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s44 := by timed congr lean_s6 lean_s43
have lean_s45 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s46 := by timed congr lean_s6 lean_s45
have lean_s47 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) := by timed rfl
let lean_s48 := by timed congr lean_s6 lean_s47
have lean_s49 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s50 := by timed congr lean_s6 lean_s49
have lean_s51 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s52 := by timed congr lean_s6 lean_s51
have lean_s53 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s54 := by timed congr lean_s6 lean_s53
have lean_s55 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s56 := by timed congr lean_s6 lean_s55
have lean_s57 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s58 := by timed congr lean_s6 lean_s57
have lean_s59 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s60 := by timed congr lean_s6 lean_s59
have lean_s61 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) := by timed rfl
let lean_s62 := by timed congr lean_s6 lean_s61
have lean_s63 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) := by timed rfl
let lean_s64 := by timed congr lean_s6 lean_s63
have lean_s65 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s66 := by timed congr lean_s6 lean_s65
have lean_s67 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s68 := by timed congr lean_s6 lean_s67
have lean_s69 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s70 := by timed congr lean_s6 lean_s69
have lean_s71 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) := by timed rfl
let lean_s72 := by timed congr lean_s6 lean_s71
have lean_s73 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s74 := by timed congr lean_s6 lean_s73
have lean_s75 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) := by timed rfl
let lean_s76 := by timed congr lean_s6 lean_s75
have lean_s77 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s78 := by timed congr lean_s6 lean_s77
have lean_s79 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s80 := by timed congr lean_s6 lean_s79
have lean_s81 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s82 := by timed congr lean_s6 lean_s81
have lean_s83 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) := by timed rfl
let lean_s84 := by timed congr lean_s6 lean_s83
have lean_s85 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) := by timed rfl
let lean_s86 := by timed congr lean_s6 lean_s85
have lean_s87 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) := by timed rfl
let lean_s88 := by timed congr lean_s6 lean_s87
have lean_s89 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) := by timed rfl
let lean_s90 := by timed congr lean_s6 lean_s89
have lean_s91 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s92 := by timed congr lean_s6 lean_s91
have lean_s93 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s94 := by timed congr lean_s6 lean_s93
have lean_s95 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) := by timed rfl
let lean_s96 := by timed congr lean_s6 lean_s95
have lean_s97 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) := by timed rfl
let lean_s98 := by timed congr lean_s6 lean_s97
have lean_s99 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) := by timed rfl
let lean_s100 := by timed congr lean_s6 lean_s99
have lean_s101 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) := by timed rfl
let lean_s102 := by timed congr lean_s6 lean_s101
have lean_s103 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) := by timed rfl
let lean_s104 := by timed congr lean_s6 lean_s103
have lean_s105 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s106 := by timed congr lean_s6 lean_s105
have lean_s107 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) := by timed rfl
let lean_s108 := by timed congr lean_s6 lean_s107
have lean_s109 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) := by timed rfl
let lean_s110 := by timed congr lean_s6 lean_s109
have lean_s111 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) := by timed rfl
let lean_s112 := by timed congr lean_s6 lean_s111
have lean_s113 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) := by timed rfl
let lean_s114 := by timed congr lean_s6 lean_s113
have lean_s115 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s116 := by timed congr lean_s6 lean_s115
have lean_s117 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) := by timed rfl
let lean_s118 := by timed congr lean_s6 lean_s117
have lean_s119 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s120 := by timed congr lean_s6 lean_s119
have lean_s121 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s122 := by timed congr lean_s6 lean_s121
have lean_s123 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s124 := by timed congr lean_s6 lean_s123
have lean_s125 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s126 := by timed congr lean_s6 lean_s125
have lean_s127 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s128 := by timed congr lean_s6 lean_s127
have lean_s129 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s130 := by timed congr lean_s6 lean_s129
have lean_s131 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) := by timed rfl
let lean_s132 := by timed congr lean_s6 lean_s131
let lean_s133 := by timed congr lean_s6 lean_r2
let lean_s134 := by timed congr lean_s6 lean_r3
have lean_s135 : (Eq (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) := by timed rfl
let lean_s136 := by timed congr lean_s6 lean_s135
have lean_s137 : (Eq z z) := by timed rfl
let lean_s138 := by timed flipCongrArg lean_s137 [Eq]
have lean_s139 : (Eq x x) := by timed rfl
let lean_s140 := by timed flipCongrArg lean_s139 [Sum]
let lean_s141 := by timed flipCongrArg lean_r5 [GE.ge]
have lean_s142 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
have lean_s143 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) y) (Int.ofNat 6))) := by timed congr lean_s141 lean_s142
have lean_s144 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% GE.ge y (Int.ofNat 5))) := by timed Eq.trans lean_s143 lean_r4
have lean_s145 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6))) (Not (binrel% GE.ge y (Int.ofNat 5)))) := by timed flipCongrArg lean_s144 [Not]
have lean_s146 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (Not (binrel% GE.ge y (Int.ofNat 5)))) := by timed Eq.trans lean_r12 lean_s145
have lean_s147 : (Eq y y) := by timed rfl
have lean_s148 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
let lean_s149 := by timed congrHAdd lean_s148 lean_r21
have lean_s150 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 6))))) := by timed congrHAdd lean_s147 lean_s149
have lean_s151 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y)) := by timed Eq.trans lean_s150 lean_r25
have lean_s152 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y)) := by timed Eq.trans lean_r28 lean_s151
have lean_s153 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y)) := by timed Eq.trans lean_r8 lean_s152
have lean_s154 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int) (smtIte (Not (binrel% GE.ge y (Int.ofNat 5))) (binrel% HAdd.hAdd (Int.ofNat 1) y) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) Int)) := by timed congrIte lean_s146 lean_r5 lean_s153
have lean_s155 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed Eq.trans lean_s154 lean_r35
have lean_s156 : (Eq (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int)) (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) := by timed congr lean_s140 lean_s155
have lean_s157 : (Eq (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)))) := by timed flipCongrArg lean_s156 [Pred]
let lean_s158 := by timed flipCongrArg lean_s157 [Sum]
let lean_s159 := by timed flipCongrArg lean_s147 [HAdd.hAdd]
let lean_s160 := by timed flipCongrArg lean_r29 [GE.ge]
have lean_s161 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6))) := by timed congr lean_s160 lean_s142
have lean_s162 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 6))) (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)))) := by timed flipCongrArg lean_s161 [Not]
have lean_s163 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)))) := by timed Eq.trans lean_r30 lean_s162
let lean_s164 := by timed congrHAdd lean_s147 lean_r21
have lean_s165 : (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (Neg.neg (Int.ofNat 6))))) := by timed congrHAdd lean_s139 lean_s164
have lean_s166 : (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x))) := by timed Eq.trans lean_s165 lean_r22
have lean_s167 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x))) := by timed Eq.trans lean_r24 lean_s166
have lean_s168 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x))) := by timed Eq.trans lean_r27 lean_s167
have lean_s169 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int) (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6))) (binrel% HAdd.hAdd y x) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) Int)) := by timed congrIte lean_s163 lean_r29 lean_s168
have lean_s170 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) := by timed Eq.trans lean_s169 lean_r16
have lean_s171 : (Eq (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int)) (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) := by timed flipCongrArg lean_s170 [Pred]
have lean_s172 : (Eq (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) := by timed congr lean_s159 lean_s171
let lean_s173 := by timed flipCongrArg lean_s172 [GE.ge]
have lean_s174 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6))) := by timed congr lean_s173 lean_s142
have lean_s175 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6))) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)))) := by timed flipCongrArg lean_s174 [Not]
have lean_s176 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)))) := by timed Eq.trans lean_r18 lean_s175
let lean_s177 := by timed congrHAdd lean_s171 lean_r21
have lean_s178 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) (Neg.neg (Int.ofNat 6))))) := by timed congrHAdd lean_s147 lean_s177
have lean_s179 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) := by timed Eq.trans lean_s178 lean_r13
have lean_s180 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 6))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) := by timed Eq.trans lean_r32 lean_s179
have lean_s181 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) := by timed Eq.trans lean_r34 lean_s180
have lean_s182 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int) (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) Int)) := by timed congrIte lean_s176 lean_s172 lean_s181
have lean_s183 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed Eq.trans lean_s182 lean_r15
have lean_s184 : (Eq (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed congr lean_s158 lean_s183
have lean_s185 : (Eq (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s138 lean_s184
let lean_s186 := by timed congr lean_s6 lean_s185
have lean_s187 : (Eq (Not (Eq z (Int.ofNat 0))) (Not (Eq z (Int.ofNat 0)))) := by timed rfl
let lean_s188 := by timed congr lean_s6 lean_s187
have lean_s189 : (Eq (Not (Eq z (Int.ofNat 1))) (Not (Eq z (Int.ofNat 1)))) := by timed rfl
let lean_s190 := by timed congr lean_s6 lean_s189
have lean_s191 : (Eq (Not (Eq z (Int.ofNat 2))) (Not (Eq z (Int.ofNat 2)))) := by timed rfl
let lean_s192 := by timed congr lean_s6 lean_s191
have lean_s193 : (Eq (Not (Eq z (Int.ofNat 3))) (Not (Eq z (Int.ofNat 3)))) := by timed rfl
let lean_s194 := by timed congr lean_s6 lean_s193
have lean_s195 : (Eq (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 4)))) := by timed rfl
let lean_s196 := by timed congr lean_s6 lean_s195
have lean_s197 : (Eq (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 5)))) := by timed rfl
let lean_s198 := by timed congr lean_s6 lean_s197
have lean_s199 : (Eq (Not (Eq z (Int.ofNat 6))) (Not (Eq z (Int.ofNat 6)))) := by timed rfl
let lean_s200 := by timed congr lean_s198 lean_s199
let lean_s201 := by timed congr lean_s196 lean_s200
let lean_s202 := by timed congr lean_s194 lean_s201
let lean_s203 := by timed congr lean_s192 lean_s202
let lean_s204 := by timed congr lean_s190 lean_s203
let lean_s205 := by timed congr lean_s188 lean_s204
let lean_s206 := by timed congr lean_s186 lean_s205
let lean_s207 := by timed congr lean_s136 lean_s206
let lean_s208 := by timed congr lean_s134 lean_s207
let lean_s209 := by timed congr lean_s133 lean_s208
let lean_s210 := by timed congr lean_s132 lean_s209
let lean_s211 := by timed congr lean_s130 lean_s210
let lean_s212 := by timed congr lean_s128 lean_s211
let lean_s213 := by timed congr lean_s126 lean_s212
let lean_s214 := by timed congr lean_s124 lean_s213
let lean_s215 := by timed congr lean_s122 lean_s214
let lean_s216 := by timed congr lean_s120 lean_s215
let lean_s217 := by timed congr lean_s118 lean_s216
let lean_s218 := by timed congr lean_s116 lean_s217
let lean_s219 := by timed congr lean_s114 lean_s218
let lean_s220 := by timed congr lean_s112 lean_s219
let lean_s221 := by timed congr lean_s110 lean_s220
let lean_s222 := by timed congr lean_s108 lean_s221
let lean_s223 := by timed congr lean_s106 lean_s222
let lean_s224 := by timed congr lean_s104 lean_s223
let lean_s225 := by timed congr lean_s102 lean_s224
let lean_s226 := by timed congr lean_s100 lean_s225
let lean_s227 := by timed congr lean_s98 lean_s226
let lean_s228 := by timed congr lean_s96 lean_s227
let lean_s229 := by timed congr lean_s94 lean_s228
let lean_s230 := by timed congr lean_s92 lean_s229
let lean_s231 := by timed congr lean_s90 lean_s230
let lean_s232 := by timed congr lean_s88 lean_s231
let lean_s233 := by timed congr lean_s86 lean_s232
let lean_s234 := by timed congr lean_s84 lean_s233
let lean_s235 := by timed congr lean_s82 lean_s234
let lean_s236 := by timed congr lean_s80 lean_s235
let lean_s237 := by timed congr lean_s78 lean_s236
let lean_s238 := by timed congr lean_s76 lean_s237
let lean_s239 := by timed congr lean_s74 lean_s238
let lean_s240 := by timed congr lean_s72 lean_s239
let lean_s241 := by timed congr lean_s70 lean_s240
let lean_s242 := by timed congr lean_s68 lean_s241
let lean_s243 := by timed congr lean_s66 lean_s242
let lean_s244 := by timed congr lean_s64 lean_s243
let lean_s245 := by timed congr lean_s62 lean_s244
let lean_s246 := by timed congr lean_s60 lean_s245
let lean_s247 := by timed congr lean_s58 lean_s246
let lean_s248 := by timed congr lean_s56 lean_s247
let lean_s249 := by timed congr lean_s54 lean_s248
let lean_s250 := by timed congr lean_s52 lean_s249
let lean_s251 := by timed congr lean_s50 lean_s250
let lean_s252 := by timed congr lean_s48 lean_s251
let lean_s253 := by timed congr lean_s46 lean_s252
let lean_s254 := by timed congr lean_s44 lean_s253
let lean_s255 := by timed congr lean_s42 lean_s254
let lean_s256 := by timed congr lean_s40 lean_s255
let lean_s257 := by timed congr lean_s38 lean_s256
let lean_s258 := by timed congr lean_s36 lean_s257
let lean_s259 := by timed congr lean_s34 lean_s258
let lean_s260 := by timed congr lean_s32 lean_s259
let lean_s261 := by timed congr lean_s30 lean_s260
let lean_s262 := by timed congr lean_s28 lean_s261
let lean_s263 := by timed congr lean_s26 lean_s262
let lean_s264 := by timed congr lean_s24 lean_s263
let lean_s265 := by timed congr lean_s22 lean_s264
let lean_s266 := by timed congr lean_s20 lean_s265
let lean_s267 := by timed congr lean_s18 lean_s266
let lean_s268 := by timed congr lean_s16 lean_s267
let lean_s269 := by timed congr lean_s14 lean_s268
let lean_s270 := by timed congr lean_s12 lean_s269
let lean_s271 := by timed congr lean_s10 lean_s270
have lean_s272 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6))) (And (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s8 lean_s271
have lean_s273 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6)))) (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (Not (Eq z (Int.ofNat 6)))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_r1 lean_s272
have lean_s274 : (Eq And And) := by timed rfl
have lean_s275 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s276 := by timed congr lean_s274 lean_s275
have lean_s277 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s278 := by timed congr lean_s274 lean_s277
have lean_s279 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s280 := by timed congr lean_s274 lean_s279
have lean_s281 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s282 := by timed congr lean_s274 lean_s281
have lean_s283 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s284 := by timed congr lean_s274 lean_s283
have lean_s285 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s286 := by timed congr lean_s274 lean_s285
have lean_s287 : (Eq (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) := by timed rfl
let lean_s288 := by timed congr lean_s274 lean_s287
have lean_s289 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s290 := by timed congr lean_s274 lean_s289
have lean_s291 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s292 := by timed congr lean_s274 lean_s291
have lean_s293 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s294 := by timed congr lean_s274 lean_s293
have lean_s295 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s296 := by timed congr lean_s274 lean_s295
have lean_s297 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s298 := by timed congr lean_s274 lean_s297
have lean_s299 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s300 := by timed congr lean_s274 lean_s299
have lean_s301 : (Eq (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) := by timed rfl
let lean_s302 := by timed congr lean_s274 lean_s301
have lean_s303 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
let lean_s304 := by timed congr lean_s274 lean_s303
have lean_s305 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) := by timed rfl
let lean_s306 := by timed congr lean_s274 lean_s305
have lean_s307 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) := by timed rfl
let lean_s308 := by timed congr lean_s274 lean_s307
have lean_s309 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s310 := by timed congr lean_s274 lean_s309
have lean_s311 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s312 := by timed congr lean_s274 lean_s311
have lean_s313 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s314 := by timed congr lean_s274 lean_s313
have lean_s315 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) := by timed rfl
let lean_s316 := by timed congr lean_s274 lean_s315
have lean_s317 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s318 := by timed congr lean_s274 lean_s317
have lean_s319 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s320 := by timed congr lean_s274 lean_s319
have lean_s321 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s322 := by timed congr lean_s274 lean_s321
have lean_s323 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s324 := by timed congr lean_s274 lean_s323
have lean_s325 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s326 := by timed congr lean_s274 lean_s325
have lean_s327 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s328 := by timed congr lean_s274 lean_s327
have lean_s329 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) := by timed rfl
let lean_s330 := by timed congr lean_s274 lean_s329
have lean_s331 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) := by timed rfl
let lean_s332 := by timed congr lean_s274 lean_s331
have lean_s333 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s334 := by timed congr lean_s274 lean_s333
have lean_s335 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s336 := by timed congr lean_s274 lean_s335
have lean_s337 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s338 := by timed congr lean_s274 lean_s337
have lean_s339 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) := by timed rfl
let lean_s340 := by timed congr lean_s274 lean_s339
have lean_s341 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s342 := by timed congr lean_s274 lean_s341
have lean_s343 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) := by timed rfl
let lean_s344 := by timed congr lean_s274 lean_s343
have lean_s345 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s346 := by timed congr lean_s274 lean_s345
have lean_s347 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s348 := by timed congr lean_s274 lean_s347
have lean_s349 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s350 := by timed congr lean_s274 lean_s349
have lean_s351 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) := by timed rfl
let lean_s352 := by timed congr lean_s274 lean_s351
have lean_s353 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) := by timed rfl
let lean_s354 := by timed congr lean_s274 lean_s353
have lean_s355 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) := by timed rfl
let lean_s356 := by timed congr lean_s274 lean_s355
have lean_s357 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) := by timed rfl
let lean_s358 := by timed congr lean_s274 lean_s357
have lean_s359 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s360 := by timed congr lean_s274 lean_s359
have lean_s361 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s362 := by timed congr lean_s274 lean_s361
have lean_s363 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) := by timed rfl
let lean_s364 := by timed congr lean_s274 lean_s363
have lean_s365 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) := by timed rfl
let lean_s366 := by timed congr lean_s274 lean_s365
have lean_s367 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) := by timed rfl
let lean_s368 := by timed congr lean_s274 lean_s367
have lean_s369 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) := by timed rfl
let lean_s370 := by timed congr lean_s274 lean_s369
have lean_s371 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) := by timed rfl
let lean_s372 := by timed congr lean_s274 lean_s371
have lean_s373 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s374 := by timed congr lean_s274 lean_s373
have lean_s375 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) := by timed rfl
let lean_s376 := by timed congr lean_s274 lean_s375
have lean_s377 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) := by timed rfl
let lean_s378 := by timed congr lean_s274 lean_s377
have lean_s379 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) := by timed rfl
let lean_s380 := by timed congr lean_s274 lean_s379
have lean_s381 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) := by timed rfl
let lean_s382 := by timed congr lean_s274 lean_s381
have lean_s383 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s384 := by timed congr lean_s274 lean_s383
have lean_s385 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) := by timed rfl
let lean_s386 := by timed congr lean_s274 lean_s385
have lean_s387 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s388 := by timed congr lean_s274 lean_s387
have lean_s389 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s390 := by timed congr lean_s274 lean_s389
have lean_s391 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s392 := by timed congr lean_s274 lean_s391
have lean_s393 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s394 := by timed congr lean_s274 lean_s393
have lean_s395 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s396 := by timed congr lean_s274 lean_s395
have lean_s397 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s398 := by timed congr lean_s274 lean_s397
have lean_s399 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) := by timed rfl
let lean_s400 := by timed congr lean_s274 lean_s399
have lean_s401 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6))))))))) := by timed rfl
let lean_s402 := by timed congr lean_s274 lean_s401
have lean_s403 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))) := by timed rfl
let lean_s404 := by timed congr lean_s274 lean_s403
have lean_s405 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s406 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s407 := by timed flipCongrArg lean_s406 [Eq]
have lean_s408 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by timed rfl
have lean_s409 : (Eq (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) := by timed congr lean_s407 lean_s408
let lean_s410 := by timed congr lean_s274 lean_s409
let lean_s411 := by timed flipCongrArg lean_s406 [Eq]
have lean_s412 : (Eq (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed rfl
have lean_s413 : (Eq (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s411 lean_s412
let lean_s414 := by timed congr lean_s274 lean_s413
let lean_s415 := by timed flipCongrArg lean_s406 [Eq]
have lean_s416 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s417 : (Eq (Eq z (Int.ofNat 0)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed congr lean_s415 lean_s416
have lean_s418 : (Eq (Not (Eq z (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed flipCongrArg lean_s417 [Not]
let lean_s419 := by timed congr lean_s274 lean_s418
let lean_s420 := by timed flipCongrArg lean_s406 [Eq]
have lean_s421 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s422 : (Eq (Eq z (Int.ofNat 1)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed congr lean_s420 lean_s421
have lean_s423 : (Eq (Not (Eq z (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed flipCongrArg lean_s422 [Not]
let lean_s424 := by timed congr lean_s274 lean_s423
let lean_s425 := by timed flipCongrArg lean_s406 [Eq]
have lean_s426 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s427 : (Eq (Eq z (Int.ofNat 2)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed congr lean_s425 lean_s426
have lean_s428 : (Eq (Not (Eq z (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed flipCongrArg lean_s427 [Not]
let lean_s429 := by timed congr lean_s274 lean_s428
let lean_s430 := by timed flipCongrArg lean_s406 [Eq]
have lean_s431 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s432 : (Eq (Eq z (Int.ofNat 3)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed congr lean_s430 lean_s431
have lean_s433 : (Eq (Not (Eq z (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed flipCongrArg lean_s432 [Not]
let lean_s434 := by timed congr lean_s274 lean_s433
let lean_s435 := by timed flipCongrArg lean_s406 [Eq]
have lean_s436 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s437 : (Eq (Eq z (Int.ofNat 4)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed congr lean_s435 lean_s436
have lean_s438 : (Eq (Not (Eq z (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed flipCongrArg lean_s437 [Not]
let lean_s439 := by timed congr lean_s274 lean_s438
let lean_s440 := by timed flipCongrArg lean_s406 [Eq]
have lean_s441 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s442 : (Eq (Eq z (Int.ofNat 5)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed congr lean_s440 lean_s441
have lean_s443 : (Eq (Not (Eq z (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed flipCongrArg lean_s442 [Not]
let lean_s444 := by timed congr lean_s274 lean_s443
let lean_s445 := by timed flipCongrArg lean_s406 [Eq]
have lean_s446 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
have lean_s447 : (Eq (Eq z (Int.ofNat 6)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed congr lean_s445 lean_s446
have lean_s448 : (Eq (Not (Eq z (Int.ofNat 6))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))) := by timed flipCongrArg lean_s447 [Not]
let lean_s449 := by timed congr lean_s444 lean_s448
let lean_s450 := by timed congr lean_s439 lean_s449
let lean_s451 := by timed congr lean_s434 lean_s450
let lean_s452 := by timed congr lean_s429 lean_s451
let lean_s453 := by timed congr lean_s424 lean_s452
let lean_s454 := by timed congr lean_s419 lean_s453
let lean_s455 := by timed congr lean_s414 lean_s454
let lean_s456 := by timed congr lean_s410 lean_s455
let lean_s457 := by timed congr lean_s404 lean_s456
let lean_s458 := by timed congr lean_s402 lean_s457
let lean_s459 := by timed congr lean_s400 lean_s458
let lean_s460 := by timed congr lean_s398 lean_s459
let lean_s461 := by timed congr lean_s396 lean_s460
let lean_s462 := by timed congr lean_s394 lean_s461
let lean_s463 := by timed congr lean_s392 lean_s462
let lean_s464 := by timed congr lean_s390 lean_s463
let lean_s465 := by timed congr lean_s388 lean_s464
let lean_s466 := by timed congr lean_s386 lean_s465
let lean_s467 := by timed congr lean_s384 lean_s466
let lean_s468 := by timed congr lean_s382 lean_s467
let lean_s469 := by timed congr lean_s380 lean_s468
let lean_s470 := by timed congr lean_s378 lean_s469
let lean_s471 := by timed congr lean_s376 lean_s470
let lean_s472 := by timed congr lean_s374 lean_s471
let lean_s473 := by timed congr lean_s372 lean_s472
let lean_s474 := by timed congr lean_s370 lean_s473
let lean_s475 := by timed congr lean_s368 lean_s474
let lean_s476 := by timed congr lean_s366 lean_s475
let lean_s477 := by timed congr lean_s364 lean_s476
let lean_s478 := by timed congr lean_s362 lean_s477
let lean_s479 := by timed congr lean_s360 lean_s478
let lean_s480 := by timed congr lean_s358 lean_s479
let lean_s481 := by timed congr lean_s356 lean_s480
let lean_s482 := by timed congr lean_s354 lean_s481
let lean_s483 := by timed congr lean_s352 lean_s482
let lean_s484 := by timed congr lean_s350 lean_s483
let lean_s485 := by timed congr lean_s348 lean_s484
let lean_s486 := by timed congr lean_s346 lean_s485
let lean_s487 := by timed congr lean_s344 lean_s486
let lean_s488 := by timed congr lean_s342 lean_s487
let lean_s489 := by timed congr lean_s340 lean_s488
let lean_s490 := by timed congr lean_s338 lean_s489
let lean_s491 := by timed congr lean_s336 lean_s490
let lean_s492 := by timed congr lean_s334 lean_s491
let lean_s493 := by timed congr lean_s332 lean_s492
let lean_s494 := by timed congr lean_s330 lean_s493
let lean_s495 := by timed congr lean_s328 lean_s494
let lean_s496 := by timed congr lean_s326 lean_s495
let lean_s497 := by timed congr lean_s324 lean_s496
let lean_s498 := by timed congr lean_s322 lean_s497
let lean_s499 := by timed congr lean_s320 lean_s498
let lean_s500 := by timed congr lean_s318 lean_s499
let lean_s501 := by timed congr lean_s316 lean_s500
let lean_s502 := by timed congr lean_s314 lean_s501
let lean_s503 := by timed congr lean_s312 lean_s502
let lean_s504 := by timed congr lean_s310 lean_s503
let lean_s505 := by timed congr lean_s308 lean_s504
let lean_s506 := by timed congr lean_s306 lean_s505
let lean_s507 := by timed congr lean_s304 lean_s506
let lean_s508 := by timed congr lean_s302 lean_s507
let lean_s509 := by timed congr lean_s300 lean_s508
let lean_s510 := by timed congr lean_s298 lean_s509
let lean_s511 := by timed congr lean_s296 lean_s510
let lean_s512 := by timed congr lean_s294 lean_s511
let lean_s513 := by timed congr lean_s292 lean_s512
let lean_s514 := by timed congr lean_s290 lean_s513
let lean_s515 := by timed congr lean_s288 lean_s514
let lean_s516 := by timed congr lean_s286 lean_s515
let lean_s517 := by timed congr lean_s284 lean_s516
let lean_s518 := by timed congr lean_s282 lean_s517
let lean_s519 := by timed congr lean_s280 lean_s518
let lean_s520 := by timed congr lean_s278 lean_s519
have lean_s521 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s276 lean_s520
have lean_s522 : (Eq And And) := by timed rfl
let lean_s523 := by timed congr lean_s522 lean_s7
let lean_s524 := by timed congr lean_s522 lean_s9
let lean_s525 := by timed congr lean_s522 lean_s11
let lean_s526 := by timed congr lean_s522 lean_s13
let lean_s527 := by timed congr lean_s522 lean_s15
let lean_s528 := by timed congr lean_s522 lean_s17
let lean_s529 := by timed congr lean_s522 lean_s19
let lean_s530 := by timed congr lean_s522 lean_s21
let lean_s531 := by timed congr lean_s522 lean_s23
let lean_s532 := by timed congr lean_s522 lean_s25
let lean_s533 := by timed congr lean_s522 lean_s27
let lean_s534 := by timed congr lean_s522 lean_s29
let lean_s535 := by timed congr lean_s522 lean_s31
let lean_s536 := by timed congr lean_s522 lean_s33
let lean_s537 := by timed congr lean_s522 lean_s35
let lean_s538 := by timed congr lean_s522 lean_s37
let lean_s539 := by timed congr lean_s522 lean_s39
let lean_s540 := by timed congr lean_s522 lean_s41
let lean_s541 := by timed congr lean_s522 lean_s43
let lean_s542 := by timed congr lean_s522 lean_s45
let lean_s543 := by timed congr lean_s522 lean_s47
let lean_s544 := by timed congr lean_s522 lean_s49
let lean_s545 := by timed congr lean_s522 lean_s51
let lean_s546 := by timed congr lean_s522 lean_s53
let lean_s547 := by timed congr lean_s522 lean_s55
let lean_s548 := by timed congr lean_s522 lean_s57
let lean_s549 := by timed congr lean_s522 lean_s59
let lean_s550 := by timed congr lean_s522 lean_s61
let lean_s551 := by timed congr lean_s522 lean_s63
let lean_s552 := by timed congr lean_s522 lean_s65
let lean_s553 := by timed congr lean_s522 lean_s67
let lean_s554 := by timed congr lean_s522 lean_s69
let lean_s555 := by timed congr lean_s522 lean_s71
let lean_s556 := by timed congr lean_s522 lean_s73
let lean_s557 := by timed congr lean_s522 lean_s75
let lean_s558 := by timed congr lean_s522 lean_s77
let lean_s559 := by timed congr lean_s522 lean_s79
let lean_s560 := by timed congr lean_s522 lean_s81
let lean_s561 := by timed congr lean_s522 lean_s83
let lean_s562 := by timed congr lean_s522 lean_s85
let lean_s563 := by timed congr lean_s522 lean_s87
let lean_s564 := by timed congr lean_s522 lean_s89
let lean_s565 := by timed congr lean_s522 lean_s91
let lean_s566 := by timed congr lean_s522 lean_s93
let lean_s567 := by timed congr lean_s522 lean_s95
let lean_s568 := by timed congr lean_s522 lean_s97
let lean_s569 := by timed congr lean_s522 lean_s99
let lean_s570 := by timed congr lean_s522 lean_s101
let lean_s571 := by timed congr lean_s522 lean_s103
let lean_s572 := by timed congr lean_s522 lean_s105
let lean_s573 := by timed congr lean_s522 lean_s107
let lean_s574 := by timed congr lean_s522 lean_s109
let lean_s575 := by timed congr lean_s522 lean_s111
let lean_s576 := by timed congr lean_s522 lean_s113
let lean_s577 := by timed congr lean_s522 lean_s115
let lean_s578 := by timed congr lean_s522 lean_s117
let lean_s579 := by timed congr lean_s522 lean_s119
let lean_s580 := by timed congr lean_s522 lean_s121
let lean_s581 := by timed congr lean_s522 lean_s123
let lean_s582 := by timed congr lean_s522 lean_s125
let lean_s583 := by timed congr lean_s522 lean_s127
let lean_s584 := by timed congr lean_s522 lean_s129
let lean_s585 := by timed congr lean_s522 lean_s131
have lean_s586 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6))))))))) := by timed rfl
let lean_s587 := by timed congr lean_s522 lean_s586
have lean_s588 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))) := by timed rfl
let lean_s589 := by timed congr lean_s522 lean_s588
let lean_s590 := by timed congr lean_s522 lean_r0
have lean_s591 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed rfl
let lean_s592 := by timed congr lean_s522 lean_s591
have lean_s593 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s594 := by timed congr lean_s522 lean_s593
have lean_s595 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s596 := by timed congr lean_s522 lean_s595
have lean_s597 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s598 := by timed congr lean_s522 lean_s597
have lean_s599 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s600 := by timed congr lean_s522 lean_s599
have lean_s601 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s602 := by timed congr lean_s522 lean_s601
have lean_s603 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s604 := by timed congr lean_s522 lean_s603
have lean_s605 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))) := by timed rfl
let lean_s606 := by timed congr lean_s604 lean_s605
let lean_s607 := by timed congr lean_s602 lean_s606
let lean_s608 := by timed congr lean_s600 lean_s607
let lean_s609 := by timed congr lean_s598 lean_s608
let lean_s610 := by timed congr lean_s596 lean_s609
let lean_s611 := by timed congr lean_s594 lean_s610
let lean_s612 := by timed congr lean_s592 lean_s611
let lean_s613 := by timed congr lean_s590 lean_s612
let lean_s614 := by timed congr lean_s589 lean_s613
let lean_s615 := by timed congr lean_s587 lean_s614
let lean_s616 := by timed congr lean_s585 lean_s615
let lean_s617 := by timed congr lean_s584 lean_s616
let lean_s618 := by timed congr lean_s583 lean_s617
let lean_s619 := by timed congr lean_s582 lean_s618
let lean_s620 := by timed congr lean_s581 lean_s619
let lean_s621 := by timed congr lean_s580 lean_s620
let lean_s622 := by timed congr lean_s579 lean_s621
let lean_s623 := by timed congr lean_s578 lean_s622
let lean_s624 := by timed congr lean_s577 lean_s623
let lean_s625 := by timed congr lean_s576 lean_s624
let lean_s626 := by timed congr lean_s575 lean_s625
let lean_s627 := by timed congr lean_s574 lean_s626
let lean_s628 := by timed congr lean_s573 lean_s627
let lean_s629 := by timed congr lean_s572 lean_s628
let lean_s630 := by timed congr lean_s571 lean_s629
let lean_s631 := by timed congr lean_s570 lean_s630
let lean_s632 := by timed congr lean_s569 lean_s631
let lean_s633 := by timed congr lean_s568 lean_s632
let lean_s634 := by timed congr lean_s567 lean_s633
let lean_s635 := by timed congr lean_s566 lean_s634
let lean_s636 := by timed congr lean_s565 lean_s635
let lean_s637 := by timed congr lean_s564 lean_s636
let lean_s638 := by timed congr lean_s563 lean_s637
let lean_s639 := by timed congr lean_s562 lean_s638
let lean_s640 := by timed congr lean_s561 lean_s639
let lean_s641 := by timed congr lean_s560 lean_s640
let lean_s642 := by timed congr lean_s559 lean_s641
let lean_s643 := by timed congr lean_s558 lean_s642
let lean_s644 := by timed congr lean_s557 lean_s643
let lean_s645 := by timed congr lean_s556 lean_s644
let lean_s646 := by timed congr lean_s555 lean_s645
let lean_s647 := by timed congr lean_s554 lean_s646
let lean_s648 := by timed congr lean_s553 lean_s647
let lean_s649 := by timed congr lean_s552 lean_s648
let lean_s650 := by timed congr lean_s551 lean_s649
let lean_s651 := by timed congr lean_s550 lean_s650
let lean_s652 := by timed congr lean_s549 lean_s651
let lean_s653 := by timed congr lean_s548 lean_s652
let lean_s654 := by timed congr lean_s547 lean_s653
let lean_s655 := by timed congr lean_s546 lean_s654
let lean_s656 := by timed congr lean_s545 lean_s655
let lean_s657 := by timed congr lean_s544 lean_s656
let lean_s658 := by timed congr lean_s543 lean_s657
let lean_s659 := by timed congr lean_s542 lean_s658
let lean_s660 := by timed congr lean_s541 lean_s659
let lean_s661 := by timed congr lean_s540 lean_s660
let lean_s662 := by timed congr lean_s539 lean_s661
let lean_s663 := by timed congr lean_s538 lean_s662
let lean_s664 := by timed congr lean_s537 lean_s663
let lean_s665 := by timed congr lean_s536 lean_s664
let lean_s666 := by timed congr lean_s535 lean_s665
let lean_s667 := by timed congr lean_s534 lean_s666
let lean_s668 := by timed congr lean_s533 lean_s667
let lean_s669 := by timed congr lean_s532 lean_s668
let lean_s670 := by timed congr lean_s531 lean_s669
let lean_s671 := by timed congr lean_s530 lean_s670
let lean_s672 := by timed congr lean_s529 lean_s671
let lean_s673 := by timed congr lean_s528 lean_s672
let lean_s674 := by timed congr lean_s527 lean_s673
let lean_s675 := by timed congr lean_s526 lean_s674
let lean_s676 := by timed congr lean_s525 lean_s675
let lean_s677 := by timed congr lean_s524 lean_s676
have lean_s678 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And True (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s523 lean_s677
have lean_s679 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_s678 lean_r26
have lean_s680 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_s521 lean_s679
let lean_s681 := by timed Eq.trans lean_s273 lean_s680
have lean_s682 : (Eq And And) := by timed rfl
have lean_s683 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s684 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s683, 62
have lean_s685 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s686 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s685, 61
have lean_s687 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s688 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s687, 60
have lean_s689 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s690 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s689, 59
have lean_s691 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s692 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s691, 58
have lean_s693 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s694 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s693, 57
have lean_s695 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s696 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s695, 56
have lean_s697 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s698 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by andElim lean_s697, 55
have lean_s699 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s700 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s699, 54
have lean_s701 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s702 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s701, 53
have lean_s703 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s704 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s703, 52
have lean_s705 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s706 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s705, 51
have lean_s707 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s708 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by andElim lean_s707, 50
have lean_s709 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s710 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s709, 49
have lean_s711 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s712 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by andElim lean_s711, 48
have lean_s713 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s714 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s713, 47
have lean_s715 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s716 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s715, 46
have lean_s717 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s718 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s717, 45
have lean_s719 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s720 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by andElim lean_s719, 44
have lean_s721 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s722 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s721, 43
have lean_s723 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s724 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s723, 42
have lean_s725 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s726 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by andElim lean_s725, 41
have lean_s727 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s728 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s727, 40
have lean_s729 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s730 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s729, 39
have lean_s731 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s732 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by andElim lean_s731, 38
have lean_s733 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s734 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s733, 37
have lean_s735 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s736 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s735, 36
have lean_s737 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s738 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s737, 35
have lean_s739 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s740 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by andElim lean_s739, 34
have lean_s741 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s742 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s741, 33
have lean_s743 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s744 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by andElim lean_s743, 32
have lean_s745 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s746 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s745, 31
have lean_s747 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s748 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s747, 30
have lean_s749 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s750 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s749, 29
have lean_s751 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s752 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s751, 28
have lean_s753 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s754 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s753, 27
have lean_s755 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s756 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s755, 26
have lean_s757 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s758 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s757, 25
have lean_s759 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s760 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s759, 24
have lean_s761 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s762 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s761, 23
have lean_s763 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s764 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s763, 22
have lean_s765 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s766 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s765, 21
have lean_s767 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s768 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) := by andElim lean_s767, 20
have lean_s769 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s770 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s769, 19
have lean_s771 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s772 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s771, 18
have lean_s773 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s774 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s773, 17
have lean_s775 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s776 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s775, 16
have lean_s777 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s778 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s777, 15
have lean_s779 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s780 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s779, 14
have lean_s781 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s782 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s781, 13
have lean_s783 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s784 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s783, 12
have lean_s785 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s786 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s785, 11
have lean_s787 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s788 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s787, 10
have lean_s789 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s790 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s789, 9
have lean_s791 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s792 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s791, 8
have lean_s793 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s794 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s793, 7
have lean_s795 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s796 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s795, 6
have lean_s797 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s798 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s797, 5
have lean_s799 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s800 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s799, 4
have lean_s801 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s802 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s801, 3
have lean_s803 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s804 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s803, 2
have lean_s805 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s806 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s805, 1
have lean_s807 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s808 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s807, 0
let lean_s809 := by timed And.intro lean_s806 lean_s808
let lean_s810 := by timed And.intro lean_s804 lean_s809
let lean_s811 := by timed And.intro lean_s802 lean_s810
let lean_s812 := by timed And.intro lean_s800 lean_s811
let lean_s813 := by timed And.intro lean_s798 lean_s812
let lean_s814 := by timed And.intro lean_s796 lean_s813
let lean_s815 := by timed And.intro lean_s794 lean_s814
let lean_s816 := by timed And.intro lean_s792 lean_s815
let lean_s817 := by timed And.intro lean_s790 lean_s816
let lean_s818 := by timed And.intro lean_s788 lean_s817
let lean_s819 := by timed And.intro lean_s786 lean_s818
let lean_s820 := by timed And.intro lean_s784 lean_s819
let lean_s821 := by timed And.intro lean_s782 lean_s820
let lean_s822 := by timed And.intro lean_s780 lean_s821
let lean_s823 := by timed And.intro lean_s778 lean_s822
let lean_s824 := by timed And.intro lean_s776 lean_s823
let lean_s825 := by timed And.intro lean_s774 lean_s824
let lean_s826 := by timed And.intro lean_s772 lean_s825
let lean_s827 := by timed And.intro lean_s770 lean_s826
let lean_s828 := by timed And.intro lean_s768 lean_s827
let lean_s829 := by timed And.intro lean_s766 lean_s828
let lean_s830 := by timed And.intro lean_s764 lean_s829
let lean_s831 := by timed And.intro lean_s762 lean_s830
let lean_s832 := by timed And.intro lean_s760 lean_s831
let lean_s833 := by timed And.intro lean_s758 lean_s832
let lean_s834 := by timed And.intro lean_s756 lean_s833
let lean_s835 := by timed And.intro lean_s754 lean_s834
let lean_s836 := by timed And.intro lean_s752 lean_s835
let lean_s837 := by timed And.intro lean_s750 lean_s836
let lean_s838 := by timed And.intro lean_s748 lean_s837
let lean_s839 := by timed And.intro lean_s746 lean_s838
let lean_s840 := by timed And.intro lean_s744 lean_s839
let lean_s841 := by timed And.intro lean_s742 lean_s840
let lean_s842 := by timed And.intro lean_s740 lean_s841
let lean_s843 := by timed And.intro lean_s738 lean_s842
let lean_s844 := by timed And.intro lean_s736 lean_s843
let lean_s845 := by timed And.intro lean_s734 lean_s844
let lean_s846 := by timed And.intro lean_s732 lean_s845
let lean_s847 := by timed And.intro lean_s730 lean_s846
let lean_s848 := by timed And.intro lean_s728 lean_s847
let lean_s849 := by timed And.intro lean_s726 lean_s848
let lean_s850 := by timed And.intro lean_s724 lean_s849
let lean_s851 := by timed And.intro lean_s722 lean_s850
let lean_s852 := by timed And.intro lean_s720 lean_s851
let lean_s853 := by timed And.intro lean_s718 lean_s852
let lean_s854 := by timed And.intro lean_s716 lean_s853
let lean_s855 := by timed And.intro lean_s714 lean_s854
let lean_s856 := by timed And.intro lean_s712 lean_s855
let lean_s857 := by timed And.intro lean_s710 lean_s856
let lean_s858 := by timed And.intro lean_s708 lean_s857
let lean_s859 := by timed And.intro lean_s706 lean_s858
let lean_s860 := by timed And.intro lean_s704 lean_s859
let lean_s861 := by timed And.intro lean_s702 lean_s860
let lean_s862 := by timed And.intro lean_s700 lean_s861
let lean_s863 := by timed And.intro lean_s698 lean_s862
let lean_s864 := by timed And.intro lean_s696 lean_s863
let lean_s865 := by timed And.intro lean_s694 lean_s864
let lean_s866 := by timed And.intro lean_s692 lean_s865
let lean_s867 := by timed And.intro lean_s690 lean_s866
let lean_s868 := by timed And.intro lean_s688 lean_s867
let lean_s869 := by timed And.intro lean_s686 lean_s868
have lean_s870 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed And.intro lean_s684 lean_s869
have lean_s871 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s870, 62
let lean_s872 := by timed flipCongrArg lean_s871 [Eq]
have lean_s873 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s874 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s872 lean_s873
let lean_s875 := by timed congr lean_s682 lean_s874
have lean_s876 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s870, 61
let lean_s877 := by timed flipCongrArg lean_s876 [Eq]
have lean_s878 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s879 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s877 lean_s878
let lean_s880 := by timed congr lean_s682 lean_s879
have lean_s881 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s870, 60
let lean_s882 := by timed flipCongrArg lean_s881 [Eq]
have lean_s883 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s884 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s882 lean_s883
let lean_s885 := by timed congr lean_s682 lean_s884
have lean_s886 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s870, 59
let lean_s887 := by timed flipCongrArg lean_s886 [Eq]
have lean_s888 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s889 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s887 lean_s888
let lean_s890 := by timed congr lean_s682 lean_s889
have lean_s891 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s870, 58
let lean_s892 := by timed flipCongrArg lean_s891 [Eq]
have lean_s893 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s894 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s892 lean_s893
let lean_s895 := by timed congr lean_s682 lean_s894
have lean_s896 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s870, 57
let lean_s897 := by timed flipCongrArg lean_s896 [Eq]
have lean_s898 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
have lean_s899 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s897 lean_s898
let lean_s900 := by timed congr lean_s682 lean_s899
have lean_s901 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s870, 56
let lean_s902 := by timed flipCongrArg lean_s901 [Eq]
have lean_s903 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s904 : (Eq (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s902 lean_s903
let lean_s905 := by timed congr lean_s682 lean_s904
have lean_s906 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s870, 55
let lean_s907 := by timed flipCongrArg lean_s906 [Eq]
have lean_s908 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s907 lean_s898
let lean_s909 := by timed congr lean_s682 lean_s908
have lean_s910 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s870, 54
let lean_s911 := by timed flipCongrArg lean_s910 [Eq]
have lean_s912 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s911 lean_s903
let lean_s913 := by timed congr lean_s682 lean_s912
have lean_s914 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s870, 53
let lean_s915 := by timed flipCongrArg lean_s914 [Eq]
have lean_s916 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s915 lean_s873
let lean_s917 := by timed congr lean_s682 lean_s916
have lean_s918 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s870, 52
let lean_s919 := by timed flipCongrArg lean_s918 [Eq]
have lean_s920 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s919 lean_s878
let lean_s921 := by timed congr lean_s682 lean_s920
have lean_s922 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s870, 51
let lean_s923 := by timed flipCongrArg lean_s922 [Eq]
have lean_s924 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s923 lean_s883
let lean_s925 := by timed congr lean_s682 lean_s924
have lean_s926 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s870, 50
let lean_s927 := by timed flipCongrArg lean_s926 [Eq]
have lean_s928 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s927 lean_s888
let lean_s929 := by timed congr lean_s682 lean_s928
have lean_s930 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s870, 49
let lean_s931 := by timed flipCongrArg lean_s930 [Eq]
have lean_s932 : (Eq (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s931 lean_s893
let lean_s933 := by timed congr lean_s682 lean_s932
have lean_s934 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s870, 48
let lean_s935 := by timed flipCongrArg lean_s934 [Eq]
have lean_s936 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s935 lean_s903
let lean_s937 := by timed congr lean_s682 lean_s936
have lean_s938 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s870, 47
let lean_s939 := by timed flipCongrArg lean_s938 [Eq]
have lean_s940 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s939 lean_s873
let lean_s941 := by timed congr lean_s682 lean_s940
have lean_s942 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s870, 46
let lean_s943 := by timed flipCongrArg lean_s942 [Eq]
have lean_s944 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s943 lean_s878
let lean_s945 := by timed congr lean_s682 lean_s944
have lean_s946 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s870, 45
let lean_s947 := by timed flipCongrArg lean_s946 [Eq]
have lean_s948 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s947 lean_s883
let lean_s949 := by timed congr lean_s682 lean_s948
have lean_s950 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s870, 44
let lean_s951 := by timed flipCongrArg lean_s950 [Eq]
have lean_s952 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s951 lean_s888
let lean_s953 := by timed congr lean_s682 lean_s952
have lean_s954 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s870, 43
let lean_s955 := by timed flipCongrArg lean_s954 [Eq]
have lean_s956 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s955 lean_s893
let lean_s957 := by timed congr lean_s682 lean_s956
have lean_s958 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) := by andElim lean_s870, 42
let lean_s959 := by timed flipCongrArg lean_s958 [Eq]
have lean_s960 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s959 lean_s898
let lean_s961 := by timed congr lean_s682 lean_s960
have lean_s962 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s870, 41
let lean_s963 := by timed flipCongrArg lean_s962 [Eq]
have lean_s964 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s963 lean_s873
let lean_s965 := by timed congr lean_s682 lean_s964
have lean_s966 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s870, 40
let lean_s967 := by timed flipCongrArg lean_s966 [Eq]
have lean_s968 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s967 lean_s878
let lean_s969 := by timed congr lean_s682 lean_s968
have lean_s970 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s870, 39
let lean_s971 := by timed flipCongrArg lean_s970 [Eq]
have lean_s972 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s971 lean_s883
let lean_s973 := by timed congr lean_s682 lean_s972
have lean_s974 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s870, 38
let lean_s975 := by timed flipCongrArg lean_s974 [Eq]
have lean_s976 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s975 lean_s888
let lean_s977 := by timed congr lean_s682 lean_s976
have lean_s978 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s870, 37
let lean_s979 := by timed flipCongrArg lean_s978 [Eq]
have lean_s980 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s979 lean_s893
let lean_s981 := by timed congr lean_s682 lean_s980
have lean_s982 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s870, 36
let lean_s983 := by timed flipCongrArg lean_s982 [Eq]
have lean_s984 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s983 lean_s898
let lean_s985 := by timed congr lean_s682 lean_s984
have lean_s986 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s870, 35
let lean_s987 := by timed flipCongrArg lean_s986 [Eq]
have lean_s988 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s987 lean_s903
let lean_s989 := by timed congr lean_s682 lean_s988
have lean_s990 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s870, 34
let lean_s991 := by timed flipCongrArg lean_s990 [Eq]
have lean_s992 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s991 lean_s878
let lean_s993 := by timed congr lean_s682 lean_s992
have lean_s994 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s870, 33
let lean_s995 := by timed flipCongrArg lean_s994 [Eq]
have lean_s996 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s995 lean_s883
let lean_s997 := by timed congr lean_s682 lean_s996
have lean_s998 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s870, 32
let lean_s999 := by timed flipCongrArg lean_s998 [Eq]
have lean_s1000 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s999 lean_s888
let lean_s1001 := by timed congr lean_s682 lean_s1000
have lean_s1002 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s870, 31
let lean_s1003 := by timed flipCongrArg lean_s1002 [Eq]
have lean_s1004 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1003 lean_s893
let lean_s1005 := by timed congr lean_s682 lean_s1004
have lean_s1006 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by andElim lean_s870, 30
let lean_s1007 := by timed flipCongrArg lean_s1006 [Eq]
have lean_s1008 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s1007 lean_s898
let lean_s1009 := by timed congr lean_s682 lean_s1008
have lean_s1010 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s870, 29
let lean_s1011 := by timed flipCongrArg lean_s1010 [Eq]
have lean_s1012 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1011 lean_s903
let lean_s1013 := by timed congr lean_s682 lean_s1012
have lean_s1014 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by andElim lean_s870, 28
let lean_s1015 := by timed flipCongrArg lean_s1014 [Eq]
have lean_s1016 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1015 lean_s873
let lean_s1017 := by timed congr lean_s682 lean_s1016
have lean_s1018 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s870, 27
let lean_s1019 := by timed flipCongrArg lean_s1018 [Eq]
have lean_s1020 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1019 lean_s883
let lean_s1021 := by timed congr lean_s682 lean_s1020
have lean_s1022 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s870, 26
let lean_s1023 := by timed flipCongrArg lean_s1022 [Eq]
have lean_s1024 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1023 lean_s888
let lean_s1025 := by timed congr lean_s682 lean_s1024
have lean_s1026 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s870, 25
let lean_s1027 := by timed flipCongrArg lean_s1026 [Eq]
have lean_s1028 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1027 lean_s893
let lean_s1029 := by timed congr lean_s682 lean_s1028
have lean_s1030 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by andElim lean_s870, 24
let lean_s1031 := by timed flipCongrArg lean_s1030 [Eq]
have lean_s1032 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s1031 lean_s898
let lean_s1033 := by timed congr lean_s682 lean_s1032
have lean_s1034 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s870, 23
let lean_s1035 := by timed flipCongrArg lean_s1034 [Eq]
have lean_s1036 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1035 lean_s903
let lean_s1037 := by timed congr lean_s682 lean_s1036
have lean_s1038 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s870, 22
let lean_s1039 := by timed flipCongrArg lean_s1038 [Eq]
have lean_s1040 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1039 lean_s873
let lean_s1041 := by timed congr lean_s682 lean_s1040
have lean_s1042 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by andElim lean_s870, 21
let lean_s1043 := by timed flipCongrArg lean_s1042 [Eq]
have lean_s1044 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1043 lean_s878
let lean_s1045 := by timed congr lean_s682 lean_s1044
have lean_s1046 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s870, 20
let lean_s1047 := by timed flipCongrArg lean_s1046 [Eq]
have lean_s1048 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1047 lean_s888
let lean_s1049 := by timed congr lean_s682 lean_s1048
have lean_s1050 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s870, 19
let lean_s1051 := by timed flipCongrArg lean_s1050 [Eq]
have lean_s1052 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1051 lean_s893
let lean_s1053 := by timed congr lean_s682 lean_s1052
have lean_s1054 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by andElim lean_s870, 18
let lean_s1055 := by timed flipCongrArg lean_s1054 [Eq]
have lean_s1056 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s1055 lean_s898
let lean_s1057 := by timed congr lean_s682 lean_s1056
have lean_s1058 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s870, 17
let lean_s1059 := by timed flipCongrArg lean_s1058 [Eq]
have lean_s1060 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1059 lean_s903
let lean_s1061 := by timed congr lean_s682 lean_s1060
have lean_s1062 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s870, 16
let lean_s1063 := by timed flipCongrArg lean_s1062 [Eq]
have lean_s1064 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1063 lean_s873
let lean_s1065 := by timed congr lean_s682 lean_s1064
have lean_s1066 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s870, 15
let lean_s1067 := by timed flipCongrArg lean_s1066 [Eq]
have lean_s1068 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1067 lean_s878
let lean_s1069 := by timed congr lean_s682 lean_s1068
have lean_s1070 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by andElim lean_s870, 14
let lean_s1071 := by timed flipCongrArg lean_s1070 [Eq]
have lean_s1072 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1071 lean_s883
let lean_s1073 := by timed congr lean_s682 lean_s1072
have lean_s1074 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s870, 13
let lean_s1075 := by timed flipCongrArg lean_s1074 [Eq]
have lean_s1076 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1075 lean_s893
let lean_s1077 := by timed congr lean_s682 lean_s1076
have lean_s1078 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by andElim lean_s870, 12
let lean_s1079 := by timed flipCongrArg lean_s1078 [Eq]
have lean_s1080 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s1079 lean_s898
let lean_s1081 := by timed congr lean_s682 lean_s1080
have lean_s1082 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s870, 11
let lean_s1083 := by timed flipCongrArg lean_s1082 [Eq]
have lean_s1084 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1083 lean_s903
let lean_s1085 := by timed congr lean_s682 lean_s1084
have lean_s1086 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s870, 10
let lean_s1087 := by timed flipCongrArg lean_s1086 [Eq]
have lean_s1088 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1087 lean_s873
let lean_s1089 := by timed congr lean_s682 lean_s1088
have lean_s1090 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s870, 9
let lean_s1091 := by timed flipCongrArg lean_s1090 [Eq]
have lean_s1092 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1091 lean_s878
let lean_s1093 := by timed congr lean_s682 lean_s1092
have lean_s1094 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s870, 8
let lean_s1095 := by timed flipCongrArg lean_s1094 [Eq]
have lean_s1096 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1095 lean_s883
let lean_s1097 := by timed congr lean_s682 lean_s1096
have lean_s1098 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by andElim lean_s870, 7
let lean_s1099 := by timed flipCongrArg lean_s1098 [Eq]
have lean_s1100 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1099 lean_s888
let lean_s1101 := by timed congr lean_s682 lean_s1100
have lean_s1102 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s870, 6
let lean_s1103 := by timed flipCongrArg lean_s1102 [Eq]
have lean_s1104 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s1103 lean_s898
let lean_s1105 := by timed congr lean_s682 lean_s1104
have lean_s1106 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s870, 5
let lean_s1107 := by timed flipCongrArg lean_s1106 [Eq]
have lean_s1108 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1107 lean_s903
let lean_s1109 := by timed congr lean_s682 lean_s1108
have lean_s1110 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s870, 4
let lean_s1111 := by timed flipCongrArg lean_s1110 [Eq]
have lean_s1112 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1111 lean_s873
let lean_s1113 := by timed congr lean_s682 lean_s1112
have lean_s1114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s870, 3
let lean_s1115 := by timed flipCongrArg lean_s1114 [Eq]
have lean_s1116 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1115 lean_s878
let lean_s1117 := by timed congr lean_s682 lean_s1116
have lean_s1118 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s870, 2
let lean_s1119 := by timed flipCongrArg lean_s1118 [Eq]
have lean_s1120 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1119 lean_s883
let lean_s1121 := by timed congr lean_s682 lean_s1120
have lean_s1122 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s870, 1
let lean_s1123 := by timed flipCongrArg lean_s1122 [Eq]
have lean_s1124 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1123 lean_s888
let lean_s1125 := by timed congr lean_s682 lean_s1124
have lean_s1126 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s870, 0
let lean_s1127 := by timed flipCongrArg lean_s1126 [Eq]
have lean_s1128 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1127 lean_s893
let lean_s1129 := by timed congr lean_s682 lean_s1128
have lean_s1130 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6))))))))) := by timed rfl
let lean_s1131 := by timed congr lean_s682 lean_s1130
have lean_s1132 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))) := by timed rfl
let lean_s1133 := by timed congr lean_s682 lean_s1132
have lean_s1134 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed rfl
let lean_s1135 := by timed congr lean_s682 lean_s1134
have lean_s1136 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s1137 := by timed congr lean_s682 lean_s1136
have lean_s1138 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s1139 := by timed congr lean_s682 lean_s1138
have lean_s1140 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s1141 := by timed congr lean_s682 lean_s1140
have lean_s1142 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s1143 := by timed congr lean_s682 lean_s1142
have lean_s1144 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s1145 := by timed congr lean_s682 lean_s1144
have lean_s1146 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s1147 := by timed congr lean_s682 lean_s1146
have lean_s1148 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))) := by timed rfl
let lean_s1149 := by timed congr lean_s1147 lean_s1148
let lean_s1150 := by timed congr lean_s1145 lean_s1149
let lean_s1151 := by timed congr lean_s1143 lean_s1150
let lean_s1152 := by timed congr lean_s1141 lean_s1151
let lean_s1153 := by timed congr lean_s1139 lean_s1152
let lean_s1154 := by timed congr lean_s1137 lean_s1153
let lean_s1155 := by timed congr lean_s1135 lean_s1154
let lean_s1156 := by timed congr lean_s1133 lean_s1155
let lean_s1157 := by timed congr lean_s1131 lean_s1156
let lean_s1158 := by timed congr lean_s1129 lean_s1157
let lean_s1159 := by timed congr lean_s1125 lean_s1158
let lean_s1160 := by timed congr lean_s1121 lean_s1159
let lean_s1161 := by timed congr lean_s1117 lean_s1160
let lean_s1162 := by timed congr lean_s1113 lean_s1161
let lean_s1163 := by timed congr lean_s1109 lean_s1162
let lean_s1164 := by timed congr lean_s1105 lean_s1163
let lean_s1165 := by timed congr lean_s1101 lean_s1164
let lean_s1166 := by timed congr lean_s1097 lean_s1165
let lean_s1167 := by timed congr lean_s1093 lean_s1166
let lean_s1168 := by timed congr lean_s1089 lean_s1167
let lean_s1169 := by timed congr lean_s1085 lean_s1168
let lean_s1170 := by timed congr lean_s1081 lean_s1169
let lean_s1171 := by timed congr lean_s1077 lean_s1170
let lean_s1172 := by timed congr lean_s1073 lean_s1171
let lean_s1173 := by timed congr lean_s1069 lean_s1172
let lean_s1174 := by timed congr lean_s1065 lean_s1173
let lean_s1175 := by timed congr lean_s1061 lean_s1174
let lean_s1176 := by timed congr lean_s1057 lean_s1175
let lean_s1177 := by timed congr lean_s1053 lean_s1176
let lean_s1178 := by timed congr lean_s1049 lean_s1177
let lean_s1179 := by timed congr lean_s1045 lean_s1178
let lean_s1180 := by timed congr lean_s1041 lean_s1179
let lean_s1181 := by timed congr lean_s1037 lean_s1180
let lean_s1182 := by timed congr lean_s1033 lean_s1181
let lean_s1183 := by timed congr lean_s1029 lean_s1182
let lean_s1184 := by timed congr lean_s1025 lean_s1183
let lean_s1185 := by timed congr lean_s1021 lean_s1184
let lean_s1186 := by timed congr lean_s1017 lean_s1185
let lean_s1187 := by timed congr lean_s1013 lean_s1186
let lean_s1188 := by timed congr lean_s1009 lean_s1187
let lean_s1189 := by timed congr lean_s1005 lean_s1188
let lean_s1190 := by timed congr lean_s1001 lean_s1189
let lean_s1191 := by timed congr lean_s997 lean_s1190
let lean_s1192 := by timed congr lean_s993 lean_s1191
let lean_s1193 := by timed congr lean_s989 lean_s1192
let lean_s1194 := by timed congr lean_s985 lean_s1193
let lean_s1195 := by timed congr lean_s981 lean_s1194
let lean_s1196 := by timed congr lean_s977 lean_s1195
let lean_s1197 := by timed congr lean_s973 lean_s1196
let lean_s1198 := by timed congr lean_s969 lean_s1197
let lean_s1199 := by timed congr lean_s965 lean_s1198
let lean_s1200 := by timed congr lean_s961 lean_s1199
let lean_s1201 := by timed congr lean_s957 lean_s1200
let lean_s1202 := by timed congr lean_s953 lean_s1201
let lean_s1203 := by timed congr lean_s949 lean_s1202
let lean_s1204 := by timed congr lean_s945 lean_s1203
let lean_s1205 := by timed congr lean_s941 lean_s1204
let lean_s1206 := by timed congr lean_s937 lean_s1205
let lean_s1207 := by timed congr lean_s933 lean_s1206
let lean_s1208 := by timed congr lean_s929 lean_s1207
let lean_s1209 := by timed congr lean_s925 lean_s1208
let lean_s1210 := by timed congr lean_s921 lean_s1209
let lean_s1211 := by timed congr lean_s917 lean_s1210
let lean_s1212 := by timed congr lean_s913 lean_s1211
let lean_s1213 := by timed congr lean_s909 lean_s1212
let lean_s1214 := by timed congr lean_s905 lean_s1213
let lean_s1215 := by timed congr lean_s900 lean_s1214
let lean_s1216 := by timed congr lean_s895 lean_s1215
let lean_s1217 := by timed congr lean_s890 lean_s1216
let lean_s1218 := by timed congr lean_s885 lean_s1217
let lean_s1219 := by timed congr lean_s880 lean_s1218
have lean_s1220 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s875 lean_s1219
have lean_s1221 : (Eq And And) := by timed rfl
let lean_s1222 := by timed congr lean_s1221 lean_r9
let lean_s1223 := by timed congr lean_s1221 lean_r10
let lean_s1224 := by timed congr lean_s1221 lean_r14
let lean_s1225 := by timed congr lean_s1221 lean_r19
let lean_s1226 := by timed congr lean_s1221 lean_r11
let lean_s1227 := by timed congr lean_s1221 lean_r23
let lean_s1228 := by timed congr lean_s1221 lean_r6
let lean_s1229 := by timed congr lean_s1221 lean_r23
let lean_s1230 := by timed congr lean_s1221 lean_r6
let lean_s1231 := by timed congr lean_s1221 lean_r9
let lean_s1232 := by timed congr lean_s1221 lean_r10
let lean_s1233 := by timed congr lean_s1221 lean_r14
let lean_s1234 := by timed congr lean_s1221 lean_r19
let lean_s1235 := by timed congr lean_s1221 lean_r11
let lean_s1236 := by timed congr lean_s1221 lean_r6
let lean_s1237 := by timed congr lean_s1221 lean_r9
let lean_s1238 := by timed congr lean_s1221 lean_r10
let lean_s1239 := by timed congr lean_s1221 lean_r14
let lean_s1240 := by timed congr lean_s1221 lean_r19
let lean_s1241 := by timed congr lean_s1221 lean_r11
let lean_s1242 := by timed congr lean_s1221 lean_r23
let lean_s1243 := by timed congr lean_s1221 lean_r9
let lean_s1244 := by timed congr lean_s1221 lean_r10
let lean_s1245 := by timed congr lean_s1221 lean_r14
let lean_s1246 := by timed congr lean_s1221 lean_r19
let lean_s1247 := by timed congr lean_s1221 lean_r11
let lean_s1248 := by timed congr lean_s1221 lean_r23
let lean_s1249 := by timed congr lean_s1221 lean_r6
let lean_s1250 := by timed congr lean_s1221 lean_r10
let lean_s1251 := by timed congr lean_s1221 lean_r14
let lean_s1252 := by timed congr lean_s1221 lean_r19
let lean_s1253 := by timed congr lean_s1221 lean_r11
let lean_s1254 := by timed congr lean_s1221 lean_r23
let lean_s1255 := by timed congr lean_s1221 lean_r6
let lean_s1256 := by timed congr lean_s1221 lean_r9
let lean_s1257 := by timed congr lean_s1221 lean_r14
let lean_s1258 := by timed congr lean_s1221 lean_r19
let lean_s1259 := by timed congr lean_s1221 lean_r11
let lean_s1260 := by timed congr lean_s1221 lean_r23
let lean_s1261 := by timed congr lean_s1221 lean_r6
let lean_s1262 := by timed congr lean_s1221 lean_r9
let lean_s1263 := by timed congr lean_s1221 lean_r10
let lean_s1264 := by timed congr lean_s1221 lean_r19
let lean_s1265 := by timed congr lean_s1221 lean_r11
let lean_s1266 := by timed congr lean_s1221 lean_r23
let lean_s1267 := by timed congr lean_s1221 lean_r6
let lean_s1268 := by timed congr lean_s1221 lean_r9
let lean_s1269 := by timed congr lean_s1221 lean_r10
let lean_s1270 := by timed congr lean_s1221 lean_r14
let lean_s1271 := by timed congr lean_s1221 lean_r11
let lean_s1272 := by timed congr lean_s1221 lean_r23
let lean_s1273 := by timed congr lean_s1221 lean_r6
let lean_s1274 := by timed congr lean_s1221 lean_r9
let lean_s1275 := by timed congr lean_s1221 lean_r10
let lean_s1276 := by timed congr lean_s1221 lean_r14
let lean_s1277 := by timed congr lean_s1221 lean_r19
let lean_s1278 := by timed congr lean_s1221 lean_r23
let lean_s1279 := by timed congr lean_s1221 lean_r6
let lean_s1280 := by timed congr lean_s1221 lean_r9
let lean_s1281 := by timed congr lean_s1221 lean_r10
let lean_s1282 := by timed congr lean_s1221 lean_r14
let lean_s1283 := by timed congr lean_s1221 lean_r19
let lean_s1284 := by timed congr lean_s1221 lean_r11
let lean_s1285 := by timed congr lean_s1221 lean_s586
let lean_s1286 := by timed congr lean_s1221 lean_s588
let lean_s1287 := by timed congr lean_s1221 lean_s591
let lean_s1288 := by timed congr lean_s1221 lean_s593
let lean_s1289 := by timed congr lean_s1221 lean_s595
let lean_s1290 := by timed congr lean_s1221 lean_s597
let lean_s1291 := by timed congr lean_s1221 lean_s599
let lean_s1292 := by timed congr lean_s1221 lean_s601
let lean_s1293 := by timed congr lean_s1221 lean_s603
let lean_s1294 := by timed congr lean_s1293 lean_s605
let lean_s1295 := by timed congr lean_s1292 lean_s1294
let lean_s1296 := by timed congr lean_s1291 lean_s1295
let lean_s1297 := by timed congr lean_s1290 lean_s1296
let lean_s1298 := by timed congr lean_s1289 lean_s1297
let lean_s1299 := by timed congr lean_s1288 lean_s1298
let lean_s1300 := by timed congr lean_s1287 lean_s1299
let lean_s1301 := by timed congr lean_s1286 lean_s1300
let lean_s1302 := by timed congr lean_s1285 lean_s1301
let lean_s1303 := by timed congr lean_s1284 lean_s1302
let lean_s1304 := by timed congr lean_s1283 lean_s1303
let lean_s1305 := by timed congr lean_s1282 lean_s1304
let lean_s1306 := by timed congr lean_s1281 lean_s1305
let lean_s1307 := by timed congr lean_s1280 lean_s1306
let lean_s1308 := by timed congr lean_s1279 lean_s1307
let lean_s1309 := by timed congr lean_s1278 lean_s1308
let lean_s1310 := by timed congr lean_s1277 lean_s1309
let lean_s1311 := by timed congr lean_s1276 lean_s1310
let lean_s1312 := by timed congr lean_s1275 lean_s1311
let lean_s1313 := by timed congr lean_s1274 lean_s1312
let lean_s1314 := by timed congr lean_s1273 lean_s1313
let lean_s1315 := by timed congr lean_s1272 lean_s1314
let lean_s1316 := by timed congr lean_s1271 lean_s1315
let lean_s1317 := by timed congr lean_s1270 lean_s1316
let lean_s1318 := by timed congr lean_s1269 lean_s1317
let lean_s1319 := by timed congr lean_s1268 lean_s1318
let lean_s1320 := by timed congr lean_s1267 lean_s1319
let lean_s1321 := by timed congr lean_s1266 lean_s1320
let lean_s1322 := by timed congr lean_s1265 lean_s1321
let lean_s1323 := by timed congr lean_s1264 lean_s1322
let lean_s1324 := by timed congr lean_s1263 lean_s1323
let lean_s1325 := by timed congr lean_s1262 lean_s1324
let lean_s1326 := by timed congr lean_s1261 lean_s1325
let lean_s1327 := by timed congr lean_s1260 lean_s1326
let lean_s1328 := by timed congr lean_s1259 lean_s1327
let lean_s1329 := by timed congr lean_s1258 lean_s1328
let lean_s1330 := by timed congr lean_s1257 lean_s1329
let lean_s1331 := by timed congr lean_s1256 lean_s1330
let lean_s1332 := by timed congr lean_s1255 lean_s1331
let lean_s1333 := by timed congr lean_s1254 lean_s1332
let lean_s1334 := by timed congr lean_s1253 lean_s1333
let lean_s1335 := by timed congr lean_s1252 lean_s1334
let lean_s1336 := by timed congr lean_s1251 lean_s1335
let lean_s1337 := by timed congr lean_s1250 lean_s1336
let lean_s1338 := by timed congr lean_s1249 lean_s1337
let lean_s1339 := by timed congr lean_s1248 lean_s1338
let lean_s1340 := by timed congr lean_s1247 lean_s1339
let lean_s1341 := by timed congr lean_s1246 lean_s1340
let lean_s1342 := by timed congr lean_s1245 lean_s1341
let lean_s1343 := by timed congr lean_s1244 lean_s1342
let lean_s1344 := by timed congr lean_s1243 lean_s1343
let lean_s1345 := by timed congr lean_s1242 lean_s1344
let lean_s1346 := by timed congr lean_s1241 lean_s1345
let lean_s1347 := by timed congr lean_s1240 lean_s1346
let lean_s1348 := by timed congr lean_s1239 lean_s1347
let lean_s1349 := by timed congr lean_s1238 lean_s1348
let lean_s1350 := by timed congr lean_s1237 lean_s1349
let lean_s1351 := by timed congr lean_s1236 lean_s1350
let lean_s1352 := by timed congr lean_s1235 lean_s1351
let lean_s1353 := by timed congr lean_s1234 lean_s1352
let lean_s1354 := by timed congr lean_s1233 lean_s1353
let lean_s1355 := by timed congr lean_s1232 lean_s1354
let lean_s1356 := by timed congr lean_s1231 lean_s1355
let lean_s1357 := by timed congr lean_s1230 lean_s1356
let lean_s1358 := by timed congr lean_s1229 lean_s1357
let lean_s1359 := by timed congr lean_s1228 lean_s1358
let lean_s1360 := by timed congr lean_s1227 lean_s1359
let lean_s1361 := by timed congr lean_s1226 lean_s1360
let lean_s1362 := by timed congr lean_s1225 lean_s1361
let lean_s1363 := by timed congr lean_s1224 lean_s1362
let lean_s1364 := by timed congr lean_s1223 lean_s1363
have lean_s1365 : (Eq (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s1222 lean_s1364
have lean_s1366 : (Eq (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))) := by timed Eq.trans lean_s1365 lean_r20
have lean_s1367 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))) := by timed Eq.trans lean_s1220 lean_s1366
let lean_s1368 := by timed Eq.trans lean_s681 lean_s1367
have lean_s1369 : (Eq And And) := by timed rfl
have lean_s1370 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6))))))))) := by timed rfl
let lean_s1371 := by timed congr lean_s1369 lean_s1370
have lean_s1372 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))) := by timed rfl
let lean_s1373 := by timed congr lean_s1369 lean_s1372
have lean_s1374 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by timed rfl
let lean_s1375 := by timed flipCongrArg lean_s1374 [Eq]
have lean_s1376 : (Eq x x) := by timed rfl
let lean_s1377 := by timed flipCongrArg lean_s1376 [Sum]
have lean_s1378 : (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed rfl
let lean_s1379 := by timed flipCongrArg lean_s1378 [Eq]
have lean_s1380 : (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed rfl
have lean_s1381 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) := by timed congr lean_s1379 lean_s1380
let lean_s1382 := by timed Eq.trans lean_r17 lean_s1381
have lean_s1383 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) True) := by timed Eq.trans lean_s1382 lean_r7
have lean_s1384 : (Eq (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed trueElim lean_s1383
have lean_s1385 : (Eq (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) := by timed congr lean_s1377 lean_s1384
have lean_s1386 : (Eq (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)))) := by timed flipCongrArg lean_s1385 [Pred]
let lean_s1387 := by timed flipCongrArg lean_s1386 [Sum]
have lean_s1388 : (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed rfl
let lean_s1389 := by timed flipCongrArg lean_s1388 [Eq]
have lean_s1390 : (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed rfl
have lean_s1391 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed congr lean_s1389 lean_s1390
let lean_s1392 := by timed Eq.trans lean_r33 lean_s1391
have lean_s1393 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) True) := by timed Eq.trans lean_s1392 lean_r31
have lean_s1394 : (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed trueElim lean_s1393
have lean_s1395 : (Eq (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed congr lean_s1387 lean_s1394
have lean_s1396 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s1375 lean_s1395
let lean_s1397 := by timed congr lean_s1369 lean_s1396
have lean_s1398 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s1399 := by timed congr lean_s1369 lean_s1398
have lean_s1400 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s1401 := by timed congr lean_s1369 lean_s1400
have lean_s1402 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s1403 := by timed congr lean_s1369 lean_s1402
have lean_s1404 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s1405 := by timed congr lean_s1369 lean_s1404
have lean_s1406 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s1407 := by timed congr lean_s1369 lean_s1406
have lean_s1408 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s1409 := by timed congr lean_s1369 lean_s1408
have lean_s1410 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))) := by timed rfl
let lean_s1411 := by timed congr lean_s1409 lean_s1410
let lean_s1412 := by timed congr lean_s1407 lean_s1411
let lean_s1413 := by timed congr lean_s1405 lean_s1412
let lean_s1414 := by timed congr lean_s1403 lean_s1413
let lean_s1415 := by timed congr lean_s1401 lean_s1414
let lean_s1416 := by timed congr lean_s1399 lean_s1415
let lean_s1417 := by timed congr lean_s1397 lean_s1416
let lean_s1418 := by timed congr lean_s1373 lean_s1417
have lean_s1419 : (Eq (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))) := by timed congr lean_s1371 lean_s1418
have lean_s1420 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Eq x (Int.ofNat 6)))) (Or (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Eq y (Int.ofNat 6)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 6)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 6)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 6)) Int))) (Int.ofNat 6)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (Not (Eq z (Int.ofNat 6)))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))))) := by timed Eq.trans lean_s1368 lean_s1419
have lean_s1421 : (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))))) := by timed eqResolve lean_a36 lean_s1420
have lean_s1422 : (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) := by andElim lean_s1421, 1
have lean_s1423 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 0))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 0))]
have lean_s1424 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))) :=
  (scope (fun lean_a46 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a47 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a48 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a49 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a50 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
            (scope (fun lean_a51 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) =>
              (scope (fun lean_a52 : (Eq x (Int.ofNat 0)) =>
                (scope (fun lean_a53 : (Eq y (Int.ofNat 0)) =>
                  let lean_s1424 := by timed And.intro lean_a47 lean_a49
                  let lean_s1425 := by timed And.intro lean_a53 lean_s1424
                  let lean_s1426 := by timed And.intro lean_a46 lean_s1425
                  let lean_s1427 := by timed And.intro lean_a52 lean_s1426
                  let lean_s1428 := by timed And.intro lean_a50 lean_s1427
                  let lean_s1429 := by timed And.intro lean_a48 lean_s1428
                  have lean_s1430 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))))))))) := by timed And.intro lean_a51 lean_s1429
                  have lean_s1431 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))) :=
                    (scope (fun lean_a52 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) =>
                      (scope (fun lean_a53 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                        (scope (fun lean_a54 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                          (scope (fun lean_a55 : (Eq x (Int.ofNat 0)) =>
                            (scope (fun lean_a56 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                              (scope (fun lean_a57 : (Eq y (Int.ofNat 0)) =>
                                (scope (fun lean_a58 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                                  (scope (fun lean_a59 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                                    have lean_s1431 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a55
                                    have lean_s1432 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s1431
                                    let lean_s1433 := by timed flipCongrArg lean_s1432 [Sum]
                                    have lean_s1434 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a57
                                    have lean_s1435 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1434
                                    have lean_s1436 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1435 [Succ]
                                    have lean_s1437 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a56
                                    have lean_s1438 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1437
                                    have lean_s1439 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1436 lean_s1438
                                    have lean_s1440 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s1433 lean_s1439
                                    have lean_s1441 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a54
                                    have lean_s1442 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s1441
                                    have lean_s1443 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1440 lean_s1442
                                    have lean_s1444 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1443 [Pred]
                                    have lean_s1445 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a53
                                    have lean_s1446 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1445
                                    have lean_s1447 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1444 lean_s1446
                                    let lean_s1448 := by timed flipCongrArg lean_s1447 [Sum]
                                    let lean_s1449 := by timed flipCongrArg lean_s1435 [Sum]
                                    let lean_s1450 := by timed flipCongrArg lean_s1432 [Sum]
                                    have lean_s1451 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1450 lean_s1435
                                    have lean_s1452 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a59
                                    have lean_s1453 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s1452
                                    have lean_s1454 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s1451 lean_s1453
                                    have lean_s1455 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1454 [Pred]
                                    have lean_s1456 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a58
                                    have lean_s1457 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s1456
                                    have lean_s1458 : (Eq (Pred (Sum x y)) (Int.ofNat 6)) := by timed Eq.trans lean_s1455 lean_s1457
                                    have lean_s1459 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 6))) := by timed congr lean_s1449 lean_s1458
                                    have lean_s1460 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 0) (Int.ofNat 6))) := by timed Eq.symm lean_a52
                                    have lean_s1461 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) := by timed Eq.symm lean_s1460
                                    have lean_s1462 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 6)) := by timed Eq.trans lean_s1459 lean_s1461
                                    have lean_s1463 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 6))) := by timed congr lean_s1448 lean_s1462
                                    have lean_s1464 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed Eq.trans lean_s1463 lean_s1461
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s1464
                    ))))))))))))))))
                  have lean_s1432 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s1431, 8
                  have lean_s1433 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed modusPonens lean_s1430 lean_s1432
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s1433
  ))))))))))))))))
have lean_s1425 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s1424, 8
have lean_s1426 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed impliesElim lean_s1425
have lean_s1427 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))))))))) := by R1 lean_s1423, lean_s1426, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0))))))))), [(- 1), (- 1)]
have lean_s1428 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))))))))))) := by permutateOr lean_s1427, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
have lean_s1429 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by andElim lean_s1421, 9
let lean_s1430 := by R1 lean_s1428, lean_s1429, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)), [(- 1), 0]
have lean_s1431 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 3))]
have lean_s1432 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a52 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a53 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
      (scope (fun lean_a54 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a55 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
          (scope (fun lean_a56 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
            (scope (fun lean_a57 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
              (scope (fun lean_a58 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                (scope (fun lean_a59 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a60 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1432 := by timed And.intro lean_a53 lean_a55
                    let lean_s1433 := by timed And.intro lean_a57 lean_s1432
                    let lean_s1434 := by timed And.intro lean_a60 lean_s1433
                    let lean_s1435 := by timed And.intro lean_a52 lean_s1434
                    let lean_s1436 := by timed And.intro lean_a59 lean_s1435
                    let lean_s1437 := by timed And.intro lean_a56 lean_s1436
                    let lean_s1438 := by timed And.intro lean_a54 lean_s1437
                    have lean_s1439 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a58 lean_s1438
                    have lean_s1440 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a59 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                        (scope (fun lean_a60 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                          (scope (fun lean_a61 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
                            (scope (fun lean_a62 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a63 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a64 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a65 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a66 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a67 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                                        have lean_s1440 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a62
                                        have lean_s1441 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1440
                                        let lean_s1442 := by timed flipCongrArg lean_s1441 [Sum]
                                        have lean_s1443 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a64
                                        have lean_s1444 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1443
                                        have lean_s1445 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1444 [Succ]
                                        have lean_s1446 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a63
                                        have lean_s1447 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1446
                                        have lean_s1448 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1445 lean_s1447
                                        have lean_s1449 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s1442 lean_s1448
                                        have lean_s1450 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a61
                                        have lean_s1451 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by timed Eq.symm lean_s1450
                                        have lean_s1452 : (Eq (Sum x (Succ y)) (Int.ofNat 6)) := by timed Eq.trans lean_s1449 lean_s1451
                                        have lean_s1453 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s1452 [Pred]
                                        have lean_s1454 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a60
                                        have lean_s1455 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s1454
                                        have lean_s1456 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1453 lean_s1455
                                        let lean_s1457 := by timed flipCongrArg lean_s1456 [Sum]
                                        let lean_s1458 := by timed flipCongrArg lean_s1444 [Sum]
                                        let lean_s1459 := by timed flipCongrArg lean_s1441 [Sum]
                                        have lean_s1460 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s1459 lean_s1444
                                        have lean_s1461 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed Eq.symm lean_a67
                                        have lean_s1462 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by timed Eq.symm lean_s1461
                                        have lean_s1463 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s1460 lean_s1462
                                        have lean_s1464 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1463 [Pred]
                                        have lean_s1465 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a66
                                        have lean_s1466 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1465
                                        have lean_s1467 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1464 lean_s1466
                                        have lean_s1468 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s1458 lean_s1467
                                        have lean_s1469 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a65
                                        have lean_s1470 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s1469
                                        have lean_s1471 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1468 lean_s1470
                                        have lean_s1472 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s1457 lean_s1471
                                        have lean_s1473 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a59
                                        have lean_s1474 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1473
                                        have lean_s1475 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s1472 lean_s1474
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1475
                      ))))))))))))))))))
                    have lean_s1441 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1440, 9
                    have lean_s1442 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s1439 lean_s1441
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1442
  ))))))))))))))))))
have lean_s1433 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1432, 9
have lean_s1434 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s1433
have lean_s1435 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s1431, lean_s1434, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1436 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s1435, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s1437 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1438 : (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by andElim lean_s1437, 66
have lean_s1439 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1440 := by timed flipCongrArg lean_s1439 [Eq]
have lean_s1441 : (Eq (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed rfl
have lean_s1442 : (Eq (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s1440 lean_s1441
have lean_s1443 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed eqResolve lean_s1438 lean_s1442
have lean_s1444 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1445 : (Not (Eq z (Int.ofNat 0))) := by andElim lean_s1444, 67
have lean_s1446 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1447 := by timed flipCongrArg lean_s1446 [Eq]
have lean_s1448 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s1449 : (Eq (Eq z (Int.ofNat 0)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed congr lean_s1447 lean_s1448
have lean_s1450 : (Eq (Not (Eq z (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed flipCongrArg lean_s1449 [Not]
have lean_s1451 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed eqResolve lean_s1445 lean_s1450
have lean_s1452 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1453 : (Not (Eq z (Int.ofNat 1))) := by andElim lean_s1452, 68
have lean_s1454 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1455 := by timed flipCongrArg lean_s1454 [Eq]
have lean_s1456 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s1457 : (Eq (Eq z (Int.ofNat 1)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed congr lean_s1455 lean_s1456
have lean_s1458 : (Eq (Not (Eq z (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed flipCongrArg lean_s1457 [Not]
have lean_s1459 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed eqResolve lean_s1453 lean_s1458
have lean_s1460 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1461 : (Not (Eq z (Int.ofNat 2))) := by andElim lean_s1460, 69
have lean_s1462 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1463 := by timed flipCongrArg lean_s1462 [Eq]
have lean_s1464 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s1465 : (Eq (Eq z (Int.ofNat 2)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed congr lean_s1463 lean_s1464
have lean_s1466 : (Eq (Not (Eq z (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed flipCongrArg lean_s1465 [Not]
have lean_s1467 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed eqResolve lean_s1461 lean_s1466
have lean_s1468 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1469 : (Not (Eq z (Int.ofNat 3))) := by andElim lean_s1468, 70
have lean_s1470 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1471 := by timed flipCongrArg lean_s1470 [Eq]
have lean_s1472 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s1473 : (Eq (Eq z (Int.ofNat 3)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed congr lean_s1471 lean_s1472
have lean_s1474 : (Eq (Not (Eq z (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed flipCongrArg lean_s1473 [Not]
have lean_s1475 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed eqResolve lean_s1469 lean_s1474
have lean_s1476 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1477 : (Not (Eq z (Int.ofNat 4))) := by andElim lean_s1476, 71
have lean_s1478 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1479 := by timed flipCongrArg lean_s1478 [Eq]
have lean_s1480 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s1481 : (Eq (Eq z (Int.ofNat 4)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed congr lean_s1479 lean_s1480
have lean_s1482 : (Eq (Not (Eq z (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed flipCongrArg lean_s1481 [Not]
have lean_s1483 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed eqResolve lean_s1477 lean_s1482
have lean_s1484 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1485 : (Not (Eq z (Int.ofNat 5))) := by andElim lean_s1484, 72
have lean_s1486 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1487 := by timed flipCongrArg lean_s1486 [Eq]
have lean_s1488 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s1489 : (Eq (Eq z (Int.ofNat 5)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed congr lean_s1487 lean_s1488
have lean_s1490 : (Eq (Not (Eq z (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed flipCongrArg lean_s1489 [Not]
have lean_s1491 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed eqResolve lean_s1485 lean_s1490
have lean_s1492 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (And (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 6)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a36 lean_s273
have lean_s1493 : (Not (Eq z (Int.ofNat 6))) := by andElim lean_s1492, 73
have lean_s1494 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s405, 65
let lean_s1495 := by timed flipCongrArg lean_s1494 [Eq]
have lean_s1496 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
have lean_s1497 : (Eq (Eq z (Int.ofNat 6)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed congr lean_s1495 lean_s1496
have lean_s1498 : (Eq (Not (Eq z (Int.ofNat 6))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))) := by timed flipCongrArg lean_s1497 [Not]
have lean_s1499 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed eqResolve lean_s1493 lean_s1498
have lean_s1500 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s807, 0
have lean_s1501 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s805, 1
have lean_s1502 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s803, 2
have lean_s1503 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s801, 3
have lean_s1504 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s799, 4
have lean_s1505 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s797, 5
have lean_s1506 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s795, 6
have lean_s1507 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s793, 7
have lean_s1508 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s791, 8
have lean_s1509 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s789, 9
have lean_s1510 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s787, 10
have lean_s1511 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s785, 11
have lean_s1512 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s783, 12
have lean_s1513 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s781, 13
have lean_s1514 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s779, 14
have lean_s1515 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s777, 15
have lean_s1516 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s775, 16
have lean_s1517 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s773, 17
have lean_s1518 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s771, 18
have lean_s1519 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s769, 19
have lean_s1520 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) := by andElim lean_s767, 20
have lean_s1521 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s765, 21
have lean_s1522 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s763, 22
have lean_s1523 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s761, 23
have lean_s1524 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s759, 24
have lean_s1525 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s757, 25
have lean_s1526 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s755, 26
have lean_s1527 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s753, 27
have lean_s1528 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s751, 28
have lean_s1529 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s749, 29
have lean_s1530 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s747, 30
have lean_s1531 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s745, 31
have lean_s1532 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by andElim lean_s743, 32
have lean_s1533 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s741, 33
have lean_s1534 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by andElim lean_s739, 34
have lean_s1535 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s737, 35
have lean_s1536 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s735, 36
have lean_s1537 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s733, 37
have lean_s1538 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by andElim lean_s731, 38
have lean_s1539 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s729, 39
have lean_s1540 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s727, 40
have lean_s1541 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by andElim lean_s725, 41
have lean_s1542 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s723, 42
have lean_s1543 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s721, 43
have lean_s1544 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by andElim lean_s719, 44
have lean_s1545 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s717, 45
have lean_s1546 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s715, 46
have lean_s1547 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s713, 47
have lean_s1548 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by andElim lean_s711, 48
have lean_s1549 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s709, 49
have lean_s1550 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by andElim lean_s707, 50
have lean_s1551 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s705, 51
have lean_s1552 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s703, 52
have lean_s1553 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s701, 53
have lean_s1554 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s699, 54
have lean_s1555 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by andElim lean_s697, 55
have lean_s1556 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s695, 56
have lean_s1557 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s693, 57
have lean_s1558 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s691, 58
have lean_s1559 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s689, 59
have lean_s1560 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s687, 60
have lean_s1561 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s685, 61
have lean_s1562 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s683, 62
let lean_s1563 := by timed And.intro lean_s1561 lean_s1562
let lean_s1564 := by timed And.intro lean_s1560 lean_s1563
let lean_s1565 := by timed And.intro lean_s1559 lean_s1564
let lean_s1566 := by timed And.intro lean_s1558 lean_s1565
let lean_s1567 := by timed And.intro lean_s1557 lean_s1566
let lean_s1568 := by timed And.intro lean_s1556 lean_s1567
let lean_s1569 := by timed And.intro lean_s1555 lean_s1568
let lean_s1570 := by timed And.intro lean_s1554 lean_s1569
let lean_s1571 := by timed And.intro lean_s1553 lean_s1570
let lean_s1572 := by timed And.intro lean_s1552 lean_s1571
let lean_s1573 := by timed And.intro lean_s1551 lean_s1572
let lean_s1574 := by timed And.intro lean_s1550 lean_s1573
let lean_s1575 := by timed And.intro lean_s1549 lean_s1574
let lean_s1576 := by timed And.intro lean_s1548 lean_s1575
let lean_s1577 := by timed And.intro lean_s1547 lean_s1576
let lean_s1578 := by timed And.intro lean_s1546 lean_s1577
let lean_s1579 := by timed And.intro lean_s1545 lean_s1578
let lean_s1580 := by timed And.intro lean_s1544 lean_s1579
let lean_s1581 := by timed And.intro lean_s1543 lean_s1580
let lean_s1582 := by timed And.intro lean_s1542 lean_s1581
let lean_s1583 := by timed And.intro lean_s1541 lean_s1582
let lean_s1584 := by timed And.intro lean_s1540 lean_s1583
let lean_s1585 := by timed And.intro lean_s1539 lean_s1584
let lean_s1586 := by timed And.intro lean_s1538 lean_s1585
let lean_s1587 := by timed And.intro lean_s1537 lean_s1586
let lean_s1588 := by timed And.intro lean_s1536 lean_s1587
let lean_s1589 := by timed And.intro lean_s1535 lean_s1588
let lean_s1590 := by timed And.intro lean_s1534 lean_s1589
let lean_s1591 := by timed And.intro lean_s1533 lean_s1590
let lean_s1592 := by timed And.intro lean_s1532 lean_s1591
let lean_s1593 := by timed And.intro lean_s1531 lean_s1592
let lean_s1594 := by timed And.intro lean_s1530 lean_s1593
let lean_s1595 := by timed And.intro lean_s1529 lean_s1594
let lean_s1596 := by timed And.intro lean_s1528 lean_s1595
let lean_s1597 := by timed And.intro lean_s1527 lean_s1596
let lean_s1598 := by timed And.intro lean_s1526 lean_s1597
let lean_s1599 := by timed And.intro lean_s1525 lean_s1598
let lean_s1600 := by timed And.intro lean_s1524 lean_s1599
let lean_s1601 := by timed And.intro lean_s1523 lean_s1600
let lean_s1602 := by timed And.intro lean_s1522 lean_s1601
let lean_s1603 := by timed And.intro lean_s1521 lean_s1602
let lean_s1604 := by timed And.intro lean_s1520 lean_s1603
let lean_s1605 := by timed And.intro lean_s1519 lean_s1604
let lean_s1606 := by timed And.intro lean_s1518 lean_s1605
let lean_s1607 := by timed And.intro lean_s1517 lean_s1606
let lean_s1608 := by timed And.intro lean_s1516 lean_s1607
let lean_s1609 := by timed And.intro lean_s1515 lean_s1608
let lean_s1610 := by timed And.intro lean_s1514 lean_s1609
let lean_s1611 := by timed And.intro lean_s1513 lean_s1610
let lean_s1612 := by timed And.intro lean_s1512 lean_s1611
let lean_s1613 := by timed And.intro lean_s1511 lean_s1612
let lean_s1614 := by timed And.intro lean_s1510 lean_s1613
let lean_s1615 := by timed And.intro lean_s1509 lean_s1614
let lean_s1616 := by timed And.intro lean_s1508 lean_s1615
let lean_s1617 := by timed And.intro lean_s1507 lean_s1616
let lean_s1618 := by timed And.intro lean_s1506 lean_s1617
let lean_s1619 := by timed And.intro lean_s1505 lean_s1618
let lean_s1620 := by timed And.intro lean_s1504 lean_s1619
let lean_s1621 := by timed And.intro lean_s1503 lean_s1620
let lean_s1622 := by timed And.intro lean_s1502 lean_s1621
let lean_s1623 := by timed And.intro lean_s1501 lean_s1622
let lean_s1624 := by timed And.intro lean_s1500 lean_s1623
let lean_s1625 := by timed And.intro lean_s1499 lean_s1624
let lean_s1626 := by timed And.intro lean_s1491 lean_s1625
let lean_s1627 := by timed And.intro lean_s1483 lean_s1626
let lean_s1628 := by timed And.intro lean_s1475 lean_s1627
let lean_s1629 := by timed And.intro lean_s1467 lean_s1628
let lean_s1630 := by timed And.intro lean_s1459 lean_s1629
let lean_s1631 := by timed And.intro lean_s1451 lean_s1630
have lean_s1632 : (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed And.intro lean_s1443 lean_s1631
have lean_s1633 : (Eq And And) := by timed rfl
let lean_s1634 := by timed flipCongrArg lean_s1374 [Eq]
have lean_s1635 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s1634 lean_s1395
let lean_s1636 := by timed congr lean_s1633 lean_s1635
have lean_s1637 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s1638 := by timed congr lean_s1633 lean_s1637
have lean_s1639 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s1640 := by timed congr lean_s1633 lean_s1639
have lean_s1641 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s1642 := by timed congr lean_s1633 lean_s1641
have lean_s1643 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s1644 := by timed congr lean_s1633 lean_s1643
have lean_s1645 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s1646 := by timed congr lean_s1633 lean_s1645
have lean_s1647 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s1648 := by timed congr lean_s1633 lean_s1647
have lean_s1649 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)))) := by timed rfl
let lean_s1650 := by timed congr lean_s1633 lean_s1649
have lean_s1651 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s1652 := by timed congr lean_s1633 lean_s1651
have lean_s1653 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s1654 := by timed congr lean_s1633 lean_s1653
have lean_s1655 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s1656 := by timed congr lean_s1633 lean_s1655
have lean_s1657 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s1658 := by timed congr lean_s1633 lean_s1657
have lean_s1659 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s1660 := by timed congr lean_s1633 lean_s1659
have lean_s1661 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s1662 := by timed congr lean_s1633 lean_s1661
have lean_s1663 : (Eq (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) := by timed rfl
let lean_s1664 := by timed congr lean_s1633 lean_s1663
have lean_s1665 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s1666 := by timed congr lean_s1633 lean_s1665
have lean_s1667 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s1668 := by timed congr lean_s1633 lean_s1667
have lean_s1669 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s1670 := by timed congr lean_s1633 lean_s1669
have lean_s1671 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s1672 := by timed congr lean_s1633 lean_s1671
have lean_s1673 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s1674 := by timed congr lean_s1633 lean_s1673
have lean_s1675 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s1676 := by timed congr lean_s1633 lean_s1675
have lean_s1677 : (Eq (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) := by timed rfl
let lean_s1678 := by timed congr lean_s1633 lean_s1677
have lean_s1679 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
let lean_s1680 := by timed congr lean_s1633 lean_s1679
have lean_s1681 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) := by timed rfl
let lean_s1682 := by timed congr lean_s1633 lean_s1681
have lean_s1683 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) := by timed rfl
let lean_s1684 := by timed congr lean_s1633 lean_s1683
have lean_s1685 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s1686 := by timed congr lean_s1633 lean_s1685
have lean_s1687 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s1688 := by timed congr lean_s1633 lean_s1687
have lean_s1689 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s1690 := by timed congr lean_s1633 lean_s1689
have lean_s1691 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) := by timed rfl
let lean_s1692 := by timed congr lean_s1633 lean_s1691
have lean_s1693 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s1694 := by timed congr lean_s1633 lean_s1693
have lean_s1695 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s1696 := by timed congr lean_s1633 lean_s1695
have lean_s1697 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s1698 := by timed congr lean_s1633 lean_s1697
have lean_s1699 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s1700 := by timed congr lean_s1633 lean_s1699
have lean_s1701 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s1702 := by timed congr lean_s1633 lean_s1701
have lean_s1703 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s1704 := by timed congr lean_s1633 lean_s1703
have lean_s1705 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) := by timed rfl
let lean_s1706 := by timed congr lean_s1633 lean_s1705
have lean_s1707 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) := by timed rfl
let lean_s1708 := by timed congr lean_s1633 lean_s1707
have lean_s1709 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s1710 := by timed congr lean_s1633 lean_s1709
have lean_s1711 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s1712 := by timed congr lean_s1633 lean_s1711
have lean_s1713 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s1714 := by timed congr lean_s1633 lean_s1713
have lean_s1715 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) := by timed rfl
let lean_s1716 := by timed congr lean_s1633 lean_s1715
have lean_s1717 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s1718 := by timed congr lean_s1633 lean_s1717
have lean_s1719 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) := by timed rfl
let lean_s1720 := by timed congr lean_s1633 lean_s1719
have lean_s1721 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s1722 := by timed congr lean_s1633 lean_s1721
have lean_s1723 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s1724 := by timed congr lean_s1633 lean_s1723
have lean_s1725 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s1726 := by timed congr lean_s1633 lean_s1725
have lean_s1727 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) := by timed rfl
let lean_s1728 := by timed congr lean_s1633 lean_s1727
have lean_s1729 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) := by timed rfl
let lean_s1730 := by timed congr lean_s1633 lean_s1729
have lean_s1731 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) := by timed rfl
let lean_s1732 := by timed congr lean_s1633 lean_s1731
have lean_s1733 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) := by timed rfl
let lean_s1734 := by timed congr lean_s1633 lean_s1733
have lean_s1735 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s1736 := by timed congr lean_s1633 lean_s1735
have lean_s1737 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s1738 := by timed congr lean_s1633 lean_s1737
have lean_s1739 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) := by timed rfl
let lean_s1740 := by timed congr lean_s1633 lean_s1739
have lean_s1741 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) := by timed rfl
let lean_s1742 := by timed congr lean_s1633 lean_s1741
have lean_s1743 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) := by timed rfl
let lean_s1744 := by timed congr lean_s1633 lean_s1743
have lean_s1745 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) := by timed rfl
let lean_s1746 := by timed congr lean_s1633 lean_s1745
have lean_s1747 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) := by timed rfl
let lean_s1748 := by timed congr lean_s1633 lean_s1747
have lean_s1749 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s1750 := by timed congr lean_s1633 lean_s1749
have lean_s1751 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) := by timed rfl
let lean_s1752 := by timed congr lean_s1633 lean_s1751
have lean_s1753 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) := by timed rfl
let lean_s1754 := by timed congr lean_s1633 lean_s1753
have lean_s1755 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) := by timed rfl
let lean_s1756 := by timed congr lean_s1633 lean_s1755
have lean_s1757 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) := by timed rfl
let lean_s1758 := by timed congr lean_s1633 lean_s1757
have lean_s1759 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s1760 := by timed congr lean_s1633 lean_s1759
have lean_s1761 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) := by timed rfl
let lean_s1762 := by timed congr lean_s1633 lean_s1761
have lean_s1763 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s1764 := by timed congr lean_s1633 lean_s1763
have lean_s1765 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s1766 := by timed congr lean_s1633 lean_s1765
have lean_s1767 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s1768 := by timed congr lean_s1633 lean_s1767
have lean_s1769 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s1770 := by timed congr lean_s1633 lean_s1769
have lean_s1771 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s1772 := by timed congr lean_s1633 lean_s1771
have lean_s1773 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s1774 := by timed congr lean_s1633 lean_s1773
have lean_s1775 : (Eq (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) := by timed rfl
let lean_s1776 := by timed congr lean_s1774 lean_s1775
let lean_s1777 := by timed congr lean_s1772 lean_s1776
let lean_s1778 := by timed congr lean_s1770 lean_s1777
let lean_s1779 := by timed congr lean_s1768 lean_s1778
let lean_s1780 := by timed congr lean_s1766 lean_s1779
let lean_s1781 := by timed congr lean_s1764 lean_s1780
let lean_s1782 := by timed congr lean_s1762 lean_s1781
let lean_s1783 := by timed congr lean_s1760 lean_s1782
let lean_s1784 := by timed congr lean_s1758 lean_s1783
let lean_s1785 := by timed congr lean_s1756 lean_s1784
let lean_s1786 := by timed congr lean_s1754 lean_s1785
let lean_s1787 := by timed congr lean_s1752 lean_s1786
let lean_s1788 := by timed congr lean_s1750 lean_s1787
let lean_s1789 := by timed congr lean_s1748 lean_s1788
let lean_s1790 := by timed congr lean_s1746 lean_s1789
let lean_s1791 := by timed congr lean_s1744 lean_s1790
let lean_s1792 := by timed congr lean_s1742 lean_s1791
let lean_s1793 := by timed congr lean_s1740 lean_s1792
let lean_s1794 := by timed congr lean_s1738 lean_s1793
let lean_s1795 := by timed congr lean_s1736 lean_s1794
let lean_s1796 := by timed congr lean_s1734 lean_s1795
let lean_s1797 := by timed congr lean_s1732 lean_s1796
let lean_s1798 := by timed congr lean_s1730 lean_s1797
let lean_s1799 := by timed congr lean_s1728 lean_s1798
let lean_s1800 := by timed congr lean_s1726 lean_s1799
let lean_s1801 := by timed congr lean_s1724 lean_s1800
let lean_s1802 := by timed congr lean_s1722 lean_s1801
let lean_s1803 := by timed congr lean_s1720 lean_s1802
let lean_s1804 := by timed congr lean_s1718 lean_s1803
let lean_s1805 := by timed congr lean_s1716 lean_s1804
let lean_s1806 := by timed congr lean_s1714 lean_s1805
let lean_s1807 := by timed congr lean_s1712 lean_s1806
let lean_s1808 := by timed congr lean_s1710 lean_s1807
let lean_s1809 := by timed congr lean_s1708 lean_s1808
let lean_s1810 := by timed congr lean_s1706 lean_s1809
let lean_s1811 := by timed congr lean_s1704 lean_s1810
let lean_s1812 := by timed congr lean_s1702 lean_s1811
let lean_s1813 := by timed congr lean_s1700 lean_s1812
let lean_s1814 := by timed congr lean_s1698 lean_s1813
let lean_s1815 := by timed congr lean_s1696 lean_s1814
let lean_s1816 := by timed congr lean_s1694 lean_s1815
let lean_s1817 := by timed congr lean_s1692 lean_s1816
let lean_s1818 := by timed congr lean_s1690 lean_s1817
let lean_s1819 := by timed congr lean_s1688 lean_s1818
let lean_s1820 := by timed congr lean_s1686 lean_s1819
let lean_s1821 := by timed congr lean_s1684 lean_s1820
let lean_s1822 := by timed congr lean_s1682 lean_s1821
let lean_s1823 := by timed congr lean_s1680 lean_s1822
let lean_s1824 := by timed congr lean_s1678 lean_s1823
let lean_s1825 := by timed congr lean_s1676 lean_s1824
let lean_s1826 := by timed congr lean_s1674 lean_s1825
let lean_s1827 := by timed congr lean_s1672 lean_s1826
let lean_s1828 := by timed congr lean_s1670 lean_s1827
let lean_s1829 := by timed congr lean_s1668 lean_s1828
let lean_s1830 := by timed congr lean_s1666 lean_s1829
let lean_s1831 := by timed congr lean_s1664 lean_s1830
let lean_s1832 := by timed congr lean_s1662 lean_s1831
let lean_s1833 := by timed congr lean_s1660 lean_s1832
let lean_s1834 := by timed congr lean_s1658 lean_s1833
let lean_s1835 := by timed congr lean_s1656 lean_s1834
let lean_s1836 := by timed congr lean_s1654 lean_s1835
let lean_s1837 := by timed congr lean_s1652 lean_s1836
let lean_s1838 := by timed congr lean_s1650 lean_s1837
let lean_s1839 := by timed congr lean_s1648 lean_s1838
let lean_s1840 := by timed congr lean_s1646 lean_s1839
let lean_s1841 := by timed congr lean_s1644 lean_s1840
let lean_s1842 := by timed congr lean_s1642 lean_s1841
let lean_s1843 := by timed congr lean_s1640 lean_s1842
let lean_s1844 := by timed congr lean_s1638 lean_s1843
have lean_s1845 : (Eq (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s1636 lean_s1844
have lean_s1846 : (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 6)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_s1632 lean_s1845
have lean_s1847 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s1846, 57
let lean_s1848 := by R2 lean_s1436, lean_s1847, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1849 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s1846, 47
let lean_s1850 := by R2 lean_s1848, lean_s1849, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1851 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by andElim lean_s1846, 40
let lean_s1852 := by R2 lean_s1850, lean_s1851, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), [(- 1), 0]
have lean_s1853 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s1846, 39
let lean_s1854 := by R2 lean_s1852, lean_s1853, (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1855 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s1846, 21
let lean_s1856 := by R2 lean_s1854, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1857 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s1846, 20
let lean_s1858 := by R2 lean_s1856, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1859 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s1846, 11
let lean_s1860 := by R2 lean_s1858, lean_s1859, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1861 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by andElim lean_s1421, 8
let lean_s1862 := by R1 lean_s1860, lean_s1861, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
let lean_s1863 := by R2 lean_s1862, lean_s1422, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1864 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 0))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 0))]
have lean_s1865 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) :=
  (scope (fun lean_a59 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a60 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a61 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a62 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
          (scope (fun lean_a63 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
            (scope (fun lean_a64 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
              (scope (fun lean_a65 : (Eq x (Int.ofNat 2)) =>
                (scope (fun lean_a66 : (Eq y (Int.ofNat 0)) =>
                  let lean_s1865 := by timed And.intro lean_a60 lean_a63
                  let lean_s1866 := by timed And.intro lean_a62 lean_s1865
                  let lean_s1867 := by timed And.intro lean_a66 lean_s1866
                  let lean_s1868 := by timed And.intro lean_a59 lean_s1867
                  let lean_s1869 := by timed And.intro lean_a65 lean_s1868
                  let lean_s1870 := by timed And.intro lean_a61 lean_s1869
                  have lean_s1871 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))))))))) := by timed And.intro lean_a64 lean_s1870
                  have lean_s1872 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) :=
                    (scope (fun lean_a63 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
                      (scope (fun lean_a64 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                        (scope (fun lean_a65 : (Eq x (Int.ofNat 2)) =>
                          (scope (fun lean_a66 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                            (scope (fun lean_a67 : (Eq y (Int.ofNat 0)) =>
                              (scope (fun lean_a68 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                                (scope (fun lean_a69 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                  (scope (fun lean_a70 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                                    have lean_s1872 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a65
                                    have lean_s1873 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1872
                                    let lean_s1874 := by timed flipCongrArg lean_s1873 [Sum]
                                    have lean_s1875 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a67
                                    have lean_s1876 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1875
                                    have lean_s1877 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1876 [Succ]
                                    have lean_s1878 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a66
                                    have lean_s1879 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1878
                                    have lean_s1880 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1877 lean_s1879
                                    have lean_s1881 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s1874 lean_s1880
                                    have lean_s1882 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed Eq.symm lean_a63
                                    have lean_s1883 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by timed Eq.symm lean_s1882
                                    have lean_s1884 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1881 lean_s1883
                                    have lean_s1885 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1884 [Pred]
                                    have lean_s1886 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a64
                                    have lean_s1887 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1886
                                    have lean_s1888 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1885 lean_s1887
                                    let lean_s1889 := by timed flipCongrArg lean_s1888 [Sum]
                                    let lean_s1890 := by timed flipCongrArg lean_s1876 [Sum]
                                    let lean_s1891 := by timed flipCongrArg lean_s1873 [Sum]
                                    have lean_s1892 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s1891 lean_s1876
                                    have lean_s1893 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a70
                                    have lean_s1894 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s1893
                                    have lean_s1895 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s1892 lean_s1894
                                    have lean_s1896 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1895 [Pred]
                                    have lean_s1897 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a69
                                    have lean_s1898 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1897
                                    have lean_s1899 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1896 lean_s1898
                                    have lean_s1900 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s1890 lean_s1899
                                    have lean_s1901 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a68
                                    have lean_s1902 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s1901
                                    have lean_s1903 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1900 lean_s1902
                                    have lean_s1904 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s1889 lean_s1903
                                    have lean_s1905 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1904 lean_s1883
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1905
                    ))))))))))))))))
                  have lean_s1873 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1872, 8
                  have lean_s1874 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1871 lean_s1873
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1874
  ))))))))))))))))
have lean_s1866 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1865, 8
have lean_s1867 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1866
have lean_s1868 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) := by R1 lean_s1864, lean_s1867, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0))))))))), [(- 1), (- 1)]
have lean_s1869 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))))))))))) := by permutateOr lean_s1868, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
let lean_s1870 := by R1 lean_s1863, lean_s1869, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1871 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s1846, 37
let lean_s1872 := by R2 lean_s1870, lean_s1871, (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1873 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s1846, 36
let lean_s1874 := by R2 lean_s1872, lean_s1873, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1875 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s1846, 23
let lean_s1876 := by R2 lean_s1874, lean_s1875, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1877 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s1846, 18
let lean_s1878 := by R2 lean_s1876, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1879 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s1846, 17
let lean_s1880 := by R2 lean_s1878, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1881 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s1846, 8
let lean_s1882 := by R2 lean_s1880, lean_s1881, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1883 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by andElim lean_s1421, 6
have lean_s1884 : (Or (Not (Eq x (Int.ofNat 2))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Not (Eq x (Int.ofNat 2))))))))) := by R1 lean_s1882, lean_s1883, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1885 : (Or (Not (Eq x (Int.ofNat 2))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))) := by factor lean_s1884, 6
have lean_s1886 : (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Or (Eq x (Int.ofNat 5)) (Eq x (Int.ofNat 6)))))))) := by andElim lean_s1421, 0
let lean_s1887 := by R2 lean_s1885, lean_s1886, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s1888 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0)))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 0)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 0))]
have lean_s1889 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a63 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a64 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
      (scope (fun lean_a65 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a66 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
          (scope (fun lean_a67 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
            (scope (fun lean_a68 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
              (scope (fun lean_a69 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
                (scope (fun lean_a70 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a71 : (Eq y (Int.ofNat 0)) =>
                    let lean_s1889 := by timed And.intro lean_a64 lean_a67
                    let lean_s1890 := by timed And.intro lean_a66 lean_s1889
                    let lean_s1891 := by timed And.intro lean_a71 lean_s1890
                    let lean_s1892 := by timed And.intro lean_a63 lean_s1891
                    let lean_s1893 := by timed And.intro lean_a70 lean_s1892
                    let lean_s1894 := by timed And.intro lean_a68 lean_s1893
                    let lean_s1895 := by timed And.intro lean_a65 lean_s1894
                    have lean_s1896 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a69 lean_s1895
                    have lean_s1897 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a66 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
                        (scope (fun lean_a67 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                          (scope (fun lean_a68 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
                            (scope (fun lean_a69 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a70 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                                (scope (fun lean_a71 : (Eq y (Int.ofNat 0)) =>
                                  (scope (fun lean_a72 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a73 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a74 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                                        have lean_s1897 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a69
                                        have lean_s1898 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1897
                                        let lean_s1899 := by timed flipCongrArg lean_s1898 [Sum]
                                        have lean_s1900 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a71
                                        have lean_s1901 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1900
                                        have lean_s1902 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1901 [Succ]
                                        have lean_s1903 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a70
                                        have lean_s1904 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1903
                                        have lean_s1905 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1902 lean_s1904
                                        have lean_s1906 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s1899 lean_s1905
                                        have lean_s1907 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a68
                                        have lean_s1908 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by timed Eq.symm lean_s1907
                                        have lean_s1909 : (Eq (Sum x (Succ y)) (Int.ofNat 6)) := by timed Eq.trans lean_s1906 lean_s1908
                                        have lean_s1910 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s1909 [Pred]
                                        have lean_s1911 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a67
                                        have lean_s1912 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s1911
                                        have lean_s1913 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1910 lean_s1912
                                        let lean_s1914 := by timed flipCongrArg lean_s1913 [Sum]
                                        let lean_s1915 := by timed flipCongrArg lean_s1901 [Sum]
                                        let lean_s1916 := by timed flipCongrArg lean_s1898 [Sum]
                                        have lean_s1917 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s1916 lean_s1901
                                        have lean_s1918 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a74
                                        have lean_s1919 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1918
                                        have lean_s1920 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s1917 lean_s1919
                                        have lean_s1921 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1920 [Pred]
                                        have lean_s1922 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a73
                                        have lean_s1923 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1922
                                        have lean_s1924 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1921 lean_s1923
                                        have lean_s1925 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s1915 lean_s1924
                                        have lean_s1926 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a72
                                        have lean_s1927 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s1926
                                        have lean_s1928 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1925 lean_s1927
                                        have lean_s1929 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s1914 lean_s1928
                                        have lean_s1930 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a66
                                        have lean_s1931 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s1930
                                        have lean_s1932 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s1929 lean_s1931
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1932
                      ))))))))))))))))))
                    have lean_s1898 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1897, 9
                    have lean_s1899 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s1896 lean_s1898
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1899
  ))))))))))))))))))
have lean_s1890 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1889, 9
have lean_s1891 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s1890
have lean_s1892 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s1888, lean_s1891, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0)))))))))), [(- 1), (- 1)]
have lean_s1893 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s1892, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s1894 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s1846, 61
let lean_s1895 := by R2 lean_s1893, lean_s1894, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1896 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by andElim lean_s1846, 58
let lean_s1897 := by R2 lean_s1895, lean_s1896, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), [(- 1), 0]
let lean_s1898 := by R2 lean_s1897, lean_s1847, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1899 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s1846, 26
let lean_s1900 := by R2 lean_s1898, lean_s1899, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1901 := by R2 lean_s1900, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1902 := by R2 lean_s1901, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1903 := by R2 lean_s1902, lean_s1881, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1904 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by andElim lean_s1421, 5
let lean_s1905 := by R1 lean_s1903, lean_s1904, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
let lean_s1906 := by R2 lean_s1905, lean_s1422, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1907 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 3))]
have lean_s1908 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a66 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a67 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a68 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a69 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
          (scope (fun lean_a70 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
            (scope (fun lean_a71 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
              (scope (fun lean_a72 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
                (scope (fun lean_a73 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a74 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1908 := by timed And.intro lean_a67 lean_a71
                    let lean_s1909 := by timed And.intro lean_a70 lean_s1908
                    let lean_s1910 := by timed And.intro lean_a74 lean_s1909
                    let lean_s1911 := by timed And.intro lean_a66 lean_s1910
                    let lean_s1912 := by timed And.intro lean_a73 lean_s1911
                    let lean_s1913 := by timed And.intro lean_a72 lean_s1912
                    let lean_s1914 := by timed And.intro lean_a68 lean_s1913
                    have lean_s1915 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a69 lean_s1914
                    have lean_s1916 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a69 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                        (scope (fun lean_a70 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a71 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
                            (scope (fun lean_a72 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a73 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a74 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a75 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a76 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a77 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
                                        have lean_s1916 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a72
                                        have lean_s1917 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1916
                                        let lean_s1918 := by timed flipCongrArg lean_s1917 [Sum]
                                        have lean_s1919 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a74
                                        have lean_s1920 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1919
                                        have lean_s1921 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1920 [Succ]
                                        have lean_s1922 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a73
                                        have lean_s1923 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1922
                                        have lean_s1924 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1921 lean_s1923
                                        have lean_s1925 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s1918 lean_s1924
                                        have lean_s1926 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a71
                                        have lean_s1927 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s1926
                                        have lean_s1928 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1925 lean_s1927
                                        have lean_s1929 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1928 [Pred]
                                        have lean_s1930 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a70
                                        have lean_s1931 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1930
                                        have lean_s1932 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1929 lean_s1931
                                        let lean_s1933 := by timed flipCongrArg lean_s1932 [Sum]
                                        let lean_s1934 := by timed flipCongrArg lean_s1920 [Sum]
                                        let lean_s1935 := by timed flipCongrArg lean_s1917 [Sum]
                                        have lean_s1936 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s1935 lean_s1920
                                        have lean_s1937 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a77
                                        have lean_s1938 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s1937
                                        have lean_s1939 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s1936 lean_s1938
                                        have lean_s1940 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1939 [Pred]
                                        have lean_s1941 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a76
                                        have lean_s1942 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1941
                                        have lean_s1943 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1940 lean_s1942
                                        have lean_s1944 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s1934 lean_s1943
                                        have lean_s1945 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a75
                                        have lean_s1946 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s1945
                                        have lean_s1947 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1944 lean_s1946
                                        have lean_s1948 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s1933 lean_s1947
                                        have lean_s1949 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a69
                                        have lean_s1950 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1949
                                        have lean_s1951 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1948 lean_s1950
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1951
                      ))))))))))))))))))
                    have lean_s1917 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1916, 9
                    have lean_s1918 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1915 lean_s1917
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1918
  ))))))))))))))))))
have lean_s1909 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1908, 9
have lean_s1910 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1909
have lean_s1911 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s1907, lean_s1910, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1912 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s1911, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1913 := by R1 lean_s1906, lean_s1912, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s1914 := by R2 lean_s1913, lean_s1894, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1915 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s1846, 60
let lean_s1916 := by R2 lean_s1914, lean_s1915, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1917 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s1846, 43
let lean_s1918 := by R2 lean_s1916, lean_s1917, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1919 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s1846, 32
let lean_s1920 := by R2 lean_s1918, lean_s1919, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1921 := by R2 lean_s1920, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1922 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s1846, 16
let lean_s1923 := by R2 lean_s1921, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1924 := by R2 lean_s1923, lean_s1859, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1925 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by andElim lean_s1421, 7
have lean_s1926 : (Or (Not (Eq x (Int.ofNat 5))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Not (Eq x (Int.ofNat 5))))))))) := by R1 lean_s1924, lean_s1925, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s1927 : (Or (Not (Eq x (Int.ofNat 5))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))) := by factor lean_s1926, 6
have lean_s1928 : (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Not (Eq x (Int.ofNat 5)))))))) := by permutateOr lean_s1927, [1, 2, 3, 4, 5, 0], (- 1)
let lean_s1929 := by R1 lean_s1887, lean_s1928, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s1930 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 1))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 1))]
have lean_s1931 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))))))))) :=
  (scope (fun lean_a69 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a70 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a71 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a72 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
          (scope (fun lean_a73 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
            (scope (fun lean_a74 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
              (scope (fun lean_a75 : (Eq x (Int.ofNat 1)) =>
                (scope (fun lean_a76 : (Eq y (Int.ofNat 1)) =>
                  let lean_s1931 := by timed And.intro lean_a72 lean_a70
                  let lean_s1932 := by timed And.intro lean_a76 lean_s1931
                  let lean_s1933 := by timed And.intro lean_a69 lean_s1932
                  let lean_s1934 := by timed And.intro lean_a75 lean_s1933
                  let lean_s1935 := by timed And.intro lean_a73 lean_s1934
                  let lean_s1936 := by timed And.intro lean_a71 lean_s1935
                  have lean_s1937 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))))))))) := by timed And.intro lean_a74 lean_s1936
                  have lean_s1938 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))))))))) :=
                    (scope (fun lean_a75 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                      (scope (fun lean_a76 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                        (scope (fun lean_a77 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                          (scope (fun lean_a78 : (Eq x (Int.ofNat 1)) =>
                            (scope (fun lean_a79 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                              (scope (fun lean_a80 : (Eq y (Int.ofNat 1)) =>
                                (scope (fun lean_a81 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                                  (scope (fun lean_a82 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                    have lean_s1938 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a78
                                    have lean_s1939 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1938
                                    let lean_s1940 := by timed flipCongrArg lean_s1939 [Sum]
                                    have lean_s1941 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a80
                                    have lean_s1942 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s1941
                                    have lean_s1943 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s1942 [Succ]
                                    have lean_s1944 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a79
                                    have lean_s1945 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1944
                                    have lean_s1946 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s1943 lean_s1945
                                    have lean_s1947 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s1940 lean_s1946
                                    have lean_s1948 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a77
                                    have lean_s1949 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1948
                                    have lean_s1950 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1947 lean_s1949
                                    have lean_s1951 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1950 [Pred]
                                    have lean_s1952 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a76
                                    have lean_s1953 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1952
                                    have lean_s1954 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1951 lean_s1953
                                    let lean_s1955 := by timed flipCongrArg lean_s1954 [Sum]
                                    let lean_s1956 := by timed flipCongrArg lean_s1942 [Sum]
                                    let lean_s1957 := by timed flipCongrArg lean_s1939 [Sum]
                                    have lean_s1958 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1957 lean_s1942
                                    have lean_s1959 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed Eq.symm lean_a81
                                    have lean_s1960 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1959
                                    have lean_s1961 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s1958 lean_s1960
                                    have lean_s1962 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1961 [Pred]
                                    have lean_s1963 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a82
                                    have lean_s1964 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1963
                                    have lean_s1965 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1962 lean_s1964
                                    have lean_s1966 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1956 lean_s1965
                                    have lean_s1967 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1966 lean_s1960
                                    have lean_s1968 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1955 lean_s1967
                                    have lean_s1969 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a75
                                    have lean_s1970 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s1969
                                    have lean_s1971 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1968 lean_s1970
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1971
                    ))))))))))))))))
                  have lean_s1939 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1938, 8
                  have lean_s1940 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1937 lean_s1939
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1940
  ))))))))))))))))
have lean_s1932 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1931, 8
have lean_s1933 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1932
have lean_s1934 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))))))))) := by R1 lean_s1930, lean_s1933, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1))))))))), [(- 1), (- 1)]
have lean_s1935 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))))))))))) := by permutateOr lean_s1934, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
have lean_s1936 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s1846, 38
let lean_s1937 := by R2 lean_s1935, lean_s1936, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1938 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s1846, 31
let lean_s1939 := by R2 lean_s1937, lean_s1938, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1940 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s1846, 30
let lean_s1941 := by R2 lean_s1939, lean_s1940, (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1942 := by R2 lean_s1941, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1943 := by R2 lean_s1942, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1944 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s1846, 9
let lean_s1945 := by R2 lean_s1943, lean_s1944, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1946 := by R1 lean_s1945, lean_s1925, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
let lean_s1947 := by R2 lean_s1946, lean_s1422, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1948 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 3))]
have lean_s1949 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a75 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a76 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a77 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a78 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
          (scope (fun lean_a79 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
            (scope (fun lean_a80 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
              (scope (fun lean_a81 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
                (scope (fun lean_a82 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a83 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1949 := by timed And.intro lean_a76 lean_a78
                    let lean_s1950 := by timed And.intro lean_a80 lean_s1949
                    let lean_s1951 := by timed And.intro lean_a83 lean_s1950
                    let lean_s1952 := by timed And.intro lean_a75 lean_s1951
                    let lean_s1953 := by timed And.intro lean_a82 lean_s1952
                    let lean_s1954 := by timed And.intro lean_a79 lean_s1953
                    let lean_s1955 := by timed And.intro lean_a77 lean_s1954
                    have lean_s1956 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a81 lean_s1955
                    have lean_s1957 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a79 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
                        (scope (fun lean_a80 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a81 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                            (scope (fun lean_a82 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a83 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a84 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a85 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
                                    (scope (fun lean_a86 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a87 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                                        have lean_s1957 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a82
                                        have lean_s1958 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1957
                                        let lean_s1959 := by timed flipCongrArg lean_s1958 [Sum]
                                        have lean_s1960 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a84
                                        have lean_s1961 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1960
                                        have lean_s1962 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1961 [Succ]
                                        have lean_s1963 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a83
                                        have lean_s1964 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1963
                                        have lean_s1965 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1962 lean_s1964
                                        have lean_s1966 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s1959 lean_s1965
                                        have lean_s1967 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a81
                                        have lean_s1968 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1967
                                        have lean_s1969 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1966 lean_s1968
                                        have lean_s1970 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1969 [Pred]
                                        have lean_s1971 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a80
                                        have lean_s1972 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1971
                                        have lean_s1973 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1970 lean_s1972
                                        let lean_s1974 := by timed flipCongrArg lean_s1973 [Sum]
                                        let lean_s1975 := by timed flipCongrArg lean_s1961 [Sum]
                                        let lean_s1976 := by timed flipCongrArg lean_s1958 [Sum]
                                        have lean_s1977 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s1976 lean_s1961
                                        have lean_s1978 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a87
                                        have lean_s1979 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1978
                                        have lean_s1980 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s1977 lean_s1979
                                        have lean_s1981 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1980 [Pred]
                                        have lean_s1982 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a86
                                        have lean_s1983 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1982
                                        have lean_s1984 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1981 lean_s1983
                                        have lean_s1985 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1975 lean_s1984
                                        have lean_s1986 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a85
                                        have lean_s1987 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by timed Eq.symm lean_s1986
                                        have lean_s1988 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 6)) := by timed Eq.trans lean_s1985 lean_s1987
                                        have lean_s1989 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed congr lean_s1974 lean_s1988
                                        have lean_s1990 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed Eq.symm lean_a79
                                        have lean_s1991 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by timed Eq.symm lean_s1990
                                        have lean_s1992 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1989 lean_s1991
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1992
                      ))))))))))))))))))
                    have lean_s1958 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1957, 9
                    have lean_s1959 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1956 lean_s1958
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1959
  ))))))))))))))))))
have lean_s1950 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1949, 9
have lean_s1951 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1950
have lean_s1952 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s1948, lean_s1951, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1953 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s1952, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1954 := by R1 lean_s1947, lean_s1953, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1955 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by andElim lean_s1846, 56
let lean_s1956 := by R2 lean_s1954, lean_s1955, (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1957 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by andElim lean_s1846, 46
let lean_s1958 := by R2 lean_s1956, lean_s1957, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), [(- 1), 0]
have lean_s1959 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s1846, 33
let lean_s1960 := by R2 lean_s1958, lean_s1959, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1961 := by R2 lean_s1960, lean_s1919, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1962 := by R2 lean_s1961, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1963 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s1846, 19
let lean_s1964 := by R2 lean_s1962, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1965 := by R2 lean_s1964, lean_s1859, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1966 := by R1 lean_s1965, lean_s1883, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1967 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 0))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 0))]
have lean_s1968 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))))))))) :=
  (scope (fun lean_a79 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a80 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a81 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a82 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a83 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
            (scope (fun lean_a84 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
              (scope (fun lean_a85 : (Eq x (Int.ofNat 1)) =>
                (scope (fun lean_a86 : (Eq y (Int.ofNat 0)) =>
                  let lean_s1968 := by timed And.intro lean_a82 lean_a80
                  let lean_s1969 := by timed And.intro lean_a86 lean_s1968
                  let lean_s1970 := by timed And.intro lean_a79 lean_s1969
                  let lean_s1971 := by timed And.intro lean_a85 lean_s1970
                  let lean_s1972 := by timed And.intro lean_a84 lean_s1971
                  let lean_s1973 := by timed And.intro lean_a81 lean_s1972
                  have lean_s1974 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))))))))) := by timed And.intro lean_a83 lean_s1973
                  have lean_s1975 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))))))))) :=
                    (scope (fun lean_a80 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
                      (scope (fun lean_a81 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                        (scope (fun lean_a82 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                          (scope (fun lean_a83 : (Eq x (Int.ofNat 1)) =>
                            (scope (fun lean_a84 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                              (scope (fun lean_a85 : (Eq y (Int.ofNat 0)) =>
                                (scope (fun lean_a86 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                                  (scope (fun lean_a87 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                    have lean_s1975 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a83
                                    have lean_s1976 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1975
                                    let lean_s1977 := by timed flipCongrArg lean_s1976 [Sum]
                                    have lean_s1978 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a85
                                    have lean_s1979 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1978
                                    have lean_s1980 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1979 [Succ]
                                    have lean_s1981 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a84
                                    have lean_s1982 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1981
                                    have lean_s1983 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1980 lean_s1982
                                    have lean_s1984 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1977 lean_s1983
                                    have lean_s1985 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed Eq.symm lean_a82
                                    have lean_s1986 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1985
                                    have lean_s1987 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1984 lean_s1986
                                    have lean_s1988 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1987 [Pred]
                                    have lean_s1989 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a81
                                    have lean_s1990 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1989
                                    have lean_s1991 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1988 lean_s1990
                                    let lean_s1992 := by timed flipCongrArg lean_s1991 [Sum]
                                    let lean_s1993 := by timed flipCongrArg lean_s1979 [Sum]
                                    let lean_s1994 := by timed flipCongrArg lean_s1976 [Sum]
                                    have lean_s1995 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s1994 lean_s1979
                                    have lean_s1996 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed Eq.symm lean_a80
                                    have lean_s1997 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1996
                                    have lean_s1998 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s1995 lean_s1997
                                    have lean_s1999 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1998 [Pred]
                                    have lean_s2000 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a87
                                    have lean_s2001 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2000
                                    have lean_s2002 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1999 lean_s2001
                                    have lean_s2003 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1993 lean_s2002
                                    have lean_s2004 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a86
                                    have lean_s2005 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s2004
                                    have lean_s2006 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2003 lean_s2005
                                    have lean_s2007 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s1992 lean_s2006
                                    have lean_s2008 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2007 lean_s1997
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2008
                    ))))))))))))))))
                  have lean_s1976 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1975, 8
                  have lean_s1977 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s1974 lean_s1976
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1977
  ))))))))))))))))
have lean_s1969 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1968, 8
have lean_s1970 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s1969
have lean_s1971 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))))))))) := by R1 lean_s1967, lean_s1970, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0))))))))), [(- 1), (- 1)]
have lean_s1972 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))))))))))) := by permutateOr lean_s1971, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
let lean_s1973 := by R1 lean_s1966, lean_s1972, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s1974 := by R2 lean_s1973, lean_s1940, (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1975 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s1846, 29
let lean_s1976 := by R2 lean_s1974, lean_s1975, (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1977 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s1846, 22
let lean_s1978 := by R2 lean_s1976, lean_s1977, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1979 := by R2 lean_s1978, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1980 := by R2 lean_s1979, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1981 := by R2 lean_s1980, lean_s1881, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1982 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by andElim lean_s1421, 4
have lean_s1983 : (Or (Not (Eq x (Int.ofNat 1))) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq x (Int.ofNat 1))))))))) := by R1 lean_s1981, lean_s1982, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s1984 : (Or (Not (Eq x (Int.ofNat 1))) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))) := by factor lean_s1983, 6
have lean_s1985 : (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Not (Eq x (Int.ofNat 1))))))) := by permutateOr lean_s1984, [1, 2, 3, 4, 0], (- 1)
let lean_s1986 := by R1 lean_s1929, lean_s1985, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1987 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 2))]
have lean_s1988 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
  (scope (fun lean_a80 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a81 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a82 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a83 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
          (scope (fun lean_a84 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
            (scope (fun lean_a85 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
              (scope (fun lean_a86 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
                (scope (fun lean_a87 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a88 : (Eq y (Int.ofNat 2)) =>
                    let lean_s1988 := by timed And.intro lean_a82 lean_a84
                    let lean_s1989 := by timed And.intro lean_a83 lean_s1988
                    let lean_s1990 := by timed And.intro lean_a88 lean_s1989
                    let lean_s1991 := by timed And.intro lean_a80 lean_s1990
                    let lean_s1992 := by timed And.intro lean_a87 lean_s1991
                    let lean_s1993 := by timed And.intro lean_a85 lean_s1992
                    let lean_s1994 := by timed And.intro lean_a81 lean_s1993
                    have lean_s1995 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)))))))))) := by timed And.intro lean_a86 lean_s1994
                    have lean_s1996 : (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
                      (scope (fun lean_a87 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
                        (scope (fun lean_a88 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                          (scope (fun lean_a89 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
                            (scope (fun lean_a90 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a91 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a92 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
                                        have lean_s1996 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a90
                                        have lean_s1997 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s1996
                                        let lean_s1998 := by timed flipCongrArg lean_s1997 [Sum]
                                        have lean_s1999 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a92
                                        have lean_s2000 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s1999
                                        have lean_s2001 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2000 [Succ]
                                        have lean_s2002 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a91
                                        have lean_s2003 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2002
                                        have lean_s2004 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2001 lean_s2003
                                        have lean_s2005 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s1998 lean_s2004
                                        have lean_s2006 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a89
                                        have lean_s2007 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s2006
                                        have lean_s2008 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2005 lean_s2007
                                        have lean_s2009 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2008 [Pred]
                                        have lean_s2010 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a88
                                        have lean_s2011 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2010
                                        have lean_s2012 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2009 lean_s2011
                                        let lean_s2013 := by timed flipCongrArg lean_s2012 [Sum]
                                        let lean_s2014 := by timed flipCongrArg lean_s2000 [Sum]
                                        let lean_s2015 := by timed flipCongrArg lean_s1997 [Sum]
                                        have lean_s2016 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s2015 lean_s2000
                                        have lean_s2017 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a95
                                        have lean_s2018 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by timed Eq.symm lean_s2017
                                        have lean_s2019 : (Eq (Sum x y) (Int.ofNat 6)) := by timed Eq.trans lean_s2016 lean_s2018
                                        have lean_s2020 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2019 [Pred]
                                        have lean_s2021 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a94
                                        have lean_s2022 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2021
                                        have lean_s2023 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2020 lean_s2022
                                        have lean_s2024 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s2014 lean_s2023
                                        have lean_s2025 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a93
                                        have lean_s2026 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s2025
                                        have lean_s2027 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2024 lean_s2026
                                        have lean_s2028 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed congr lean_s2013 lean_s2027
                                        have lean_s2029 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed Eq.symm lean_a87
                                        have lean_s2030 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2029
                                        have lean_s2031 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed Eq.trans lean_s2028 lean_s2030
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2031
                      ))))))))))))))))))
                    have lean_s1997 : (Implies (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s1996, 9
                    have lean_s1998 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed modusPonens lean_s1995 lean_s1997
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s1998
  ))))))))))))))))))
have lean_s1989 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s1988, 9
have lean_s1990 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed impliesElim lean_s1989
have lean_s1991 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) := by R1 lean_s1987, lean_s1990, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s1992 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)))))))))))) := by permutateOr lean_s1991, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s1993 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s1846, 64
let lean_s1994 := by R2 lean_s1992, lean_s1993, (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
have lean_s1995 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s1846, 53
let lean_s1996 := by R2 lean_s1994, lean_s1995, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1997 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by andElim lean_s1846, 52
let lean_s1998 := by R2 lean_s1996, lean_s1997, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), [(- 1), 0]
have lean_s1999 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s1846, 41
let lean_s2000 := by R2 lean_s1998, lean_s1999, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2001 := by R2 lean_s2000, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
have lean_s2002 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by andElim lean_s1846, 15
let lean_s2003 := by R2 lean_s2001, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
have lean_s2004 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s1846, 10
let lean_s2005 := by R2 lean_s2003, lean_s2004, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2006 := by R1 lean_s2005, lean_s1429, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)), [(- 1), 0]
let lean_s2007 := by R2 lean_s2006, lean_s1422, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s2008 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0)))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 0)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 0))]
have lean_s2009 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a87 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a88 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a89 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a90 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
          (scope (fun lean_a91 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
            (scope (fun lean_a92 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
              (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
                (scope (fun lean_a94 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a95 : (Eq y (Int.ofNat 0)) =>
                    let lean_s2009 := by timed And.intro lean_a88 lean_a91
                    let lean_s2010 := by timed And.intro lean_a90 lean_s2009
                    let lean_s2011 := by timed And.intro lean_a95 lean_s2010
                    let lean_s2012 := by timed And.intro lean_a87 lean_s2011
                    let lean_s2013 := by timed And.intro lean_a94 lean_s2012
                    let lean_s2014 := by timed And.intro lean_a92 lean_s2013
                    let lean_s2015 := by timed And.intro lean_a89 lean_s2014
                    have lean_s2016 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a93 lean_s2015
                    have lean_s2017 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a90 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
                        (scope (fun lean_a91 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a92 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                            (scope (fun lean_a93 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a94 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                                (scope (fun lean_a95 : (Eq y (Int.ofNat 0)) =>
                                  (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                                        have lean_s2017 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a93
                                        have lean_s2018 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s2017
                                        let lean_s2019 := by timed flipCongrArg lean_s2018 [Sum]
                                        have lean_s2020 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a95
                                        have lean_s2021 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s2020
                                        have lean_s2022 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s2021 [Succ]
                                        have lean_s2023 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a94
                                        have lean_s2024 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s2023
                                        have lean_s2025 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s2022 lean_s2024
                                        have lean_s2026 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s2019 lean_s2025
                                        have lean_s2027 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a92
                                        have lean_s2028 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s2027
                                        have lean_s2029 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2026 lean_s2028
                                        have lean_s2030 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2029 [Pred]
                                        have lean_s2031 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a91
                                        have lean_s2032 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2031
                                        have lean_s2033 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2030 lean_s2032
                                        let lean_s2034 := by timed flipCongrArg lean_s2033 [Sum]
                                        let lean_s2035 := by timed flipCongrArg lean_s2021 [Sum]
                                        let lean_s2036 := by timed flipCongrArg lean_s2018 [Sum]
                                        have lean_s2037 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s2036 lean_s2021
                                        have lean_s2038 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a98
                                        have lean_s2039 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s2038
                                        have lean_s2040 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s2037 lean_s2039
                                        have lean_s2041 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2040 [Pred]
                                        have lean_s2042 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a97
                                        have lean_s2043 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2042
                                        have lean_s2044 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2041 lean_s2043
                                        have lean_s2045 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s2035 lean_s2044
                                        have lean_s2046 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a96
                                        have lean_s2047 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s2046
                                        have lean_s2048 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2045 lean_s2047
                                        have lean_s2049 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s2034 lean_s2048
                                        have lean_s2050 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a90
                                        have lean_s2051 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s2050
                                        have lean_s2052 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s2049 lean_s2051
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2052
                      ))))))))))))))))))
                    have lean_s2018 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2017, 9
                    have lean_s2019 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s2016 lean_s2018
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2019
  ))))))))))))))))))
have lean_s2010 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2009, 9
have lean_s2011 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s2010
have lean_s2012 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s2008, lean_s2011, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0)))))))))), [(- 1), (- 1)]
have lean_s2013 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s2012, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2014 := by R1 lean_s2007, lean_s2013, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s2015 := by R2 lean_s2014, lean_s1995, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
have lean_s2016 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s1846, 51
let lean_s2017 := by R2 lean_s2015, lean_s2016, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
have lean_s2018 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s1846, 50
let lean_s2019 := by R2 lean_s2017, lean_s2018, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
have lean_s2020 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s1846, 25
let lean_s2021 := by R2 lean_s2019, lean_s2020, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2022 := by R2 lean_s2021, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2023 := by R2 lean_s2022, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2024 := by R2 lean_s2023, lean_s1881, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s2025 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by andElim lean_s1421, 3
let lean_s2026 := by R1 lean_s2024, lean_s2025, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s2027 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 3))]
have lean_s2028 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a90 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a91 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a92 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
          (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
            (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
              (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
                (scope (fun lean_a97 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a98 : (Eq y (Int.ofNat 3)) =>
                    let lean_s2028 := by timed And.intro lean_a91 lean_a95
                    let lean_s2029 := by timed And.intro lean_a94 lean_s2028
                    let lean_s2030 := by timed And.intro lean_a98 lean_s2029
                    let lean_s2031 := by timed And.intro lean_a90 lean_s2030
                    let lean_s2032 := by timed And.intro lean_a97 lean_s2031
                    let lean_s2033 := by timed And.intro lean_a96 lean_s2032
                    let lean_s2034 := by timed And.intro lean_a92 lean_s2033
                    have lean_s2035 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a93 lean_s2034
                    have lean_s2036 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                        (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
                            (scope (fun lean_a96 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a97 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a98 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a100 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                                      (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
                                        have lean_s2036 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a96
                                        have lean_s2037 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s2036
                                        let lean_s2038 := by timed flipCongrArg lean_s2037 [Sum]
                                        have lean_s2039 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a98
                                        have lean_s2040 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s2039
                                        have lean_s2041 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s2040 [Succ]
                                        have lean_s2042 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a97
                                        have lean_s2043 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s2042
                                        have lean_s2044 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s2041 lean_s2043
                                        have lean_s2045 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s2038 lean_s2044
                                        have lean_s2046 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a95
                                        have lean_s2047 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s2046
                                        have lean_s2048 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2045 lean_s2047
                                        have lean_s2049 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2048 [Pred]
                                        have lean_s2050 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a94
                                        have lean_s2051 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2050
                                        have lean_s2052 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2049 lean_s2051
                                        let lean_s2053 := by timed flipCongrArg lean_s2052 [Sum]
                                        let lean_s2054 := by timed flipCongrArg lean_s2040 [Sum]
                                        let lean_s2055 := by timed flipCongrArg lean_s2037 [Sum]
                                        have lean_s2056 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s2055 lean_s2040
                                        have lean_s2057 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a101
                                        have lean_s2058 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s2057
                                        have lean_s2059 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s2056 lean_s2058
                                        have lean_s2060 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2059 [Pred]
                                        have lean_s2061 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a100
                                        have lean_s2062 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2061
                                        have lean_s2063 : (Eq (Pred (Sum x y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2060 lean_s2062
                                        have lean_s2064 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed congr lean_s2054 lean_s2063
                                        have lean_s2065 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed Eq.symm lean_a99
                                        have lean_s2066 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by timed Eq.symm lean_s2065
                                        have lean_s2067 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2064 lean_s2066
                                        have lean_s2068 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s2053 lean_s2067
                                        have lean_s2069 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a93
                                        have lean_s2070 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s2069
                                        have lean_s2071 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2068 lean_s2070
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2071
                      ))))))))))))))))))
                    have lean_s2037 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2036, 9
                    have lean_s2038 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2035 lean_s2037
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2038
  ))))))))))))))))))
have lean_s2029 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2028, 9
have lean_s2030 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2029
have lean_s2031 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2027, lean_s2030, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s2032 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s2031, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2033 := by R1 lean_s2026, lean_s2032, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s2034 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s1846, 54
let lean_s2035 := by R2 lean_s2033, lean_s2034, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2036 := by R2 lean_s2035, lean_s1995, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
have lean_s2037 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by andElim lean_s1846, 49
let lean_s2038 := by R2 lean_s2036, lean_s2037, (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), [(- 1), 0]
have lean_s2039 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s1846, 24
let lean_s2040 := by R2 lean_s2038, lean_s2039, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2041 := by R2 lean_s2040, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2042 := by R2 lean_s2041, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2043 := by R2 lean_s2042, lean_s1859, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2044 := by R1 lean_s2043, lean_s1904, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s2045 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 1))]
have lean_s2046 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a93 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
      (scope (fun lean_a95 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
          (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
            (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
              (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
                (scope (fun lean_a100 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a101 : (Eq y (Int.ofNat 1)) =>
                    let lean_s2046 := by timed And.intro lean_a94 lean_a97
                    let lean_s2047 := by timed And.intro lean_a96 lean_s2046
                    let lean_s2048 := by timed And.intro lean_a101 lean_s2047
                    let lean_s2049 := by timed And.intro lean_a93 lean_s2048
                    let lean_s2050 := by timed And.intro lean_a100 lean_s2049
                    let lean_s2051 := by timed And.intro lean_a98 lean_s2050
                    let lean_s2052 := by timed And.intro lean_a95 lean_s2051
                    have lean_s2053 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a99 lean_s2052
                    have lean_s2054 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
                        (scope (fun lean_a95 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                          (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
                            (scope (fun lean_a97 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a98 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a99 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a101 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                                        have lean_s2054 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a97
                                        have lean_s2055 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s2054
                                        let lean_s2056 := by timed flipCongrArg lean_s2055 [Sum]
                                        have lean_s2057 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a99
                                        have lean_s2058 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s2057
                                        have lean_s2059 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s2058 [Succ]
                                        have lean_s2060 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a98
                                        have lean_s2061 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2060
                                        have lean_s2062 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s2059 lean_s2061
                                        have lean_s2063 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s2056 lean_s2062
                                        have lean_s2064 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a96
                                        have lean_s2065 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by timed Eq.symm lean_s2064
                                        have lean_s2066 : (Eq (Sum x (Succ y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2063 lean_s2065
                                        have lean_s2067 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2066 [Pred]
                                        have lean_s2068 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a95
                                        have lean_s2069 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2068
                                        have lean_s2070 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2067 lean_s2069
                                        let lean_s2071 := by timed flipCongrArg lean_s2070 [Sum]
                                        let lean_s2072 := by timed flipCongrArg lean_s2058 [Sum]
                                        let lean_s2073 := by timed flipCongrArg lean_s2055 [Sum]
                                        have lean_s2074 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s2073 lean_s2058
                                        have lean_s2075 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a102
                                        have lean_s2076 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s2075
                                        have lean_s2077 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s2074 lean_s2076
                                        have lean_s2078 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2077 [Pred]
                                        have lean_s2079 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a101
                                        have lean_s2080 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2079
                                        have lean_s2081 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2078 lean_s2080
                                        have lean_s2082 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s2072 lean_s2081
                                        have lean_s2083 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a100
                                        have lean_s2084 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2083
                                        have lean_s2085 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2082 lean_s2084
                                        have lean_s2086 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s2071 lean_s2085
                                        have lean_s2087 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a94
                                        have lean_s2088 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s2087
                                        have lean_s2089 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s2086 lean_s2088
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2089
                      ))))))))))))))))))
                    have lean_s2055 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2054, 9
                    have lean_s2056 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s2053 lean_s2055
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2056
  ))))))))))))))))))
have lean_s2047 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2046, 9
have lean_s2048 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s2047
have lean_s2049 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s2045, lean_s2048, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s2050 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s2049, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2051 := by R1 lean_s2044, lean_s2050, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s2052 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s1846, 62
let lean_s2053 := by R2 lean_s2051, lean_s2052, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2054 := by R2 lean_s2053, lean_s1997, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2055 := by R2 lean_s2054, lean_s2016, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2056 := by R2 lean_s2055, lean_s1959, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2057 := by R2 lean_s2056, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2058 := by R2 lean_s2057, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2059 := by R2 lean_s2058, lean_s1944, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
have lean_s2060 : (Or (Not (Eq x (Int.ofNat 4))) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq x (Int.ofNat 4))))))))) := by R1 lean_s2059, lean_s1883, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s2061 : (Or (Not (Eq x (Int.ofNat 4))) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))) := by factor lean_s2060, 6
have lean_s2062 : (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Not (Eq x (Int.ofNat 4)))))) := by permutateOr lean_s2061, [1, 2, 3, 0], (- 1)
let lean_s2063 := by R1 lean_s1986, lean_s2062, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2064 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 4))]
have lean_s2065 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a94 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a95 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a96 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
            (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
              (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
                (scope (fun lean_a101 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a102 : (Eq y (Int.ofNat 4)) =>
                    let lean_s2065 := by timed And.intro lean_a95 lean_a98
                    let lean_s2066 := by timed And.intro lean_a100 lean_s2065
                    let lean_s2067 := by timed And.intro lean_a102 lean_s2066
                    let lean_s2068 := by timed And.intro lean_a94 lean_s2067
                    let lean_s2069 := by timed And.intro lean_a101 lean_s2068
                    let lean_s2070 := by timed And.intro lean_a99 lean_s2069
                    let lean_s2071 := by timed And.intro lean_a96 lean_s2070
                    have lean_s2072 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a97 lean_s2071
                    have lean_s2073 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                        (scope (fun lean_a99 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
                            (scope (fun lean_a101 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a102 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a103 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a105 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                                      (scope (fun lean_a106 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
                                        have lean_s2073 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a101
                                        have lean_s2074 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s2073
                                        let lean_s2075 := by timed flipCongrArg lean_s2074 [Sum]
                                        have lean_s2076 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a103
                                        have lean_s2077 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s2076
                                        have lean_s2078 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s2077 [Succ]
                                        have lean_s2079 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a102
                                        have lean_s2080 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2079
                                        have lean_s2081 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s2078 lean_s2080
                                        have lean_s2082 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s2075 lean_s2081
                                        have lean_s2083 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a100
                                        have lean_s2084 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s2083
                                        have lean_s2085 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2082 lean_s2084
                                        have lean_s2086 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2085 [Pred]
                                        have lean_s2087 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a99
                                        have lean_s2088 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2087
                                        have lean_s2089 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2086 lean_s2088
                                        let lean_s2090 := by timed flipCongrArg lean_s2089 [Sum]
                                        let lean_s2091 := by timed flipCongrArg lean_s2077 [Sum]
                                        let lean_s2092 := by timed flipCongrArg lean_s2074 [Sum]
                                        have lean_s2093 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s2092 lean_s2077
                                        have lean_s2094 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a106
                                        have lean_s2095 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s2094
                                        have lean_s2096 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s2093 lean_s2095
                                        have lean_s2097 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2096 [Pred]
                                        have lean_s2098 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a105
                                        have lean_s2099 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2098
                                        have lean_s2100 : (Eq (Pred (Sum x y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2097 lean_s2099
                                        have lean_s2101 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed congr lean_s2091 lean_s2100
                                        have lean_s2102 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed Eq.symm lean_a104
                                        have lean_s2103 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by timed Eq.symm lean_s2102
                                        have lean_s2104 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2101 lean_s2103
                                        have lean_s2105 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s2090 lean_s2104
                                        have lean_s2106 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a98
                                        have lean_s2107 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s2106
                                        have lean_s2108 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s2105 lean_s2107
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2108
                      ))))))))))))))))))
                    have lean_s2074 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2073, 9
                    have lean_s2075 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s2072 lean_s2074
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2075
  ))))))))))))))))))
have lean_s2066 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2065, 9
have lean_s2067 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s2066
have lean_s2068 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s2064, lean_s2067, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s2069 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s2068, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2070 := by R2 lean_s2069, lean_s1955, (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), [(- 1), 0]
have lean_s2071 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s1846, 48
let lean_s2072 := by R2 lean_s2070, lean_s2071, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2073 := by R2 lean_s2072, lean_s1849, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2074 := by R2 lean_s2073, lean_s2020, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2075 := by R2 lean_s2074, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2076 := by R2 lean_s2075, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
have lean_s2077 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s1846, 12
let lean_s2078 := by R2 lean_s2076, lean_s2077, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2079 := by R1 lean_s2078, lean_s1883, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
let lean_s2080 := by R2 lean_s2079, lean_s1422, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2081 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 2))]
have lean_s2082 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a98 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a99 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
      (scope (fun lean_a100 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
          (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
            (scope (fun lean_a103 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
              (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
                (scope (fun lean_a105 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a106 : (Eq y (Int.ofNat 2)) =>
                    let lean_s2082 := by timed And.intro lean_a99 lean_a102
                    let lean_s2083 := by timed And.intro lean_a101 lean_s2082
                    let lean_s2084 := by timed And.intro lean_a106 lean_s2083
                    let lean_s2085 := by timed And.intro lean_a98 lean_s2084
                    let lean_s2086 := by timed And.intro lean_a105 lean_s2085
                    let lean_s2087 := by timed And.intro lean_a103 lean_s2086
                    let lean_s2088 := by timed And.intro lean_a100 lean_s2087
                    have lean_s2089 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a104 lean_s2088
                    have lean_s2090 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
                        (scope (fun lean_a101 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                          (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
                            (scope (fun lean_a103 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a104 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a105 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a106 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
                                    (scope (fun lean_a107 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                                        have lean_s2090 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a103
                                        have lean_s2091 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s2090
                                        let lean_s2092 := by timed flipCongrArg lean_s2091 [Sum]
                                        have lean_s2093 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a105
                                        have lean_s2094 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s2093
                                        have lean_s2095 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2094 [Succ]
                                        have lean_s2096 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a104
                                        have lean_s2097 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2096
                                        have lean_s2098 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2095 lean_s2097
                                        have lean_s2099 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s2092 lean_s2098
                                        have lean_s2100 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a102
                                        have lean_s2101 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by timed Eq.symm lean_s2100
                                        have lean_s2102 : (Eq (Sum x (Succ y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2099 lean_s2101
                                        have lean_s2103 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2102 [Pred]
                                        have lean_s2104 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a101
                                        have lean_s2105 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2104
                                        have lean_s2106 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2103 lean_s2105
                                        let lean_s2107 := by timed flipCongrArg lean_s2106 [Sum]
                                        let lean_s2108 := by timed flipCongrArg lean_s2094 [Sum]
                                        let lean_s2109 := by timed flipCongrArg lean_s2091 [Sum]
                                        have lean_s2110 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s2109 lean_s2094
                                        have lean_s2111 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a108
                                        have lean_s2112 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s2111
                                        have lean_s2113 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s2110 lean_s2112
                                        have lean_s2114 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2113 [Pred]
                                        have lean_s2115 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a107
                                        have lean_s2116 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2115
                                        have lean_s2117 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2114 lean_s2116
                                        have lean_s2118 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s2108 lean_s2117
                                        have lean_s2119 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a106
                                        have lean_s2120 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by timed Eq.symm lean_s2119
                                        have lean_s2121 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2118 lean_s2120
                                        have lean_s2122 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed congr lean_s2107 lean_s2121
                                        have lean_s2123 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed Eq.symm lean_a100
                                        have lean_s2124 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by timed Eq.symm lean_s2123
                                        have lean_s2125 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s2122 lean_s2124
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2125
                      ))))))))))))))))))
                    have lean_s2091 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2090, 9
                    have lean_s2092 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s2089 lean_s2091
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2092
  ))))))))))))))))))
have lean_s2083 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2082, 9
have lean_s2084 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s2083
have lean_s2085 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s2081, lean_s2084, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s2086 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s2085, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2087 := by R1 lean_s2080, lean_s2086, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s2088 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by andElim lean_s1846, 63
let lean_s2089 := by R2 lean_s2087, lean_s2088, (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2090 := by R2 lean_s2089, lean_s1957, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), [(- 1), 0]
have lean_s2091 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s1846, 45
let lean_s2092 := by R2 lean_s2090, lean_s2091, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2093 := by R2 lean_s2092, lean_s1851, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2094 := by R2 lean_s2093, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2095 := by R2 lean_s2094, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2096 := by R2 lean_s2095, lean_s2004, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2097 := by R1 lean_s2096, lean_s1925, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s2098 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0)))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 0)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 0))]
have lean_s2099 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a101 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a102 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a103 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
          (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
            (scope (fun lean_a105 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
              (scope (fun lean_a106 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                (scope (fun lean_a107 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a108 : (Eq y (Int.ofNat 0)) =>
                    let lean_s2099 := by timed And.intro lean_a101 lean_a104
                    let lean_s2100 := by timed And.intro lean_a103 lean_s2099
                    let lean_s2101 := by timed And.intro lean_a108 lean_s2100
                    let lean_s2102 := by timed And.intro lean_a100 lean_s2101
                    let lean_s2103 := by timed And.intro lean_a107 lean_s2102
                    let lean_s2104 := by timed And.intro lean_a105 lean_s2103
                    let lean_s2105 := by timed And.intro lean_a102 lean_s2104
                    have lean_s2106 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a106 lean_s2105
                    have lean_s2107 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                        (scope (fun lean_a102 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a103 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                            (scope (fun lean_a104 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a105 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                                (scope (fun lean_a106 : (Eq y (Int.ofNat 0)) =>
                                  (scope (fun lean_a107 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a108 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a109 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                                        have lean_s2107 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a104
                                        have lean_s2108 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s2107
                                        let lean_s2109 := by timed flipCongrArg lean_s2108 [Sum]
                                        have lean_s2110 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a106
                                        have lean_s2111 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s2110
                                        have lean_s2112 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s2111 [Succ]
                                        have lean_s2113 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a105
                                        have lean_s2114 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s2113
                                        have lean_s2115 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s2112 lean_s2114
                                        have lean_s2116 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s2109 lean_s2115
                                        have lean_s2117 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a103
                                        have lean_s2118 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s2117
                                        have lean_s2119 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2116 lean_s2118
                                        have lean_s2120 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2119 [Pred]
                                        have lean_s2121 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a102
                                        have lean_s2122 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2121
                                        have lean_s2123 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2120 lean_s2122
                                        let lean_s2124 := by timed flipCongrArg lean_s2123 [Sum]
                                        let lean_s2125 := by timed flipCongrArg lean_s2111 [Sum]
                                        let lean_s2126 := by timed flipCongrArg lean_s2108 [Sum]
                                        have lean_s2127 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s2126 lean_s2111
                                        have lean_s2128 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a109
                                        have lean_s2129 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s2128
                                        have lean_s2130 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2127 lean_s2129
                                        have lean_s2131 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2130 [Pred]
                                        have lean_s2132 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a108
                                        have lean_s2133 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2132
                                        have lean_s2134 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2131 lean_s2133
                                        have lean_s2135 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s2125 lean_s2134
                                        have lean_s2136 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a107
                                        have lean_s2137 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s2136
                                        have lean_s2138 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2135 lean_s2137
                                        have lean_s2139 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s2124 lean_s2138
                                        have lean_s2140 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a101
                                        have lean_s2141 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s2140
                                        have lean_s2142 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s2139 lean_s2141
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2142
                      ))))))))))))))))))
                    have lean_s2108 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2107, 9
                    have lean_s2109 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s2106 lean_s2108
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2109
  ))))))))))))))))))
have lean_s2100 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2099, 9
have lean_s2101 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2100
have lean_s2102 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s2098, lean_s2101, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0)))))))))), [(- 1), (- 1)]
have lean_s2103 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2102, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2104 := by R1 lean_s2097, lean_s2103, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s2105 := by R2 lean_s2104, lean_s2091, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
have lean_s2106 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s1846, 44
let lean_s2107 := by R2 lean_s2105, lean_s2106, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2108 := by R2 lean_s2107, lean_s1917, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2109 := by R2 lean_s2108, lean_s2039, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2110 := by R2 lean_s2109, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2111 := by R2 lean_s2110, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2112 := by R2 lean_s2111, lean_s1881, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2113 := by R1 lean_s2112, lean_s1861, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
have lean_s2114 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 3))]
have lean_s2115 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a101 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a102 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
          (scope (fun lean_a105 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
            (scope (fun lean_a106 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
              (scope (fun lean_a107 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
                (scope (fun lean_a108 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a109 : (Eq y (Int.ofNat 3)) =>
                    let lean_s2115 := by timed And.intro lean_a103 lean_a104
                    let lean_s2116 := by timed And.intro lean_a106 lean_s2115
                    let lean_s2117 := by timed And.intro lean_a109 lean_s2116
                    let lean_s2118 := by timed And.intro lean_a101 lean_s2117
                    let lean_s2119 := by timed And.intro lean_a108 lean_s2118
                    let lean_s2120 := by timed And.intro lean_a105 lean_s2119
                    let lean_s2121 := by timed And.intro lean_a102 lean_s2120
                    have lean_s2122 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)))))))))) := by timed And.intro lean_a107 lean_s2121
                    have lean_s2123 : (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
                        (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                          (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
                            (scope (fun lean_a105 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a106 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a107 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a109 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
                                        have lean_s2123 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a105
                                        have lean_s2124 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s2123
                                        let lean_s2125 := by timed flipCongrArg lean_s2124 [Sum]
                                        have lean_s2126 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a107
                                        have lean_s2127 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s2126
                                        have lean_s2128 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s2127 [Succ]
                                        have lean_s2129 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a106
                                        have lean_s2130 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s2129
                                        have lean_s2131 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s2128 lean_s2130
                                        have lean_s2132 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s2125 lean_s2131
                                        have lean_s2133 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a104
                                        have lean_s2134 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s2133
                                        have lean_s2135 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2132 lean_s2134
                                        have lean_s2136 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2135 [Pred]
                                        have lean_s2137 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a103
                                        have lean_s2138 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2137
                                        have lean_s2139 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2136 lean_s2138
                                        let lean_s2140 := by timed flipCongrArg lean_s2139 [Sum]
                                        let lean_s2141 := by timed flipCongrArg lean_s2127 [Sum]
                                        let lean_s2142 := by timed flipCongrArg lean_s2124 [Sum]
                                        have lean_s2143 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s2142 lean_s2127
                                        have lean_s2144 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a110
                                        have lean_s2145 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by timed Eq.symm lean_s2144
                                        have lean_s2146 : (Eq (Sum x y) (Int.ofNat 6)) := by timed Eq.trans lean_s2143 lean_s2145
                                        have lean_s2147 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2146 [Pred]
                                        have lean_s2148 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a109
                                        have lean_s2149 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2148
                                        have lean_s2150 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2147 lean_s2149
                                        have lean_s2151 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s2141 lean_s2150
                                        have lean_s2152 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a108
                                        have lean_s2153 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s2152
                                        have lean_s2154 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2151 lean_s2153
                                        have lean_s2155 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed congr lean_s2140 lean_s2154
                                        have lean_s2156 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed Eq.symm lean_a102
                                        have lean_s2157 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2156
                                        have lean_s2158 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s2155 lean_s2157
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2158
                      ))))))))))))))))))
                    have lean_s2124 : (Implies (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2123, 9
                    have lean_s2125 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s2122 lean_s2124
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2125
  ))))))))))))))))))
have lean_s2116 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2115, 9
have lean_s2117 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s2116
have lean_s2118 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s2114, lean_s2117, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s2119 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s2118, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2120 := by R1 lean_s2113, lean_s2119, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s2121 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s1846, 65
let lean_s2122 := by R2 lean_s2120, lean_s2121, (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2123 := by R2 lean_s2122, lean_s2071, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2124 := by R2 lean_s2123, lean_s1849, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2125 := by R2 lean_s2124, lean_s1957, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2126 := by R2 lean_s2125, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2127 := by R2 lean_s2126, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2128 := by R2 lean_s2127, lean_s1859, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2129 := by R1 lean_s2128, lean_s2025, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s2130 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 1))]
have lean_s2131 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a102 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a104 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a105 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
          (scope (fun lean_a106 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
            (scope (fun lean_a107 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
              (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
                (scope (fun lean_a109 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a110 : (Eq y (Int.ofNat 1)) =>
                    let lean_s2131 := by timed And.intro lean_a103 lean_a106
                    let lean_s2132 := by timed And.intro lean_a105 lean_s2131
                    let lean_s2133 := by timed And.intro lean_a110 lean_s2132
                    let lean_s2134 := by timed And.intro lean_a102 lean_s2133
                    let lean_s2135 := by timed And.intro lean_a109 lean_s2134
                    let lean_s2136 := by timed And.intro lean_a107 lean_s2135
                    let lean_s2137 := by timed And.intro lean_a104 lean_s2136
                    have lean_s2138 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a108 lean_s2137
                    have lean_s2139 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
                        (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                            (scope (fun lean_a105 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a106 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a107 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a109 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                                        have lean_s2139 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a105
                                        have lean_s2140 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s2139
                                        let lean_s2141 := by timed flipCongrArg lean_s2140 [Sum]
                                        have lean_s2142 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a107
                                        have lean_s2143 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s2142
                                        have lean_s2144 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s2143 [Succ]
                                        have lean_s2145 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a106
                                        have lean_s2146 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2145
                                        have lean_s2147 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s2144 lean_s2146
                                        have lean_s2148 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s2141 lean_s2147
                                        have lean_s2149 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a104
                                        have lean_s2150 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s2149
                                        have lean_s2151 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2148 lean_s2150
                                        have lean_s2152 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2151 [Pred]
                                        have lean_s2153 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a103
                                        have lean_s2154 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2153
                                        have lean_s2155 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2152 lean_s2154
                                        let lean_s2156 := by timed flipCongrArg lean_s2155 [Sum]
                                        let lean_s2157 := by timed flipCongrArg lean_s2143 [Sum]
                                        let lean_s2158 := by timed flipCongrArg lean_s2140 [Sum]
                                        have lean_s2159 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s2158 lean_s2143
                                        have lean_s2160 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a110
                                        have lean_s2161 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s2160
                                        have lean_s2162 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s2159 lean_s2161
                                        have lean_s2163 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2162 [Pred]
                                        have lean_s2164 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a109
                                        have lean_s2165 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2164
                                        have lean_s2166 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2163 lean_s2165
                                        have lean_s2167 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s2157 lean_s2166
                                        have lean_s2168 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a108
                                        have lean_s2169 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s2168
                                        have lean_s2170 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2167 lean_s2169
                                        have lean_s2171 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s2156 lean_s2170
                                        have lean_s2172 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a102
                                        have lean_s2173 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s2172
                                        have lean_s2174 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2171 lean_s2173
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2174
                      ))))))))))))))))))
                    have lean_s2140 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2139, 9
                    have lean_s2141 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s2138 lean_s2140
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2141
  ))))))))))))))))))
have lean_s2132 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2131, 9
have lean_s2133 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s2132
have lean_s2134 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s2130, lean_s2133, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s2135 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s2134, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2136 := by R1 lean_s2129, lean_s2135, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s2137 := by R2 lean_s2136, lean_s2034, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2138 := by R2 lean_s2137, lean_s2091, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2139 := by R2 lean_s2138, lean_s2106, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2140 := by R2 lean_s2139, lean_s1919, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2141 := by R2 lean_s2140, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2142 := by R2 lean_s2141, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2143 := by R2 lean_s2142, lean_s1944, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
have lean_s2144 : (Or (Not (Eq x (Int.ofNat 3))) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq x (Int.ofNat 3))))))))) := by R1 lean_s2143, lean_s1982, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s2145 : (Or (Not (Eq x (Int.ofNat 3))) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))) := by factor lean_s2144, 6
have lean_s2146 : (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Not (Eq x (Int.ofNat 3))))) := by permutateOr lean_s2145, [1, 2, 0], (- 1)
let lean_s2147 := by R1 lean_s2063, lean_s2146, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s2148 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), (Eq x (Int.ofNat 6)), (Eq y (Int.ofNat 1))]
have lean_s2149 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a102 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a104 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a105 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a106 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
            (scope (fun lean_a107 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
              (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
                (scope (fun lean_a109 : (Eq x (Int.ofNat 6)) =>
                  (scope (fun lean_a110 : (Eq y (Int.ofNat 1)) =>
                    let lean_s2149 := by timed And.intro lean_a103 lean_a107
                    let lean_s2150 := by timed And.intro lean_a106 lean_s2149
                    let lean_s2151 := by timed And.intro lean_a110 lean_s2150
                    let lean_s2152 := by timed And.intro lean_a102 lean_s2151
                    let lean_s2153 := by timed And.intro lean_a109 lean_s2152
                    let lean_s2154 := by timed And.intro lean_a108 lean_s2153
                    let lean_s2155 := by timed And.intro lean_a104 lean_s2154
                    have lean_s2156 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a105 lean_s2155
                    have lean_s2157 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a105 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                        (scope (fun lean_a106 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a107 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
                            (scope (fun lean_a108 : (Eq x (Int.ofNat 6)) =>
                              (scope (fun lean_a109 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a110 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                                      (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
                                        have lean_s2157 : (Eq (Int.ofNat 6) x) := by timed Eq.symm lean_a108
                                        have lean_s2158 : (Eq x (Int.ofNat 6)) := by timed Eq.symm lean_s2157
                                        let lean_s2159 := by timed flipCongrArg lean_s2158 [Sum]
                                        have lean_s2160 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a110
                                        have lean_s2161 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s2160
                                        have lean_s2162 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s2161 [Succ]
                                        have lean_s2163 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a109
                                        have lean_s2164 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2163
                                        have lean_s2165 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s2162 lean_s2164
                                        have lean_s2166 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed congr lean_s2159 lean_s2165
                                        have lean_s2167 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed Eq.symm lean_a107
                                        have lean_s2168 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2167
                                        have lean_s2169 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2166 lean_s2168
                                        have lean_s2170 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2169 [Pred]
                                        have lean_s2171 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a106
                                        have lean_s2172 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2171
                                        have lean_s2173 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2170 lean_s2172
                                        let lean_s2174 := by timed flipCongrArg lean_s2173 [Sum]
                                        let lean_s2175 := by timed flipCongrArg lean_s2161 [Sum]
                                        let lean_s2176 := by timed flipCongrArg lean_s2158 [Sum]
                                        have lean_s2177 : (Eq (Sum x y) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed congr lean_s2176 lean_s2161
                                        have lean_s2178 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed Eq.symm lean_a113
                                        have lean_s2179 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2178
                                        have lean_s2180 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s2177 lean_s2179
                                        have lean_s2181 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2180 [Pred]
                                        have lean_s2182 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a112
                                        have lean_s2183 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2182
                                        have lean_s2184 : (Eq (Pred (Sum x y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2181 lean_s2183
                                        have lean_s2185 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed congr lean_s2175 lean_s2184
                                        have lean_s2186 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed Eq.symm lean_a111
                                        have lean_s2187 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2186
                                        have lean_s2188 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2185 lean_s2187
                                        have lean_s2189 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s2174 lean_s2188
                                        have lean_s2190 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a105
                                        have lean_s2191 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s2190
                                        have lean_s2192 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s2189 lean_s2191
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2192
                      ))))))))))))))))))
                    have lean_s2158 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2157, 9
                    have lean_s2159 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s2156 lean_s2158
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2159
  ))))))))))))))))))
have lean_s2150 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2149, 9
have lean_s2151 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s2150
have lean_s2152 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s2148, lean_s2151, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s2153 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s2152, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s2154 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s1846, 66
let lean_s2155 := by R2 lean_s2153, lean_s2154, (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2156 := by R2 lean_s2155, lean_s2121, (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
have lean_s2157 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s1846, 35
let lean_s2158 := by R2 lean_s2156, lean_s2157, (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2159 := by R2 lean_s2158, lean_s1977, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2160 := by R2 lean_s2159, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2161 := by R2 lean_s2160, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2162 := by R2 lean_s2161, lean_s1944, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2163 := by R1 lean_s2162, lean_s2025, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
let lean_s2164 := by R2 lean_s2163, lean_s1422, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s2165 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 0)))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq y (Int.ofNat 0)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), (Eq x (Int.ofNat 6)), (Eq y (Int.ofNat 0))]
have lean_s2166 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a105 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a106 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a107 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
          (scope (fun lean_a109 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
            (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
              (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
                (scope (fun lean_a112 : (Eq x (Int.ofNat 6)) =>
                  (scope (fun lean_a113 : (Eq y (Int.ofNat 0)) =>
                    let lean_s2166 := by timed And.intro lean_a107 lean_a109
                    let lean_s2167 := by timed And.intro lean_a108 lean_s2166
                    let lean_s2168 := by timed And.intro lean_a113 lean_s2167
                    let lean_s2169 := by timed And.intro lean_a105 lean_s2168
                    let lean_s2170 := by timed And.intro lean_a112 lean_s2169
                    let lean_s2171 := by timed And.intro lean_a110 lean_s2170
                    let lean_s2172 := by timed And.intro lean_a106 lean_s2171
                    have lean_s2173 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)))))))))) := by timed And.intro lean_a111 lean_s2172
                    have lean_s2174 : (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a106 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
                        (scope (fun lean_a107 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                          (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
                            (scope (fun lean_a109 : (Eq x (Int.ofNat 6)) =>
                              (scope (fun lean_a110 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                                (scope (fun lean_a111 : (Eq y (Int.ofNat 0)) =>
                                  (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a113 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
                                        have lean_s2174 : (Eq (Int.ofNat 6) x) := by timed Eq.symm lean_a109
                                        have lean_s2175 : (Eq x (Int.ofNat 6)) := by timed Eq.symm lean_s2174
                                        let lean_s2176 := by timed flipCongrArg lean_s2175 [Sum]
                                        have lean_s2177 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a111
                                        have lean_s2178 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s2177
                                        have lean_s2179 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s2178 [Succ]
                                        have lean_s2180 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a110
                                        have lean_s2181 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s2180
                                        have lean_s2182 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s2179 lean_s2181
                                        have lean_s2183 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed congr lean_s2176 lean_s2182
                                        have lean_s2184 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed Eq.symm lean_a108
                                        have lean_s2185 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2184
                                        have lean_s2186 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2183 lean_s2185
                                        have lean_s2187 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2186 [Pred]
                                        have lean_s2188 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a107
                                        have lean_s2189 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2188
                                        have lean_s2190 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2187 lean_s2189
                                        let lean_s2191 := by timed flipCongrArg lean_s2190 [Sum]
                                        let lean_s2192 := by timed flipCongrArg lean_s2178 [Sum]
                                        let lean_s2193 := by timed flipCongrArg lean_s2175 [Sum]
                                        have lean_s2194 : (Eq (Sum x y) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed congr lean_s2193 lean_s2178
                                        have lean_s2195 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed Eq.symm lean_a114
                                        have lean_s2196 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2195
                                        have lean_s2197 : (Eq (Sum x y) (Int.ofNat 6)) := by timed Eq.trans lean_s2194 lean_s2196
                                        have lean_s2198 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2197 [Pred]
                                        have lean_s2199 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a113
                                        have lean_s2200 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2199
                                        have lean_s2201 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2198 lean_s2200
                                        have lean_s2202 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s2192 lean_s2201
                                        have lean_s2203 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed Eq.symm lean_a112
                                        have lean_s2204 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by timed Eq.symm lean_s2203
                                        have lean_s2205 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2202 lean_s2204
                                        have lean_s2206 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed congr lean_s2191 lean_s2205
                                        have lean_s2207 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed Eq.symm lean_a106
                                        have lean_s2208 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2207
                                        have lean_s2209 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s2206 lean_s2208
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2209
                      ))))))))))))))))))
                    have lean_s2175 : (Implies (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2174, 9
                    have lean_s2176 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s2173 lean_s2175
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2176
  ))))))))))))))))))
have lean_s2167 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2166, 9
have lean_s2168 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 0))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s2167
have lean_s2169 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s2165, lean_s2168, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 0)))))))))), [(- 1), (- 1)]
have lean_s2170 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s2169, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2171 := by R1 lean_s2164, lean_s2170, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s2172 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s1846, 69
let lean_s2173 := by R2 lean_s2171, lean_s2172, (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2174 := by R2 lean_s2173, lean_s2121, (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2175 := by R2 lean_s2174, lean_s1993, (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
have lean_s2176 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s1846, 27
let lean_s2177 := by R2 lean_s2175, lean_s2176, (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2178 := by R2 lean_s2177, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2179 := by R2 lean_s2178, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2180 := by R2 lean_s2179, lean_s1881, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2181 := by R1 lean_s2180, lean_s1925, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s2182 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), (Eq x (Int.ofNat 6)), (Eq y (Int.ofNat 2))]
have lean_s2183 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a106 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a107 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a108 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a109 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
          (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
            (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
              (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
                (scope (fun lean_a113 : (Eq x (Int.ofNat 6)) =>
                  (scope (fun lean_a114 : (Eq y (Int.ofNat 2)) =>
                    let lean_s2183 := by timed And.intro lean_a107 lean_a111
                    let lean_s2184 := by timed And.intro lean_a110 lean_s2183
                    let lean_s2185 := by timed And.intro lean_a114 lean_s2184
                    let lean_s2186 := by timed And.intro lean_a106 lean_s2185
                    let lean_s2187 := by timed And.intro lean_a113 lean_s2186
                    let lean_s2188 := by timed And.intro lean_a112 lean_s2187
                    let lean_s2189 := by timed And.intro lean_a108 lean_s2188
                    have lean_s2190 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a109 lean_s2189
                    have lean_s2191 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a107 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                        (scope (fun lean_a108 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a109 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
                            (scope (fun lean_a110 : (Eq x (Int.ofNat 6)) =>
                              (scope (fun lean_a111 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a112 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
                                        have lean_s2191 : (Eq (Int.ofNat 6) x) := by timed Eq.symm lean_a110
                                        have lean_s2192 : (Eq x (Int.ofNat 6)) := by timed Eq.symm lean_s2191
                                        let lean_s2193 := by timed flipCongrArg lean_s2192 [Sum]
                                        have lean_s2194 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a112
                                        have lean_s2195 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s2194
                                        have lean_s2196 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2195 [Succ]
                                        have lean_s2197 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a111
                                        have lean_s2198 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2197
                                        have lean_s2199 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2196 lean_s2198
                                        have lean_s2200 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed congr lean_s2193 lean_s2199
                                        have lean_s2201 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed Eq.symm lean_a109
                                        have lean_s2202 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2201
                                        have lean_s2203 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2200 lean_s2202
                                        have lean_s2204 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2203 [Pred]
                                        have lean_s2205 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a108
                                        have lean_s2206 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2205
                                        have lean_s2207 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2204 lean_s2206
                                        let lean_s2208 := by timed flipCongrArg lean_s2207 [Sum]
                                        let lean_s2209 := by timed flipCongrArg lean_s2195 [Sum]
                                        let lean_s2210 := by timed flipCongrArg lean_s2192 [Sum]
                                        have lean_s2211 : (Eq (Sum x y) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed congr lean_s2210 lean_s2195
                                        have lean_s2212 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed Eq.symm lean_a115
                                        have lean_s2213 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2212
                                        have lean_s2214 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s2211 lean_s2213
                                        have lean_s2215 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2214 [Pred]
                                        have lean_s2216 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a114
                                        have lean_s2217 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2216
                                        have lean_s2218 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2215 lean_s2217
                                        have lean_s2219 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s2209 lean_s2218
                                        have lean_s2220 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a113
                                        have lean_s2221 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s2220
                                        have lean_s2222 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2219 lean_s2221
                                        have lean_s2223 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s2208 lean_s2222
                                        have lean_s2224 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a107
                                        have lean_s2225 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2224
                                        have lean_s2226 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s2223 lean_s2225
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2226
                      ))))))))))))))))))
                    have lean_s2192 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2191, 9
                    have lean_s2193 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s2190 lean_s2192
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2193
  ))))))))))))))))))
have lean_s2184 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2183, 9
have lean_s2185 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s2184
have lean_s2186 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s2182, lean_s2185, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s2187 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s2186, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2188 := by R1 lean_s2181, lean_s2187, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s2189 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s1846, 67
let lean_s2190 := by R2 lean_s2188, lean_s2189, (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2191 := by R2 lean_s2190, lean_s2154, (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2192 := by R2 lean_s2191, lean_s1873, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2193 := by R2 lean_s2192, lean_s1938, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2194 := by R2 lean_s2193, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2195 := by R2 lean_s2194, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2196 := by R2 lean_s2195, lean_s2004, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2197 := by R1 lean_s2196, lean_s1883, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s2198 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), (Eq x (Int.ofNat 6)), (Eq y (Int.ofNat 4))]
have lean_s2199 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a107 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a108 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a109 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
          (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
            (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
              (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
                (scope (fun lean_a114 : (Eq x (Int.ofNat 6)) =>
                  (scope (fun lean_a115 : (Eq y (Int.ofNat 4)) =>
                    let lean_s2199 := by timed And.intro lean_a108 lean_a112
                    let lean_s2200 := by timed And.intro lean_a111 lean_s2199
                    let lean_s2201 := by timed And.intro lean_a115 lean_s2200
                    let lean_s2202 := by timed And.intro lean_a107 lean_s2201
                    let lean_s2203 := by timed And.intro lean_a114 lean_s2202
                    let lean_s2204 := by timed And.intro lean_a113 lean_s2203
                    let lean_s2205 := by timed And.intro lean_a109 lean_s2204
                    have lean_s2206 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a110 lean_s2205
                    have lean_s2207 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
                        (scope (fun lean_a109 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
                            (scope (fun lean_a111 : (Eq x (Int.ofNat 6)) =>
                              (scope (fun lean_a112 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a113 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
                                    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
                                        have lean_s2207 : (Eq (Int.ofNat 6) x) := by timed Eq.symm lean_a111
                                        have lean_s2208 : (Eq x (Int.ofNat 6)) := by timed Eq.symm lean_s2207
                                        let lean_s2209 := by timed flipCongrArg lean_s2208 [Sum]
                                        have lean_s2210 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a113
                                        have lean_s2211 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s2210
                                        have lean_s2212 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s2211 [Succ]
                                        have lean_s2213 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a112
                                        have lean_s2214 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2213
                                        have lean_s2215 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s2212 lean_s2214
                                        have lean_s2216 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed congr lean_s2209 lean_s2215
                                        have lean_s2217 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed Eq.symm lean_a110
                                        have lean_s2218 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2217
                                        have lean_s2219 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2216 lean_s2218
                                        have lean_s2220 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2219 [Pred]
                                        have lean_s2221 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a109
                                        have lean_s2222 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2221
                                        have lean_s2223 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2220 lean_s2222
                                        let lean_s2224 := by timed flipCongrArg lean_s2223 [Sum]
                                        let lean_s2225 := by timed flipCongrArg lean_s2211 [Sum]
                                        let lean_s2226 := by timed flipCongrArg lean_s2208 [Sum]
                                        have lean_s2227 : (Eq (Sum x y) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed congr lean_s2226 lean_s2211
                                        have lean_s2228 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed Eq.symm lean_a116
                                        have lean_s2229 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2228
                                        have lean_s2230 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2227 lean_s2229
                                        have lean_s2231 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2230 [Pred]
                                        have lean_s2232 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a115
                                        have lean_s2233 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2232
                                        have lean_s2234 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2231 lean_s2233
                                        have lean_s2235 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s2225 lean_s2234
                                        have lean_s2236 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a114
                                        have lean_s2237 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by timed Eq.symm lean_s2236
                                        have lean_s2238 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2235 lean_s2237
                                        have lean_s2239 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed congr lean_s2224 lean_s2238
                                        have lean_s2240 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed Eq.symm lean_a108
                                        have lean_s2241 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by timed Eq.symm lean_s2240
                                        have lean_s2242 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2239 lean_s2241
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2242
                      ))))))))))))))))))
                    have lean_s2208 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2207, 9
                    have lean_s2209 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2206 lean_s2208
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2209
  ))))))))))))))))))
have lean_s2200 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2199, 9
have lean_s2201 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2200
have lean_s2202 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2198, lean_s2201, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s2203 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s2202, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2204 := by R1 lean_s2197, lean_s2203, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s2205 := by R2 lean_s2204, lean_s2172, (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
have lean_s2206 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s1846, 68
let lean_s2207 := by R2 lean_s2205, lean_s2206, (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2208 := by R2 lean_s2207, lean_s1997, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2209 := by R2 lean_s2208, lean_s2037, (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2210 := by R2 lean_s2209, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2211 := by R2 lean_s2210, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2212 := by R2 lean_s2211, lean_s2077, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2213 := by R1 lean_s2212, lean_s1904, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s2214 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), (Eq x (Int.ofNat 6)), (Eq y (Int.ofNat 3))]
have lean_s2215 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
  (scope (fun lean_a108 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a109 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a110 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
          (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
            (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
              (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
                (scope (fun lean_a115 : (Eq x (Int.ofNat 6)) =>
                  (scope (fun lean_a116 : (Eq y (Int.ofNat 3)) =>
                    let lean_s2215 := by timed And.intro lean_a109 lean_a113
                    let lean_s2216 := by timed And.intro lean_a112 lean_s2215
                    let lean_s2217 := by timed And.intro lean_a116 lean_s2216
                    let lean_s2218 := by timed And.intro lean_a108 lean_s2217
                    let lean_s2219 := by timed And.intro lean_a115 lean_s2218
                    let lean_s2220 := by timed And.intro lean_a114 lean_s2219
                    let lean_s2221 := by timed And.intro lean_a110 lean_s2220
                    have lean_s2222 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a111 lean_s2221
                    have lean_s2223 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
                      (scope (fun lean_a108 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
                        (scope (fun lean_a109 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
                            (scope (fun lean_a111 : (Eq x (Int.ofNat 6)) =>
                              (scope (fun lean_a112 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a113 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
                                        have lean_s2223 : (Eq (Int.ofNat 6) x) := by timed Eq.symm lean_a111
                                        have lean_s2224 : (Eq x (Int.ofNat 6)) := by timed Eq.symm lean_s2223
                                        let lean_s2225 := by timed flipCongrArg lean_s2224 [Sum]
                                        have lean_s2226 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a113
                                        have lean_s2227 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s2226
                                        have lean_s2228 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s2227 [Succ]
                                        have lean_s2229 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a112
                                        have lean_s2230 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s2229
                                        have lean_s2231 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s2228 lean_s2230
                                        have lean_s2232 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed congr lean_s2225 lean_s2231
                                        have lean_s2233 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed Eq.symm lean_a110
                                        have lean_s2234 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2233
                                        have lean_s2235 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2232 lean_s2234
                                        have lean_s2236 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2235 [Pred]
                                        have lean_s2237 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a109
                                        have lean_s2238 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2237
                                        have lean_s2239 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2236 lean_s2238
                                        let lean_s2240 := by timed flipCongrArg lean_s2239 [Sum]
                                        let lean_s2241 := by timed flipCongrArg lean_s2227 [Sum]
                                        let lean_s2242 := by timed flipCongrArg lean_s2224 [Sum]
                                        have lean_s2243 : (Eq (Sum x y) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed congr lean_s2242 lean_s2227
                                        have lean_s2244 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed Eq.symm lean_a116
                                        have lean_s2245 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2244
                                        have lean_s2246 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s2243 lean_s2245
                                        have lean_s2247 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2246 [Pred]
                                        have lean_s2248 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a115
                                        have lean_s2249 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2248
                                        have lean_s2250 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2247 lean_s2249
                                        have lean_s2251 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s2241 lean_s2250
                                        have lean_s2252 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a114
                                        have lean_s2253 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s2252
                                        have lean_s2254 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2251 lean_s2253
                                        have lean_s2255 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s2240 lean_s2254
                                        have lean_s2256 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a108
                                        have lean_s2257 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by timed Eq.symm lean_s2256
                                        have lean_s2258 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed Eq.trans lean_s2255 lean_s2257
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2258
                      ))))))))))))))))))
                    have lean_s2224 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2223, 9
                    have lean_s2225 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed modusPonens lean_s2222 lean_s2224
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2225
  ))))))))))))))))))
have lean_s2216 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2215, 9
have lean_s2217 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed impliesElim lean_s2216
have lean_s2218 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) := by R1 lean_s2214, lean_s2217, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s2219 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s2218, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2220 := by R1 lean_s2213, lean_s2219, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s2221 := by R2 lean_s2220, lean_s2206, (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2222 := by R2 lean_s2221, lean_s2189, (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2223 := by R2 lean_s2222, lean_s2106, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2224 := by R2 lean_s2223, lean_s1851, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2225 := by R2 lean_s2224, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2226 := by R2 lean_s2225, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2227 := by R2 lean_s2226, lean_s1859, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
have lean_s2228 : (Or (Not (Eq x (Int.ofNat 6))) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq x (Int.ofNat 6))))))))) := by R1 lean_s2227, lean_s1429, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)), [(- 1), 0]
have lean_s2229 : (Or (Not (Eq x (Int.ofNat 6))) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))) := by factor lean_s2228, 6
have lean_s2230 : (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Not (Eq x (Int.ofNat 6))))) := by permutateOr lean_s2229, [1, 2, 0], (- 1)
have lean_s2231 : (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))))))))))))))))) := by R1 lean_s2147, lean_s2230, (Eq x (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2232 : (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Eq x (Int.ofNat 0))))))) := by factor lean_s2231, 21
have lean_s2233 : (Or (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 6)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 6))]
have lean_s2234 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
  (scope (fun lean_a108 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
    (scope (fun lean_a109 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a110 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
          (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
            (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
              (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
                (scope (fun lean_a115 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a116 : (Eq y (Int.ofNat 6)) =>
                    let lean_s2234 := by timed And.intro lean_a109 lean_a113
                    let lean_s2235 := by timed And.intro lean_a114 lean_s2234
                    let lean_s2236 := by timed And.intro lean_a116 lean_s2235
                    let lean_s2237 := by timed And.intro lean_a108 lean_s2236
                    let lean_s2238 := by timed And.intro lean_a115 lean_s2237
                    let lean_s2239 := by timed And.intro lean_a112 lean_s2238
                    let lean_s2240 := by timed And.intro lean_a110 lean_s2239
                    have lean_s2241 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a111 lean_s2240
                    have lean_s2242 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
                      (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) =>
                        (scope (fun lean_a111 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                            (scope (fun lean_a113 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
                                (scope (fun lean_a115 : (Eq y (Int.ofNat 6)) =>
                                  (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a117 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
                                        have lean_s2242 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a113
                                        have lean_s2243 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s2242
                                        let lean_s2244 := by timed flipCongrArg lean_s2243 [Sum]
                                        have lean_s2245 : (Eq (Int.ofNat 6) y) := by timed Eq.symm lean_a115
                                        have lean_s2246 : (Eq y (Int.ofNat 6)) := by timed Eq.symm lean_s2245
                                        have lean_s2247 : (Eq (Succ y) (Succ (Int.ofNat 6))) := by timed flipCongrArg lean_s2246 [Succ]
                                        have lean_s2248 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 6))) := by timed Eq.symm lean_a114
                                        have lean_s2249 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2248
                                        have lean_s2250 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2247 lean_s2249
                                        have lean_s2251 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s2244 lean_s2250
                                        have lean_s2252 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a112
                                        have lean_s2253 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s2252
                                        have lean_s2254 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2251 lean_s2253
                                        have lean_s2255 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2254 [Pred]
                                        have lean_s2256 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a111
                                        have lean_s2257 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2256
                                        have lean_s2258 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2255 lean_s2257
                                        let lean_s2259 := by timed flipCongrArg lean_s2258 [Sum]
                                        let lean_s2260 := by timed flipCongrArg lean_s2246 [Sum]
                                        let lean_s2261 := by timed flipCongrArg lean_s2243 [Sum]
                                        have lean_s2262 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed congr lean_s2261 lean_s2246
                                        have lean_s2263 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed Eq.symm lean_a118
                                        have lean_s2264 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by timed Eq.symm lean_s2263
                                        have lean_s2265 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s2262 lean_s2264
                                        have lean_s2266 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2265 [Pred]
                                        have lean_s2267 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a117
                                        have lean_s2268 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2267
                                        have lean_s2269 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2266 lean_s2268
                                        have lean_s2270 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed congr lean_s2260 lean_s2269
                                        have lean_s2271 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed Eq.symm lean_a116
                                        have lean_s2272 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2271
                                        have lean_s2273 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2270 lean_s2272
                                        have lean_s2274 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s2259 lean_s2273
                                        have lean_s2275 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a110
                                        have lean_s2276 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) := by timed Eq.symm lean_s2275
                                        have lean_s2277 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed Eq.trans lean_s2274 lean_s2276
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2277
                      ))))))))))))))))))
                    have lean_s2243 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2242, 9
                    have lean_s2244 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed modusPonens lean_s2241 lean_s2243
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2244
  ))))))))))))))))))
have lean_s2235 : (Implies (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2234, 9
have lean_s2236 : (Or (Not (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed impliesElim lean_s2235
have lean_s2237 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) := by R1 lean_s2233, lean_s2236, (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))))), [(- 1), (- 1)]
have lean_s2238 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s2237, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2239 := by R2 lean_s2238, lean_s2189, (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2240 := by R2 lean_s2239, lean_s2088, (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2241 := by R2 lean_s2240, lean_s1847, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2242 := by R2 lean_s2241, lean_s1997, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2243 := by R2 lean_s2242, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2244 := by R2 lean_s2243, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
have lean_s2245 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by andElim lean_s1846, 14
let lean_s2246 := by R2 lean_s2244, lean_s2245, (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2247 := by R1 lean_s2246, lean_s1429, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)), [(- 1), 0]
let lean_s2248 := by R2 lean_s2247, lean_s1886, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s2249 : (Or (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 6)))))))))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 6)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 6))]
have lean_s2250 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a110 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
    (scope (fun lean_a111 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
          (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
            (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
              (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
                (scope (fun lean_a117 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a118 : (Eq y (Int.ofNat 6)) =>
                    let lean_s2250 := by timed And.intro lean_a111 lean_a115
                    let lean_s2251 := by timed And.intro lean_a116 lean_s2250
                    let lean_s2252 := by timed And.intro lean_a118 lean_s2251
                    let lean_s2253 := by timed And.intro lean_a110 lean_s2252
                    let lean_s2254 := by timed And.intro lean_a117 lean_s2253
                    let lean_s2255 := by timed And.intro lean_a114 lean_s2254
                    let lean_s2256 := by timed And.intro lean_a112 lean_s2255
                    have lean_s2257 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a113 lean_s2256
                    have lean_s2258 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a110 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                        (scope (fun lean_a111 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                            (scope (fun lean_a113 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
                                (scope (fun lean_a115 : (Eq y (Int.ofNat 6)) =>
                                  (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a117 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
                                        have lean_s2258 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a113
                                        have lean_s2259 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s2258
                                        let lean_s2260 := by timed flipCongrArg lean_s2259 [Sum]
                                        have lean_s2261 : (Eq (Int.ofNat 6) y) := by timed Eq.symm lean_a115
                                        have lean_s2262 : (Eq y (Int.ofNat 6)) := by timed Eq.symm lean_s2261
                                        have lean_s2263 : (Eq (Succ y) (Succ (Int.ofNat 6))) := by timed flipCongrArg lean_s2262 [Succ]
                                        have lean_s2264 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 6))) := by timed Eq.symm lean_a114
                                        have lean_s2265 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2264
                                        have lean_s2266 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2263 lean_s2265
                                        have lean_s2267 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s2260 lean_s2266
                                        have lean_s2268 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a112
                                        have lean_s2269 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s2268
                                        have lean_s2270 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2267 lean_s2269
                                        have lean_s2271 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2270 [Pred]
                                        have lean_s2272 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a111
                                        have lean_s2273 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2272
                                        have lean_s2274 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2271 lean_s2273
                                        let lean_s2275 := by timed flipCongrArg lean_s2274 [Sum]
                                        let lean_s2276 := by timed flipCongrArg lean_s2262 [Sum]
                                        let lean_s2277 := by timed flipCongrArg lean_s2259 [Sum]
                                        have lean_s2278 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed congr lean_s2277 lean_s2262
                                        have lean_s2279 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed Eq.symm lean_a118
                                        have lean_s2280 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by timed Eq.symm lean_s2279
                                        have lean_s2281 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s2278 lean_s2280
                                        have lean_s2282 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2281 [Pred]
                                        have lean_s2283 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a117
                                        have lean_s2284 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2283
                                        have lean_s2285 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2282 lean_s2284
                                        have lean_s2286 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed congr lean_s2276 lean_s2285
                                        have lean_s2287 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 6) (Int.ofNat 1))) := by timed Eq.symm lean_a116
                                        have lean_s2288 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2287
                                        have lean_s2289 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2286 lean_s2288
                                        have lean_s2290 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s2275 lean_s2289
                                        have lean_s2291 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a110
                                        have lean_s2292 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s2291
                                        have lean_s2293 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2290 lean_s2292
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2293
                      ))))))))))))))))))
                    have lean_s2259 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2258, 9
                    have lean_s2260 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2257 lean_s2259
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2260
  ))))))))))))))))))
have lean_s2251 : (Implies (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2250, 9
have lean_s2252 : (Or (Not (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 6))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2251
have lean_s2253 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2249, lean_s2252, (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 6)))))))))), [(- 1), (- 1)]
have lean_s2254 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s2253, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2255 := by R1 lean_s2248, lean_s2254, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s2256 := by R2 lean_s2255, lean_s2121, (Eq (Sum (Int.ofNat 6) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2257 := by R2 lean_s2256, lean_s2037, (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2258 := by R2 lean_s2257, lean_s1917, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2259 := by R2 lean_s2258, lean_s1873, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2260 := by R2 lean_s2259, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2261 := by R2 lean_s2260, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2262 := by R2 lean_s2261, lean_s2245, (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2263 := by R1 lean_s2262, lean_s1904, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s2264 : (Or (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 6)))))))))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq y (Int.ofNat 6)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), (Eq x (Int.ofNat 6)), (Eq y (Int.ofNat 6))]
have lean_s2265 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a110 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
    (scope (fun lean_a111 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
      (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
          (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
            (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
              (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                (scope (fun lean_a117 : (Eq x (Int.ofNat 6)) =>
                  (scope (fun lean_a118 : (Eq y (Int.ofNat 6)) =>
                    let lean_s2265 := by timed And.intro lean_a111 lean_a116
                    let lean_s2266 := by timed And.intro lean_a115 lean_s2265
                    let lean_s2267 := by timed And.intro lean_a118 lean_s2266
                    let lean_s2268 := by timed And.intro lean_a110 lean_s2267
                    let lean_s2269 := by timed And.intro lean_a117 lean_s2268
                    let lean_s2270 := by timed And.intro lean_a114 lean_s2269
                    let lean_s2271 := by timed And.intro lean_a112 lean_s2270
                    have lean_s2272 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a113 lean_s2271
                    have lean_s2273 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
                        (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                          (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
                            (scope (fun lean_a114 : (Eq x (Int.ofNat 6)) =>
                              (scope (fun lean_a115 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
                                (scope (fun lean_a116 : (Eq y (Int.ofNat 6)) =>
                                  (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a118 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                                        have lean_s2273 : (Eq (Int.ofNat 6) x) := by timed Eq.symm lean_a114
                                        have lean_s2274 : (Eq x (Int.ofNat 6)) := by timed Eq.symm lean_s2273
                                        let lean_s2275 := by timed flipCongrArg lean_s2274 [Sum]
                                        have lean_s2276 : (Eq (Int.ofNat 6) y) := by timed Eq.symm lean_a116
                                        have lean_s2277 : (Eq y (Int.ofNat 6)) := by timed Eq.symm lean_s2276
                                        have lean_s2278 : (Eq (Succ y) (Succ (Int.ofNat 6))) := by timed flipCongrArg lean_s2277 [Succ]
                                        have lean_s2279 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 6))) := by timed Eq.symm lean_a115
                                        have lean_s2280 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2279
                                        have lean_s2281 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2278 lean_s2280
                                        have lean_s2282 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed congr lean_s2275 lean_s2281
                                        have lean_s2283 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed Eq.symm lean_a113
                                        have lean_s2284 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2283
                                        have lean_s2285 : (Eq (Sum x (Succ y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2282 lean_s2284
                                        have lean_s2286 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2285 [Pred]
                                        have lean_s2287 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a112
                                        have lean_s2288 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2287
                                        have lean_s2289 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2286 lean_s2288
                                        let lean_s2290 := by timed flipCongrArg lean_s2289 [Sum]
                                        let lean_s2291 := by timed flipCongrArg lean_s2277 [Sum]
                                        let lean_s2292 := by timed flipCongrArg lean_s2274 [Sum]
                                        have lean_s2293 : (Eq (Sum x y) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s2292 lean_s2277
                                        have lean_s2294 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed Eq.symm lean_a119
                                        have lean_s2295 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2294
                                        have lean_s2296 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s2293 lean_s2295
                                        have lean_s2297 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2296 [Pred]
                                        have lean_s2298 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a118
                                        have lean_s2299 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2298
                                        have lean_s2300 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2297 lean_s2299
                                        have lean_s2301 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed congr lean_s2291 lean_s2300
                                        have lean_s2302 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed Eq.symm lean_a117
                                        have lean_s2303 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2302
                                        have lean_s2304 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2301 lean_s2303
                                        have lean_s2305 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s2290 lean_s2304
                                        have lean_s2306 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a111
                                        have lean_s2307 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s2306
                                        have lean_s2308 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2305 lean_s2307
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2308
                      ))))))))))))))))))
                    have lean_s2274 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2273, 9
                    have lean_s2275 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s2272 lean_s2274
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2275
  ))))))))))))))))))
have lean_s2266 : (Implies (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2265, 9
have lean_s2267 : (Or (Not (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 6))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s2266
have lean_s2268 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s2264, lean_s2267, (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 6)))))))))), [(- 1), (- 1)]
have lean_s2269 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2268, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2270 := by R1 lean_s2263, lean_s2269, (Eq x (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2271 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by andElim lean_s1846, 70
let lean_s2272 := by R2 lean_s2270, lean_s2271, (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2273 := by R2 lean_s2272, lean_s2206, (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2274 := by R2 lean_s2273, lean_s1993, (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2275 := by R2 lean_s2274, lean_s1915, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2276 := by R2 lean_s2275, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2277 := by R2 lean_s2276, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2278 := by R2 lean_s2277, lean_s2245, (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2279 := by R1 lean_s2278, lean_s1982, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s2280 : (Or (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 6)))))))))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 6)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 6))]
have lean_s2281 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a111 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
    (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a113 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
          (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
            (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
              (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
                (scope (fun lean_a118 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a119 : (Eq y (Int.ofNat 6)) =>
                    let lean_s2281 := by timed And.intro lean_a112 lean_a116
                    let lean_s2282 := by timed And.intro lean_a117 lean_s2281
                    let lean_s2283 := by timed And.intro lean_a119 lean_s2282
                    let lean_s2284 := by timed And.intro lean_a111 lean_s2283
                    let lean_s2285 := by timed And.intro lean_a118 lean_s2284
                    let lean_s2286 := by timed And.intro lean_a115 lean_s2285
                    let lean_s2287 := by timed And.intro lean_a113 lean_s2286
                    have lean_s2288 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a114 lean_s2287
                    have lean_s2289 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                        (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                            (scope (fun lean_a114 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a115 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
                                (scope (fun lean_a116 : (Eq y (Int.ofNat 6)) =>
                                  (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a118 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
                                        have lean_s2289 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a114
                                        have lean_s2290 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s2289
                                        let lean_s2291 := by timed flipCongrArg lean_s2290 [Sum]
                                        have lean_s2292 : (Eq (Int.ofNat 6) y) := by timed Eq.symm lean_a116
                                        have lean_s2293 : (Eq y (Int.ofNat 6)) := by timed Eq.symm lean_s2292
                                        have lean_s2294 : (Eq (Succ y) (Succ (Int.ofNat 6))) := by timed flipCongrArg lean_s2293 [Succ]
                                        have lean_s2295 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 6))) := by timed Eq.symm lean_a115
                                        have lean_s2296 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2295
                                        have lean_s2297 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2294 lean_s2296
                                        have lean_s2298 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s2291 lean_s2297
                                        have lean_s2299 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a113
                                        have lean_s2300 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s2299
                                        have lean_s2301 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2298 lean_s2300
                                        have lean_s2302 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2301 [Pred]
                                        have lean_s2303 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a112
                                        have lean_s2304 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2303
                                        have lean_s2305 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2302 lean_s2304
                                        let lean_s2306 := by timed flipCongrArg lean_s2305 [Sum]
                                        let lean_s2307 := by timed flipCongrArg lean_s2293 [Sum]
                                        let lean_s2308 := by timed flipCongrArg lean_s2290 [Sum]
                                        have lean_s2309 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed congr lean_s2308 lean_s2293
                                        have lean_s2310 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed Eq.symm lean_a119
                                        have lean_s2311 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by timed Eq.symm lean_s2310
                                        have lean_s2312 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2309 lean_s2311
                                        have lean_s2313 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2312 [Pred]
                                        have lean_s2314 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a118
                                        have lean_s2315 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2314
                                        have lean_s2316 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2313 lean_s2315
                                        have lean_s2317 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed congr lean_s2307 lean_s2316
                                        have lean_s2318 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed Eq.symm lean_a117
                                        have lean_s2319 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2318
                                        have lean_s2320 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2317 lean_s2319
                                        have lean_s2321 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s2306 lean_s2320
                                        have lean_s2322 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a111
                                        have lean_s2323 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s2322
                                        have lean_s2324 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s2321 lean_s2323
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2324
                      ))))))))))))))))))
                    have lean_s2290 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2289, 9
                    have lean_s2291 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s2288 lean_s2290
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2291
  ))))))))))))))))))
have lean_s2282 : (Implies (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2281, 9
have lean_s2283 : (Or (Not (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 6))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s2282
have lean_s2284 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s2280, lean_s2283, (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 6)))))))))), [(- 1), (- 1)]
have lean_s2285 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s2284, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2286 := by R1 lean_s2279, lean_s2285, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s2287 := by R2 lean_s2286, lean_s2154, (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2288 := by R2 lean_s2287, lean_s1955, (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2289 := by R2 lean_s2288, lean_s2018, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2290 := by R2 lean_s2289, lean_s2106, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2291 := by R2 lean_s2290, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2292 := by R2 lean_s2291, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2293 := by R2 lean_s2292, lean_s2245, (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2294 := by R1 lean_s2293, lean_s1925, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s2295 : (Or (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 6)))))))))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 6)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 6))]
have lean_s2296 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a111 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
    (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a113 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
          (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
            (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
              (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                (scope (fun lean_a118 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a119 : (Eq y (Int.ofNat 6)) =>
                    let lean_s2296 := by timed And.intro lean_a112 lean_a116
                    let lean_s2297 := by timed And.intro lean_a117 lean_s2296
                    let lean_s2298 := by timed And.intro lean_a119 lean_s2297
                    let lean_s2299 := by timed And.intro lean_a111 lean_s2298
                    let lean_s2300 := by timed And.intro lean_a118 lean_s2299
                    let lean_s2301 := by timed And.intro lean_a115 lean_s2300
                    let lean_s2302 := by timed And.intro lean_a113 lean_s2301
                    have lean_s2303 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a114 lean_s2302
                    have lean_s2304 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a111 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
                        (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
                            (scope (fun lean_a114 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a115 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
                                (scope (fun lean_a116 : (Eq y (Int.ofNat 6)) =>
                                  (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a118 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                                      (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
                                        have lean_s2304 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a114
                                        have lean_s2305 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s2304
                                        let lean_s2306 := by timed flipCongrArg lean_s2305 [Sum]
                                        have lean_s2307 : (Eq (Int.ofNat 6) y) := by timed Eq.symm lean_a116
                                        have lean_s2308 : (Eq y (Int.ofNat 6)) := by timed Eq.symm lean_s2307
                                        have lean_s2309 : (Eq (Succ y) (Succ (Int.ofNat 6))) := by timed flipCongrArg lean_s2308 [Succ]
                                        have lean_s2310 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 6))) := by timed Eq.symm lean_a115
                                        have lean_s2311 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2310
                                        have lean_s2312 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2309 lean_s2311
                                        have lean_s2313 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s2306 lean_s2312
                                        have lean_s2314 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed Eq.symm lean_a113
                                        have lean_s2315 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s2314
                                        have lean_s2316 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2313 lean_s2315
                                        have lean_s2317 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2316 [Pred]
                                        have lean_s2318 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a112
                                        have lean_s2319 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2318
                                        have lean_s2320 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2317 lean_s2319
                                        let lean_s2321 := by timed flipCongrArg lean_s2320 [Sum]
                                        let lean_s2322 := by timed flipCongrArg lean_s2308 [Sum]
                                        let lean_s2323 := by timed flipCongrArg lean_s2305 [Sum]
                                        have lean_s2324 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed congr lean_s2323 lean_s2308
                                        have lean_s2325 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed Eq.symm lean_a119
                                        have lean_s2326 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2325
                                        have lean_s2327 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s2324 lean_s2326
                                        have lean_s2328 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2327 [Pred]
                                        have lean_s2329 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a118
                                        have lean_s2330 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2329
                                        have lean_s2331 : (Eq (Pred (Sum x y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2328 lean_s2330
                                        have lean_s2332 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s2322 lean_s2331
                                        have lean_s2333 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed Eq.symm lean_a117
                                        have lean_s2334 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2333
                                        have lean_s2335 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2332 lean_s2334
                                        have lean_s2336 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s2321 lean_s2335
                                        have lean_s2337 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed Eq.symm lean_a111
                                        have lean_s2338 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by timed Eq.symm lean_s2337
                                        have lean_s2339 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s2336 lean_s2338
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2339
                      ))))))))))))))))))
                    have lean_s2305 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2304, 9
                    have lean_s2306 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s2303 lean_s2305
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2306
  ))))))))))))))))))
have lean_s2297 : (Implies (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2296, 9
have lean_s2298 : (Or (Not (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 6))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2297
have lean_s2299 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s2295, lean_s2298, (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 6)))))))))), [(- 1), (- 1)]
have lean_s2300 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2299, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2301 := by R1 lean_s2294, lean_s2300, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s2302 := by R2 lean_s2301, lean_s2271, (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2303 := by R2 lean_s2302, lean_s2157, (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2304 := by R2 lean_s2303, lean_s1975, (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2305 := by R2 lean_s2304, lean_s2176, (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2306 := by R2 lean_s2305, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2307 := by R2 lean_s2306, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2308 := by R2 lean_s2307, lean_s2245, (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2309 := by R1 lean_s2308, lean_s1861, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
have lean_s2310 : (Or (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 6)))))))))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 6)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 6))]
have lean_s2311 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a111 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
    (scope (fun lean_a112 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a113 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
          (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
            (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
              (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
                (scope (fun lean_a118 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a119 : (Eq y (Int.ofNat 6)) =>
                    let lean_s2311 := by timed And.intro lean_a112 lean_a116
                    let lean_s2312 := by timed And.intro lean_a117 lean_s2311
                    let lean_s2313 := by timed And.intro lean_a119 lean_s2312
                    let lean_s2314 := by timed And.intro lean_a111 lean_s2313
                    let lean_s2315 := by timed And.intro lean_a118 lean_s2314
                    let lean_s2316 := by timed And.intro lean_a115 lean_s2315
                    let lean_s2317 := by timed And.intro lean_a113 lean_s2316
                    have lean_s2318 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a114 lean_s2317
                    have lean_s2319 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a112 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
                        (scope (fun lean_a113 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                            (scope (fun lean_a115 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a116 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
                                (scope (fun lean_a117 : (Eq y (Int.ofNat 6)) =>
                                  (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) =>
                                    (scope (fun lean_a119 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
                                        have lean_s2319 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a115
                                        have lean_s2320 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s2319
                                        let lean_s2321 := by timed flipCongrArg lean_s2320 [Sum]
                                        have lean_s2322 : (Eq (Int.ofNat 6) y) := by timed Eq.symm lean_a117
                                        have lean_s2323 : (Eq y (Int.ofNat 6)) := by timed Eq.symm lean_s2322
                                        have lean_s2324 : (Eq (Succ y) (Succ (Int.ofNat 6))) := by timed flipCongrArg lean_s2323 [Succ]
                                        have lean_s2325 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 6))) := by timed Eq.symm lean_a116
                                        have lean_s2326 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2325
                                        have lean_s2327 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2324 lean_s2326
                                        have lean_s2328 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s2321 lean_s2327
                                        have lean_s2329 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a114
                                        have lean_s2330 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s2329
                                        have lean_s2331 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2328 lean_s2330
                                        have lean_s2332 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2331 [Pred]
                                        have lean_s2333 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a113
                                        have lean_s2334 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2333
                                        have lean_s2335 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2332 lean_s2334
                                        let lean_s2336 := by timed flipCongrArg lean_s2335 [Sum]
                                        let lean_s2337 := by timed flipCongrArg lean_s2323 [Sum]
                                        let lean_s2338 := by timed flipCongrArg lean_s2320 [Sum]
                                        have lean_s2339 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed congr lean_s2338 lean_s2323
                                        have lean_s2340 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed Eq.symm lean_a120
                                        have lean_s2341 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by timed Eq.symm lean_s2340
                                        have lean_s2342 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s2339 lean_s2341
                                        have lean_s2343 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2342 [Pred]
                                        have lean_s2344 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a119
                                        have lean_s2345 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2344
                                        have lean_s2346 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2343 lean_s2345
                                        have lean_s2347 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed congr lean_s2337 lean_s2346
                                        have lean_s2348 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 6) (Int.ofNat 0))) := by timed Eq.symm lean_a118
                                        have lean_s2349 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2348
                                        have lean_s2350 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2347 lean_s2349
                                        have lean_s2351 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed congr lean_s2336 lean_s2350
                                        have lean_s2352 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed Eq.symm lean_a112
                                        have lean_s2353 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2352
                                        have lean_s2354 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s2351 lean_s2353
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2354
                      ))))))))))))))))))
                    have lean_s2320 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2319, 9
                    have lean_s2321 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s2318 lean_s2320
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2321
  ))))))))))))))))))
have lean_s2312 : (Implies (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2311, 9
have lean_s2313 : (Or (Not (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 6))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s2312
have lean_s2314 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s2310, lean_s2313, (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 6)))))))))), [(- 1), (- 1)]
have lean_s2315 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)))))))))))) := by permutateOr lean_s2314, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2316 := by R1 lean_s2309, lean_s2315, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s2317 := by R2 lean_s2316, lean_s1993, (Eq (Sum (Int.ofNat 6) (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
have lean_s2318 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by andElim lean_s1846, 42
let lean_s2319 := by R2 lean_s2317, lean_s2318, (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2320 := by R2 lean_s2319, lean_s1873, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2321 := by R2 lean_s2320, lean_s2157, (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2322 := by R2 lean_s2321, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2323 := by R2 lean_s2322, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2324 := by R2 lean_s2323, lean_s2245, (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
have lean_s2325 : (Or (Not (Eq y (Int.ofNat 6))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 6))) (Not (Eq y (Int.ofNat 6))))))))) := by R1 lean_s2324, lean_s2025, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s2326 : (Or (Not (Eq y (Int.ofNat 6))) (Eq x (Int.ofNat 0))) := by factor lean_s2325, 6
have lean_s2327 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 6)))) := by permutateOr lean_s2326, [1, 0], (- 1)
let lean_s2328 := by R1 lean_s2232, lean_s2327, (Eq y (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2329 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 1))]
have lean_s2330 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a112 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a113 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
            (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
              (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                (scope (fun lean_a119 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a120 : (Eq y (Int.ofNat 1)) =>
                    let lean_s2330 := by timed And.intro lean_a114 lean_a116
                    let lean_s2331 := by timed And.intro lean_a115 lean_s2330
                    let lean_s2332 := by timed And.intro lean_a120 lean_s2331
                    let lean_s2333 := by timed And.intro lean_a112 lean_s2332
                    let lean_s2334 := by timed And.intro lean_a119 lean_s2333
                    let lean_s2335 := by timed And.intro lean_a117 lean_s2334
                    let lean_s2336 := by timed And.intro lean_a113 lean_s2335
                    have lean_s2337 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)))))))))) := by timed And.intro lean_a118 lean_s2336
                    have lean_s2338 : (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                        (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                          (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
                            (scope (fun lean_a116 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a117 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a118 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
                                    (scope (fun lean_a120 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a121 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
                                        have lean_s2338 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a116
                                        have lean_s2339 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s2338
                                        let lean_s2340 := by timed flipCongrArg lean_s2339 [Sum]
                                        have lean_s2341 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a118
                                        have lean_s2342 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s2341
                                        have lean_s2343 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s2342 [Succ]
                                        have lean_s2344 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a117
                                        have lean_s2345 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2344
                                        have lean_s2346 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s2343 lean_s2345
                                        have lean_s2347 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s2340 lean_s2346
                                        have lean_s2348 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a115
                                        have lean_s2349 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s2348
                                        have lean_s2350 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2347 lean_s2349
                                        have lean_s2351 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2350 [Pred]
                                        have lean_s2352 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a114
                                        have lean_s2353 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2352
                                        have lean_s2354 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2351 lean_s2353
                                        let lean_s2355 := by timed flipCongrArg lean_s2354 [Sum]
                                        let lean_s2356 := by timed flipCongrArg lean_s2342 [Sum]
                                        let lean_s2357 := by timed flipCongrArg lean_s2339 [Sum]
                                        have lean_s2358 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s2357 lean_s2342
                                        have lean_s2359 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a121
                                        have lean_s2360 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by timed Eq.symm lean_s2359
                                        have lean_s2361 : (Eq (Sum x y) (Int.ofNat 6)) := by timed Eq.trans lean_s2358 lean_s2360
                                        have lean_s2362 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2361 [Pred]
                                        have lean_s2363 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a120
                                        have lean_s2364 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2363
                                        have lean_s2365 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2362 lean_s2364
                                        have lean_s2366 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s2356 lean_s2365
                                        have lean_s2367 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a119
                                        have lean_s2368 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2367
                                        have lean_s2369 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2366 lean_s2368
                                        have lean_s2370 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s2355 lean_s2369
                                        have lean_s2371 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed Eq.symm lean_a113
                                        have lean_s2372 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2371
                                        have lean_s2373 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s2370 lean_s2372
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2373
                      ))))))))))))))))))
                    have lean_s2339 : (Implies (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2338, 9
                    have lean_s2340 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s2337 lean_s2339
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2340
  ))))))))))))))))))
have lean_s2331 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2330, 9
have lean_s2332 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2331
have lean_s2333 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s2329, lean_s2332, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s2334 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2333, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2335 := by R2 lean_s2334, lean_s2271, (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
have lean_s2336 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s1846, 59
let lean_s2337 := by R2 lean_s2335, lean_s2336, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2338 := by R2 lean_s2337, lean_s1896, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), [(- 1), 0]
have lean_s2339 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s1846, 34
let lean_s2340 := by R2 lean_s2338, lean_s2339, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2341 := by R2 lean_s2340, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2342 := by R2 lean_s2341, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2343 := by R2 lean_s2342, lean_s1944, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2344 := by R1 lean_s2343, lean_s1861, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
let lean_s2345 := by R2 lean_s2344, lean_s1886, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s2346 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 1))]
have lean_s2347 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
  (scope (fun lean_a113 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
          (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
            (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
              (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
                (scope (fun lean_a120 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a121 : (Eq y (Int.ofNat 1)) =>
                    let lean_s2347 := by timed And.intro lean_a114 lean_a117
                    let lean_s2348 := by timed And.intro lean_a116 lean_s2347
                    let lean_s2349 := by timed And.intro lean_a121 lean_s2348
                    let lean_s2350 := by timed And.intro lean_a113 lean_s2349
                    let lean_s2351 := by timed And.intro lean_a120 lean_s2350
                    let lean_s2352 := by timed And.intro lean_a118 lean_s2351
                    let lean_s2353 := by timed And.intro lean_a115 lean_s2352
                    have lean_s2354 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a119 lean_s2353
                    have lean_s2355 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
                      (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) =>
                        (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                            (scope (fun lean_a116 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a117 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a118 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a120 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a121 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
                                        have lean_s2355 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a116
                                        have lean_s2356 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s2355
                                        let lean_s2357 := by timed flipCongrArg lean_s2356 [Sum]
                                        have lean_s2358 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a118
                                        have lean_s2359 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s2358
                                        have lean_s2360 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s2359 [Succ]
                                        have lean_s2361 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a117
                                        have lean_s2362 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2361
                                        have lean_s2363 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s2360 lean_s2362
                                        have lean_s2364 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s2357 lean_s2363
                                        have lean_s2365 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a115
                                        have lean_s2366 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s2365
                                        have lean_s2367 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2364 lean_s2366
                                        have lean_s2368 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2367 [Pred]
                                        have lean_s2369 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a114
                                        have lean_s2370 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2369
                                        have lean_s2371 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2368 lean_s2370
                                        let lean_s2372 := by timed flipCongrArg lean_s2371 [Sum]
                                        let lean_s2373 := by timed flipCongrArg lean_s2359 [Sum]
                                        let lean_s2374 := by timed flipCongrArg lean_s2356 [Sum]
                                        have lean_s2375 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s2374 lean_s2359
                                        have lean_s2376 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed Eq.symm lean_a121
                                        have lean_s2377 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by timed Eq.symm lean_s2376
                                        have lean_s2378 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2375 lean_s2377
                                        have lean_s2379 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2378 [Pred]
                                        have lean_s2380 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a120
                                        have lean_s2381 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2380
                                        have lean_s2382 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2379 lean_s2381
                                        have lean_s2383 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s2373 lean_s2382
                                        have lean_s2384 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a119
                                        have lean_s2385 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2384
                                        have lean_s2386 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2383 lean_s2385
                                        have lean_s2387 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s2372 lean_s2386
                                        have lean_s2388 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a113
                                        have lean_s2389 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) := by timed Eq.symm lean_s2388
                                        have lean_s2390 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed Eq.trans lean_s2387 lean_s2389
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2390
                      ))))))))))))))))))
                    have lean_s2356 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2355, 9
                    have lean_s2357 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed modusPonens lean_s2354 lean_s2356
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2357
  ))))))))))))))))))
have lean_s2348 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2347, 9
have lean_s2349 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed impliesElim lean_s2348
have lean_s2350 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) := by R1 lean_s2346, lean_s2349, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s2351 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)))))))))))) := by permutateOr lean_s2350, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2352 := by R1 lean_s2345, lean_s2351, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s2353 := by R2 lean_s2352, lean_s1957, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2354 := by R2 lean_s2353, lean_s1936, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2355 := by R2 lean_s2354, lean_s1871, (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2356 := by R2 lean_s2355, lean_s1938, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2357 := by R2 lean_s2356, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2358 := by R2 lean_s2357, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2359 := by R2 lean_s2358, lean_s1944, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2360 := by R1 lean_s2359, lean_s1429, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)), [(- 1), 0]
let lean_s2361 := by R1 lean_s2360, lean_s1985, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s2362 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 2))]
have lean_s2363 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a113 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
          (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
            (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
              (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
                (scope (fun lean_a120 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a121 : (Eq y (Int.ofNat 2)) =>
                    let lean_s2363 := by timed And.intro lean_a114 lean_a116
                    let lean_s2364 := by timed And.intro lean_a118 lean_s2363
                    let lean_s2365 := by timed And.intro lean_a121 lean_s2364
                    let lean_s2366 := by timed And.intro lean_a113 lean_s2365
                    let lean_s2367 := by timed And.intro lean_a120 lean_s2366
                    let lean_s2368 := by timed And.intro lean_a117 lean_s2367
                    let lean_s2369 := by timed And.intro lean_a115 lean_s2368
                    have lean_s2370 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a119 lean_s2369
                    have lean_s2371 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) =>
                        (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                            (scope (fun lean_a116 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a117 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a118 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a120 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a121 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                                        have lean_s2371 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a116
                                        have lean_s2372 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s2371
                                        let lean_s2373 := by timed flipCongrArg lean_s2372 [Sum]
                                        have lean_s2374 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a118
                                        have lean_s2375 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s2374
                                        have lean_s2376 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2375 [Succ]
                                        have lean_s2377 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a117
                                        have lean_s2378 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2377
                                        have lean_s2379 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2376 lean_s2378
                                        have lean_s2380 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s2373 lean_s2379
                                        have lean_s2381 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a115
                                        have lean_s2382 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s2381
                                        have lean_s2383 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2380 lean_s2382
                                        have lean_s2384 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2383 [Pred]
                                        have lean_s2385 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a114
                                        have lean_s2386 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2385
                                        have lean_s2387 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2384 lean_s2386
                                        let lean_s2388 := by timed flipCongrArg lean_s2387 [Sum]
                                        let lean_s2389 := by timed flipCongrArg lean_s2375 [Sum]
                                        let lean_s2390 := by timed flipCongrArg lean_s2372 [Sum]
                                        have lean_s2391 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s2390 lean_s2375
                                        have lean_s2392 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a121
                                        have lean_s2393 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2392
                                        have lean_s2394 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2391 lean_s2393
                                        have lean_s2395 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2394 [Pred]
                                        have lean_s2396 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a120
                                        have lean_s2397 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2396
                                        have lean_s2398 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2395 lean_s2397
                                        have lean_s2399 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s2389 lean_s2398
                                        have lean_s2400 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a119
                                        have lean_s2401 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s2400
                                        have lean_s2402 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2399 lean_s2401
                                        have lean_s2403 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s2388 lean_s2402
                                        have lean_s2404 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a113
                                        have lean_s2405 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s2404
                                        have lean_s2406 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s2403 lean_s2405
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2406
                      ))))))))))))))))))
                    have lean_s2372 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2371, 9
                    have lean_s2373 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s2370 lean_s2372
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2373
  ))))))))))))))))))
have lean_s2364 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2363, 9
have lean_s2365 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s2364
have lean_s2366 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s2362, lean_s2365, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s2367 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s2366, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2368 := by R2 lean_s2367, lean_s1849, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2369 := by R2 lean_s2368, lean_s1936, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2370 := by R2 lean_s2369, lean_s1919, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2371 := by R2 lean_s2370, lean_s1938, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2372 := by R2 lean_s2371, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2373 := by R2 lean_s2372, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2374 := by R2 lean_s2373, lean_s2004, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2375 := by R1 lean_s2374, lean_s2025, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
let lean_s2376 := by R2 lean_s2375, lean_s1886, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s2377 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 2))]
have lean_s2378 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a113 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
          (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
            (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
              (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
                (scope (fun lean_a120 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a121 : (Eq y (Int.ofNat 2)) =>
                    let lean_s2378 := by timed And.intro lean_a114 lean_a118
                    let lean_s2379 := by timed And.intro lean_a117 lean_s2378
                    let lean_s2380 := by timed And.intro lean_a121 lean_s2379
                    let lean_s2381 := by timed And.intro lean_a113 lean_s2380
                    let lean_s2382 := by timed And.intro lean_a120 lean_s2381
                    let lean_s2383 := by timed And.intro lean_a119 lean_s2382
                    let lean_s2384 := by timed And.intro lean_a115 lean_s2383
                    have lean_s2385 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a116 lean_s2384
                    have lean_s2386 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a113 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                        (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a115 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
                            (scope (fun lean_a116 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a117 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a118 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a120 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                                      (scope (fun lean_a121 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
                                        have lean_s2386 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a116
                                        have lean_s2387 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s2386
                                        let lean_s2388 := by timed flipCongrArg lean_s2387 [Sum]
                                        have lean_s2389 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a118
                                        have lean_s2390 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s2389
                                        have lean_s2391 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2390 [Succ]
                                        have lean_s2392 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a117
                                        have lean_s2393 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2392
                                        have lean_s2394 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2391 lean_s2393
                                        have lean_s2395 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s2388 lean_s2394
                                        have lean_s2396 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a115
                                        have lean_s2397 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s2396
                                        have lean_s2398 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2395 lean_s2397
                                        have lean_s2399 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2398 [Pred]
                                        have lean_s2400 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a114
                                        have lean_s2401 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2400
                                        have lean_s2402 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2399 lean_s2401
                                        let lean_s2403 := by timed flipCongrArg lean_s2402 [Sum]
                                        let lean_s2404 := by timed flipCongrArg lean_s2390 [Sum]
                                        let lean_s2405 := by timed flipCongrArg lean_s2387 [Sum]
                                        have lean_s2406 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s2405 lean_s2390
                                        have lean_s2407 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a121
                                        have lean_s2408 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s2407
                                        have lean_s2409 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s2406 lean_s2408
                                        have lean_s2410 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2409 [Pred]
                                        have lean_s2411 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a120
                                        have lean_s2412 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2411
                                        have lean_s2413 : (Eq (Pred (Sum x y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2410 lean_s2412
                                        have lean_s2414 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed congr lean_s2404 lean_s2413
                                        have lean_s2415 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed Eq.symm lean_a119
                                        have lean_s2416 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by timed Eq.symm lean_s2415
                                        have lean_s2417 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2414 lean_s2416
                                        have lean_s2418 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s2403 lean_s2417
                                        have lean_s2419 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a113
                                        have lean_s2420 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s2419
                                        have lean_s2421 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2418 lean_s2420
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2421
                      ))))))))))))))))))
                    have lean_s2387 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2386, 9
                    have lean_s2388 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s2385 lean_s2387
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2388
  ))))))))))))))))))
have lean_s2379 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2378, 9
have lean_s2380 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s2379
have lean_s2381 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s2377, lean_s2380, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s2382 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s2381, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2383 := by R1 lean_s2376, lean_s2382, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
let lean_s2384 := by R2 lean_s2383, lean_s1915, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2385 := by R2 lean_s2384, lean_s2336, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2386 := by R2 lean_s2385, lean_s2318, (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2387 := by R2 lean_s2386, lean_s1875, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2388 := by R2 lean_s2387, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2389 := by R2 lean_s2388, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2390 := by R2 lean_s2389, lean_s2004, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2391 := by R1 lean_s2390, lean_s1982, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s2392 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 2))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 2))]
have lean_s2393 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))))))))) :=
  (scope (fun lean_a113 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a114 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
          (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
            (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
              (scope (fun lean_a119 : (Eq x (Int.ofNat 2)) =>
                (scope (fun lean_a120 : (Eq y (Int.ofNat 2)) =>
                  let lean_s2393 := by timed And.intro lean_a114 lean_a116
                  let lean_s2394 := by timed And.intro lean_a120 lean_s2393
                  let lean_s2395 := by timed And.intro lean_a113 lean_s2394
                  let lean_s2396 := by timed And.intro lean_a119 lean_s2395
                  let lean_s2397 := by timed And.intro lean_a117 lean_s2396
                  let lean_s2398 := by timed And.intro lean_a115 lean_s2397
                  have lean_s2399 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))))))))) := by timed And.intro lean_a118 lean_s2398
                  have lean_s2400 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))))))))) :=
                    (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
                      (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                        (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                          (scope (fun lean_a117 : (Eq x (Int.ofNat 2)) =>
                            (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                              (scope (fun lean_a119 : (Eq y (Int.ofNat 2)) =>
                                (scope (fun lean_a120 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                  (scope (fun lean_a121 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                                    have lean_s2400 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a117
                                    have lean_s2401 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s2400
                                    let lean_s2402 := by timed flipCongrArg lean_s2401 [Sum]
                                    have lean_s2403 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a119
                                    have lean_s2404 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s2403
                                    have lean_s2405 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2404 [Succ]
                                    have lean_s2406 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a118
                                    have lean_s2407 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2406
                                    have lean_s2408 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2405 lean_s2407
                                    have lean_s2409 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s2402 lean_s2408
                                    have lean_s2410 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed Eq.symm lean_a116
                                    have lean_s2411 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by timed Eq.symm lean_s2410
                                    have lean_s2412 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2409 lean_s2411
                                    have lean_s2413 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2412 [Pred]
                                    have lean_s2414 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a115
                                    have lean_s2415 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2414
                                    have lean_s2416 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2413 lean_s2415
                                    let lean_s2417 := by timed flipCongrArg lean_s2416 [Sum]
                                    let lean_s2418 := by timed flipCongrArg lean_s2404 [Sum]
                                    let lean_s2419 := by timed flipCongrArg lean_s2401 [Sum]
                                    have lean_s2420 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s2419 lean_s2404
                                    have lean_s2421 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a121
                                    have lean_s2422 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s2421
                                    have lean_s2423 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s2420 lean_s2422
                                    have lean_s2424 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2423 [Pred]
                                    have lean_s2425 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a120
                                    have lean_s2426 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2425
                                    have lean_s2427 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2424 lean_s2426
                                    have lean_s2428 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s2418 lean_s2427
                                    have lean_s2429 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2428 lean_s2411
                                    have lean_s2430 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s2417 lean_s2429
                                    have lean_s2431 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a114
                                    have lean_s2432 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s2431
                                    have lean_s2433 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2430 lean_s2432
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2433
                    ))))))))))))))))
                  have lean_s2401 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2400, 8
                  have lean_s2402 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2399 lean_s2401
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2402
  ))))))))))))))))
have lean_s2394 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2393, 8
have lean_s2395 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2394
have lean_s2396 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))))))))) := by R1 lean_s2392, lean_s2395, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2))))))))), [(- 1), (- 1)]
have lean_s2397 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))))))))))) := by permutateOr lean_s2396, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
let lean_s2398 := by R1 lean_s2391, lean_s2397, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s2399 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s1846, 55
let lean_s2400 := by R2 lean_s2398, lean_s2399, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2401 := by R2 lean_s2400, lean_s1853, (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2402 := by R2 lean_s2401, lean_s1936, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2403 := by R2 lean_s2402, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2404 := by R2 lean_s2403, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2405 := by R2 lean_s2404, lean_s2004, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2406 := by R1 lean_s2405, lean_s1904, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
let lean_s2407 := by R1 lean_s2406, lean_s2062, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2408 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 4))]
have lean_s2409 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 4)) =>
                    let lean_s2409 := by timed And.intro lean_a115 lean_a119
                    let lean_s2410 := by timed And.intro lean_a118 lean_s2409
                    let lean_s2411 := by timed And.intro lean_a122 lean_s2410
                    let lean_s2412 := by timed And.intro lean_a114 lean_s2411
                    let lean_s2413 := by timed And.intro lean_a121 lean_s2412
                    let lean_s2414 := by timed And.intro lean_a120 lean_s2413
                    let lean_s2415 := by timed And.intro lean_a116 lean_s2414
                    have lean_s2416 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a117 lean_s2415
                    have lean_s2417 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
                                        have lean_s2417 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a117
                                        have lean_s2418 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s2417
                                        let lean_s2419 := by timed flipCongrArg lean_s2418 [Sum]
                                        have lean_s2420 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a119
                                        have lean_s2421 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s2420
                                        have lean_s2422 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s2421 [Succ]
                                        have lean_s2423 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a118
                                        have lean_s2424 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2423
                                        have lean_s2425 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s2422 lean_s2424
                                        have lean_s2426 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s2419 lean_s2425
                                        have lean_s2427 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a116
                                        have lean_s2428 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s2427
                                        have lean_s2429 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2426 lean_s2428
                                        have lean_s2430 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2429 [Pred]
                                        have lean_s2431 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a115
                                        have lean_s2432 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2431
                                        have lean_s2433 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2430 lean_s2432
                                        let lean_s2434 := by timed flipCongrArg lean_s2433 [Sum]
                                        let lean_s2435 := by timed flipCongrArg lean_s2421 [Sum]
                                        let lean_s2436 := by timed flipCongrArg lean_s2418 [Sum]
                                        have lean_s2437 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s2436 lean_s2421
                                        have lean_s2438 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a122
                                        have lean_s2439 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s2438
                                        have lean_s2440 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s2437 lean_s2439
                                        have lean_s2441 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2440 [Pred]
                                        have lean_s2442 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a121
                                        have lean_s2443 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2442
                                        have lean_s2444 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2441 lean_s2443
                                        have lean_s2445 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s2435 lean_s2444
                                        have lean_s2446 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a120
                                        have lean_s2447 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s2446
                                        have lean_s2448 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2445 lean_s2447
                                        have lean_s2449 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s2434 lean_s2448
                                        have lean_s2450 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a114
                                        have lean_s2451 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2450
                                        have lean_s2452 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s2449 lean_s2451
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2452
                      ))))))))))))))))))
                    have lean_s2418 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2417, 9
                    have lean_s2419 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s2416 lean_s2418
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2419
  ))))))))))))))))))
have lean_s2410 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2409, 9
have lean_s2411 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2410
have lean_s2412 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s2408, lean_s2411, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s2413 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s2412, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2414 := by R2 lean_s2413, lean_s2399, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2415 := by R2 lean_s2414, lean_s2034, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2416 := by R2 lean_s2415, lean_s2018, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2417 := by R2 lean_s2416, lean_s1959, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2418 := by R2 lean_s2417, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2419 := by R2 lean_s2418, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2420 := by R2 lean_s2419, lean_s2077, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2421 := by R1 lean_s2420, lean_s1861, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
let lean_s2422 := by R2 lean_s2421, lean_s1886, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2423 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 4))]
have lean_s2424 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 4)) =>
                    let lean_s2424 := by timed And.intro lean_a115 lean_a117
                    let lean_s2425 := by timed And.intro lean_a119 lean_s2424
                    let lean_s2426 := by timed And.intro lean_a122 lean_s2425
                    let lean_s2427 := by timed And.intro lean_a114 lean_s2426
                    let lean_s2428 := by timed And.intro lean_a121 lean_s2427
                    let lean_s2429 := by timed And.intro lean_a118 lean_s2428
                    let lean_s2430 := by timed And.intro lean_a116 lean_s2429
                    have lean_s2431 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a120 lean_s2430
                    have lean_s2432 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                                        have lean_s2432 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a117
                                        have lean_s2433 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s2432
                                        let lean_s2434 := by timed flipCongrArg lean_s2433 [Sum]
                                        have lean_s2435 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a119
                                        have lean_s2436 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s2435
                                        have lean_s2437 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s2436 [Succ]
                                        have lean_s2438 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a118
                                        have lean_s2439 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2438
                                        have lean_s2440 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s2437 lean_s2439
                                        have lean_s2441 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s2434 lean_s2440
                                        have lean_s2442 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a116
                                        have lean_s2443 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2442
                                        have lean_s2444 : (Eq (Sum x (Succ y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2441 lean_s2443
                                        have lean_s2445 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2444 [Pred]
                                        have lean_s2446 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a115
                                        have lean_s2447 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2446
                                        have lean_s2448 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2445 lean_s2447
                                        let lean_s2449 := by timed flipCongrArg lean_s2448 [Sum]
                                        let lean_s2450 := by timed flipCongrArg lean_s2436 [Sum]
                                        let lean_s2451 := by timed flipCongrArg lean_s2433 [Sum]
                                        have lean_s2452 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s2451 lean_s2436
                                        have lean_s2453 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a122
                                        have lean_s2454 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2453
                                        have lean_s2455 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s2452 lean_s2454
                                        have lean_s2456 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2455 [Pred]
                                        have lean_s2457 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a121
                                        have lean_s2458 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2457
                                        have lean_s2459 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2456 lean_s2458
                                        have lean_s2460 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s2450 lean_s2459
                                        have lean_s2461 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a120
                                        have lean_s2462 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s2461
                                        have lean_s2463 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2460 lean_s2462
                                        have lean_s2464 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s2449 lean_s2463
                                        have lean_s2465 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a114
                                        have lean_s2466 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by timed Eq.symm lean_s2465
                                        have lean_s2467 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed Eq.trans lean_s2464 lean_s2466
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2467
                      ))))))))))))))))))
                    have lean_s2433 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2432, 9
                    have lean_s2434 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed modusPonens lean_s2431 lean_s2433
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2434
  ))))))))))))))))))
have lean_s2425 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2424, 9
have lean_s2426 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed impliesElim lean_s2425
have lean_s2427 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) := by R1 lean_s2423, lean_s2426, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s2428 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)))))))))))) := by permutateOr lean_s2427, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2429 := by R1 lean_s2422, lean_s2428, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s2430 := by R2 lean_s2429, lean_s1896, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2431 := by R2 lean_s2430, lean_s2034, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2432 := by R2 lean_s2431, lean_s2339, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2433 := by R2 lean_s2432, lean_s1959, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2434 := by R2 lean_s2433, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2435 := by R2 lean_s2434, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2436 := by R2 lean_s2435, lean_s2077, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2437 := by R1 lean_s2436, lean_s1429, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)), [(- 1), 0]
have lean_s2438 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 4))]
have lean_s2439 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 4)) =>
                    let lean_s2439 := by timed And.intro lean_a115 lean_a119
                    let lean_s2440 := by timed And.intro lean_a118 lean_s2439
                    let lean_s2441 := by timed And.intro lean_a122 lean_s2440
                    let lean_s2442 := by timed And.intro lean_a114 lean_s2441
                    let lean_s2443 := by timed And.intro lean_a121 lean_s2442
                    let lean_s2444 := by timed And.intro lean_a120 lean_s2443
                    let lean_s2445 := by timed And.intro lean_a116 lean_s2444
                    have lean_s2446 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a117 lean_s2445
                    have lean_s2447 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) =>
                                        have lean_s2447 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a117
                                        have lean_s2448 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s2447
                                        let lean_s2449 := by timed flipCongrArg lean_s2448 [Sum]
                                        have lean_s2450 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a119
                                        have lean_s2451 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s2450
                                        have lean_s2452 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s2451 [Succ]
                                        have lean_s2453 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a118
                                        have lean_s2454 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2453
                                        have lean_s2455 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s2452 lean_s2454
                                        have lean_s2456 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s2449 lean_s2455
                                        have lean_s2457 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a116
                                        have lean_s2458 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s2457
                                        have lean_s2459 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2456 lean_s2458
                                        have lean_s2460 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2459 [Pred]
                                        have lean_s2461 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a115
                                        have lean_s2462 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2461
                                        have lean_s2463 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2460 lean_s2462
                                        let lean_s2464 := by timed flipCongrArg lean_s2463 [Sum]
                                        let lean_s2465 := by timed flipCongrArg lean_s2451 [Sum]
                                        let lean_s2466 := by timed flipCongrArg lean_s2448 [Sum]
                                        have lean_s2467 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s2466 lean_s2451
                                        have lean_s2468 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a122
                                        have lean_s2469 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s2468
                                        have lean_s2470 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s2467 lean_s2469
                                        have lean_s2471 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2470 [Pred]
                                        have lean_s2472 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a121
                                        have lean_s2473 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2472
                                        have lean_s2474 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2471 lean_s2473
                                        have lean_s2475 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s2465 lean_s2474
                                        have lean_s2476 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a120
                                        have lean_s2477 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s2476
                                        have lean_s2478 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2475 lean_s2477
                                        have lean_s2479 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s2464 lean_s2478
                                        have lean_s2480 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a114
                                        have lean_s2481 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s2480
                                        have lean_s2482 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s2479 lean_s2481
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2482
                      ))))))))))))))))))
                    have lean_s2448 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2447, 9
                    have lean_s2449 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s2446 lean_s2448
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s2449
  ))))))))))))))))))
have lean_s2440 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s2439, 9
have lean_s2441 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s2440
have lean_s2442 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s2438, lean_s2441, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s2443 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s2442, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2444 := by R1 lean_s2437, lean_s2443, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
let lean_s2445 := by R2 lean_s2444, lean_s2052, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2446 := by R2 lean_s2445, lean_s1894, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2447 := by R2 lean_s2446, lean_s2016, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2448 := by R2 lean_s2447, lean_s1999, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2449 := by R2 lean_s2448, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2450 := by R2 lean_s2449, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2451 := by R2 lean_s2450, lean_s2077, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2452 := by R1 lean_s2451, lean_s2025, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s2453 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 4))]
have lean_s2454 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 4)) =>
                    let lean_s2454 := by timed And.intro lean_a116 lean_a117
                    let lean_s2455 := by timed And.intro lean_a119 lean_s2454
                    let lean_s2456 := by timed And.intro lean_a122 lean_s2455
                    let lean_s2457 := by timed And.intro lean_a114 lean_s2456
                    let lean_s2458 := by timed And.intro lean_a121 lean_s2457
                    let lean_s2459 := by timed And.intro lean_a118 lean_s2458
                    let lean_s2460 := by timed And.intro lean_a115 lean_s2459
                    have lean_s2461 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)))))))))) := by timed And.intro lean_a120 lean_s2460
                    have lean_s2462 : (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) =>
                                        have lean_s2462 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a117
                                        have lean_s2463 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s2462
                                        let lean_s2464 := by timed flipCongrArg lean_s2463 [Sum]
                                        have lean_s2465 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a119
                                        have lean_s2466 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s2465
                                        have lean_s2467 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s2466 [Succ]
                                        have lean_s2468 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a118
                                        have lean_s2469 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2468
                                        have lean_s2470 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s2467 lean_s2469
                                        have lean_s2471 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s2464 lean_s2470
                                        have lean_s2472 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a116
                                        have lean_s2473 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s2472
                                        have lean_s2474 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2471 lean_s2473
                                        have lean_s2475 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2474 [Pred]
                                        have lean_s2476 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a115
                                        have lean_s2477 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2476
                                        have lean_s2478 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2475 lean_s2477
                                        let lean_s2479 := by timed flipCongrArg lean_s2478 [Sum]
                                        let lean_s2480 := by timed flipCongrArg lean_s2466 [Sum]
                                        let lean_s2481 := by timed flipCongrArg lean_s2463 [Sum]
                                        have lean_s2482 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s2481 lean_s2466
                                        have lean_s2483 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a122
                                        have lean_s2484 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) := by timed Eq.symm lean_s2483
                                        have lean_s2485 : (Eq (Sum x y) (Int.ofNat 6)) := by timed Eq.trans lean_s2482 lean_s2484
                                        have lean_s2486 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2485 [Pred]
                                        have lean_s2487 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a121
                                        have lean_s2488 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2487
                                        have lean_s2489 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2486 lean_s2488
                                        have lean_s2490 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s2480 lean_s2489
                                        have lean_s2491 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a120
                                        have lean_s2492 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s2491
                                        have lean_s2493 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2490 lean_s2492
                                        have lean_s2494 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed congr lean_s2479 lean_s2493
                                        have lean_s2495 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 6) (Int.ofNat 2))) := by timed Eq.symm lean_a114
                                        have lean_s2496 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2495
                                        have lean_s2497 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2494 lean_s2496
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2497
                      ))))))))))))))))))
                    have lean_s2463 : (Implies (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2462, 9
                    have lean_s2464 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s2461 lean_s2463
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2464
  ))))))))))))))))))
have lean_s2455 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2454, 9
have lean_s2456 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s2455
have lean_s2457 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s2453, lean_s2456, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s2458 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s2457, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2459 := by R1 lean_s2452, lean_s2458, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s2460 := by R2 lean_s2459, lean_s2154, (Eq (Sum (Int.ofNat 6) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2461 := by R2 lean_s2460, lean_s2399, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2462 := by R2 lean_s2461, lean_s1999, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2463 := by R2 lean_s2462, lean_s1851, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2464 := by R2 lean_s2463, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2465 := by R2 lean_s2464, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2466 := by R2 lean_s2465, lean_s2077, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2467 := by R1 lean_s2466, lean_s1982, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
let lean_s2468 := by R1 lean_s2467, lean_s2146, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s2469 : (Or (Not (Eq y (Int.ofNat 4))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))))) := by R1 lean_s2468, lean_s2230, (Eq x (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2470 : (Or (Not (Eq y (Int.ofNat 4))) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))) := by factor lean_s2469, (- 1)
let lean_s2471 := by R1 lean_s2470, lean_s2327, (Eq y (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2472 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 6))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), (Eq x (Int.ofNat 6)), (Eq y (Int.ofNat 5))]
have lean_s2473 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 6)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 5)) =>
                    let lean_s2473 := by timed And.intro lean_a115 lean_a119
                    let lean_s2474 := by timed And.intro lean_a118 lean_s2473
                    let lean_s2475 := by timed And.intro lean_a122 lean_s2474
                    let lean_s2476 := by timed And.intro lean_a114 lean_s2475
                    let lean_s2477 := by timed And.intro lean_a121 lean_s2476
                    let lean_s2478 := by timed And.intro lean_a120 lean_s2477
                    let lean_s2479 := by timed And.intro lean_a116 lean_s2478
                    have lean_s2480 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a117 lean_s2479
                    have lean_s2481 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 6)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
                                        have lean_s2481 : (Eq (Int.ofNat 6) x) := by timed Eq.symm lean_a117
                                        have lean_s2482 : (Eq x (Int.ofNat 6)) := by timed Eq.symm lean_s2481
                                        let lean_s2483 := by timed flipCongrArg lean_s2482 [Sum]
                                        have lean_s2484 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a119
                                        have lean_s2485 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s2484
                                        have lean_s2486 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s2485 [Succ]
                                        have lean_s2487 : (Eq (Int.ofNat 6) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a118
                                        have lean_s2488 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2487
                                        have lean_s2489 : (Eq (Succ y) (Int.ofNat 6)) := by timed Eq.trans lean_s2486 lean_s2488
                                        have lean_s2490 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s2483 lean_s2489
                                        have lean_s2491 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 6) (Int.ofNat 6))) := by timed Eq.symm lean_a116
                                        have lean_s2492 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2491
                                        have lean_s2493 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2490 lean_s2492
                                        have lean_s2494 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2493 [Pred]
                                        have lean_s2495 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a115
                                        have lean_s2496 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2495
                                        have lean_s2497 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2494 lean_s2496
                                        let lean_s2498 := by timed flipCongrArg lean_s2497 [Sum]
                                        let lean_s2499 := by timed flipCongrArg lean_s2485 [Sum]
                                        let lean_s2500 := by timed flipCongrArg lean_s2482 [Sum]
                                        have lean_s2501 : (Eq (Sum x y) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed congr lean_s2500 lean_s2485
                                        have lean_s2502 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed Eq.symm lean_a122
                                        have lean_s2503 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2502
                                        have lean_s2504 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s2501 lean_s2503
                                        have lean_s2505 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2504 [Pred]
                                        have lean_s2506 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a121
                                        have lean_s2507 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2506
                                        have lean_s2508 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2505 lean_s2507
                                        have lean_s2509 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s2499 lean_s2508
                                        have lean_s2510 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a120
                                        have lean_s2511 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s2510
                                        have lean_s2512 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2509 lean_s2511
                                        have lean_s2513 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s2498 lean_s2512
                                        have lean_s2514 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a114
                                        have lean_s2515 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s2514
                                        have lean_s2516 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s2513 lean_s2515
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2516
                      ))))))))))))))))))
                    have lean_s2482 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2481, 9
                    have lean_s2483 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s2480 lean_s2482
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2483
  ))))))))))))))))))
have lean_s2474 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2473, 9
have lean_s2475 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2474
have lean_s2476 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s2472, lean_s2475, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 6)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s2477 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2476, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2478 := by R2 lean_s2477, lean_s2271, (Eq (Sum (Int.ofNat 6) (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2479 := by R2 lean_s2478, lean_s2172, (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2480 := by R2 lean_s2479, lean_s1915, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2481 := by R2 lean_s2480, lean_s2016, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2482 := by R2 lean_s2481, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2483 := by R2 lean_s2482, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
have lean_s2484 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by andElim lean_s1846, 13
let lean_s2485 := by R2 lean_s2483, lean_s2484, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2486 := by R1 lean_s2485, lean_s1861, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
let lean_s2487 := by R2 lean_s2486, lean_s1886, (Eq x (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2488 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 5))]
have lean_s2489 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 5)) =>
                    let lean_s2489 := by timed And.intro lean_a115 lean_a118
                    let lean_s2490 := by timed And.intro lean_a120 lean_s2489
                    let lean_s2491 := by timed And.intro lean_a122 lean_s2490
                    let lean_s2492 := by timed And.intro lean_a114 lean_s2491
                    let lean_s2493 := by timed And.intro lean_a121 lean_s2492
                    let lean_s2494 := by timed And.intro lean_a119 lean_s2493
                    let lean_s2495 := by timed And.intro lean_a116 lean_s2494
                    have lean_s2496 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a117 lean_s2495
                    have lean_s2497 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) =>
                                        have lean_s2497 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a117
                                        have lean_s2498 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s2497
                                        let lean_s2499 := by timed flipCongrArg lean_s2498 [Sum]
                                        have lean_s2500 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a119
                                        have lean_s2501 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s2500
                                        have lean_s2502 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s2501 [Succ]
                                        have lean_s2503 : (Eq (Int.ofNat 6) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a118
                                        have lean_s2504 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2503
                                        have lean_s2505 : (Eq (Succ y) (Int.ofNat 6)) := by timed Eq.trans lean_s2502 lean_s2504
                                        have lean_s2506 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed congr lean_s2499 lean_s2505
                                        have lean_s2507 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed Eq.symm lean_a116
                                        have lean_s2508 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by timed Eq.symm lean_s2507
                                        have lean_s2509 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2506 lean_s2508
                                        have lean_s2510 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2509 [Pred]
                                        have lean_s2511 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a115
                                        have lean_s2512 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2511
                                        have lean_s2513 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2510 lean_s2512
                                        let lean_s2514 := by timed flipCongrArg lean_s2513 [Sum]
                                        let lean_s2515 := by timed flipCongrArg lean_s2501 [Sum]
                                        let lean_s2516 := by timed flipCongrArg lean_s2498 [Sum]
                                        have lean_s2517 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s2516 lean_s2501
                                        have lean_s2518 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a122
                                        have lean_s2519 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s2518
                                        have lean_s2520 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s2517 lean_s2519
                                        have lean_s2521 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2520 [Pred]
                                        have lean_s2522 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a121
                                        have lean_s2523 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2522
                                        have lean_s2524 : (Eq (Pred (Sum x y)) (Int.ofNat 6)) := by timed Eq.trans lean_s2521 lean_s2523
                                        have lean_s2525 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed congr lean_s2515 lean_s2524
                                        have lean_s2526 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed Eq.symm lean_a120
                                        have lean_s2527 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by timed Eq.symm lean_s2526
                                        have lean_s2528 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2525 lean_s2527
                                        have lean_s2529 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s2514 lean_s2528
                                        have lean_s2530 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a114
                                        have lean_s2531 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s2530
                                        have lean_s2532 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s2529 lean_s2531
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2532
                      ))))))))))))))))))
                    have lean_s2498 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2497, 9
                    have lean_s2499 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s2496 lean_s2498
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2499
  ))))))))))))))))))
have lean_s2490 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2489, 9
have lean_s2491 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s2490
have lean_s2492 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s2488, lean_s2491, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s2493 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s2492, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2494 := by R1 lean_s2487, lean_s2493, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s2495 := by R2 lean_s2494, lean_s2088, (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2496 := by R2 lean_s2495, lean_s2318, (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2497 := by R2 lean_s2496, lean_s1999, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2498 := by R2 lean_s2497, lean_s1899, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2499 := by R2 lean_s2498, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2500 := by R2 lean_s2499, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2501 := by R2 lean_s2500, lean_s2484, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2502 := by R1 lean_s2501, lean_s1925, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s2503 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 5))]
have lean_s2504 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 5)) =>
                    let lean_s2504 := by timed And.intro lean_a115 lean_a118
                    let lean_s2505 := by timed And.intro lean_a120 lean_s2504
                    let lean_s2506 := by timed And.intro lean_a122 lean_s2505
                    let lean_s2507 := by timed And.intro lean_a114 lean_s2506
                    let lean_s2508 := by timed And.intro lean_a121 lean_s2507
                    let lean_s2509 := by timed And.intro lean_a119 lean_s2508
                    let lean_s2510 := by timed And.intro lean_a116 lean_s2509
                    have lean_s2511 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a117 lean_s2510
                    have lean_s2512 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) =>
                                        have lean_s2512 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a117
                                        have lean_s2513 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s2512
                                        let lean_s2514 := by timed flipCongrArg lean_s2513 [Sum]
                                        have lean_s2515 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a119
                                        have lean_s2516 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s2515
                                        have lean_s2517 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s2516 [Succ]
                                        have lean_s2518 : (Eq (Int.ofNat 6) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a118
                                        have lean_s2519 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2518
                                        have lean_s2520 : (Eq (Succ y) (Int.ofNat 6)) := by timed Eq.trans lean_s2517 lean_s2519
                                        have lean_s2521 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed congr lean_s2514 lean_s2520
                                        have lean_s2522 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 6))) := by timed Eq.symm lean_a116
                                        have lean_s2523 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) := by timed Eq.symm lean_s2522
                                        have lean_s2524 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2521 lean_s2523
                                        have lean_s2525 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2524 [Pred]
                                        have lean_s2526 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a115
                                        have lean_s2527 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2526
                                        have lean_s2528 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2525 lean_s2527
                                        let lean_s2529 := by timed flipCongrArg lean_s2528 [Sum]
                                        let lean_s2530 := by timed flipCongrArg lean_s2516 [Sum]
                                        let lean_s2531 := by timed flipCongrArg lean_s2513 [Sum]
                                        have lean_s2532 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s2531 lean_s2516
                                        have lean_s2533 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a122
                                        have lean_s2534 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s2533
                                        have lean_s2535 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s2532 lean_s2534
                                        have lean_s2536 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2535 [Pred]
                                        have lean_s2537 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a121
                                        have lean_s2538 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2537
                                        have lean_s2539 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2536 lean_s2538
                                        have lean_s2540 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s2530 lean_s2539
                                        have lean_s2541 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a120
                                        have lean_s2542 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) := by timed Eq.symm lean_s2541
                                        have lean_s2543 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2540 lean_s2542
                                        have lean_s2544 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed congr lean_s2529 lean_s2543
                                        have lean_s2545 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 6))) := by timed Eq.symm lean_a114
                                        have lean_s2546 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) := by timed Eq.symm lean_s2545
                                        have lean_s2547 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2544 lean_s2546
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2547
                      ))))))))))))))))))
                    have lean_s2513 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2512, 9
                    have lean_s2514 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s2511 lean_s2513
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2514
  ))))))))))))))))))
have lean_s2505 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2504, 9
have lean_s2506 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s2505
have lean_s2507 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s2503, lean_s2506, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s2508 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)))))))))))) := by permutateOr lean_s2507, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2509 := by R1 lean_s2502, lean_s2508, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s2510 := by R2 lean_s2509, lean_s1896, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2511 := by R2 lean_s2510, lean_s1955, (Eq (Sum (Int.ofNat 4) (Int.ofNat 6)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2512 := by R2 lean_s2511, lean_s2399, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2513 := by R2 lean_s2512, lean_s2318, (Eq (Sum (Int.ofNat 2) (Int.ofNat 6)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2514 := by R2 lean_s2513, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2515 := by R2 lean_s2514, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2516 := by R2 lean_s2515, lean_s2484, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2517 := by R1 lean_s2516, lean_s1982, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s2518 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 5))]
have lean_s2519 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 5)) =>
                    let lean_s2519 := by timed And.intro lean_a115 lean_a118
                    let lean_s2520 := by timed And.intro lean_a120 lean_s2519
                    let lean_s2521 := by timed And.intro lean_a122 lean_s2520
                    let lean_s2522 := by timed And.intro lean_a114 lean_s2521
                    let lean_s2523 := by timed And.intro lean_a121 lean_s2522
                    let lean_s2524 := by timed And.intro lean_a119 lean_s2523
                    let lean_s2525 := by timed And.intro lean_a116 lean_s2524
                    have lean_s2526 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a117 lean_s2525
                    have lean_s2527 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
                                        have lean_s2527 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a117
                                        have lean_s2528 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s2527
                                        let lean_s2529 := by timed flipCongrArg lean_s2528 [Sum]
                                        have lean_s2530 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a119
                                        have lean_s2531 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s2530
                                        have lean_s2532 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s2531 [Succ]
                                        have lean_s2533 : (Eq (Int.ofNat 6) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a118
                                        have lean_s2534 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2533
                                        have lean_s2535 : (Eq (Succ y) (Int.ofNat 6)) := by timed Eq.trans lean_s2532 lean_s2534
                                        have lean_s2536 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed congr lean_s2529 lean_s2535
                                        have lean_s2537 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 6))) := by timed Eq.symm lean_a116
                                        have lean_s2538 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) := by timed Eq.symm lean_s2537
                                        have lean_s2539 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2536 lean_s2538
                                        have lean_s2540 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2539 [Pred]
                                        have lean_s2541 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a115
                                        have lean_s2542 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2541
                                        have lean_s2543 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2540 lean_s2542
                                        let lean_s2544 := by timed flipCongrArg lean_s2543 [Sum]
                                        let lean_s2545 := by timed flipCongrArg lean_s2531 [Sum]
                                        let lean_s2546 := by timed flipCongrArg lean_s2528 [Sum]
                                        have lean_s2547 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s2546 lean_s2531
                                        have lean_s2548 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a122
                                        have lean_s2549 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s2548
                                        have lean_s2550 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s2547 lean_s2549
                                        have lean_s2551 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2550 [Pred]
                                        have lean_s2552 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a121
                                        have lean_s2553 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2552
                                        have lean_s2554 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2551 lean_s2553
                                        have lean_s2555 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s2545 lean_s2554
                                        have lean_s2556 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a120
                                        have lean_s2557 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s2556
                                        have lean_s2558 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2555 lean_s2557
                                        have lean_s2559 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s2544 lean_s2558
                                        have lean_s2560 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a114
                                        have lean_s2561 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2560
                                        have lean_s2562 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed Eq.trans lean_s2559 lean_s2561
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2562
                      ))))))))))))))))))
                    have lean_s2528 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2527, 9
                    have lean_s2529 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) := by timed modusPonens lean_s2526 lean_s2528
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) from lean_s2529
  ))))))))))))))))))
have lean_s2520 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by liftOrNToImp lean_s2519, 9
have lean_s2521 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))) := by timed impliesElim lean_s2520
have lean_s2522 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6))))))))))) := by R1 lean_s2518, lean_s2521, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s2523 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2522, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2524 := by R1 lean_s2517, lean_s2523, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s2525 := by R2 lean_s2524, lean_s1847, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2526 := by R2 lean_s2525, lean_s2037, (Eq (Sum (Int.ofNat 3) (Int.ofNat 6)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2527 := by R2 lean_s2526, lean_s2071, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2528 := by R2 lean_s2527, lean_s2339, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2529 := by R2 lean_s2528, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2530 := by R2 lean_s2529, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2531 := by R2 lean_s2530, lean_s2484, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2532 := by R1 lean_s2531, lean_s1429, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 6)), [(- 1), 0]
have lean_s2533 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 5))]
have lean_s2534 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 5)) =>
                    let lean_s2534 := by timed And.intro lean_a116 lean_a117
                    let lean_s2535 := by timed And.intro lean_a119 lean_s2534
                    let lean_s2536 := by timed And.intro lean_a122 lean_s2535
                    let lean_s2537 := by timed And.intro lean_a114 lean_s2536
                    let lean_s2538 := by timed And.intro lean_a121 lean_s2537
                    let lean_s2539 := by timed And.intro lean_a118 lean_s2538
                    let lean_s2540 := by timed And.intro lean_a115 lean_s2539
                    have lean_s2541 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)))))))))) := by timed And.intro lean_a120 lean_s2540
                    have lean_s2542 : (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) =>
                                        have lean_s2542 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a117
                                        have lean_s2543 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s2542
                                        let lean_s2544 := by timed flipCongrArg lean_s2543 [Sum]
                                        have lean_s2545 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a119
                                        have lean_s2546 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s2545
                                        have lean_s2547 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s2546 [Succ]
                                        have lean_s2548 : (Eq (Int.ofNat 6) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a118
                                        have lean_s2549 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2548
                                        have lean_s2550 : (Eq (Succ y) (Int.ofNat 6)) := by timed Eq.trans lean_s2547 lean_s2549
                                        have lean_s2551 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed congr lean_s2544 lean_s2550
                                        have lean_s2552 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 6))) := by timed Eq.symm lean_a116
                                        have lean_s2553 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2552
                                        have lean_s2554 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2551 lean_s2553
                                        have lean_s2555 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2554 [Pred]
                                        have lean_s2556 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a115
                                        have lean_s2557 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2556
                                        have lean_s2558 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2555 lean_s2557
                                        let lean_s2559 := by timed flipCongrArg lean_s2558 [Sum]
                                        let lean_s2560 := by timed flipCongrArg lean_s2546 [Sum]
                                        let lean_s2561 := by timed flipCongrArg lean_s2543 [Sum]
                                        have lean_s2562 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s2561 lean_s2546
                                        have lean_s2563 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a122
                                        have lean_s2564 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2563
                                        have lean_s2565 : (Eq (Sum x y) (Int.ofNat 6)) := by timed Eq.trans lean_s2562 lean_s2564
                                        have lean_s2566 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2565 [Pred]
                                        have lean_s2567 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a121
                                        have lean_s2568 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2567
                                        have lean_s2569 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2566 lean_s2568
                                        have lean_s2570 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s2560 lean_s2569
                                        have lean_s2571 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a120
                                        have lean_s2572 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s2571
                                        have lean_s2573 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2570 lean_s2572
                                        have lean_s2574 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed congr lean_s2559 lean_s2573
                                        have lean_s2575 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 6) (Int.ofNat 3))) := by timed Eq.symm lean_a114
                                        have lean_s2576 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2575
                                        have lean_s2577 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2574 lean_s2576
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2577
                      ))))))))))))))))))
                    have lean_s2543 : (Implies (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2542, 9
                    have lean_s2544 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2541 lean_s2543
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2544
  ))))))))))))))))))
have lean_s2535 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2534, 9
have lean_s2536 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2535
have lean_s2537 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2533, lean_s2536, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s2538 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s2537, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2539 := by R1 lean_s2532, lean_s2538, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s2540 := by R2 lean_s2539, lean_s2189, (Eq (Sum (Int.ofNat 6) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2541 := by R2 lean_s2540, lean_s2052, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2542 := by R2 lean_s2541, lean_s2157, (Eq (Sum (Int.ofNat 1) (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2543 := by R2 lean_s2542, lean_s2339, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2544 := by R2 lean_s2543, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2545 := by R2 lean_s2544, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2546 := by R2 lean_s2545, lean_s2484, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2547 := by R1 lean_s2546, lean_s1904, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s2548 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 5))]
have lean_s2549 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 5)) =>
                    let lean_s2549 := by timed And.intro lean_a115 lean_a119
                    let lean_s2550 := by timed And.intro lean_a118 lean_s2549
                    let lean_s2551 := by timed And.intro lean_a122 lean_s2550
                    let lean_s2552 := by timed And.intro lean_a114 lean_s2551
                    let lean_s2553 := by timed And.intro lean_a121 lean_s2552
                    let lean_s2554 := by timed And.intro lean_a120 lean_s2553
                    let lean_s2555 := by timed And.intro lean_a116 lean_s2554
                    have lean_s2556 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a117 lean_s2555
                    have lean_s2557 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) =>
                                        have lean_s2557 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a117
                                        have lean_s2558 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s2557
                                        let lean_s2559 := by timed flipCongrArg lean_s2558 [Sum]
                                        have lean_s2560 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a119
                                        have lean_s2561 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s2560
                                        have lean_s2562 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s2561 [Succ]
                                        have lean_s2563 : (Eq (Int.ofNat 6) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a118
                                        have lean_s2564 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) := by timed Eq.symm lean_s2563
                                        have lean_s2565 : (Eq (Succ y) (Int.ofNat 6)) := by timed Eq.trans lean_s2562 lean_s2564
                                        have lean_s2566 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed congr lean_s2559 lean_s2565
                                        have lean_s2567 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 6))) := by timed Eq.symm lean_a116
                                        have lean_s2568 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) := by timed Eq.symm lean_s2567
                                        have lean_s2569 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2566 lean_s2568
                                        have lean_s2570 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2569 [Pred]
                                        have lean_s2571 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a115
                                        have lean_s2572 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2571
                                        have lean_s2573 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2570 lean_s2572
                                        let lean_s2574 := by timed flipCongrArg lean_s2573 [Sum]
                                        let lean_s2575 := by timed flipCongrArg lean_s2561 [Sum]
                                        let lean_s2576 := by timed flipCongrArg lean_s2558 [Sum]
                                        have lean_s2577 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s2576 lean_s2561
                                        have lean_s2578 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a122
                                        have lean_s2579 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s2578
                                        have lean_s2580 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2577 lean_s2579
                                        have lean_s2581 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2580 [Pred]
                                        have lean_s2582 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a121
                                        have lean_s2583 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2582
                                        have lean_s2584 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2581 lean_s2583
                                        have lean_s2585 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s2575 lean_s2584
                                        have lean_s2586 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a120
                                        have lean_s2587 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s2586
                                        have lean_s2588 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2585 lean_s2587
                                        have lean_s2589 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s2574 lean_s2588
                                        have lean_s2590 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a114
                                        have lean_s2591 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s2590
                                        have lean_s2592 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s2589 lean_s2591
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2592
                      ))))))))))))))))))
                    have lean_s2558 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2557, 9
                    have lean_s2559 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s2556 lean_s2558
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2559
  ))))))))))))))))))
have lean_s2550 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2549, 9
have lean_s2551 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s2550
have lean_s2552 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s2548, lean_s2551, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s2553 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s2552, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2554 := by R1 lean_s2547, lean_s2553, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
let lean_s2555 := by R2 lean_s2554, lean_s2088, (Eq (Sum (Int.ofNat 5) (Int.ofNat 6)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2556 := by R2 lean_s2555, lean_s2052, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2557 := by R2 lean_s2556, lean_s2336, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2558 := by R2 lean_s2557, lean_s1917, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2559 := by R2 lean_s2558, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2560 := by R2 lean_s2559, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2561 := by R2 lean_s2560, lean_s2484, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
have lean_s2562 : (Or (Not (Eq y (Int.ofNat 5))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Not (Eq y (Int.ofNat 5))))))))) := by R1 lean_s2561, lean_s1883, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s2563 : (Or (Not (Eq y (Int.ofNat 5))) (Eq x (Int.ofNat 0))) := by factor lean_s2562, 6
have lean_s2564 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 5)))) := by permutateOr lean_s2563, [1, 0], (- 1)
have lean_s2565 : (Or (Not (Eq y (Int.ofNat 4))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 0))))) := by R1 lean_s2471, lean_s2564, (Eq y (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s2566 : (Or (Not (Eq y (Int.ofNat 4))) (Eq x (Int.ofNat 0))) := by factor lean_s2565, (- 1)
have lean_s2567 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 4)))) := by permutateOr lean_s2566, [1, 0], (- 1)
let lean_s2568 := by R1 lean_s2407, lean_s2567, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s2569 := by R1 lean_s2568, lean_s2146, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s2570 : (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))))))))) := by R1 lean_s2569, lean_s2230, (Eq x (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2571 : (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))) := by factor lean_s2570, (- 1)
let lean_s2572 := by R1 lean_s2571, lean_s2327, (Eq y (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2573 : (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 0))))) := by R1 lean_s2572, lean_s2564, (Eq y (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s2574 : (Or (Not (Eq y (Int.ofNat 2))) (Eq x (Int.ofNat 0))) := by factor lean_s2573, (- 1)
have lean_s2575 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 2)))) := by permutateOr lean_s2574, [1, 0], (- 1)
let lean_s2576 := by R1 lean_s2361, lean_s2575, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s2577 := by R1 lean_s2576, lean_s2062, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s2578 := by R1 lean_s2577, lean_s2146, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s2579 : (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 6)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6))))))))))))))) := by R1 lean_s2578, lean_s2230, (Eq x (Int.ofNat 6)), [(- 1), (- 1)]
have lean_s2580 : (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq y (Int.ofNat 6)))))) := by factor lean_s2579, (- 1)
let lean_s2581 := by R1 lean_s2580, lean_s2327, (Eq y (Int.ofNat 6)), [(- 1), (- 1)]
let lean_s2582 := by R1 lean_s2581, lean_s2567, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2583 : (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 0)))))) := by R1 lean_s2582, lean_s2564, (Eq y (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s2584 : (Or (Not (Eq y (Int.ofNat 1))) (Eq x (Int.ofNat 0))) := by factor lean_s2583, (- 1)
have lean_s2585 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 1)))) := by permutateOr lean_s2584, [1, 0], (- 1)
let lean_s2586 := by R1 lean_s2328, lean_s2585, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s2587 := by R1 lean_s2586, lean_s2575, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s2588 := by R1 lean_s2587, lean_s2567, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2589 : (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 0))))))) := by R1 lean_s2588, lean_s2564, (Eq y (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s2590 : (Eq x (Int.ofNat 0)) := by factor lean_s2589, 5
let lean_s2591 := by R2 lean_s1430, lean_s2590, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2592 := by R2 lean_s2591, lean_s1881, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2593 := by R2 lean_s2592, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2594 := by R2 lean_s2593, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2595 := by R2 lean_s2594, lean_s1977, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2596 := by R2 lean_s2595, lean_s1875, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
have lean_s2597 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) := by andElim lean_s1846, 28
have lean_s2598 : (Not (Eq y (Int.ofNat 0))) := by R2 lean_s2596, lean_s2597, (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2599 := by R1 lean_s1422, lean_s2598, (Eq y (Int.ofNat 0)), [(- 1), 0]
have lean_s2600 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 1))]
have lean_s2601 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 1)) =>
                    let lean_s2601 := by timed And.intro lean_a115 lean_a117
                    let lean_s2602 := by timed And.intro lean_a119 lean_s2601
                    let lean_s2603 := by timed And.intro lean_a122 lean_s2602
                    let lean_s2604 := by timed And.intro lean_a114 lean_s2603
                    let lean_s2605 := by timed And.intro lean_a121 lean_s2604
                    let lean_s2606 := by timed And.intro lean_a118 lean_s2605
                    let lean_s2607 := by timed And.intro lean_a116 lean_s2606
                    have lean_s2608 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a120 lean_s2607
                    have lean_s2609 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                                        have lean_s2609 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a117
                                        have lean_s2610 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2609
                                        let lean_s2611 := by timed flipCongrArg lean_s2610 [Sum]
                                        have lean_s2612 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a119
                                        have lean_s2613 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s2612
                                        have lean_s2614 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s2613 [Succ]
                                        have lean_s2615 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a118
                                        have lean_s2616 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2615
                                        have lean_s2617 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s2614 lean_s2616
                                        have lean_s2618 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s2611 lean_s2617
                                        have lean_s2619 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a116
                                        have lean_s2620 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s2619
                                        have lean_s2621 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2618 lean_s2620
                                        have lean_s2622 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2621 [Pred]
                                        have lean_s2623 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a115
                                        have lean_s2624 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2623
                                        have lean_s2625 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2622 lean_s2624
                                        let lean_s2626 := by timed flipCongrArg lean_s2625 [Sum]
                                        let lean_s2627 := by timed flipCongrArg lean_s2613 [Sum]
                                        let lean_s2628 := by timed flipCongrArg lean_s2610 [Sum]
                                        have lean_s2629 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s2628 lean_s2613
                                        have lean_s2630 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a122
                                        have lean_s2631 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s2630
                                        have lean_s2632 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s2629 lean_s2631
                                        have lean_s2633 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2632 [Pred]
                                        have lean_s2634 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a121
                                        have lean_s2635 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2634
                                        have lean_s2636 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2633 lean_s2635
                                        have lean_s2637 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s2627 lean_s2636
                                        have lean_s2638 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed Eq.symm lean_a120
                                        have lean_s2639 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s2638
                                        have lean_s2640 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2637 lean_s2639
                                        have lean_s2641 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s2626 lean_s2640
                                        have lean_s2642 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed Eq.symm lean_a114
                                        have lean_s2643 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2642
                                        have lean_s2644 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2641 lean_s2643
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2644
                      ))))))))))))))))))
                    have lean_s2610 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2609, 9
                    have lean_s2611 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2608 lean_s2610
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2611
  ))))))))))))))))))
have lean_s2602 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2601, 9
have lean_s2603 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2602
have lean_s2604 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2600, lean_s2603, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s2605 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s2604, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2606 := by R1 lean_s2605, lean_s1904, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
let lean_s2607 := by R2 lean_s2606, lean_s2590, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2608 := by R2 lean_s2607, lean_s1944, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2609 := by R2 lean_s2608, lean_s1922, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2610 := by R2 lean_s2609, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2611 := by R2 lean_s2610, lean_s1875, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2612 := by R2 lean_s2611, lean_s2039, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2613 := by R2 lean_s2612, lean_s1975, (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s2614 : (Not (Eq y (Int.ofNat 1))) := by R2 lean_s2613, lean_s1940, (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2615 := by R1 lean_s2599, lean_s2614, (Eq y (Int.ofNat 1)), [(- 1), 0]
have lean_s2616 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 2))]
have lean_s2617 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 2)) =>
                    let lean_s2617 := by timed And.intro lean_a115 lean_a117
                    let lean_s2618 := by timed And.intro lean_a119 lean_s2617
                    let lean_s2619 := by timed And.intro lean_a122 lean_s2618
                    let lean_s2620 := by timed And.intro lean_a114 lean_s2619
                    let lean_s2621 := by timed And.intro lean_a121 lean_s2620
                    let lean_s2622 := by timed And.intro lean_a118 lean_s2621
                    let lean_s2623 := by timed And.intro lean_a116 lean_s2622
                    have lean_s2624 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a120 lean_s2623
                    have lean_s2625 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                                        have lean_s2625 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a117
                                        have lean_s2626 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2625
                                        let lean_s2627 := by timed flipCongrArg lean_s2626 [Sum]
                                        have lean_s2628 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a119
                                        have lean_s2629 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s2628
                                        have lean_s2630 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2629 [Succ]
                                        have lean_s2631 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a118
                                        have lean_s2632 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2631
                                        have lean_s2633 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2630 lean_s2632
                                        have lean_s2634 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s2627 lean_s2633
                                        have lean_s2635 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a116
                                        have lean_s2636 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s2635
                                        have lean_s2637 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2634 lean_s2636
                                        have lean_s2638 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2637 [Pred]
                                        have lean_s2639 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a115
                                        have lean_s2640 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2639
                                        have lean_s2641 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2638 lean_s2640
                                        let lean_s2642 := by timed flipCongrArg lean_s2641 [Sum]
                                        let lean_s2643 := by timed flipCongrArg lean_s2629 [Sum]
                                        let lean_s2644 := by timed flipCongrArg lean_s2626 [Sum]
                                        have lean_s2645 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s2644 lean_s2629
                                        have lean_s2646 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a122
                                        have lean_s2647 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s2646
                                        have lean_s2648 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s2645 lean_s2647
                                        have lean_s2649 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2648 [Pred]
                                        have lean_s2650 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a121
                                        have lean_s2651 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2650
                                        have lean_s2652 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2649 lean_s2651
                                        have lean_s2653 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s2643 lean_s2652
                                        have lean_s2654 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed Eq.symm lean_a120
                                        have lean_s2655 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by timed Eq.symm lean_s2654
                                        have lean_s2656 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2653 lean_s2655
                                        have lean_s2657 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s2642 lean_s2656
                                        have lean_s2658 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed Eq.symm lean_a114
                                        have lean_s2659 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by timed Eq.symm lean_s2658
                                        have lean_s2660 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s2657 lean_s2659
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2660
                      ))))))))))))))))))
                    have lean_s2626 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2625, 9
                    have lean_s2627 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s2624 lean_s2626
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2627
  ))))))))))))))))))
have lean_s2618 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2617, 9
have lean_s2619 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2618
have lean_s2620 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s2616, lean_s2619, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s2621 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2620, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2622 := by R1 lean_s2621, lean_s1861, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
let lean_s2623 := by R2 lean_s2622, lean_s2590, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2624 := by R2 lean_s2623, lean_s2004, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2625 := by R2 lean_s2624, lean_s1879, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2626 := by R2 lean_s2625, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2627 := by R2 lean_s2626, lean_s2039, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2628 := by R2 lean_s2627, lean_s2020, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2629 := by R2 lean_s2628, lean_s1871, (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), [(- 1), 0]
have lean_s2630 : (Not (Eq y (Int.ofNat 2))) := by R2 lean_s2629, lean_s1853, (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2631 := by R1 lean_s2615, lean_s2630, (Eq y (Int.ofNat 2)), [(- 1), 0]
have lean_s2632 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 3))]
have lean_s2633 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 3)) =>
                    let lean_s2633 := by timed And.intro lean_a115 lean_a117
                    let lean_s2634 := by timed And.intro lean_a119 lean_s2633
                    let lean_s2635 := by timed And.intro lean_a122 lean_s2634
                    let lean_s2636 := by timed And.intro lean_a114 lean_s2635
                    let lean_s2637 := by timed And.intro lean_a121 lean_s2636
                    let lean_s2638 := by timed And.intro lean_a118 lean_s2637
                    let lean_s2639 := by timed And.intro lean_a116 lean_s2638
                    have lean_s2640 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a120 lean_s2639
                    have lean_s2641 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                                        have lean_s2641 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a117
                                        have lean_s2642 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2641
                                        let lean_s2643 := by timed flipCongrArg lean_s2642 [Sum]
                                        have lean_s2644 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a119
                                        have lean_s2645 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s2644
                                        have lean_s2646 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s2645 [Succ]
                                        have lean_s2647 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a118
                                        have lean_s2648 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s2647
                                        have lean_s2649 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s2646 lean_s2648
                                        have lean_s2650 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s2643 lean_s2649
                                        have lean_s2651 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a116
                                        have lean_s2652 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s2651
                                        have lean_s2653 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2650 lean_s2652
                                        have lean_s2654 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2653 [Pred]
                                        have lean_s2655 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a115
                                        have lean_s2656 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2655
                                        have lean_s2657 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2654 lean_s2656
                                        let lean_s2658 := by timed flipCongrArg lean_s2657 [Sum]
                                        let lean_s2659 := by timed flipCongrArg lean_s2645 [Sum]
                                        let lean_s2660 := by timed flipCongrArg lean_s2642 [Sum]
                                        have lean_s2661 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s2660 lean_s2645
                                        have lean_s2662 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a122
                                        have lean_s2663 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s2662
                                        have lean_s2664 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2661 lean_s2663
                                        have lean_s2665 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2664 [Pred]
                                        have lean_s2666 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a121
                                        have lean_s2667 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2666
                                        have lean_s2668 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2665 lean_s2667
                                        have lean_s2669 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s2659 lean_s2668
                                        have lean_s2670 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a120
                                        have lean_s2671 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s2670
                                        have lean_s2672 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2669 lean_s2671
                                        have lean_s2673 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s2658 lean_s2672
                                        have lean_s2674 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a114
                                        have lean_s2675 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s2674
                                        have lean_s2676 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2673 lean_s2675
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2676
                      ))))))))))))))))))
                    have lean_s2642 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2641, 9
                    have lean_s2643 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s2640 lean_s2642
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2643
  ))))))))))))))))))
have lean_s2634 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s2633, 9
have lean_s2635 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s2634
have lean_s2636 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s2632, lean_s2635, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s2637 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s2636, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2638 := by R1 lean_s2637, lean_s1982, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
let lean_s2639 := by R2 lean_s2638, lean_s2590, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2640 := by R2 lean_s2639, lean_s1859, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2641 := by R2 lean_s2640, lean_s1877, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2642 := by R2 lean_s2641, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2643 := by R2 lean_s2642, lean_s2020, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2644 := by R2 lean_s2643, lean_s1899, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2645 := by R2 lean_s2644, lean_s2091, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
have lean_s2646 : (Not (Eq y (Int.ofNat 3))) := by R2 lean_s2645, lean_s2071, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2647 := by R1 lean_s2631, lean_s2646, (Eq y (Int.ofNat 3)), [(- 1), 0]
have lean_s2648 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 4))]
have lean_s2649 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 4)) =>
                    let lean_s2649 := by timed And.intro lean_a115 lean_a117
                    let lean_s2650 := by timed And.intro lean_a120 lean_s2649
                    let lean_s2651 := by timed And.intro lean_a122 lean_s2650
                    let lean_s2652 := by timed And.intro lean_a114 lean_s2651
                    let lean_s2653 := by timed And.intro lean_a121 lean_s2652
                    let lean_s2654 := by timed And.intro lean_a118 lean_s2653
                    let lean_s2655 := by timed And.intro lean_a116 lean_s2654
                    have lean_s2656 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a119 lean_s2655
                    have lean_s2657 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                                        have lean_s2657 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a117
                                        have lean_s2658 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2657
                                        let lean_s2659 := by timed flipCongrArg lean_s2658 [Sum]
                                        have lean_s2660 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a119
                                        have lean_s2661 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s2660
                                        have lean_s2662 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s2661 [Succ]
                                        have lean_s2663 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a118
                                        have lean_s2664 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s2663
                                        have lean_s2665 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s2662 lean_s2664
                                        have lean_s2666 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s2659 lean_s2665
                                        have lean_s2667 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed Eq.symm lean_a116
                                        have lean_s2668 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by timed Eq.symm lean_s2667
                                        have lean_s2669 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2666 lean_s2668
                                        have lean_s2670 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2669 [Pred]
                                        have lean_s2671 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a115
                                        have lean_s2672 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2671
                                        have lean_s2673 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2670 lean_s2672
                                        let lean_s2674 := by timed flipCongrArg lean_s2673 [Sum]
                                        let lean_s2675 := by timed flipCongrArg lean_s2661 [Sum]
                                        let lean_s2676 := by timed flipCongrArg lean_s2658 [Sum]
                                        have lean_s2677 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s2676 lean_s2661
                                        have lean_s2678 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a122
                                        have lean_s2679 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s2678
                                        have lean_s2680 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s2677 lean_s2679
                                        have lean_s2681 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2680 [Pred]
                                        have lean_s2682 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a121
                                        have lean_s2683 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2682
                                        have lean_s2684 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2681 lean_s2683
                                        have lean_s2685 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s2675 lean_s2684
                                        have lean_s2686 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a120
                                        have lean_s2687 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s2686
                                        have lean_s2688 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s2685 lean_s2687
                                        have lean_s2689 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s2674 lean_s2688
                                        have lean_s2690 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a114
                                        have lean_s2691 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s2690
                                        have lean_s2692 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s2689 lean_s2691
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2692
                      ))))))))))))))))))
                    have lean_s2658 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2657, 9
                    have lean_s2659 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s2656 lean_s2658
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s2659
  ))))))))))))))))))
have lean_s2650 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s2649, 9
have lean_s2651 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s2650
have lean_s2652 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s2648, lean_s2651, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s2653 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s2652, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2654 := by R1 lean_s2653, lean_s1925, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
let lean_s2655 := by R2 lean_s2654, lean_s2590, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2656 := by R2 lean_s2655, lean_s2077, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2657 := by R2 lean_s2656, lean_s1963, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2658 := by R2 lean_s2657, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2659 := by R2 lean_s2658, lean_s1899, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2660 := by R2 lean_s2659, lean_s2176, (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2661 := by R2 lean_s2660, lean_s2018, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
have lean_s2662 : (Not (Eq y (Int.ofNat 4))) := by R2 lean_s2661, lean_s1995, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2663 := by R1 lean_s2647, lean_s2662, (Eq y (Int.ofNat 4)), [(- 1), 0]
have lean_s2664 : (Or (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 6)))))))))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 6)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 6))]
have lean_s2665 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a114 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
    (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
      (scope (fun lean_a116 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
        (scope (fun lean_a117 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a118 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) =>
            (scope (fun lean_a119 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
              (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
                (scope (fun lean_a121 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a122 : (Eq y (Int.ofNat 6)) =>
                    let lean_s2665 := by timed And.intro lean_a116 lean_a118
                    let lean_s2666 := by timed And.intro lean_a120 lean_s2665
                    let lean_s2667 := by timed And.intro lean_a122 lean_s2666
                    let lean_s2668 := by timed And.intro lean_a114 lean_s2667
                    let lean_s2669 := by timed And.intro lean_a121 lean_s2668
                    let lean_s2670 := by timed And.intro lean_a117 lean_s2669
                    let lean_s2671 := by timed And.intro lean_a115 lean_s2670
                    have lean_s2672 : (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)))))))))) := by timed And.intro lean_a119 lean_s2671
                    have lean_s2673 : (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a114 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) =>
                        (scope (fun lean_a115 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) =>
                          (scope (fun lean_a116 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                            (scope (fun lean_a117 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a118 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) =>
                                (scope (fun lean_a119 : (Eq y (Int.ofNat 6)) =>
                                  (scope (fun lean_a120 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a121 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a122 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) =>
                                        have lean_s2673 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a117
                                        have lean_s2674 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2673
                                        let lean_s2675 := by timed flipCongrArg lean_s2674 [Sum]
                                        have lean_s2676 : (Eq (Int.ofNat 6) y) := by timed Eq.symm lean_a119
                                        have lean_s2677 : (Eq y (Int.ofNat 6)) := by timed Eq.symm lean_s2676
                                        have lean_s2678 : (Eq (Succ y) (Succ (Int.ofNat 6))) := by timed flipCongrArg lean_s2677 [Succ]
                                        have lean_s2679 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 6))) := by timed Eq.symm lean_a118
                                        have lean_s2680 : (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) := by timed Eq.symm lean_s2679
                                        have lean_s2681 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2678 lean_s2680
                                        have lean_s2682 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s2675 lean_s2681
                                        have lean_s2683 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a116
                                        have lean_s2684 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s2683
                                        have lean_s2685 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2682 lean_s2684
                                        have lean_s2686 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2685 [Pred]
                                        have lean_s2687 : (Eq (Int.ofNat 6) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a115
                                        have lean_s2688 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) := by timed Eq.symm lean_s2687
                                        have lean_s2689 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 6)) := by timed Eq.trans lean_s2686 lean_s2688
                                        let lean_s2690 := by timed flipCongrArg lean_s2689 [Sum]
                                        let lean_s2691 := by timed flipCongrArg lean_s2677 [Sum]
                                        let lean_s2692 := by timed flipCongrArg lean_s2674 [Sum]
                                        have lean_s2693 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 6))) := by timed congr lean_s2692 lean_s2677
                                        have lean_s2694 : (Eq (Int.ofNat 6) (Sum (Int.ofNat 0) (Int.ofNat 6))) := by timed Eq.symm lean_a122
                                        have lean_s2695 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) := by timed Eq.symm lean_s2694
                                        have lean_s2696 : (Eq (Sum x y) (Int.ofNat 6)) := by timed Eq.trans lean_s2693 lean_s2695
                                        have lean_s2697 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 6))) := by timed flipCongrArg lean_s2696 [Pred]
                                        have lean_s2698 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 6))) := by timed Eq.symm lean_a121
                                        have lean_s2699 : (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) := by timed Eq.symm lean_s2698
                                        have lean_s2700 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s2697 lean_s2699
                                        have lean_s2701 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed congr lean_s2691 lean_s2700
                                        have lean_s2702 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 6) (Int.ofNat 5))) := by timed Eq.symm lean_a120
                                        have lean_s2703 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2702
                                        have lean_s2704 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s2701 lean_s2703
                                        have lean_s2705 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed congr lean_s2690 lean_s2704
                                        have lean_s2706 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 6) (Int.ofNat 4))) := by timed Eq.symm lean_a114
                                        have lean_s2707 : (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2706
                                        have lean_s2708 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s2705 lean_s2707
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2708
                      ))))))))))))))))))
                    have lean_s2674 : (Implies (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2673, 9
                    have lean_s2675 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s2672 lean_s2674
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s2675
  ))))))))))))))))))
have lean_s2666 : (Implies (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 6)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s2665, 9
have lean_s2667 : (Or (Not (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 6))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s2666
have lean_s2668 : (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s2664, lean_s2667, (And (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)) (And (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 6)))))))))), [(- 1), (- 1)]
have lean_s2669 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 6))) (Or (Not (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6))) (Or (Not (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6))) (Or (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s2668, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2670 := by R1 lean_s2669, lean_s1883, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
let lean_s2671 := by R2 lean_s2670, lean_s2590, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2672 := by R2 lean_s2671, lean_s2245, (Eq (Succ (Int.ofNat 6)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2673 := by R2 lean_s2672, lean_s2002, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2674 := by R2 lean_s2673, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2675 := by R2 lean_s2674, lean_s1977, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2676 := by R2 lean_s2675, lean_s2597, (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2677 := by R2 lean_s2676, lean_s2206, (Eq (Sum (Int.ofNat 6) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
have lean_s2678 : (Not (Eq y (Int.ofNat 6))) := by R2 lean_s2677, lean_s2172, (Eq (Sum (Int.ofNat 6) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
have lean_s2679 : (Eq y (Int.ofNat 5)) := by R1 lean_s2663, lean_s2678, (Eq y (Int.ofNat 6)), [(- 1), 0]
let lean_s2680 := by R2 lean_s5, lean_s2679, (Eq y (Int.ofNat 5)), [(- 1), 0]
let lean_s2681 := by R2 lean_s2680, lean_s2590, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2682 := by R2 lean_s2681, lean_s1894, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2683 := by R2 lean_s2682, lean_s2336, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2684 := by R2 lean_s2683, lean_s2597, (Eq (Sum (Int.ofNat 0) (Int.ofNat 6)) (Int.ofNat 6)), [(- 1), 0]
let lean_s2685 := by R2 lean_s2684, lean_s2176, (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2686 := by R2 lean_s2685, lean_s1855, (Eq (Pred (Int.ofNat 6)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2687 := by R2 lean_s2686, lean_s1857, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2688 := by R2 lean_s2687, lean_s2484, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 6)), [(- 1), 0]
exact (show False from by R1 lean_s2688, lean_s2025, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [0, 0])


