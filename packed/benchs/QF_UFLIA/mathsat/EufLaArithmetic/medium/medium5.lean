-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {Succ : (Int -> Int)}
variable {x : Int}
variable {Sum : (Int -> Int -> Int)}
variable {y : Int}
variable {z : Int}
variable {Succ : (Int -> Int)}
variable {Sum : (Int -> Int -> Int)}
variable {Pred : (Int -> Int)}
variable {x : Int}
variable {Pred : (Int -> Int)}
variable {y : Int}
variable {z : Int}

theorem th0 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And True (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) → (Eq (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5)))))))) → (Eq (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5)))) (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (And (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)))) → (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) → (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5))) (binrel% HAdd.hAdd y x) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)))) → (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) → (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) → (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) → (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) → (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) → (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))) → (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) True) → (Eq (smtIte (Not (binrel% GE.ge y (Int.ofNat 4))) (binrel% HAdd.hAdd (Int.ofNat 1) y) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))))) → (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) (Neg.neg (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) → (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) True) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) y) (Int.ofNat 5)) (binrel% GE.ge y (Int.ofNat 4))) → (Eq (Eq (Int.ofNat 1) (Int.ofNat 1)) True) → (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) → (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) → (Eq (Eq (Int.ofNat 2) (Int.ofNat 2)) True) → (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) True) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))))) → (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y)) → (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) → (Eq (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 5)))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)) (Neg.neg (Int.ofNat 5))) → (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (Neg.neg (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x))) → (Eq (binrel% HAdd.hAdd x y) (binrel% HAdd.hAdd y x)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))))) → (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) → (Eq (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) y)) → (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5)))) (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) → False :=
fun lean_r0 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And True (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5)))) (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (And (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5))) (binrel% HAdd.hAdd y x) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) True) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (smtIte (Not (binrel% GE.ge y (Int.ofNat 4))) (binrel% HAdd.hAdd (Int.ofNat 1) y) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) => -- THEORY_REWRITE_BOOL
fun lean_r16 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) (Neg.neg (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) True) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) y) (Int.ofNat 5)) (binrel% GE.ge y (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (Eq (Int.ofNat 1) (Int.ofNat 1)) True) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq (Eq (Int.ofNat 2) (Int.ofNat 2)) True) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) True) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y)) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)) (Neg.neg (Int.ofNat 5))) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (Neg.neg (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% HAdd.hAdd x y) (binrel% HAdd.hAdd y x)) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) y)) => -- THEORY_REWRITE_ARITH
fun lean_a35 : (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5)))) (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) => by
have lean_s0 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 4))]
have lean_s1 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a36 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a37 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a38 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a39 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
          (scope (fun lean_a40 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
            (scope (fun lean_a41 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
              (scope (fun lean_a42 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
                (scope (fun lean_a43 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a44 : (Eq y (Int.ofNat 4)) =>
                    let lean_s1 := by timed And.intro lean_a37 lean_a39
                    let lean_s2 := by timed And.intro lean_a42 lean_s1
                    let lean_s3 := by timed And.intro lean_a44 lean_s2
                    let lean_s4 := by timed And.intro lean_a36 lean_s3
                    let lean_s5 := by timed And.intro lean_a43 lean_s4
                    let lean_s6 := by timed And.intro lean_a40 lean_s5
                    let lean_s7 := by timed And.intro lean_a38 lean_s6
                    have lean_s8 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a41 lean_s7
                    have lean_s9 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a45 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                        (scope (fun lean_a46 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a47 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
                            (scope (fun lean_a48 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a49 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a50 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a51 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a52 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a53 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                                        have lean_s9 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a48
                                        have lean_s10 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s9
                                        let lean_s11 := by timed flipCongrArg lean_s10 [Sum]
                                        have lean_s12 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a50
                                        have lean_s13 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s12
                                        have lean_s14 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s13 [Succ]
                                        have lean_s15 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a49
                                        have lean_s16 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s15
                                        have lean_s17 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s14 lean_s16
                                        have lean_s18 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s11 lean_s17
                                        have lean_s19 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed Eq.symm lean_a47
                                        have lean_s20 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by timed Eq.symm lean_s19
                                        have lean_s21 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s18 lean_s20
                                        have lean_s22 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s21 [Pred]
                                        have lean_s23 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a46
                                        have lean_s24 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s23
                                        have lean_s25 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s22 lean_s24
                                        let lean_s26 := by timed flipCongrArg lean_s25 [Sum]
                                        let lean_s27 := by timed flipCongrArg lean_s13 [Sum]
                                        let lean_s28 := by timed flipCongrArg lean_s10 [Sum]
                                        have lean_s29 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s28 lean_s13
                                        have lean_s30 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a53
                                        have lean_s31 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s30
                                        have lean_s32 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s29 lean_s31
                                        have lean_s33 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s32 [Pred]
                                        have lean_s34 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a52
                                        have lean_s35 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s34
                                        have lean_s36 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s33 lean_s35
                                        have lean_s37 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s27 lean_s36
                                        have lean_s38 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a51
                                        have lean_s39 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s38
                                        have lean_s40 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s37 lean_s39
                                        have lean_s41 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s26 lean_s40
                                        have lean_s42 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a45
                                        have lean_s43 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s42
                                        have lean_s44 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s41 lean_s43
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s44
                      ))))))))))))))))))
                    have lean_s10 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s9, 9
                    have lean_s11 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s8 lean_s10
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s11
  ))))))))))))))))))
have lean_s2 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1, 9
have lean_s3 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2
have lean_s4 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s0, lean_s3, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s5 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s4, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s6 : (Eq And And) := by timed rfl
have lean_s7 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s8 := by timed congr lean_s6 lean_s7
have lean_s9 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s10 := by timed congr lean_s6 lean_s9
have lean_s11 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s12 := by timed congr lean_s6 lean_s11
have lean_s13 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s14 := by timed congr lean_s6 lean_s13
have lean_s15 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s16 := by timed congr lean_s6 lean_s15
have lean_s17 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s18 := by timed congr lean_s6 lean_s17
have lean_s19 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s20 := by timed congr lean_s6 lean_s19
have lean_s21 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s22 := by timed congr lean_s6 lean_s21
have lean_s23 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s24 := by timed congr lean_s6 lean_s23
have lean_s25 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s26 := by timed congr lean_s6 lean_s25
have lean_s27 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s28 := by timed congr lean_s6 lean_s27
have lean_s29 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s30 := by timed congr lean_s6 lean_s29
have lean_s31 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
let lean_s32 := by timed congr lean_s6 lean_s31
have lean_s33 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) := by timed rfl
let lean_s34 := by timed congr lean_s6 lean_s33
have lean_s35 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) := by timed rfl
let lean_s36 := by timed congr lean_s6 lean_s35
have lean_s37 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s38 := by timed congr lean_s6 lean_s37
have lean_s39 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s40 := by timed congr lean_s6 lean_s39
have lean_s41 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s42 := by timed congr lean_s6 lean_s41
have lean_s43 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s44 := by timed congr lean_s6 lean_s43
have lean_s45 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s46 := by timed congr lean_s6 lean_s45
have lean_s47 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s48 := by timed congr lean_s6 lean_s47
have lean_s49 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s50 := by timed congr lean_s6 lean_s49
have lean_s51 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s52 := by timed congr lean_s6 lean_s51
have lean_s53 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s54 := by timed congr lean_s6 lean_s53
have lean_s55 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) := by timed rfl
let lean_s56 := by timed congr lean_s6 lean_s55
have lean_s57 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s58 := by timed congr lean_s6 lean_s57
have lean_s59 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s60 := by timed congr lean_s6 lean_s59
have lean_s61 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s62 := by timed congr lean_s6 lean_s61
have lean_s63 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) := by timed rfl
let lean_s64 := by timed congr lean_s6 lean_s63
have lean_s65 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) := by timed rfl
let lean_s66 := by timed congr lean_s6 lean_s65
have lean_s67 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s68 := by timed congr lean_s6 lean_s67
have lean_s69 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s70 := by timed congr lean_s6 lean_s69
have lean_s71 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s72 := by timed congr lean_s6 lean_s71
have lean_s73 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) := by timed rfl
let lean_s74 := by timed congr lean_s6 lean_s73
have lean_s75 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) := by timed rfl
let lean_s76 := by timed congr lean_s6 lean_s75
have lean_s77 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) := by timed rfl
let lean_s78 := by timed congr lean_s6 lean_s77
have lean_s79 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s80 := by timed congr lean_s6 lean_s79
have lean_s81 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s82 := by timed congr lean_s6 lean_s81
have lean_s83 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) := by timed rfl
let lean_s84 := by timed congr lean_s6 lean_s83
have lean_s85 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) := by timed rfl
let lean_s86 := by timed congr lean_s6 lean_s85
have lean_s87 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) := by timed rfl
let lean_s88 := by timed congr lean_s6 lean_s87
have lean_s89 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s90 := by timed congr lean_s6 lean_s89
have lean_s91 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s92 := by timed congr lean_s6 lean_s91
have lean_s93 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s94 := by timed congr lean_s6 lean_s93
have lean_s95 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s96 := by timed congr lean_s6 lean_s95
have lean_s97 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s98 := by timed congr lean_s6 lean_s97
have lean_s99 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s100 := by timed congr lean_s6 lean_s99
have lean_s101 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s102 := by timed congr lean_s6 lean_s101
let lean_s103 := by timed congr lean_s6 lean_r1
let lean_s104 := by timed congr lean_s6 lean_r2
have lean_s105 : (Eq (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) := by timed rfl
let lean_s106 := by timed congr lean_s6 lean_s105
have lean_s107 : (Eq z z) := by timed rfl
let lean_s108 := by timed flipCongrArg lean_s107 [Eq]
have lean_s109 : (Eq x x) := by timed rfl
let lean_s110 := by timed flipCongrArg lean_s109 [Sum]
let lean_s111 := by timed flipCongrArg lean_r34 [GE.ge]
have lean_s112 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s113 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 1) y) (Int.ofNat 5))) := by timed congr lean_s111 lean_s112
have lean_s114 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% GE.ge y (Int.ofNat 4))) := by timed Eq.trans lean_s113 lean_r19
have lean_s115 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5))) (Not (binrel% GE.ge y (Int.ofNat 4)))) := by timed flipCongrArg lean_s114 [Not]
have lean_s116 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (Not (binrel% GE.ge y (Int.ofNat 4)))) := by timed Eq.trans lean_r4 lean_s115
have lean_s117 : (Eq y y) := by timed rfl
have lean_s118 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
let lean_s119 := by timed congrHAdd lean_s118 lean_r29
have lean_s120 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (Neg.neg (Int.ofNat 5))))) := by timed congrHAdd lean_s117 lean_s119
have lean_s121 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y)) := by timed Eq.trans lean_s120 lean_r26
have lean_s122 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y)) := by timed Eq.trans lean_r32 lean_s121
have lean_s123 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y)) := by timed Eq.trans lean_r33 lean_s122
have lean_s124 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int) (smtIte (Not (binrel% GE.ge y (Int.ofNat 4))) (binrel% HAdd.hAdd (Int.ofNat 1) y) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) Int)) := by timed congrIte lean_s116 lean_r34 lean_s123
have lean_s125 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed Eq.trans lean_s124 lean_r15
have lean_s126 : (Eq (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int)) (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) := by timed congr lean_s110 lean_s125
have lean_s127 : (Eq (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)))) := by timed flipCongrArg lean_s126 [Pred]
let lean_s128 := by timed flipCongrArg lean_s127 [Sum]
let lean_s129 := by timed flipCongrArg lean_s117 [HAdd.hAdd]
let lean_s130 := by timed flipCongrArg lean_r31 [GE.ge]
have lean_s131 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5))) := by timed congr lean_s130 lean_s112
have lean_s132 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd x y) (Int.ofNat 5))) (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)))) := by timed flipCongrArg lean_s131 [Not]
have lean_s133 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)))) := by timed Eq.trans lean_r28 lean_s132
let lean_s134 := by timed congrHAdd lean_s117 lean_r29
have lean_s135 : (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (Neg.neg (Int.ofNat 5))))) := by timed congrHAdd lean_s109 lean_s134
have lean_s136 : (Eq (binrel% HAdd.hAdd x (binrel% HAdd.hAdd y (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x))) := by timed Eq.trans lean_s135 lean_r30
have lean_s137 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd x y) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x))) := by timed Eq.trans lean_r25 lean_s136
have lean_s138 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x))) := by timed Eq.trans lean_r22 lean_s137
have lean_s139 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int) (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5))) (binrel% HAdd.hAdd y x) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) Int)) := by timed congrIte lean_s133 lean_r31 lean_s138
have lean_s140 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) := by timed Eq.trans lean_s139 lean_r6
have lean_s141 : (Eq (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int)) (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) := by timed flipCongrArg lean_s140 [Pred]
have lean_s142 : (Eq (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) := by timed congr lean_s129 lean_s141
let lean_s143 := by timed flipCongrArg lean_s142 [GE.ge]
have lean_s144 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5))) := by timed congr lean_s143 lean_s112
have lean_s145 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5))) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)))) := by timed flipCongrArg lean_s144 [Not]
have lean_s146 : (Eq (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)))) := by timed Eq.trans lean_r7 lean_s145
let lean_s147 := by timed congrHAdd lean_s141 lean_r29
have lean_s148 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)) (Neg.neg (Int.ofNat 5))))) := by timed congrHAdd lean_s117 lean_s147
have lean_s149 : (Eq (binrel% HAdd.hAdd y (binrel% HAdd.hAdd (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) := by timed Eq.trans lean_s148 lean_r17
have lean_s150 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 5))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) := by timed Eq.trans lean_r16 lean_s149
have lean_s151 : (Eq (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))))) := by timed Eq.trans lean_r9 lean_s150
have lean_s152 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int) (smtIte (Not (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) Int)) := by timed congrIte lean_s146 lean_s142 lean_s151
have lean_s153 : (Eq (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed Eq.trans lean_s152 lean_r12
have lean_s154 : (Eq (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed congr lean_s128 lean_s153
have lean_s155 : (Eq (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s108 lean_s154
let lean_s156 := by timed congr lean_s6 lean_s155
have lean_s157 : (Eq (Not (Eq z (Int.ofNat 0))) (Not (Eq z (Int.ofNat 0)))) := by timed rfl
let lean_s158 := by timed congr lean_s6 lean_s157
have lean_s159 : (Eq (Not (Eq z (Int.ofNat 1))) (Not (Eq z (Int.ofNat 1)))) := by timed rfl
let lean_s160 := by timed congr lean_s6 lean_s159
have lean_s161 : (Eq (Not (Eq z (Int.ofNat 2))) (Not (Eq z (Int.ofNat 2)))) := by timed rfl
let lean_s162 := by timed congr lean_s6 lean_s161
have lean_s163 : (Eq (Not (Eq z (Int.ofNat 3))) (Not (Eq z (Int.ofNat 3)))) := by timed rfl
let lean_s164 := by timed congr lean_s6 lean_s163
have lean_s165 : (Eq (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 4)))) := by timed rfl
let lean_s166 := by timed congr lean_s6 lean_s165
have lean_s167 : (Eq (Not (Eq z (Int.ofNat 5))) (Not (Eq z (Int.ofNat 5)))) := by timed rfl
let lean_s168 := by timed congr lean_s166 lean_s167
let lean_s169 := by timed congr lean_s164 lean_s168
let lean_s170 := by timed congr lean_s162 lean_s169
let lean_s171 := by timed congr lean_s160 lean_s170
let lean_s172 := by timed congr lean_s158 lean_s171
let lean_s173 := by timed congr lean_s156 lean_s172
let lean_s174 := by timed congr lean_s106 lean_s173
let lean_s175 := by timed congr lean_s104 lean_s174
let lean_s176 := by timed congr lean_s103 lean_s175
let lean_s177 := by timed congr lean_s102 lean_s176
let lean_s178 := by timed congr lean_s100 lean_s177
let lean_s179 := by timed congr lean_s98 lean_s178
let lean_s180 := by timed congr lean_s96 lean_s179
let lean_s181 := by timed congr lean_s94 lean_s180
let lean_s182 := by timed congr lean_s92 lean_s181
let lean_s183 := by timed congr lean_s90 lean_s182
let lean_s184 := by timed congr lean_s88 lean_s183
let lean_s185 := by timed congr lean_s86 lean_s184
let lean_s186 := by timed congr lean_s84 lean_s185
let lean_s187 := by timed congr lean_s82 lean_s186
let lean_s188 := by timed congr lean_s80 lean_s187
let lean_s189 := by timed congr lean_s78 lean_s188
let lean_s190 := by timed congr lean_s76 lean_s189
let lean_s191 := by timed congr lean_s74 lean_s190
let lean_s192 := by timed congr lean_s72 lean_s191
let lean_s193 := by timed congr lean_s70 lean_s192
let lean_s194 := by timed congr lean_s68 lean_s193
let lean_s195 := by timed congr lean_s66 lean_s194
let lean_s196 := by timed congr lean_s64 lean_s195
let lean_s197 := by timed congr lean_s62 lean_s196
let lean_s198 := by timed congr lean_s60 lean_s197
let lean_s199 := by timed congr lean_s58 lean_s198
let lean_s200 := by timed congr lean_s56 lean_s199
let lean_s201 := by timed congr lean_s54 lean_s200
let lean_s202 := by timed congr lean_s52 lean_s201
let lean_s203 := by timed congr lean_s50 lean_s202
let lean_s204 := by timed congr lean_s48 lean_s203
let lean_s205 := by timed congr lean_s46 lean_s204
let lean_s206 := by timed congr lean_s44 lean_s205
let lean_s207 := by timed congr lean_s42 lean_s206
let lean_s208 := by timed congr lean_s40 lean_s207
let lean_s209 := by timed congr lean_s38 lean_s208
let lean_s210 := by timed congr lean_s36 lean_s209
let lean_s211 := by timed congr lean_s34 lean_s210
let lean_s212 := by timed congr lean_s32 lean_s211
let lean_s213 := by timed congr lean_s30 lean_s212
let lean_s214 := by timed congr lean_s28 lean_s213
let lean_s215 := by timed congr lean_s26 lean_s214
let lean_s216 := by timed congr lean_s24 lean_s215
let lean_s217 := by timed congr lean_s22 lean_s216
let lean_s218 := by timed congr lean_s20 lean_s217
let lean_s219 := by timed congr lean_s18 lean_s218
let lean_s220 := by timed congr lean_s16 lean_s219
let lean_s221 := by timed congr lean_s14 lean_s220
let lean_s222 := by timed congr lean_s12 lean_s221
let lean_s223 := by timed congr lean_s10 lean_s222
have lean_s224 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5))) (And (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s8 lean_s223
have lean_s225 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5)))) (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_r3 lean_s224
have lean_s226 : (Eq And And) := by timed rfl
have lean_s227 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s228 := by timed congr lean_s226 lean_s227
have lean_s229 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s230 := by timed congr lean_s226 lean_s229
have lean_s231 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s232 := by timed congr lean_s226 lean_s231
have lean_s233 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s234 := by timed congr lean_s226 lean_s233
have lean_s235 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s236 := by timed congr lean_s226 lean_s235
have lean_s237 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s238 := by timed congr lean_s226 lean_s237
have lean_s239 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s240 := by timed congr lean_s226 lean_s239
have lean_s241 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s242 := by timed congr lean_s226 lean_s241
have lean_s243 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s244 := by timed congr lean_s226 lean_s243
have lean_s245 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s246 := by timed congr lean_s226 lean_s245
have lean_s247 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s248 := by timed congr lean_s226 lean_s247
have lean_s249 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s250 := by timed congr lean_s226 lean_s249
have lean_s251 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
let lean_s252 := by timed congr lean_s226 lean_s251
have lean_s253 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) := by timed rfl
let lean_s254 := by timed congr lean_s226 lean_s253
have lean_s255 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) := by timed rfl
let lean_s256 := by timed congr lean_s226 lean_s255
have lean_s257 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s258 := by timed congr lean_s226 lean_s257
have lean_s259 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s260 := by timed congr lean_s226 lean_s259
have lean_s261 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s262 := by timed congr lean_s226 lean_s261
have lean_s263 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s264 := by timed congr lean_s226 lean_s263
have lean_s265 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s266 := by timed congr lean_s226 lean_s265
have lean_s267 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s268 := by timed congr lean_s226 lean_s267
have lean_s269 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s270 := by timed congr lean_s226 lean_s269
have lean_s271 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s272 := by timed congr lean_s226 lean_s271
have lean_s273 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s274 := by timed congr lean_s226 lean_s273
have lean_s275 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) := by timed rfl
let lean_s276 := by timed congr lean_s226 lean_s275
have lean_s277 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s278 := by timed congr lean_s226 lean_s277
have lean_s279 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s280 := by timed congr lean_s226 lean_s279
have lean_s281 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s282 := by timed congr lean_s226 lean_s281
have lean_s283 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) := by timed rfl
let lean_s284 := by timed congr lean_s226 lean_s283
have lean_s285 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) := by timed rfl
let lean_s286 := by timed congr lean_s226 lean_s285
have lean_s287 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s288 := by timed congr lean_s226 lean_s287
have lean_s289 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s290 := by timed congr lean_s226 lean_s289
have lean_s291 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s292 := by timed congr lean_s226 lean_s291
have lean_s293 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) := by timed rfl
let lean_s294 := by timed congr lean_s226 lean_s293
have lean_s295 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) := by timed rfl
let lean_s296 := by timed congr lean_s226 lean_s295
have lean_s297 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) := by timed rfl
let lean_s298 := by timed congr lean_s226 lean_s297
have lean_s299 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s300 := by timed congr lean_s226 lean_s299
have lean_s301 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s302 := by timed congr lean_s226 lean_s301
have lean_s303 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) := by timed rfl
let lean_s304 := by timed congr lean_s226 lean_s303
have lean_s305 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) := by timed rfl
let lean_s306 := by timed congr lean_s226 lean_s305
have lean_s307 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) := by timed rfl
let lean_s308 := by timed congr lean_s226 lean_s307
have lean_s309 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s310 := by timed congr lean_s226 lean_s309
have lean_s311 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s312 := by timed congr lean_s226 lean_s311
have lean_s313 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s314 := by timed congr lean_s226 lean_s313
have lean_s315 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s316 := by timed congr lean_s226 lean_s315
have lean_s317 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s318 := by timed congr lean_s226 lean_s317
have lean_s319 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s320 := by timed congr lean_s226 lean_s319
have lean_s321 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s322 := by timed congr lean_s226 lean_s321
have lean_s323 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5)))))))) := by timed rfl
let lean_s324 := by timed congr lean_s226 lean_s323
have lean_s325 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))) := by timed rfl
let lean_s326 := by timed congr lean_s226 lean_s325
have lean_s327 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s328 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s329 := by timed flipCongrArg lean_s328 [Eq]
have lean_s330 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by timed rfl
have lean_s331 : (Eq (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) := by timed congr lean_s329 lean_s330
let lean_s332 := by timed congr lean_s226 lean_s331
let lean_s333 := by timed flipCongrArg lean_s328 [Eq]
have lean_s334 : (Eq (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed rfl
have lean_s335 : (Eq (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s333 lean_s334
let lean_s336 := by timed congr lean_s226 lean_s335
let lean_s337 := by timed flipCongrArg lean_s328 [Eq]
have lean_s338 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s339 : (Eq (Eq z (Int.ofNat 0)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed congr lean_s337 lean_s338
have lean_s340 : (Eq (Not (Eq z (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed flipCongrArg lean_s339 [Not]
let lean_s341 := by timed congr lean_s226 lean_s340
let lean_s342 := by timed flipCongrArg lean_s328 [Eq]
have lean_s343 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s344 : (Eq (Eq z (Int.ofNat 1)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed congr lean_s342 lean_s343
have lean_s345 : (Eq (Not (Eq z (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed flipCongrArg lean_s344 [Not]
let lean_s346 := by timed congr lean_s226 lean_s345
let lean_s347 := by timed flipCongrArg lean_s328 [Eq]
have lean_s348 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s349 : (Eq (Eq z (Int.ofNat 2)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed congr lean_s347 lean_s348
have lean_s350 : (Eq (Not (Eq z (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed flipCongrArg lean_s349 [Not]
let lean_s351 := by timed congr lean_s226 lean_s350
let lean_s352 := by timed flipCongrArg lean_s328 [Eq]
have lean_s353 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s354 : (Eq (Eq z (Int.ofNat 3)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed congr lean_s352 lean_s353
have lean_s355 : (Eq (Not (Eq z (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed flipCongrArg lean_s354 [Not]
let lean_s356 := by timed congr lean_s226 lean_s355
let lean_s357 := by timed flipCongrArg lean_s328 [Eq]
have lean_s358 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s359 : (Eq (Eq z (Int.ofNat 4)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed congr lean_s357 lean_s358
have lean_s360 : (Eq (Not (Eq z (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed flipCongrArg lean_s359 [Not]
let lean_s361 := by timed congr lean_s226 lean_s360
let lean_s362 := by timed flipCongrArg lean_s328 [Eq]
have lean_s363 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s364 : (Eq (Eq z (Int.ofNat 5)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed congr lean_s362 lean_s363
have lean_s365 : (Eq (Not (Eq z (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed flipCongrArg lean_s364 [Not]
let lean_s366 := by timed congr lean_s361 lean_s365
let lean_s367 := by timed congr lean_s356 lean_s366
let lean_s368 := by timed congr lean_s351 lean_s367
let lean_s369 := by timed congr lean_s346 lean_s368
let lean_s370 := by timed congr lean_s341 lean_s369
let lean_s371 := by timed congr lean_s336 lean_s370
let lean_s372 := by timed congr lean_s332 lean_s371
let lean_s373 := by timed congr lean_s326 lean_s372
let lean_s374 := by timed congr lean_s324 lean_s373
let lean_s375 := by timed congr lean_s322 lean_s374
let lean_s376 := by timed congr lean_s320 lean_s375
let lean_s377 := by timed congr lean_s318 lean_s376
let lean_s378 := by timed congr lean_s316 lean_s377
let lean_s379 := by timed congr lean_s314 lean_s378
let lean_s380 := by timed congr lean_s312 lean_s379
let lean_s381 := by timed congr lean_s310 lean_s380
let lean_s382 := by timed congr lean_s308 lean_s381
let lean_s383 := by timed congr lean_s306 lean_s382
let lean_s384 := by timed congr lean_s304 lean_s383
let lean_s385 := by timed congr lean_s302 lean_s384
let lean_s386 := by timed congr lean_s300 lean_s385
let lean_s387 := by timed congr lean_s298 lean_s386
let lean_s388 := by timed congr lean_s296 lean_s387
let lean_s389 := by timed congr lean_s294 lean_s388
let lean_s390 := by timed congr lean_s292 lean_s389
let lean_s391 := by timed congr lean_s290 lean_s390
let lean_s392 := by timed congr lean_s288 lean_s391
let lean_s393 := by timed congr lean_s286 lean_s392
let lean_s394 := by timed congr lean_s284 lean_s393
let lean_s395 := by timed congr lean_s282 lean_s394
let lean_s396 := by timed congr lean_s280 lean_s395
let lean_s397 := by timed congr lean_s278 lean_s396
let lean_s398 := by timed congr lean_s276 lean_s397
let lean_s399 := by timed congr lean_s274 lean_s398
let lean_s400 := by timed congr lean_s272 lean_s399
let lean_s401 := by timed congr lean_s270 lean_s400
let lean_s402 := by timed congr lean_s268 lean_s401
let lean_s403 := by timed congr lean_s266 lean_s402
let lean_s404 := by timed congr lean_s264 lean_s403
let lean_s405 := by timed congr lean_s262 lean_s404
let lean_s406 := by timed congr lean_s260 lean_s405
let lean_s407 := by timed congr lean_s258 lean_s406
let lean_s408 := by timed congr lean_s256 lean_s407
let lean_s409 := by timed congr lean_s254 lean_s408
let lean_s410 := by timed congr lean_s252 lean_s409
let lean_s411 := by timed congr lean_s250 lean_s410
let lean_s412 := by timed congr lean_s248 lean_s411
let lean_s413 := by timed congr lean_s246 lean_s412
let lean_s414 := by timed congr lean_s244 lean_s413
let lean_s415 := by timed congr lean_s242 lean_s414
let lean_s416 := by timed congr lean_s240 lean_s415
let lean_s417 := by timed congr lean_s238 lean_s416
let lean_s418 := by timed congr lean_s236 lean_s417
let lean_s419 := by timed congr lean_s234 lean_s418
let lean_s420 := by timed congr lean_s232 lean_s419
let lean_s421 := by timed congr lean_s230 lean_s420
have lean_s422 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s228 lean_s421
have lean_s423 : (Eq And And) := by timed rfl
let lean_s424 := by timed congr lean_s423 lean_s7
let lean_s425 := by timed congr lean_s423 lean_s9
let lean_s426 := by timed congr lean_s423 lean_s11
let lean_s427 := by timed congr lean_s423 lean_s13
let lean_s428 := by timed congr lean_s423 lean_s15
let lean_s429 := by timed congr lean_s423 lean_s17
let lean_s430 := by timed congr lean_s423 lean_s19
let lean_s431 := by timed congr lean_s423 lean_s21
let lean_s432 := by timed congr lean_s423 lean_s23
let lean_s433 := by timed congr lean_s423 lean_s25
let lean_s434 := by timed congr lean_s423 lean_s27
let lean_s435 := by timed congr lean_s423 lean_s29
let lean_s436 := by timed congr lean_s423 lean_s31
let lean_s437 := by timed congr lean_s423 lean_s33
let lean_s438 := by timed congr lean_s423 lean_s35
let lean_s439 := by timed congr lean_s423 lean_s37
let lean_s440 := by timed congr lean_s423 lean_s39
let lean_s441 := by timed congr lean_s423 lean_s41
let lean_s442 := by timed congr lean_s423 lean_s43
let lean_s443 := by timed congr lean_s423 lean_s45
let lean_s444 := by timed congr lean_s423 lean_s47
let lean_s445 := by timed congr lean_s423 lean_s49
let lean_s446 := by timed congr lean_s423 lean_s51
let lean_s447 := by timed congr lean_s423 lean_s53
let lean_s448 := by timed congr lean_s423 lean_s55
let lean_s449 := by timed congr lean_s423 lean_s57
let lean_s450 := by timed congr lean_s423 lean_s59
let lean_s451 := by timed congr lean_s423 lean_s61
let lean_s452 := by timed congr lean_s423 lean_s63
let lean_s453 := by timed congr lean_s423 lean_s65
let lean_s454 := by timed congr lean_s423 lean_s67
let lean_s455 := by timed congr lean_s423 lean_s69
let lean_s456 := by timed congr lean_s423 lean_s71
let lean_s457 := by timed congr lean_s423 lean_s73
let lean_s458 := by timed congr lean_s423 lean_s75
let lean_s459 := by timed congr lean_s423 lean_s77
let lean_s460 := by timed congr lean_s423 lean_s79
let lean_s461 := by timed congr lean_s423 lean_s81
let lean_s462 := by timed congr lean_s423 lean_s83
let lean_s463 := by timed congr lean_s423 lean_s85
let lean_s464 := by timed congr lean_s423 lean_s87
let lean_s465 := by timed congr lean_s423 lean_s89
let lean_s466 := by timed congr lean_s423 lean_s91
let lean_s467 := by timed congr lean_s423 lean_s93
let lean_s468 := by timed congr lean_s423 lean_s95
let lean_s469 := by timed congr lean_s423 lean_s97
let lean_s470 := by timed congr lean_s423 lean_s99
let lean_s471 := by timed congr lean_s423 lean_s101
have lean_s472 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5)))))))) := by timed rfl
let lean_s473 := by timed congr lean_s423 lean_s472
have lean_s474 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))) := by timed rfl
let lean_s475 := by timed congr lean_s423 lean_s474
let lean_s476 := by timed congr lean_s423 lean_r18
have lean_s477 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed rfl
let lean_s478 := by timed congr lean_s423 lean_s477
have lean_s479 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s480 := by timed congr lean_s423 lean_s479
have lean_s481 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s482 := by timed congr lean_s423 lean_s481
have lean_s483 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s484 := by timed congr lean_s423 lean_s483
have lean_s485 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s486 := by timed congr lean_s423 lean_s485
have lean_s487 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s488 := by timed congr lean_s423 lean_s487
have lean_s489 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s490 := by timed congr lean_s488 lean_s489
let lean_s491 := by timed congr lean_s486 lean_s490
let lean_s492 := by timed congr lean_s484 lean_s491
let lean_s493 := by timed congr lean_s482 lean_s492
let lean_s494 := by timed congr lean_s480 lean_s493
let lean_s495 := by timed congr lean_s478 lean_s494
let lean_s496 := by timed congr lean_s476 lean_s495
let lean_s497 := by timed congr lean_s475 lean_s496
let lean_s498 := by timed congr lean_s473 lean_s497
let lean_s499 := by timed congr lean_s471 lean_s498
let lean_s500 := by timed congr lean_s470 lean_s499
let lean_s501 := by timed congr lean_s469 lean_s500
let lean_s502 := by timed congr lean_s468 lean_s501
let lean_s503 := by timed congr lean_s467 lean_s502
let lean_s504 := by timed congr lean_s466 lean_s503
let lean_s505 := by timed congr lean_s465 lean_s504
let lean_s506 := by timed congr lean_s464 lean_s505
let lean_s507 := by timed congr lean_s463 lean_s506
let lean_s508 := by timed congr lean_s462 lean_s507
let lean_s509 := by timed congr lean_s461 lean_s508
let lean_s510 := by timed congr lean_s460 lean_s509
let lean_s511 := by timed congr lean_s459 lean_s510
let lean_s512 := by timed congr lean_s458 lean_s511
let lean_s513 := by timed congr lean_s457 lean_s512
let lean_s514 := by timed congr lean_s456 lean_s513
let lean_s515 := by timed congr lean_s455 lean_s514
let lean_s516 := by timed congr lean_s454 lean_s515
let lean_s517 := by timed congr lean_s453 lean_s516
let lean_s518 := by timed congr lean_s452 lean_s517
let lean_s519 := by timed congr lean_s451 lean_s518
let lean_s520 := by timed congr lean_s450 lean_s519
let lean_s521 := by timed congr lean_s449 lean_s520
let lean_s522 := by timed congr lean_s448 lean_s521
let lean_s523 := by timed congr lean_s447 lean_s522
let lean_s524 := by timed congr lean_s446 lean_s523
let lean_s525 := by timed congr lean_s445 lean_s524
let lean_s526 := by timed congr lean_s444 lean_s525
let lean_s527 := by timed congr lean_s443 lean_s526
let lean_s528 := by timed congr lean_s442 lean_s527
let lean_s529 := by timed congr lean_s441 lean_s528
let lean_s530 := by timed congr lean_s440 lean_s529
let lean_s531 := by timed congr lean_s439 lean_s530
let lean_s532 := by timed congr lean_s438 lean_s531
let lean_s533 := by timed congr lean_s437 lean_s532
let lean_s534 := by timed congr lean_s436 lean_s533
let lean_s535 := by timed congr lean_s435 lean_s534
let lean_s536 := by timed congr lean_s434 lean_s535
let lean_s537 := by timed congr lean_s433 lean_s536
let lean_s538 := by timed congr lean_s432 lean_s537
let lean_s539 := by timed congr lean_s431 lean_s538
let lean_s540 := by timed congr lean_s430 lean_s539
let lean_s541 := by timed congr lean_s429 lean_s540
let lean_s542 := by timed congr lean_s428 lean_s541
let lean_s543 := by timed congr lean_s427 lean_s542
let lean_s544 := by timed congr lean_s426 lean_s543
let lean_s545 := by timed congr lean_s425 lean_s544
have lean_s546 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And True (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s424 lean_s545
have lean_s547 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_s546 lean_r0
have lean_s548 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_s422 lean_s547
let lean_s549 := by timed Eq.trans lean_s225 lean_s548
have lean_s550 : (Eq And And) := by timed rfl
have lean_s551 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s552 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s551, 47
have lean_s553 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s554 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s553, 46
have lean_s555 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s556 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s555, 45
have lean_s557 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s558 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s557, 44
have lean_s559 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s560 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s559, 43
have lean_s561 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s562 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s561, 42
have lean_s563 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s564 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s563, 41
have lean_s565 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s566 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s565, 40
have lean_s567 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s568 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s567, 39
have lean_s569 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s570 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s569, 38
have lean_s571 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s572 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s571, 37
have lean_s573 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s574 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s573, 36
have lean_s575 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s576 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s575, 35
have lean_s577 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s578 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s577, 34
have lean_s579 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s580 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s579, 33
have lean_s581 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s582 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s581, 32
have lean_s583 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s584 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s583, 31
have lean_s585 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s586 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s585, 30
have lean_s587 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s588 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s587, 29
have lean_s589 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s590 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s589, 28
have lean_s591 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s592 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s591, 27
have lean_s593 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s594 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s593, 26
have lean_s595 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s596 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s595, 25
have lean_s597 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s598 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s597, 24
have lean_s599 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s600 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s599, 23
have lean_s601 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s602 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s601, 22
have lean_s603 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s604 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s603, 21
have lean_s605 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s606 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s605, 20
have lean_s607 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s608 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s607, 19
have lean_s609 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s610 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s609, 18
have lean_s611 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s612 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s611, 17
have lean_s613 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s614 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s613, 16
have lean_s615 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s616 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s615, 15
have lean_s617 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s618 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s617, 14
have lean_s619 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s620 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s619, 13
have lean_s621 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s622 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s621, 12
have lean_s623 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s624 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s623, 11
have lean_s625 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s626 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s625, 10
have lean_s627 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s628 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s627, 9
have lean_s629 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s630 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s629, 8
have lean_s631 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s632 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s631, 7
have lean_s633 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s634 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s633, 6
have lean_s635 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s636 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s635, 5
have lean_s637 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s638 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s637, 4
have lean_s639 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s640 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s639, 3
have lean_s641 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s642 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s641, 2
have lean_s643 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s644 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s643, 1
have lean_s645 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s646 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s645, 0
let lean_s647 := by timed And.intro lean_s644 lean_s646
let lean_s648 := by timed And.intro lean_s642 lean_s647
let lean_s649 := by timed And.intro lean_s640 lean_s648
let lean_s650 := by timed And.intro lean_s638 lean_s649
let lean_s651 := by timed And.intro lean_s636 lean_s650
let lean_s652 := by timed And.intro lean_s634 lean_s651
let lean_s653 := by timed And.intro lean_s632 lean_s652
let lean_s654 := by timed And.intro lean_s630 lean_s653
let lean_s655 := by timed And.intro lean_s628 lean_s654
let lean_s656 := by timed And.intro lean_s626 lean_s655
let lean_s657 := by timed And.intro lean_s624 lean_s656
let lean_s658 := by timed And.intro lean_s622 lean_s657
let lean_s659 := by timed And.intro lean_s620 lean_s658
let lean_s660 := by timed And.intro lean_s618 lean_s659
let lean_s661 := by timed And.intro lean_s616 lean_s660
let lean_s662 := by timed And.intro lean_s614 lean_s661
let lean_s663 := by timed And.intro lean_s612 lean_s662
let lean_s664 := by timed And.intro lean_s610 lean_s663
let lean_s665 := by timed And.intro lean_s608 lean_s664
let lean_s666 := by timed And.intro lean_s606 lean_s665
let lean_s667 := by timed And.intro lean_s604 lean_s666
let lean_s668 := by timed And.intro lean_s602 lean_s667
let lean_s669 := by timed And.intro lean_s600 lean_s668
let lean_s670 := by timed And.intro lean_s598 lean_s669
let lean_s671 := by timed And.intro lean_s596 lean_s670
let lean_s672 := by timed And.intro lean_s594 lean_s671
let lean_s673 := by timed And.intro lean_s592 lean_s672
let lean_s674 := by timed And.intro lean_s590 lean_s673
let lean_s675 := by timed And.intro lean_s588 lean_s674
let lean_s676 := by timed And.intro lean_s586 lean_s675
let lean_s677 := by timed And.intro lean_s584 lean_s676
let lean_s678 := by timed And.intro lean_s582 lean_s677
let lean_s679 := by timed And.intro lean_s580 lean_s678
let lean_s680 := by timed And.intro lean_s578 lean_s679
let lean_s681 := by timed And.intro lean_s576 lean_s680
let lean_s682 := by timed And.intro lean_s574 lean_s681
let lean_s683 := by timed And.intro lean_s572 lean_s682
let lean_s684 := by timed And.intro lean_s570 lean_s683
let lean_s685 := by timed And.intro lean_s568 lean_s684
let lean_s686 := by timed And.intro lean_s566 lean_s685
let lean_s687 := by timed And.intro lean_s564 lean_s686
let lean_s688 := by timed And.intro lean_s562 lean_s687
let lean_s689 := by timed And.intro lean_s560 lean_s688
let lean_s690 := by timed And.intro lean_s558 lean_s689
let lean_s691 := by timed And.intro lean_s556 lean_s690
let lean_s692 := by timed And.intro lean_s554 lean_s691
have lean_s693 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))))))))))))))))))))))))))))))))))))))))))))))))) := by timed And.intro lean_s552 lean_s692
have lean_s694 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s693, 47
let lean_s695 := by timed flipCongrArg lean_s694 [Eq]
have lean_s696 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s697 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s695 lean_s696
let lean_s698 := by timed congr lean_s550 lean_s697
have lean_s699 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s693, 46
let lean_s700 := by timed flipCongrArg lean_s699 [Eq]
have lean_s701 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s702 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s700 lean_s701
let lean_s703 := by timed congr lean_s550 lean_s702
have lean_s704 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s693, 45
let lean_s705 := by timed flipCongrArg lean_s704 [Eq]
have lean_s706 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s707 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s705 lean_s706
let lean_s708 := by timed congr lean_s550 lean_s707
have lean_s709 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s693, 44
let lean_s710 := by timed flipCongrArg lean_s709 [Eq]
have lean_s711 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s712 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s710 lean_s711
let lean_s713 := by timed congr lean_s550 lean_s712
have lean_s714 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s693, 43
let lean_s715 := by timed flipCongrArg lean_s714 [Eq]
have lean_s716 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s717 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s715 lean_s716
let lean_s718 := by timed congr lean_s550 lean_s717
have lean_s719 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s693, 42
let lean_s720 := by timed flipCongrArg lean_s719 [Eq]
have lean_s721 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s722 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s720 lean_s721
let lean_s723 := by timed congr lean_s550 lean_s722
have lean_s724 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s693, 41
let lean_s725 := by timed flipCongrArg lean_s724 [Eq]
have lean_s726 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s725 lean_s716
let lean_s727 := by timed congr lean_s550 lean_s726
have lean_s728 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s693, 40
let lean_s729 := by timed flipCongrArg lean_s728 [Eq]
have lean_s730 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s729 lean_s721
let lean_s731 := by timed congr lean_s550 lean_s730
have lean_s732 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s693, 39
let lean_s733 := by timed flipCongrArg lean_s732 [Eq]
have lean_s734 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s733 lean_s696
let lean_s735 := by timed congr lean_s550 lean_s734
have lean_s736 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s693, 38
let lean_s737 := by timed flipCongrArg lean_s736 [Eq]
have lean_s738 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s737 lean_s701
let lean_s739 := by timed congr lean_s550 lean_s738
have lean_s740 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s693, 37
let lean_s741 := by timed flipCongrArg lean_s740 [Eq]
have lean_s742 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s741 lean_s706
let lean_s743 := by timed congr lean_s550 lean_s742
have lean_s744 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s693, 36
let lean_s745 := by timed flipCongrArg lean_s744 [Eq]
have lean_s746 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s745 lean_s711
let lean_s747 := by timed congr lean_s550 lean_s746
have lean_s748 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s693, 35
let lean_s749 := by timed flipCongrArg lean_s748 [Eq]
have lean_s750 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s749 lean_s721
let lean_s751 := by timed congr lean_s550 lean_s750
have lean_s752 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s693, 34
let lean_s753 := by timed flipCongrArg lean_s752 [Eq]
have lean_s754 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s753 lean_s696
let lean_s755 := by timed congr lean_s550 lean_s754
have lean_s756 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s693, 33
let lean_s757 := by timed flipCongrArg lean_s756 [Eq]
have lean_s758 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s757 lean_s701
let lean_s759 := by timed congr lean_s550 lean_s758
have lean_s760 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s693, 32
let lean_s761 := by timed flipCongrArg lean_s760 [Eq]
have lean_s762 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s761 lean_s706
let lean_s763 := by timed congr lean_s550 lean_s762
have lean_s764 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s693, 31
let lean_s765 := by timed flipCongrArg lean_s764 [Eq]
have lean_s766 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s765 lean_s711
let lean_s767 := by timed congr lean_s550 lean_s766
have lean_s768 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s693, 30
let lean_s769 := by timed flipCongrArg lean_s768 [Eq]
have lean_s770 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s769 lean_s716
let lean_s771 := by timed congr lean_s550 lean_s770
have lean_s772 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s693, 29
let lean_s773 := by timed flipCongrArg lean_s772 [Eq]
have lean_s774 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s773 lean_s696
let lean_s775 := by timed congr lean_s550 lean_s774
have lean_s776 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s693, 28
let lean_s777 := by timed flipCongrArg lean_s776 [Eq]
have lean_s778 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s777 lean_s701
let lean_s779 := by timed congr lean_s550 lean_s778
have lean_s780 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s693, 27
let lean_s781 := by timed flipCongrArg lean_s780 [Eq]
have lean_s782 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s781 lean_s706
let lean_s783 := by timed congr lean_s550 lean_s782
have lean_s784 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s693, 26
let lean_s785 := by timed flipCongrArg lean_s784 [Eq]
have lean_s786 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s785 lean_s711
let lean_s787 := by timed congr lean_s550 lean_s786
have lean_s788 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s693, 25
let lean_s789 := by timed flipCongrArg lean_s788 [Eq]
have lean_s790 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s789 lean_s716
let lean_s791 := by timed congr lean_s550 lean_s790
have lean_s792 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s693, 24
let lean_s793 := by timed flipCongrArg lean_s792 [Eq]
have lean_s794 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s793 lean_s721
let lean_s795 := by timed congr lean_s550 lean_s794
have lean_s796 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s693, 23
let lean_s797 := by timed flipCongrArg lean_s796 [Eq]
have lean_s798 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s797 lean_s701
let lean_s799 := by timed congr lean_s550 lean_s798
have lean_s800 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s693, 22
let lean_s801 := by timed flipCongrArg lean_s800 [Eq]
have lean_s802 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s801 lean_s706
let lean_s803 := by timed congr lean_s550 lean_s802
have lean_s804 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s693, 21
let lean_s805 := by timed flipCongrArg lean_s804 [Eq]
have lean_s806 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s805 lean_s711
let lean_s807 := by timed congr lean_s550 lean_s806
have lean_s808 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s693, 20
let lean_s809 := by timed flipCongrArg lean_s808 [Eq]
have lean_s810 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s809 lean_s716
let lean_s811 := by timed congr lean_s550 lean_s810
have lean_s812 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s693, 19
let lean_s813 := by timed flipCongrArg lean_s812 [Eq]
have lean_s814 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s813 lean_s721
let lean_s815 := by timed congr lean_s550 lean_s814
have lean_s816 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s693, 18
let lean_s817 := by timed flipCongrArg lean_s816 [Eq]
have lean_s818 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s817 lean_s696
let lean_s819 := by timed congr lean_s550 lean_s818
have lean_s820 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s693, 17
let lean_s821 := by timed flipCongrArg lean_s820 [Eq]
have lean_s822 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s821 lean_s706
let lean_s823 := by timed congr lean_s550 lean_s822
have lean_s824 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s693, 16
let lean_s825 := by timed flipCongrArg lean_s824 [Eq]
have lean_s826 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s825 lean_s711
let lean_s827 := by timed congr lean_s550 lean_s826
have lean_s828 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s693, 15
let lean_s829 := by timed flipCongrArg lean_s828 [Eq]
have lean_s830 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s829 lean_s716
let lean_s831 := by timed congr lean_s550 lean_s830
have lean_s832 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s693, 14
let lean_s833 := by timed flipCongrArg lean_s832 [Eq]
have lean_s834 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s833 lean_s721
let lean_s835 := by timed congr lean_s550 lean_s834
have lean_s836 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s693, 13
let lean_s837 := by timed flipCongrArg lean_s836 [Eq]
have lean_s838 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s837 lean_s696
let lean_s839 := by timed congr lean_s550 lean_s838
have lean_s840 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s693, 12
let lean_s841 := by timed flipCongrArg lean_s840 [Eq]
have lean_s842 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s841 lean_s701
let lean_s843 := by timed congr lean_s550 lean_s842
have lean_s844 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s693, 11
let lean_s845 := by timed flipCongrArg lean_s844 [Eq]
have lean_s846 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s845 lean_s711
let lean_s847 := by timed congr lean_s550 lean_s846
have lean_s848 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s693, 10
let lean_s849 := by timed flipCongrArg lean_s848 [Eq]
have lean_s850 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s849 lean_s716
let lean_s851 := by timed congr lean_s550 lean_s850
have lean_s852 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s693, 9
let lean_s853 := by timed flipCongrArg lean_s852 [Eq]
have lean_s854 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s853 lean_s721
let lean_s855 := by timed congr lean_s550 lean_s854
have lean_s856 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s693, 8
let lean_s857 := by timed flipCongrArg lean_s856 [Eq]
have lean_s858 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s857 lean_s696
let lean_s859 := by timed congr lean_s550 lean_s858
have lean_s860 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s693, 7
let lean_s861 := by timed flipCongrArg lean_s860 [Eq]
have lean_s862 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s861 lean_s701
let lean_s863 := by timed congr lean_s550 lean_s862
have lean_s864 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s693, 6
let lean_s865 := by timed flipCongrArg lean_s864 [Eq]
have lean_s866 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s865 lean_s706
let lean_s867 := by timed congr lean_s550 lean_s866
have lean_s868 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s693, 5
let lean_s869 := by timed flipCongrArg lean_s868 [Eq]
have lean_s870 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s869 lean_s716
let lean_s871 := by timed congr lean_s550 lean_s870
have lean_s872 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s693, 4
let lean_s873 := by timed flipCongrArg lean_s872 [Eq]
have lean_s874 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s873 lean_s721
let lean_s875 := by timed congr lean_s550 lean_s874
have lean_s876 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s693, 3
let lean_s877 := by timed flipCongrArg lean_s876 [Eq]
have lean_s878 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s877 lean_s696
let lean_s879 := by timed congr lean_s550 lean_s878
have lean_s880 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s693, 2
let lean_s881 := by timed flipCongrArg lean_s880 [Eq]
have lean_s882 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s881 lean_s701
let lean_s883 := by timed congr lean_s550 lean_s882
have lean_s884 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s693, 1
let lean_s885 := by timed flipCongrArg lean_s884 [Eq]
have lean_s886 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s885 lean_s706
let lean_s887 := by timed congr lean_s550 lean_s886
have lean_s888 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s693, 0
let lean_s889 := by timed flipCongrArg lean_s888 [Eq]
have lean_s890 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s889 lean_s711
let lean_s891 := by timed congr lean_s550 lean_s890
have lean_s892 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5)))))))) := by timed rfl
let lean_s893 := by timed congr lean_s550 lean_s892
have lean_s894 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))) := by timed rfl
let lean_s895 := by timed congr lean_s550 lean_s894
have lean_s896 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed rfl
let lean_s897 := by timed congr lean_s550 lean_s896
have lean_s898 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s899 := by timed congr lean_s550 lean_s898
have lean_s900 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s901 := by timed congr lean_s550 lean_s900
have lean_s902 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s903 := by timed congr lean_s550 lean_s902
have lean_s904 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s905 := by timed congr lean_s550 lean_s904
have lean_s906 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s907 := by timed congr lean_s550 lean_s906
have lean_s908 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s909 := by timed congr lean_s907 lean_s908
let lean_s910 := by timed congr lean_s905 lean_s909
let lean_s911 := by timed congr lean_s903 lean_s910
let lean_s912 := by timed congr lean_s901 lean_s911
let lean_s913 := by timed congr lean_s899 lean_s912
let lean_s914 := by timed congr lean_s897 lean_s913
let lean_s915 := by timed congr lean_s895 lean_s914
let lean_s916 := by timed congr lean_s893 lean_s915
let lean_s917 := by timed congr lean_s891 lean_s916
let lean_s918 := by timed congr lean_s887 lean_s917
let lean_s919 := by timed congr lean_s883 lean_s918
let lean_s920 := by timed congr lean_s879 lean_s919
let lean_s921 := by timed congr lean_s875 lean_s920
let lean_s922 := by timed congr lean_s871 lean_s921
let lean_s923 := by timed congr lean_s867 lean_s922
let lean_s924 := by timed congr lean_s863 lean_s923
let lean_s925 := by timed congr lean_s859 lean_s924
let lean_s926 := by timed congr lean_s855 lean_s925
let lean_s927 := by timed congr lean_s851 lean_s926
let lean_s928 := by timed congr lean_s847 lean_s927
let lean_s929 := by timed congr lean_s843 lean_s928
let lean_s930 := by timed congr lean_s839 lean_s929
let lean_s931 := by timed congr lean_s835 lean_s930
let lean_s932 := by timed congr lean_s831 lean_s931
let lean_s933 := by timed congr lean_s827 lean_s932
let lean_s934 := by timed congr lean_s823 lean_s933
let lean_s935 := by timed congr lean_s819 lean_s934
let lean_s936 := by timed congr lean_s815 lean_s935
let lean_s937 := by timed congr lean_s811 lean_s936
let lean_s938 := by timed congr lean_s807 lean_s937
let lean_s939 := by timed congr lean_s803 lean_s938
let lean_s940 := by timed congr lean_s799 lean_s939
let lean_s941 := by timed congr lean_s795 lean_s940
let lean_s942 := by timed congr lean_s791 lean_s941
let lean_s943 := by timed congr lean_s787 lean_s942
let lean_s944 := by timed congr lean_s783 lean_s943
let lean_s945 := by timed congr lean_s779 lean_s944
let lean_s946 := by timed congr lean_s775 lean_s945
let lean_s947 := by timed congr lean_s771 lean_s946
let lean_s948 := by timed congr lean_s767 lean_s947
let lean_s949 := by timed congr lean_s763 lean_s948
let lean_s950 := by timed congr lean_s759 lean_s949
let lean_s951 := by timed congr lean_s755 lean_s950
let lean_s952 := by timed congr lean_s751 lean_s951
let lean_s953 := by timed congr lean_s747 lean_s952
let lean_s954 := by timed congr lean_s743 lean_s953
let lean_s955 := by timed congr lean_s739 lean_s954
let lean_s956 := by timed congr lean_s735 lean_s955
let lean_s957 := by timed congr lean_s731 lean_s956
let lean_s958 := by timed congr lean_s727 lean_s957
let lean_s959 := by timed congr lean_s723 lean_s958
let lean_s960 := by timed congr lean_s718 lean_s959
let lean_s961 := by timed congr lean_s713 lean_s960
let lean_s962 := by timed congr lean_s708 lean_s961
let lean_s963 := by timed congr lean_s703 lean_s962
have lean_s964 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s698 lean_s963
have lean_s965 : (Eq And And) := by timed rfl
let lean_s966 := by timed congr lean_s965 lean_r20
let lean_s967 := by timed congr lean_s965 lean_r23
let lean_s968 := by timed congr lean_s965 lean_r8
let lean_s969 := by timed congr lean_s965 lean_r11
let lean_s970 := by timed congr lean_s965 lean_r5
let lean_s971 := by timed congr lean_s965 lean_r10
let lean_s972 := by timed congr lean_s965 lean_r5
let lean_s973 := by timed congr lean_s965 lean_r10
let lean_s974 := by timed congr lean_s965 lean_r20
let lean_s975 := by timed congr lean_s965 lean_r23
let lean_s976 := by timed congr lean_s965 lean_r8
let lean_s977 := by timed congr lean_s965 lean_r11
let lean_s978 := by timed congr lean_s965 lean_r10
let lean_s979 := by timed congr lean_s965 lean_r20
let lean_s980 := by timed congr lean_s965 lean_r23
let lean_s981 := by timed congr lean_s965 lean_r8
let lean_s982 := by timed congr lean_s965 lean_r11
let lean_s983 := by timed congr lean_s965 lean_r5
let lean_s984 := by timed congr lean_s965 lean_r20
let lean_s985 := by timed congr lean_s965 lean_r23
let lean_s986 := by timed congr lean_s965 lean_r8
let lean_s987 := by timed congr lean_s965 lean_r11
let lean_s988 := by timed congr lean_s965 lean_r5
let lean_s989 := by timed congr lean_s965 lean_r10
let lean_s990 := by timed congr lean_s965 lean_r23
let lean_s991 := by timed congr lean_s965 lean_r8
let lean_s992 := by timed congr lean_s965 lean_r11
let lean_s993 := by timed congr lean_s965 lean_r5
let lean_s994 := by timed congr lean_s965 lean_r10
let lean_s995 := by timed congr lean_s965 lean_r20
let lean_s996 := by timed congr lean_s965 lean_r8
let lean_s997 := by timed congr lean_s965 lean_r11
let lean_s998 := by timed congr lean_s965 lean_r5
let lean_s999 := by timed congr lean_s965 lean_r10
let lean_s1000 := by timed congr lean_s965 lean_r20
let lean_s1001 := by timed congr lean_s965 lean_r23
let lean_s1002 := by timed congr lean_s965 lean_r11
let lean_s1003 := by timed congr lean_s965 lean_r5
let lean_s1004 := by timed congr lean_s965 lean_r10
let lean_s1005 := by timed congr lean_s965 lean_r20
let lean_s1006 := by timed congr lean_s965 lean_r23
let lean_s1007 := by timed congr lean_s965 lean_r8
let lean_s1008 := by timed congr lean_s965 lean_r5
let lean_s1009 := by timed congr lean_s965 lean_r10
let lean_s1010 := by timed congr lean_s965 lean_r20
let lean_s1011 := by timed congr lean_s965 lean_r23
let lean_s1012 := by timed congr lean_s965 lean_r8
let lean_s1013 := by timed congr lean_s965 lean_r11
let lean_s1014 := by timed congr lean_s965 lean_s472
let lean_s1015 := by timed congr lean_s965 lean_s474
let lean_s1016 := by timed congr lean_s965 lean_s477
let lean_s1017 := by timed congr lean_s965 lean_s479
let lean_s1018 := by timed congr lean_s965 lean_s481
let lean_s1019 := by timed congr lean_s965 lean_s483
let lean_s1020 := by timed congr lean_s965 lean_s485
let lean_s1021 := by timed congr lean_s965 lean_s487
let lean_s1022 := by timed congr lean_s1021 lean_s489
let lean_s1023 := by timed congr lean_s1020 lean_s1022
let lean_s1024 := by timed congr lean_s1019 lean_s1023
let lean_s1025 := by timed congr lean_s1018 lean_s1024
let lean_s1026 := by timed congr lean_s1017 lean_s1025
let lean_s1027 := by timed congr lean_s1016 lean_s1026
let lean_s1028 := by timed congr lean_s1015 lean_s1027
let lean_s1029 := by timed congr lean_s1014 lean_s1028
let lean_s1030 := by timed congr lean_s1013 lean_s1029
let lean_s1031 := by timed congr lean_s1012 lean_s1030
let lean_s1032 := by timed congr lean_s1011 lean_s1031
let lean_s1033 := by timed congr lean_s1010 lean_s1032
let lean_s1034 := by timed congr lean_s1009 lean_s1033
let lean_s1035 := by timed congr lean_s1008 lean_s1034
let lean_s1036 := by timed congr lean_s1007 lean_s1035
let lean_s1037 := by timed congr lean_s1006 lean_s1036
let lean_s1038 := by timed congr lean_s1005 lean_s1037
let lean_s1039 := by timed congr lean_s1004 lean_s1038
let lean_s1040 := by timed congr lean_s1003 lean_s1039
let lean_s1041 := by timed congr lean_s1002 lean_s1040
let lean_s1042 := by timed congr lean_s1001 lean_s1041
let lean_s1043 := by timed congr lean_s1000 lean_s1042
let lean_s1044 := by timed congr lean_s999 lean_s1043
let lean_s1045 := by timed congr lean_s998 lean_s1044
let lean_s1046 := by timed congr lean_s997 lean_s1045
let lean_s1047 := by timed congr lean_s996 lean_s1046
let lean_s1048 := by timed congr lean_s995 lean_s1047
let lean_s1049 := by timed congr lean_s994 lean_s1048
let lean_s1050 := by timed congr lean_s993 lean_s1049
let lean_s1051 := by timed congr lean_s992 lean_s1050
let lean_s1052 := by timed congr lean_s991 lean_s1051
let lean_s1053 := by timed congr lean_s990 lean_s1052
let lean_s1054 := by timed congr lean_s989 lean_s1053
let lean_s1055 := by timed congr lean_s988 lean_s1054
let lean_s1056 := by timed congr lean_s987 lean_s1055
let lean_s1057 := by timed congr lean_s986 lean_s1056
let lean_s1058 := by timed congr lean_s985 lean_s1057
let lean_s1059 := by timed congr lean_s984 lean_s1058
let lean_s1060 := by timed congr lean_s983 lean_s1059
let lean_s1061 := by timed congr lean_s982 lean_s1060
let lean_s1062 := by timed congr lean_s981 lean_s1061
let lean_s1063 := by timed congr lean_s980 lean_s1062
let lean_s1064 := by timed congr lean_s979 lean_s1063
let lean_s1065 := by timed congr lean_s978 lean_s1064
let lean_s1066 := by timed congr lean_s977 lean_s1065
let lean_s1067 := by timed congr lean_s976 lean_s1066
let lean_s1068 := by timed congr lean_s975 lean_s1067
let lean_s1069 := by timed congr lean_s974 lean_s1068
let lean_s1070 := by timed congr lean_s973 lean_s1069
let lean_s1071 := by timed congr lean_s972 lean_s1070
let lean_s1072 := by timed congr lean_s971 lean_s1071
let lean_s1073 := by timed congr lean_s970 lean_s1072
let lean_s1074 := by timed congr lean_s969 lean_s1073
let lean_s1075 := by timed congr lean_s968 lean_s1074
let lean_s1076 := by timed congr lean_s967 lean_s1075
have lean_s1077 : (Eq (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s966 lean_s1076
have lean_s1078 : (Eq (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Int.ofNat 1) (Int.ofNat 1)) (And (Eq (Int.ofNat 2) (Int.ofNat 2)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))) := by timed Eq.trans lean_s1077 lean_r13
have lean_s1079 : (Eq (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))) := by timed Eq.trans lean_s964 lean_s1078
let lean_s1080 := by timed Eq.trans lean_s549 lean_s1079
have lean_s1081 : (Eq And And) := by timed rfl
have lean_s1082 : (Eq (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5)))))))) := by timed rfl
let lean_s1083 := by timed congr lean_s1081 lean_s1082
have lean_s1084 : (Eq (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))) := by timed rfl
let lean_s1085 := by timed congr lean_s1081 lean_s1084
have lean_s1086 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by timed rfl
let lean_s1087 := by timed flipCongrArg lean_s1086 [Eq]
have lean_s1088 : (Eq x x) := by timed rfl
let lean_s1089 := by timed flipCongrArg lean_s1088 [Sum]
have lean_s1090 : (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed rfl
let lean_s1091 := by timed flipCongrArg lean_s1090 [Eq]
have lean_s1092 : (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed rfl
have lean_s1093 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) := by timed congr lean_s1091 lean_s1092
let lean_s1094 := by timed Eq.trans lean_r21 lean_s1093
have lean_s1095 : (Eq (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) True) := by timed Eq.trans lean_s1094 lean_r24
have lean_s1096 : (Eq (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int) (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) := by timed trueElim lean_s1095
have lean_s1097 : (Eq (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)) (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) := by timed congr lean_s1089 lean_s1096
have lean_s1098 : (Eq (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int)))) := by timed flipCongrArg lean_s1097 [Pred]
let lean_s1099 := by timed flipCongrArg lean_s1098 [Sum]
have lean_s1100 : (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed rfl
let lean_s1101 := by timed flipCongrArg lean_s1100 [Eq]
have lean_s1102 : (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed rfl
have lean_s1103 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed congr lean_s1101 lean_s1102
let lean_s1104 := by timed Eq.trans lean_r27 lean_s1103
have lean_s1105 : (Eq (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) True) := by timed Eq.trans lean_s1104 lean_r14
have lean_s1106 : (Eq (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) := by timed trueElim lean_s1105
have lean_s1107 : (Eq (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed congr lean_s1099 lean_s1106
have lean_s1108 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s1087 lean_s1107
let lean_s1109 := by timed congr lean_s1081 lean_s1108
have lean_s1110 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s1111 := by timed congr lean_s1081 lean_s1110
have lean_s1112 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s1113 := by timed congr lean_s1081 lean_s1112
have lean_s1114 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s1115 := by timed congr lean_s1081 lean_s1114
have lean_s1116 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s1117 := by timed congr lean_s1081 lean_s1116
have lean_s1118 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s1119 := by timed congr lean_s1081 lean_s1118
have lean_s1120 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s1121 := by timed congr lean_s1119 lean_s1120
let lean_s1122 := by timed congr lean_s1117 lean_s1121
let lean_s1123 := by timed congr lean_s1115 lean_s1122
let lean_s1124 := by timed congr lean_s1113 lean_s1123
let lean_s1125 := by timed congr lean_s1111 lean_s1124
let lean_s1126 := by timed congr lean_s1109 lean_s1125
let lean_s1127 := by timed congr lean_s1085 lean_s1126
have lean_s1128 : (Eq (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))) := by timed congr lean_s1083 lean_s1127
have lean_s1129 : (Eq (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Or (Or (Or (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 1))) (Eq x (Int.ofNat 2))) (Eq x (Int.ofNat 3))) (Eq x (Int.ofNat 4))) (Eq x (Int.ofNat 5)))) (Or (Or (Or (Or (Or (Eq y (Int.ofNat 0)) (Eq y (Int.ofNat 1))) (Eq y (Int.ofNat 2))) (Eq y (Int.ofNat 3))) (Eq y (Int.ofNat 4))) (Eq y (Int.ofNat 5)))) (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))))) (Eq z (Sum (Pred (Sum x (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Int.ofNat 1)) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Int.ofNat 1)) (Int.ofNat 5)) Int))) (smtIte (binrel% LT.lt (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (binrel% HSub.hSub (binrel% HAdd.hAdd y (Pred (smtIte (binrel% LT.lt (binrel% HAdd.hAdd x y) (Int.ofNat 5)) (binrel% HAdd.hAdd x y) (binrel% HSub.hSub (binrel% HAdd.hAdd x y) (Int.ofNat 5)) Int))) (Int.ofNat 5)) Int)))) (Not (Eq z (Int.ofNat 0)))) (Not (Eq z (Int.ofNat 1)))) (Not (Eq z (Int.ofNat 2)))) (Not (Eq z (Int.ofNat 3)))) (Not (Eq z (Int.ofNat 4)))) (Not (Eq z (Int.ofNat 5)))) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))))) := by timed Eq.trans lean_s1080 lean_s1128
have lean_s1130 : (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by timed eqResolve lean_a35 lean_s1129
have lean_s1131 : (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) := by andElim lean_s1130, 1
have lean_s1132 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 0))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 0))]
have lean_s1133 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))) :=
  (scope (fun lean_a45 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a46 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a47 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a48 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a49 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
            (scope (fun lean_a50 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
              (scope (fun lean_a51 : (Eq x (Int.ofNat 0)) =>
                (scope (fun lean_a52 : (Eq y (Int.ofNat 0)) =>
                  let lean_s1133 := by timed And.intro lean_a46 lean_a48
                  let lean_s1134 := by timed And.intro lean_a52 lean_s1133
                  let lean_s1135 := by timed And.intro lean_a45 lean_s1134
                  let lean_s1136 := by timed And.intro lean_a51 lean_s1135
                  let lean_s1137 := by timed And.intro lean_a49 lean_s1136
                  let lean_s1138 := by timed And.intro lean_a47 lean_s1137
                  have lean_s1139 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))))))))) := by timed And.intro lean_a50 lean_s1138
                  have lean_s1140 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))) :=
                    (scope (fun lean_a51 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
                      (scope (fun lean_a52 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                        (scope (fun lean_a53 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                          (scope (fun lean_a54 : (Eq x (Int.ofNat 0)) =>
                            (scope (fun lean_a55 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                              (scope (fun lean_a56 : (Eq y (Int.ofNat 0)) =>
                                (scope (fun lean_a57 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                                  (scope (fun lean_a58 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                                    have lean_s1140 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a54
                                    have lean_s1141 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s1140
                                    let lean_s1142 := by timed flipCongrArg lean_s1141 [Sum]
                                    have lean_s1143 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a56
                                    have lean_s1144 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1143
                                    have lean_s1145 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1144 [Succ]
                                    have lean_s1146 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a55
                                    have lean_s1147 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1146
                                    have lean_s1148 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1145 lean_s1147
                                    have lean_s1149 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s1142 lean_s1148
                                    have lean_s1150 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a53
                                    have lean_s1151 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s1150
                                    have lean_s1152 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1149 lean_s1151
                                    have lean_s1153 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1152 [Pred]
                                    have lean_s1154 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a52
                                    have lean_s1155 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1154
                                    have lean_s1156 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1153 lean_s1155
                                    let lean_s1157 := by timed flipCongrArg lean_s1156 [Sum]
                                    let lean_s1158 := by timed flipCongrArg lean_s1144 [Sum]
                                    let lean_s1159 := by timed flipCongrArg lean_s1141 [Sum]
                                    have lean_s1160 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1159 lean_s1144
                                    have lean_s1161 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a58
                                    have lean_s1162 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s1161
                                    have lean_s1163 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s1160 lean_s1162
                                    have lean_s1164 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1163 [Pred]
                                    have lean_s1165 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a57
                                    have lean_s1166 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1165
                                    have lean_s1167 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1164 lean_s1166
                                    have lean_s1168 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s1158 lean_s1167
                                    have lean_s1169 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed Eq.symm lean_a51
                                    have lean_s1170 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by timed Eq.symm lean_s1169
                                    have lean_s1171 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1168 lean_s1170
                                    have lean_s1172 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s1157 lean_s1171
                                    have lean_s1173 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s1172 lean_s1170
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1173
                    ))))))))))))))))
                  have lean_s1141 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1140, 8
                  have lean_s1142 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s1139 lean_s1141
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1142
  ))))))))))))))))
have lean_s1134 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1133, 8
have lean_s1135 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s1134
have lean_s1136 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))))))))) := by R1 lean_s1132, lean_s1135, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 0))))))))), [(- 1), (- 1)]
have lean_s1137 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))))))))))) := by permutateOr lean_s1136, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
have lean_s1138 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by andElim lean_s1130, 8
let lean_s1139 := by R1 lean_s1137, lean_s1138, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
have lean_s1140 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0)))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 0)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 0))]
have lean_s1141 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a51 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a52 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a53 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a54 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
          (scope (fun lean_a55 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
            (scope (fun lean_a56 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
              (scope (fun lean_a57 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
                (scope (fun lean_a58 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a59 : (Eq y (Int.ofNat 0)) =>
                    let lean_s1141 := by timed And.intro lean_a52 lean_a55
                    let lean_s1142 := by timed And.intro lean_a54 lean_s1141
                    let lean_s1143 := by timed And.intro lean_a59 lean_s1142
                    let lean_s1144 := by timed And.intro lean_a51 lean_s1143
                    let lean_s1145 := by timed And.intro lean_a58 lean_s1144
                    let lean_s1146 := by timed And.intro lean_a56 lean_s1145
                    let lean_s1147 := by timed And.intro lean_a53 lean_s1146
                    have lean_s1148 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a57 lean_s1147
                    have lean_s1149 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a54 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
                        (scope (fun lean_a55 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a56 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                            (scope (fun lean_a57 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a58 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                                (scope (fun lean_a59 : (Eq y (Int.ofNat 0)) =>
                                  (scope (fun lean_a60 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a61 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a62 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                                        have lean_s1149 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a57
                                        have lean_s1150 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s1149
                                        let lean_s1151 := by timed flipCongrArg lean_s1150 [Sum]
                                        have lean_s1152 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a59
                                        have lean_s1153 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1152
                                        have lean_s1154 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1153 [Succ]
                                        have lean_s1155 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a58
                                        have lean_s1156 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1155
                                        have lean_s1157 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1154 lean_s1156
                                        have lean_s1158 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s1151 lean_s1157
                                        have lean_s1159 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a56
                                        have lean_s1160 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s1159
                                        have lean_s1161 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1158 lean_s1160
                                        have lean_s1162 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1161 [Pred]
                                        have lean_s1163 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a55
                                        have lean_s1164 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1163
                                        have lean_s1165 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1162 lean_s1164
                                        let lean_s1166 := by timed flipCongrArg lean_s1165 [Sum]
                                        let lean_s1167 := by timed flipCongrArg lean_s1153 [Sum]
                                        let lean_s1168 := by timed flipCongrArg lean_s1150 [Sum]
                                        have lean_s1169 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s1168 lean_s1153
                                        have lean_s1170 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a62
                                        have lean_s1171 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s1170
                                        have lean_s1172 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s1169 lean_s1171
                                        have lean_s1173 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1172 [Pred]
                                        have lean_s1174 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a61
                                        have lean_s1175 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1174
                                        have lean_s1176 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1173 lean_s1175
                                        have lean_s1177 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s1167 lean_s1176
                                        have lean_s1178 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a60
                                        have lean_s1179 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s1178
                                        have lean_s1180 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1177 lean_s1179
                                        have lean_s1181 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s1166 lean_s1180
                                        have lean_s1182 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a54
                                        have lean_s1183 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s1182
                                        have lean_s1184 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s1181 lean_s1183
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1184
                      ))))))))))))))))))
                    have lean_s1150 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1149, 9
                    have lean_s1151 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s1148 lean_s1150
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1151
  ))))))))))))))))))
have lean_s1142 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1141, 9
have lean_s1143 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s1142
have lean_s1144 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s1140, lean_s1143, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 0)))))))))), [(- 1), (- 1)]
have lean_s1145 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s1144, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s1146 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s1147 : (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by andElim lean_s1146, 51
have lean_s1148 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s1149 := by timed flipCongrArg lean_s1148 [Eq]
have lean_s1150 : (Eq (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed rfl
have lean_s1151 : (Eq (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s1149 lean_s1150
have lean_s1152 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) := by timed eqResolve lean_s1147 lean_s1151
have lean_s1153 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s1154 : (Not (Eq z (Int.ofNat 0))) := by andElim lean_s1153, 52
have lean_s1155 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s1156 := by timed flipCongrArg lean_s1155 [Eq]
have lean_s1157 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s1158 : (Eq (Eq z (Int.ofNat 0)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed congr lean_s1156 lean_s1157
have lean_s1159 : (Eq (Not (Eq z (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed flipCongrArg lean_s1158 [Not]
have lean_s1160 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed eqResolve lean_s1154 lean_s1159
have lean_s1161 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s1162 : (Not (Eq z (Int.ofNat 1))) := by andElim lean_s1161, 53
have lean_s1163 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s1164 := by timed flipCongrArg lean_s1163 [Eq]
have lean_s1165 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s1166 : (Eq (Eq z (Int.ofNat 1)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed congr lean_s1164 lean_s1165
have lean_s1167 : (Eq (Not (Eq z (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed flipCongrArg lean_s1166 [Not]
have lean_s1168 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed eqResolve lean_s1162 lean_s1167
have lean_s1169 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s1170 : (Not (Eq z (Int.ofNat 2))) := by andElim lean_s1169, 54
have lean_s1171 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s1172 := by timed flipCongrArg lean_s1171 [Eq]
have lean_s1173 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s1174 : (Eq (Eq z (Int.ofNat 2)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed congr lean_s1172 lean_s1173
have lean_s1175 : (Eq (Not (Eq z (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed flipCongrArg lean_s1174 [Not]
have lean_s1176 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed eqResolve lean_s1170 lean_s1175
have lean_s1177 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s1178 : (Not (Eq z (Int.ofNat 3))) := by andElim lean_s1177, 55
have lean_s1179 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s1180 := by timed flipCongrArg lean_s1179 [Eq]
have lean_s1181 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s1182 : (Eq (Eq z (Int.ofNat 3)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed congr lean_s1180 lean_s1181
have lean_s1183 : (Eq (Not (Eq z (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed flipCongrArg lean_s1182 [Not]
have lean_s1184 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed eqResolve lean_s1178 lean_s1183
have lean_s1185 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s1186 : (Not (Eq z (Int.ofNat 4))) := by andElim lean_s1185, 56
have lean_s1187 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s1188 := by timed flipCongrArg lean_s1187 [Eq]
have lean_s1189 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s1190 : (Eq (Eq z (Int.ofNat 4)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed congr lean_s1188 lean_s1189
have lean_s1191 : (Eq (Not (Eq z (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed flipCongrArg lean_s1190 [Not]
have lean_s1192 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed eqResolve lean_s1186 lean_s1191
have lean_s1193 : (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) (And (Or (Eq y (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 3)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))) (And (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) (And (Eq z (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq z (Int.ofNat 0))) (And (Not (Eq z (Int.ofNat 1))) (And (Not (Eq z (Int.ofNat 2))) (And (Not (Eq z (Int.ofNat 3))) (And (Not (Eq z (Int.ofNat 4))) (Not (Eq z (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_a35 lean_s225
have lean_s1194 : (Not (Eq z (Int.ofNat 5))) := by andElim lean_s1193, 57
have lean_s1195 : (Eq z (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y))))) := by andElim lean_s327, 50
let lean_s1196 := by timed flipCongrArg lean_s1195 [Eq]
have lean_s1197 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s1198 : (Eq (Eq z (Int.ofNat 5)) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed congr lean_s1196 lean_s1197
have lean_s1199 : (Eq (Not (Eq z (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed flipCongrArg lean_s1198 [Not]
have lean_s1200 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed eqResolve lean_s1194 lean_s1199
have lean_s1201 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s645, 0
have lean_s1202 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s643, 1
have lean_s1203 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s641, 2
have lean_s1204 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s639, 3
have lean_s1205 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s637, 4
have lean_s1206 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s635, 5
have lean_s1207 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s633, 6
have lean_s1208 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s631, 7
have lean_s1209 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s629, 8
have lean_s1210 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s627, 9
have lean_s1211 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s625, 10
have lean_s1212 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s623, 11
have lean_s1213 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s621, 12
have lean_s1214 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s619, 13
have lean_s1215 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s617, 14
have lean_s1216 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s615, 15
have lean_s1217 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s613, 16
have lean_s1218 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s611, 17
have lean_s1219 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s609, 18
have lean_s1220 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s607, 19
have lean_s1221 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s605, 20
have lean_s1222 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s603, 21
have lean_s1223 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s601, 22
have lean_s1224 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s599, 23
have lean_s1225 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s597, 24
have lean_s1226 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s595, 25
have lean_s1227 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s593, 26
have lean_s1228 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s591, 27
have lean_s1229 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s589, 28
have lean_s1230 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s587, 29
have lean_s1231 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s585, 30
have lean_s1232 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s583, 31
have lean_s1233 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s581, 32
have lean_s1234 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s579, 33
have lean_s1235 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s577, 34
have lean_s1236 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s575, 35
have lean_s1237 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s573, 36
have lean_s1238 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s571, 37
have lean_s1239 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s569, 38
have lean_s1240 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s567, 39
have lean_s1241 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s565, 40
have lean_s1242 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s563, 41
have lean_s1243 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s561, 42
have lean_s1244 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s559, 43
have lean_s1245 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s557, 44
have lean_s1246 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s555, 45
have lean_s1247 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s553, 46
have lean_s1248 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s551, 47
let lean_s1249 := by timed And.intro lean_s1247 lean_s1248
let lean_s1250 := by timed And.intro lean_s1246 lean_s1249
let lean_s1251 := by timed And.intro lean_s1245 lean_s1250
let lean_s1252 := by timed And.intro lean_s1244 lean_s1251
let lean_s1253 := by timed And.intro lean_s1243 lean_s1252
let lean_s1254 := by timed And.intro lean_s1242 lean_s1253
let lean_s1255 := by timed And.intro lean_s1241 lean_s1254
let lean_s1256 := by timed And.intro lean_s1240 lean_s1255
let lean_s1257 := by timed And.intro lean_s1239 lean_s1256
let lean_s1258 := by timed And.intro lean_s1238 lean_s1257
let lean_s1259 := by timed And.intro lean_s1237 lean_s1258
let lean_s1260 := by timed And.intro lean_s1236 lean_s1259
let lean_s1261 := by timed And.intro lean_s1235 lean_s1260
let lean_s1262 := by timed And.intro lean_s1234 lean_s1261
let lean_s1263 := by timed And.intro lean_s1233 lean_s1262
let lean_s1264 := by timed And.intro lean_s1232 lean_s1263
let lean_s1265 := by timed And.intro lean_s1231 lean_s1264
let lean_s1266 := by timed And.intro lean_s1230 lean_s1265
let lean_s1267 := by timed And.intro lean_s1229 lean_s1266
let lean_s1268 := by timed And.intro lean_s1228 lean_s1267
let lean_s1269 := by timed And.intro lean_s1227 lean_s1268
let lean_s1270 := by timed And.intro lean_s1226 lean_s1269
let lean_s1271 := by timed And.intro lean_s1225 lean_s1270
let lean_s1272 := by timed And.intro lean_s1224 lean_s1271
let lean_s1273 := by timed And.intro lean_s1223 lean_s1272
let lean_s1274 := by timed And.intro lean_s1222 lean_s1273
let lean_s1275 := by timed And.intro lean_s1221 lean_s1274
let lean_s1276 := by timed And.intro lean_s1220 lean_s1275
let lean_s1277 := by timed And.intro lean_s1219 lean_s1276
let lean_s1278 := by timed And.intro lean_s1218 lean_s1277
let lean_s1279 := by timed And.intro lean_s1217 lean_s1278
let lean_s1280 := by timed And.intro lean_s1216 lean_s1279
let lean_s1281 := by timed And.intro lean_s1215 lean_s1280
let lean_s1282 := by timed And.intro lean_s1214 lean_s1281
let lean_s1283 := by timed And.intro lean_s1213 lean_s1282
let lean_s1284 := by timed And.intro lean_s1212 lean_s1283
let lean_s1285 := by timed And.intro lean_s1211 lean_s1284
let lean_s1286 := by timed And.intro lean_s1210 lean_s1285
let lean_s1287 := by timed And.intro lean_s1209 lean_s1286
let lean_s1288 := by timed And.intro lean_s1208 lean_s1287
let lean_s1289 := by timed And.intro lean_s1207 lean_s1288
let lean_s1290 := by timed And.intro lean_s1206 lean_s1289
let lean_s1291 := by timed And.intro lean_s1205 lean_s1290
let lean_s1292 := by timed And.intro lean_s1204 lean_s1291
let lean_s1293 := by timed And.intro lean_s1203 lean_s1292
let lean_s1294 := by timed And.intro lean_s1202 lean_s1293
let lean_s1295 := by timed And.intro lean_s1201 lean_s1294
let lean_s1296 := by timed And.intro lean_s1200 lean_s1295
let lean_s1297 := by timed And.intro lean_s1192 lean_s1296
let lean_s1298 := by timed And.intro lean_s1184 lean_s1297
let lean_s1299 := by timed And.intro lean_s1176 lean_s1298
let lean_s1300 := by timed And.intro lean_s1168 lean_s1299
let lean_s1301 := by timed And.intro lean_s1160 lean_s1300
have lean_s1302 : (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed And.intro lean_s1152 lean_s1301
have lean_s1303 : (Eq And And) := by timed rfl
let lean_s1304 := by timed flipCongrArg lean_s1086 [Eq]
have lean_s1305 : (Eq (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int)))) := by timed congr lean_s1304 lean_s1107
let lean_s1306 := by timed congr lean_s1303 lean_s1305
have lean_s1307 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)))) := by timed rfl
let lean_s1308 := by timed congr lean_s1303 lean_s1307
have lean_s1309 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))) := by timed rfl
let lean_s1310 := by timed congr lean_s1303 lean_s1309
have lean_s1311 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)))) := by timed rfl
let lean_s1312 := by timed congr lean_s1303 lean_s1311
have lean_s1313 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))) := by timed rfl
let lean_s1314 := by timed congr lean_s1303 lean_s1313
have lean_s1315 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))) := by timed rfl
let lean_s1316 := by timed congr lean_s1303 lean_s1315
have lean_s1317 : (Eq (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)))) := by timed rfl
let lean_s1318 := by timed congr lean_s1303 lean_s1317
have lean_s1319 : (Eq (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s1320 := by timed congr lean_s1303 lean_s1319
have lean_s1321 : (Eq (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s1322 := by timed congr lean_s1303 lean_s1321
have lean_s1323 : (Eq (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s1324 := by timed congr lean_s1303 lean_s1323
have lean_s1325 : (Eq (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s1326 := by timed congr lean_s1303 lean_s1325
have lean_s1327 : (Eq (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s1328 := by timed congr lean_s1303 lean_s1327
have lean_s1329 : (Eq (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s1330 := by timed congr lean_s1303 lean_s1329
have lean_s1331 : (Eq (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s1332 := by timed congr lean_s1303 lean_s1331
have lean_s1333 : (Eq (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s1334 := by timed congr lean_s1303 lean_s1333
have lean_s1335 : (Eq (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s1336 := by timed congr lean_s1303 lean_s1335
have lean_s1337 : (Eq (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s1338 := by timed congr lean_s1303 lean_s1337
have lean_s1339 : (Eq (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s1340 := by timed congr lean_s1303 lean_s1339
have lean_s1341 : (Eq (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s1342 := by timed congr lean_s1303 lean_s1341
have lean_s1343 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
let lean_s1344 := by timed congr lean_s1303 lean_s1343
have lean_s1345 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) := by timed rfl
let lean_s1346 := by timed congr lean_s1303 lean_s1345
have lean_s1347 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) := by timed rfl
let lean_s1348 := by timed congr lean_s1303 lean_s1347
have lean_s1349 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s1350 := by timed congr lean_s1303 lean_s1349
have lean_s1351 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s1352 := by timed congr lean_s1303 lean_s1351
have lean_s1353 : (Eq (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s1354 := by timed congr lean_s1303 lean_s1353
have lean_s1355 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
let lean_s1356 := by timed congr lean_s1303 lean_s1355
have lean_s1357 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) := by timed rfl
let lean_s1358 := by timed congr lean_s1303 lean_s1357
have lean_s1359 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s1360 := by timed congr lean_s1303 lean_s1359
have lean_s1361 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s1362 := by timed congr lean_s1303 lean_s1361
have lean_s1363 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s1364 := by timed congr lean_s1303 lean_s1363
have lean_s1365 : (Eq (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) := by timed rfl
let lean_s1366 := by timed congr lean_s1303 lean_s1365
have lean_s1367 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) := by timed rfl
let lean_s1368 := by timed congr lean_s1303 lean_s1367
have lean_s1369 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s1370 := by timed congr lean_s1303 lean_s1369
have lean_s1371 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s1372 := by timed congr lean_s1303 lean_s1371
have lean_s1373 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s1374 := by timed congr lean_s1303 lean_s1373
have lean_s1375 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) := by timed rfl
let lean_s1376 := by timed congr lean_s1303 lean_s1375
have lean_s1377 : (Eq (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) := by timed rfl
let lean_s1378 := by timed congr lean_s1303 lean_s1377
have lean_s1379 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s1380 := by timed congr lean_s1303 lean_s1379
have lean_s1381 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s1382 := by timed congr lean_s1303 lean_s1381
have lean_s1383 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s1384 := by timed congr lean_s1303 lean_s1383
have lean_s1385 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) := by timed rfl
let lean_s1386 := by timed congr lean_s1303 lean_s1385
have lean_s1387 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) := by timed rfl
let lean_s1388 := by timed congr lean_s1303 lean_s1387
have lean_s1389 : (Eq (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) := by timed rfl
let lean_s1390 := by timed congr lean_s1303 lean_s1389
have lean_s1391 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s1392 := by timed congr lean_s1303 lean_s1391
have lean_s1393 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s1394 := by timed congr lean_s1303 lean_s1393
have lean_s1395 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) := by timed rfl
let lean_s1396 := by timed congr lean_s1303 lean_s1395
have lean_s1397 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) := by timed rfl
let lean_s1398 := by timed congr lean_s1303 lean_s1397
have lean_s1399 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) := by timed rfl
let lean_s1400 := by timed congr lean_s1303 lean_s1399
have lean_s1401 : (Eq (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s1402 := by timed congr lean_s1303 lean_s1401
have lean_s1403 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s1404 := by timed congr lean_s1303 lean_s1403
have lean_s1405 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) := by timed rfl
let lean_s1406 := by timed congr lean_s1303 lean_s1405
have lean_s1407 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) := by timed rfl
let lean_s1408 := by timed congr lean_s1303 lean_s1407
have lean_s1409 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) := by timed rfl
let lean_s1410 := by timed congr lean_s1303 lean_s1409
have lean_s1411 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s1412 := by timed congr lean_s1303 lean_s1411
have lean_s1413 : (Eq (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s1414 := by timed congr lean_s1412 lean_s1413
let lean_s1415 := by timed congr lean_s1410 lean_s1414
let lean_s1416 := by timed congr lean_s1408 lean_s1415
let lean_s1417 := by timed congr lean_s1406 lean_s1416
let lean_s1418 := by timed congr lean_s1404 lean_s1417
let lean_s1419 := by timed congr lean_s1402 lean_s1418
let lean_s1420 := by timed congr lean_s1400 lean_s1419
let lean_s1421 := by timed congr lean_s1398 lean_s1420
let lean_s1422 := by timed congr lean_s1396 lean_s1421
let lean_s1423 := by timed congr lean_s1394 lean_s1422
let lean_s1424 := by timed congr lean_s1392 lean_s1423
let lean_s1425 := by timed congr lean_s1390 lean_s1424
let lean_s1426 := by timed congr lean_s1388 lean_s1425
let lean_s1427 := by timed congr lean_s1386 lean_s1426
let lean_s1428 := by timed congr lean_s1384 lean_s1427
let lean_s1429 := by timed congr lean_s1382 lean_s1428
let lean_s1430 := by timed congr lean_s1380 lean_s1429
let lean_s1431 := by timed congr lean_s1378 lean_s1430
let lean_s1432 := by timed congr lean_s1376 lean_s1431
let lean_s1433 := by timed congr lean_s1374 lean_s1432
let lean_s1434 := by timed congr lean_s1372 lean_s1433
let lean_s1435 := by timed congr lean_s1370 lean_s1434
let lean_s1436 := by timed congr lean_s1368 lean_s1435
let lean_s1437 := by timed congr lean_s1366 lean_s1436
let lean_s1438 := by timed congr lean_s1364 lean_s1437
let lean_s1439 := by timed congr lean_s1362 lean_s1438
let lean_s1440 := by timed congr lean_s1360 lean_s1439
let lean_s1441 := by timed congr lean_s1358 lean_s1440
let lean_s1442 := by timed congr lean_s1356 lean_s1441
let lean_s1443 := by timed congr lean_s1354 lean_s1442
let lean_s1444 := by timed congr lean_s1352 lean_s1443
let lean_s1445 := by timed congr lean_s1350 lean_s1444
let lean_s1446 := by timed congr lean_s1348 lean_s1445
let lean_s1447 := by timed congr lean_s1346 lean_s1446
let lean_s1448 := by timed congr lean_s1344 lean_s1447
let lean_s1449 := by timed congr lean_s1342 lean_s1448
let lean_s1450 := by timed congr lean_s1340 lean_s1449
let lean_s1451 := by timed congr lean_s1338 lean_s1450
let lean_s1452 := by timed congr lean_s1336 lean_s1451
let lean_s1453 := by timed congr lean_s1334 lean_s1452
let lean_s1454 := by timed congr lean_s1332 lean_s1453
let lean_s1455 := by timed congr lean_s1330 lean_s1454
let lean_s1456 := by timed congr lean_s1328 lean_s1455
let lean_s1457 := by timed congr lean_s1326 lean_s1456
let lean_s1458 := by timed congr lean_s1324 lean_s1457
let lean_s1459 := by timed congr lean_s1322 lean_s1458
let lean_s1460 := by timed congr lean_s1320 lean_s1459
let lean_s1461 := by timed congr lean_s1318 lean_s1460
let lean_s1462 := by timed congr lean_s1316 lean_s1461
let lean_s1463 := by timed congr lean_s1314 lean_s1462
let lean_s1464 := by timed congr lean_s1312 lean_s1463
let lean_s1465 := by timed congr lean_s1310 lean_s1464
let lean_s1466 := by timed congr lean_s1308 lean_s1465
have lean_s1467 : (Eq (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s1306 lean_s1466
have lean_s1468 : (And (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Pred (Sum x (smtIte (binrel% GE.ge y (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) y) (binrel% HAdd.hAdd (Int.ofNat 1) y) Int))) (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int)))) (binrel% HAdd.hAdd y (Pred (smtIte (binrel% GE.ge (binrel% HAdd.hAdd y x) (Int.ofNat 5)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) (binrel% HAdd.hAdd y x)) (binrel% HAdd.hAdd y x) Int))) Int))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) (And (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed eqResolve lean_s1302 lean_s1467
have lean_s1469 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by andElim lean_s1468, 46
let lean_s1470 := by R2 lean_s1145, lean_s1469, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1471 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by andElim lean_s1468, 44
let lean_s1472 := by R2 lean_s1470, lean_s1471, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1473 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by andElim lean_s1468, 43
let lean_s1474 := by R2 lean_s1472, lean_s1473, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1475 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by andElim lean_s1468, 22
let lean_s1476 := by R2 lean_s1474, lean_s1475, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1477 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s1468, 18
let lean_s1478 := by R2 lean_s1476, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1479 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s1468, 17
let lean_s1480 := by R2 lean_s1478, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1481 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s1468, 7
let lean_s1482 := by R2 lean_s1480, lean_s1481, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1483 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by andElim lean_s1130, 4
let lean_s1484 := by R1 lean_s1482, lean_s1483, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
let lean_s1485 := by R2 lean_s1484, lean_s1131, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1486 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 3))]
have lean_s1487 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a54 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a55 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a56 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a57 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
          (scope (fun lean_a58 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
            (scope (fun lean_a59 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
              (scope (fun lean_a60 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
                (scope (fun lean_a61 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a62 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1487 := by timed And.intro lean_a55 lean_a59
                    let lean_s1488 := by timed And.intro lean_a58 lean_s1487
                    let lean_s1489 := by timed And.intro lean_a62 lean_s1488
                    let lean_s1490 := by timed And.intro lean_a54 lean_s1489
                    let lean_s1491 := by timed And.intro lean_a61 lean_s1490
                    let lean_s1492 := by timed And.intro lean_a60 lean_s1491
                    let lean_s1493 := by timed And.intro lean_a56 lean_s1492
                    have lean_s1494 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a57 lean_s1493
                    have lean_s1495 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a60 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                        (scope (fun lean_a61 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a62 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
                            (scope (fun lean_a63 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a64 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a65 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a66 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a67 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a68 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
                                        have lean_s1495 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a63
                                        have lean_s1496 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s1495
                                        let lean_s1497 := by timed flipCongrArg lean_s1496 [Sum]
                                        have lean_s1498 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a65
                                        have lean_s1499 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1498
                                        have lean_s1500 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1499 [Succ]
                                        have lean_s1501 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a64
                                        have lean_s1502 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1501
                                        have lean_s1503 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1500 lean_s1502
                                        have lean_s1504 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1497 lean_s1503
                                        have lean_s1505 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a62
                                        have lean_s1506 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s1505
                                        have lean_s1507 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1504 lean_s1506
                                        have lean_s1508 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1507 [Pred]
                                        have lean_s1509 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a61
                                        have lean_s1510 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1509
                                        have lean_s1511 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1508 lean_s1510
                                        let lean_s1512 := by timed flipCongrArg lean_s1511 [Sum]
                                        let lean_s1513 := by timed flipCongrArg lean_s1499 [Sum]
                                        let lean_s1514 := by timed flipCongrArg lean_s1496 [Sum]
                                        have lean_s1515 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s1514 lean_s1499
                                        have lean_s1516 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a68
                                        have lean_s1517 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s1516
                                        have lean_s1518 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s1515 lean_s1517
                                        have lean_s1519 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1518 [Pred]
                                        have lean_s1520 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a67
                                        have lean_s1521 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1520
                                        have lean_s1522 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1519 lean_s1521
                                        have lean_s1523 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s1513 lean_s1522
                                        have lean_s1524 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a66
                                        have lean_s1525 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s1524
                                        have lean_s1526 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1523 lean_s1525
                                        have lean_s1527 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s1512 lean_s1526
                                        have lean_s1528 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a60
                                        have lean_s1529 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1528
                                        have lean_s1530 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1527 lean_s1529
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1530
                      ))))))))))))))))))
                    have lean_s1496 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1495, 9
                    have lean_s1497 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1494 lean_s1496
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1497
  ))))))))))))))))))
have lean_s1488 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1487, 9
have lean_s1489 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1488
have lean_s1490 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s1486, lean_s1489, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1491 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s1490, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1492 := by R1 lean_s1485, lean_s1491, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1493 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by andElim lean_s1468, 47
let lean_s1494 := by R2 lean_s1492, lean_s1493, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1495 := by R2 lean_s1494, lean_s1469, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1496 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by andElim lean_s1468, 37
let lean_s1497 := by R2 lean_s1495, lean_s1496, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1498 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s1468, 28
let lean_s1499 := by R2 lean_s1497, lean_s1498, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1500 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s1468, 15
let lean_s1501 := by R2 lean_s1499, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1502 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s1468, 14
let lean_s1503 := by R2 lean_s1501, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1504 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by andElim lean_s1468, 10
let lean_s1505 := by R2 lean_s1503, lean_s1504, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1506 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by andElim lean_s1130, 7
have lean_s1507 : (Or (Not (Eq x (Int.ofNat 4))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Not (Eq x (Int.ofNat 4)))))))) := by R1 lean_s1505, lean_s1506, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s1508 : (Or (Not (Eq x (Int.ofNat 4))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))) := by factor lean_s1507, 5
have lean_s1509 : (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 1)) (Or (Eq x (Int.ofNat 2)) (Or (Eq x (Int.ofNat 3)) (Or (Eq x (Int.ofNat 4)) (Eq x (Int.ofNat 5))))))) := by andElim lean_s1130, 0
let lean_s1510 := by R2 lean_s1508, lean_s1509, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s1511 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 3))]
have lean_s1512 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a60 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a61 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a62 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a63 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
          (scope (fun lean_a64 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
            (scope (fun lean_a65 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
              (scope (fun lean_a66 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                (scope (fun lean_a67 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a68 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1512 := by timed And.intro lean_a61 lean_a63
                    let lean_s1513 := by timed And.intro lean_a65 lean_s1512
                    let lean_s1514 := by timed And.intro lean_a68 lean_s1513
                    let lean_s1515 := by timed And.intro lean_a60 lean_s1514
                    let lean_s1516 := by timed And.intro lean_a67 lean_s1515
                    let lean_s1517 := by timed And.intro lean_a64 lean_s1516
                    let lean_s1518 := by timed And.intro lean_a62 lean_s1517
                    have lean_s1519 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a66 lean_s1518
                    have lean_s1520 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a63 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                        (scope (fun lean_a64 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a65 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                            (scope (fun lean_a66 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a67 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a68 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a69 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a70 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a71 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                                        have lean_s1520 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a66
                                        have lean_s1521 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1520
                                        let lean_s1522 := by timed flipCongrArg lean_s1521 [Sum]
                                        have lean_s1523 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a68
                                        have lean_s1524 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1523
                                        have lean_s1525 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1524 [Succ]
                                        have lean_s1526 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a67
                                        have lean_s1527 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1526
                                        have lean_s1528 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1525 lean_s1527
                                        have lean_s1529 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s1522 lean_s1528
                                        have lean_s1530 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a65
                                        have lean_s1531 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1530
                                        have lean_s1532 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1529 lean_s1531
                                        have lean_s1533 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1532 [Pred]
                                        have lean_s1534 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a64
                                        have lean_s1535 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1534
                                        have lean_s1536 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1533 lean_s1535
                                        let lean_s1537 := by timed flipCongrArg lean_s1536 [Sum]
                                        let lean_s1538 := by timed flipCongrArg lean_s1524 [Sum]
                                        let lean_s1539 := by timed flipCongrArg lean_s1521 [Sum]
                                        have lean_s1540 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s1539 lean_s1524
                                        have lean_s1541 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a71
                                        have lean_s1542 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1541
                                        have lean_s1543 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s1540 lean_s1542
                                        have lean_s1544 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1543 [Pred]
                                        have lean_s1545 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a70
                                        have lean_s1546 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1545
                                        have lean_s1547 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1544 lean_s1546
                                        have lean_s1548 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1538 lean_s1547
                                        have lean_s1549 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a69
                                        have lean_s1550 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s1549
                                        have lean_s1551 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1548 lean_s1550
                                        have lean_s1552 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s1537 lean_s1551
                                        have lean_s1553 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a63
                                        have lean_s1554 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s1553
                                        have lean_s1555 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1552 lean_s1554
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1555
                      ))))))))))))))))))
                    have lean_s1521 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1520, 9
                    have lean_s1522 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1519 lean_s1521
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1522
  ))))))))))))))))))
have lean_s1513 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1512, 9
have lean_s1514 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1513
have lean_s1515 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s1511, lean_s1514, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1516 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s1515, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1517 := by R2 lean_s1516, lean_s1473, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1518 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by andElim lean_s1468, 40
let lean_s1519 := by R2 lean_s1517, lean_s1518, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1520 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s1468, 29
let lean_s1521 := by R2 lean_s1519, lean_s1520, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1522 := by R2 lean_s1521, lean_s1498, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1523 := by R2 lean_s1522, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1524 := by R2 lean_s1523, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1525 := by R2 lean_s1524, lean_s1504, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1526 := by R1 lean_s1525, lean_s1506, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
let lean_s1527 := by R2 lean_s1526, lean_s1131, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1528 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 0))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 0))]
have lean_s1529 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))))))))) :=
  (scope (fun lean_a63 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a64 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a65 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a66 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a67 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
            (scope (fun lean_a68 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
              (scope (fun lean_a69 : (Eq x (Int.ofNat 1)) =>
                (scope (fun lean_a70 : (Eq y (Int.ofNat 0)) =>
                  let lean_s1529 := by timed And.intro lean_a66 lean_a64
                  let lean_s1530 := by timed And.intro lean_a70 lean_s1529
                  let lean_s1531 := by timed And.intro lean_a63 lean_s1530
                  let lean_s1532 := by timed And.intro lean_a69 lean_s1531
                  let lean_s1533 := by timed And.intro lean_a68 lean_s1532
                  let lean_s1534 := by timed And.intro lean_a65 lean_s1533
                  have lean_s1535 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))))))))) := by timed And.intro lean_a67 lean_s1534
                  have lean_s1536 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))))))))) :=
                    (scope (fun lean_a65 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
                      (scope (fun lean_a66 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                        (scope (fun lean_a67 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                          (scope (fun lean_a68 : (Eq x (Int.ofNat 1)) =>
                            (scope (fun lean_a69 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                              (scope (fun lean_a70 : (Eq y (Int.ofNat 0)) =>
                                (scope (fun lean_a71 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                                  (scope (fun lean_a72 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                    have lean_s1536 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a68
                                    have lean_s1537 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1536
                                    let lean_s1538 := by timed flipCongrArg lean_s1537 [Sum]
                                    have lean_s1539 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a70
                                    have lean_s1540 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1539
                                    have lean_s1541 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1540 [Succ]
                                    have lean_s1542 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a69
                                    have lean_s1543 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1542
                                    have lean_s1544 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1541 lean_s1543
                                    have lean_s1545 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1538 lean_s1544
                                    have lean_s1546 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed Eq.symm lean_a67
                                    have lean_s1547 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1546
                                    have lean_s1548 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1545 lean_s1547
                                    have lean_s1549 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1548 [Pred]
                                    have lean_s1550 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a66
                                    have lean_s1551 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1550
                                    have lean_s1552 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1549 lean_s1551
                                    let lean_s1553 := by timed flipCongrArg lean_s1552 [Sum]
                                    let lean_s1554 := by timed flipCongrArg lean_s1540 [Sum]
                                    let lean_s1555 := by timed flipCongrArg lean_s1537 [Sum]
                                    have lean_s1556 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s1555 lean_s1540
                                    have lean_s1557 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed Eq.symm lean_a65
                                    have lean_s1558 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1557
                                    have lean_s1559 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s1556 lean_s1558
                                    have lean_s1560 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1559 [Pred]
                                    have lean_s1561 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a72
                                    have lean_s1562 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1561
                                    have lean_s1563 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1560 lean_s1562
                                    have lean_s1564 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1554 lean_s1563
                                    have lean_s1565 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a71
                                    have lean_s1566 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s1565
                                    have lean_s1567 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1564 lean_s1566
                                    have lean_s1568 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s1553 lean_s1567
                                    have lean_s1569 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s1568 lean_s1558
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1569
                    ))))))))))))))))
                  have lean_s1537 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1536, 8
                  have lean_s1538 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s1535 lean_s1537
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1538
  ))))))))))))))))
have lean_s1530 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1529, 8
have lean_s1531 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s1530
have lean_s1532 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)))))))))) := by R1 lean_s1528, lean_s1531, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 0))))))))), [(- 1), (- 1)]
have lean_s1533 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))))))))))) := by permutateOr lean_s1532, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
let lean_s1534 := by R1 lean_s1527, lean_s1533, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1535 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s1468, 26
let lean_s1536 := by R2 lean_s1534, lean_s1535, (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1537 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by andElim lean_s1468, 25
let lean_s1538 := by R2 lean_s1536, lean_s1537, (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1539 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by andElim lean_s1468, 19
let lean_s1540 := by R2 lean_s1538, lean_s1539, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1541 := by R2 lean_s1540, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1542 := by R2 lean_s1541, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1543 := by R2 lean_s1542, lean_s1481, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1544 : (Or (Not (Eq x (Int.ofNat 1))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Not (Eq x (Int.ofNat 1)))))))) := by R1 lean_s1543, lean_s1483, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s1545 : (Or (Not (Eq x (Int.ofNat 1))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))) := by factor lean_s1544, 5
have lean_s1546 : (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Not (Eq x (Int.ofNat 1))))))) := by permutateOr lean_s1545, [1, 2, 3, 4, 0], (- 1)
let lean_s1547 := by R1 lean_s1510, lean_s1546, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1548 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 2))]
have lean_s1549 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a65 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a66 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a67 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a68 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
          (scope (fun lean_a69 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
            (scope (fun lean_a70 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
              (scope (fun lean_a71 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                (scope (fun lean_a72 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a73 : (Eq y (Int.ofNat 2)) =>
                    let lean_s1549 := by timed And.intro lean_a67 lean_a69
                    let lean_s1550 := by timed And.intro lean_a68 lean_s1549
                    let lean_s1551 := by timed And.intro lean_a73 lean_s1550
                    let lean_s1552 := by timed And.intro lean_a65 lean_s1551
                    let lean_s1553 := by timed And.intro lean_a72 lean_s1552
                    let lean_s1554 := by timed And.intro lean_a70 lean_s1553
                    let lean_s1555 := by timed And.intro lean_a66 lean_s1554
                    have lean_s1556 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a71 lean_s1555
                    have lean_s1557 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a71 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                        (scope (fun lean_a72 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                          (scope (fun lean_a73 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
                            (scope (fun lean_a74 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a75 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a76 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a77 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a78 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a79 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                                        have lean_s1557 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a74
                                        have lean_s1558 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s1557
                                        let lean_s1559 := by timed flipCongrArg lean_s1558 [Sum]
                                        have lean_s1560 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a76
                                        have lean_s1561 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s1560
                                        have lean_s1562 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s1561 [Succ]
                                        have lean_s1563 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a75
                                        have lean_s1564 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1563
                                        have lean_s1565 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s1562 lean_s1564
                                        have lean_s1566 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1559 lean_s1565
                                        have lean_s1567 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a73
                                        have lean_s1568 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s1567
                                        have lean_s1569 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1566 lean_s1568
                                        have lean_s1570 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1569 [Pred]
                                        have lean_s1571 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a72
                                        have lean_s1572 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1571
                                        have lean_s1573 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1570 lean_s1572
                                        let lean_s1574 := by timed flipCongrArg lean_s1573 [Sum]
                                        let lean_s1575 := by timed flipCongrArg lean_s1561 [Sum]
                                        let lean_s1576 := by timed flipCongrArg lean_s1558 [Sum]
                                        have lean_s1577 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s1576 lean_s1561
                                        have lean_s1578 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a79
                                        have lean_s1579 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s1578
                                        have lean_s1580 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s1577 lean_s1579
                                        have lean_s1581 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1580 [Pred]
                                        have lean_s1582 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a78
                                        have lean_s1583 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1582
                                        have lean_s1584 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1581 lean_s1583
                                        have lean_s1585 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s1575 lean_s1584
                                        have lean_s1586 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a77
                                        have lean_s1587 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s1586
                                        have lean_s1588 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1585 lean_s1587
                                        have lean_s1589 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s1574 lean_s1588
                                        have lean_s1590 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a71
                                        have lean_s1591 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1590
                                        have lean_s1592 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s1589 lean_s1591
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1592
                      ))))))))))))))))))
                    have lean_s1558 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1557, 9
                    have lean_s1559 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s1556 lean_s1558
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1559
  ))))))))))))))))))
have lean_s1550 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1549, 9
have lean_s1551 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s1550
have lean_s1552 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s1548, lean_s1551, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s1553 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s1552, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s1554 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s1468, 49
let lean_s1555 := by R2 lean_s1553, lean_s1554, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1556 := by R2 lean_s1555, lean_s1518, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1557 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by andElim lean_s1468, 39
let lean_s1558 := by R2 lean_s1556, lean_s1557, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1559 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by andElim lean_s1468, 35
let lean_s1560 := by R2 lean_s1558, lean_s1559, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1561 := by R2 lean_s1560, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1562 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by andElim lean_s1468, 13
let lean_s1563 := by R2 lean_s1561, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1564 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s1468, 9
let lean_s1565 := by R2 lean_s1563, lean_s1564, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1566 := by R1 lean_s1565, lean_s1138, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
let lean_s1567 := by R2 lean_s1566, lean_s1131, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s1568 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0)))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 0)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 0))]
have lean_s1569 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a71 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a72 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a73 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a74 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
          (scope (fun lean_a75 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
            (scope (fun lean_a76 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
              (scope (fun lean_a77 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                (scope (fun lean_a78 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a79 : (Eq y (Int.ofNat 0)) =>
                    let lean_s1569 := by timed And.intro lean_a72 lean_a75
                    let lean_s1570 := by timed And.intro lean_a74 lean_s1569
                    let lean_s1571 := by timed And.intro lean_a79 lean_s1570
                    let lean_s1572 := by timed And.intro lean_a71 lean_s1571
                    let lean_s1573 := by timed And.intro lean_a78 lean_s1572
                    let lean_s1574 := by timed And.intro lean_a76 lean_s1573
                    let lean_s1575 := by timed And.intro lean_a73 lean_s1574
                    have lean_s1576 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a77 lean_s1575
                    have lean_s1577 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a74 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                        (scope (fun lean_a75 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a76 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                            (scope (fun lean_a77 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a78 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                                (scope (fun lean_a79 : (Eq y (Int.ofNat 0)) =>
                                  (scope (fun lean_a80 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a81 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a82 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                                        have lean_s1577 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a77
                                        have lean_s1578 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s1577
                                        let lean_s1579 := by timed flipCongrArg lean_s1578 [Sum]
                                        have lean_s1580 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a79
                                        have lean_s1581 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1580
                                        have lean_s1582 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1581 [Succ]
                                        have lean_s1583 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a78
                                        have lean_s1584 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1583
                                        have lean_s1585 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1582 lean_s1584
                                        have lean_s1586 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s1579 lean_s1585
                                        have lean_s1587 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a76
                                        have lean_s1588 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s1587
                                        have lean_s1589 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1586 lean_s1588
                                        have lean_s1590 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1589 [Pred]
                                        have lean_s1591 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a75
                                        have lean_s1592 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1591
                                        have lean_s1593 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1590 lean_s1592
                                        let lean_s1594 := by timed flipCongrArg lean_s1593 [Sum]
                                        let lean_s1595 := by timed flipCongrArg lean_s1581 [Sum]
                                        let lean_s1596 := by timed flipCongrArg lean_s1578 [Sum]
                                        have lean_s1597 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s1596 lean_s1581
                                        have lean_s1598 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a82
                                        have lean_s1599 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s1598
                                        have lean_s1600 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s1597 lean_s1599
                                        have lean_s1601 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1600 [Pred]
                                        have lean_s1602 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a81
                                        have lean_s1603 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1602
                                        have lean_s1604 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1601 lean_s1603
                                        have lean_s1605 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s1595 lean_s1604
                                        have lean_s1606 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a80
                                        have lean_s1607 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s1606
                                        have lean_s1608 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1605 lean_s1607
                                        have lean_s1609 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s1594 lean_s1608
                                        have lean_s1610 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a74
                                        have lean_s1611 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s1610
                                        have lean_s1612 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s1609 lean_s1611
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1612
                      ))))))))))))))))))
                    have lean_s1578 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1577, 9
                    have lean_s1579 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s1576 lean_s1578
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1579
  ))))))))))))))))))
have lean_s1570 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1569, 9
have lean_s1571 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s1570
have lean_s1572 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s1568, lean_s1571, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 0)))))))))), [(- 1), (- 1)]
have lean_s1573 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s1572, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1574 := by R1 lean_s1567, lean_s1573, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s1575 := by R2 lean_s1574, lean_s1557, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1576 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by andElim lean_s1468, 38
let lean_s1577 := by R2 lean_s1575, lean_s1576, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1578 := by R2 lean_s1577, lean_s1496, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1579 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by andElim lean_s1468, 21
let lean_s1580 := by R2 lean_s1578, lean_s1579, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1581 := by R2 lean_s1580, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1582 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s1468, 16
let lean_s1583 := by R2 lean_s1581, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1584 := by R2 lean_s1583, lean_s1481, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1585 := by R1 lean_s1584, lean_s1138, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
have lean_s1586 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 3))]
have lean_s1587 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a74 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a75 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a76 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a77 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
          (scope (fun lean_a78 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
            (scope (fun lean_a79 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
              (scope (fun lean_a80 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
                (scope (fun lean_a81 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a82 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1587 := by timed And.intro lean_a75 lean_a78
                    let lean_s1588 := by timed And.intro lean_a80 lean_s1587
                    let lean_s1589 := by timed And.intro lean_a82 lean_s1588
                    let lean_s1590 := by timed And.intro lean_a74 lean_s1589
                    let lean_s1591 := by timed And.intro lean_a81 lean_s1590
                    let lean_s1592 := by timed And.intro lean_a79 lean_s1591
                    let lean_s1593 := by timed And.intro lean_a76 lean_s1592
                    have lean_s1594 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a77 lean_s1593
                    have lean_s1595 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a76 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                        (scope (fun lean_a77 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a78 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
                            (scope (fun lean_a79 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a80 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a81 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a82 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a83 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a84 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
                                        have lean_s1595 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a79
                                        have lean_s1596 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s1595
                                        let lean_s1597 := by timed flipCongrArg lean_s1596 [Sum]
                                        have lean_s1598 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a81
                                        have lean_s1599 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1598
                                        have lean_s1600 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1599 [Succ]
                                        have lean_s1601 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a80
                                        have lean_s1602 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1601
                                        have lean_s1603 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1600 lean_s1602
                                        have lean_s1604 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s1597 lean_s1603
                                        have lean_s1605 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a78
                                        have lean_s1606 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s1605
                                        have lean_s1607 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1604 lean_s1606
                                        have lean_s1608 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1607 [Pred]
                                        have lean_s1609 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a77
                                        have lean_s1610 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1609
                                        have lean_s1611 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1608 lean_s1610
                                        let lean_s1612 := by timed flipCongrArg lean_s1611 [Sum]
                                        let lean_s1613 := by timed flipCongrArg lean_s1599 [Sum]
                                        let lean_s1614 := by timed flipCongrArg lean_s1596 [Sum]
                                        have lean_s1615 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1614 lean_s1599
                                        have lean_s1616 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a84
                                        have lean_s1617 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s1616
                                        have lean_s1618 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s1615 lean_s1617
                                        have lean_s1619 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1618 [Pred]
                                        have lean_s1620 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a83
                                        have lean_s1621 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1620
                                        have lean_s1622 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1619 lean_s1621
                                        have lean_s1623 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s1613 lean_s1622
                                        have lean_s1624 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a82
                                        have lean_s1625 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s1624
                                        have lean_s1626 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1623 lean_s1625
                                        have lean_s1627 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s1612 lean_s1626
                                        have lean_s1628 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a76
                                        have lean_s1629 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s1628
                                        have lean_s1630 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s1627 lean_s1629
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1630
                      ))))))))))))))))))
                    have lean_s1596 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1595, 9
                    have lean_s1597 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s1594 lean_s1596
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1597
  ))))))))))))))))))
have lean_s1588 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1587, 9
have lean_s1589 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s1588
have lean_s1590 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s1586, lean_s1589, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1591 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s1590, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1592 := by R1 lean_s1585, lean_s1591, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1593 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by andElim lean_s1468, 42
let lean_s1594 := by R2 lean_s1592, lean_s1593, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1595 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by andElim lean_s1468, 41
let lean_s1596 := by R2 lean_s1594, lean_s1595, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1597 := by R2 lean_s1596, lean_s1518, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1598 := by R2 lean_s1597, lean_s1579, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1599 := by R2 lean_s1598, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1600 := by R2 lean_s1599, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1601 := by R2 lean_s1600, lean_s1504, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1602 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by andElim lean_s1130, 5
have lean_s1603 : (Or (Not (Eq x (Int.ofNat 3))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq x (Int.ofNat 3)))))))) := by R1 lean_s1601, lean_s1602, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s1604 : (Or (Not (Eq x (Int.ofNat 3))) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))) := by factor lean_s1603, 5
have lean_s1605 : (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Not (Eq x (Int.ofNat 3)))))) := by permutateOr lean_s1604, [1, 2, 3, 0], (- 1)
let lean_s1606 := by R1 lean_s1547, lean_s1605, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1607 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 1))]
have lean_s1608 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a76 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a77 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a78 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a79 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a80 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
            (scope (fun lean_a81 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
              (scope (fun lean_a82 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
                (scope (fun lean_a83 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a84 : (Eq y (Int.ofNat 1)) =>
                    let lean_s1608 := by timed And.intro lean_a77 lean_a81
                    let lean_s1609 := by timed And.intro lean_a80 lean_s1608
                    let lean_s1610 := by timed And.intro lean_a84 lean_s1609
                    let lean_s1611 := by timed And.intro lean_a76 lean_s1610
                    let lean_s1612 := by timed And.intro lean_a83 lean_s1611
                    let lean_s1613 := by timed And.intro lean_a82 lean_s1612
                    let lean_s1614 := by timed And.intro lean_a78 lean_s1613
                    have lean_s1615 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a79 lean_s1614
                    have lean_s1616 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a82 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                        (scope (fun lean_a83 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a84 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
                            (scope (fun lean_a85 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a86 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a87 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a88 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a89 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a90 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
                                        have lean_s1616 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a85
                                        have lean_s1617 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1616
                                        let lean_s1618 := by timed flipCongrArg lean_s1617 [Sum]
                                        have lean_s1619 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a87
                                        have lean_s1620 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s1619
                                        have lean_s1621 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s1620 [Succ]
                                        have lean_s1622 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a86
                                        have lean_s1623 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1622
                                        have lean_s1624 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s1621 lean_s1623
                                        have lean_s1625 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s1618 lean_s1624
                                        have lean_s1626 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a84
                                        have lean_s1627 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1626
                                        have lean_s1628 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1625 lean_s1627
                                        have lean_s1629 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1628 [Pred]
                                        have lean_s1630 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a83
                                        have lean_s1631 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1630
                                        have lean_s1632 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1629 lean_s1631
                                        let lean_s1633 := by timed flipCongrArg lean_s1632 [Sum]
                                        let lean_s1634 := by timed flipCongrArg lean_s1620 [Sum]
                                        let lean_s1635 := by timed flipCongrArg lean_s1617 [Sum]
                                        have lean_s1636 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s1635 lean_s1620
                                        have lean_s1637 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a90
                                        have lean_s1638 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1637
                                        have lean_s1639 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s1636 lean_s1638
                                        have lean_s1640 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1639 [Pred]
                                        have lean_s1641 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a89
                                        have lean_s1642 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1641
                                        have lean_s1643 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1640 lean_s1642
                                        have lean_s1644 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s1634 lean_s1643
                                        have lean_s1645 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a88
                                        have lean_s1646 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1645
                                        have lean_s1647 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1644 lean_s1646
                                        have lean_s1648 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s1633 lean_s1647
                                        have lean_s1649 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a82
                                        have lean_s1650 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s1649
                                        have lean_s1651 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s1648 lean_s1650
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1651
                      ))))))))))))))))))
                    have lean_s1617 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1616, 9
                    have lean_s1618 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s1615 lean_s1617
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1618
  ))))))))))))))))))
have lean_s1609 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1608, 9
have lean_s1610 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s1609
have lean_s1611 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s1607, lean_s1610, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s1612 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s1611, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
have lean_s1613 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by andElim lean_s1468, 51
let lean_s1614 := by R2 lean_s1612, lean_s1613, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1615 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by andElim lean_s1468, 50
let lean_s1616 := by R2 lean_s1614, lean_s1615, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1617 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s1468, 30
let lean_s1618 := by R2 lean_s1616, lean_s1617, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1619 := by R2 lean_s1618, lean_s1539, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1620 := by R2 lean_s1619, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1621 := by R2 lean_s1620, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1622 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by andElim lean_s1468, 8
let lean_s1623 := by R2 lean_s1621, lean_s1622, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1624 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by andElim lean_s1130, 3
let lean_s1625 := by R1 lean_s1623, lean_s1624, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
let lean_s1626 := by R2 lean_s1625, lean_s1131, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1627 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 3))]
have lean_s1628 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a82 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a83 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a84 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a85 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
          (scope (fun lean_a86 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
            (scope (fun lean_a87 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
              (scope (fun lean_a88 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
                (scope (fun lean_a89 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a90 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1628 := by timed And.intro lean_a83 lean_a87
                    let lean_s1629 := by timed And.intro lean_a86 lean_s1628
                    let lean_s1630 := by timed And.intro lean_a90 lean_s1629
                    let lean_s1631 := by timed And.intro lean_a82 lean_s1630
                    let lean_s1632 := by timed And.intro lean_a89 lean_s1631
                    let lean_s1633 := by timed And.intro lean_a88 lean_s1632
                    let lean_s1634 := by timed And.intro lean_a84 lean_s1633
                    have lean_s1635 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a85 lean_s1634
                    have lean_s1636 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a84 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
                        (scope (fun lean_a85 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a86 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
                            (scope (fun lean_a87 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a88 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a89 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a90 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a91 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a92 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
                                        have lean_s1636 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a87
                                        have lean_s1637 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1636
                                        let lean_s1638 := by timed flipCongrArg lean_s1637 [Sum]
                                        have lean_s1639 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a89
                                        have lean_s1640 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1639
                                        have lean_s1641 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1640 [Succ]
                                        have lean_s1642 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a88
                                        have lean_s1643 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1642
                                        have lean_s1644 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1641 lean_s1643
                                        have lean_s1645 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s1638 lean_s1644
                                        have lean_s1646 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a86
                                        have lean_s1647 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1646
                                        have lean_s1648 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1645 lean_s1647
                                        have lean_s1649 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1648 [Pred]
                                        have lean_s1650 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a85
                                        have lean_s1651 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1650
                                        have lean_s1652 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1649 lean_s1651
                                        let lean_s1653 := by timed flipCongrArg lean_s1652 [Sum]
                                        let lean_s1654 := by timed flipCongrArg lean_s1640 [Sum]
                                        let lean_s1655 := by timed flipCongrArg lean_s1637 [Sum]
                                        have lean_s1656 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s1655 lean_s1640
                                        have lean_s1657 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a92
                                        have lean_s1658 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1657
                                        have lean_s1659 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s1656 lean_s1658
                                        have lean_s1660 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1659 [Pred]
                                        have lean_s1661 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a91
                                        have lean_s1662 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1661
                                        have lean_s1663 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1660 lean_s1662
                                        have lean_s1664 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s1654 lean_s1663
                                        have lean_s1665 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a90
                                        have lean_s1666 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s1665
                                        have lean_s1667 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1664 lean_s1666
                                        have lean_s1668 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s1653 lean_s1667
                                        have lean_s1669 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a84
                                        have lean_s1670 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s1669
                                        have lean_s1671 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s1668 lean_s1670
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1671
                      ))))))))))))))))))
                    have lean_s1637 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1636, 9
                    have lean_s1638 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s1635 lean_s1637
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1638
  ))))))))))))))))))
have lean_s1629 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1628, 9
have lean_s1630 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s1629
have lean_s1631 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s1627, lean_s1630, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1632 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s1631, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1633 := by R1 lean_s1626, lean_s1632, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1634 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by andElim lean_s1468, 53
let lean_s1635 := by R2 lean_s1633, lean_s1634, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1636 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by andElim lean_s1468, 52
let lean_s1637 := by R2 lean_s1635, lean_s1636, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1638 := by R2 lean_s1637, lean_s1576, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1639 := by R2 lean_s1638, lean_s1559, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1640 := by R2 lean_s1639, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1641 := by R2 lean_s1640, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1642 := by R2 lean_s1641, lean_s1504, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1643 := by R1 lean_s1642, lean_s1624, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s1644 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 2))]
have lean_s1645 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a84 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a85 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a86 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a87 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
          (scope (fun lean_a88 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
            (scope (fun lean_a89 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
              (scope (fun lean_a90 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
                (scope (fun lean_a91 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a92 : (Eq y (Int.ofNat 2)) =>
                    let lean_s1645 := by timed And.intro lean_a85 lean_a89
                    let lean_s1646 := by timed And.intro lean_a88 lean_s1645
                    let lean_s1647 := by timed And.intro lean_a92 lean_s1646
                    let lean_s1648 := by timed And.intro lean_a84 lean_s1647
                    let lean_s1649 := by timed And.intro lean_a91 lean_s1648
                    let lean_s1650 := by timed And.intro lean_a90 lean_s1649
                    let lean_s1651 := by timed And.intro lean_a86 lean_s1650
                    have lean_s1652 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a87 lean_s1651
                    have lean_s1653 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a86 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                        (scope (fun lean_a87 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a88 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
                            (scope (fun lean_a89 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a90 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a91 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a92 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a93 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
                                        have lean_s1653 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a89
                                        have lean_s1654 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1653
                                        let lean_s1655 := by timed flipCongrArg lean_s1654 [Sum]
                                        have lean_s1656 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a91
                                        have lean_s1657 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s1656
                                        have lean_s1658 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s1657 [Succ]
                                        have lean_s1659 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a90
                                        have lean_s1660 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1659
                                        have lean_s1661 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s1658 lean_s1660
                                        have lean_s1662 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s1655 lean_s1661
                                        have lean_s1663 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a88
                                        have lean_s1664 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1663
                                        have lean_s1665 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1662 lean_s1664
                                        have lean_s1666 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1665 [Pred]
                                        have lean_s1667 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a87
                                        have lean_s1668 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1667
                                        have lean_s1669 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1666 lean_s1668
                                        let lean_s1670 := by timed flipCongrArg lean_s1669 [Sum]
                                        let lean_s1671 := by timed flipCongrArg lean_s1657 [Sum]
                                        let lean_s1672 := by timed flipCongrArg lean_s1654 [Sum]
                                        have lean_s1673 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s1672 lean_s1657
                                        have lean_s1674 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a94
                                        have lean_s1675 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1674
                                        have lean_s1676 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s1673 lean_s1675
                                        have lean_s1677 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1676 [Pred]
                                        have lean_s1678 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a93
                                        have lean_s1679 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1678
                                        have lean_s1680 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1677 lean_s1679
                                        have lean_s1681 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s1671 lean_s1680
                                        have lean_s1682 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a92
                                        have lean_s1683 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s1682
                                        have lean_s1684 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1681 lean_s1683
                                        have lean_s1685 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s1670 lean_s1684
                                        have lean_s1686 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a86
                                        have lean_s1687 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1686
                                        have lean_s1688 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1685 lean_s1687
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1688
                      ))))))))))))))))))
                    have lean_s1654 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1653, 9
                    have lean_s1655 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1652 lean_s1654
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1655
  ))))))))))))))))))
have lean_s1646 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1645, 9
have lean_s1647 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1646
have lean_s1648 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s1644, lean_s1647, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s1649 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s1648, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1650 := by R1 lean_s1643, lean_s1649, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s1651 := by R2 lean_s1650, lean_s1636, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1652 := by R2 lean_s1651, lean_s1613, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1653 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by andElim lean_s1468, 31
let lean_s1654 := by R2 lean_s1652, lean_s1653, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1655 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by andElim lean_s1468, 27
let lean_s1656 := by R2 lean_s1654, lean_s1655, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1657 := by R2 lean_s1656, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1658 := by R2 lean_s1657, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1659 := by R2 lean_s1658, lean_s1564, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1660 : (Not (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by andElim lean_s1130, 6
let lean_s1661 := by R1 lean_s1659, lean_s1660, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1662 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0)))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 0)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 0))]
have lean_s1663 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a86 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a87 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a88 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a89 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
          (scope (fun lean_a90 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
            (scope (fun lean_a91 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
              (scope (fun lean_a92 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
                (scope (fun lean_a93 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a94 : (Eq y (Int.ofNat 0)) =>
                    let lean_s1663 := by timed And.intro lean_a88 lean_a90
                    let lean_s1664 := by timed And.intro lean_a89 lean_s1663
                    let lean_s1665 := by timed And.intro lean_a94 lean_s1664
                    let lean_s1666 := by timed And.intro lean_a86 lean_s1665
                    let lean_s1667 := by timed And.intro lean_a93 lean_s1666
                    let lean_s1668 := by timed And.intro lean_a91 lean_s1667
                    let lean_s1669 := by timed And.intro lean_a87 lean_s1668
                    have lean_s1670 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a92 lean_s1669
                    have lean_s1671 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a86 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
                        (scope (fun lean_a87 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                          (scope (fun lean_a88 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
                            (scope (fun lean_a89 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a90 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                                (scope (fun lean_a91 : (Eq y (Int.ofNat 0)) =>
                                  (scope (fun lean_a92 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a93 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                                        have lean_s1671 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a89
                                        have lean_s1672 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1671
                                        let lean_s1673 := by timed flipCongrArg lean_s1672 [Sum]
                                        have lean_s1674 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a91
                                        have lean_s1675 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1674
                                        have lean_s1676 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1675 [Succ]
                                        have lean_s1677 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a90
                                        have lean_s1678 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1677
                                        have lean_s1679 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1676 lean_s1678
                                        have lean_s1680 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s1673 lean_s1679
                                        have lean_s1681 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a88
                                        have lean_s1682 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1681
                                        have lean_s1683 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1680 lean_s1682
                                        have lean_s1684 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1683 [Pred]
                                        have lean_s1685 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a87
                                        have lean_s1686 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1685
                                        have lean_s1687 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1684 lean_s1686
                                        let lean_s1688 := by timed flipCongrArg lean_s1687 [Sum]
                                        let lean_s1689 := by timed flipCongrArg lean_s1675 [Sum]
                                        let lean_s1690 := by timed flipCongrArg lean_s1672 [Sum]
                                        have lean_s1691 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s1690 lean_s1675
                                        have lean_s1692 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a94
                                        have lean_s1693 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1692
                                        have lean_s1694 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s1691 lean_s1693
                                        have lean_s1695 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1694 [Pred]
                                        have lean_s1696 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a93
                                        have lean_s1697 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1696
                                        have lean_s1698 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1695 lean_s1697
                                        have lean_s1699 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s1689 lean_s1698
                                        have lean_s1700 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a92
                                        have lean_s1701 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s1700
                                        have lean_s1702 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1699 lean_s1701
                                        have lean_s1703 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s1688 lean_s1702
                                        have lean_s1704 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a86
                                        have lean_s1705 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1704
                                        have lean_s1706 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1703 lean_s1705
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1706
                      ))))))))))))))))))
                    have lean_s1672 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1671, 9
                    have lean_s1673 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1670 lean_s1672
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1673
  ))))))))))))))))))
have lean_s1664 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1663, 9
have lean_s1665 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1664
have lean_s1666 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s1662, lean_s1665, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 0)))))))))), [(- 1), (- 1)]
have lean_s1667 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s1666, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1668 := by R1 lean_s1661, lean_s1667, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s1669 := by R2 lean_s1668, lean_s1634, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1670 := by R2 lean_s1669, lean_s1615, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1671 := by R2 lean_s1670, lean_s1554, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1672 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by andElim lean_s1468, 23
let lean_s1673 := by R2 lean_s1671, lean_s1672, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1674 := by R2 lean_s1673, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1675 := by R2 lean_s1674, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1676 := by R2 lean_s1675, lean_s1481, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s1677 : (Or (Not (Eq x (Int.ofNat 5))) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq x (Int.ofNat 5)))))))) := by R1 lean_s1676, lean_s1660, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1678 : (Or (Not (Eq x (Int.ofNat 5))) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))) := by factor lean_s1677, 5
have lean_s1679 : (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Not (Eq x (Int.ofNat 5))))) := by permutateOr lean_s1678, [1, 2, 0], (- 1)
let lean_s1680 := by R1 lean_s1606, lean_s1679, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s1681 : (Or (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0))))))))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 0))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 0))]
have lean_s1682 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) :=
  (scope (fun lean_a86 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a87 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a88 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a89 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
          (scope (fun lean_a90 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
            (scope (fun lean_a91 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
              (scope (fun lean_a92 : (Eq x (Int.ofNat 2)) =>
                (scope (fun lean_a93 : (Eq y (Int.ofNat 0)) =>
                  let lean_s1682 := by timed And.intro lean_a87 lean_a90
                  let lean_s1683 := by timed And.intro lean_a89 lean_s1682
                  let lean_s1684 := by timed And.intro lean_a93 lean_s1683
                  let lean_s1685 := by timed And.intro lean_a86 lean_s1684
                  let lean_s1686 := by timed And.intro lean_a92 lean_s1685
                  let lean_s1687 := by timed And.intro lean_a88 lean_s1686
                  have lean_s1688 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))))))))) := by timed And.intro lean_a91 lean_s1687
                  have lean_s1689 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) :=
                    (scope (fun lean_a88 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
                      (scope (fun lean_a89 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                        (scope (fun lean_a90 : (Eq x (Int.ofNat 2)) =>
                          (scope (fun lean_a91 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) =>
                            (scope (fun lean_a92 : (Eq y (Int.ofNat 0)) =>
                              (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                                (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                  (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                                    have lean_s1689 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a90
                                    have lean_s1690 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1689
                                    let lean_s1691 := by timed flipCongrArg lean_s1690 [Sum]
                                    have lean_s1692 : (Eq (Int.ofNat 0) y) := by timed Eq.symm lean_a92
                                    have lean_s1693 : (Eq y (Int.ofNat 0)) := by timed Eq.symm lean_s1692
                                    have lean_s1694 : (Eq (Succ y) (Succ (Int.ofNat 0))) := by timed flipCongrArg lean_s1693 [Succ]
                                    have lean_s1695 : (Eq (Int.ofNat 1) (Succ (Int.ofNat 0))) := by timed Eq.symm lean_a91
                                    have lean_s1696 : (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1695
                                    have lean_s1697 : (Eq (Succ y) (Int.ofNat 1)) := by timed Eq.trans lean_s1694 lean_s1696
                                    have lean_s1698 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s1691 lean_s1697
                                    have lean_s1699 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed Eq.symm lean_a88
                                    have lean_s1700 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by timed Eq.symm lean_s1699
                                    have lean_s1701 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1698 lean_s1700
                                    have lean_s1702 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1701 [Pred]
                                    have lean_s1703 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a89
                                    have lean_s1704 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1703
                                    have lean_s1705 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1702 lean_s1704
                                    let lean_s1706 := by timed flipCongrArg lean_s1705 [Sum]
                                    let lean_s1707 := by timed flipCongrArg lean_s1693 [Sum]
                                    let lean_s1708 := by timed flipCongrArg lean_s1690 [Sum]
                                    have lean_s1709 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s1708 lean_s1693
                                    have lean_s1710 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a95
                                    have lean_s1711 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s1710
                                    have lean_s1712 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s1709 lean_s1711
                                    have lean_s1713 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1712 [Pred]
                                    have lean_s1714 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a94
                                    have lean_s1715 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1714
                                    have lean_s1716 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1713 lean_s1715
                                    have lean_s1717 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s1707 lean_s1716
                                    have lean_s1718 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a93
                                    have lean_s1719 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s1718
                                    have lean_s1720 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1717 lean_s1719
                                    have lean_s1721 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s1706 lean_s1720
                                    have lean_s1722 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1721 lean_s1700
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1722
                    ))))))))))))))))
                  have lean_s1690 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq y (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1689, 8
                  have lean_s1691 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1688 lean_s1690
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1691
  ))))))))))))))))
have lean_s1683 : (Implies (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1682, 8
have lean_s1684 : (Or (Not (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1683
have lean_s1685 : (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) := by R1 lean_s1681, lean_s1684, (And (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 0))))))))), [(- 1), (- 1)]
have lean_s1686 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))))))))))) := by permutateOr lean_s1685, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
have lean_s1687 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by andElim lean_s1468, 32
let lean_s1688 := by R2 lean_s1686, lean_s1687, (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1689 := by R2 lean_s1688, lean_s1653, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1690 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by andElim lean_s1468, 20
let lean_s1691 := by R2 lean_s1689, lean_s1690, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1692 := by R2 lean_s1691, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1693 := by R2 lean_s1692, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1694 := by R2 lean_s1693, lean_s1481, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1695 := by R1 lean_s1694, lean_s1660, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1696 := by R2 lean_s1695, lean_s1131, (Eq y (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1697 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 2))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 2))]
have lean_s1698 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) :=
  (scope (fun lean_a88 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a89 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a90 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a91 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
          (scope (fun lean_a92 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
            (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
              (scope (fun lean_a94 : (Eq x (Int.ofNat 2)) =>
                (scope (fun lean_a95 : (Eq y (Int.ofNat 2)) =>
                  let lean_s1698 := by timed And.intro lean_a89 lean_a91
                  let lean_s1699 := by timed And.intro lean_a95 lean_s1698
                  let lean_s1700 := by timed And.intro lean_a88 lean_s1699
                  let lean_s1701 := by timed And.intro lean_a94 lean_s1700
                  let lean_s1702 := by timed And.intro lean_a92 lean_s1701
                  let lean_s1703 := by timed And.intro lean_a90 lean_s1702
                  have lean_s1704 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))))))))) := by timed And.intro lean_a93 lean_s1703
                  have lean_s1705 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) :=
                    (scope (fun lean_a91 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
                      (scope (fun lean_a92 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                        (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                          (scope (fun lean_a94 : (Eq x (Int.ofNat 2)) =>
                            (scope (fun lean_a95 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                              (scope (fun lean_a96 : (Eq y (Int.ofNat 2)) =>
                                (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                  (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                                    have lean_s1705 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a94
                                    have lean_s1706 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1705
                                    let lean_s1707 := by timed flipCongrArg lean_s1706 [Sum]
                                    have lean_s1708 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a96
                                    have lean_s1709 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s1708
                                    have lean_s1710 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s1709 [Succ]
                                    have lean_s1711 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a95
                                    have lean_s1712 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1711
                                    have lean_s1713 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s1710 lean_s1712
                                    have lean_s1714 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s1707 lean_s1713
                                    have lean_s1715 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed Eq.symm lean_a93
                                    have lean_s1716 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by timed Eq.symm lean_s1715
                                    have lean_s1717 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1714 lean_s1716
                                    have lean_s1718 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1717 [Pred]
                                    have lean_s1719 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a92
                                    have lean_s1720 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1719
                                    have lean_s1721 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1718 lean_s1720
                                    let lean_s1722 := by timed flipCongrArg lean_s1721 [Sum]
                                    let lean_s1723 := by timed flipCongrArg lean_s1709 [Sum]
                                    let lean_s1724 := by timed flipCongrArg lean_s1706 [Sum]
                                    have lean_s1725 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1724 lean_s1709
                                    have lean_s1726 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a98
                                    have lean_s1727 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s1726
                                    have lean_s1728 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s1725 lean_s1727
                                    have lean_s1729 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1728 [Pred]
                                    have lean_s1730 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a97
                                    have lean_s1731 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1730
                                    have lean_s1732 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1729 lean_s1731
                                    have lean_s1733 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s1723 lean_s1732
                                    have lean_s1734 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1733 lean_s1716
                                    have lean_s1735 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s1722 lean_s1734
                                    have lean_s1736 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a91
                                    have lean_s1737 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s1736
                                    have lean_s1738 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1735 lean_s1737
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1738
                    ))))))))))))))))
                  have lean_s1706 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1705, 8
                  have lean_s1707 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1704 lean_s1706
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1707
  ))))))))))))))))
have lean_s1699 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1698, 8
have lean_s1700 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1699
have lean_s1701 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)))))))))) := by R1 lean_s1697, lean_s1700, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 2))))))))), [(- 1), (- 1)]
have lean_s1702 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))))))))))) := by permutateOr lean_s1701, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
let lean_s1703 := by R1 lean_s1696, lean_s1702, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s1704 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by andElim lean_s1468, 48
let lean_s1705 := by R2 lean_s1703, lean_s1704, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
have lean_s1706 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by andElim lean_s1468, 34
let lean_s1707 := by R2 lean_s1705, lean_s1706, (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1708 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by andElim lean_s1468, 33
let lean_s1709 := by R2 lean_s1707, lean_s1708, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1710 := by R2 lean_s1709, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1711 := by R2 lean_s1710, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1712 := by R2 lean_s1711, lean_s1564, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1713 := by R1 lean_s1712, lean_s1660, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1714 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 1))]
have lean_s1715 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a91 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a92 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a93 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
          (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
            (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
              (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
                (scope (fun lean_a98 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a99 : (Eq y (Int.ofNat 1)) =>
                    let lean_s1715 := by timed And.intro lean_a92 lean_a95
                    let lean_s1716 := by timed And.intro lean_a94 lean_s1715
                    let lean_s1717 := by timed And.intro lean_a99 lean_s1716
                    let lean_s1718 := by timed And.intro lean_a91 lean_s1717
                    let lean_s1719 := by timed And.intro lean_a98 lean_s1718
                    let lean_s1720 := by timed And.intro lean_a96 lean_s1719
                    let lean_s1721 := by timed And.intro lean_a93 lean_s1720
                    have lean_s1722 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a97 lean_s1721
                    have lean_s1723 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a91 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) =>
                        (scope (fun lean_a92 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                            (scope (fun lean_a94 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a95 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a96 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
                                        have lean_s1723 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a94
                                        have lean_s1724 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1723
                                        let lean_s1725 := by timed flipCongrArg lean_s1724 [Sum]
                                        have lean_s1726 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a96
                                        have lean_s1727 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s1726
                                        have lean_s1728 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s1727 [Succ]
                                        have lean_s1729 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a95
                                        have lean_s1730 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1729
                                        have lean_s1731 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s1728 lean_s1730
                                        have lean_s1732 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1725 lean_s1731
                                        have lean_s1733 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a93
                                        have lean_s1734 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s1733
                                        have lean_s1735 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1732 lean_s1734
                                        have lean_s1736 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1735 [Pred]
                                        have lean_s1737 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a92
                                        have lean_s1738 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1737
                                        have lean_s1739 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1736 lean_s1738
                                        let lean_s1740 := by timed flipCongrArg lean_s1739 [Sum]
                                        let lean_s1741 := by timed flipCongrArg lean_s1727 [Sum]
                                        let lean_s1742 := by timed flipCongrArg lean_s1724 [Sum]
                                        have lean_s1743 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s1742 lean_s1727
                                        have lean_s1744 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed Eq.symm lean_a99
                                        have lean_s1745 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by timed Eq.symm lean_s1744
                                        have lean_s1746 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s1743 lean_s1745
                                        have lean_s1747 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1746 [Pred]
                                        have lean_s1748 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a98
                                        have lean_s1749 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1748
                                        have lean_s1750 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1747 lean_s1749
                                        have lean_s1751 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s1741 lean_s1750
                                        have lean_s1752 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a97
                                        have lean_s1753 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1752
                                        have lean_s1754 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1751 lean_s1753
                                        have lean_s1755 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s1740 lean_s1754
                                        have lean_s1756 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 3) (Int.ofNat 3))) := by timed Eq.symm lean_a91
                                        have lean_s1757 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) := by timed Eq.symm lean_s1756
                                        have lean_s1758 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s1755 lean_s1757
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1758
                      ))))))))))))))))))
                    have lean_s1724 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1723, 9
                    have lean_s1725 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s1722 lean_s1724
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1725
  ))))))))))))))))))
have lean_s1716 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1715, 9
have lean_s1717 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s1716
have lean_s1718 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s1714, lean_s1717, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s1719 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s1718, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1720 := by R1 lean_s1713, lean_s1719, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s1721 := by R2 lean_s1720, lean_s1518, (Eq (Sum (Int.ofNat 3) (Int.ofNat 3)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1722 := by R2 lean_s1721, lean_s1708, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1723 := by R2 lean_s1722, lean_s1687, (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1724 := by R2 lean_s1723, lean_s1655, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1725 := by R2 lean_s1724, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1726 := by R2 lean_s1725, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1727 := by R2 lean_s1726, lean_s1622, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1728 := by R1 lean_s1727, lean_s1624, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s1729 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 3))]
have lean_s1730 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a91 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a92 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a93 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
          (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
            (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
              (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
                (scope (fun lean_a98 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a99 : (Eq y (Int.ofNat 3)) =>
                    let lean_s1730 := by timed And.intro lean_a93 lean_a94
                    let lean_s1731 := by timed And.intro lean_a96 lean_s1730
                    let lean_s1732 := by timed And.intro lean_a99 lean_s1731
                    let lean_s1733 := by timed And.intro lean_a91 lean_s1732
                    let lean_s1734 := by timed And.intro lean_a98 lean_s1733
                    let lean_s1735 := by timed And.intro lean_a95 lean_s1734
                    let lean_s1736 := by timed And.intro lean_a92 lean_s1735
                    have lean_s1737 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a97 lean_s1736
                    have lean_s1738 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a91 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
                        (scope (fun lean_a92 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                          (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
                            (scope (fun lean_a94 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a95 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a96 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                                        have lean_s1738 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a94
                                        have lean_s1739 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1738
                                        let lean_s1740 := by timed flipCongrArg lean_s1739 [Sum]
                                        have lean_s1741 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a96
                                        have lean_s1742 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s1741
                                        have lean_s1743 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s1742 [Succ]
                                        have lean_s1744 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a95
                                        have lean_s1745 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1744
                                        have lean_s1746 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s1743 lean_s1745
                                        have lean_s1747 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s1740 lean_s1746
                                        have lean_s1748 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a93
                                        have lean_s1749 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s1748
                                        have lean_s1750 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1747 lean_s1749
                                        have lean_s1751 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1750 [Pred]
                                        have lean_s1752 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a92
                                        have lean_s1753 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1752
                                        have lean_s1754 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1751 lean_s1753
                                        let lean_s1755 := by timed flipCongrArg lean_s1754 [Sum]
                                        let lean_s1756 := by timed flipCongrArg lean_s1742 [Sum]
                                        let lean_s1757 := by timed flipCongrArg lean_s1739 [Sum]
                                        have lean_s1758 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s1757 lean_s1742
                                        have lean_s1759 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed Eq.symm lean_a99
                                        have lean_s1760 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by timed Eq.symm lean_s1759
                                        have lean_s1761 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s1758 lean_s1760
                                        have lean_s1762 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1761 [Pred]
                                        have lean_s1763 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a98
                                        have lean_s1764 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1763
                                        have lean_s1765 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1762 lean_s1764
                                        have lean_s1766 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s1756 lean_s1765
                                        have lean_s1767 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a97
                                        have lean_s1768 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s1767
                                        have lean_s1769 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1766 lean_s1768
                                        have lean_s1770 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s1755 lean_s1769
                                        have lean_s1771 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a91
                                        have lean_s1772 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1771
                                        have lean_s1773 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s1770 lean_s1772
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1773
                      ))))))))))))))))))
                    have lean_s1739 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1738, 9
                    have lean_s1740 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s1737 lean_s1739
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1740
  ))))))))))))))))))
have lean_s1731 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1730, 9
have lean_s1732 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s1731
have lean_s1733 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s1729, lean_s1732, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s1734 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s1733, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1735 := by R1 lean_s1728, lean_s1734, (Eq y (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s1736 := by R2 lean_s1735, lean_s1615, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1737 := by R2 lean_s1736, lean_s1595, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1738 := by R2 lean_s1737, lean_s1559, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1739 := by R2 lean_s1738, lean_s1706, (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1740 := by R2 lean_s1739, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1741 := by R2 lean_s1740, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1742 := by R2 lean_s1741, lean_s1504, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
have lean_s1743 : (Or (Not (Eq x (Int.ofNat 2))) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq x (Int.ofNat 2)))))))) := by R1 lean_s1742, lean_s1624, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s1744 : (Or (Not (Eq x (Int.ofNat 2))) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5)))) := by factor lean_s1743, 5
have lean_s1745 : (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Not (Eq x (Int.ofNat 2))))) := by permutateOr lean_s1744, [1, 2, 0], (- 1)
have lean_s1746 : (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))))))))))))) := by R1 lean_s1680, lean_s1745, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s1747 : (Or (Eq y (Int.ofNat 1)) (Or (Eq y (Int.ofNat 2)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Eq x (Int.ofNat 0)))))) := by factor lean_s1746, 15
have lean_s1748 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 5))]
have lean_s1749 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a91 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
    (scope (fun lean_a92 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a93 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
          (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
            (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
              (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
                (scope (fun lean_a98 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a99 : (Eq y (Int.ofNat 5)) =>
                    let lean_s1749 := by timed And.intro lean_a92 lean_a96
                    let lean_s1750 := by timed And.intro lean_a97 lean_s1749
                    let lean_s1751 := by timed And.intro lean_a99 lean_s1750
                    let lean_s1752 := by timed And.intro lean_a91 lean_s1751
                    let lean_s1753 := by timed And.intro lean_a98 lean_s1752
                    let lean_s1754 := by timed And.intro lean_a95 lean_s1753
                    let lean_s1755 := by timed And.intro lean_a93 lean_s1754
                    have lean_s1756 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a94 lean_s1755
                    have lean_s1757 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                        (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                            (scope (fun lean_a96 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a97 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
                                (scope (fun lean_a98 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a100 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
                                        have lean_s1757 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a96
                                        have lean_s1758 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s1757
                                        let lean_s1759 := by timed flipCongrArg lean_s1758 [Sum]
                                        have lean_s1760 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a98
                                        have lean_s1761 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s1760
                                        have lean_s1762 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s1761 [Succ]
                                        have lean_s1763 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a97
                                        have lean_s1764 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1763
                                        have lean_s1765 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s1762 lean_s1764
                                        have lean_s1766 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s1759 lean_s1765
                                        have lean_s1767 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a95
                                        have lean_s1768 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s1767
                                        have lean_s1769 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1766 lean_s1768
                                        have lean_s1770 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1769 [Pred]
                                        have lean_s1771 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a94
                                        have lean_s1772 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1771
                                        have lean_s1773 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1770 lean_s1772
                                        let lean_s1774 := by timed flipCongrArg lean_s1773 [Sum]
                                        let lean_s1775 := by timed flipCongrArg lean_s1761 [Sum]
                                        let lean_s1776 := by timed flipCongrArg lean_s1758 [Sum]
                                        have lean_s1777 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s1776 lean_s1761
                                        have lean_s1778 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a101
                                        have lean_s1779 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s1778
                                        have lean_s1780 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s1777 lean_s1779
                                        have lean_s1781 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1780 [Pred]
                                        have lean_s1782 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a100
                                        have lean_s1783 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1782
                                        have lean_s1784 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1781 lean_s1783
                                        have lean_s1785 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s1775 lean_s1784
                                        have lean_s1786 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a99
                                        have lean_s1787 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1786
                                        have lean_s1788 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1785 lean_s1787
                                        have lean_s1789 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s1774 lean_s1788
                                        have lean_s1790 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a93
                                        have lean_s1791 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s1790
                                        have lean_s1792 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1789 lean_s1791
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1792
                      ))))))))))))))))))
                    have lean_s1758 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1757, 9
                    have lean_s1759 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1756 lean_s1758
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1759
  ))))))))))))))))))
have lean_s1750 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1749, 9
have lean_s1751 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1750
have lean_s1752 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s1748, lean_s1751, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s1753 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s1752, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1754 := by R2 lean_s1753, lean_s1613, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1755 := by R2 lean_s1754, lean_s1704, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1756 := by R2 lean_s1755, lean_s1473, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1757 := by R2 lean_s1756, lean_s1576, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1758 := by R2 lean_s1757, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1759 := by R2 lean_s1758, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
have lean_s1760 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by andElim lean_s1468, 12
let lean_s1761 := by R2 lean_s1759, lean_s1760, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1762 := by R1 lean_s1761, lean_s1506, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
let lean_s1763 := by R2 lean_s1762, lean_s1509, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s1764 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 5))]
have lean_s1765 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a93 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
    (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a95 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
          (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
            (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
              (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
                (scope (fun lean_a100 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a101 : (Eq y (Int.ofNat 5)) =>
                    let lean_s1765 := by timed And.intro lean_a94 lean_a98
                    let lean_s1766 := by timed And.intro lean_a99 lean_s1765
                    let lean_s1767 := by timed And.intro lean_a101 lean_s1766
                    let lean_s1768 := by timed And.intro lean_a93 lean_s1767
                    let lean_s1769 := by timed And.intro lean_a100 lean_s1768
                    let lean_s1770 := by timed And.intro lean_a97 lean_s1769
                    let lean_s1771 := by timed And.intro lean_a95 lean_s1770
                    have lean_s1772 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a96 lean_s1771
                    have lean_s1773 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a93 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                        (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                            (scope (fun lean_a96 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a97 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
                                (scope (fun lean_a98 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a100 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
                                        have lean_s1773 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a96
                                        have lean_s1774 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s1773
                                        let lean_s1775 := by timed flipCongrArg lean_s1774 [Sum]
                                        have lean_s1776 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a98
                                        have lean_s1777 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s1776
                                        have lean_s1778 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s1777 [Succ]
                                        have lean_s1779 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a97
                                        have lean_s1780 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1779
                                        have lean_s1781 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s1778 lean_s1780
                                        have lean_s1782 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s1775 lean_s1781
                                        have lean_s1783 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a95
                                        have lean_s1784 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s1783
                                        have lean_s1785 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1782 lean_s1784
                                        have lean_s1786 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1785 [Pred]
                                        have lean_s1787 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a94
                                        have lean_s1788 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1787
                                        have lean_s1789 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1786 lean_s1788
                                        let lean_s1790 := by timed flipCongrArg lean_s1789 [Sum]
                                        let lean_s1791 := by timed flipCongrArg lean_s1777 [Sum]
                                        let lean_s1792 := by timed flipCongrArg lean_s1774 [Sum]
                                        have lean_s1793 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s1792 lean_s1777
                                        have lean_s1794 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a101
                                        have lean_s1795 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s1794
                                        have lean_s1796 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s1793 lean_s1795
                                        have lean_s1797 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1796 [Pred]
                                        have lean_s1798 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a100
                                        have lean_s1799 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1798
                                        have lean_s1800 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1797 lean_s1799
                                        have lean_s1801 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed congr lean_s1791 lean_s1800
                                        have lean_s1802 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 5) (Int.ofNat 1))) := by timed Eq.symm lean_a99
                                        have lean_s1803 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1802
                                        have lean_s1804 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1801 lean_s1803
                                        have lean_s1805 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s1790 lean_s1804
                                        have lean_s1806 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a93
                                        have lean_s1807 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s1806
                                        have lean_s1808 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s1805 lean_s1807
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1808
                      ))))))))))))))))))
                    have lean_s1774 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1773, 9
                    have lean_s1775 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s1772 lean_s1774
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1775
  ))))))))))))))))))
have lean_s1766 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1765, 9
have lean_s1767 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s1766
have lean_s1768 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s1764, lean_s1767, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s1769 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)))))))))))) := by permutateOr lean_s1768, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1770 := by R1 lean_s1763, lean_s1769, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s1771 := by R2 lean_s1770, lean_s1615, (Eq (Sum (Int.ofNat 5) (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1772 := by R2 lean_s1771, lean_s1593, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1773 := by R2 lean_s1772, lean_s1496, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1774 := by R2 lean_s1773, lean_s1653, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1775 := by R2 lean_s1774, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1776 := by R2 lean_s1775, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1777 := by R2 lean_s1776, lean_s1760, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1778 := by R1 lean_s1777, lean_s1602, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
have lean_s1779 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 5))]
have lean_s1780 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a93 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
    (scope (fun lean_a94 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a95 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
          (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
            (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
              (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                (scope (fun lean_a100 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a101 : (Eq y (Int.ofNat 5)) =>
                    let lean_s1780 := by timed And.intro lean_a94 lean_a98
                    let lean_s1781 := by timed And.intro lean_a99 lean_s1780
                    let lean_s1782 := by timed And.intro lean_a101 lean_s1781
                    let lean_s1783 := by timed And.intro lean_a93 lean_s1782
                    let lean_s1784 := by timed And.intro lean_a100 lean_s1783
                    let lean_s1785 := by timed And.intro lean_a97 lean_s1784
                    let lean_s1786 := by timed And.intro lean_a95 lean_s1785
                    have lean_s1787 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a96 lean_s1786
                    have lean_s1788 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a94 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                        (scope (fun lean_a95 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
                            (scope (fun lean_a97 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a98 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
                                (scope (fun lean_a99 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a101 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
                                        have lean_s1788 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a97
                                        have lean_s1789 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1788
                                        let lean_s1790 := by timed flipCongrArg lean_s1789 [Sum]
                                        have lean_s1791 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a99
                                        have lean_s1792 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s1791
                                        have lean_s1793 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s1792 [Succ]
                                        have lean_s1794 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a98
                                        have lean_s1795 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1794
                                        have lean_s1796 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s1793 lean_s1795
                                        have lean_s1797 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s1790 lean_s1796
                                        have lean_s1798 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed Eq.symm lean_a96
                                        have lean_s1799 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s1798
                                        have lean_s1800 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1797 lean_s1799
                                        have lean_s1801 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1800 [Pred]
                                        have lean_s1802 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a95
                                        have lean_s1803 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1802
                                        have lean_s1804 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1801 lean_s1803
                                        let lean_s1805 := by timed flipCongrArg lean_s1804 [Sum]
                                        let lean_s1806 := by timed flipCongrArg lean_s1792 [Sum]
                                        let lean_s1807 := by timed flipCongrArg lean_s1789 [Sum]
                                        have lean_s1808 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s1807 lean_s1792
                                        have lean_s1809 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a102
                                        have lean_s1810 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1809
                                        have lean_s1811 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s1808 lean_s1810
                                        have lean_s1812 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1811 [Pred]
                                        have lean_s1813 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a101
                                        have lean_s1814 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1813
                                        have lean_s1815 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1812 lean_s1814
                                        have lean_s1816 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1806 lean_s1815
                                        have lean_s1817 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a100
                                        have lean_s1818 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1817
                                        have lean_s1819 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1816 lean_s1818
                                        have lean_s1820 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s1805 lean_s1819
                                        have lean_s1821 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a94
                                        have lean_s1822 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s1821
                                        have lean_s1823 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1820 lean_s1822
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1823
                      ))))))))))))))))))
                    have lean_s1789 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1788, 9
                    have lean_s1790 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1787 lean_s1789
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1790
  ))))))))))))))))))
have lean_s1781 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1780, 9
have lean_s1782 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1781
have lean_s1783 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s1779, lean_s1782, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s1784 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s1783, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1785 := by R1 lean_s1778, lean_s1784, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1786 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by andElim lean_s1468, 54
let lean_s1787 := by R2 lean_s1785, lean_s1786, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1788 := by R2 lean_s1787, lean_s1617, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1789 := by R2 lean_s1788, lean_s1537, (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1790 := by R2 lean_s1789, lean_s1672, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1791 := by R2 lean_s1790, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1792 := by R2 lean_s1791, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1793 := by R2 lean_s1792, lean_s1760, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1794 := by R1 lean_s1793, lean_s1506, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s1795 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 5))]
have lean_s1796 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a94 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
    (scope (fun lean_a95 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a96 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
            (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
              (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                (scope (fun lean_a101 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a102 : (Eq y (Int.ofNat 5)) =>
                    let lean_s1796 := by timed And.intro lean_a95 lean_a99
                    let lean_s1797 := by timed And.intro lean_a100 lean_s1796
                    let lean_s1798 := by timed And.intro lean_a102 lean_s1797
                    let lean_s1799 := by timed And.intro lean_a94 lean_s1798
                    let lean_s1800 := by timed And.intro lean_a101 lean_s1799
                    let lean_s1801 := by timed And.intro lean_a98 lean_s1800
                    let lean_s1802 := by timed And.intro lean_a96 lean_s1801
                    have lean_s1803 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a97 lean_s1802
                    have lean_s1804 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a95 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
                        (scope (fun lean_a96 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a97 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) =>
                            (scope (fun lean_a98 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a99 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
                                (scope (fun lean_a100 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a102 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a103 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
                                        have lean_s1804 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a98
                                        have lean_s1805 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1804
                                        let lean_s1806 := by timed flipCongrArg lean_s1805 [Sum]
                                        have lean_s1807 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a100
                                        have lean_s1808 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s1807
                                        have lean_s1809 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s1808 [Succ]
                                        have lean_s1810 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a99
                                        have lean_s1811 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1810
                                        have lean_s1812 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s1809 lean_s1811
                                        have lean_s1813 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s1806 lean_s1812
                                        have lean_s1814 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 2) (Int.ofNat 0))) := by timed Eq.symm lean_a97
                                        have lean_s1815 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) := by timed Eq.symm lean_s1814
                                        have lean_s1816 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1813 lean_s1815
                                        have lean_s1817 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1816 [Pred]
                                        have lean_s1818 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a96
                                        have lean_s1819 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1818
                                        have lean_s1820 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1817 lean_s1819
                                        let lean_s1821 := by timed flipCongrArg lean_s1820 [Sum]
                                        let lean_s1822 := by timed flipCongrArg lean_s1808 [Sum]
                                        let lean_s1823 := by timed flipCongrArg lean_s1805 [Sum]
                                        have lean_s1824 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s1823 lean_s1808
                                        have lean_s1825 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a103
                                        have lean_s1826 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s1825
                                        have lean_s1827 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s1824 lean_s1826
                                        have lean_s1828 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1827 [Pred]
                                        have lean_s1829 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a102
                                        have lean_s1830 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1829
                                        have lean_s1831 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1828 lean_s1830
                                        have lean_s1832 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s1822 lean_s1831
                                        have lean_s1833 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a101
                                        have lean_s1834 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1833
                                        have lean_s1835 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1832 lean_s1834
                                        have lean_s1836 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s1821 lean_s1835
                                        have lean_s1837 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a95
                                        have lean_s1838 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1837
                                        have lean_s1839 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s1836 lean_s1838
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1839
                      ))))))))))))))))))
                    have lean_s1805 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1804, 9
                    have lean_s1806 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s1803 lean_s1805
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1806
  ))))))))))))))))))
have lean_s1797 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1796, 9
have lean_s1798 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s1797
have lean_s1799 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s1795, lean_s1798, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s1800 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s1799, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1801 := by R1 lean_s1794, lean_s1800, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s1802 := by R2 lean_s1801, lean_s1554, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1803 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by andElim lean_s1468, 36
let lean_s1804 := by R2 lean_s1802, lean_s1803, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1805 := by R2 lean_s1804, lean_s1653, (Eq (Sum (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1806 := by R2 lean_s1805, lean_s1617, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1807 := by R2 lean_s1806, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1808 := by R2 lean_s1807, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1809 := by R2 lean_s1808, lean_s1760, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1810 := by R1 lean_s1809, lean_s1624, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s1811 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 5))]
have lean_s1812 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
  (scope (fun lean_a95 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
    (scope (fun lean_a96 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
          (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
            (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
              (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                (scope (fun lean_a102 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a103 : (Eq y (Int.ofNat 5)) =>
                    let lean_s1812 := by timed And.intro lean_a96 lean_a101
                    let lean_s1813 := by timed And.intro lean_a100 lean_s1812
                    let lean_s1814 := by timed And.intro lean_a103 lean_s1813
                    let lean_s1815 := by timed And.intro lean_a95 lean_s1814
                    let lean_s1816 := by timed And.intro lean_a102 lean_s1815
                    let lean_s1817 := by timed And.intro lean_a99 lean_s1816
                    let lean_s1818 := by timed And.intro lean_a97 lean_s1817
                    have lean_s1819 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a98 lean_s1818
                    have lean_s1820 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                                        have lean_s1820 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a99
                                        have lean_s1821 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1820
                                        let lean_s1822 := by timed flipCongrArg lean_s1821 [Sum]
                                        have lean_s1823 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a101
                                        have lean_s1824 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s1823
                                        have lean_s1825 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s1824 [Succ]
                                        have lean_s1826 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a100
                                        have lean_s1827 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1826
                                        have lean_s1828 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s1825 lean_s1827
                                        have lean_s1829 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed congr lean_s1822 lean_s1828
                                        have lean_s1830 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 5) (Int.ofNat 0))) := by timed Eq.symm lean_a98
                                        have lean_s1831 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1830
                                        have lean_s1832 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1829 lean_s1831
                                        have lean_s1833 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1832 [Pred]
                                        have lean_s1834 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a97
                                        have lean_s1835 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1834
                                        have lean_s1836 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1833 lean_s1835
                                        let lean_s1837 := by timed flipCongrArg lean_s1836 [Sum]
                                        let lean_s1838 := by timed flipCongrArg lean_s1824 [Sum]
                                        let lean_s1839 := by timed flipCongrArg lean_s1821 [Sum]
                                        have lean_s1840 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1839 lean_s1824
                                        have lean_s1841 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a104
                                        have lean_s1842 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1841
                                        have lean_s1843 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s1840 lean_s1842
                                        have lean_s1844 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1843 [Pred]
                                        have lean_s1845 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a103
                                        have lean_s1846 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1845
                                        have lean_s1847 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1844 lean_s1846
                                        have lean_s1848 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s1838 lean_s1847
                                        have lean_s1849 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a102
                                        have lean_s1850 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1849
                                        have lean_s1851 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1848 lean_s1850
                                        have lean_s1852 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s1837 lean_s1851
                                        have lean_s1853 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a96
                                        have lean_s1854 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s1853
                                        have lean_s1855 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed Eq.trans lean_s1852 lean_s1854
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1855
                      ))))))))))))))))))
                    have lean_s1821 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1820, 9
                    have lean_s1822 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) := by timed modusPonens lean_s1819 lean_s1821
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) from lean_s1822
  ))))))))))))))))))
have lean_s1813 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by liftOrNToImp lean_s1812, 9
have lean_s1814 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))) := by timed impliesElim lean_s1813
have lean_s1815 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0))))))))))) := by R1 lean_s1811, lean_s1814, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s1816 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s1815, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1817 := by R1 lean_s1810, lean_s1816, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
let lean_s1818 := by R2 lean_s1817, lean_s1786, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1819 := by R2 lean_s1818, lean_s1636, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1820 := by R2 lean_s1819, lean_s1554, (Eq (Sum (Int.ofNat 5) (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1821 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by andElim lean_s1468, 45
let lean_s1822 := by R2 lean_s1820, lean_s1821, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1823 := by R2 lean_s1822, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1824 := by R2 lean_s1823, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1825 := by R2 lean_s1824, lean_s1760, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1826 : (Or (Not (Eq y (Int.ofNat 5))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 5))) (Not (Eq y (Int.ofNat 5)))))))) := by R1 lean_s1825, lean_s1624, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 0)), [(- 1), 0]
have lean_s1827 : (Or (Not (Eq y (Int.ofNat 5))) (Eq x (Int.ofNat 0))) := by factor lean_s1826, 5
have lean_s1828 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 5)))) := by permutateOr lean_s1827, [1, 0], (- 1)
let lean_s1829 := by R1 lean_s1747, lean_s1828, (Eq y (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s1830 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 2))]
have lean_s1831 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 2)) =>
                    let lean_s1831 := by timed And.intro lean_a97 lean_a99
                    let lean_s1832 := by timed And.intro lean_a101 lean_s1831
                    let lean_s1833 := by timed And.intro lean_a104 lean_s1832
                    let lean_s1834 := by timed And.intro lean_a96 lean_s1833
                    let lean_s1835 := by timed And.intro lean_a103 lean_s1834
                    let lean_s1836 := by timed And.intro lean_a100 lean_s1835
                    let lean_s1837 := by timed And.intro lean_a98 lean_s1836
                    have lean_s1838 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a102 lean_s1837
                    have lean_s1839 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                                        have lean_s1839 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a99
                                        have lean_s1840 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1839
                                        let lean_s1841 := by timed flipCongrArg lean_s1840 [Sum]
                                        have lean_s1842 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a101
                                        have lean_s1843 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s1842
                                        have lean_s1844 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s1843 [Succ]
                                        have lean_s1845 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a100
                                        have lean_s1846 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1845
                                        have lean_s1847 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s1844 lean_s1846
                                        have lean_s1848 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s1841 lean_s1847
                                        have lean_s1849 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a98
                                        have lean_s1850 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1849
                                        have lean_s1851 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1848 lean_s1850
                                        have lean_s1852 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1851 [Pred]
                                        have lean_s1853 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a97
                                        have lean_s1854 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1853
                                        have lean_s1855 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1852 lean_s1854
                                        let lean_s1856 := by timed flipCongrArg lean_s1855 [Sum]
                                        let lean_s1857 := by timed flipCongrArg lean_s1843 [Sum]
                                        let lean_s1858 := by timed flipCongrArg lean_s1840 [Sum]
                                        have lean_s1859 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s1858 lean_s1843
                                        have lean_s1860 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a104
                                        have lean_s1861 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1860
                                        have lean_s1862 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s1859 lean_s1861
                                        have lean_s1863 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1862 [Pred]
                                        have lean_s1864 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a103
                                        have lean_s1865 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1864
                                        have lean_s1866 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1863 lean_s1865
                                        have lean_s1867 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1857 lean_s1866
                                        have lean_s1868 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a102
                                        have lean_s1869 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s1868
                                        have lean_s1870 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1867 lean_s1869
                                        have lean_s1871 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s1856 lean_s1870
                                        have lean_s1872 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a96
                                        have lean_s1873 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s1872
                                        have lean_s1874 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s1871 lean_s1873
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1874
                      ))))))))))))))))))
                    have lean_s1840 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1839, 9
                    have lean_s1841 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s1838 lean_s1840
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1841
  ))))))))))))))))))
have lean_s1832 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1831, 9
have lean_s1833 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s1832
have lean_s1834 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s1830, lean_s1833, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s1835 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s1834, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1836 := by R2 lean_s1835, lean_s1595, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1837 := by R2 lean_s1836, lean_s1708, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1838 := by R2 lean_s1837, lean_s1498, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1839 := by R2 lean_s1838, lean_s1655, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1840 := by R2 lean_s1839, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1841 := by R2 lean_s1840, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1842 := by R2 lean_s1841, lean_s1564, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1843 := by R1 lean_s1842, lean_s1483, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
let lean_s1844 := by R2 lean_s1843, lean_s1509, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1845 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 2))]
have lean_s1846 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 2)) =>
                    let lean_s1846 := by timed And.intro lean_a97 lean_a101
                    let lean_s1847 := by timed And.intro lean_a100 lean_s1846
                    let lean_s1848 := by timed And.intro lean_a104 lean_s1847
                    let lean_s1849 := by timed And.intro lean_a96 lean_s1848
                    let lean_s1850 := by timed And.intro lean_a103 lean_s1849
                    let lean_s1851 := by timed And.intro lean_a102 lean_s1850
                    let lean_s1852 := by timed And.intro lean_a98 lean_s1851
                    have lean_s1853 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a99 lean_s1852
                    have lean_s1854 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
                                        have lean_s1854 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a99
                                        have lean_s1855 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s1854
                                        let lean_s1856 := by timed flipCongrArg lean_s1855 [Sum]
                                        have lean_s1857 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a101
                                        have lean_s1858 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s1857
                                        have lean_s1859 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s1858 [Succ]
                                        have lean_s1860 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a100
                                        have lean_s1861 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1860
                                        have lean_s1862 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s1859 lean_s1861
                                        have lean_s1863 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed congr lean_s1856 lean_s1862
                                        have lean_s1864 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 4) (Int.ofNat 3))) := by timed Eq.symm lean_a98
                                        have lean_s1865 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) := by timed Eq.symm lean_s1864
                                        have lean_s1866 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1863 lean_s1865
                                        have lean_s1867 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1866 [Pred]
                                        have lean_s1868 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a97
                                        have lean_s1869 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1868
                                        have lean_s1870 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1867 lean_s1869
                                        let lean_s1871 := by timed flipCongrArg lean_s1870 [Sum]
                                        let lean_s1872 := by timed flipCongrArg lean_s1858 [Sum]
                                        let lean_s1873 := by timed flipCongrArg lean_s1855 [Sum]
                                        have lean_s1874 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s1873 lean_s1858
                                        have lean_s1875 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a104
                                        have lean_s1876 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s1875
                                        have lean_s1877 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s1874 lean_s1876
                                        have lean_s1878 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1877 [Pred]
                                        have lean_s1879 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a103
                                        have lean_s1880 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1879
                                        have lean_s1881 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1878 lean_s1880
                                        have lean_s1882 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s1872 lean_s1881
                                        have lean_s1883 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a102
                                        have lean_s1884 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s1883
                                        have lean_s1885 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1882 lean_s1884
                                        have lean_s1886 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s1871 lean_s1885
                                        have lean_s1887 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a96
                                        have lean_s1888 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s1887
                                        have lean_s1889 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s1886 lean_s1888
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1889
                      ))))))))))))))))))
                    have lean_s1855 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1854, 9
                    have lean_s1856 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s1853 lean_s1855
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1856
  ))))))))))))))))))
have lean_s1847 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1846, 9
have lean_s1848 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s1847
have lean_s1849 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s1845, lean_s1848, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s1850 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s1849, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1851 := by R1 lean_s1844, lean_s1850, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s1852 := by R2 lean_s1851, lean_s1469, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1853 := by R2 lean_s1852, lean_s1821, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1854 := by R2 lean_s1853, lean_s1803, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1855 := by R2 lean_s1854, lean_s1690, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1856 := by R2 lean_s1855, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1857 := by R2 lean_s1856, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1858 := by R2 lean_s1857, lean_s1564, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1859 := by R1 lean_s1858, lean_s1483, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
let lean_s1860 := by R1 lean_s1859, lean_s1605, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1861 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 1))]
have lean_s1862 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 1)) =>
                    let lean_s1862 := by timed And.intro lean_a97 lean_a100
                    let lean_s1863 := by timed And.intro lean_a99 lean_s1862
                    let lean_s1864 := by timed And.intro lean_a104 lean_s1863
                    let lean_s1865 := by timed And.intro lean_a96 lean_s1864
                    let lean_s1866 := by timed And.intro lean_a103 lean_s1865
                    let lean_s1867 := by timed And.intro lean_a101 lean_s1866
                    let lean_s1868 := by timed And.intro lean_a98 lean_s1867
                    have lean_s1869 : (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)))))))))) := by timed And.intro lean_a102 lean_s1868
                    have lean_s1870 : (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) =>
                                        have lean_s1870 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a99
                                        have lean_s1871 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s1870
                                        let lean_s1872 := by timed flipCongrArg lean_s1871 [Sum]
                                        have lean_s1873 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a101
                                        have lean_s1874 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s1873
                                        have lean_s1875 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s1874 [Succ]
                                        have lean_s1876 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a100
                                        have lean_s1877 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1876
                                        have lean_s1878 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s1875 lean_s1877
                                        have lean_s1879 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s1872 lean_s1878
                                        have lean_s1880 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a98
                                        have lean_s1881 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s1880
                                        have lean_s1882 : (Eq (Sum x (Succ y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1879 lean_s1881
                                        have lean_s1883 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1882 [Pred]
                                        have lean_s1884 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a97
                                        have lean_s1885 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1884
                                        have lean_s1886 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1883 lean_s1885
                                        let lean_s1887 := by timed flipCongrArg lean_s1886 [Sum]
                                        let lean_s1888 := by timed flipCongrArg lean_s1874 [Sum]
                                        let lean_s1889 := by timed flipCongrArg lean_s1871 [Sum]
                                        have lean_s1890 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed congr lean_s1889 lean_s1874
                                        have lean_s1891 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 3) (Int.ofNat 1))) := by timed Eq.symm lean_a104
                                        have lean_s1892 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) := by timed Eq.symm lean_s1891
                                        have lean_s1893 : (Eq (Sum x y) (Int.ofNat 4)) := by timed Eq.trans lean_s1890 lean_s1892
                                        have lean_s1894 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1893 [Pred]
                                        have lean_s1895 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a103
                                        have lean_s1896 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1895
                                        have lean_s1897 : (Eq (Pred (Sum x y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1894 lean_s1896
                                        have lean_s1898 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed congr lean_s1888 lean_s1897
                                        have lean_s1899 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 1) (Int.ofNat 3))) := by timed Eq.symm lean_a102
                                        have lean_s1900 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s1899
                                        have lean_s1901 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1898 lean_s1900
                                        have lean_s1902 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1887 lean_s1901
                                        have lean_s1903 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a96
                                        have lean_s1904 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s1903
                                        have lean_s1905 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s1902 lean_s1904
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1905
                      ))))))))))))))))))
                    have lean_s1871 : (Implies (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1870, 9
                    have lean_s1872 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s1869 lean_s1871
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s1872
  ))))))))))))))))))
have lean_s1863 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s1862, 9
have lean_s1864 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s1863
have lean_s1865 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s1861, lean_s1864, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s1866 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s1865, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1867 := by R2 lean_s1866, lean_s1493, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1868 := by R2 lean_s1867, lean_s1557, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1869 := by R2 lean_s1868, lean_s1576, (Eq (Sum (Int.ofNat 3) (Int.ofNat 1)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1870 := by R2 lean_s1869, lean_s1498, (Eq (Sum (Int.ofNat 1) (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1871 := by R2 lean_s1870, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1872 := by R2 lean_s1871, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1873 := by R2 lean_s1872, lean_s1622, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1874 := by R1 lean_s1873, lean_s1602, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
let lean_s1875 := by R2 lean_s1874, lean_s1509, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1876 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 1))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 1))]
have lean_s1877 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
              (scope (fun lean_a102 : (Eq x (Int.ofNat 1)) =>
                (scope (fun lean_a103 : (Eq y (Int.ofNat 1)) =>
                  let lean_s1877 := by timed And.intro lean_a99 lean_a97
                  let lean_s1878 := by timed And.intro lean_a103 lean_s1877
                  let lean_s1879 := by timed And.intro lean_a96 lean_s1878
                  let lean_s1880 := by timed And.intro lean_a102 lean_s1879
                  let lean_s1881 := by timed And.intro lean_a100 lean_s1880
                  let lean_s1882 := by timed And.intro lean_a98 lean_s1881
                  have lean_s1883 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))))))))) := by timed And.intro lean_a101 lean_s1882
                  have lean_s1884 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))))))))) :=
                    (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) =>
                      (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                        (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) =>
                          (scope (fun lean_a99 : (Eq x (Int.ofNat 1)) =>
                            (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                              (scope (fun lean_a101 : (Eq y (Int.ofNat 1)) =>
                                (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                                  (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                    have lean_s1884 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a99
                                    have lean_s1885 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1884
                                    let lean_s1886 := by timed flipCongrArg lean_s1885 [Sum]
                                    have lean_s1887 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a101
                                    have lean_s1888 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s1887
                                    have lean_s1889 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s1888 [Succ]
                                    have lean_s1890 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a100
                                    have lean_s1891 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1890
                                    have lean_s1892 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s1889 lean_s1891
                                    have lean_s1893 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed congr lean_s1886 lean_s1892
                                    have lean_s1894 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 1) (Int.ofNat 2))) := by timed Eq.symm lean_a98
                                    have lean_s1895 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s1894
                                    have lean_s1896 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1893 lean_s1895
                                    have lean_s1897 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1896 [Pred]
                                    have lean_s1898 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a97
                                    have lean_s1899 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1898
                                    have lean_s1900 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1897 lean_s1899
                                    let lean_s1901 := by timed flipCongrArg lean_s1900 [Sum]
                                    let lean_s1902 := by timed flipCongrArg lean_s1888 [Sum]
                                    let lean_s1903 := by timed flipCongrArg lean_s1885 [Sum]
                                    have lean_s1904 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1903 lean_s1888
                                    have lean_s1905 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed Eq.symm lean_a102
                                    have lean_s1906 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1905
                                    have lean_s1907 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s1904 lean_s1906
                                    have lean_s1908 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1907 [Pred]
                                    have lean_s1909 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a103
                                    have lean_s1910 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1909
                                    have lean_s1911 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1908 lean_s1910
                                    have lean_s1912 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s1902 lean_s1911
                                    have lean_s1913 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1912 lean_s1906
                                    have lean_s1914 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed congr lean_s1901 lean_s1913
                                    have lean_s1915 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 2) (Int.ofNat 2))) := by timed Eq.symm lean_a96
                                    have lean_s1916 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) := by timed Eq.symm lean_s1915
                                    have lean_s1917 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1914 lean_s1916
                                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1917
                    ))))))))))))))))
                  have lean_s1885 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1884, 8
                  have lean_s1886 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1883 lean_s1885
                  show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1886
  ))))))))))))))))
have lean_s1878 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1877, 8
have lean_s1879 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1878
have lean_s1880 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)))))))))) := by R1 lean_s1876, lean_s1879, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 1))))))))), [(- 1), (- 1)]
have lean_s1881 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4))))))))))) := by permutateOr lean_s1880, [8, 6, 7, 0, 1, 2, 3, 4, 5], (- 1)
let lean_s1882 := by R1 lean_s1875, lean_s1881, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s1883 := by R2 lean_s1882, lean_s1708, (Eq (Sum (Int.ofNat 2) (Int.ofNat 2)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1884 := by R2 lean_s1883, lean_s1655, (Eq (Sum (Int.ofNat 1) (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1885 := by R2 lean_s1884, lean_s1535, (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1886 := by R2 lean_s1885, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1887 := by R2 lean_s1886, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1888 := by R2 lean_s1887, lean_s1622, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1889 := by R1 lean_s1888, lean_s1506, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
have lean_s1890 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 1))]
have lean_s1891 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 1)) =>
                    let lean_s1891 := by timed And.intro lean_a98 lean_a100
                    let lean_s1892 := by timed And.intro lean_a99 lean_s1891
                    let lean_s1893 := by timed And.intro lean_a104 lean_s1892
                    let lean_s1894 := by timed And.intro lean_a96 lean_s1893
                    let lean_s1895 := by timed And.intro lean_a103 lean_s1894
                    let lean_s1896 := by timed And.intro lean_a101 lean_s1895
                    let lean_s1897 := by timed And.intro lean_a97 lean_s1896
                    have lean_s1898 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a102 lean_s1897
                    have lean_s1899 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                                        have lean_s1899 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a99
                                        have lean_s1900 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s1899
                                        let lean_s1901 := by timed flipCongrArg lean_s1900 [Sum]
                                        have lean_s1902 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a101
                                        have lean_s1903 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s1902
                                        have lean_s1904 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s1903 [Succ]
                                        have lean_s1905 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a100
                                        have lean_s1906 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s1905
                                        have lean_s1907 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s1904 lean_s1906
                                        have lean_s1908 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s1901 lean_s1907
                                        have lean_s1909 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a98
                                        have lean_s1910 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s1909
                                        have lean_s1911 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1908 lean_s1910
                                        have lean_s1912 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1911 [Pred]
                                        have lean_s1913 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a97
                                        have lean_s1914 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1913
                                        have lean_s1915 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1912 lean_s1914
                                        let lean_s1916 := by timed flipCongrArg lean_s1915 [Sum]
                                        let lean_s1917 := by timed flipCongrArg lean_s1903 [Sum]
                                        let lean_s1918 := by timed flipCongrArg lean_s1900 [Sum]
                                        have lean_s1919 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s1918 lean_s1903
                                        have lean_s1920 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a104
                                        have lean_s1921 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s1920
                                        have lean_s1922 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s1919 lean_s1921
                                        have lean_s1923 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1922 [Pred]
                                        have lean_s1924 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a103
                                        have lean_s1925 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1924
                                        have lean_s1926 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1923 lean_s1925
                                        have lean_s1927 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s1917 lean_s1926
                                        have lean_s1928 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a102
                                        have lean_s1929 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1928
                                        have lean_s1930 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1927 lean_s1929
                                        have lean_s1931 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1916 lean_s1930
                                        have lean_s1932 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a96
                                        have lean_s1933 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1932
                                        have lean_s1934 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed Eq.trans lean_s1931 lean_s1933
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1934
                      ))))))))))))))))))
                    have lean_s1900 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1899, 9
                    have lean_s1901 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) := by timed modusPonens lean_s1898 lean_s1900
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) from lean_s1901
  ))))))))))))))))))
have lean_s1892 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by liftOrNToImp lean_s1891, 9
have lean_s1893 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))) := by timed impliesElim lean_s1892
have lean_s1894 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4))))))))))) := by R1 lean_s1890, lean_s1893, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s1895 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s1894, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1896 := by R1 lean_s1889, lean_s1895, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s1897 := by R2 lean_s1896, lean_s1786, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1898 := by R2 lean_s1897, lean_s1821, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1899 := by R2 lean_s1898, lean_s1471, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1900 := by R2 lean_s1899, lean_s1520, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1901 := by R2 lean_s1900, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1902 := by R2 lean_s1901, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1903 := by R2 lean_s1902, lean_s1622, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1904 := by R1 lean_s1903, lean_s1506, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 4)), [(- 1), 0]
let lean_s1905 := by R1 lean_s1904, lean_s1679, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s1906 : (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))))) := by R1 lean_s1905, lean_s1745, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s1907 : (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))) := by factor lean_s1906, (- 1)
let lean_s1908 := by R1 lean_s1907, lean_s1828, (Eq y (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s1909 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), (Eq x (Int.ofNat 2)), (Eq y (Int.ofNat 4))]
have lean_s1910 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 2)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 4)) =>
                    let lean_s1910 := by timed And.intro lean_a97 lean_a100
                    let lean_s1911 := by timed And.intro lean_a102 lean_s1910
                    let lean_s1912 := by timed And.intro lean_a104 lean_s1911
                    let lean_s1913 := by timed And.intro lean_a96 lean_s1912
                    let lean_s1914 := by timed And.intro lean_a103 lean_s1913
                    let lean_s1915 := by timed And.intro lean_a101 lean_s1914
                    let lean_s1916 := by timed And.intro lean_a98 lean_s1915
                    have lean_s1917 : (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)))))))))) := by timed And.intro lean_a99 lean_s1916
                    have lean_s1918 : (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 2)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) =>
                                        have lean_s1918 : (Eq (Int.ofNat 2) x) := by timed Eq.symm lean_a99
                                        have lean_s1919 : (Eq x (Int.ofNat 2)) := by timed Eq.symm lean_s1918
                                        let lean_s1920 := by timed flipCongrArg lean_s1919 [Sum]
                                        have lean_s1921 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a101
                                        have lean_s1922 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s1921
                                        have lean_s1923 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s1922 [Succ]
                                        have lean_s1924 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a100
                                        have lean_s1925 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1924
                                        have lean_s1926 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s1923 lean_s1925
                                        have lean_s1927 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s1920 lean_s1926
                                        have lean_s1928 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a98
                                        have lean_s1929 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s1928
                                        have lean_s1930 : (Eq (Sum x (Succ y)) (Int.ofNat 1)) := by timed Eq.trans lean_s1927 lean_s1929
                                        have lean_s1931 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1930 [Pred]
                                        have lean_s1932 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a97
                                        have lean_s1933 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1932
                                        have lean_s1934 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1931 lean_s1933
                                        let lean_s1935 := by timed flipCongrArg lean_s1934 [Sum]
                                        let lean_s1936 := by timed flipCongrArg lean_s1922 [Sum]
                                        let lean_s1937 := by timed flipCongrArg lean_s1919 [Sum]
                                        have lean_s1938 : (Eq (Sum x y) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed congr lean_s1937 lean_s1922
                                        have lean_s1939 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 2) (Int.ofNat 4))) := by timed Eq.symm lean_a104
                                        have lean_s1940 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) := by timed Eq.symm lean_s1939
                                        have lean_s1941 : (Eq (Sum x y) (Int.ofNat 0)) := by timed Eq.trans lean_s1938 lean_s1940
                                        have lean_s1942 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1941 [Pred]
                                        have lean_s1943 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a103
                                        have lean_s1944 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1943
                                        have lean_s1945 : (Eq (Pred (Sum x y)) (Int.ofNat 5)) := by timed Eq.trans lean_s1942 lean_s1944
                                        have lean_s1946 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s1936 lean_s1945
                                        have lean_s1947 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a102
                                        have lean_s1948 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s1947
                                        have lean_s1949 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1946 lean_s1948
                                        have lean_s1950 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s1935 lean_s1949
                                        have lean_s1951 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a96
                                        have lean_s1952 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s1951
                                        have lean_s1953 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1950 lean_s1952
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1953
                      ))))))))))))))))))
                    have lean_s1919 : (Implies (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 2)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1918, 9
                    have lean_s1920 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1917 lean_s1919
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1920
  ))))))))))))))))))
have lean_s1911 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1910, 9
have lean_s1912 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1911
have lean_s1913 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s1909, lean_s1912, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 2)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s1914 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s1913, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1915 := by R2 lean_s1914, lean_s1704, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1916 := by R2 lean_s1915, lean_s1803, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1917 := by R2 lean_s1916, lean_s1559, (Eq (Sum (Int.ofNat 2) (Int.ofNat 4)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1918 := by R2 lean_s1917, lean_s1475, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1919 := by R2 lean_s1918, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1920 := by R2 lean_s1919, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1921 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by andElim lean_s1468, 11
let lean_s1922 := by R2 lean_s1920, lean_s1921, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1923 := by R1 lean_s1922, lean_s1660, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1924 := by R2 lean_s1923, lean_s1509, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s1925 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), (Eq x (Int.ofNat 5)), (Eq y (Int.ofNat 4))]
have lean_s1926 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 5)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 4)) =>
                    let lean_s1926 := by timed And.intro lean_a97 lean_a101
                    let lean_s1927 := by timed And.intro lean_a100 lean_s1926
                    let lean_s1928 := by timed And.intro lean_a104 lean_s1927
                    let lean_s1929 := by timed And.intro lean_a96 lean_s1928
                    let lean_s1930 := by timed And.intro lean_a103 lean_s1929
                    let lean_s1931 := by timed And.intro lean_a102 lean_s1930
                    let lean_s1932 := by timed And.intro lean_a98 lean_s1931
                    have lean_s1933 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a99 lean_s1932
                    have lean_s1934 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 5)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
                                        have lean_s1934 : (Eq (Int.ofNat 5) x) := by timed Eq.symm lean_a99
                                        have lean_s1935 : (Eq x (Int.ofNat 5)) := by timed Eq.symm lean_s1934
                                        let lean_s1936 := by timed flipCongrArg lean_s1935 [Sum]
                                        have lean_s1937 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a101
                                        have lean_s1938 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s1937
                                        have lean_s1939 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s1938 [Succ]
                                        have lean_s1940 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a100
                                        have lean_s1941 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1940
                                        have lean_s1942 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s1939 lean_s1941
                                        have lean_s1943 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s1936 lean_s1942
                                        have lean_s1944 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 5) (Int.ofNat 5))) := by timed Eq.symm lean_a98
                                        have lean_s1945 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1944
                                        have lean_s1946 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1943 lean_s1945
                                        have lean_s1947 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s1946 [Pred]
                                        have lean_s1948 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a97
                                        have lean_s1949 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1948
                                        have lean_s1950 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s1947 lean_s1949
                                        let lean_s1951 := by timed flipCongrArg lean_s1950 [Sum]
                                        let lean_s1952 := by timed flipCongrArg lean_s1938 [Sum]
                                        let lean_s1953 := by timed flipCongrArg lean_s1935 [Sum]
                                        have lean_s1954 : (Eq (Sum x y) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s1953 lean_s1938
                                        have lean_s1955 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a104
                                        have lean_s1956 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s1955
                                        have lean_s1957 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s1954 lean_s1956
                                        have lean_s1958 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1957 [Pred]
                                        have lean_s1959 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a103
                                        have lean_s1960 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1959
                                        have lean_s1961 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1958 lean_s1960
                                        have lean_s1962 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed congr lean_s1952 lean_s1961
                                        have lean_s1963 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 4) (Int.ofNat 2))) := by timed Eq.symm lean_a102
                                        have lean_s1964 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) := by timed Eq.symm lean_s1963
                                        have lean_s1965 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 0)) := by timed Eq.trans lean_s1962 lean_s1964
                                        have lean_s1966 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed congr lean_s1951 lean_s1965
                                        have lean_s1967 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 3) (Int.ofNat 0))) := by timed Eq.symm lean_a96
                                        have lean_s1968 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) := by timed Eq.symm lean_s1967
                                        have lean_s1969 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed Eq.trans lean_s1966 lean_s1968
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1969
                      ))))))))))))))))))
                    have lean_s1935 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1934, 9
                    have lean_s1936 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) := by timed modusPonens lean_s1933 lean_s1935
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) from lean_s1936
  ))))))))))))))))))
have lean_s1927 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by liftOrNToImp lean_s1926, 9
have lean_s1928 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))) := by timed impliesElim lean_s1927
have lean_s1929 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3))))))))))) := by R1 lean_s1925, lean_s1928, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 5)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s1930 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)) (Or (Not (Eq x (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s1929, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1931 := by R1 lean_s1924, lean_s1930, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
let lean_s1932 := by R2 lean_s1931, lean_s1786, (Eq (Sum (Int.ofNat 5) (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1933 := by R2 lean_s1932, lean_s1634, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1934 := by R2 lean_s1933, lean_s1821, (Eq (Sum (Int.ofNat 4) (Int.ofNat 2)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1935 := by R2 lean_s1934, lean_s1496, (Eq (Sum (Int.ofNat 3) (Int.ofNat 0)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1936 := by R2 lean_s1935, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1937 := by R2 lean_s1936, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1938 := by R2 lean_s1937, lean_s1921, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1939 := by R1 lean_s1938, lean_s1660, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1940 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), (Eq x (Int.ofNat 3)), (Eq y (Int.ofNat 4))]
have lean_s1941 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 3)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 4)) =>
                    let lean_s1941 := by timed And.intro lean_a97 lean_a100
                    let lean_s1942 := by timed And.intro lean_a102 lean_s1941
                    let lean_s1943 := by timed And.intro lean_a104 lean_s1942
                    let lean_s1944 := by timed And.intro lean_a96 lean_s1943
                    let lean_s1945 := by timed And.intro lean_a103 lean_s1944
                    let lean_s1946 := by timed And.intro lean_a101 lean_s1945
                    let lean_s1947 := by timed And.intro lean_a98 lean_s1946
                    have lean_s1948 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a99 lean_s1947
                    have lean_s1949 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 3)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) =>
                                        have lean_s1949 : (Eq (Int.ofNat 3) x) := by timed Eq.symm lean_a99
                                        have lean_s1950 : (Eq x (Int.ofNat 3)) := by timed Eq.symm lean_s1949
                                        let lean_s1951 := by timed flipCongrArg lean_s1950 [Sum]
                                        have lean_s1952 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a101
                                        have lean_s1953 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s1952
                                        have lean_s1954 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s1953 [Succ]
                                        have lean_s1955 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a100
                                        have lean_s1956 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1955
                                        have lean_s1957 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s1954 lean_s1956
                                        have lean_s1958 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s1951 lean_s1957
                                        have lean_s1959 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a98
                                        have lean_s1960 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s1959
                                        have lean_s1961 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s1958 lean_s1960
                                        have lean_s1962 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s1961 [Pred]
                                        have lean_s1963 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a97
                                        have lean_s1964 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1963
                                        have lean_s1965 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s1962 lean_s1964
                                        let lean_s1966 := by timed flipCongrArg lean_s1965 [Sum]
                                        let lean_s1967 := by timed flipCongrArg lean_s1953 [Sum]
                                        let lean_s1968 := by timed flipCongrArg lean_s1950 [Sum]
                                        have lean_s1969 : (Eq (Sum x y) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed congr lean_s1968 lean_s1953
                                        have lean_s1970 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 3) (Int.ofNat 4))) := by timed Eq.symm lean_a104
                                        have lean_s1971 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) := by timed Eq.symm lean_s1970
                                        have lean_s1972 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s1969 lean_s1971
                                        have lean_s1973 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s1972 [Pred]
                                        have lean_s1974 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a103
                                        have lean_s1975 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s1974
                                        have lean_s1976 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1973 lean_s1975
                                        have lean_s1977 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed congr lean_s1967 lean_s1976
                                        have lean_s1978 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 4) (Int.ofNat 0))) := by timed Eq.symm lean_a102
                                        have lean_s1979 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) := by timed Eq.symm lean_s1978
                                        have lean_s1980 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 4)) := by timed Eq.trans lean_s1977 lean_s1979
                                        have lean_s1981 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s1966 lean_s1980
                                        have lean_s1982 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a96
                                        have lean_s1983 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1982
                                        have lean_s1984 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s1981 lean_s1983
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1984
                      ))))))))))))))))))
                    have lean_s1950 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 3)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1949, 9
                    have lean_s1951 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s1948 lean_s1950
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s1951
  ))))))))))))))))))
have lean_s1942 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s1941, 9
have lean_s1943 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s1942
have lean_s1944 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s1940, lean_s1943, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 3)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s1945 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)))))))))))) := by permutateOr lean_s1944, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1946 := by R1 lean_s1939, lean_s1945, (Eq x (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s1947 := by R2 lean_s1946, lean_s1473, (Eq (Sum (Int.ofNat 4) (Int.ofNat 0)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1948 := by R2 lean_s1947, lean_s1593, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1949 := by R2 lean_s1948, lean_s1595, (Eq (Sum (Int.ofNat 3) (Int.ofNat 4)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1950 := by R2 lean_s1949, lean_s1520, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1951 := by R2 lean_s1950, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1952 := by R2 lean_s1951, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1953 := by R2 lean_s1952, lean_s1921, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1954 := by R1 lean_s1953, lean_s1138, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
have lean_s1955 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), (Eq x (Int.ofNat 1)), (Eq y (Int.ofNat 4))]
have lean_s1956 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 1)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 4)) =>
                    let lean_s1956 := by timed And.intro lean_a98 lean_a99
                    let lean_s1957 := by timed And.intro lean_a101 lean_s1956
                    let lean_s1958 := by timed And.intro lean_a104 lean_s1957
                    let lean_s1959 := by timed And.intro lean_a96 lean_s1958
                    let lean_s1960 := by timed And.intro lean_a103 lean_s1959
                    let lean_s1961 := by timed And.intro lean_a100 lean_s1960
                    let lean_s1962 := by timed And.intro lean_a97 lean_s1961
                    have lean_s1963 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a102 lean_s1962
                    have lean_s1964 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 1)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) =>
                                        have lean_s1964 : (Eq (Int.ofNat 1) x) := by timed Eq.symm lean_a99
                                        have lean_s1965 : (Eq x (Int.ofNat 1)) := by timed Eq.symm lean_s1964
                                        let lean_s1966 := by timed flipCongrArg lean_s1965 [Sum]
                                        have lean_s1967 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a101
                                        have lean_s1968 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s1967
                                        have lean_s1969 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s1968 [Succ]
                                        have lean_s1970 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a100
                                        have lean_s1971 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1970
                                        have lean_s1972 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s1969 lean_s1971
                                        have lean_s1973 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed congr lean_s1966 lean_s1972
                                        have lean_s1974 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 1) (Int.ofNat 5))) := by timed Eq.symm lean_a98
                                        have lean_s1975 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s1974
                                        have lean_s1976 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s1973 lean_s1975
                                        have lean_s1977 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s1976 [Pred]
                                        have lean_s1978 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a97
                                        have lean_s1979 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s1978
                                        have lean_s1980 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s1977 lean_s1979
                                        let lean_s1981 := by timed flipCongrArg lean_s1980 [Sum]
                                        let lean_s1982 := by timed flipCongrArg lean_s1968 [Sum]
                                        let lean_s1983 := by timed flipCongrArg lean_s1965 [Sum]
                                        have lean_s1984 : (Eq (Sum x y) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed congr lean_s1983 lean_s1968
                                        have lean_s1985 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 1) (Int.ofNat 4))) := by timed Eq.symm lean_a104
                                        have lean_s1986 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1985
                                        have lean_s1987 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s1984 lean_s1986
                                        have lean_s1988 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s1987 [Pred]
                                        have lean_s1989 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a103
                                        have lean_s1990 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s1989
                                        have lean_s1991 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s1988 lean_s1990
                                        have lean_s1992 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1982 lean_s1991
                                        have lean_s1993 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a102
                                        have lean_s1994 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s1993
                                        have lean_s1995 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1992 lean_s1994
                                        have lean_s1996 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed congr lean_s1981 lean_s1995
                                        have lean_s1997 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 5) (Int.ofNat 2))) := by timed Eq.symm lean_a96
                                        have lean_s1998 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s1997
                                        have lean_s1999 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s1996 lean_s1998
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1999
                      ))))))))))))))))))
                    have lean_s1965 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 1)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1964, 9
                    have lean_s1966 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s1963 lean_s1965
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1966
  ))))))))))))))))))
have lean_s1957 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1956, 9
have lean_s1958 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s1957
have lean_s1959 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s1955, lean_s1958, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq x (Int.ofNat 1)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s1960 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 1))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)))))))))))) := by permutateOr lean_s1959, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1961 := by R1 lean_s1954, lean_s1960, (Eq x (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s1962 := by R2 lean_s1961, lean_s1613, (Eq (Sum (Int.ofNat 5) (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1963 := by R2 lean_s1962, lean_s1493, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1964 := by R2 lean_s1963, lean_s1617, (Eq (Sum (Int.ofNat 1) (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1965 := by R2 lean_s1964, lean_s1520, (Eq (Sum (Int.ofNat 1) (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1966 := by R2 lean_s1965, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s1967 := by R2 lean_s1966, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1968 := by R2 lean_s1967, lean_s1921, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1969 := by R1 lean_s1968, lean_s1483, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s1970 : (Or (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4)))))))))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Not (Eq y (Int.ofNat 4)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), (Eq x (Int.ofNat 4)), (Eq y (Int.ofNat 4))]
have lean_s1971 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 4)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 4)) =>
                    let lean_s1971 := by timed And.intro lean_a97 lean_a101
                    let lean_s1972 := by timed And.intro lean_a100 lean_s1971
                    let lean_s1973 := by timed And.intro lean_a104 lean_s1972
                    let lean_s1974 := by timed And.intro lean_a96 lean_s1973
                    let lean_s1975 := by timed And.intro lean_a103 lean_s1974
                    let lean_s1976 := by timed And.intro lean_a102 lean_s1975
                    let lean_s1977 := by timed And.intro lean_a98 lean_s1976
                    have lean_s1978 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a99 lean_s1977
                    have lean_s1979 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 4)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 4)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) =>
                                        have lean_s1979 : (Eq (Int.ofNat 4) x) := by timed Eq.symm lean_a99
                                        have lean_s1980 : (Eq x (Int.ofNat 4)) := by timed Eq.symm lean_s1979
                                        let lean_s1981 := by timed flipCongrArg lean_s1980 [Sum]
                                        have lean_s1982 : (Eq (Int.ofNat 4) y) := by timed Eq.symm lean_a101
                                        have lean_s1983 : (Eq y (Int.ofNat 4)) := by timed Eq.symm lean_s1982
                                        have lean_s1984 : (Eq (Succ y) (Succ (Int.ofNat 4))) := by timed flipCongrArg lean_s1983 [Succ]
                                        have lean_s1985 : (Eq (Int.ofNat 5) (Succ (Int.ofNat 4))) := by timed Eq.symm lean_a100
                                        have lean_s1986 : (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) := by timed Eq.symm lean_s1985
                                        have lean_s1987 : (Eq (Succ y) (Int.ofNat 5)) := by timed Eq.trans lean_s1984 lean_s1986
                                        have lean_s1988 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed congr lean_s1981 lean_s1987
                                        have lean_s1989 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 4) (Int.ofNat 5))) := by timed Eq.symm lean_a98
                                        have lean_s1990 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) := by timed Eq.symm lean_s1989
                                        have lean_s1991 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s1988 lean_s1990
                                        have lean_s1992 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s1991 [Pred]
                                        have lean_s1993 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a97
                                        have lean_s1994 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s1993
                                        have lean_s1995 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s1992 lean_s1994
                                        let lean_s1996 := by timed flipCongrArg lean_s1995 [Sum]
                                        let lean_s1997 := by timed flipCongrArg lean_s1983 [Sum]
                                        let lean_s1998 := by timed flipCongrArg lean_s1980 [Sum]
                                        have lean_s1999 : (Eq (Sum x y) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s1998 lean_s1983
                                        have lean_s2000 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 4) (Int.ofNat 4))) := by timed Eq.symm lean_a104
                                        have lean_s2001 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) := by timed Eq.symm lean_s2000
                                        have lean_s2002 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s1999 lean_s2001
                                        have lean_s2003 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2002 [Pred]
                                        have lean_s2004 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a103
                                        have lean_s2005 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2004
                                        have lean_s2006 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2003 lean_s2005
                                        have lean_s2007 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed congr lean_s1997 lean_s2006
                                        have lean_s2008 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 4) (Int.ofNat 1))) := by timed Eq.symm lean_a102
                                        have lean_s2009 : (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) := by timed Eq.symm lean_s2008
                                        have lean_s2010 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2007 lean_s2009
                                        have lean_s2011 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed congr lean_s1996 lean_s2010
                                        have lean_s2012 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 2) (Int.ofNat 5))) := by timed Eq.symm lean_a96
                                        have lean_s2013 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) := by timed Eq.symm lean_s2012
                                        have lean_s2014 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed Eq.trans lean_s2011 lean_s2013
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s2014
                      ))))))))))))))))))
                    have lean_s1980 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq y (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1979, 9
                    have lean_s1981 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) := by timed modusPonens lean_s1978 lean_s1980
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) from lean_s1981
  ))))))))))))))))))
have lean_s1972 : (Implies (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by liftOrNToImp lean_s1971, 9
have lean_s1973 : (Or (Not (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))) := by timed impliesElim lean_s1972
have lean_s1974 : (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1))))))))))) := by R1 lean_s1970, lean_s1973, (And (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 4)) (Eq y (Int.ofNat 4)))))))))), [(- 1), (- 1)]
have lean_s1975 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)) (Or (Not (Eq x (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s1974, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s1976 := by R1 lean_s1969, lean_s1975, (Eq x (Int.ofNat 4)), [(- 1), (- 1)]
let lean_s1977 := by R2 lean_s1976, lean_s1704, (Eq (Sum (Int.ofNat 4) (Int.ofNat 5)) (Int.ofNat 3)), [(- 1), 0]
let lean_s1978 := by R2 lean_s1977, lean_s1493, (Eq (Sum (Int.ofNat 4) (Int.ofNat 4)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1979 := by R2 lean_s1978, lean_s1471, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
let lean_s1980 := by R2 lean_s1979, lean_s1803, (Eq (Sum (Int.ofNat 2) (Int.ofNat 5)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1981 := by R2 lean_s1980, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s1982 := by R2 lean_s1981, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s1983 := by R2 lean_s1982, lean_s1921, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
have lean_s1984 : (Or (Not (Eq y (Int.ofNat 4))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 4))) (Not (Eq y (Int.ofNat 4)))))))) := by R1 lean_s1983, lean_s1483, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 1)), [(- 1), 0]
have lean_s1985 : (Or (Not (Eq y (Int.ofNat 4))) (Eq x (Int.ofNat 0))) := by factor lean_s1984, 5
have lean_s1986 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 4)))) := by permutateOr lean_s1985, [1, 0], (- 1)
have lean_s1987 : (Or (Not (Eq y (Int.ofNat 1))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 0))))) := by R1 lean_s1908, lean_s1986, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s1988 : (Or (Not (Eq y (Int.ofNat 1))) (Eq x (Int.ofNat 0))) := by factor lean_s1987, (- 1)
have lean_s1989 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 1)))) := by permutateOr lean_s1988, [1, 0], (- 1)
let lean_s1990 := by R1 lean_s1860, lean_s1989, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s1991 := by R1 lean_s1990, lean_s1679, (Eq x (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s1992 : (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq x (Int.ofNat 0)) (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 4)) (Or (Eq y (Int.ofNat 5)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))))))))) := by R1 lean_s1991, lean_s1745, (Eq x (Int.ofNat 2)), [(- 1), (- 1)]
have lean_s1993 : (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq x (Int.ofNat 0)) (Or (Eq y (Int.ofNat 4)) (Eq y (Int.ofNat 5))))) := by factor lean_s1992, (- 1)
let lean_s1994 := by R1 lean_s1993, lean_s1828, (Eq y (Int.ofNat 5)), [(- 1), (- 1)]
have lean_s1995 : (Or (Not (Eq y (Int.ofNat 2))) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 0))))) := by R1 lean_s1994, lean_s1986, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s1996 : (Or (Not (Eq y (Int.ofNat 2))) (Eq x (Int.ofNat 0))) := by factor lean_s1995, (- 1)
have lean_s1997 : (Or (Eq x (Int.ofNat 0)) (Not (Eq y (Int.ofNat 2)))) := by permutateOr lean_s1996, [1, 0], (- 1)
let lean_s1998 := by R1 lean_s1829, lean_s1997, (Eq y (Int.ofNat 2)), [(- 1), (- 1)]
let lean_s1999 := by R1 lean_s1998, lean_s1989, (Eq y (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s2000 : (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Or (Eq x (Int.ofNat 0)) (Eq x (Int.ofNat 0)))))) := by R1 lean_s1999, lean_s1986, (Eq y (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2001 : (Eq x (Int.ofNat 0)) := by factor lean_s2000, 4
let lean_s2002 := by R2 lean_s1139, lean_s2001, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2003 := by R2 lean_s2002, lean_s1481, (Eq (Succ (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2004 := by R2 lean_s2003, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2005 := by R2 lean_s2004, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2006 := by R2 lean_s2005, lean_s1539, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2007 := by R2 lean_s2006, lean_s1690, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
have lean_s2008 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by andElim lean_s1468, 24
have lean_s2009 : (Not (Eq y (Int.ofNat 0))) := by R2 lean_s2007, lean_s2008, (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2010 := by R1 lean_s1131, lean_s2009, (Eq y (Int.ofNat 0)), [(- 1), 0]
have lean_s2011 : (Or (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1)))))))))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 1)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 1))]
have lean_s2012 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 1)) =>
                    let lean_s2012 := by timed And.intro lean_a97 lean_a99
                    let lean_s2013 := by timed And.intro lean_a101 lean_s2012
                    let lean_s2014 := by timed And.intro lean_a104 lean_s2013
                    let lean_s2015 := by timed And.intro lean_a96 lean_s2014
                    let lean_s2016 := by timed And.intro lean_a103 lean_s2015
                    let lean_s2017 := by timed And.intro lean_a100 lean_s2016
                    let lean_s2018 := by timed And.intro lean_a98 lean_s2017
                    have lean_s2019 : (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)))))))))) := by timed And.intro lean_a102 lean_s2018
                    have lean_s2020 : (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 1)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) =>
                                        have lean_s2020 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a99
                                        have lean_s2021 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2020
                                        let lean_s2022 := by timed flipCongrArg lean_s2021 [Sum]
                                        have lean_s2023 : (Eq (Int.ofNat 1) y) := by timed Eq.symm lean_a101
                                        have lean_s2024 : (Eq y (Int.ofNat 1)) := by timed Eq.symm lean_s2023
                                        have lean_s2025 : (Eq (Succ y) (Succ (Int.ofNat 1))) := by timed flipCongrArg lean_s2024 [Succ]
                                        have lean_s2026 : (Eq (Int.ofNat 2) (Succ (Int.ofNat 1))) := by timed Eq.symm lean_a100
                                        have lean_s2027 : (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2026
                                        have lean_s2028 : (Eq (Succ y) (Int.ofNat 2)) := by timed Eq.trans lean_s2025 lean_s2027
                                        have lean_s2029 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s2022 lean_s2028
                                        have lean_s2030 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a98
                                        have lean_s2031 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s2030
                                        have lean_s2032 : (Eq (Sum x (Succ y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2029 lean_s2031
                                        have lean_s2033 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2032 [Pred]
                                        have lean_s2034 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a97
                                        have lean_s2035 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2034
                                        have lean_s2036 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2033 lean_s2035
                                        let lean_s2037 := by timed flipCongrArg lean_s2036 [Sum]
                                        let lean_s2038 := by timed flipCongrArg lean_s2024 [Sum]
                                        let lean_s2039 := by timed flipCongrArg lean_s2021 [Sum]
                                        have lean_s2040 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed congr lean_s2039 lean_s2024
                                        have lean_s2041 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 0) (Int.ofNat 1))) := by timed Eq.symm lean_a104
                                        have lean_s2042 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_s2041
                                        have lean_s2043 : (Eq (Sum x y) (Int.ofNat 1)) := by timed Eq.trans lean_s2040 lean_s2042
                                        have lean_s2044 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 1))) := by timed flipCongrArg lean_s2043 [Pred]
                                        have lean_s2045 : (Eq (Int.ofNat 0) (Pred (Int.ofNat 1))) := by timed Eq.symm lean_a103
                                        have lean_s2046 : (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) := by timed Eq.symm lean_s2045
                                        have lean_s2047 : (Eq (Pred (Sum x y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2044 lean_s2046
                                        have lean_s2048 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s2038 lean_s2047
                                        have lean_s2049 : (Eq (Int.ofNat 1) (Sum (Int.ofNat 1) (Int.ofNat 0))) := by timed Eq.symm lean_a102
                                        have lean_s2050 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) := by timed Eq.symm lean_s2049
                                        have lean_s2051 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 1)) := by timed Eq.trans lean_s2048 lean_s2050
                                        have lean_s2052 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed congr lean_s2037 lean_s2051
                                        have lean_s2053 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 1) (Int.ofNat 1))) := by timed Eq.symm lean_a96
                                        have lean_s2054 : (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) := by timed Eq.symm lean_s2053
                                        have lean_s2055 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2052 lean_s2054
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2055
                      ))))))))))))))))))
                    have lean_s2021 : (Implies (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq y (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2020, 9
                    have lean_s2022 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2019 lean_s2021
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2022
  ))))))))))))))))))
have lean_s2013 : (Implies (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2012, 9
have lean_s2014 : (Or (Not (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2013
have lean_s2015 : (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 1))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2011, lean_s2014, (And (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 1)))))))))), [(- 1), (- 1)]
have lean_s2016 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 1))) (Or (Not (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s2015, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2017 := by R1 lean_s2016, lean_s1602, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
let lean_s2018 := by R2 lean_s2017, lean_s2001, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2019 := by R2 lean_s2018, lean_s1622, (Eq (Succ (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2020 := by R2 lean_s2019, lean_s1502, (Eq (Pred (Int.ofNat 1)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2021 := by R2 lean_s2020, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2022 := by R2 lean_s2021, lean_s1690, (Eq (Sum (Int.ofNat 0) (Int.ofNat 1)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2023 := by R2 lean_s2022, lean_s1579, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2024 := by R2 lean_s2023, lean_s1537, (Eq (Sum (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
have lean_s2025 : (Not (Eq y (Int.ofNat 1))) := by R2 lean_s2024, lean_s1535, (Eq (Sum (Int.ofNat 1) (Int.ofNat 1)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2026 := by R1 lean_s2010, lean_s2025, (Eq y (Int.ofNat 1)), [(- 1), 0]
have lean_s2027 : (Or (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2)))))))))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 2)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 2))]
have lean_s2028 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 2)) =>
                    let lean_s2028 := by timed And.intro lean_a97 lean_a99
                    let lean_s2029 := by timed And.intro lean_a101 lean_s2028
                    let lean_s2030 := by timed And.intro lean_a104 lean_s2029
                    let lean_s2031 := by timed And.intro lean_a96 lean_s2030
                    let lean_s2032 := by timed And.intro lean_a103 lean_s2031
                    let lean_s2033 := by timed And.intro lean_a100 lean_s2032
                    let lean_s2034 := by timed And.intro lean_a98 lean_s2033
                    have lean_s2035 : (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)))))))))) := by timed And.intro lean_a102 lean_s2034
                    have lean_s2036 : (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 2)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) =>
                                        have lean_s2036 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a99
                                        have lean_s2037 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2036
                                        let lean_s2038 := by timed flipCongrArg lean_s2037 [Sum]
                                        have lean_s2039 : (Eq (Int.ofNat 2) y) := by timed Eq.symm lean_a101
                                        have lean_s2040 : (Eq y (Int.ofNat 2)) := by timed Eq.symm lean_s2039
                                        have lean_s2041 : (Eq (Succ y) (Succ (Int.ofNat 2))) := by timed flipCongrArg lean_s2040 [Succ]
                                        have lean_s2042 : (Eq (Int.ofNat 3) (Succ (Int.ofNat 2))) := by timed Eq.symm lean_a100
                                        have lean_s2043 : (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) := by timed Eq.symm lean_s2042
                                        have lean_s2044 : (Eq (Succ y) (Int.ofNat 3)) := by timed Eq.trans lean_s2041 lean_s2043
                                        have lean_s2045 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s2038 lean_s2044
                                        have lean_s2046 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a98
                                        have lean_s2047 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s2046
                                        have lean_s2048 : (Eq (Sum x (Succ y)) (Int.ofNat 3)) := by timed Eq.trans lean_s2045 lean_s2047
                                        have lean_s2049 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2048 [Pred]
                                        have lean_s2050 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a97
                                        have lean_s2051 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2050
                                        have lean_s2052 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 2)) := by timed Eq.trans lean_s2049 lean_s2051
                                        let lean_s2053 := by timed flipCongrArg lean_s2052 [Sum]
                                        let lean_s2054 := by timed flipCongrArg lean_s2040 [Sum]
                                        let lean_s2055 := by timed flipCongrArg lean_s2037 [Sum]
                                        have lean_s2056 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed congr lean_s2055 lean_s2040
                                        have lean_s2057 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 0) (Int.ofNat 2))) := by timed Eq.symm lean_a104
                                        have lean_s2058 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_s2057
                                        have lean_s2059 : (Eq (Sum x y) (Int.ofNat 2)) := by timed Eq.trans lean_s2056 lean_s2058
                                        have lean_s2060 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 2))) := by timed flipCongrArg lean_s2059 [Pred]
                                        have lean_s2061 : (Eq (Int.ofNat 1) (Pred (Int.ofNat 2))) := by timed Eq.symm lean_a103
                                        have lean_s2062 : (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_s2061
                                        have lean_s2063 : (Eq (Pred (Sum x y)) (Int.ofNat 1)) := by timed Eq.trans lean_s2060 lean_s2062
                                        have lean_s2064 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed congr lean_s2054 lean_s2063
                                        have lean_s2065 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 2) (Int.ofNat 1))) := by timed Eq.symm lean_a102
                                        have lean_s2066 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) := by timed Eq.symm lean_s2065
                                        have lean_s2067 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2064 lean_s2066
                                        have lean_s2068 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed congr lean_s2053 lean_s2067
                                        have lean_s2069 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 2) (Int.ofNat 3))) := by timed Eq.symm lean_a96
                                        have lean_s2070 : (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) := by timed Eq.symm lean_s2069
                                        have lean_s2071 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed Eq.trans lean_s2068 lean_s2070
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2071
                      ))))))))))))))))))
                    have lean_s2037 : (Implies (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq y (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2036, 9
                    have lean_s2038 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) := by timed modusPonens lean_s2035 lean_s2037
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) from lean_s2038
  ))))))))))))))))))
have lean_s2029 : (Implies (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by liftOrNToImp lean_s2028, 9
have lean_s2030 : (Or (Not (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))) := by timed impliesElim lean_s2029
have lean_s2031 : (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 2))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5))))))))))) := by R1 lean_s2027, lean_s2030, (And (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 2)))))))))), [(- 1), (- 1)]
have lean_s2032 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 2))) (Or (Not (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3))) (Not (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)))))))))))) := by permutateOr lean_s2031, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2033 := by R1 lean_s2032, lean_s1138, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [(- 1), 0]
let lean_s2034 := by R2 lean_s2033, lean_s2001, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2035 := by R2 lean_s2034, lean_s1564, (Eq (Succ (Int.ofNat 2)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2036 := by R2 lean_s2035, lean_s1500, (Eq (Pred (Int.ofNat 2)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2037 := by R2 lean_s2036, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2038 := by R2 lean_s2037, lean_s1579, (Eq (Sum (Int.ofNat 0) (Int.ofNat 2)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2039 := by R2 lean_s2038, lean_s1475, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2040 := by R2 lean_s2039, lean_s1687, (Eq (Sum (Int.ofNat 2) (Int.ofNat 1)) (Int.ofNat 3)), [(- 1), 0]
have lean_s2041 : (Not (Eq y (Int.ofNat 2))) := by R2 lean_s2040, lean_s1706, (Eq (Sum (Int.ofNat 2) (Int.ofNat 3)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2042 := by R1 lean_s2026, lean_s2041, (Eq y (Int.ofNat 2)), [(- 1), 0]
have lean_s2043 : (Or (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3)))))))))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 3)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 3))]
have lean_s2044 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 3)) =>
                    let lean_s2044 := by timed And.intro lean_a97 lean_a99
                    let lean_s2045 := by timed And.intro lean_a101 lean_s2044
                    let lean_s2046 := by timed And.intro lean_a104 lean_s2045
                    let lean_s2047 := by timed And.intro lean_a96 lean_s2046
                    let lean_s2048 := by timed And.intro lean_a103 lean_s2047
                    let lean_s2049 := by timed And.intro lean_a100 lean_s2048
                    let lean_s2050 := by timed And.intro lean_a98 lean_s2049
                    have lean_s2051 : (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)))))))))) := by timed And.intro lean_a102 lean_s2050
                    have lean_s2052 : (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 3)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) =>
                                        have lean_s2052 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a99
                                        have lean_s2053 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2052
                                        let lean_s2054 := by timed flipCongrArg lean_s2053 [Sum]
                                        have lean_s2055 : (Eq (Int.ofNat 3) y) := by timed Eq.symm lean_a101
                                        have lean_s2056 : (Eq y (Int.ofNat 3)) := by timed Eq.symm lean_s2055
                                        have lean_s2057 : (Eq (Succ y) (Succ (Int.ofNat 3))) := by timed flipCongrArg lean_s2056 [Succ]
                                        have lean_s2058 : (Eq (Int.ofNat 4) (Succ (Int.ofNat 3))) := by timed Eq.symm lean_a100
                                        have lean_s2059 : (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) := by timed Eq.symm lean_s2058
                                        have lean_s2060 : (Eq (Succ y) (Int.ofNat 4)) := by timed Eq.trans lean_s2057 lean_s2059
                                        have lean_s2061 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed congr lean_s2054 lean_s2060
                                        have lean_s2062 : (Eq (Int.ofNat 4) (Sum (Int.ofNat 0) (Int.ofNat 4))) := by timed Eq.symm lean_a98
                                        have lean_s2063 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) := by timed Eq.symm lean_s2062
                                        have lean_s2064 : (Eq (Sum x (Succ y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2061 lean_s2063
                                        have lean_s2065 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 4))) := by timed flipCongrArg lean_s2064 [Pred]
                                        have lean_s2066 : (Eq (Int.ofNat 3) (Pred (Int.ofNat 4))) := by timed Eq.symm lean_a97
                                        have lean_s2067 : (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2066
                                        have lean_s2068 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2065 lean_s2067
                                        let lean_s2069 := by timed flipCongrArg lean_s2068 [Sum]
                                        let lean_s2070 := by timed flipCongrArg lean_s2056 [Sum]
                                        let lean_s2071 := by timed flipCongrArg lean_s2053 [Sum]
                                        have lean_s2072 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed congr lean_s2071 lean_s2056
                                        have lean_s2073 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 0) (Int.ofNat 3))) := by timed Eq.symm lean_a104
                                        have lean_s2074 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) := by timed Eq.symm lean_s2073
                                        have lean_s2075 : (Eq (Sum x y) (Int.ofNat 3)) := by timed Eq.trans lean_s2072 lean_s2074
                                        have lean_s2076 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 3))) := by timed flipCongrArg lean_s2075 [Pred]
                                        have lean_s2077 : (Eq (Int.ofNat 2) (Pred (Int.ofNat 3))) := by timed Eq.symm lean_a103
                                        have lean_s2078 : (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2077
                                        have lean_s2079 : (Eq (Pred (Sum x y)) (Int.ofNat 2)) := by timed Eq.trans lean_s2076 lean_s2078
                                        have lean_s2080 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed congr lean_s2070 lean_s2079
                                        have lean_s2081 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 3) (Int.ofNat 2))) := by timed Eq.symm lean_a102
                                        have lean_s2082 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) := by timed Eq.symm lean_s2081
                                        have lean_s2083 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2080 lean_s2082
                                        have lean_s2084 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed congr lean_s2069 lean_s2083
                                        have lean_s2085 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 3) (Int.ofNat 5))) := by timed Eq.symm lean_a96
                                        have lean_s2086 : (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) := by timed Eq.symm lean_s2085
                                        have lean_s2087 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2084 lean_s2086
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2087
                      ))))))))))))))))))
                    have lean_s2053 : (Implies (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq y (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2052, 9
                    have lean_s2054 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2051 lean_s2053
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2054
  ))))))))))))))))))
have lean_s2045 : (Implies (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2044, 9
have lean_s2046 : (Or (Not (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2045
have lean_s2047 : (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 3))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2043, lean_s2046, (And (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)) (And (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 3)))))))))), [(- 1), (- 1)]
have lean_s2048 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 3))) (Or (Not (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4))) (Or (Not (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5))) (Not (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)))))))))))) := by permutateOr lean_s2047, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2049 := by R1 lean_s2048, lean_s1602, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
let lean_s2050 := by R2 lean_s2049, lean_s2001, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2051 := by R2 lean_s2050, lean_s1504, (Eq (Succ (Int.ofNat 3)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2052 := by R2 lean_s2051, lean_s1582, (Eq (Pred (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2053 := by R2 lean_s2052, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2054 := by R2 lean_s2053, lean_s1475, (Eq (Sum (Int.ofNat 0) (Int.ofNat 3)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2055 := by R2 lean_s2054, lean_s1672, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2056 := by R2 lean_s2055, lean_s1557, (Eq (Sum (Int.ofNat 3) (Int.ofNat 2)) (Int.ofNat 5)), [(- 1), 0]
have lean_s2057 : (Not (Eq y (Int.ofNat 3))) := by R2 lean_s2056, lean_s1593, (Eq (Sum (Int.ofNat 3) (Int.ofNat 5)) (Int.ofNat 2)), [(- 1), 0]
let lean_s2058 := by R1 lean_s2042, lean_s2057, (Eq y (Int.ofNat 3)), [(- 1), 0]
have lean_s2059 : (Or (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5)))))))))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 0))) (Not (Eq y (Int.ofNat 5)))))))))))) := by timed cnfAndNeg [(Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), (Eq x (Int.ofNat 0)), (Eq y (Int.ofNat 5))]
have lean_s2060 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
  (scope (fun lean_a96 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
    (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
      (scope (fun lean_a98 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
        (scope (fun lean_a99 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
          (scope (fun lean_a100 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
            (scope (fun lean_a101 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
              (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
                (scope (fun lean_a103 : (Eq x (Int.ofNat 0)) =>
                  (scope (fun lean_a104 : (Eq y (Int.ofNat 5)) =>
                    let lean_s2060 := by timed And.intro lean_a98 lean_a100
                    let lean_s2061 := by timed And.intro lean_a102 lean_s2060
                    let lean_s2062 := by timed And.intro lean_a104 lean_s2061
                    let lean_s2063 := by timed And.intro lean_a96 lean_s2062
                    let lean_s2064 := by timed And.intro lean_a103 lean_s2063
                    let lean_s2065 := by timed And.intro lean_a99 lean_s2064
                    let lean_s2066 := by timed And.intro lean_a97 lean_s2065
                    have lean_s2067 : (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)))))))))) := by timed And.intro lean_a101 lean_s2066
                    have lean_s2068 : (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) :=
                      (scope (fun lean_a96 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) =>
                        (scope (fun lean_a97 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) =>
                          (scope (fun lean_a98 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) =>
                            (scope (fun lean_a99 : (Eq x (Int.ofNat 0)) =>
                              (scope (fun lean_a100 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) =>
                                (scope (fun lean_a101 : (Eq y (Int.ofNat 5)) =>
                                  (scope (fun lean_a102 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) =>
                                    (scope (fun lean_a103 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) =>
                                      (scope (fun lean_a104 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) =>
                                        have lean_s2068 : (Eq (Int.ofNat 0) x) := by timed Eq.symm lean_a99
                                        have lean_s2069 : (Eq x (Int.ofNat 0)) := by timed Eq.symm lean_s2068
                                        let lean_s2070 := by timed flipCongrArg lean_s2069 [Sum]
                                        have lean_s2071 : (Eq (Int.ofNat 5) y) := by timed Eq.symm lean_a101
                                        have lean_s2072 : (Eq y (Int.ofNat 5)) := by timed Eq.symm lean_s2071
                                        have lean_s2073 : (Eq (Succ y) (Succ (Int.ofNat 5))) := by timed flipCongrArg lean_s2072 [Succ]
                                        have lean_s2074 : (Eq (Int.ofNat 0) (Succ (Int.ofNat 5))) := by timed Eq.symm lean_a100
                                        have lean_s2075 : (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) := by timed Eq.symm lean_s2074
                                        have lean_s2076 : (Eq (Succ y) (Int.ofNat 0)) := by timed Eq.trans lean_s2073 lean_s2075
                                        have lean_s2077 : (Eq (Sum x (Succ y)) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s2070 lean_s2076
                                        have lean_s2078 : (Eq (Int.ofNat 0) (Sum (Int.ofNat 0) (Int.ofNat 0))) := by timed Eq.symm lean_a98
                                        have lean_s2079 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) := by timed Eq.symm lean_s2078
                                        have lean_s2080 : (Eq (Sum x (Succ y)) (Int.ofNat 0)) := by timed Eq.trans lean_s2077 lean_s2079
                                        have lean_s2081 : (Eq (Pred (Sum x (Succ y))) (Pred (Int.ofNat 0))) := by timed flipCongrArg lean_s2080 [Pred]
                                        have lean_s2082 : (Eq (Int.ofNat 5) (Pred (Int.ofNat 0))) := by timed Eq.symm lean_a97
                                        have lean_s2083 : (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) := by timed Eq.symm lean_s2082
                                        have lean_s2084 : (Eq (Pred (Sum x (Succ y))) (Int.ofNat 5)) := by timed Eq.trans lean_s2081 lean_s2083
                                        let lean_s2085 := by timed flipCongrArg lean_s2084 [Sum]
                                        let lean_s2086 := by timed flipCongrArg lean_s2072 [Sum]
                                        let lean_s2087 := by timed flipCongrArg lean_s2069 [Sum]
                                        have lean_s2088 : (Eq (Sum x y) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed congr lean_s2087 lean_s2072
                                        have lean_s2089 : (Eq (Int.ofNat 5) (Sum (Int.ofNat 0) (Int.ofNat 5))) := by timed Eq.symm lean_a104
                                        have lean_s2090 : (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) := by timed Eq.symm lean_s2089
                                        have lean_s2091 : (Eq (Sum x y) (Int.ofNat 5)) := by timed Eq.trans lean_s2088 lean_s2090
                                        have lean_s2092 : (Eq (Pred (Sum x y)) (Pred (Int.ofNat 5))) := by timed flipCongrArg lean_s2091 [Pred]
                                        have lean_s2093 : (Eq (Int.ofNat 4) (Pred (Int.ofNat 5))) := by timed Eq.symm lean_a103
                                        have lean_s2094 : (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) := by timed Eq.symm lean_s2093
                                        have lean_s2095 : (Eq (Pred (Sum x y)) (Int.ofNat 4)) := by timed Eq.trans lean_s2092 lean_s2094
                                        have lean_s2096 : (Eq (Sum y (Pred (Sum x y))) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed congr lean_s2086 lean_s2095
                                        have lean_s2097 : (Eq (Int.ofNat 3) (Sum (Int.ofNat 5) (Int.ofNat 4))) := by timed Eq.symm lean_a102
                                        have lean_s2098 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) := by timed Eq.symm lean_s2097
                                        have lean_s2099 : (Eq (Sum y (Pred (Sum x y))) (Int.ofNat 3)) := by timed Eq.trans lean_s2096 lean_s2098
                                        have lean_s2100 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed congr lean_s2085 lean_s2099
                                        have lean_s2101 : (Eq (Int.ofNat 2) (Sum (Int.ofNat 5) (Int.ofNat 3))) := by timed Eq.symm lean_a96
                                        have lean_s2102 : (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) := by timed Eq.symm lean_s2101
                                        have lean_s2103 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed Eq.trans lean_s2100 lean_s2102
                                        show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2103
                      ))))))))))))))))))
                    have lean_s2069 : (Implies (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq x (Int.ofNat 0)) (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq y (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2068, 9
                    have lean_s2070 : (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) := by timed modusPonens lean_s2067 lean_s2069
                    show (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) from lean_s2070
  ))))))))))))))))))
have lean_s2061 : (Implies (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5)))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by liftOrNToImp lean_s2060, 9
have lean_s2062 : (Or (Not (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5))))))))))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))) := by timed impliesElim lean_s2061
have lean_s2063 : (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3))) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2))))))))))) := by R1 lean_s2059, lean_s2062, (And (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)) (And (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)) (And (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)) (And (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)) (And (Eq x (Int.ofNat 0)) (Eq y (Int.ofNat 5)))))))))), [(- 1), (- 1)]
have lean_s2064 : (Or (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)) (Or (Not (Eq x (Int.ofNat 0))) (Or (Not (Eq y (Int.ofNat 5))) (Or (Not (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0))) (Or (Not (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5))) (Or (Not (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5))) (Or (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2))) (Not (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)))))))))))) := by permutateOr lean_s2063, [9, 7, 8, 0, 1, 2, 3, 4, 5, 6], (- 1)
let lean_s2065 := by R1 lean_s2064, lean_s1602, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 2)), [(- 1), 0]
let lean_s2066 := by R2 lean_s2065, lean_s2001, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2067 := by R2 lean_s2066, lean_s1760, (Eq (Succ (Int.ofNat 5)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2068 := by R2 lean_s2067, lean_s1562, (Eq (Pred (Int.ofNat 0)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2069 := by R2 lean_s2068, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2070 := by R2 lean_s2069, lean_s1539, (Eq (Sum (Int.ofNat 0) (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2071 := by R2 lean_s2070, lean_s2008, (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2072 := by R2 lean_s2071, lean_s1636, (Eq (Sum (Int.ofNat 5) (Int.ofNat 3)) (Int.ofNat 2)), [(- 1), 0]
have lean_s2073 : (Not (Eq y (Int.ofNat 5))) := by R2 lean_s2072, lean_s1634, (Eq (Sum (Int.ofNat 5) (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
have lean_s2074 : (Eq y (Int.ofNat 4)) := by R1 lean_s2058, lean_s2073, (Eq y (Int.ofNat 5)), [(- 1), 0]
let lean_s2075 := by R2 lean_s5, lean_s2074, (Eq y (Int.ofNat 4)), [(- 1), 0]
let lean_s2076 := by R2 lean_s2075, lean_s2001, (Eq x (Int.ofNat 0)), [(- 1), 0]
let lean_s2077 := by R2 lean_s2076, lean_s1469, (Eq (Sum (Int.ofNat 4) (Int.ofNat 3)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2078 := by R2 lean_s2077, lean_s1471, (Eq (Sum (Int.ofNat 4) (Int.ofNat 1)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2079 := by R2 lean_s2078, lean_s2008, (Eq (Sum (Int.ofNat 0) (Int.ofNat 5)) (Int.ofNat 5)), [(- 1), 0]
let lean_s2080 := by R2 lean_s2079, lean_s1672, (Eq (Sum (Int.ofNat 0) (Int.ofNat 4)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2081 := by R2 lean_s2080, lean_s1477, (Eq (Pred (Int.ofNat 5)) (Int.ofNat 4)), [(- 1), 0]
let lean_s2082 := by R2 lean_s2081, lean_s1479, (Eq (Pred (Int.ofNat 4)) (Int.ofNat 3)), [(- 1), 0]
let lean_s2083 := by R2 lean_s2082, lean_s1921, (Eq (Succ (Int.ofNat 4)) (Int.ofNat 5)), [(- 1), 0]
exact (show False from by R1 lean_s2083, lean_s1138, (Eq (Sum (Pred (Sum x (Succ y))) (Sum y (Pred (Sum x y)))) (Int.ofNat 5)), [0, 0])


