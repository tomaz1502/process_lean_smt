-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {distance : Int}
variable {fmtx5flength : Int}
variable {arg0 : Int}
variable {xx5fcount : (Int -> Int)}
variable {fmt1 : Int}
variable {s : Int}
variable {fmt0 : Int}
variable {arg1 : Int}
variable {adrx5flo : Int}
variable {adrx5flo : Int}
variable {x : Int}
variable {adrx5fmedhi : Int}
variable {format : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {percent : Int}
variable {arg1 : Int}
variable {fmt0 : Int}
variable {adrx5fhi : Int}
variable {adrx5fhi : Int}
variable {s : Int}
variable {arg0 : Int}
variable {adrx5fmedlo : Int}
variable {xx5fcount : (Int -> Int)}
variable {fmtx5flength : Int}
variable {distance : Int}
variable {adrx5fmedlo : Int}
variable {format : (Int -> Int)}
variable {percent : Int}
variable {adrx5fmedhi : Int}
variable {fmt1 : Int}
variable {x : Int}
variable {sx5fcount : (Int -> Int)}

theorem th0 : (Eq (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 2))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 1)) (Int.ofNat 1))) → (Eq (Eq (format (Int.ofNat 3)) s) (Eq s (format (Int.ofNat 3)))) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 5) fmt0)) → (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) → (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 1)) (Int.ofNat 1))) → (Eq (Eq (format (Int.ofNat 1)) x) (Eq x (format (Int.ofNat 1)))) → (Eq (Eq (format (Int.ofNat 0)) s) (Eq s (format (Int.ofNat 0)))) → (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) → (Eq (Eq (format (Int.ofNat 2)) x) (Eq x (format (Int.ofNat 2)))) → (Eq (Eq (Neg.neg (Int.ofNat 11)) (Neg.neg (Int.ofNat 11))) True) → (Eq (Eq (Int.ofNat 0) fmt1) (Eq fmt1 (Int.ofNat 0))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 1)) percent) (Or (Eq (format (Int.ofNat 1)) s) (Or (Eq (format (Int.ofNat 1)) x) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) → (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) → (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))))) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 4)))) → (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) → (Eq (Eq (format (Int.ofNat 6)) s) (Eq s (format (Int.ofNat 6)))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 3))) → (Eq (Eq (format (Int.ofNat 5)) percent) (Eq percent (format (Int.ofNat 5)))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) → (Eq (Eq (format (Int.ofNat 4)) s) (Eq s (format (Int.ofNat 4)))) → (Eq (Eq (format fmt1) percent) (Eq percent (format fmt1))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) → (Eq (binrel% HAdd.hAdd fmt1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) s) (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) → (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) → (Eq (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) → (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) → (Eq (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (Rat.ofInt 0)) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) adrx5fmedhi) (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)))) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) adrx5fhi) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (Rat.ofInt 2)) → (Eq (Eq (format arg1) adrx5flo) (Eq adrx5flo (format arg1))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 17) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4)))) → (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) adrx5fmedlo) (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 6))) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)) (Neg.neg (Rat.ofInt 3))) → (Eq (Eq (format (Int.ofNat 5)) x) (Eq x (format (Int.ofNat 5)))) → (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))) → (Eq (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 1))) → (Eq (Eq (format (Int.ofNat 1)) percent) (Eq percent (format (Int.ofNat 1)))) → (Eq (Eq (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 4))) True) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) → (Eq (Eq fmt1 fmt0) (Eq fmt0 fmt1)) → (Eq (Eq (format (Int.ofNat 2)) s) (Eq s (format (Int.ofNat 2)))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) → (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) → (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) → (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) → (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) → (Eq (Eq (format (Int.ofNat 3)) x) (Eq x (format (Int.ofNat 3)))) → (Eq (Eq (Int.ofNat 11) (Int.ofNat 11)) True) → (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) False) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 3)) percent) (Or (Eq (format (Int.ofNat 3)) s) (Or (Eq (format (Int.ofNat 3)) x) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 37))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Int.ofNat 2)) (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) → (Eq (Eq (format (Int.ofNat 6)) x) (Eq x (format (Int.ofNat 6)))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) → (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) → (Eq (Eq (Int.ofNat 37) (format fmt1)) (Eq (format fmt1) (Int.ofNat 37))) → (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) → (Eq (Eq (Int.ofNat 6) (Int.ofNat 6)) True) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 37))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 37))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) → (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)) (Neg.neg (Int.ofNat 11))) → (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) → (Eq (Eq (format (Int.ofNat 2)) percent) (Eq percent (format (Int.ofNat 2)))) → (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5))) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 4)))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 37))) → (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) → (Eq (Eq (format (Int.ofNat 4)) x) (Eq x (format (Int.ofNat 4)))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) → (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 2) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 1))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)))))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 120))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 115))) → (Eq (Eq (format (Int.ofNat 0)) percent) (Eq percent (format (Int.ofNat 0)))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 0)) percent) (Or (Eq (format (Int.ofNat 0)) s) (Or (Eq (format (Int.ofNat 0)) x) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt1 (Int.ofNat 4))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (Eq (format (Int.ofNat 5)) s) (Eq s (format (Int.ofNat 5)))) → (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 1))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) → (Eq (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 2))) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 5) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 6))) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) → (Eq (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115))) → (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 2))) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Neg.neg (Int.ofNat 11))) → (Eq (Or False (Or (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (binrel% HAdd.hAdd fmt1 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) → (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) → (Eq (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)) (And (Not (Eq (format fmt1) percent)) (And (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (And (Eq (format arg1) adrx5flo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi))))))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt1 (Int.ofNat 3))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 2))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) (Int.ofNat 0)) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1)) (Eq fmt1 (Int.ofNat 5))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 11))) (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 4))) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) → (Eq (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 0)) fmt0) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (Neg.neg (Int.ofNat 11))) (Neg.neg (Int.ofNat 11))) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) → (Eq (binrel% LT.lt fmt1 (Int.ofNat 5)) (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) → (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 2)) False) → (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) True) → (Eq (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Eq fmt1 (Int.ofNat 4))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) → (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) → (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And True (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))) → (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))))) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) → (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) (Not (Eq (Int.ofNat 115) (Int.ofNat 37)))) → (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) → (Eq (Eq (format (Int.ofNat 1)) s) (Eq s (format (Int.ofNat 1)))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 5)) percent) (Or (Eq (format (Int.ofNat 5)) s) (Or (Eq (format (Int.ofNat 5)) x) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255)))))))))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 4)) percent) (Or (Eq (format (Int.ofNat 4)) s) (Or (Eq (format (Int.ofNat 4)) x) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 2)) percent) (Or (Eq (format (Int.ofNat 2)) s) (Or (Eq (format (Int.ofNat 2)) x) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) → (Eq (Eq (format (Int.ofNat 0)) x) (Eq x (format (Int.ofNat 0)))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Eq fmt1 (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) → (Eq (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3))) → (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) → (Eq (Eq arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) → (Eq (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)))) → (Eq (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0) (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))))) → (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) True) → (Eq (Eq (Eq fmt1 (Int.ofNat 2)) (Eq fmt1 (Int.ofNat 2))) True) → (Eq (Eq (format (Int.ofNat 4)) percent) (Eq percent (format (Int.ofNat 4)))) → (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) → (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) → (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)))) → (Eq (Eq (Int.ofNat 120) (Int.ofNat 120)) True) → (Eq (Eq (format (Int.ofNat 3)) percent) (Eq percent (format (Int.ofNat 3)))) → (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) → (Eq (Eq (Int.ofNat 115) (Int.ofNat 115)) True) → (Eq (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))))) → (Eq (Eq (Int.ofNat 37) (Int.ofNat 37)) True) → (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1)))) → (Eq (Not False) True) → (Eq (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Not (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))))) → (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) → (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) → (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) → (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) (Not (Eq (Int.ofNat 115) (Int.ofNat 120)))) → (Eq (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))))) → (Eq (binrel% GE.ge arg1 fmt0) (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0))) → (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))))) → (Eq (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) → (Eq (binrel% HSub.hSub fmt0 distance) (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) → (Eq (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) → (Eq (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) (Not (Eq (Int.ofNat 120) (Int.ofNat 37)))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (And (binrel% GE.ge arg1 fmt0) (And (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (And (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (And (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (And (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (And (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (And (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))))))))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) → (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) → (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) → (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))))) → (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) True) → (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) → (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) → (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) True) → (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) → (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) → (Eq (Not (Not (Eq fmt1 (Int.ofNat 2)))) (Eq fmt1 (Int.ofNat 2))) → (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (binrel% HAdd.hAdd (Int.ofNat 17) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (Not (Not (Eq fmt1 (Int.ofNat 2)))) (Eq fmt1 (Int.ofNat 2))) (Eq (Eq fmt1 (Int.ofNat 2)) (Not (Not (Eq fmt1 (Int.ofNat 2)))))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 1))) False) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Rat.ofInt 1) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 1))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Rat.ofInt 0)) → (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) → (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))))) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 1) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 2))) → (Eq (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5))))))))) → (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) → (Eq (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) → (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3))) False) → (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) True) → (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) True) → (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 2))) False) → (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 2))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (Eq (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Eq fmt1 (Int.ofNat 4))) (Eq (Eq fmt1 (Int.ofNat 4)) (Not (Not (Eq fmt1 (Int.ofNat 4)))))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (binrel% HAdd.hAdd (Int.ofNat 6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1))) → (Eq (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (binrel% GE.ge fmt1 (Int.ofNat 5))) True) → (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (binrel% GE.ge fmt1 (Int.ofNat 5))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) → (Eq (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (binrel% GE.ge fmt1 (Int.ofNat 5))) (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))))) → (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) → (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) → (Eq (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 3))) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) → (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) → (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) → False :=
fun lean_r0 : (Eq (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 1)) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (Eq (format (Int.ofNat 3)) s) (Eq s (format (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 5) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 1)) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (Eq (format (Int.ofNat 1)) x) (Eq x (format (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (Eq (format (Int.ofNat 0)) s) (Eq s (format (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (Eq (format (Int.ofNat 2)) x) (Eq x (format (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (Neg.neg (Int.ofNat 11))) True) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (Eq (Int.ofNat 0) fmt1) (Eq fmt1 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 1)) percent) (Or (Eq (format (Int.ofNat 1)) s) (Or (Eq (format (Int.ofNat 1)) x) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))))) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (Eq (format (Int.ofNat 6)) s) (Eq s (format (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 3))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (Eq (format (Int.ofNat 5)) percent) (Eq percent (format (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq (Eq (format (Int.ofNat 4)) s) (Eq s (format (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (Eq (format fmt1) percent) (Eq percent (format fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HAdd.hAdd fmt1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) s) (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r38 : (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) adrx5fmedhi) (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) adrx5fhi) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (Rat.ofInt 2)) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq (Eq (format arg1) adrx5flo) (Eq adrx5flo (format arg1))) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 17) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) adrx5fmedlo) (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)))) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 6))) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)) (Neg.neg (Rat.ofInt 3))) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq (Eq (format (Int.ofNat 5)) x) (Eq x (format (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq (Eq (format (Int.ofNat 1)) percent) (Eq percent (format (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq (Eq (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 4))) True) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq (Eq fmt1 fmt0) (Eq fmt0 fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq (Eq (format (Int.ofNat 2)) s) (Eq s (format (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq (Eq (format (Int.ofNat 3)) x) (Eq x (format (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq (Eq (Int.ofNat 11) (Int.ofNat 11)) True) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) False) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 3)) percent) (Or (Eq (format (Int.ofNat 3)) s) (Or (Eq (format (Int.ofNat 3)) x) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Int.ofNat 2)) (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq (Eq (format (Int.ofNat 6)) x) (Eq x (format (Int.ofNat 6)))) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) => -- THEORY_REWRITE_BOOL
fun lean_r76 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r79 : (Eq (Eq (Int.ofNat 37) (format fmt1)) (Eq (format fmt1) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq (Eq (Int.ofNat 6) (Int.ofNat 6)) True) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (Rat.ofInt 1)) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)) (Neg.neg (Int.ofNat 11))) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq (Eq (format (Int.ofNat 2)) percent) (Eq percent (format (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5))) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq (Eq (format (Int.ofNat 4)) x) (Eq x (format (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 2) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)))))) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq (Eq (format (Int.ofNat 0)) percent) (Eq percent (format (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 0)) percent) (Or (Eq (format (Int.ofNat 0)) s) (Or (Eq (format (Int.ofNat 0)) x) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r106 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt1 (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r111 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq (Eq (format (Int.ofNat 5)) s) (Eq s (format (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r120 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 5) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 6))) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r127 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Neg.neg (Int.ofNat 11))) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq (Or False (Or (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_BOOL
fun lean_r130 : (Eq (binrel% HAdd.hAdd fmt1 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0)) (Int.ofNat 2)) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)) (And (Not (Eq (format fmt1) percent)) (And (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (And (Eq (format arg1) adrx5flo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi))))))) => -- THEORY_REWRITE_BOOL
fun lean_r133 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r134 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt1 (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1)) (Eq fmt1 (Int.ofNat 5))) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 11))) (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) => -- THEORY_REWRITE_BOOL
fun lean_r143 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 0)) fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (Neg.neg (Int.ofNat 11))) (Neg.neg (Int.ofNat 11))) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq (binrel% LT.lt fmt1 (Int.ofNat 5)) (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 2)) False) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r150 : (Eq (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Eq fmt1 (Int.ofNat 4))) => -- THEORY_REWRITE_BOOL
fun lean_r151 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And True (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r156 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) (Not (Eq (Int.ofNat 115) (Int.ofNat 37)))) => -- THEORY_REWRITE_BOOL
fun lean_r160 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq (Eq (format (Int.ofNat 1)) s) (Eq s (format (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 5)) percent) (Or (Eq (format (Int.ofNat 5)) s) (Or (Eq (format (Int.ofNat 5)) x) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r164 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 4)) percent) (Or (Eq (format (Int.ofNat 4)) s) (Or (Eq (format (Int.ofNat 4)) x) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r165 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 2)) percent) (Or (Eq (format (Int.ofNat 2)) s) (Or (Eq (format (Int.ofNat 2)) x) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r166 : (Eq (Eq (format (Int.ofNat 0)) x) (Eq x (format (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r167 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Eq fmt1 (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))))) => -- THEORY_REWRITE_BOOL
fun lean_r173 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) => -- THEORY_REWRITE_BOOL
fun lean_r174 : (Eq (Eq arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r178 : (Eq (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0) (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0))) => -- THEORY_REWRITE_ARITH
fun lean_r180 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))))) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r183 : (Eq (Eq (Eq fmt1 (Int.ofNat 2)) (Eq fmt1 (Int.ofNat 2))) True) => -- THEORY_REWRITE_BOOL
fun lean_r184 : (Eq (Eq (format (Int.ofNat 4)) percent) (Eq percent (format (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq (Eq (Int.ofNat 120) (Int.ofNat 120)) True) => -- THEORY_REWRITE_ARITH
fun lean_r189 : (Eq (Eq (format (Int.ofNat 3)) percent) (Eq percent (format (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 115)) True) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))))) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq (Eq (Int.ofNat 37) (Int.ofNat 37)) True) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq (Not False) True) => -- THEORY_REWRITE_BOOL
fun lean_r196 : (Eq (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Not (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r199 : (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) => -- THEORY_REWRITE_ARITH
fun lean_r200 : (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) (Not (Eq (Int.ofNat 115) (Int.ofNat 120)))) => -- THEORY_REWRITE_BOOL
fun lean_r201 : (Eq (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq (binrel% GE.ge arg1 fmt0) (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))))) => -- THEORY_REWRITE_BOOL
fun lean_r204 : (Eq (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq (binrel% HSub.hSub fmt0 distance) (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) (Not (Eq (Int.ofNat 120) (Int.ofNat 37)))) => -- THEORY_REWRITE_BOOL
fun lean_r208 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (And (binrel% GE.ge arg1 fmt0) (And (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (And (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (And (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (And (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (And (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (And (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r209 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r210 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) => -- THEORY_REWRITE_ARITH
fun lean_r213 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))))) => -- THEORY_REWRITE_BOOL
fun lean_r214 : (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r215 : (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) => -- THEORY_REWRITE_BOOL
fun lean_r216 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) => -- THEORY_REWRITE_BOOL
fun lean_r218 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r220 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) => -- THEORY_REWRITE_BOOL
fun lean_r222 : (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) => -- THEORY_REWRITE_BOOL
fun lean_r223 : (Eq (Not (Not (Eq fmt1 (Int.ofNat 2)))) (Eq fmt1 (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r224 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))))) => -- THEORY_REWRITE_BOOL
fun lean_r225 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (binrel% HAdd.hAdd (Int.ofNat 17) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r226 : (Eq (Eq (Not (Not (Eq fmt1 (Int.ofNat 2)))) (Eq fmt1 (Int.ofNat 2))) (Eq (Eq fmt1 (Int.ofNat 2)) (Not (Not (Eq fmt1 (Int.ofNat 2)))))) => -- THEORY_REWRITE_BOOL
fun lean_r227 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r228 : (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 1))) False) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Rat.ofInt 1) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 1))) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Rat.ofInt 0)) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r232 : (Eq (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) True) => -- EVALUATE
fun lean_r233 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) => -- THEORY_REWRITE_ARITH
fun lean_r234 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r235 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r236 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))))) => -- THEORY_REWRITE_BOOL
fun lean_r237 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 1) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 2))) => -- THEORY_REWRITE_ARITH
fun lean_r238 : (Eq (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r239 : (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) => -- THEORY_REWRITE_BOOL
fun lean_r240 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r241 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r242 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r243 : (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3))) False) => -- THEORY_REWRITE_ARITH
fun lean_r244 : (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r245 : (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) => -- THEORY_REWRITE_BOOL
fun lean_r246 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r247 : (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) True) => -- THEORY_REWRITE_BOOL
fun lean_r248 : (Eq (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 2))) False) => -- THEORY_REWRITE_ARITH
fun lean_r249 : (Eq (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3)))) (Neg.neg (Rat.ofInt 2))) => -- THEORY_REWRITE_ARITH
fun lean_r250 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r251 : (Eq (Eq (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Eq fmt1 (Int.ofNat 4))) (Eq (Eq fmt1 (Int.ofNat 4)) (Not (Not (Eq fmt1 (Int.ofNat 4)))))) => -- THEORY_REWRITE_BOOL
fun lean_r252 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) => -- THEORY_REWRITE_BOOL
fun lean_r253 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (binrel% HAdd.hAdd (Int.ofNat 6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r254 : (Eq (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (binrel% GE.ge fmt1 (Int.ofNat 5))) True) => -- THEORY_REWRITE_BOOL
fun lean_r255 : (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (binrel% GE.ge fmt1 (Int.ofNat 5))) => -- THEORY_REWRITE_BOOL
fun lean_r256 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r257 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) => -- THEORY_REWRITE_BOOL
fun lean_r258 : (Eq (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (binrel% GE.ge fmt1 (Int.ofNat 5))) (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))))) => -- THEORY_REWRITE_BOOL
fun lean_r259 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r260 : (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r261 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r262 : (Eq (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r263 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r264 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r265 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_a266 : (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) => by
have lean_s0 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))) :=
  (scope (fun lean_a267 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a268 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a269 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a270 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
          (scope (fun lean_a271 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
            (scope (fun lean_a272 : (Eq fmt1 (Int.ofNat 3)) =>
              have lean_s0 : (Eq (Eq fmt1 (Int.ofNat 3)) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r262
              have lean_s1 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a272 lean_s0
              let lean_s2 := by timed And.intro lean_a270 lean_a268
              have lean_s3 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_s1 lean_s2
              have lean_s4 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a273 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a274 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a275 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                      have lean_s4 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a275
                      have lean_s5 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a274
                      have lean_s6 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s5
                      let lean_s7 := by timed Eq.trans lean_s4 lean_s6
                      have lean_s8 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a273
                      have lean_s9 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s8
                      have lean_s10 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s9 [xx5fcount]
                      have lean_s11 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s7 lean_s10
                      show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s11
                ))))))
              have lean_s5 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s4, 3
              have lean_s6 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s3 lean_s5
              let lean_s7 := by timed And.intro lean_a269 lean_a267
              have lean_s8 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed And.intro lean_s1 lean_s7
              have lean_s9 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a274 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a275 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a276 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                      have lean_s9 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a276
                      have lean_s10 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a275
                      have lean_s11 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s10
                      let lean_s12 := by timed Eq.trans lean_s9 lean_s11
                      have lean_s13 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a274
                      have lean_s14 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s13
                      have lean_s15 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s14 [sx5fcount]
                      have lean_s16 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s12 lean_s15
                      show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s16
                ))))))
              have lean_s10 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s9, 3
              have lean_s11 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s8 lean_s10
              let lean_s12 := by timed And.intro lean_s6 lean_s11
              have lean_s13 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a271 lean_s12
              show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s13
  ))))))))))))
have lean_s1 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s0, 6
have lean_s2 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Or (Not (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) False))) :=
  (scope (fun lean_a274 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
    (scope (fun lean_a275 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
      (scope (fun lean_a276 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
        have lean_s4 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1)) := by timed Eq.symm lean_a276
        have lean_s5 : (Or (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) False) :=
          (scope (fun lean_a276 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1)) =>
            have lean_s5 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r232
            have lean_s6 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) := by timed And.intro lean_s5 lean_a276
            have lean_s7 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 1), (Rat.ofInt 1)], 4
            have lean_s8 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) := by timed Eq.symm lean_a275
            have lean_s10 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by timed And.intro lean_s5 lean_s9
            have lean_s11 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s12 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r78
            have lean_s14 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed And.intro lean_s13 lean_a274
            have lean_s15 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) := by arithMulNeg [(binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))), (Int.ofNat 3), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s16 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))) := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r211 lean_r231
            have lean_s19 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_r8 lean_s18
            have lean_s20 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s19 lean_r230
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r40 lean_r49
            have lean_s23 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3))))) := by timed congrHAdd lean_r84 lean_s22
            have lean_s24 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (Neg.neg (Rat.ofInt 2))) := by timed Eq.trans lean_s23 lean_r249
            have lean_s25 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 2)))) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) False) := by timed Eq.trans lean_s25 lean_r248
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToNeg lean_s4
have lean_s6 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s5
have lean_s7 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False)) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) := by timed Eq.trans lean_s7 lean_r209
have lean_s9 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 3)))))))) := by timed flipNotAnd lean_s9 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 3))]
have lean_s11 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))) := by permutateOr lean_s10, [4, 5, 0, 2, 1, 3], (- 1)
have lean_s12 : (Or (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (Not (Eq fmt1 (Int.ofNat 4))) (binrel% GE.ge fmt1 (Int.ofNat 3)))) (Or (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (Or (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Not (binrel% GE.ge fmt1 (Int.ofNat 3)))))) := by timed cnfAndNeg [(Not (binrel% GE.ge fmt1 (Int.ofNat 5))), (Not (Eq fmt1 (Int.ofNat 4))), (binrel% GE.ge fmt1 (Int.ofNat 3))]
have lean_s13 : (Or (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (Or (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 3))) (Eq fmt1 (Int.ofNat 3))))) :=
  (scope (fun lean_a277 : (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) =>
    (scope (fun lean_a278 : (Not (Eq fmt1 (Int.ofNat 4))) =>
      (scope (fun lean_a279 : (binrel% GE.ge fmt1 (Int.ofNat 3)) =>
        let lean_s13 := by timed And.intro lean_a277 lean_a278
        have lean_s14 : (And (binrel% GE.ge fmt1 (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (Not (Eq fmt1 (Int.ofNat 4))))) := by timed And.intro lean_a279 lean_s13
        have lean_s15 : (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 3))) (Or (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (Or (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Eq (Int.ofNat 3) fmt1)))) :=
          (scope (fun lean_a280 : (binrel% GE.ge fmt1 (Int.ofNat 3)) =>
            (scope (fun lean_a281 : (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) =>
              (scope (fun lean_a282 : (Not (Eq fmt1 (Int.ofNat 4))) =>
                have lean_s15 : (Eq (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (binrel% LT.lt fmt1 (Int.ofNat 5))) := by timed Eq.symm lean_r147
                have lean_s16 : (binrel% LT.lt fmt1 (Int.ofNat 5)) := by timed eqResolve lean_a281 lean_s15
                have lean_s17 : (binrel% LE.le fmt1 (Int.ofNat 4)) := by intTightUb lean_s16
                have lean_s18 : (binrel% LT.lt fmt1 (Int.ofNat 4)) := by trichotomy lean_s17, lean_a282
                have lean_s19 : (binrel% LE.le fmt1 (Int.ofNat 3)) := by intTightUb lean_s18
                have lean_s20 : (Eq fmt1 (Int.ofNat 3)) := by trichotomy lean_a280, lean_s19
                have lean_s21 : (Eq (Int.ofNat 3) fmt1) := by timed Eq.symm lean_s20
                show (Eq (Int.ofNat 3) fmt1) from lean_s21
          ))))))
        have lean_s16 : (Implies (And (binrel% GE.ge fmt1 (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (Not (Eq fmt1 (Int.ofNat 4))))) (Eq (Int.ofNat 3) fmt1)) := by liftOrNToImp lean_s15, 3
        have lean_s17 : (Eq (Int.ofNat 3) fmt1) := by timed modusPonens lean_s14 lean_s16
        have lean_s18 : (Or (Not (Eq (Int.ofNat 3) fmt1)) (Eq fmt1 (Int.ofNat 3))) :=
          (scope (fun lean_a280 : (Eq (Int.ofNat 3) fmt1) =>
            have lean_s18 : (Eq fmt1 (Int.ofNat 3)) := by timed Eq.symm lean_a280
            show (Eq fmt1 (Int.ofNat 3)) from lean_s18
          ))
        have lean_s19 : (Implies (Eq (Int.ofNat 3) fmt1) (Eq fmt1 (Int.ofNat 3))) := by liftOrNToImp lean_s18, 1
        have lean_s20 : (Eq fmt1 (Int.ofNat 3)) := by timed modusPonens lean_s17 lean_s19
        show (Eq fmt1 (Int.ofNat 3)) from lean_s20
  ))))))
have lean_s14 : (Implies (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (Not (Eq fmt1 (Int.ofNat 4))) (binrel% GE.ge fmt1 (Int.ofNat 3)))) (Eq fmt1 (Int.ofNat 3))) := by liftOrNToImp lean_s13, 3
have lean_s15 : (Or (Not (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (Not (Eq fmt1 (Int.ofNat 4))) (binrel% GE.ge fmt1 (Int.ofNat 3))))) (Eq fmt1 (Int.ofNat 3))) := by timed impliesElim lean_s14
have lean_s16 : (Or (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (Or (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 3))) (Eq fmt1 (Int.ofNat 3))))) := by R1 lean_s12, lean_s15, (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (Not (Eq fmt1 (Int.ofNat 4))) (binrel% GE.ge fmt1 (Int.ofNat 3)))), [(- 1), (- 1)]
have lean_s17 : (Eq Or Or) := by timed rfl
have lean_s18 : (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (binrel% GE.ge fmt1 (Int.ofNat 5))) := by timed rfl
let lean_s19 := by timed flipCongrArg lean_s18 [Eq]
have lean_s20 : (Eq (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5))))) (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (binrel% GE.ge fmt1 (Int.ofNat 5)))) := by timed congr lean_s19 lean_r255
have lean_s21 : (Eq (Eq (binrel% GE.ge fmt1 (Int.ofNat 5)) (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5))))) True) := by timed Eq.trans lean_s20 lean_r254
have lean_s22 : (Eq (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (binrel% GE.ge fmt1 (Int.ofNat 5))) True) := by timed Eq.trans lean_r258 lean_s21
have lean_s23 : (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (binrel% GE.ge fmt1 (Int.ofNat 5))) := by timed trueElim lean_s22
let lean_s24 := by timed congr lean_s17 lean_s23
have lean_s25 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 4))) := by timed rfl
let lean_s26 := by timed flipCongrArg lean_s25 [Eq]
have lean_s27 : (Eq (Eq (Eq fmt1 (Int.ofNat 4)) (Not (Not (Eq fmt1 (Int.ofNat 4))))) (Eq (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 4)))) := by timed congr lean_s26 lean_r150
have lean_s28 : (Eq (Eq (Eq fmt1 (Int.ofNat 4)) (Not (Not (Eq fmt1 (Int.ofNat 4))))) True) := by timed Eq.trans lean_s27 lean_r59
have lean_s29 : (Eq (Eq (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Eq fmt1 (Int.ofNat 4))) True) := by timed Eq.trans lean_r251 lean_s28
have lean_s30 : (Eq (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Eq fmt1 (Int.ofNat 4))) := by timed trueElim lean_s29
let lean_s31 := by timed congr lean_s17 lean_s30
have lean_s32 : (Eq (Not (binrel% GE.ge fmt1 (Int.ofNat 3))) (Not (binrel% GE.ge fmt1 (Int.ofNat 3)))) := by timed rfl
let lean_s33 := by timed congr lean_s17 lean_s32
have lean_s34 : (Eq (Eq fmt1 (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))) := by timed rfl
let lean_s35 := by timed congr lean_s33 lean_s34
let lean_s36 := by timed congr lean_s31 lean_s35
have lean_s37 : (Eq (Or (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) (Or (Not (Not (Eq fmt1 (Int.ofNat 4)))) (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 3))) (Eq fmt1 (Int.ofNat 3))))) (Or (binrel% GE.ge fmt1 (Int.ofNat 5)) (Or (Eq fmt1 (Int.ofNat 4)) (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 3))) (Eq fmt1 (Int.ofNat 3)))))) := by timed congr lean_s24 lean_s36
have lean_s38 : (Or (binrel% GE.ge fmt1 (Int.ofNat 5)) (Or (Eq fmt1 (Int.ofNat 4)) (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 3))) (Eq fmt1 (Int.ofNat 3))))) := by timed eqResolve lean_s16 lean_s37
have lean_s39 : (Or (binrel% GE.ge fmt1 (Int.ofNat 5)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Not (binrel% GE.ge fmt1 (Int.ofNat 3)))))) := by permutateOr lean_s38, [0, 3, 1, 2], (- 1)
have lean_s40 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a281 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a282 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a283 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a284 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
          (scope (fun lean_a285 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a286 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a287 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a288 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s40 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s41 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a288 lean_s40
                  let lean_s42 := by timed And.intro lean_a285 lean_a282
                  let lean_s43 := by timed And.intro lean_a286 lean_s42
                  have lean_s44 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s41 lean_s43
                  have lean_s45 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a284 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a285 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a286 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a287 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s45 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a287
                            have lean_s46 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a286
                            have lean_s47 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s46
                            let lean_s48 := by timed Eq.trans lean_s45 lean_s47
                            have lean_s49 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a285
                            have lean_s50 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s49
                            let lean_s51 := by timed Eq.trans lean_s48 lean_s50
                            have lean_s52 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a284
                            have lean_s53 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s52
                            have lean_s54 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s53 [xx5fcount]
                            have lean_s55 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s51 lean_s54
                            show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s55
                    ))))))))
                  have lean_s46 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s45, 4
                  have lean_s47 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s44 lean_s46
                  let lean_s48 := by timed And.intro lean_a283 lean_a281
                  have lean_s49 : (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed And.intro lean_a284 lean_s48
                  have lean_s50 : (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))))) :=
                    (scope (fun lean_a285 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
                      (scope (fun lean_a286 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                        (scope (fun lean_a287 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                          have lean_s50 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a287
                          have lean_s51 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a286
                          have lean_s52 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s51
                          let lean_s53 := by timed Eq.trans lean_s50 lean_s52
                          have lean_s54 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a285
                          have lean_s55 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed Eq.symm lean_s54
                          have lean_s56 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed Eq.trans lean_s53 lean_s55
                          show (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) from lean_s56
                    ))))))
                  have lean_s51 : (Implies (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by liftOrNToImp lean_s50, 3
                  have lean_s52 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed modusPonens lean_s49 lean_s51
                  have lean_s53 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2)))) :=
                    (scope (fun lean_a285 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
                      have lean_s53 : (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 2)) := by timed eqResolve lean_a285 lean_r0
                      have lean_s54 : (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s53
                      show (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2))) from lean_s54
                    ))
                  have lean_s54 : (Implies (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2)))) := by liftOrNToImp lean_s53, 1
                  have lean_s55 : (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2))) := by timed modusPonens lean_s52 lean_s54
                  have lean_s56 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2)))) := by timed And.intro lean_s41 lean_s55
                  have lean_s57 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                    (scope (fun lean_a286 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a287 : (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2))) =>
                        have lean_s57 : (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_a287
                        have lean_s58 : (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s57
                        have lean_s59 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a286
                        have lean_s60 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s59
                        have lean_s61 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s60 [sx5fcount]
                        have lean_s62 : (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s58 lean_s61
                        show (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s62
                    ))))
                  have lean_s58 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 2) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s57, 2
                  have lean_s59 : (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s56 lean_s58
                  let lean_s60 := by timed And.intro lean_s47 lean_s59
                  have lean_s61 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a287 lean_s60
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s61
  ))))))))))))))))
have lean_s41 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s40, 8
have lean_s42 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s43 := by timed flipCongrArg lean_s42 [Implies]
have lean_s44 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Or (Not (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) False))) :=
  (scope (fun lean_a287 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
    (scope (fun lean_a288 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
      (scope (fun lean_a289 : (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
        have lean_s44 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2)) := by timed Eq.symm lean_a289
        have lean_s45 : (Or (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2))) False) :=
          (scope (fun lean_a288 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2)) =>
            have lean_s45 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r232
            have lean_s46 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2))) := by timed And.intro lean_s45 lean_a288
            have lean_s47 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))) := by arithMulPos [(sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 2), (Rat.ofInt 1)], 4
            have lean_s48 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))) := by timed modusPonens lean_s46 lean_s47
            have lean_s49 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) := by timed Eq.symm lean_a288
            have lean_s50 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by timed And.intro lean_s45 lean_s49
            have lean_s51 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s52 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s50 lean_s51
            have lean_s53 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r78
            have lean_s54 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed And.intro lean_s53 lean_a287
            have lean_s55 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) := by arithMulNeg [(binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))), (Int.ofNat 3), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s56 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))) := by timed modusPonens lean_s54 lean_s55
            have lean_s57 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) := by sumBounds [lean_s48, lean_s52, lean_s56]
            let lean_s58 := by timed congrHAdd lean_r211 lean_r231
            have lean_s59 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_r8 lean_s58
            have lean_s60 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s59 lean_r230
            let lean_s61 := by timed flipCongrArg lean_s60 [LE.le]
            let lean_s62 := by timed congrHAdd lean_r40 lean_r49
            have lean_s63 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (binrel% HAdd.hAdd (Rat.ofInt 2) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3))))) := by timed congrHAdd lean_r43 lean_s62
            have lean_s64 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (Neg.neg (Rat.ofInt 1))) := by timed Eq.trans lean_s63 lean_r57
            have lean_s65 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s61 lean_s64
            have lean_s66 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) False) := by timed Eq.trans lean_s65 lean_r228
            show False from by timed eqResolve lean_s57 lean_s66
          ))
        have lean_s46 : (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2))) := by liftOrNToNeg lean_s45
        show False from by timed contradiction lean_s44 lean_s46
  ))))))
have lean_s45 : (Not (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToNeg lean_s44
have lean_s46 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s45
have lean_s47 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s43 lean_s46
have lean_s48 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 2) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s47 lean_r1
have lean_s49 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s41 lean_s48
have lean_s50 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s49 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s51 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s50, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
have lean_s52 : (Eq And And) := by timed rfl
have lean_s53 : (Eq (Eq distance (Int.ofNat 11)) (Eq distance (Int.ofNat 11))) := by timed rfl
let lean_s54 := by timed congr lean_s52 lean_s53
have lean_s55 : (Eq (Eq fmtx5flength (Int.ofNat 6)) (Eq fmtx5flength (Int.ofNat 6))) := by timed rfl
let lean_s56 := by timed congr lean_s52 lean_s55
have lean_s57 : (Eq (Eq adrx5flo (Int.ofNat 3)) (Eq adrx5flo (Int.ofNat 3))) := by timed rfl
let lean_s58 := by timed congr lean_s52 lean_s57
have lean_s59 : (Eq (Eq adrx5fmedlo (Int.ofNat 4)) (Eq adrx5fmedlo (Int.ofNat 4))) := by timed rfl
let lean_s60 := by timed congr lean_s52 lean_s59
have lean_s61 : (Eq (Eq adrx5fmedhi (Int.ofNat 5)) (Eq adrx5fmedhi (Int.ofNat 5))) := by timed rfl
let lean_s62 := by timed congr lean_s52 lean_s61
have lean_s63 : (Eq (Eq adrx5fhi (Int.ofNat 6)) (Eq adrx5fhi (Int.ofNat 6))) := by timed rfl
let lean_s64 := by timed congr lean_s52 lean_s63
have lean_s65 : (Eq (Eq percent (Int.ofNat 37)) (Eq percent (Int.ofNat 37))) := by timed rfl
let lean_s66 := by timed congr lean_s52 lean_s65
have lean_s67 : (Eq (Eq s (Int.ofNat 115)) (Eq s (Int.ofNat 115))) := by timed rfl
let lean_s68 := by timed congr lean_s52 lean_s67
have lean_s69 : (Eq (Eq x (Int.ofNat 120)) (Eq x (Int.ofNat 120))) := by timed rfl
let lean_s70 := by timed congr lean_s52 lean_s69
have lean_s71 : (Eq (Eq fmt0 (Int.ofNat 0)) (Eq fmt0 (Int.ofNat 0))) := by timed rfl
let lean_s72 := by timed congr lean_s52 lean_s71
have lean_s73 : (Eq arg0 arg0) := by timed rfl
let lean_s74 := by timed flipCongrArg lean_s73 [Eq]
have lean_s75 : (Eq (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance)))) := by timed congr lean_s74 lean_r205
let lean_s76 := by timed congr lean_s52 lean_s75
let lean_s77 := by timed congr lean_s52 lean_r202
have lean_s78 : (Eq fmt1 fmt1) := by timed rfl
let lean_s79 := by timed flipCongrArg lean_s78 [GE.ge]
have lean_s80 : (Eq fmt0 fmt0) := by timed rfl
let lean_s81 := by timed flipCongrArg lean_s80 [HAdd.hAdd]
have lean_s82 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s83 := by timed flipCongrArg lean_s82 [HAdd.hAdd]
have lean_s84 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s83 lean_r52
have lean_s85 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) := by timed Eq.trans lean_s84 lean_r199
have lean_s86 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) := by timed Eq.trans lean_r24 lean_s85
have lean_s87 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))) (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength))) := by timed congr lean_s81 lean_s86
have lean_s88 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) := by timed Eq.trans lean_s87 lean_r206
have lean_s89 : (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (binrel% GE.ge fmt1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength)))) := by timed congr lean_s79 lean_s88
have lean_s90 : (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) := by timed Eq.trans lean_s89 lean_r198
have lean_s91 : (Eq (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))))) := by timed flipCongrArg lean_s90 [Not]
have lean_s92 : (Eq (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) := by timed Eq.trans lean_s91 lean_r119
have lean_s93 : (Eq (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) := by timed Eq.trans lean_r201 lean_s92
let lean_s94 := by timed congr lean_s52 lean_s93
let lean_s95 := by timed flipCongrArg lean_s78 [LE.le]
have lean_s96 : (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (binrel% LE.le fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) := by timed congr lean_s95 lean_r168
have lean_s97 : (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) := by timed Eq.trans lean_s96 lean_r260
have lean_s98 : (Eq (Not (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))))) := by timed flipCongrArg lean_s97 [Not]
have lean_s99 : (Eq (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))))) := by timed Eq.trans lean_r196 lean_s98
let lean_s100 := by timed congr lean_s52 lean_s99
let lean_s101 := by timed congr lean_s52 lean_r194
have lean_s102 : (Eq arg1 arg1) := by timed rfl
let lean_s103 := by timed flipCongrArg lean_s102 [GE.ge]
have lean_s104 : (Eq distance distance) := by timed rfl
let lean_s105 := by timed flipCongrArg lean_s82 [HAdd.hAdd]
have lean_s106 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4))) (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 4)))) := by timed congr lean_s105 lean_r97
have lean_s107 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) := by timed Eq.trans lean_s106 lean_r186
have lean_s108 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) := by timed Eq.trans lean_r187 lean_s107
let lean_s109 := by timed congrHAdd lean_s104 lean_s108
have lean_s110 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)))) := by timed congrHAdd lean_s73 lean_s109
have lean_s111 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) := by timed Eq.trans lean_s110 lean_r185
have lean_s112 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) := by timed Eq.trans lean_r190 lean_s111
have lean_s113 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength))))) := by timed congr lean_s103 lean_s112
have lean_s114 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) := by timed Eq.trans lean_s113 lean_r241
have lean_s115 : (Eq (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))))) := by timed flipCongrArg lean_s114 [Not]
have lean_s116 : (Eq (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) := by timed Eq.trans lean_s115 lean_r257
have lean_s117 : (Eq (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) := by timed Eq.trans lean_r192 lean_s116
let lean_s118 := by timed congr lean_s52 lean_s117
let lean_s119 := by timed flipCongrArg lean_s102 [Eq]
have lean_s120 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
let lean_s121 := by timed flipCongrArg lean_s120 [HMul.hMul]
let lean_s122 := by timed flipCongrArg lean_s78 [HAdd.hAdd]
have lean_s123 : (Eq (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2))) (binrel% HAdd.hAdd fmt1 (Neg.neg (Int.ofNat 2)))) := by timed congr lean_s122 lean_r176
have lean_s124 : (Eq (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.trans lean_s123 lean_r130
have lean_s125 : (Eq (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.trans lean_r178 lean_s124
let lean_s126 := by timed flipCongrArg lean_s125 [HAdd.hAdd]
have lean_s127 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) := by timed rfl
have lean_s128 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0))) := by timed congr lean_s126 lean_s127
have lean_s129 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) := by timed Eq.trans lean_s128 lean_r29
have lean_s130 : (Eq (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) := by timed Eq.trans lean_r179 lean_s129
have lean_s131 : (Eq (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) := by timed flipCongrArg lean_s130 [sx5fcount]
have lean_s132 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))) := by timed congr lean_s121 lean_s131
let lean_s133 := by timed flipCongrArg lean_s120 [HMul.hMul]
have lean_s134 : (Eq (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) := by timed flipCongrArg lean_s130 [xx5fcount]
have lean_s135 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))) := by timed congr lean_s133 lean_s134
let lean_s136 := by timed congrHAdd lean_s132 lean_s135
have lean_s137 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) := by timed congrHAdd lean_s73 lean_s136
have lean_s138 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) := by timed Eq.trans lean_r181 lean_s137
have lean_s139 : (Eq (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (Eq arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) := by timed congr lean_s119 lean_s138
have lean_s140 : (Eq (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) := by timed Eq.trans lean_s139 lean_r174
let lean_s141 := by timed congr lean_s52 lean_s140
have lean_s142 : (Eq Or Or) := by timed rfl
let lean_s143 := by timed flipCongrArg lean_s78 [Eq]
have lean_s144 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 fmt0)) := by timed congr lean_s143 lean_r144
have lean_s145 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt0 fmt1)) := by timed Eq.trans lean_s144 lean_r61
let lean_s146 := by timed congr lean_s142 lean_s145
let lean_s147 := by timed flipCongrArg lean_s78 [Eq]
have lean_s148 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) := by timed congr lean_s147 lean_r168
have lean_s149 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) := by timed Eq.trans lean_s148 lean_r152
let lean_s150 := by timed congr lean_s142 lean_s149
let lean_s151 := by timed flipCongrArg lean_s78 [Eq]
have lean_s152 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0))) := by timed congr lean_s151 lean_r264
have lean_s153 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s152 lean_r170
let lean_s154 := by timed congr lean_s142 lean_s153
let lean_s155 := by timed flipCongrArg lean_s78 [Eq]
have lean_s156 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 3) fmt0))) := by timed congr lean_s155 lean_r125
have lean_s157 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) := by timed Eq.trans lean_s156 lean_r158
let lean_s158 := by timed congr lean_s142 lean_s157
let lean_s159 := by timed flipCongrArg lean_s78 [Eq]
have lean_s160 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 4) fmt0))) := by timed congr lean_s159 lean_r141
have lean_s161 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) := by timed Eq.trans lean_s160 lean_r169
let lean_s162 := by timed congr lean_s142 lean_s161
let lean_s163 := by timed flipCongrArg lean_s78 [Eq]
have lean_s164 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 5) fmt0))) := by timed congr lean_s163 lean_r6
have lean_s165 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))) := by timed Eq.trans lean_s164 lean_r120
let lean_s166 := by timed congr lean_s162 lean_s165
let lean_s167 := by timed congr lean_s158 lean_s166
let lean_s168 := by timed congr lean_s154 lean_s167
let lean_s169 := by timed congr lean_s150 lean_s168
have lean_s170 : (Eq (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))))))) (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1)))))))) := by timed congr lean_s146 lean_s169
have lean_s171 : (Eq (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1)))))))) := by timed Eq.trans lean_r238 lean_s170
let lean_s172 := by timed congr lean_s52 lean_s171
have lean_s173 : (Eq Or Or) := by timed rfl
let lean_s174 := by timed flipCongrArg lean_s102 [Eq]
have lean_s175 : (Eq (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 fmt0)) := by timed congr lean_s174 lean_r144
let lean_s176 := by timed congr lean_s173 lean_s175
let lean_s177 := by timed flipCongrArg lean_s102 [Eq]
have lean_s178 : (Eq (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) := by timed congr lean_s177 lean_r168
let lean_s179 := by timed congr lean_s173 lean_s178
let lean_s180 := by timed flipCongrArg lean_s102 [Eq]
have lean_s181 : (Eq (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0))) := by timed congr lean_s180 lean_r264
let lean_s182 := by timed congr lean_s179 lean_s181
have lean_s183 : (Eq (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))))) (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0))))) := by timed congr lean_s176 lean_s182
have lean_s184 : (Eq (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0))))) := by timed Eq.trans lean_r37 lean_s183
let lean_s185 := by timed congr lean_s52 lean_s184
have lean_s186 : (Eq Or Or) := by timed rfl
let lean_s187 := by timed congr lean_s186 lean_r102
let lean_s188 := by timed congr lean_s186 lean_r12
let lean_s189 := by timed congr lean_s186 lean_r166
have lean_s190 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s191 := by timed congr lean_s186 lean_s190
have lean_s192 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s193 := by timed congr lean_s186 lean_s192
have lean_s194 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s195 := by timed congr lean_s186 lean_s194
have lean_s196 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s197 := by timed congr lean_s186 lean_s196
have lean_s198 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 255)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) := by timed rfl
let lean_s199 := by timed congr lean_s197 lean_s198
let lean_s200 := by timed congr lean_s195 lean_s199
let lean_s201 := by timed congr lean_s193 lean_s200
let lean_s202 := by timed congr lean_s191 lean_s201
let lean_s203 := by timed congr lean_s189 lean_s202
let lean_s204 := by timed congr lean_s188 lean_s203
have lean_s205 : (Eq (Or (Eq (format (Int.ofNat 0)) percent) (Or (Eq (format (Int.ofNat 0)) s) (Or (Eq (format (Int.ofNat 0)) x) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed congr lean_s187 lean_s204
have lean_s206 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r103 lean_s205
let lean_s207 := by timed congr lean_s52 lean_s206
have lean_s208 : (Eq Or Or) := by timed rfl
let lean_s209 := by timed congr lean_s208 lean_r58
let lean_s210 := by timed congr lean_s208 lean_r162
let lean_s211 := by timed congr lean_s208 lean_r11
have lean_s212 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s213 := by timed congr lean_s208 lean_s212
have lean_s214 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s215 := by timed congr lean_s208 lean_s214
have lean_s216 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s217 := by timed congr lean_s208 lean_s216
have lean_s218 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) := by timed rfl
let lean_s219 := by timed congr lean_s208 lean_s218
have lean_s220 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 255)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) := by timed rfl
let lean_s221 := by timed congr lean_s219 lean_s220
let lean_s222 := by timed congr lean_s217 lean_s221
let lean_s223 := by timed congr lean_s215 lean_s222
let lean_s224 := by timed congr lean_s213 lean_s223
let lean_s225 := by timed congr lean_s211 lean_s224
let lean_s226 := by timed congr lean_s210 lean_s225
have lean_s227 : (Eq (Or (Eq (format (Int.ofNat 1)) percent) (Or (Eq (format (Int.ofNat 1)) s) (Or (Eq (format (Int.ofNat 1)) x) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed congr lean_s209 lean_s226
have lean_s228 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r17 lean_s227
let lean_s229 := by timed congr lean_s52 lean_s228
have lean_s230 : (Eq Or Or) := by timed rfl
let lean_s231 := by timed congr lean_s230 lean_r89
let lean_s232 := by timed congr lean_s230 lean_r62
let lean_s233 := by timed congr lean_s230 lean_r14
have lean_s234 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s235 := by timed congr lean_s230 lean_s234
have lean_s236 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s237 := by timed congr lean_s230 lean_s236
have lean_s238 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s239 := by timed congr lean_s230 lean_s238
have lean_s240 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) := by timed rfl
let lean_s241 := by timed congr lean_s230 lean_s240
have lean_s242 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 255)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) := by timed rfl
let lean_s243 := by timed congr lean_s241 lean_s242
let lean_s244 := by timed congr lean_s239 lean_s243
let lean_s245 := by timed congr lean_s237 lean_s244
let lean_s246 := by timed congr lean_s235 lean_s245
let lean_s247 := by timed congr lean_s233 lean_s246
let lean_s248 := by timed congr lean_s232 lean_s247
have lean_s249 : (Eq (Or (Eq (format (Int.ofNat 2)) percent) (Or (Eq (format (Int.ofNat 2)) s) (Or (Eq (format (Int.ofNat 2)) x) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed congr lean_s231 lean_s248
have lean_s250 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r165 lean_s249
let lean_s251 := by timed congr lean_s52 lean_s250
have lean_s252 : (Eq Or Or) := by timed rfl
let lean_s253 := by timed congr lean_s252 lean_r189
let lean_s254 := by timed congr lean_s252 lean_r5
let lean_s255 := by timed congr lean_s252 lean_r68
have lean_s256 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s257 := by timed congr lean_s252 lean_s256
have lean_s258 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s259 := by timed congr lean_s252 lean_s258
have lean_s260 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s261 := by timed congr lean_s252 lean_s260
have lean_s262 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) := by timed rfl
let lean_s263 := by timed congr lean_s252 lean_s262
have lean_s264 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 255)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) := by timed rfl
let lean_s265 := by timed congr lean_s263 lean_s264
let lean_s266 := by timed congr lean_s261 lean_s265
let lean_s267 := by timed congr lean_s259 lean_s266
let lean_s268 := by timed congr lean_s257 lean_s267
let lean_s269 := by timed congr lean_s255 lean_s268
let lean_s270 := by timed congr lean_s254 lean_s269
have lean_s271 : (Eq (Or (Eq (format (Int.ofNat 3)) percent) (Or (Eq (format (Int.ofNat 3)) s) (Or (Eq (format (Int.ofNat 3)) x) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed congr lean_s253 lean_s270
have lean_s272 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r71 lean_s271
let lean_s273 := by timed congr lean_s52 lean_s272
have lean_s274 : (Eq Or Or) := by timed rfl
let lean_s275 := by timed congr lean_s274 lean_r184
let lean_s276 := by timed congr lean_s274 lean_r30
let lean_s277 := by timed congr lean_s274 lean_r94
have lean_s278 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s279 := by timed congr lean_s274 lean_s278
have lean_s280 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s281 := by timed congr lean_s274 lean_s280
have lean_s282 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s283 := by timed congr lean_s274 lean_s282
have lean_s284 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) := by timed rfl
let lean_s285 := by timed congr lean_s274 lean_s284
have lean_s286 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 255)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) := by timed rfl
let lean_s287 := by timed congr lean_s285 lean_s286
let lean_s288 := by timed congr lean_s283 lean_s287
let lean_s289 := by timed congr lean_s281 lean_s288
let lean_s290 := by timed congr lean_s279 lean_s289
let lean_s291 := by timed congr lean_s277 lean_s290
let lean_s292 := by timed congr lean_s276 lean_s291
have lean_s293 : (Eq (Or (Eq (format (Int.ofNat 4)) percent) (Or (Eq (format (Int.ofNat 4)) s) (Or (Eq (format (Int.ofNat 4)) x) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed congr lean_s275 lean_s292
have lean_s294 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r164 lean_s293
let lean_s295 := by timed congr lean_s52 lean_s294
have lean_s296 : (Eq Or Or) := by timed rfl
let lean_s297 := by timed congr lean_s296 lean_r28
let lean_s298 := by timed congr lean_s296 lean_r113
let lean_s299 := by timed congr lean_s296 lean_r50
have lean_s300 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s301 := by timed congr lean_s296 lean_s300
have lean_s302 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s303 := by timed congr lean_s296 lean_s302
have lean_s304 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s305 := by timed congr lean_s296 lean_s304
have lean_s306 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s307 := by timed congr lean_s296 lean_s306
have lean_s308 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 255)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) := by timed rfl
let lean_s309 := by timed congr lean_s307 lean_s308
let lean_s310 := by timed congr lean_s305 lean_s309
let lean_s311 := by timed congr lean_s303 lean_s310
let lean_s312 := by timed congr lean_s301 lean_s311
let lean_s313 := by timed congr lean_s299 lean_s312
let lean_s314 := by timed congr lean_s298 lean_s313
have lean_s315 : (Eq (Or (Eq (format (Int.ofNat 5)) percent) (Or (Eq (format (Int.ofNat 5)) s) (Or (Eq (format (Int.ofNat 5)) x) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255)))))))))) := by timed congr lean_s297 lean_s314
have lean_s316 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r163 lean_s315
let lean_s317 := by timed congr lean_s52 lean_s316
let lean_s318 := by timed flipCongrArg lean_r102 [And]
have lean_s319 : (Eq (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) := by timed congr lean_s318 lean_r162
let lean_s320 := by timed flipCongrArg lean_s319 [Implies]
have lean_s321 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s322 : (Eq (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s320 lean_s321
let lean_s323 := by timed congr lean_s52 lean_s322
have lean_s324 : (Eq (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s319 [Not]
let lean_s325 := by timed flipCongrArg lean_s324 [Implies]
have lean_s326 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s327 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s325 lean_s326
let lean_s328 := by timed congr lean_s52 lean_s327
let lean_s329 := by timed flipCongrArg lean_r58 [And]
have lean_s330 : (Eq (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) := by timed congr lean_s329 lean_r62
let lean_s331 := by timed flipCongrArg lean_s330 [Implies]
have lean_s332 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))) := by timed rfl
let lean_s333 := by timed flipCongrArg lean_s332 [Eq]
have lean_s334 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0))))) := by timed congr lean_s333 lean_r161
have lean_s335 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by timed Eq.trans lean_s334 lean_r160
have lean_s336 : (Eq (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) := by timed congr lean_s331 lean_s335
let lean_s337 := by timed congr lean_s52 lean_s336
have lean_s338 : (Eq (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s330 [Not]
let lean_s339 := by timed flipCongrArg lean_s338 [Implies]
have lean_s340 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s339 lean_r156
let lean_s341 := by timed congr lean_s52 lean_s340
let lean_s342 := by timed flipCongrArg lean_r89 [And]
have lean_s343 : (Eq (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) := by timed congr lean_s342 lean_r5
let lean_s344 := by timed flipCongrArg lean_s343 [Implies]
have lean_s345 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 2))) := by timed rfl
let lean_s346 := by timed flipCongrArg lean_s345 [Eq]
have lean_s347 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s346 lean_r154
have lean_s348 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed Eq.trans lean_s347 lean_r153
have lean_s349 : (Eq (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))))) := by timed congr lean_s344 lean_s348
let lean_s350 := by timed congr lean_s52 lean_s349
have lean_s351 : (Eq (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s343 [Not]
let lean_s352 := by timed flipCongrArg lean_s351 [Implies]
have lean_s353 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s352 lean_r7
let lean_s354 := by timed congr lean_s52 lean_s353
let lean_s355 := by timed flipCongrArg lean_r189 [And]
have lean_s356 : (Eq (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) := by timed congr lean_s355 lean_r30
let lean_s357 := by timed flipCongrArg lean_s356 [Implies]
have lean_s358 : (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 3))) := by timed rfl
let lean_s359 := by timed flipCongrArg lean_s358 [Eq]
have lean_s360 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s359 lean_r122
have lean_s361 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) := by timed Eq.trans lean_s360 lean_r114
have lean_s362 : (Eq (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))))) := by timed congr lean_s357 lean_s361
let lean_s363 := by timed congr lean_s52 lean_s362
have lean_s364 : (Eq (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s356 [Not]
let lean_s365 := by timed flipCongrArg lean_s364 [Implies]
have lean_s366 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s365 lean_r9
let lean_s367 := by timed congr lean_s52 lean_s366
let lean_s368 := by timed flipCongrArg lean_r184 [And]
have lean_s369 : (Eq (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) := by timed congr lean_s368 lean_r113
let lean_s370 := by timed flipCongrArg lean_s369 [Implies]
have lean_s371 : (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 4))) := by timed rfl
let lean_s372 := by timed flipCongrArg lean_s371 [Eq]
have lean_s373 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s372 lean_r34
have lean_s374 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) := by timed Eq.trans lean_s373 lean_r216
have lean_s375 : (Eq (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))))) := by timed congr lean_s370 lean_s374
let lean_s376 := by timed congr lean_s52 lean_s375
have lean_s377 : (Eq (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s369 [Not]
let lean_s378 := by timed flipCongrArg lean_s377 [Implies]
have lean_s379 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))))) := by timed congr lean_s378 lean_r143
let lean_s380 := by timed congr lean_s52 lean_s379
let lean_s381 := by timed flipCongrArg lean_r28 [And]
have lean_s382 : (Eq (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) := by timed congr lean_s381 lean_r26
let lean_s383 := by timed flipCongrArg lean_s382 [Implies]
have lean_s384 : (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 5))) := by timed rfl
let lean_s385 := by timed flipCongrArg lean_s384 [Eq]
have lean_s386 : (Eq (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 4))))) := by timed congr lean_s385 lean_r23
have lean_s387 : (Eq (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) := by timed Eq.trans lean_s386 lean_r39
have lean_s388 : (Eq (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5)))))) := by timed congr lean_s383 lean_s387
let lean_s389 := by timed congr lean_s52 lean_s388
have lean_s390 : (Eq (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))))) := by timed flipCongrArg lean_s382 [Not]
let lean_s391 := by timed flipCongrArg lean_s390 [Implies]
have lean_s392 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5))))) := by timed congr lean_s391 lean_r204
let lean_s393 := by timed congr lean_s52 lean_s392
let lean_s394 := by timed flipCongrArg lean_r102 [And]
have lean_s395 : (Eq (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) := by timed congr lean_s394 lean_r11
let lean_s396 := by timed flipCongrArg lean_s395 [Implies]
have lean_s397 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s398 : (Eq (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s396 lean_s397
let lean_s399 := by timed congr lean_s52 lean_s398
have lean_s400 : (Eq (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s395 [Not]
let lean_s401 := by timed flipCongrArg lean_s400 [Implies]
have lean_s402 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s403 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s401 lean_s402
let lean_s404 := by timed congr lean_s52 lean_s403
let lean_s405 := by timed flipCongrArg lean_r58 [And]
have lean_s406 : (Eq (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) := by timed congr lean_s405 lean_r14
let lean_s407 := by timed flipCongrArg lean_s406 [Implies]
have lean_s408 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))) := by timed rfl
let lean_s409 := by timed flipCongrArg lean_s408 [Eq]
have lean_s410 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0))))) := by timed congr lean_s409 lean_r118
have lean_s411 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by timed Eq.trans lean_s410 lean_r13
have lean_s412 : (Eq (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) := by timed congr lean_s407 lean_s411
let lean_s413 := by timed congr lean_s52 lean_s412
have lean_s414 : (Eq (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s406 [Not]
let lean_s415 := by timed flipCongrArg lean_s414 [Implies]
have lean_s416 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s415 lean_r197
let lean_s417 := by timed congr lean_s52 lean_s416
let lean_s418 := by timed flipCongrArg lean_r89 [And]
have lean_s419 : (Eq (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) := by timed congr lean_s418 lean_r68
let lean_s420 := by timed flipCongrArg lean_s419 [Implies]
have lean_s421 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 2))) := by timed rfl
let lean_s422 := by timed flipCongrArg lean_s421 [Eq]
have lean_s423 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s422 lean_r18
have lean_s424 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed Eq.trans lean_s423 lean_r134
have lean_s425 : (Eq (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))) := by timed congr lean_s420 lean_s424
let lean_s426 := by timed congr lean_s52 lean_s425
have lean_s427 : (Eq (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s419 [Not]
let lean_s428 := by timed flipCongrArg lean_s427 [Implies]
have lean_s429 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s428 lean_r259
let lean_s430 := by timed congr lean_s52 lean_s429
let lean_s431 := by timed flipCongrArg lean_r189 [And]
have lean_s432 : (Eq (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) := by timed congr lean_s431 lean_r94
let lean_s433 := by timed flipCongrArg lean_s432 [Implies]
have lean_s434 : (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 3))) := by timed rfl
let lean_s435 := by timed flipCongrArg lean_s434 [Eq]
have lean_s436 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s435 lean_r88
have lean_s437 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) := by timed Eq.trans lean_s436 lean_r19
have lean_s438 : (Eq (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))))) := by timed congr lean_s433 lean_s437
let lean_s439 := by timed congr lean_s52 lean_s438
have lean_s440 : (Eq (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s432 [Not]
let lean_s441 := by timed flipCongrArg lean_s440 [Implies]
have lean_s442 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s441 lean_r96
let lean_s443 := by timed congr lean_s52 lean_s442
let lean_s444 := by timed flipCongrArg lean_r184 [And]
have lean_s445 : (Eq (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) := by timed congr lean_s444 lean_r50
let lean_s446 := by timed flipCongrArg lean_s445 [Implies]
have lean_s447 : (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 4))) := by timed rfl
let lean_s448 := by timed flipCongrArg lean_s447 [Eq]
have lean_s449 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s448 lean_r146
have lean_s450 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) := by timed Eq.trans lean_s449 lean_r20
have lean_s451 : (Eq (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))))) := by timed congr lean_s446 lean_s450
let lean_s452 := by timed congr lean_s52 lean_s451
have lean_s453 : (Eq (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s445 [Not]
let lean_s454 := by timed flipCongrArg lean_s453 [Implies]
have lean_s455 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))) := by timed congr lean_s454 lean_r240
let lean_s456 := by timed congr lean_s52 lean_s455
let lean_s457 := by timed flipCongrArg lean_r28 [And]
have lean_s458 : (Eq (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) := by timed congr lean_s457 lean_r74
let lean_s459 := by timed flipCongrArg lean_s458 [Implies]
have lean_s460 : (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 5))) := by timed rfl
let lean_s461 := by timed flipCongrArg lean_s460 [Eq]
have lean_s462 : (Eq (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 4))))) := by timed congr lean_s461 lean_r91
have lean_s463 : (Eq (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) := by timed Eq.trans lean_s462 lean_r55
have lean_s464 : (Eq (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5)))))) := by timed congr lean_s459 lean_s463
let lean_s465 := by timed congr lean_s52 lean_s464
have lean_s466 : (Eq (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))))) := by timed flipCongrArg lean_s458 [Not]
let lean_s467 := by timed flipCongrArg lean_s466 [Implies]
have lean_s468 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))) := by timed congr lean_s467 lean_r54
let lean_s469 := by timed congr lean_s465 lean_s468
let lean_s470 := by timed congr lean_s456 lean_s469
let lean_s471 := by timed congr lean_s452 lean_s470
let lean_s472 := by timed congr lean_s443 lean_s471
let lean_s473 := by timed congr lean_s439 lean_s472
let lean_s474 := by timed congr lean_s430 lean_s473
let lean_s475 := by timed congr lean_s426 lean_s474
let lean_s476 := by timed congr lean_s417 lean_s475
let lean_s477 := by timed congr lean_s413 lean_s476
let lean_s478 := by timed congr lean_s404 lean_s477
let lean_s479 := by timed congr lean_s399 lean_s478
let lean_s480 := by timed congr lean_s393 lean_s479
let lean_s481 := by timed congr lean_s389 lean_s480
let lean_s482 := by timed congr lean_s380 lean_s481
let lean_s483 := by timed congr lean_s376 lean_s482
let lean_s484 := by timed congr lean_s367 lean_s483
let lean_s485 := by timed congr lean_s363 lean_s484
let lean_s486 := by timed congr lean_s354 lean_s485
let lean_s487 := by timed congr lean_s350 lean_s486
let lean_s488 := by timed congr lean_s341 lean_s487
let lean_s489 := by timed congr lean_s337 lean_s488
let lean_s490 := by timed congr lean_s328 lean_s489
let lean_s491 := by timed congr lean_s323 lean_s490
let lean_s492 := by timed congr lean_s317 lean_s491
let lean_s493 := by timed congr lean_s295 lean_s492
let lean_s494 := by timed congr lean_s273 lean_s493
let lean_s495 := by timed congr lean_s251 lean_s494
let lean_s496 := by timed congr lean_s229 lean_s495
let lean_s497 := by timed congr lean_s207 lean_s496
let lean_s498 := by timed congr lean_s185 lean_s497
let lean_s499 := by timed congr lean_s172 lean_s498
let lean_s500 := by timed congr lean_s141 lean_s499
let lean_s501 := by timed congr lean_s118 lean_s500
let lean_s502 := by timed congr lean_s101 lean_s501
let lean_s503 := by timed congr lean_s100 lean_s502
let lean_s504 := by timed congr lean_s94 lean_s503
let lean_s505 := by timed congr lean_s77 lean_s504
let lean_s506 := by timed congr lean_s76 lean_s505
let lean_s507 := by timed congr lean_s72 lean_s506
let lean_s508 := by timed congr lean_s70 lean_s507
let lean_s509 := by timed congr lean_s68 lean_s508
let lean_s510 := by timed congr lean_s66 lean_s509
let lean_s511 := by timed congr lean_s64 lean_s510
let lean_s512 := by timed congr lean_s62 lean_s511
let lean_s513 := by timed congr lean_s60 lean_s512
let lean_s514 := by timed congr lean_s58 lean_s513
let lean_s515 := by timed congr lean_s56 lean_s514
have lean_s516 : (Eq (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (And (binrel% GE.ge arg1 fmt0) (And (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (And (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (And (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (And (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (And (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (And (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s54 lean_s515
have lean_s517 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_r208 lean_s516
let lean_s518 := by timed flipCongrArg lean_s517 [Implies]
have lean_s519 : (Eq And And) := by timed rfl
have lean_s520 : (Eq (Not (Eq (format fmt1) percent)) (Not (Eq percent (format fmt1)))) := by timed flipCongrArg lean_r31 [Not]
let lean_s521 := by timed congr lean_s519 lean_s520
have lean_s522 : (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) := by timed flipCongrArg lean_r33 [format]
let lean_s523 := by timed flipCongrArg lean_s522 [Eq]
have lean_s524 : (Eq s s) := by timed rfl
have lean_s525 : (Eq (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) s)) := by timed congr lean_s523 lean_s524
have lean_s526 : (Eq (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) := by timed Eq.trans lean_s525 lean_r35
let lean_s527 := by timed congr lean_s519 lean_s526
let lean_s528 := by timed congr lean_s519 lean_r44
have lean_s529 : (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) := by timed flipCongrArg lean_r80 [format]
let lean_s530 := by timed flipCongrArg lean_s529 [Eq]
have lean_s531 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s532 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) adrx5fmedlo)) := by timed congr lean_s530 lean_s531
have lean_s533 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)))) := by timed Eq.trans lean_s532 lean_r47
let lean_s534 := by timed congr lean_s519 lean_s533
have lean_s535 : (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) := by timed flipCongrArg lean_r36 [format]
let lean_s536 := by timed flipCongrArg lean_s535 [Eq]
have lean_s537 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s538 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) adrx5fmedhi)) := by timed congr lean_s536 lean_s537
have lean_s539 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)))) := by timed Eq.trans lean_s538 lean_r41
let lean_s540 := by timed congr lean_s519 lean_s539
have lean_s541 : (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))) := by timed flipCongrArg lean_r51 [format]
let lean_s542 := by timed flipCongrArg lean_s541 [Eq]
have lean_s543 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s544 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) adrx5fhi)) := by timed congr lean_s542 lean_s543
have lean_s545 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))) := by timed Eq.trans lean_s544 lean_r42
let lean_s546 := by timed congr lean_s540 lean_s545
let lean_s547 := by timed congr lean_s534 lean_s546
let lean_s548 := by timed congr lean_s528 lean_s547
let lean_s549 := by timed congr lean_s527 lean_s548
have lean_s550 : (Eq (And (Not (Eq (format fmt1) percent)) (And (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (And (Eq (format arg1) adrx5flo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))) := by timed congr lean_s521 lean_s549
have lean_s551 : (Eq (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))) := by timed Eq.trans lean_r132 lean_s550
have lean_s552 : (Eq (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi))) (Implies (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) := by timed congr lean_s518 lean_s551
have lean_s553 : (Eq (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) (Not (Implies (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))))) := by timed flipCongrArg lean_s552 [Not]
have lean_s554 : (Eq And And) := by timed rfl
have lean_s555 : (Not (Implies (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) := by timed eqResolve lean_a266 lean_s553
have lean_s556 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s557 : (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) := by andElim lean_s556, 16
have lean_s558 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s559 : (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) := by andElim lean_s558, 10
have lean_s560 : (Eq arg0 arg0) := by timed rfl
let lean_s561 := by timed flipCongrArg lean_s560 [Eq]
have lean_s562 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s563 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s562, 9
have lean_s564 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s565 : (Eq x (Int.ofNat 120)) := by andElim lean_s564, 8
have lean_s566 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s567 : (Eq s (Int.ofNat 115)) := by andElim lean_s566, 7
have lean_s568 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s569 : (Eq percent (Int.ofNat 37)) := by andElim lean_s568, 6
have lean_s570 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s571 : (Eq adrx5fhi (Int.ofNat 6)) := by andElim lean_s570, 5
have lean_s572 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s573 : (Eq adrx5fmedhi (Int.ofNat 5)) := by andElim lean_s572, 4
have lean_s574 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s575 : (Eq adrx5fmedlo (Int.ofNat 4)) := by andElim lean_s574, 3
have lean_s576 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s577 : (Eq adrx5flo (Int.ofNat 3)) := by andElim lean_s576, 2
have lean_s578 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s579 : (Eq fmtx5flength (Int.ofNat 6)) := by andElim lean_s578, 1
have lean_s580 : (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s555
have lean_s581 : (Eq distance (Int.ofNat 11)) := by andElim lean_s580, 0
let lean_s582 := by timed And.intro lean_s579 lean_s581
let lean_s583 := by timed And.intro lean_s577 lean_s582
let lean_s584 := by timed And.intro lean_s575 lean_s583
let lean_s585 := by timed And.intro lean_s573 lean_s584
let lean_s586 := by timed And.intro lean_s571 lean_s585
let lean_s587 := by timed And.intro lean_s569 lean_s586
let lean_s588 := by timed And.intro lean_s567 lean_s587
let lean_s589 := by timed And.intro lean_s565 lean_s588
have lean_s590 : (And (Eq fmt0 (Int.ofNat 0)) (And (Eq x (Int.ofNat 120)) (And (Eq s (Int.ofNat 115)) (And (Eq percent (Int.ofNat 37)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq fmtx5flength (Int.ofNat 6)) (Eq distance (Int.ofNat 11))))))))))) := by timed And.intro lean_s563 lean_s589
have lean_s591 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s590, 0
let lean_s592 := by timed flipCongrArg lean_s591 [HAdd.hAdd]
have lean_s593 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s594 := by timed flipCongrArg lean_s593 [HMul.hMul]
have lean_s595 : (Eq distance (Int.ofNat 11)) := by andElim lean_s590, 9
have lean_s596 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11))) := by timed congr lean_s594 lean_s595
have lean_s597 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) := by timed congr lean_s592 lean_s596
have lean_s598 : (Eq (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (Eq arg0 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11))))) := by timed congr lean_s561 lean_s597
let lean_s599 := by timed flipCongrArg lean_s73 [Eq]
have lean_s600 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
let lean_s601 := by timed flipCongrArg lean_s600 [HAdd.hAdd]
have lean_s602 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11))) (binrel% HAdd.hAdd (Int.ofNat 0) (Neg.neg (Int.ofNat 11)))) := by timed congr lean_s601 lean_r86
have lean_s603 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11))) (Neg.neg (Int.ofNat 11))) := by timed Eq.trans lean_s602 lean_r145
have lean_s604 : (Eq (Eq arg0 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (Eq arg0 (Neg.neg (Int.ofNat 11)))) := by timed congr lean_s599 lean_s603
have lean_s605 : (Eq (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (Eq arg0 (Neg.neg (Int.ofNat 11)))) := by timed Eq.trans lean_s598 lean_s604
have lean_s606 : (Eq arg0 (Neg.neg (Int.ofNat 11))) := by timed eqResolve lean_s559 lean_s605
let lean_s607 := by timed And.intro lean_s579 lean_s581
let lean_s608 := by timed And.intro lean_s577 lean_s607
let lean_s609 := by timed And.intro lean_s575 lean_s608
let lean_s610 := by timed And.intro lean_s573 lean_s609
let lean_s611 := by timed And.intro lean_s571 lean_s610
let lean_s612 := by timed And.intro lean_s569 lean_s611
let lean_s613 := by timed And.intro lean_s567 lean_s612
let lean_s614 := by timed And.intro lean_s565 lean_s613
let lean_s615 := by timed And.intro lean_s563 lean_s614
have lean_s616 : (And (Eq arg0 (Neg.neg (Int.ofNat 11))) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq x (Int.ofNat 120)) (And (Eq s (Int.ofNat 115)) (And (Eq percent (Int.ofNat 37)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq fmtx5flength (Int.ofNat 6)) (Eq distance (Int.ofNat 11)))))))))))) := by timed And.intro lean_s606 lean_s615
have lean_s617 : (Eq arg0 (Neg.neg (Int.ofNat 11))) := by andElim lean_s616, 0
let lean_s618 := by timed flipCongrArg lean_s617 [Eq]
have lean_s619 : (Eq arg1 arg1) := by timed rfl
have lean_s620 : (Eq (Neg.neg (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) := by timed rfl
let lean_s621 := by timed flipCongrArg lean_s620 [HMul.hMul]
have lean_s622 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
have lean_s623 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s624 := by timed flipCongrArg lean_s623 [HMul.hMul]
have lean_s625 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s616, 1
have lean_s626 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) := by timed congr lean_s624 lean_s625
have lean_s627 : (Eq fmt1 fmt1) := by timed rfl
let lean_s628 := by timed congrHAdd lean_s626 lean_s627
have lean_s629 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) := by timed congrHAdd lean_s622 lean_s628
have lean_s630 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s629 [sx5fcount]
have lean_s631 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s621 lean_s630
let lean_s632 := by timed flipCongrArg lean_s620 [HMul.hMul]
have lean_s633 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s629 [xx5fcount]
have lean_s634 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s632 lean_s633
let lean_s635 := by timed congrHAdd lean_s631 lean_s634
have lean_s636 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) := by timed congrHAdd lean_s619 lean_s635
have lean_s637 : (Eq (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) := by timed congr lean_s618 lean_s636
have lean_s638 : (Eq (Neg.neg (Int.ofNat 11)) (Neg.neg (Int.ofNat 11))) := by timed rfl
let lean_s639 := by timed flipCongrArg lean_s638 [Eq]
have lean_s640 : (Eq (Neg.neg (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) := by timed rfl
let lean_s641 := by timed flipCongrArg lean_s640 [HMul.hMul]
have lean_s642 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
let lean_s643 := by timed congrHAdd lean_r137 lean_s78
have lean_s644 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 0) fmt1))) := by timed congrHAdd lean_s642 lean_s643
have lean_s645 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.trans lean_s644 lean_r76
have lean_s646 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s645 [sx5fcount]
have lean_s647 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed congr lean_s641 lean_s646
let lean_s648 := by timed flipCongrArg lean_s640 [HMul.hMul]
have lean_s649 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s645 [xx5fcount]
have lean_s650 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed congr lean_s648 lean_s649
let lean_s651 := by timed congrHAdd lean_s647 lean_s650
have lean_s652 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed congrHAdd lean_s102 lean_s651
have lean_s653 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s639 lean_s652
have lean_s654 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed Eq.trans lean_s653 lean_r210
have lean_s655 : (Eq (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed Eq.trans lean_s637 lean_s654
have lean_s656 : (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed eqResolve lean_s557 lean_s655
let lean_s657 := by timed And.intro lean_s579 lean_s581
let lean_s658 := by timed And.intro lean_s577 lean_s657
let lean_s659 := by timed And.intro lean_s575 lean_s658
let lean_s660 := by timed And.intro lean_s573 lean_s659
let lean_s661 := by timed And.intro lean_s571 lean_s660
let lean_s662 := by timed And.intro lean_s569 lean_s661
let lean_s663 := by timed And.intro lean_s567 lean_s662
let lean_s664 := by timed And.intro lean_s565 lean_s663
let lean_s665 := by timed And.intro lean_s563 lean_s664
let lean_s666 := by timed And.intro lean_s606 lean_s665
have lean_s667 : (And (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (And (Eq arg0 (Neg.neg (Int.ofNat 11))) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq x (Int.ofNat 120)) (And (Eq s (Int.ofNat 115)) (And (Eq percent (Int.ofNat 37)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq fmtx5flength (Int.ofNat 6)) (Eq distance (Int.ofNat 11))))))))))))) := by timed And.intro lean_s656 lean_s666
have lean_s668 : (Eq distance (Int.ofNat 11)) := by andElim lean_s667, 11
let lean_s669 := by timed flipCongrArg lean_s668 [Eq]
have lean_s670 : (Eq (Int.ofNat 11) (Int.ofNat 11)) := by timed rfl
have lean_s671 : (Eq (Eq distance (Int.ofNat 11)) (Eq (Int.ofNat 11) (Int.ofNat 11))) := by timed congr lean_s669 lean_s670
let lean_s672 := by timed congr lean_s554 lean_s671
have lean_s673 : (Eq fmtx5flength (Int.ofNat 6)) := by andElim lean_s667, 10
let lean_s674 := by timed flipCongrArg lean_s673 [Eq]
have lean_s675 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
have lean_s676 : (Eq (Eq fmtx5flength (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s674 lean_s675
let lean_s677 := by timed congr lean_s554 lean_s676
have lean_s678 : (Eq adrx5flo (Int.ofNat 3)) := by andElim lean_s667, 9
let lean_s679 := by timed flipCongrArg lean_s678 [Eq]
have lean_s680 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s681 : (Eq (Eq adrx5flo (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s679 lean_s680
let lean_s682 := by timed congr lean_s554 lean_s681
have lean_s683 : (Eq adrx5fmedlo (Int.ofNat 4)) := by andElim lean_s667, 8
let lean_s684 := by timed flipCongrArg lean_s683 [Eq]
have lean_s685 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s686 : (Eq (Eq adrx5fmedlo (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s684 lean_s685
let lean_s687 := by timed congr lean_s554 lean_s686
have lean_s688 : (Eq adrx5fmedhi (Int.ofNat 5)) := by andElim lean_s667, 7
let lean_s689 := by timed flipCongrArg lean_s688 [Eq]
have lean_s690 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s691 : (Eq (Eq adrx5fmedhi (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s689 lean_s690
let lean_s692 := by timed congr lean_s554 lean_s691
have lean_s693 : (Eq adrx5fhi (Int.ofNat 6)) := by andElim lean_s667, 6
let lean_s694 := by timed flipCongrArg lean_s693 [Eq]
have lean_s695 : (Eq (Eq adrx5fhi (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s694 lean_s675
let lean_s696 := by timed congr lean_s554 lean_s695
have lean_s697 : (Eq percent (Int.ofNat 37)) := by andElim lean_s667, 5
let lean_s698 := by timed flipCongrArg lean_s697 [Eq]
have lean_s699 : (Eq (Int.ofNat 37) (Int.ofNat 37)) := by timed rfl
have lean_s700 : (Eq (Eq percent (Int.ofNat 37)) (Eq (Int.ofNat 37) (Int.ofNat 37))) := by timed congr lean_s698 lean_s699
let lean_s701 := by timed congr lean_s554 lean_s700
have lean_s702 : (Eq s (Int.ofNat 115)) := by andElim lean_s667, 4
let lean_s703 := by timed flipCongrArg lean_s702 [Eq]
have lean_s704 : (Eq (Int.ofNat 115) (Int.ofNat 115)) := by timed rfl
have lean_s705 : (Eq (Eq s (Int.ofNat 115)) (Eq (Int.ofNat 115) (Int.ofNat 115))) := by timed congr lean_s703 lean_s704
let lean_s706 := by timed congr lean_s554 lean_s705
have lean_s707 : (Eq x (Int.ofNat 120)) := by andElim lean_s667, 3
let lean_s708 := by timed flipCongrArg lean_s707 [Eq]
have lean_s709 : (Eq (Int.ofNat 120) (Int.ofNat 120)) := by timed rfl
have lean_s710 : (Eq (Eq x (Int.ofNat 120)) (Eq (Int.ofNat 120) (Int.ofNat 120))) := by timed congr lean_s708 lean_s709
let lean_s711 := by timed congr lean_s554 lean_s710
have lean_s712 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s667, 2
let lean_s713 := by timed flipCongrArg lean_s712 [Eq]
have lean_s714 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s715 : (Eq (Eq fmt0 (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s713 lean_s714
let lean_s716 := by timed congr lean_s554 lean_s715
have lean_s717 : (Eq arg0 (Neg.neg (Int.ofNat 11))) := by andElim lean_s667, 1
let lean_s718 := by timed flipCongrArg lean_s717 [Eq]
let lean_s719 := by timed flipCongrArg lean_s712 [HAdd.hAdd]
have lean_s720 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s721 := by timed flipCongrArg lean_s720 [HMul.hMul]
have lean_s722 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11))) := by timed congr lean_s721 lean_s668
have lean_s723 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) := by timed congr lean_s719 lean_s722
have lean_s724 : (Eq (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11))))) := by timed congr lean_s718 lean_s723
let lean_s725 := by timed congr lean_s554 lean_s724
have lean_s726 : (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by andElim lean_s667, 0
let lean_s727 := by timed flipCongrArg lean_s726 [HAdd.hAdd]
let lean_s728 := by timed flipCongrArg lean_s720 [HMul.hMul]
have lean_s729 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) := by timed congr lean_s728 lean_s712
have lean_s730 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)))) := by timed congr lean_s727 lean_s729
let lean_s731 := by timed flipCongrArg lean_s730 [GE.ge]
have lean_s732 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0))) := by timed congr lean_s731 lean_s714
let lean_s733 := by timed congr lean_s554 lean_s732
have lean_s734 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) := by timed rfl
let lean_s735 := by timed congrHAdd lean_s734 lean_s673
have lean_s736 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6)))) := by timed congrHAdd lean_s712 lean_s735
let lean_s737 := by timed flipCongrArg lean_s736 [GE.ge]
have lean_s738 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s739 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2))) := by timed congr lean_s737 lean_s738
let lean_s740 := by timed congr lean_s554 lean_s739
let lean_s741 := by timed flipCongrArg lean_s712 [HAdd.hAdd]
have lean_s742 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1))) := by timed congr lean_s741 lean_s734
let lean_s743 := by timed flipCongrArg lean_s742 [GE.ge]
have lean_s744 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s743 lean_s720
have lean_s745 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))))) := by timed flipCongrArg lean_s744 [Not]
let lean_s746 := by timed congr lean_s554 lean_s745
let lean_s747 := by timed flipCongrArg lean_s720 [HMul.hMul]
have lean_s748 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s747 lean_s726
let lean_s749 := by timed congrHAdd lean_s748 lean_s668
have lean_s750 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11)))) := by timed congrHAdd lean_s717 lean_s749
let lean_s751 := by timed flipCongrArg lean_s750 [GE.ge]
have lean_s752 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s753 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) := by timed congr lean_s751 lean_s752
have lean_s754 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1)))) := by timed flipCongrArg lean_s753 [Not]
let lean_s755 := by timed congr lean_s554 lean_s754
let lean_s756 := by timed congrHAdd lean_s668 lean_s673
let lean_s757 := by timed congrHAdd lean_s748 lean_s756
have lean_s758 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6))))) := by timed congrHAdd lean_s717 lean_s757
let lean_s759 := by timed flipCongrArg lean_s758 [GE.ge]
have lean_s760 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5))) := by timed congr lean_s759 lean_s690
let lean_s761 := by timed congr lean_s554 lean_s760
let lean_s762 := by timed flipCongrArg lean_s717 [Eq]
have lean_s763 : (Eq (Neg.neg (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) := by timed rfl
let lean_s764 := by timed flipCongrArg lean_s763 [HMul.hMul]
have lean_s765 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
have lean_s766 : (Eq fmt1 fmt1) := by timed rfl
let lean_s767 := by timed congrHAdd lean_s729 lean_s766
have lean_s768 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) := by timed congrHAdd lean_s765 lean_s767
have lean_s769 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s768 [sx5fcount]
have lean_s770 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s764 lean_s769
let lean_s771 := by timed flipCongrArg lean_s763 [HMul.hMul]
have lean_s772 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s768 [xx5fcount]
have lean_s773 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s771 lean_s772
let lean_s774 := by timed congrHAdd lean_s770 lean_s773
have lean_s775 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) := by timed congrHAdd lean_s726 lean_s774
have lean_s776 : (Eq (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) := by timed congr lean_s762 lean_s775
let lean_s777 := by timed congr lean_s554 lean_s776
have lean_s778 : (Eq Or Or) := by timed rfl
let lean_s779 := by timed flipCongrArg lean_s712 [Eq]
have lean_s780 : (Eq (Eq fmt0 fmt1) (Eq (Int.ofNat 0) fmt1)) := by timed congr lean_s779 lean_s766
let lean_s781 := by timed congr lean_s778 lean_s780
let lean_s782 := by timed flipCongrArg lean_s712 [Eq]
have lean_s783 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) := by timed rfl
have lean_s784 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) := by timed congr lean_s782 lean_s783
let lean_s785 := by timed congr lean_s778 lean_s784
let lean_s786 := by timed flipCongrArg lean_s712 [Eq]
have lean_s787 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed rfl
have lean_s788 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed congr lean_s786 lean_s787
let lean_s789 := by timed congr lean_s778 lean_s788
let lean_s790 := by timed flipCongrArg lean_s712 [Eq]
have lean_s791 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) := by timed rfl
have lean_s792 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) := by timed congr lean_s790 lean_s791
let lean_s793 := by timed congr lean_s778 lean_s792
let lean_s794 := by timed flipCongrArg lean_s712 [Eq]
have lean_s795 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) := by timed rfl
have lean_s796 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) := by timed congr lean_s794 lean_s795
let lean_s797 := by timed congr lean_s778 lean_s796
let lean_s798 := by timed flipCongrArg lean_s712 [Eq]
have lean_s799 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1)) := by timed rfl
have lean_s800 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))) := by timed congr lean_s798 lean_s799
let lean_s801 := by timed congr lean_s797 lean_s800
let lean_s802 := by timed congr lean_s793 lean_s801
let lean_s803 := by timed congr lean_s789 lean_s802
let lean_s804 := by timed congr lean_s785 lean_s803
have lean_s805 : (Eq (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1)))))))) := by timed congr lean_s781 lean_s804
let lean_s806 := by timed congr lean_s554 lean_s805
have lean_s807 : (Eq Or Or) := by timed rfl
let lean_s808 := by timed flipCongrArg lean_s726 [Eq]
have lean_s809 : (Eq (Eq arg1 fmt0) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0))) := by timed congr lean_s808 lean_s712
let lean_s810 := by timed congr lean_s807 lean_s809
let lean_s811 := by timed flipCongrArg lean_s726 [Eq]
let lean_s812 := by timed flipCongrArg lean_s752 [HAdd.hAdd]
have lean_s813 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) fmt0) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s812 lean_s712
have lean_s814 : (Eq (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) := by timed congr lean_s811 lean_s813
let lean_s815 := by timed congr lean_s807 lean_s814
let lean_s816 := by timed flipCongrArg lean_s726 [Eq]
let lean_s817 := by timed flipCongrArg lean_s738 [HAdd.hAdd]
have lean_s818 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) fmt0) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))) := by timed congr lean_s817 lean_s712
have lean_s819 : (Eq (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0)))) := by timed congr lean_s816 lean_s818
let lean_s820 := by timed congr lean_s815 lean_s819
have lean_s821 : (Eq (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0)))))) := by timed congr lean_s810 lean_s820
let lean_s822 := by timed congr lean_s554 lean_s821
have lean_s823 : (Eq Or Or) := by timed rfl
let lean_s824 := by timed flipCongrArg lean_s697 [Eq]
have lean_s825 : (Eq (format (Int.ofNat 0)) (format (Int.ofNat 0))) := by timed rfl
have lean_s826 : (Eq (Eq percent (format (Int.ofNat 0))) (Eq (Int.ofNat 37) (format (Int.ofNat 0)))) := by timed congr lean_s824 lean_s825
let lean_s827 := by timed congr lean_s823 lean_s826
let lean_s828 := by timed flipCongrArg lean_s702 [Eq]
have lean_s829 : (Eq (Eq s (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 0)))) := by timed congr lean_s828 lean_s825
let lean_s830 := by timed congr lean_s823 lean_s829
let lean_s831 := by timed flipCongrArg lean_s707 [Eq]
have lean_s832 : (Eq (Eq x (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 0)))) := by timed congr lean_s831 lean_s825
let lean_s833 := by timed congr lean_s823 lean_s832
have lean_s834 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s835 := by timed congr lean_s823 lean_s834
have lean_s836 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s837 := by timed congr lean_s823 lean_s836
have lean_s838 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s839 := by timed congr lean_s823 lean_s838
have lean_s840 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s841 := by timed congr lean_s823 lean_s840
have lean_s842 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 255)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) := by timed rfl
let lean_s843 := by timed congr lean_s841 lean_s842
let lean_s844 := by timed congr lean_s839 lean_s843
let lean_s845 := by timed congr lean_s837 lean_s844
let lean_s846 := by timed congr lean_s835 lean_s845
let lean_s847 := by timed congr lean_s833 lean_s846
let lean_s848 := by timed congr lean_s830 lean_s847
have lean_s849 : (Eq (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed congr lean_s827 lean_s848
let lean_s850 := by timed congr lean_s554 lean_s849
have lean_s851 : (Eq Or Or) := by timed rfl
let lean_s852 := by timed flipCongrArg lean_s697 [Eq]
have lean_s853 : (Eq (format (Int.ofNat 1)) (format (Int.ofNat 1))) := by timed rfl
have lean_s854 : (Eq (Eq percent (format (Int.ofNat 1))) (Eq (Int.ofNat 37) (format (Int.ofNat 1)))) := by timed congr lean_s852 lean_s853
let lean_s855 := by timed congr lean_s851 lean_s854
let lean_s856 := by timed flipCongrArg lean_s702 [Eq]
have lean_s857 : (Eq (Eq s (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) := by timed congr lean_s856 lean_s853
let lean_s858 := by timed congr lean_s851 lean_s857
let lean_s859 := by timed flipCongrArg lean_s707 [Eq]
have lean_s860 : (Eq (Eq x (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) := by timed congr lean_s859 lean_s853
let lean_s861 := by timed congr lean_s851 lean_s860
have lean_s862 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s863 := by timed congr lean_s851 lean_s862
have lean_s864 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s865 := by timed congr lean_s851 lean_s864
have lean_s866 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s867 := by timed congr lean_s851 lean_s866
have lean_s868 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) := by timed rfl
let lean_s869 := by timed congr lean_s851 lean_s868
have lean_s870 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 255)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) := by timed rfl
let lean_s871 := by timed congr lean_s869 lean_s870
let lean_s872 := by timed congr lean_s867 lean_s871
let lean_s873 := by timed congr lean_s865 lean_s872
let lean_s874 := by timed congr lean_s863 lean_s873
let lean_s875 := by timed congr lean_s861 lean_s874
let lean_s876 := by timed congr lean_s858 lean_s875
have lean_s877 : (Eq (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed congr lean_s855 lean_s876
let lean_s878 := by timed congr lean_s554 lean_s877
have lean_s879 : (Eq Or Or) := by timed rfl
let lean_s880 := by timed flipCongrArg lean_s697 [Eq]
have lean_s881 : (Eq (format (Int.ofNat 2)) (format (Int.ofNat 2))) := by timed rfl
have lean_s882 : (Eq (Eq percent (format (Int.ofNat 2))) (Eq (Int.ofNat 37) (format (Int.ofNat 2)))) := by timed congr lean_s880 lean_s881
let lean_s883 := by timed congr lean_s879 lean_s882
let lean_s884 := by timed flipCongrArg lean_s702 [Eq]
have lean_s885 : (Eq (Eq s (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) := by timed congr lean_s884 lean_s881
let lean_s886 := by timed congr lean_s879 lean_s885
let lean_s887 := by timed flipCongrArg lean_s707 [Eq]
have lean_s888 : (Eq (Eq x (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) := by timed congr lean_s887 lean_s881
let lean_s889 := by timed congr lean_s879 lean_s888
have lean_s890 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s891 := by timed congr lean_s879 lean_s890
have lean_s892 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s893 := by timed congr lean_s879 lean_s892
have lean_s894 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s895 := by timed congr lean_s879 lean_s894
have lean_s896 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) := by timed rfl
let lean_s897 := by timed congr lean_s879 lean_s896
have lean_s898 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 255)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) := by timed rfl
let lean_s899 := by timed congr lean_s897 lean_s898
let lean_s900 := by timed congr lean_s895 lean_s899
let lean_s901 := by timed congr lean_s893 lean_s900
let lean_s902 := by timed congr lean_s891 lean_s901
let lean_s903 := by timed congr lean_s889 lean_s902
let lean_s904 := by timed congr lean_s886 lean_s903
have lean_s905 : (Eq (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed congr lean_s883 lean_s904
let lean_s906 := by timed congr lean_s554 lean_s905
have lean_s907 : (Eq Or Or) := by timed rfl
let lean_s908 := by timed flipCongrArg lean_s697 [Eq]
have lean_s909 : (Eq (format (Int.ofNat 3)) (format (Int.ofNat 3))) := by timed rfl
have lean_s910 : (Eq (Eq percent (format (Int.ofNat 3))) (Eq (Int.ofNat 37) (format (Int.ofNat 3)))) := by timed congr lean_s908 lean_s909
let lean_s911 := by timed congr lean_s907 lean_s910
let lean_s912 := by timed flipCongrArg lean_s702 [Eq]
have lean_s913 : (Eq (Eq s (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) := by timed congr lean_s912 lean_s909
let lean_s914 := by timed congr lean_s907 lean_s913
let lean_s915 := by timed flipCongrArg lean_s707 [Eq]
have lean_s916 : (Eq (Eq x (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) := by timed congr lean_s915 lean_s909
let lean_s917 := by timed congr lean_s907 lean_s916
have lean_s918 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s919 := by timed congr lean_s907 lean_s918
have lean_s920 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s921 := by timed congr lean_s907 lean_s920
have lean_s922 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s923 := by timed congr lean_s907 lean_s922
have lean_s924 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) := by timed rfl
let lean_s925 := by timed congr lean_s907 lean_s924
have lean_s926 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 255)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) := by timed rfl
let lean_s927 := by timed congr lean_s925 lean_s926
let lean_s928 := by timed congr lean_s923 lean_s927
let lean_s929 := by timed congr lean_s921 lean_s928
let lean_s930 := by timed congr lean_s919 lean_s929
let lean_s931 := by timed congr lean_s917 lean_s930
let lean_s932 := by timed congr lean_s914 lean_s931
have lean_s933 : (Eq (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed congr lean_s911 lean_s932
let lean_s934 := by timed congr lean_s554 lean_s933
have lean_s935 : (Eq Or Or) := by timed rfl
let lean_s936 := by timed flipCongrArg lean_s697 [Eq]
have lean_s937 : (Eq (format (Int.ofNat 4)) (format (Int.ofNat 4))) := by timed rfl
have lean_s938 : (Eq (Eq percent (format (Int.ofNat 4))) (Eq (Int.ofNat 37) (format (Int.ofNat 4)))) := by timed congr lean_s936 lean_s937
let lean_s939 := by timed congr lean_s935 lean_s938
let lean_s940 := by timed flipCongrArg lean_s702 [Eq]
have lean_s941 : (Eq (Eq s (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) := by timed congr lean_s940 lean_s937
let lean_s942 := by timed congr lean_s935 lean_s941
let lean_s943 := by timed flipCongrArg lean_s707 [Eq]
have lean_s944 : (Eq (Eq x (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) := by timed congr lean_s943 lean_s937
let lean_s945 := by timed congr lean_s935 lean_s944
have lean_s946 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s947 := by timed congr lean_s935 lean_s946
have lean_s948 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s949 := by timed congr lean_s935 lean_s948
have lean_s950 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s951 := by timed congr lean_s935 lean_s950
have lean_s952 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) := by timed rfl
let lean_s953 := by timed congr lean_s935 lean_s952
have lean_s954 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 255)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) := by timed rfl
let lean_s955 := by timed congr lean_s953 lean_s954
let lean_s956 := by timed congr lean_s951 lean_s955
let lean_s957 := by timed congr lean_s949 lean_s956
let lean_s958 := by timed congr lean_s947 lean_s957
let lean_s959 := by timed congr lean_s945 lean_s958
let lean_s960 := by timed congr lean_s942 lean_s959
have lean_s961 : (Eq (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed congr lean_s939 lean_s960
let lean_s962 := by timed congr lean_s554 lean_s961
have lean_s963 : (Eq Or Or) := by timed rfl
let lean_s964 := by timed flipCongrArg lean_s697 [Eq]
have lean_s965 : (Eq (format (Int.ofNat 5)) (format (Int.ofNat 5))) := by timed rfl
have lean_s966 : (Eq (Eq percent (format (Int.ofNat 5))) (Eq (Int.ofNat 37) (format (Int.ofNat 5)))) := by timed congr lean_s964 lean_s965
let lean_s967 := by timed congr lean_s963 lean_s966
let lean_s968 := by timed flipCongrArg lean_s702 [Eq]
have lean_s969 : (Eq (Eq s (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) := by timed congr lean_s968 lean_s965
let lean_s970 := by timed congr lean_s963 lean_s969
let lean_s971 := by timed flipCongrArg lean_s707 [Eq]
have lean_s972 : (Eq (Eq x (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) := by timed congr lean_s971 lean_s965
let lean_s973 := by timed congr lean_s963 lean_s972
have lean_s974 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) := by timed rfl
let lean_s975 := by timed congr lean_s963 lean_s974
have lean_s976 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) := by timed rfl
let lean_s977 := by timed congr lean_s963 lean_s976
have lean_s978 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) := by timed rfl
let lean_s979 := by timed congr lean_s963 lean_s978
have lean_s980 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) := by timed rfl
let lean_s981 := by timed congr lean_s963 lean_s980
have lean_s982 : (Eq (Eq (format (Int.ofNat 5)) (Int.ofNat 255)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))) := by timed rfl
let lean_s983 := by timed congr lean_s981 lean_s982
let lean_s984 := by timed congr lean_s979 lean_s983
let lean_s985 := by timed congr lean_s977 lean_s984
let lean_s986 := by timed congr lean_s975 lean_s985
let lean_s987 := by timed congr lean_s973 lean_s986
let lean_s988 := by timed congr lean_s970 lean_s987
have lean_s989 : (Eq (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255)))))))))) := by timed congr lean_s967 lean_s988
let lean_s990 := by timed congr lean_s554 lean_s989
let lean_s991 := by timed flipCongrArg lean_s826 [And]
have lean_s992 : (Eq (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) := by timed congr lean_s991 lean_s857
let lean_s993 := by timed flipCongrArg lean_s992 [Implies]
have lean_s994 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s995 : (Eq (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s993 lean_s994
let lean_s996 := by timed congr lean_s554 lean_s995
have lean_s997 : (Eq (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s992 [Not]
let lean_s998 := by timed flipCongrArg lean_s997 [Implies]
have lean_s999 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s1000 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s998 lean_s999
let lean_s1001 := by timed congr lean_s554 lean_s1000
let lean_s1002 := by timed flipCongrArg lean_s854 [And]
have lean_s1003 : (Eq (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) := by timed congr lean_s1002 lean_s885
let lean_s1004 := by timed flipCongrArg lean_s1003 [Implies]
have lean_s1005 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s1006 : (Eq (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) := by timed congr lean_s1004 lean_s1005
let lean_s1007 := by timed congr lean_s554 lean_s1006
have lean_s1008 : (Eq (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s1003 [Not]
let lean_s1009 := by timed flipCongrArg lean_s1008 [Implies]
have lean_s1010 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1011 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s1009 lean_s1010
let lean_s1012 := by timed congr lean_s554 lean_s1011
let lean_s1013 := by timed flipCongrArg lean_s882 [And]
have lean_s1014 : (Eq (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) := by timed congr lean_s1013 lean_s913
let lean_s1015 := by timed flipCongrArg lean_s1014 [Implies]
have lean_s1016 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s1017 : (Eq (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))))) := by timed congr lean_s1015 lean_s1016
let lean_s1018 := by timed congr lean_s554 lean_s1017
have lean_s1019 : (Eq (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s1014 [Not]
let lean_s1020 := by timed flipCongrArg lean_s1019 [Implies]
have lean_s1021 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1022 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s1020 lean_s1021
let lean_s1023 := by timed congr lean_s554 lean_s1022
let lean_s1024 := by timed flipCongrArg lean_s910 [And]
have lean_s1025 : (Eq (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) := by timed congr lean_s1024 lean_s941
let lean_s1026 := by timed flipCongrArg lean_s1025 [Implies]
have lean_s1027 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s1028 : (Eq (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))))) := by timed congr lean_s1026 lean_s1027
let lean_s1029 := by timed congr lean_s554 lean_s1028
have lean_s1030 : (Eq (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s1025 [Not]
let lean_s1031 := by timed flipCongrArg lean_s1030 [Implies]
have lean_s1032 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s1033 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s1031 lean_s1032
let lean_s1034 := by timed congr lean_s554 lean_s1033
let lean_s1035 := by timed flipCongrArg lean_s938 [And]
have lean_s1036 : (Eq (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) := by timed congr lean_s1035 lean_s969
let lean_s1037 := by timed flipCongrArg lean_s1036 [Implies]
have lean_s1038 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s1039 : (Eq (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))))) := by timed congr lean_s1037 lean_s1038
let lean_s1040 := by timed congr lean_s554 lean_s1039
have lean_s1041 : (Eq (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s1036 [Not]
let lean_s1042 := by timed flipCongrArg lean_s1041 [Implies]
have lean_s1043 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s1044 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))))) := by timed congr lean_s1042 lean_s1043
let lean_s1045 := by timed congr lean_s554 lean_s1044
let lean_s1046 := by timed flipCongrArg lean_s966 [And]
let lean_s1047 := by timed flipCongrArg lean_s702 [Eq]
have lean_s1048 : (Eq (format (Int.ofNat 6)) (format (Int.ofNat 6))) := by timed rfl
have lean_s1049 : (Eq (Eq s (format (Int.ofNat 6))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) := by timed congr lean_s1047 lean_s1048
have lean_s1050 : (Eq (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) := by timed congr lean_s1046 lean_s1049
let lean_s1051 := by timed flipCongrArg lean_s1050 [Implies]
have lean_s1052 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) := by timed rfl
have lean_s1053 : (Eq (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5)))))) := by timed congr lean_s1051 lean_s1052
let lean_s1054 := by timed congr lean_s554 lean_s1053
have lean_s1055 : (Eq (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))))) := by timed flipCongrArg lean_s1050 [Not]
let lean_s1056 := by timed flipCongrArg lean_s1055 [Implies]
have lean_s1057 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) := by timed rfl
have lean_s1058 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5))))) := by timed congr lean_s1056 lean_s1057
let lean_s1059 := by timed congr lean_s554 lean_s1058
let lean_s1060 := by timed flipCongrArg lean_s826 [And]
have lean_s1061 : (Eq (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) := by timed congr lean_s1060 lean_s860
let lean_s1062 := by timed flipCongrArg lean_s1061 [Implies]
have lean_s1063 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s1064 : (Eq (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s1062 lean_s1063
let lean_s1065 := by timed congr lean_s554 lean_s1064
have lean_s1066 : (Eq (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s1061 [Not]
let lean_s1067 := by timed flipCongrArg lean_s1066 [Implies]
have lean_s1068 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s1069 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s1067 lean_s1068
let lean_s1070 := by timed congr lean_s554 lean_s1069
let lean_s1071 := by timed flipCongrArg lean_s854 [And]
have lean_s1072 : (Eq (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) := by timed congr lean_s1071 lean_s888
let lean_s1073 := by timed flipCongrArg lean_s1072 [Implies]
have lean_s1074 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s1075 : (Eq (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) := by timed congr lean_s1073 lean_s1074
let lean_s1076 := by timed congr lean_s554 lean_s1075
have lean_s1077 : (Eq (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s1072 [Not]
let lean_s1078 := by timed flipCongrArg lean_s1077 [Implies]
have lean_s1079 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1080 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s1078 lean_s1079
let lean_s1081 := by timed congr lean_s554 lean_s1080
let lean_s1082 := by timed flipCongrArg lean_s882 [And]
have lean_s1083 : (Eq (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) := by timed congr lean_s1082 lean_s916
let lean_s1084 := by timed flipCongrArg lean_s1083 [Implies]
have lean_s1085 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s1086 : (Eq (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))) := by timed congr lean_s1084 lean_s1085
let lean_s1087 := by timed congr lean_s554 lean_s1086
have lean_s1088 : (Eq (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s1083 [Not]
let lean_s1089 := by timed flipCongrArg lean_s1088 [Implies]
have lean_s1090 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1091 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s1089 lean_s1090
let lean_s1092 := by timed congr lean_s554 lean_s1091
let lean_s1093 := by timed flipCongrArg lean_s910 [And]
have lean_s1094 : (Eq (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) := by timed congr lean_s1093 lean_s944
let lean_s1095 := by timed flipCongrArg lean_s1094 [Implies]
have lean_s1096 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s1097 : (Eq (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))))) := by timed congr lean_s1095 lean_s1096
let lean_s1098 := by timed congr lean_s554 lean_s1097
have lean_s1099 : (Eq (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s1094 [Not]
let lean_s1100 := by timed flipCongrArg lean_s1099 [Implies]
have lean_s1101 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s1102 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s1100 lean_s1101
let lean_s1103 := by timed congr lean_s554 lean_s1102
let lean_s1104 := by timed flipCongrArg lean_s938 [And]
have lean_s1105 : (Eq (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) := by timed congr lean_s1104 lean_s972
let lean_s1106 := by timed flipCongrArg lean_s1105 [Implies]
have lean_s1107 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s1108 : (Eq (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))))) := by timed congr lean_s1106 lean_s1107
let lean_s1109 := by timed congr lean_s554 lean_s1108
have lean_s1110 : (Eq (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s1105 [Not]
let lean_s1111 := by timed flipCongrArg lean_s1110 [Implies]
have lean_s1112 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s1113 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))) := by timed congr lean_s1111 lean_s1112
let lean_s1114 := by timed congr lean_s554 lean_s1113
let lean_s1115 := by timed flipCongrArg lean_s966 [And]
let lean_s1116 := by timed flipCongrArg lean_s707 [Eq]
have lean_s1117 : (Eq (Eq x (format (Int.ofNat 6))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) := by timed congr lean_s1116 lean_s1048
have lean_s1118 : (Eq (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) := by timed congr lean_s1115 lean_s1117
let lean_s1119 := by timed flipCongrArg lean_s1118 [Implies]
have lean_s1120 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) := by timed rfl
have lean_s1121 : (Eq (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5)))))) := by timed congr lean_s1119 lean_s1120
let lean_s1122 := by timed congr lean_s554 lean_s1121
have lean_s1123 : (Eq (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))))) := by timed flipCongrArg lean_s1118 [Not]
let lean_s1124 := by timed flipCongrArg lean_s1123 [Implies]
have lean_s1125 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))) := by timed rfl
have lean_s1126 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))) := by timed congr lean_s1124 lean_s1125
let lean_s1127 := by timed congr lean_s1122 lean_s1126
let lean_s1128 := by timed congr lean_s1114 lean_s1127
let lean_s1129 := by timed congr lean_s1109 lean_s1128
let lean_s1130 := by timed congr lean_s1103 lean_s1129
let lean_s1131 := by timed congr lean_s1098 lean_s1130
let lean_s1132 := by timed congr lean_s1092 lean_s1131
let lean_s1133 := by timed congr lean_s1087 lean_s1132
let lean_s1134 := by timed congr lean_s1081 lean_s1133
let lean_s1135 := by timed congr lean_s1076 lean_s1134
let lean_s1136 := by timed congr lean_s1070 lean_s1135
let lean_s1137 := by timed congr lean_s1065 lean_s1136
let lean_s1138 := by timed congr lean_s1059 lean_s1137
let lean_s1139 := by timed congr lean_s1054 lean_s1138
let lean_s1140 := by timed congr lean_s1045 lean_s1139
let lean_s1141 := by timed congr lean_s1040 lean_s1140
let lean_s1142 := by timed congr lean_s1034 lean_s1141
let lean_s1143 := by timed congr lean_s1029 lean_s1142
let lean_s1144 := by timed congr lean_s1023 lean_s1143
let lean_s1145 := by timed congr lean_s1018 lean_s1144
let lean_s1146 := by timed congr lean_s1012 lean_s1145
let lean_s1147 := by timed congr lean_s1007 lean_s1146
let lean_s1148 := by timed congr lean_s1001 lean_s1147
let lean_s1149 := by timed congr lean_s996 lean_s1148
let lean_s1150 := by timed congr lean_s990 lean_s1149
let lean_s1151 := by timed congr lean_s962 lean_s1150
let lean_s1152 := by timed congr lean_s934 lean_s1151
let lean_s1153 := by timed congr lean_s906 lean_s1152
let lean_s1154 := by timed congr lean_s878 lean_s1153
let lean_s1155 := by timed congr lean_s850 lean_s1154
let lean_s1156 := by timed congr lean_s822 lean_s1155
let lean_s1157 := by timed congr lean_s806 lean_s1156
let lean_s1158 := by timed congr lean_s777 lean_s1157
let lean_s1159 := by timed congr lean_s761 lean_s1158
let lean_s1160 := by timed congr lean_s755 lean_s1159
let lean_s1161 := by timed congr lean_s746 lean_s1160
let lean_s1162 := by timed congr lean_s740 lean_s1161
let lean_s1163 := by timed congr lean_s733 lean_s1162
let lean_s1164 := by timed congr lean_s725 lean_s1163
let lean_s1165 := by timed congr lean_s716 lean_s1164
let lean_s1166 := by timed congr lean_s711 lean_s1165
let lean_s1167 := by timed congr lean_s706 lean_s1166
let lean_s1168 := by timed congr lean_s701 lean_s1167
let lean_s1169 := by timed congr lean_s696 lean_s1168
let lean_s1170 := by timed congr lean_s692 lean_s1169
let lean_s1171 := by timed congr lean_s687 lean_s1170
let lean_s1172 := by timed congr lean_s682 lean_s1171
let lean_s1173 := by timed congr lean_s677 lean_s1172
have lean_s1174 : (Eq (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Int.ofNat 11) (Int.ofNat 11)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s672 lean_s1173
let lean_s1175 := by timed flipCongrArg lean_s1174 [Implies]
have lean_s1176 : (Eq And And) := by timed rfl
let lean_s1177 := by timed flipCongrArg lean_s697 [Eq]
have lean_s1178 : (Eq (format fmt1) (format fmt1)) := by timed rfl
have lean_s1179 : (Eq (Eq percent (format fmt1)) (Eq (Int.ofNat 37) (format fmt1))) := by timed congr lean_s1177 lean_s1178
have lean_s1180 : (Eq (Not (Eq percent (format fmt1))) (Not (Eq (Int.ofNat 37) (format fmt1)))) := by timed flipCongrArg lean_s1179 [Not]
let lean_s1181 := by timed congr lean_s1176 lean_s1180
let lean_s1182 := by timed flipCongrArg lean_s702 [Eq]
have lean_s1183 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) := by timed rfl
have lean_s1184 : (Eq (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) := by timed congr lean_s1182 lean_s1183
let lean_s1185 := by timed congr lean_s1176 lean_s1184
let lean_s1186 := by timed flipCongrArg lean_s678 [Eq]
have lean_s1187 : (Eq (format arg1) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s726 [format]
have lean_s1188 : (Eq (Eq adrx5flo (format arg1)) (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1186 lean_s1187
let lean_s1189 := by timed congr lean_s1176 lean_s1188
let lean_s1190 := by timed flipCongrArg lean_s683 [Eq]
let lean_s1191 := by timed flipCongrArg lean_s752 [HAdd.hAdd]
have lean_s1192 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) arg1) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s1191 lean_s726
have lean_s1193 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed flipCongrArg lean_s1192 [format]
have lean_s1194 : (Eq (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) := by timed congr lean_s1190 lean_s1193
let lean_s1195 := by timed congr lean_s1176 lean_s1194
let lean_s1196 := by timed flipCongrArg lean_s688 [Eq]
let lean_s1197 := by timed flipCongrArg lean_s738 [HAdd.hAdd]
have lean_s1198 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) arg1) (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s1197 lean_s726
have lean_s1199 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed flipCongrArg lean_s1198 [format]
have lean_s1200 : (Eq (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) := by timed congr lean_s1196 lean_s1199
let lean_s1201 := by timed congr lean_s1176 lean_s1200
let lean_s1202 := by timed flipCongrArg lean_s693 [Eq]
let lean_s1203 := by timed flipCongrArg lean_s680 [HAdd.hAdd]
have lean_s1204 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) arg1) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s1203 lean_s726
have lean_s1205 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed flipCongrArg lean_s1204 [format]
have lean_s1206 : (Eq (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) := by timed congr lean_s1202 lean_s1205
let lean_s1207 := by timed congr lean_s1201 lean_s1206
let lean_s1208 := by timed congr lean_s1195 lean_s1207
let lean_s1209 := by timed congr lean_s1189 lean_s1208
let lean_s1210 := by timed congr lean_s1185 lean_s1209
have lean_s1211 : (Eq (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))))))))) := by timed congr lean_s1181 lean_s1210
have lean_s1212 : (Eq (Implies (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))) (Implies (And (Eq (Int.ofNat 11) (Int.ofNat 11)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))))) := by timed congr lean_s1175 lean_s1211
have lean_s1213 : (Eq (Not (Implies (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) (Not (Implies (And (Eq (Int.ofNat 11) (Int.ofNat 11)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))))))))))) := by timed flipCongrArg lean_s1212 [Not]
have lean_s1214 : (Eq And And) := by timed rfl
let lean_s1215 := by timed congr lean_s1214 lean_r69
let lean_s1216 := by timed congr lean_s1214 lean_r81
let lean_s1217 := by timed congr lean_s1214 lean_r66
let lean_s1218 := by timed congr lean_s1214 lean_r64
let lean_s1219 := by timed congr lean_s1214 lean_r46
let lean_s1220 := by timed congr lean_s1214 lean_r81
let lean_s1221 := by timed congr lean_s1214 lean_r193
let lean_s1222 := by timed congr lean_s1214 lean_r191
let lean_s1223 := by timed congr lean_s1214 lean_r188
let lean_s1224 := by timed congr lean_s1214 lean_r93
let lean_s1225 := by timed flipCongrArg lean_s638 [Eq]
have lean_s1226 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (Eq (Neg.neg (Int.ofNat 11)) (Neg.neg (Int.ofNat 11)))) := by timed congr lean_s1225 lean_s603
have lean_s1227 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) True) := by timed Eq.trans lean_s1226 lean_r15
let lean_s1228 := by timed congr lean_s1214 lean_s1227
have lean_s1229 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed rfl
have lean_s1230 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed rfl
let lean_s1231 := by timed congrHAdd lean_s1230 lean_r137
let lean_s1232 := by timed congrHAdd lean_s1229 lean_s1231
have lean_s1233 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 0))))) := by timed congrHAdd lean_s638 lean_s1232
have lean_s1234 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1233 lean_r53
have lean_s1235 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r99 lean_s1234
let lean_s1236 := by timed flipCongrArg lean_s1235 [GE.ge]
have lean_s1237 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0))) := by timed congr lean_s1236 lean_s600
have lean_s1238 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed Eq.trans lean_s1237 lean_r56
let lean_s1239 := by timed congr lean_s1214 lean_s1238
let lean_s1240 := by timed flipCongrArg lean_r253 [GE.ge]
have lean_s1241 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s1242 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 6) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Int.ofNat 2))) := by timed congr lean_s1240 lean_s1241
have lean_s1243 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (Not (binrel% GE.ge fmt1 (Int.ofNat 5)))) := by timed Eq.trans lean_s1242 lean_r73
let lean_s1244 := by timed congr lean_s1214 lean_s1243
let lean_s1245 := by timed flipCongrArg lean_r151 [GE.ge]
have lean_s1246 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
have lean_s1247 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s1245 lean_s1246
have lean_s1248 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) := by timed Eq.trans lean_s1247 lean_r67
have lean_s1249 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 2))))) := by timed flipCongrArg lean_s1248 [Not]
have lean_s1250 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (binrel% GE.ge fmt1 (Int.ofNat 2))) := by timed Eq.trans lean_s1249 lean_r124
let lean_s1251 := by timed congr lean_s1214 lean_s1250
have lean_s1252 : (Eq (Int.ofNat 11) (Int.ofNat 11)) := by timed rfl
let lean_s1253 := by timed congrHAdd lean_r21 lean_s1252
have lean_s1254 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 11)))) := by timed congrHAdd lean_s638 lean_s1253
have lean_s1255 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1254 lean_r139
let lean_s1256 := by timed flipCongrArg lean_s1255 [GE.ge]
have lean_s1257 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s1258 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1))) := by timed congr lean_s1256 lean_s1257
have lean_s1259 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) := by timed Eq.trans lean_s1258 lean_r77
have lean_s1260 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))))) := by timed flipCongrArg lean_s1259 [Not]
have lean_s1261 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed Eq.trans lean_s1260 lean_r173
let lean_s1262 := by timed congr lean_s1214 lean_s1261
have lean_s1263 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
let lean_s1264 := by timed congrHAdd lean_s1252 lean_s1263
let lean_s1265 := by timed congrHAdd lean_r21 lean_s1264
have lean_s1266 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 11) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6))))) := by timed congrHAdd lean_s638 lean_s1265
have lean_s1267 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (binrel% HAdd.hAdd (Int.ofNat 17) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1266 lean_r225
let lean_s1268 := by timed flipCongrArg lean_s1267 [GE.ge]
have lean_s1269 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s1270 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 17) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 5))) := by timed congr lean_s1268 lean_s1269
have lean_s1271 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4)))) := by timed Eq.trans lean_s1270 lean_r45
let lean_s1272 := by timed congr lean_s1214 lean_s1271
let lean_s1273 := by timed flipCongrArg lean_s638 [Eq]
let lean_s1274 := by timed congrHAdd lean_s647 lean_s650
let lean_s1275 := by timed congrHAdd lean_s1230 lean_s1274
let lean_s1276 := by timed congrHAdd lean_s1229 lean_s1275
have lean_s1277 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_s638 lean_s1276
have lean_s1278 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) (Neg.neg (Int.ofNat 11))) := by timed Eq.trans lean_s1277 lean_r128
have lean_s1279 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (Neg.neg (Int.ofNat 11))) := by timed Eq.trans lean_r157 lean_s1278
have lean_s1280 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (Eq (Neg.neg (Int.ofNat 11)) (Neg.neg (Int.ofNat 11)))) := by timed congr lean_s1273 lean_s1279
have lean_s1281 : (Eq (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) True) := by timed Eq.trans lean_s1280 lean_r15
let lean_s1282 := by timed congr lean_s1214 lean_s1281
have lean_s1283 : (Eq Or Or) := by timed rfl
let lean_s1284 := by timed congr lean_s1283 lean_r16
let lean_s1285 := by timed congr lean_s1283 lean_r167
let lean_s1286 := by timed congr lean_s1283 lean_r136
let lean_s1287 := by timed congr lean_s1283 lean_r135
let lean_s1288 := by timed congr lean_s1283 lean_r108
let lean_s1289 := by timed congr lean_s1288 lean_r138
let lean_s1290 := by timed congr lean_s1287 lean_s1289
let lean_s1291 := by timed congr lean_s1286 lean_s1290
let lean_s1292 := by timed congr lean_s1285 lean_s1291
have lean_s1293 : (Eq (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5)))))))) := by timed congr lean_s1284 lean_s1292
let lean_s1294 := by timed congr lean_s1214 lean_s1293
have lean_s1295 : (Eq Or Or) := by timed rfl
let lean_s1296 := by timed congr lean_s1295 lean_r70
have lean_s1297 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed rfl
let lean_s1298 := by timed flipCongrArg lean_s1297 [Eq]
have lean_s1299 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1))) := by timed congr lean_s1298 lean_r65
have lean_s1300 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1299 lean_r85
let lean_s1301 := by timed congr lean_s1295 lean_s1300
let lean_s1302 := by timed flipCongrArg lean_s1297 [Eq]
have lean_s1303 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 2))) := by timed congr lean_s1302 lean_r131
have lean_s1304 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))) False) := by timed Eq.trans lean_s1303 lean_r148
let lean_s1305 := by timed congr lean_s1301 lean_s1304
have lean_s1306 : (Eq (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (Or False (Or (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False))) := by timed congr lean_s1296 lean_s1305
have lean_s1307 : (Eq (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1306 lean_r129
let lean_s1308 := by timed congr lean_s1214 lean_s1307
have lean_s1309 : (Eq Or Or) := by timed rfl
let lean_s1310 := by timed congr lean_s1309 lean_r92
let lean_s1311 := by timed congr lean_s1309 lean_r101
let lean_s1312 := by timed congr lean_s1309 lean_r100
let lean_s1313 := by timed congr lean_s1309 lean_s190
let lean_s1314 := by timed congr lean_s1309 lean_s192
let lean_s1315 := by timed congr lean_s1309 lean_s194
let lean_s1316 := by timed congr lean_s1309 lean_s196
let lean_s1317 := by timed congr lean_s1316 lean_s198
let lean_s1318 := by timed congr lean_s1315 lean_s1317
let lean_s1319 := by timed congr lean_s1314 lean_s1318
let lean_s1320 := by timed congr lean_s1313 lean_s1319
let lean_s1321 := by timed congr lean_s1312 lean_s1320
let lean_s1322 := by timed congr lean_s1311 lean_s1321
have lean_s1323 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed congr lean_s1310 lean_s1322
let lean_s1324 := by timed congr lean_s1214 lean_s1323
have lean_s1325 : (Eq Or Or) := by timed rfl
let lean_s1326 := by timed congr lean_s1325 lean_r180
let lean_s1327 := by timed congr lean_s1325 lean_r25
let lean_s1328 := by timed congr lean_s1325 lean_r256
let lean_s1329 := by timed congr lean_s1325 lean_s212
let lean_s1330 := by timed congr lean_s1325 lean_s214
let lean_s1331 := by timed congr lean_s1325 lean_s216
let lean_s1332 := by timed congr lean_s1325 lean_s218
let lean_s1333 := by timed congr lean_s1332 lean_s220
let lean_s1334 := by timed congr lean_s1331 lean_s1333
let lean_s1335 := by timed congr lean_s1330 lean_s1334
let lean_s1336 := by timed congr lean_s1329 lean_s1335
let lean_s1337 := by timed congr lean_s1328 lean_s1336
let lean_s1338 := by timed congr lean_s1327 lean_s1337
have lean_s1339 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed congr lean_s1326 lean_s1338
let lean_s1340 := by timed congr lean_s1214 lean_s1339
have lean_s1341 : (Eq Or Or) := by timed rfl
let lean_s1342 := by timed congr lean_s1341 lean_r175
let lean_s1343 := by timed congr lean_s1341 lean_r104
let lean_s1344 := by timed congr lean_s1341 lean_r63
let lean_s1345 := by timed congr lean_s1341 lean_s234
let lean_s1346 := by timed congr lean_s1341 lean_s236
let lean_s1347 := by timed congr lean_s1341 lean_s238
let lean_s1348 := by timed congr lean_s1341 lean_s240
let lean_s1349 := by timed congr lean_s1348 lean_s242
let lean_s1350 := by timed congr lean_s1347 lean_s1349
let lean_s1351 := by timed congr lean_s1346 lean_s1350
let lean_s1352 := by timed congr lean_s1345 lean_s1351
let lean_s1353 := by timed congr lean_s1344 lean_s1352
let lean_s1354 := by timed congr lean_s1343 lean_s1353
have lean_s1355 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed congr lean_s1342 lean_s1354
let lean_s1356 := by timed congr lean_s1214 lean_s1355
have lean_s1357 : (Eq Or Or) := by timed rfl
let lean_s1358 := by timed congr lean_s1357 lean_r72
let lean_s1359 := by timed congr lean_s1357 lean_r111
let lean_s1360 := by timed congr lean_s1357 lean_r95
let lean_s1361 := by timed congr lean_s1357 lean_s256
let lean_s1362 := by timed congr lean_s1357 lean_s258
let lean_s1363 := by timed congr lean_s1357 lean_s260
let lean_s1364 := by timed congr lean_s1357 lean_s262
let lean_s1365 := by timed congr lean_s1364 lean_s264
let lean_s1366 := by timed congr lean_s1363 lean_s1365
let lean_s1367 := by timed congr lean_s1362 lean_s1366
let lean_s1368 := by timed congr lean_s1361 lean_s1367
let lean_s1369 := by timed congr lean_s1360 lean_s1368
let lean_s1370 := by timed congr lean_s1359 lean_s1369
have lean_s1371 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed congr lean_s1358 lean_s1370
let lean_s1372 := by timed congr lean_s1214 lean_s1371
have lean_s1373 : (Eq Or Or) := by timed rfl
let lean_s1374 := by timed congr lean_s1373 lean_r82
let lean_s1375 := by timed congr lean_s1373 lean_r127
let lean_s1376 := by timed congr lean_s1373 lean_r32
let lean_s1377 := by timed congr lean_s1373 lean_s278
let lean_s1378 := by timed congr lean_s1373 lean_s280
let lean_s1379 := by timed congr lean_s1373 lean_s282
let lean_s1380 := by timed congr lean_s1373 lean_s284
let lean_s1381 := by timed congr lean_s1380 lean_s286
let lean_s1382 := by timed congr lean_s1379 lean_s1381
let lean_s1383 := by timed congr lean_s1378 lean_s1382
let lean_s1384 := by timed congr lean_s1377 lean_s1383
let lean_s1385 := by timed congr lean_s1376 lean_s1384
let lean_s1386 := by timed congr lean_s1375 lean_s1385
have lean_s1387 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed congr lean_s1374 lean_s1386
let lean_s1388 := by timed congr lean_s1214 lean_s1387
have lean_s1389 : (Eq Or Or) := by timed rfl
let lean_s1390 := by timed congr lean_s1389 lean_r83
let lean_s1391 := by timed congr lean_s1389 lean_r60
let lean_s1392 := by timed congr lean_s1389 lean_r116
let lean_s1393 := by timed congr lean_s1389 lean_s300
let lean_s1394 := by timed congr lean_s1389 lean_s302
let lean_s1395 := by timed congr lean_s1389 lean_s304
let lean_s1396 := by timed congr lean_s1389 lean_s306
let lean_s1397 := by timed congr lean_s1396 lean_s308
let lean_s1398 := by timed congr lean_s1395 lean_s1397
let lean_s1399 := by timed congr lean_s1394 lean_s1398
let lean_s1400 := by timed congr lean_s1393 lean_s1399
let lean_s1401 := by timed congr lean_s1392 lean_s1400
let lean_s1402 := by timed congr lean_s1391 lean_s1401
have lean_s1403 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255)))))))))) := by timed congr lean_s1390 lean_s1402
let lean_s1404 := by timed congr lean_s1214 lean_s1403
let lean_s1405 := by timed flipCongrArg lean_r92 [And]
have lean_s1406 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) := by timed congr lean_s1405 lean_r25
let lean_s1407 := by timed flipCongrArg lean_s1406 [Implies]
have lean_s1408 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s1407 lean_s321
let lean_s1409 := by timed congr lean_s1214 lean_s1408
have lean_s1410 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1406 [Not]
let lean_s1411 := by timed flipCongrArg lean_s1410 [Implies]
have lean_s1412 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s1411 lean_s326
let lean_s1413 := by timed congr lean_s1214 lean_s1412
let lean_s1414 := by timed flipCongrArg lean_r180 [And]
have lean_s1415 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) := by timed congr lean_s1414 lean_r104
let lean_s1416 := by timed flipCongrArg lean_s1415 [Implies]
have lean_s1417 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s1418 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) := by timed congr lean_s1416 lean_s1417
let lean_s1419 := by timed congr lean_s1214 lean_s1418
have lean_s1420 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1415 [Not]
let lean_s1421 := by timed flipCongrArg lean_s1420 [Implies]
have lean_s1422 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1423 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s1421 lean_s1422
let lean_s1424 := by timed congr lean_s1214 lean_s1423
let lean_s1425 := by timed flipCongrArg lean_r175 [And]
have lean_s1426 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) := by timed congr lean_s1425 lean_r111
let lean_s1427 := by timed flipCongrArg lean_s1426 [Implies]
have lean_s1428 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s1429 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))))) := by timed congr lean_s1427 lean_s1428
let lean_s1430 := by timed congr lean_s1214 lean_s1429
have lean_s1431 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1426 [Not]
let lean_s1432 := by timed flipCongrArg lean_s1431 [Implies]
have lean_s1433 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1434 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s1432 lean_s1433
let lean_s1435 := by timed congr lean_s1214 lean_s1434
let lean_s1436 := by timed flipCongrArg lean_r72 [And]
have lean_s1437 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) := by timed congr lean_s1436 lean_r127
let lean_s1438 := by timed flipCongrArg lean_s1437 [Implies]
have lean_s1439 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s1440 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))))) := by timed congr lean_s1438 lean_s1439
let lean_s1441 := by timed congr lean_s1214 lean_s1440
have lean_s1442 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1437 [Not]
let lean_s1443 := by timed flipCongrArg lean_s1442 [Implies]
have lean_s1444 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s1445 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s1443 lean_s1444
let lean_s1446 := by timed congr lean_s1214 lean_s1445
let lean_s1447 := by timed flipCongrArg lean_r82 [And]
have lean_s1448 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) := by timed congr lean_s1447 lean_r60
let lean_s1449 := by timed flipCongrArg lean_s1448 [Implies]
have lean_s1450 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s1451 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))))) := by timed congr lean_s1449 lean_s1450
let lean_s1452 := by timed congr lean_s1214 lean_s1451
have lean_s1453 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1448 [Not]
let lean_s1454 := by timed flipCongrArg lean_s1453 [Implies]
have lean_s1455 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s1456 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))))) := by timed congr lean_s1454 lean_s1455
let lean_s1457 := by timed congr lean_s1214 lean_s1456
let lean_s1458 := by timed flipCongrArg lean_r83 [And]
have lean_s1459 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) := by timed congr lean_s1458 lean_r121
let lean_s1460 := by timed flipCongrArg lean_s1459 [Implies]
have lean_s1461 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) := by timed rfl
have lean_s1462 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5)))))) := by timed congr lean_s1460 lean_s1461
let lean_s1463 := by timed congr lean_s1214 lean_s1462
have lean_s1464 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1459 [Not]
let lean_s1465 := by timed flipCongrArg lean_s1464 [Implies]
have lean_s1466 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) := by timed rfl
have lean_s1467 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5))))) := by timed congr lean_s1465 lean_s1466
let lean_s1468 := by timed congr lean_s1214 lean_s1467
let lean_s1469 := by timed flipCongrArg lean_r92 [And]
have lean_s1470 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by timed congr lean_s1469 lean_r256
let lean_s1471 := by timed flipCongrArg lean_s1470 [Implies]
have lean_s1472 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s1471 lean_s397
let lean_s1473 := by timed congr lean_s1214 lean_s1472
have lean_s1474 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1470 [Not]
let lean_s1475 := by timed flipCongrArg lean_s1474 [Implies]
have lean_s1476 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s1475 lean_s402
let lean_s1477 := by timed congr lean_s1214 lean_s1476
let lean_s1478 := by timed flipCongrArg lean_r180 [And]
have lean_s1479 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by timed congr lean_s1478 lean_r63
let lean_s1480 := by timed flipCongrArg lean_s1479 [Implies]
have lean_s1481 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s1482 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) := by timed congr lean_s1480 lean_s1481
let lean_s1483 := by timed congr lean_s1214 lean_s1482
have lean_s1484 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1479 [Not]
let lean_s1485 := by timed flipCongrArg lean_s1484 [Implies]
have lean_s1486 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1487 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s1485 lean_s1486
let lean_s1488 := by timed congr lean_s1214 lean_s1487
let lean_s1489 := by timed flipCongrArg lean_r175 [And]
have lean_s1490 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by timed congr lean_s1489 lean_r95
let lean_s1491 := by timed flipCongrArg lean_s1490 [Implies]
have lean_s1492 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s1493 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))) := by timed congr lean_s1491 lean_s1492
let lean_s1494 := by timed congr lean_s1214 lean_s1493
have lean_s1495 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1490 [Not]
let lean_s1496 := by timed flipCongrArg lean_s1495 [Implies]
have lean_s1497 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1498 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s1496 lean_s1497
let lean_s1499 := by timed congr lean_s1214 lean_s1498
let lean_s1500 := by timed flipCongrArg lean_r72 [And]
have lean_s1501 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) := by timed congr lean_s1500 lean_r32
let lean_s1502 := by timed flipCongrArg lean_s1501 [Implies]
have lean_s1503 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s1504 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))))) := by timed congr lean_s1502 lean_s1503
let lean_s1505 := by timed congr lean_s1214 lean_s1504
have lean_s1506 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1501 [Not]
let lean_s1507 := by timed flipCongrArg lean_s1506 [Implies]
have lean_s1508 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s1509 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s1507 lean_s1508
let lean_s1510 := by timed congr lean_s1214 lean_s1509
let lean_s1511 := by timed flipCongrArg lean_r82 [And]
have lean_s1512 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) := by timed congr lean_s1511 lean_r116
let lean_s1513 := by timed flipCongrArg lean_s1512 [Implies]
have lean_s1514 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s1515 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))))) := by timed congr lean_s1513 lean_s1514
let lean_s1516 := by timed congr lean_s1214 lean_s1515
have lean_s1517 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1512 [Not]
let lean_s1518 := by timed flipCongrArg lean_s1517 [Implies]
have lean_s1519 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s1520 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))) := by timed congr lean_s1518 lean_s1519
let lean_s1521 := by timed congr lean_s1214 lean_s1520
let lean_s1522 := by timed flipCongrArg lean_r83 [And]
have lean_s1523 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) := by timed congr lean_s1522 lean_r48
let lean_s1524 := by timed flipCongrArg lean_s1523 [Implies]
have lean_s1525 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) := by timed rfl
have lean_s1526 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5)))))) := by timed congr lean_s1524 lean_s1525
let lean_s1527 := by timed congr lean_s1214 lean_s1526
have lean_s1528 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1523 [Not]
let lean_s1529 := by timed flipCongrArg lean_s1528 [Implies]
have lean_s1530 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))) := by timed rfl
have lean_s1531 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))) := by timed congr lean_s1529 lean_s1530
let lean_s1532 := by timed congr lean_s1527 lean_s1531
let lean_s1533 := by timed congr lean_s1521 lean_s1532
let lean_s1534 := by timed congr lean_s1516 lean_s1533
let lean_s1535 := by timed congr lean_s1510 lean_s1534
let lean_s1536 := by timed congr lean_s1505 lean_s1535
let lean_s1537 := by timed congr lean_s1499 lean_s1536
let lean_s1538 := by timed congr lean_s1494 lean_s1537
let lean_s1539 := by timed congr lean_s1488 lean_s1538
let lean_s1540 := by timed congr lean_s1483 lean_s1539
let lean_s1541 := by timed congr lean_s1477 lean_s1540
let lean_s1542 := by timed congr lean_s1473 lean_s1541
let lean_s1543 := by timed congr lean_s1468 lean_s1542
let lean_s1544 := by timed congr lean_s1463 lean_s1543
let lean_s1545 := by timed congr lean_s1457 lean_s1544
let lean_s1546 := by timed congr lean_s1452 lean_s1545
let lean_s1547 := by timed congr lean_s1446 lean_s1546
let lean_s1548 := by timed congr lean_s1441 lean_s1547
let lean_s1549 := by timed congr lean_s1435 lean_s1548
let lean_s1550 := by timed congr lean_s1430 lean_s1549
let lean_s1551 := by timed congr lean_s1424 lean_s1550
let lean_s1552 := by timed congr lean_s1419 lean_s1551
let lean_s1553 := by timed congr lean_s1413 lean_s1552
let lean_s1554 := by timed congr lean_s1409 lean_s1553
let lean_s1555 := by timed congr lean_s1404 lean_s1554
let lean_s1556 := by timed congr lean_s1388 lean_s1555
let lean_s1557 := by timed congr lean_s1372 lean_s1556
let lean_s1558 := by timed congr lean_s1356 lean_s1557
let lean_s1559 := by timed congr lean_s1340 lean_s1558
let lean_s1560 := by timed congr lean_s1324 lean_s1559
let lean_s1561 := by timed congr lean_s1308 lean_s1560
let lean_s1562 := by timed congr lean_s1294 lean_s1561
let lean_s1563 := by timed congr lean_s1282 lean_s1562
let lean_s1564 := by timed congr lean_s1272 lean_s1563
let lean_s1565 := by timed congr lean_s1262 lean_s1564
let lean_s1566 := by timed congr lean_s1251 lean_s1565
let lean_s1567 := by timed congr lean_s1244 lean_s1566
let lean_s1568 := by timed congr lean_s1239 lean_s1567
let lean_s1569 := by timed congr lean_s1228 lean_s1568
let lean_s1570 := by timed congr lean_s1224 lean_s1569
let lean_s1571 := by timed congr lean_s1223 lean_s1570
let lean_s1572 := by timed congr lean_s1222 lean_s1571
let lean_s1573 := by timed congr lean_s1221 lean_s1572
let lean_s1574 := by timed congr lean_s1220 lean_s1573
let lean_s1575 := by timed congr lean_s1219 lean_s1574
let lean_s1576 := by timed congr lean_s1218 lean_s1575
let lean_s1577 := by timed congr lean_s1217 lean_s1576
let lean_s1578 := by timed congr lean_s1216 lean_s1577
have lean_s1579 : (Eq (And (Eq (Int.ofNat 11) (Int.ofNat 11)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And True (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s1215 lean_s1578
have lean_s1580 : (Eq (And (Eq (Int.ofNat 11) (Int.ofNat 11)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_s1579 lean_r155
let lean_s1581 := by timed flipCongrArg lean_s1580 [Implies]
have lean_s1582 : (Eq And And) := by timed rfl
have lean_s1583 : (Eq (Not (Eq (Int.ofNat 37) (format fmt1))) (Not (Eq (format fmt1) (Int.ofNat 37)))) := by timed flipCongrArg lean_r79 [Not]
let lean_s1584 := by timed congr lean_s1582 lean_s1583
let lean_s1585 := by timed congr lean_s1582 lean_r123
let lean_s1586 := by timed congr lean_s1582 lean_r171
let lean_s1587 := by timed flipCongrArg lean_s120 [Eq]
have lean_s1588 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r220 lean_r218
have lean_s1589 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s1588 [format]
have lean_s1590 : (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1587 lean_s1589
have lean_s1591 : (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4))) := by timed Eq.trans lean_s1590 lean_r107
let lean_s1592 := by timed congr lean_s1582 lean_s1591
let lean_s1593 := by timed flipCongrArg lean_s1269 [Eq]
have lean_s1594 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r106 lean_r235
have lean_s1595 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s1594 [format]
have lean_s1596 : (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1593 lean_s1595
have lean_s1597 : (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5))) := by timed Eq.trans lean_s1596 lean_r90
let lean_s1598 := by timed congr lean_s1582 lean_s1597
let lean_s1599 := by timed flipCongrArg lean_s1263 [Eq]
have lean_s1600 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r112 lean_r109
have lean_s1601 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s1600 [format]
have lean_s1602 : (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1599 lean_s1601
have lean_s1603 : (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))) := by timed Eq.trans lean_s1602 lean_r87
let lean_s1604 := by timed congr lean_s1598 lean_s1603
let lean_s1605 := by timed congr lean_s1592 lean_s1604
let lean_s1606 := by timed congr lean_s1586 lean_s1605
let lean_s1607 := by timed congr lean_s1585 lean_s1606
have lean_s1608 : (Eq (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6)))))))) := by timed congr lean_s1584 lean_s1607
have lean_s1609 : (Eq (Implies (And (Eq (Int.ofNat 11) (Int.ofNat 11)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))))))))) (Implies (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))))))))) := by timed congr lean_s1581 lean_s1608
have lean_s1610 : (Eq (Not (Implies (And (Eq (Int.ofNat 11) (Int.ofNat 11)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 11)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 6))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 11))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 11) (Int.ofNat 6)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 2) (Int.ofNat 0))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))))) (Not (Implies (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6)))))))))) := by timed flipCongrArg lean_s1609 [Not]
have lean_s1611 : (Eq (Not (Implies (And (Eq distance (Int.ofNat 11)) (And (Eq fmtx5flength (Int.ofNat 6)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 5)) fmt1))))))) (And (Or (Eq arg1 fmt0) (Or (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 5))) (Or (Eq s (format (Int.ofNat 5))) (Or (Eq x (format (Int.ofNat 5))) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6)))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq s (format (Int.ofNat 6))))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6)))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq percent (format (Int.ofNat 5))) (Eq x (format (Int.ofNat 6))))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5)))))))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) (Not (Implies (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6)))))))))) := by timed Eq.trans lean_s1213 lean_s1610
have lean_s1612 : (Eq (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 11)) (Eq fmtx5flength (Int.ofNat 6))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 5)))) (Or (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))))) (And (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (format (Int.ofNat 5)) x)) (Eq (format (Int.ofNat 5)) (Int.ofNat 3))) (Eq (format (Int.ofNat 5)) (Int.ofNat 4))) (Eq (format (Int.ofNat 5)) (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 6))) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s)) (Eq (sx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) s))) (Eq (sx5fcount (Int.ofNat 5)) (sx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))) (And (Implies (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x)) (Eq (xx5fcount (Int.ofNat 5)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 4)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 5)) percent) (Eq (format (Int.ofNat 6)) x))) (Eq (xx5fcount (Int.ofNat 5)) (xx5fcount (Int.ofNat 4))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) (Not (Implies (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6)))))))))) := by timed Eq.trans lean_s553 lean_s1611
have lean_s1613 : (Not (Implies (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))))))))) := by timed eqResolve lean_a266 lean_s1612
have lean_s1614 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 4))) (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Or (Eq fmt1 (Int.ofNat 4)) (Eq fmt1 (Int.ofNat 5))))))) (And (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 5)) (Int.ofNat 6)) (Eq (format (Int.ofNat 5)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 5))))) (And (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 5)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 5))))) (Implies (Not (And (Eq (format (Int.ofNat 5)) (Int.ofNat 37)) (Eq (format (Int.ofNat 6)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 5))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s1613
have lean_s1615 : (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by andElim lean_s1614, 27
have lean_s1616 : (Or (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by timed impliesElim lean_s1615
have lean_s1617 : (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by timed rfl
let lean_s1618 := by timed flipCongrArg lean_s1617 [Eq]
have lean_s1619 : (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))))) (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) := by timed congr lean_s1618 lean_r221
have lean_s1620 : (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))))) True) := by timed Eq.trans lean_s1619 lean_r219
have lean_s1621 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) True) := by timed Eq.trans lean_r172 lean_s1620
have lean_s1622 : (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by timed trueElim lean_s1621
let lean_s1623 := by timed flipCongrArg lean_s1622 [Or]
have lean_s1624 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1625 : (Eq (Or (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s1623 lean_s1624
have lean_s1626 : (Or (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by timed eqResolve lean_s1616 lean_s1625
have lean_s1627 : (Or (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by permutateOr lean_s1626, [1, 0], (- 1)
have lean_s1628 : (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 1)) (Int.ofNat 37)), (Eq (format (Int.ofNat 2)) (Int.ofNat 120))] 0
have lean_s1629 : (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) := by permutateOr lean_s1628, [1, 0], (- 1)
have lean_s1630 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) :=
  (scope (fun lean_a289 : (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) =>
    have lean_s1630 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) :=
      (scope (fun lean_a290 : (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) =>
        have lean_s1630 : (Eq (Int.ofNat 115) (format (Int.ofNat 1))) := by timed Eq.symm lean_a290
        have lean_s1631 : (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) := by timed Eq.symm lean_s1630
        let lean_s1632 := by timed flipCongrArg lean_s1631 [Eq]
        have lean_s1633 : (Eq (Int.ofNat 37) (Int.ofNat 37)) := by timed rfl
        have lean_s1634 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (Int.ofNat 115) (Int.ofNat 37))) := by timed congr lean_s1632 lean_s1633
        have lean_s1635 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 37))) (Not False)) := by timed flipCongrArg lean_r233 [Not]
        have lean_s1636 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 37))) True) := by timed Eq.trans lean_s1635 lean_r195
        have lean_s1637 : (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) True) := by timed Eq.trans lean_r159 lean_s1636
        have lean_s1638 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) := by timed trueElim lean_s1637
        have lean_s1639 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) False) := by timed Eq.trans lean_s1634 lean_s1638
        have lean_s1640 : (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) := by timed falseElim lean_s1639
        show (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) from lean_s1640
      ))
    have lean_s1631 : (Implies (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) := by liftOrNToImp lean_s1630, 1
    have lean_s1632 : (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) := by timed modusPonens lean_a289 lean_s1631
    show (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) from lean_s1632
  ))
have lean_s1631 : (Implies (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) := by liftOrNToImp lean_s1630, 1
have lean_s1632 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) := by timed impliesElim lean_s1631
have lean_s1633 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) := by permutateOr lean_s1632, [1, 0], (- 1)
have lean_s1634 : (Or (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 0)) (Int.ofNat 37)), (Eq (format (Int.ofNat 1)) (Int.ofNat 115))] 1
have lean_s1635 : (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) := by permutateOr lean_s1634, [1, 0], (- 1)
have lean_s1636 : (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by andElim lean_s1614, 13
have lean_s1637 : (Or (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed impliesElim lean_s1636
have lean_s1638 : (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) := by timed rfl
let lean_s1639 := by timed flipCongrArg lean_s1638 [Eq]
have lean_s1640 : (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))))) (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) := by timed congr lean_s1639 lean_r215
have lean_s1641 : (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))))) True) := by timed Eq.trans lean_s1640 lean_r214
have lean_s1642 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) True) := by timed Eq.trans lean_r203 lean_s1641
have lean_s1643 : (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) := by timed trueElim lean_s1642
let lean_s1644 := by timed flipCongrArg lean_s1643 [Or]
have lean_s1645 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s1646 : (Eq (Or (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s1644 lean_s1645
have lean_s1647 : (Or (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed eqResolve lean_s1637 lean_s1646
have lean_s1648 : (Or (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) := by permutateOr lean_s1647, [1, 0], (- 1)
have lean_s1649 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))) :=
  (scope (fun lean_a290 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a291 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a292 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a293 : (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) =>
          (scope (fun lean_a294 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
            (scope (fun lean_a295 : (Eq fmt1 (Int.ofNat 3)) =>
              have lean_s1649 : (Eq (Eq fmt1 (Int.ofNat 3)) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r262
              have lean_s1650 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a295 lean_s1649
              have lean_s1651 : (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_a293 lean_a291
              have lean_s1652 : (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) :=
                (scope (fun lean_a292 : (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) =>
                  (scope (fun lean_a293 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                    have lean_s1652 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a293
                    have lean_s1653 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a292
                    have lean_s1654 : (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) := by timed Eq.symm lean_s1653
                    have lean_s1655 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) := by timed Eq.trans lean_s1652 lean_s1654
                    show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) from lean_s1655
                ))))
              have lean_s1653 : (Implies (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by liftOrNToImp lean_s1652, 2
              have lean_s1654 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) := by timed modusPonens lean_s1651 lean_s1653
              have lean_s1655 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) :=
                (scope (fun lean_a292 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) =>
                  have lean_s1655 : (Eq (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed eqResolve lean_a292 lean_r10
                  have lean_s1656 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1655
                  show (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) from lean_s1656
                ))
              have lean_s1656 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) := by liftOrNToImp lean_s1655, 1
              have lean_s1657 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) := by timed modusPonens lean_s1654 lean_s1656
              have lean_s1658 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) := by timed And.intro lean_s1650 lean_s1657
              have lean_s1659 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                (scope (fun lean_a293 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a294 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) =>
                    have lean_s1659 : (Eq (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_a294
                    have lean_s1660 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1659
                    have lean_s1661 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a293
                    have lean_s1662 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1661
                    have lean_s1663 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1662 [xx5fcount]
                    have lean_s1664 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1660 lean_s1663
                    show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1664
                ))))
              have lean_s1660 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1659, 2
              have lean_s1661 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1658 lean_s1660
              let lean_s1662 := by timed And.intro lean_a292 lean_a290
              have lean_s1663 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_s1650 lean_s1662
              have lean_s1664 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a294 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a295 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a296 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                      have lean_s1664 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a296
                      have lean_s1665 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a295
                      have lean_s1666 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1665
                      let lean_s1667 := by timed Eq.trans lean_s1664 lean_s1666
                      have lean_s1668 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a294
                      have lean_s1669 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1668
                      have lean_s1670 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1669 [sx5fcount]
                      have lean_s1671 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1667 lean_s1670
                      show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1671
                ))))))
              have lean_s1665 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1664, 3
              have lean_s1666 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1663 lean_s1665
              let lean_s1667 := by timed And.intro lean_s1661 lean_s1666
              have lean_s1668 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a294 lean_s1667
              show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1668
  ))))))))))))
have lean_s1650 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1649, 6
have lean_s1651 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed rfl
let lean_s1652 := by timed flipCongrArg lean_s1651 [Implies]
have lean_s1653 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Or (Not (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) False))) :=
  (scope (fun lean_a294 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
    (scope (fun lean_a295 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
      (scope (fun lean_a296 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
        have lean_s1653 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) := by timed Eq.symm lean_a296
        have lean_s1654 : (Or (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) False) :=
          (scope (fun lean_a296 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) =>
            have lean_s1654 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r232
            have lean_s1655 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by timed And.intro lean_s1654 lean_a296
            have lean_s1656 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s1657 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s1655 lean_s1656
            have lean_s1658 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1)) := by timed Eq.symm lean_a295
            have lean_s1659 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) := by timed And.intro lean_s1654 lean_s1658
            have lean_s1660 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 1), (Rat.ofInt 1)], 4
            have lean_s1661 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s1659 lean_s1660
            have lean_s1662 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r78
            have lean_s1663 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed And.intro lean_s1662 lean_a294
            have lean_s1664 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) := by arithMulNeg [(binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))), (Int.ofNat 3), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s1665 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))) := by timed modusPonens lean_s1663 lean_s1664
            have lean_s1666 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) := by sumBounds [lean_s1657, lean_s1661, lean_s1665]
            let lean_s1667 := by timed congrHAdd lean_r211 lean_r231
            have lean_s1668 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_r8 lean_s1667
            have lean_s1669 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s1668 lean_r230
            let lean_s1670 := by timed flipCongrArg lean_s1669 [LE.le]
            let lean_s1671 := by timed congrHAdd lean_r84 lean_r49
            have lean_s1672 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 1) (Neg.neg (Rat.ofInt 3))))) := by timed congrHAdd lean_r40 lean_s1671
            have lean_s1673 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (Neg.neg (Rat.ofInt 2))) := by timed Eq.trans lean_s1672 lean_r237
            have lean_s1674 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 2)))) := by timed congr lean_s1670 lean_s1673
            have lean_s1675 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) False) := by timed Eq.trans lean_s1674 lean_r248
            show False from by timed eqResolve lean_s1666 lean_s1675
          ))
        have lean_s1655 : (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by liftOrNToNeg lean_s1654
        show False from by timed contradiction lean_s1653 lean_s1655
  ))))))
have lean_s1654 : (Not (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToNeg lean_s1653
have lean_s1655 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1654
have lean_s1656 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False)) := by timed congr lean_s1652 lean_s1655
have lean_s1657 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) := by timed Eq.trans lean_s1656 lean_r177
have lean_s1658 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed eqResolve lean_s1650 lean_s1657
have lean_s1659 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 3)))))))) := by timed flipNotAnd lean_s1658 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 3))]
have lean_s1660 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))))))) := by permutateOr lean_s1659, [4, 5, 0, 2, 1, 3], (- 1)
have lean_s1661 : (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by andElim lean_s1614, 25
have lean_s1662 : (Or (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed impliesElim lean_s1661
have lean_s1663 : (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by timed rfl
let lean_s1664 := by timed flipCongrArg lean_s1663 [Eq]
have lean_s1665 : (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))))) (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by timed congr lean_s1664 lean_r245
have lean_s1666 : (Eq (Eq (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))))) True) := by timed Eq.trans lean_s1665 lean_r244
have lean_s1667 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) True) := by timed Eq.trans lean_r213 lean_s1666
have lean_s1668 : (Eq (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by timed trueElim lean_s1667
let lean_s1669 := by timed flipCongrArg lean_s1668 [Or]
have lean_s1670 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s1671 : (Eq (Or (Not (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s1669 lean_s1670
have lean_s1672 : (Or (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed eqResolve lean_s1662 lean_s1671
have lean_s1673 : (Or (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by permutateOr lean_s1672, [1, 0], (- 1)
have lean_s1674 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))) :=
  (scope (fun lean_a297 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a298 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
      (scope (fun lean_a299 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a300 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
          (scope (fun lean_a301 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
            (scope (fun lean_a302 : (Eq fmt1 (Int.ofNat 3)) =>
              have lean_s1674 : (Eq (Eq fmt1 (Int.ofNat 3)) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r262
              have lean_s1675 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a302 lean_s1674
              let lean_s1676 := by timed And.intro lean_a300 lean_a298
              have lean_s1677 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed And.intro lean_s1675 lean_s1676
              have lean_s1678 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a298 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a299 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a300 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                      have lean_s1678 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a300
                      have lean_s1679 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a299
                      have lean_s1680 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1679
                      let lean_s1681 := by timed Eq.trans lean_s1678 lean_s1680
                      have lean_s1682 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a298
                      have lean_s1683 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1682
                      have lean_s1684 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1683 [xx5fcount]
                      have lean_s1685 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1681 lean_s1684
                      show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1685
                ))))))
              have lean_s1679 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1678, 3
              have lean_s1680 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1677 lean_s1679
              let lean_s1681 := by timed And.intro lean_a299 lean_a297
              have lean_s1682 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_s1675 lean_s1681
              have lean_s1683 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a298 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a299 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a300 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                      have lean_s1683 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a300
                      have lean_s1684 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a299
                      have lean_s1685 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1684
                      let lean_s1686 := by timed Eq.trans lean_s1683 lean_s1685
                      have lean_s1687 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a298
                      have lean_s1688 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1687
                      have lean_s1689 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1688 [sx5fcount]
                      have lean_s1690 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1686 lean_s1689
                      show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1690
                ))))))
              have lean_s1684 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1683, 3
              have lean_s1685 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1682 lean_s1684
              let lean_s1686 := by timed And.intro lean_s1680 lean_s1685
              have lean_s1687 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a301 lean_s1686
              show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1687
  ))))))))))))
have lean_s1675 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1674, 6
have lean_s1676 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed rfl
let lean_s1677 := by timed flipCongrArg lean_s1676 [Implies]
have lean_s1678 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1654
have lean_s1679 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False)) := by timed congr lean_s1677 lean_s1678
have lean_s1680 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) := by timed Eq.trans lean_s1679 lean_r261
have lean_s1681 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed eqResolve lean_s1675 lean_s1680
have lean_s1682 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 3)))))))) := by timed flipNotAnd lean_s1681 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 3))]
have lean_s1683 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))) := by permutateOr lean_s1682, [4, 5, 0, 2, 1, 3], (- 1)
have lean_s1684 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) := by andElim lean_s1614, 0
let lean_s1685 := by R2 lean_s1683, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1686 := by R2 lean_s1685, lean_s39, (Eq fmt1 (Int.ofNat 3)), [(- 1), (- 1)]
have lean_s1687 : (Or (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (Not (Eq fmt1 (Int.ofNat 2)))) (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Not (Not (Eq fmt1 (Int.ofNat 2)))))) := by timed cnfAndNeg [(binrel% GE.ge fmt1 (Int.ofNat 2)), (Not (Eq fmt1 (Int.ofNat 2)))]
have lean_s1688 : (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Or (Not (Not (Eq fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 3)))) :=
  (scope (fun lean_a298 : (binrel% GE.ge fmt1 (Int.ofNat 2)) =>
    (scope (fun lean_a299 : (Not (Eq fmt1 (Int.ofNat 2))) =>
      have lean_s1688 : (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (Not (Eq fmt1 (Int.ofNat 2)))) := by timed And.intro lean_a298 lean_a299
      have lean_s1689 : (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Or (Not (Not (Eq fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 3)))) :=
        (scope (fun lean_a300 : (binrel% GE.ge fmt1 (Int.ofNat 2)) =>
          (scope (fun lean_a301 : (Not (Eq fmt1 (Int.ofNat 2))) =>
            have lean_s1689 : (binrel% GT.gt fmt1 (Int.ofNat 2)) := by trichotomy lean_a300, lean_a301
            have lean_s1690 : (binrel% GE.ge fmt1 (Int.ofNat 3)) := by intTightLb lean_s1689
            show (binrel% GE.ge fmt1 (Int.ofNat 3)) from lean_s1690
        ))))
      have lean_s1690 : (Implies (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (Not (Eq fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 3))) := by liftOrNToImp lean_s1689, 2
      have lean_s1691 : (binrel% GE.ge fmt1 (Int.ofNat 3)) := by timed modusPonens lean_s1688 lean_s1690
      show (binrel% GE.ge fmt1 (Int.ofNat 3)) from lean_s1691
  ))))
have lean_s1689 : (Implies (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (Not (Eq fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 3))) := by liftOrNToImp lean_s1688, 2
have lean_s1690 : (Or (Not (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (Not (Eq fmt1 (Int.ofNat 2))))) (binrel% GE.ge fmt1 (Int.ofNat 3))) := by timed impliesElim lean_s1689
have lean_s1691 : (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Or (Not (Not (Eq fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 3)))) := by R1 lean_s1687, lean_s1690, (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (Not (Eq fmt1 (Int.ofNat 2)))), [(- 1), (- 1)]
have lean_s1692 : (Eq Or Or) := by timed rfl
have lean_s1693 : (Eq (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) := by timed rfl
let lean_s1694 := by timed congr lean_s1692 lean_s1693
have lean_s1695 : (Eq (Eq fmt1 (Int.ofNat 2)) (Eq fmt1 (Int.ofNat 2))) := by timed rfl
let lean_s1696 := by timed flipCongrArg lean_s1695 [Eq]
have lean_s1697 : (Eq (Eq (Eq fmt1 (Int.ofNat 2)) (Not (Not (Eq fmt1 (Int.ofNat 2))))) (Eq (Eq fmt1 (Int.ofNat 2)) (Eq fmt1 (Int.ofNat 2)))) := by timed congr lean_s1696 lean_r223
have lean_s1698 : (Eq (Eq (Eq fmt1 (Int.ofNat 2)) (Not (Not (Eq fmt1 (Int.ofNat 2))))) True) := by timed Eq.trans lean_s1697 lean_r183
have lean_s1699 : (Eq (Eq (Not (Not (Eq fmt1 (Int.ofNat 2)))) (Eq fmt1 (Int.ofNat 2))) True) := by timed Eq.trans lean_r226 lean_s1698
have lean_s1700 : (Eq (Not (Not (Eq fmt1 (Int.ofNat 2)))) (Eq fmt1 (Int.ofNat 2))) := by timed trueElim lean_s1699
let lean_s1701 := by timed congr lean_s1692 lean_s1700
have lean_s1702 : (Eq (binrel% GE.ge fmt1 (Int.ofNat 3)) (binrel% GE.ge fmt1 (Int.ofNat 3))) := by timed rfl
let lean_s1703 := by timed congr lean_s1701 lean_s1702
have lean_s1704 : (Eq (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Or (Not (Not (Eq fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 3)))) (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Or (Eq fmt1 (Int.ofNat 2)) (binrel% GE.ge fmt1 (Int.ofNat 3))))) := by timed congr lean_s1694 lean_s1703
have lean_s1705 : (Or (Not (binrel% GE.ge fmt1 (Int.ofNat 2))) (Or (Eq fmt1 (Int.ofNat 2)) (binrel% GE.ge fmt1 (Int.ofNat 3)))) := by timed eqResolve lean_s1691 lean_s1704
have lean_s1706 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) :=
  (scope (fun lean_a300 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a301 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
      (scope (fun lean_a302 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
        (scope (fun lean_a303 : (Eq fmt1 (Int.ofNat 2)) =>
          have lean_s1706 : (Eq (Eq fmt1 (Int.ofNat 2)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r136
          have lean_s1707 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a303 lean_s1706
          have lean_s1708 : (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed And.intro lean_s1707 lean_a301
          have lean_s1709 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
            (scope (fun lean_a301 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
              (scope (fun lean_a302 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                have lean_s1709 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a302
                have lean_s1710 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 0)) := by timed Eq.symm lean_a301
                have lean_s1711 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1710
                have lean_s1712 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1711 [xx5fcount]
                have lean_s1713 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1709 lean_s1712
                show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1713
            ))))
          have lean_s1710 : (Implies (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1709, 2
          have lean_s1711 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1708 lean_s1710
          have lean_s1712 : (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_s1707 lean_a300
          have lean_s1713 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
            (scope (fun lean_a302 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
              (scope (fun lean_a303 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                have lean_s1713 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a303
                have lean_s1714 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 0)) := by timed Eq.symm lean_a302
                have lean_s1715 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1714
                have lean_s1716 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1715 [sx5fcount]
                have lean_s1717 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1713 lean_s1716
                show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1717
            ))))
          have lean_s1714 : (Implies (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1713, 2
          have lean_s1715 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1712 lean_s1714
          let lean_s1716 := by timed And.intro lean_s1711 lean_s1715
          have lean_s1717 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a302 lean_s1716
          show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1717
  ))))))))
have lean_s1707 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1706, 4
have lean_s1708 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2)))))) := by timed rfl
let lean_s1709 := by timed flipCongrArg lean_s1708 [Implies]
have lean_s1710 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1654
have lean_s1711 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False)) := by timed congr lean_s1709 lean_s1710
have lean_s1712 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) := by timed Eq.trans lean_s1711 lean_r75
have lean_s1713 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2)))))) := by timed eqResolve lean_s1707 lean_s1712
have lean_s1714 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 2)))))) := by timed flipNotAnd lean_s1713 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 2))]
have lean_s1715 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 2))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))))) := by permutateOr lean_s1714, [2, 3, 0, 1], (- 1)
let lean_s1716 := by R2 lean_s1715, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1717 := by R2 lean_s1716, lean_s1648, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s1718 := by R1 lean_s1717, lean_s1635, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s1719 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) :=
  (scope (fun lean_a302 : (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) =>
    have lean_s1719 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) :=
      (scope (fun lean_a302 : (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) =>
        have lean_s1719 : (Eq (Int.ofNat 115) (format (Int.ofNat 1))) := by timed Eq.symm lean_a302
        have lean_s1720 : (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) := by timed Eq.symm lean_s1719
        let lean_s1721 := by timed flipCongrArg lean_s1720 [Eq]
        have lean_s1722 : (Eq (Int.ofNat 120) (Int.ofNat 120)) := by timed rfl
        have lean_s1723 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Eq (Int.ofNat 115) (Int.ofNat 120))) := by timed congr lean_s1721 lean_s1722
        have lean_s1724 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 120))) (Not False)) := by timed flipCongrArg lean_r212 [Not]
        have lean_s1725 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 120))) True) := by timed Eq.trans lean_s1724 lean_r195
        have lean_s1726 : (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) True) := by timed Eq.trans lean_r200 lean_s1725
        have lean_s1727 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) := by timed trueElim lean_s1726
        have lean_s1728 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) False) := by timed Eq.trans lean_s1723 lean_s1727
        have lean_s1729 : (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) := by timed falseElim lean_s1728
        show (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) from lean_s1729
      ))
    have lean_s1720 : (Implies (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by liftOrNToImp lean_s1719, 1
    have lean_s1721 : (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) := by timed modusPonens lean_a302 lean_s1720
    show (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) from lean_s1721
  ))
have lean_s1720 : (Implies (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by liftOrNToImp lean_s1719, 1
have lean_s1721 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by timed impliesElim lean_s1720
let lean_s1722 := by R1 lean_s1718, lean_s1721, (Eq (format (Int.ofNat 1)) (Int.ofNat 115)), [(- 1), (- 1)]
have lean_s1723 : (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by andElim lean_s1614, 24
have lean_s1724 : (Or (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed impliesElim lean_s1723
have lean_s1725 : (Or (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by permutateOr lean_s1724, [1, 0], (- 1)
let lean_s1726 := by R2 lean_s1722, lean_s1725, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1727 : (Or (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 0)) (Int.ofNat 37)), (Eq (format (Int.ofNat 1)) (Int.ofNat 120))] 1
have lean_s1728 : (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by permutateOr lean_s1727, [1, 0], (- 1)
have lean_s1729 : (Or (Not (Eq fmt1 (Int.ofNat 2))) (Or (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))))) := by R2 lean_s1726, lean_s1728, (Eq (format (Int.ofNat 1)) (Int.ofNat 120)), [(- 1), (- 1)]
have lean_s1730 : (Or (Not (Eq fmt1 (Int.ofNat 2))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by factor lean_s1729, (- 1)
let lean_s1731 := by R2 lean_s1730, lean_s1673, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s1732 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) :=
  (scope (fun lean_a302 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a303 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a304 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
        (scope (fun lean_a305 : (Eq fmt1 (Int.ofNat 2)) =>
          have lean_s1732 : (Eq (Eq fmt1 (Int.ofNat 2)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r136
          have lean_s1733 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a305 lean_s1732
          have lean_s1734 : (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_s1733 lean_a303
          have lean_s1735 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
            (scope (fun lean_a302 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
              (scope (fun lean_a303 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                have lean_s1735 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a303
                have lean_s1736 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 0)) := by timed Eq.symm lean_a302
                have lean_s1737 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1736
                have lean_s1738 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1737 [xx5fcount]
                have lean_s1739 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1735 lean_s1738
                show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1739
            ))))
          have lean_s1736 : (Implies (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1735, 2
          have lean_s1737 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1734 lean_s1736
          have lean_s1738 : (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed And.intro lean_s1733 lean_a302
          have lean_s1739 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
            (scope (fun lean_a302 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
              (scope (fun lean_a303 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                have lean_s1739 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a303
                have lean_s1740 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 0)) := by timed Eq.symm lean_a302
                have lean_s1741 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1740
                have lean_s1742 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1741 [sx5fcount]
                have lean_s1743 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1739 lean_s1742
                show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1743
            ))))
          have lean_s1740 : (Implies (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1739, 2
          have lean_s1741 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1738 lean_s1740
          let lean_s1742 := by timed And.intro lean_s1737 lean_s1741
          have lean_s1743 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a304 lean_s1742
          show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1743
  ))))))))
have lean_s1733 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1732, 4
have lean_s1734 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2)))))) := by timed rfl
let lean_s1735 := by timed flipCongrArg lean_s1734 [Implies]
have lean_s1736 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s5
have lean_s1737 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False)) := by timed congr lean_s1735 lean_s1736
have lean_s1738 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) := by timed Eq.trans lean_s1737 lean_r252
have lean_s1739 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2)))))) := by timed eqResolve lean_s1733 lean_s1738
have lean_s1740 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 2)))))) := by timed flipNotAnd lean_s1739 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 2))]
have lean_s1741 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 2))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))))) := by permutateOr lean_s1740, [2, 3, 0, 1], (- 1)
let lean_s1742 := by R2 lean_s1741, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1743 : (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by andElim lean_s1614, 12
have lean_s1744 : (Or (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed impliesElim lean_s1743
have lean_s1745 : (Or (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) := by permutateOr lean_s1744, [1, 0], (- 1)
let lean_s1746 := by R2 lean_s1742, lean_s1745, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s1747 := by R2 lean_s1746, lean_s1648, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s1748 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) :=
  (scope (fun lean_a302 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a303 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a304 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
        (scope (fun lean_a305 : (Eq fmt1 (Int.ofNat 2)) =>
          have lean_s1748 : (Eq (Eq fmt1 (Int.ofNat 2)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r136
          have lean_s1749 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a305 lean_s1748
          have lean_s1750 : (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_s1749 lean_a303
          have lean_s1751 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
            (scope (fun lean_a302 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
              (scope (fun lean_a303 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                have lean_s1751 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a303
                have lean_s1752 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 0)) := by timed Eq.symm lean_a302
                have lean_s1753 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1752
                have lean_s1754 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1753 [xx5fcount]
                have lean_s1755 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1751 lean_s1754
                show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1755
            ))))
          have lean_s1752 : (Implies (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1751, 2
          have lean_s1753 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1750 lean_s1752
          have lean_s1754 : (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_s1749 lean_a302
          have lean_s1755 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
            (scope (fun lean_a302 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
              (scope (fun lean_a303 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                have lean_s1755 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a303
                have lean_s1756 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 0)) := by timed Eq.symm lean_a302
                have lean_s1757 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1756
                have lean_s1758 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1757 [sx5fcount]
                have lean_s1759 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1755 lean_s1758
                show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1759
            ))))
          have lean_s1756 : (Implies (And (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1755, 2
          have lean_s1757 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1754 lean_s1756
          let lean_s1758 := by timed And.intro lean_s1753 lean_s1757
          have lean_s1759 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a304 lean_s1758
          show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1759
  ))))))))
have lean_s1749 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1748, 4
have lean_s1750 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2)))))) := by timed rfl
let lean_s1751 := by timed flipCongrArg lean_s1750 [Implies]
have lean_s1752 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Or (Not (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) False))) :=
  (scope (fun lean_a302 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
    (scope (fun lean_a303 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
      (scope (fun lean_a304 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
        have lean_s1752 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) := by timed Eq.symm lean_a304
        have lean_s1753 : (Or (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) False) :=
          (scope (fun lean_a302 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) =>
            have lean_s1753 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r232
            have lean_s1754 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by timed And.intro lean_s1753 lean_a302
            have lean_s1755 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s1756 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s1754 lean_s1755
            have lean_s1757 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) := by timed Eq.symm lean_a303
            have lean_s1758 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by timed And.intro lean_s1753 lean_s1757
            have lean_s1759 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s1760 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s1758 lean_s1759
            have lean_s1761 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r78
            have lean_s1762 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed And.intro lean_s1761 lean_a302
            have lean_s1763 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) := by arithMulNeg [(binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))), (Int.ofNat 3), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s1764 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))) := by timed modusPonens lean_s1762 lean_s1763
            have lean_s1765 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) := by sumBounds [lean_s1756, lean_s1760, lean_s1764]
            let lean_s1766 := by timed congrHAdd lean_r211 lean_r231
            have lean_s1767 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_r8 lean_s1766
            have lean_s1768 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s1767 lean_r230
            let lean_s1769 := by timed flipCongrArg lean_s1768 [LE.le]
            let lean_s1770 := by timed congrHAdd lean_r40 lean_r49
            have lean_s1771 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3))))) := by timed congrHAdd lean_r40 lean_s1770
            have lean_s1772 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (Neg.neg (Rat.ofInt 3))) := by timed Eq.trans lean_s1771 lean_r27
            have lean_s1773 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 3)))) := by timed congr lean_s1769 lean_s1772
            have lean_s1774 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) False) := by timed Eq.trans lean_s1773 lean_r243
            show False from by timed eqResolve lean_s1765 lean_s1774
          ))
        have lean_s1754 : (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by liftOrNToNeg lean_s1753
        show False from by timed contradiction lean_s1752 lean_s1754
  ))))))
have lean_s1753 : (Not (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToNeg lean_s1752
have lean_s1754 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1753
have lean_s1755 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) False)) := by timed congr lean_s1751 lean_s1754
have lean_s1756 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2))))))) := by timed Eq.trans lean_s1755 lean_r142
have lean_s1757 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 2)))))) := by timed eqResolve lean_s1749 lean_s1756
have lean_s1758 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 2)))))) := by timed flipNotAnd lean_s1757 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 2))]
have lean_s1759 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 2))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))))) := by permutateOr lean_s1758, [2, 3, 0, 1], (- 1)
let lean_s1760 := by R1 lean_s1747, lean_s1759, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1761 : (Or (Not (Eq fmt1 (Int.ofNat 2))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq fmt1 (Int.ofNat 2))) (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))))) := by R2 lean_s1760, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1762 : (Or (Not (Eq fmt1 (Int.ofNat 2))) (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by factor lean_s1761, (- 1)
have lean_s1763 : (Or (Not (Eq fmt1 (Int.ofNat 2))) (Not (Eq fmt1 (Int.ofNat 2)))) := by R1 lean_s1731, lean_s1762, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1764 : (Not (Eq fmt1 (Int.ofNat 2))) := by factor lean_s1763, 1
let lean_s1765 := by R1 lean_s1705, lean_s1764, (Eq fmt1 (Int.ofNat 2)), [(- 1), 0]
have lean_s1766 : (binrel% GE.ge fmt1 (Int.ofNat 2)) := by andElim lean_s1614, 2
have lean_s1767 : (binrel% GE.ge fmt1 (Int.ofNat 3)) := by R2 lean_s1765, lean_s1766, (binrel% GE.ge fmt1 (Int.ofNat 2)), [(- 1), 0]
let lean_s1768 := by R2 lean_s1686, lean_s1767, (binrel% GE.ge fmt1 (Int.ofNat 3)), [(- 1), 0]
have lean_s1769 : (Not (binrel% GE.ge fmt1 (Int.ofNat 5))) := by andElim lean_s1614, 1
let lean_s1770 := by R1 lean_s1768, lean_s1769, (binrel% GE.ge fmt1 (Int.ofNat 5)), [(- 1), 0]
have lean_s1771 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a302 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a303 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
      (scope (fun lean_a304 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a305 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a306 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a307 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
              (scope (fun lean_a308 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a309 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s1771 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s1772 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a309 lean_s1771
                  let lean_s1773 := by timed And.intro lean_a306 lean_a303
                  have lean_s1774 : (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed And.intro lean_a307 lean_s1773
                  have lean_s1775 : (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))) :=
                    (scope (fun lean_a304 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
                      (scope (fun lean_a305 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                        (scope (fun lean_a306 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                          have lean_s1775 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a306
                          have lean_s1776 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a305
                          have lean_s1777 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1776
                          let lean_s1778 := by timed Eq.trans lean_s1775 lean_s1777
                          have lean_s1779 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a304
                          have lean_s1780 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed Eq.symm lean_s1779
                          have lean_s1781 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed Eq.trans lean_s1778 lean_s1780
                          show (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) from lean_s1781
                    ))))))
                  have lean_s1776 : (Implies (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by liftOrNToImp lean_s1775, 3
                  have lean_s1777 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed modusPonens lean_s1774 lean_s1776
                  have lean_s1778 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2)))) :=
                    (scope (fun lean_a304 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
                      have lean_s1778 : (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 2)) := by timed eqResolve lean_a304 lean_r117
                      have lean_s1779 : (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1778
                      show (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2))) from lean_s1779
                    ))
                  have lean_s1779 : (Implies (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2)))) := by liftOrNToImp lean_s1778, 1
                  have lean_s1780 : (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2))) := by timed modusPonens lean_s1777 lean_s1779
                  have lean_s1781 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2)))) := by timed And.intro lean_s1772 lean_s1780
                  have lean_s1782 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                    (scope (fun lean_a305 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a306 : (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2))) =>
                        have lean_s1782 : (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 2)) := by timed Eq.symm lean_a306
                        have lean_s1783 : (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1782
                        have lean_s1784 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a305
                        have lean_s1785 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1784
                        have lean_s1786 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1785 [xx5fcount]
                        have lean_s1787 : (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1783 lean_s1786
                        show (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1787
                    ))))
                  have lean_s1783 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 2) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1782, 2
                  have lean_s1784 : (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1781 lean_s1783
                  let lean_s1785 := by timed And.intro lean_a304 lean_a302
                  let lean_s1786 := by timed And.intro lean_a305 lean_s1785
                  have lean_s1787 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s1772 lean_s1786
                  have lean_s1788 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a306 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a307 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a308 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s1788 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1789 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a308
                            have lean_s1790 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1789
                            let lean_s1791 := by timed Eq.trans lean_s1788 lean_s1790
                            have lean_s1792 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a307
                            have lean_s1793 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1792
                            let lean_s1794 := by timed Eq.trans lean_s1791 lean_s1793
                            have lean_s1795 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a306
                            have lean_s1796 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1795
                            have lean_s1797 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1796 [sx5fcount]
                            have lean_s1798 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1794 lean_s1797
                            show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1798
                    ))))))))
                  have lean_s1789 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1788, 4
                  have lean_s1790 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1787 lean_s1789
                  let lean_s1791 := by timed And.intro lean_s1784 lean_s1790
                  have lean_s1792 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a308 lean_s1791
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1792
  ))))))))))))))))
have lean_s1772 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1771, 8
have lean_s1773 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s1774 := by timed flipCongrArg lean_s1773 [Implies]
have lean_s1775 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Or (Not (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) False))) :=
  (scope (fun lean_a306 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
      (scope (fun lean_a308 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
        have lean_s1775 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) := by timed Eq.symm lean_a308
        have lean_s1776 : (Or (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) False) :=
          (scope (fun lean_a307 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0)) =>
            have lean_s1776 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r232
            have lean_s1777 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by timed And.intro lean_s1776 lean_a307
            have lean_s1778 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)))) := by arithMulPos [(sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 0), (Rat.ofInt 1)], 4
            have lean_s1779 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0))) := by timed modusPonens lean_s1777 lean_s1778
            have lean_s1780 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2)) := by timed Eq.symm lean_a307
            have lean_s1781 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2))) := by timed And.intro lean_s1776 lean_s1780
            have lean_s1782 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 2))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)))) := by arithMulPos [(xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 2), (Rat.ofInt 1)], 4
            have lean_s1783 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2))) := by timed modusPonens lean_s1781 lean_s1782
            have lean_s1784 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r78
            have lean_s1785 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed And.intro lean_s1784 lean_a306
            have lean_s1786 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) := by arithMulNeg [(binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))), (Int.ofNat 3), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s1787 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))) := by timed modusPonens lean_s1785 lean_s1786
            have lean_s1788 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) := by sumBounds [lean_s1779, lean_s1783, lean_s1787]
            let lean_s1789 := by timed congrHAdd lean_r211 lean_r231
            have lean_s1790 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_r8 lean_s1789
            have lean_s1791 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s1790 lean_r230
            let lean_s1792 := by timed flipCongrArg lean_s1791 [LE.le]
            let lean_s1793 := by timed congrHAdd lean_r43 lean_r49
            have lean_s1794 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (binrel% HAdd.hAdd (Rat.ofInt 0) (binrel% HAdd.hAdd (Rat.ofInt 2) (Neg.neg (Rat.ofInt 3))))) := by timed congrHAdd lean_r40 lean_s1793
            have lean_s1795 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (Neg.neg (Rat.ofInt 1))) := by timed Eq.trans lean_s1794 lean_r98
            have lean_s1796 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s1792 lean_s1795
            have lean_s1797 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 0)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) False) := by timed Eq.trans lean_s1796 lean_r228
            show False from by timed eqResolve lean_s1788 lean_s1797
          ))
        have lean_s1777 : (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 0))) := by liftOrNToNeg lean_s1776
        show False from by timed contradiction lean_s1775 lean_s1777
  ))))))
have lean_s1776 : (Not (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToNeg lean_s1775
have lean_s1777 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1776
have lean_s1778 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s1774 lean_s1777
have lean_s1779 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 2) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s1778 lean_r250
have lean_s1780 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s1772 lean_s1779
have lean_s1781 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s1780 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s1782 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))))))))) := by permutateOr lean_s1781, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s1783 := by R2 lean_s1782, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1784 : (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by andElim lean_s1614, 28
have lean_s1785 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed impliesElim lean_s1784
have lean_s1786 : (Or (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) := by permutateOr lean_s1785, [1, 0], (- 1)
let lean_s1787 := by R2 lean_s1783, lean_s1786, (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))), [(- 1), (- 1)]
have lean_s1788 : (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by andElim lean_s1614, 29
have lean_s1789 : (Or (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed impliesElim lean_s1788
have lean_s1790 : (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by timed rfl
let lean_s1791 := by timed flipCongrArg lean_s1790 [Eq]
have lean_s1792 : (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))))) (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) := by timed congr lean_s1791 lean_r222
have lean_s1793 : (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))))) True) := by timed Eq.trans lean_s1792 lean_r182
have lean_s1794 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) True) := by timed Eq.trans lean_r224 lean_s1793
have lean_s1795 : (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by timed trueElim lean_s1794
let lean_s1796 := by timed flipCongrArg lean_s1795 [Or]
have lean_s1797 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1798 : (Eq (Or (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s1796 lean_s1797
have lean_s1799 : (Or (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed eqResolve lean_s1789 lean_s1798
have lean_s1800 : (Or (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by permutateOr lean_s1799, [1, 0], (- 1)
let lean_s1801 := by R2 lean_s1787, lean_s1800, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s1802 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a307 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a310 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a311 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a312 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a313 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a314 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s1802 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s1803 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a314 lean_s1802
                  let lean_s1804 := by timed And.intro lean_a311 lean_a308
                  let lean_s1805 := by timed And.intro lean_a312 lean_s1804
                  have lean_s1806 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s1803 lean_s1805
                  have lean_s1807 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a309 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a310 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s1807 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a310
                            have lean_s1808 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1809 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1808
                            let lean_s1810 := by timed Eq.trans lean_s1807 lean_s1809
                            have lean_s1811 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a308
                            have lean_s1812 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1811
                            let lean_s1813 := by timed Eq.trans lean_s1810 lean_s1812
                            have lean_s1814 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a307
                            have lean_s1815 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1814
                            have lean_s1816 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1815 [xx5fcount]
                            have lean_s1817 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1813 lean_s1816
                            show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1817
                    ))))))))
                  have lean_s1808 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1807, 4
                  have lean_s1809 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1806 lean_s1808
                  let lean_s1810 := by timed And.intro lean_a309 lean_a307
                  let lean_s1811 := by timed And.intro lean_a310 lean_s1810
                  have lean_s1812 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) := by timed And.intro lean_s1803 lean_s1811
                  have lean_s1813 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a308 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a310 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                            have lean_s1813 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a310
                            have lean_s1814 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1815 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1814
                            let lean_s1816 := by timed Eq.trans lean_s1813 lean_s1815
                            have lean_s1817 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a308
                            have lean_s1818 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1817
                            let lean_s1819 := by timed Eq.trans lean_s1816 lean_s1818
                            have lean_s1820 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a307
                            have lean_s1821 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1820
                            have lean_s1822 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1821 [sx5fcount]
                            have lean_s1823 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1819 lean_s1822
                            show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1823
                    ))))))))
                  have lean_s1814 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1813, 4
                  have lean_s1815 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1812 lean_s1814
                  let lean_s1816 := by timed And.intro lean_s1809 lean_s1815
                  have lean_s1817 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a313 lean_s1816
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1817
  ))))))))))))))))
have lean_s1803 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1802, 8
have lean_s1804 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s1805 := by timed flipCongrArg lean_s1804 [Implies]
have lean_s1806 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s5
have lean_s1807 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s1805 lean_s1806
have lean_s1808 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s1807 lean_r133
have lean_s1809 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s1803 lean_s1808
have lean_s1810 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s1809 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s1811 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s1810, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s1812 := by R2 lean_s1811, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1813 := by R2 lean_s1812, lean_s1673, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s1814 := by R1 lean_s1813, lean_s1728, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))), [(- 1), (- 1)]
let lean_s1815 := by R1 lean_s1814, lean_s1721, (Eq (format (Int.ofNat 1)) (Int.ofNat 120)), [(- 1), (- 1)]
let lean_s1816 := by R2 lean_s1815, lean_s1745, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1817 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))))))))) := by R2 lean_s1816, lean_s1635, (Eq (format (Int.ofNat 1)) (Int.ofNat 115)), [(- 1), (- 1)]
have lean_s1818 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))))))) := by factor lean_s1817, (- 1)
let lean_s1819 := by R2 lean_s1818, lean_s1648, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s1820 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a307 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
      (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a310 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a311 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a312 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a313 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a314 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s1820 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s1821 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a314 lean_s1820
                  let lean_s1822 := by timed And.intro lean_a311 lean_a308
                  let lean_s1823 := by timed And.intro lean_a312 lean_s1822
                  have lean_s1824 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) := by timed And.intro lean_s1821 lean_s1823
                  have lean_s1825 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a309 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a310 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                            have lean_s1825 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a310
                            have lean_s1826 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1827 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1826
                            let lean_s1828 := by timed Eq.trans lean_s1825 lean_s1827
                            have lean_s1829 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a308
                            have lean_s1830 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1829
                            let lean_s1831 := by timed Eq.trans lean_s1828 lean_s1830
                            have lean_s1832 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a307
                            have lean_s1833 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1832
                            have lean_s1834 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1833 [xx5fcount]
                            have lean_s1835 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1831 lean_s1834
                            show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1835
                    ))))))))
                  have lean_s1826 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1825, 4
                  have lean_s1827 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1824 lean_s1826
                  let lean_s1828 := by timed And.intro lean_a309 lean_a307
                  let lean_s1829 := by timed And.intro lean_a310 lean_s1828
                  have lean_s1830 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s1821 lean_s1829
                  have lean_s1831 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a308 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a310 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s1831 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a310
                            have lean_s1832 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1833 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1832
                            let lean_s1834 := by timed Eq.trans lean_s1831 lean_s1833
                            have lean_s1835 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a308
                            have lean_s1836 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1835
                            let lean_s1837 := by timed Eq.trans lean_s1834 lean_s1836
                            have lean_s1838 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a307
                            have lean_s1839 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1838
                            have lean_s1840 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1839 [sx5fcount]
                            have lean_s1841 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1837 lean_s1840
                            show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1841
                    ))))))))
                  have lean_s1832 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1831, 4
                  have lean_s1833 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1830 lean_s1832
                  let lean_s1834 := by timed And.intro lean_s1827 lean_s1833
                  have lean_s1835 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a313 lean_s1834
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1835
  ))))))))))))))))
have lean_s1821 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1820, 8
have lean_s1822 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s1823 := by timed flipCongrArg lean_s1822 [Implies]
have lean_s1824 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1654
have lean_s1825 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s1823 lean_s1824
have lean_s1826 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s1825 lean_r246
have lean_s1827 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s1821 lean_s1826
have lean_s1828 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s1827 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s1829 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s1828, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s1830 := by R2 lean_s1829, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1831 := by R2 lean_s1830, lean_s1725, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), (- 1)]
let lean_s1832 := by R2 lean_s1831, lean_s1673, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s1833 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a307 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a310 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a311 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a312 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a313 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a314 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s1833 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s1834 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a314 lean_s1833
                  let lean_s1835 := by timed And.intro lean_a311 lean_a308
                  let lean_s1836 := by timed And.intro lean_a312 lean_s1835
                  have lean_s1837 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s1834 lean_s1836
                  have lean_s1838 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a309 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a310 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s1838 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a310
                            have lean_s1839 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1840 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1839
                            let lean_s1841 := by timed Eq.trans lean_s1838 lean_s1840
                            have lean_s1842 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a308
                            have lean_s1843 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1842
                            let lean_s1844 := by timed Eq.trans lean_s1841 lean_s1843
                            have lean_s1845 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a307
                            have lean_s1846 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1845
                            have lean_s1847 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1846 [xx5fcount]
                            have lean_s1848 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1844 lean_s1847
                            show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1848
                    ))))))))
                  have lean_s1839 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1838, 4
                  have lean_s1840 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1837 lean_s1839
                  let lean_s1841 := by timed And.intro lean_a309 lean_a307
                  let lean_s1842 := by timed And.intro lean_a310 lean_s1841
                  have lean_s1843 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s1834 lean_s1842
                  have lean_s1844 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a308 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a310 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s1844 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a310
                            have lean_s1845 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1846 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1845
                            let lean_s1847 := by timed Eq.trans lean_s1844 lean_s1846
                            have lean_s1848 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a308
                            have lean_s1849 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1848
                            let lean_s1850 := by timed Eq.trans lean_s1847 lean_s1849
                            have lean_s1851 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a307
                            have lean_s1852 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1851
                            have lean_s1853 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1852 [sx5fcount]
                            have lean_s1854 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1850 lean_s1853
                            show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1854
                    ))))))))
                  have lean_s1845 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1844, 4
                  have lean_s1846 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1843 lean_s1845
                  let lean_s1847 := by timed And.intro lean_s1840 lean_s1846
                  have lean_s1848 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a313 lean_s1847
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1848
  ))))))))))))))))
have lean_s1834 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1833, 8
have lean_s1835 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s1836 := by timed flipCongrArg lean_s1835 [Implies]
have lean_s1837 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1753
have lean_s1838 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s1836 lean_s1837
have lean_s1839 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s1838 lean_r242
have lean_s1840 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s1834 lean_s1839
have lean_s1841 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s1840 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s1842 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s1841, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s1843 := by R1 lean_s1832, lean_s1842, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1844 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))))))) := by R2 lean_s1843, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1845 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))) := by factor lean_s1844, (- 1)
have lean_s1846 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))))) := by R1 lean_s1819, lean_s1845, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), (- 1)]
have lean_s1847 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))))) := by factor lean_s1846, (- 1)
have lean_s1848 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))))))) := by R1 lean_s1801, lean_s1847, (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
have lean_s1849 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))) := by factor lean_s1848, (- 1)
have lean_s1850 : (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by andElim lean_s1614, 17
have lean_s1851 : (Or (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed impliesElim lean_s1850
have lean_s1852 : (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) := by timed rfl
let lean_s1853 := by timed flipCongrArg lean_s1852 [Eq]
have lean_s1854 : (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))))) (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) := by timed congr lean_s1853 lean_r239
have lean_s1855 : (Eq (Eq (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))))) True) := by timed Eq.trans lean_s1854 lean_r149
have lean_s1856 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) True) := by timed Eq.trans lean_r22 lean_s1855
have lean_s1857 : (Eq (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) := by timed trueElim lean_s1856
let lean_s1858 := by timed flipCongrArg lean_s1857 [Or]
have lean_s1859 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1860 : (Eq (Or (Not (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s1858 lean_s1859
have lean_s1861 : (Or (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed eqResolve lean_s1851 lean_s1860
have lean_s1862 : (Or (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) := by permutateOr lean_s1861, [1, 0], (- 1)
let lean_s1863 := by R2 lean_s1849, lean_s1862, (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
have lean_s1864 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a307 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
      (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a310 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
          (scope (fun lean_a311 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a312 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a313 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a314 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s1864 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s1865 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a314 lean_s1864
                  let lean_s1866 := by timed And.intro lean_a311 lean_a308
                  let lean_s1867 := by timed And.intro lean_a312 lean_s1866
                  have lean_s1868 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) := by timed And.intro lean_s1865 lean_s1867
                  have lean_s1869 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a308 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a309 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a310 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                            have lean_s1869 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a310
                            have lean_s1870 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                            have lean_s1871 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1870
                            let lean_s1872 := by timed Eq.trans lean_s1869 lean_s1871
                            have lean_s1873 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a308
                            have lean_s1874 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1873
                            let lean_s1875 := by timed Eq.trans lean_s1872 lean_s1874
                            have lean_s1876 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a307
                            have lean_s1877 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1876
                            have lean_s1878 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1877 [xx5fcount]
                            have lean_s1879 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1875 lean_s1878
                            show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1879
                    ))))))))
                  have lean_s1870 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1869, 4
                  have lean_s1871 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1868 lean_s1870
                  let lean_s1872 := by timed And.intro lean_a309 lean_a307
                  have lean_s1873 : (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_a310 lean_s1872
                  have lean_s1874 : (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))))) :=
                    (scope (fun lean_a307 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
                      (scope (fun lean_a308 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                        (scope (fun lean_a309 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                          have lean_s1874 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a309
                          have lean_s1875 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a308
                          have lean_s1876 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1875
                          let lean_s1877 := by timed Eq.trans lean_s1874 lean_s1876
                          have lean_s1878 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a307
                          have lean_s1879 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed Eq.symm lean_s1878
                          have lean_s1880 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed Eq.trans lean_s1877 lean_s1879
                          show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) from lean_s1880
                    ))))))
                  have lean_s1875 : (Implies (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by liftOrNToImp lean_s1874, 3
                  have lean_s1876 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed modusPonens lean_s1873 lean_s1875
                  have lean_s1877 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) :=
                    (scope (fun lean_a307 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
                      have lean_s1877 : (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed eqResolve lean_a307 lean_r234
                      have lean_s1878 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1877
                      show (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) from lean_s1878
                    ))
                  have lean_s1878 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) := by liftOrNToImp lean_s1877, 1
                  have lean_s1879 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) := by timed modusPonens lean_s1876 lean_s1878
                  have lean_s1880 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) := by timed And.intro lean_s1865 lean_s1879
                  have lean_s1881 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                    (scope (fun lean_a308 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a309 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) =>
                        have lean_s1881 : (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_a309
                        have lean_s1882 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1881
                        have lean_s1883 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a308
                        have lean_s1884 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1883
                        have lean_s1885 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1884 [sx5fcount]
                        have lean_s1886 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1882 lean_s1885
                        show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1886
                    ))))
                  have lean_s1882 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1881, 2
                  have lean_s1883 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1880 lean_s1882
                  let lean_s1884 := by timed And.intro lean_s1871 lean_s1883
                  have lean_s1885 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a313 lean_s1884
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1885
  ))))))))))))))))
have lean_s1865 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1864, 8
have lean_s1866 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s1867 := by timed flipCongrArg lean_s1866 [Implies]
have lean_s1868 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (Or (Not (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) False))) :=
  (scope (fun lean_a309 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
    (scope (fun lean_a310 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
      (scope (fun lean_a311 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) =>
        have lean_s1868 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1)) := by timed Eq.symm lean_a311
        have lean_s1869 : (Or (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) False) :=
          (scope (fun lean_a309 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1)) =>
            have lean_s1869 : (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) := by timed trueElim lean_r232
            have lean_s1870 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) := by timed And.intro lean_s1869 lean_a309
            have lean_s1871 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 1), (Rat.ofInt 1)], 4
            have lean_s1872 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s1870 lean_s1871
            have lean_s1873 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1)) := by timed Eq.symm lean_a310
            have lean_s1874 : (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) := by timed And.intro lean_s1869 lean_s1873
            have lean_s1875 : (Implies (And (binrel% GT.gt (Rat.ofInt 1) (Int.ofNat 0)) (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)))) := by arithMulPos [(xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)), (Int.ofNat 1), (Rat.ofInt 1)], 4
            have lean_s1876 : (Eq (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1))) := by timed modusPonens lean_s1874 lean_s1875
            have lean_s1877 : (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) := by timed trueElim lean_r78
            have lean_s1878 : (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed And.intro lean_s1877 lean_a309
            have lean_s1879 : (Implies (And (binrel% LT.lt (Neg.neg (Rat.ofInt 1)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) := by arithMulNeg [(binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))), (Int.ofNat 3), (Neg.neg (Rat.ofInt 1))], 3
            have lean_s1880 : (binrel% LE.le (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))) := by timed modusPonens lean_s1878 lean_s1879
            have lean_s1881 : (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) := by sumBounds [lean_s1872, lean_s1876, lean_s1880]
            let lean_s1882 := by timed congrHAdd lean_r211 lean_r231
            have lean_s1883 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Rat.ofInt (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (Rat.ofInt (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_r8 lean_s1882
            have lean_s1884 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Rat.ofInt 0)) := by timed Eq.trans lean_s1883 lean_r230
            let lean_s1885 := by timed flipCongrArg lean_s1884 [LE.le]
            let lean_s1886 := by timed congrHAdd lean_r84 lean_r49
            have lean_s1887 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (binrel% HAdd.hAdd (Rat.ofInt 1) (binrel% HAdd.hAdd (Rat.ofInt 1) (Neg.neg (Rat.ofInt 3))))) := by timed congrHAdd lean_r84 lean_s1886
            have lean_s1888 : (Eq (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3)))) (Neg.neg (Rat.ofInt 1))) := by timed Eq.trans lean_s1887 lean_r229
            have lean_s1889 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) (binrel% LE.le (Rat.ofInt 0) (Neg.neg (Rat.ofInt 1)))) := by timed congr lean_s1885 lean_s1888
            have lean_s1890 : (Eq (binrel% LE.le (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Rat.ofInt 1) (Int.ofNat 1)) (binrel% HMul.hMul (Neg.neg (Rat.ofInt 1)) (Int.ofNat 3))))) False) := by timed Eq.trans lean_s1889 lean_r228
            show False from by timed eqResolve lean_s1881 lean_s1890
          ))
        have lean_s1870 : (Not (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Int.ofNat 1))) := by liftOrNToNeg lean_s1869
        show False from by timed contradiction lean_s1868 lean_s1870
  ))))))
have lean_s1869 : (Not (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToNeg lean_s1868
have lean_s1870 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1869
have lean_s1871 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s1867 lean_s1870
have lean_s1872 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s1871 lean_r227
have lean_s1873 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s1865 lean_s1872
have lean_s1874 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s1873 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s1875 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s1874, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s1876 := by R2 lean_s1875, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1877 := by R2 lean_s1876, lean_s1800, (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
have lean_s1878 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 2)) (Int.ofNat 37)), (Eq (format (Int.ofNat 3)) (Int.ofNat 120))] 1
have lean_s1879 : (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) := by permutateOr lean_s1878, [1, 0], (- 1)
let lean_s1880 := by R1 lean_s1877, lean_s1879, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s1881 : (Or (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) :=
  (scope (fun lean_a309 : (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) =>
    have lean_s1881 : (Or (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) :=
      (scope (fun lean_a310 : (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) =>
        have lean_s1881 : (Eq (Int.ofNat 115) (format (Int.ofNat 3))) := by timed Eq.symm lean_a310
        have lean_s1882 : (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) := by timed Eq.symm lean_s1881
        let lean_s1883 := by timed flipCongrArg lean_s1882 [Eq]
        have lean_s1884 : (Eq (Int.ofNat 120) (Int.ofNat 120)) := by timed rfl
        have lean_s1885 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Eq (Int.ofNat 115) (Int.ofNat 120))) := by timed congr lean_s1883 lean_s1884
        have lean_s1886 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 120))) (Not False)) := by timed flipCongrArg lean_r212 [Not]
        have lean_s1887 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 120))) True) := by timed Eq.trans lean_s1886 lean_r195
        have lean_s1888 : (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) True) := by timed Eq.trans lean_r200 lean_s1887
        have lean_s1889 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) := by timed trueElim lean_s1888
        have lean_s1890 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) False) := by timed Eq.trans lean_s1885 lean_s1889
        have lean_s1891 : (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) := by timed falseElim lean_s1890
        show (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) from lean_s1891
      ))
    have lean_s1882 : (Implies (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by liftOrNToImp lean_s1881, 1
    have lean_s1883 : (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) := by timed modusPonens lean_a309 lean_s1882
    show (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) from lean_s1883
  ))
have lean_s1882 : (Implies (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by liftOrNToImp lean_s1881, 1
have lean_s1883 : (Or (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by timed impliesElim lean_s1882
let lean_s1884 := by R1 lean_s1880, lean_s1883, (Eq (format (Int.ofNat 3)) (Int.ofNat 120)), [(- 1), (- 1)]
have lean_s1885 : (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by andElim lean_s1614, 16
have lean_s1886 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed impliesElim lean_s1885
have lean_s1887 : (Or (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) := by permutateOr lean_s1886, [1, 0], (- 1)
let lean_s1888 := by R2 lean_s1884, lean_s1887, (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))), [(- 1), (- 1)]
have lean_s1889 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 2)) (Int.ofNat 37)), (Eq (format (Int.ofNat 3)) (Int.ofNat 115))] 1
have lean_s1890 : (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) := by permutateOr lean_s1889, [1, 0], (- 1)
have lean_s1891 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))))))))) := by R2 lean_s1888, lean_s1890, (Eq (format (Int.ofNat 3)) (Int.ofNat 115)), [(- 1), (- 1)]
have lean_s1892 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))))))) := by factor lean_s1891, (- 1)
have lean_s1893 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))) := by permutateOr lean_s1892, [5, 0, 1, 2, 3, 4], (- 1)
have lean_s1894 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))))))) := by R1 lean_s1863, lean_s1893, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s1895 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))))))) := by factor lean_s1894, (- 1)
have lean_s1896 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))))) := by R1 lean_s1770, lean_s1895, (Eq fmt1 (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s1897 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))) := by factor lean_s1896, (- 1)
let lean_s1898 := by R2 lean_s1897, lean_s1627, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
have lean_s1899 : (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by andElim lean_s1614, 15
have lean_s1900 : (Or (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by timed impliesElim lean_s1899
have lean_s1901 : (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) := by timed rfl
let lean_s1902 := by timed flipCongrArg lean_s1901 [Eq]
have lean_s1903 : (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))))) (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) := by timed congr lean_s1902 lean_r217
have lean_s1904 : (Eq (Eq (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))))) True) := by timed Eq.trans lean_s1903 lean_r247
have lean_s1905 : (Eq (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) True) := by timed Eq.trans lean_r236 lean_s1904
have lean_s1906 : (Eq (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) := by timed trueElim lean_s1905
let lean_s1907 := by timed flipCongrArg lean_s1906 [Or]
have lean_s1908 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1909 : (Eq (Or (Not (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s1907 lean_s1908
have lean_s1910 : (Or (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by timed eqResolve lean_s1900 lean_s1909
have lean_s1911 : (Or (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) := by permutateOr lean_s1910, [1, 0], (- 1)
let lean_s1912 := by R2 lean_s1898, lean_s1911, (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
let lean_s1913 := by R1 lean_s1912, lean_s1629, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s1914 : (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 1)) (Int.ofNat 37)), (Eq (format (Int.ofNat 2)) (Int.ofNat 115))] 0
have lean_s1915 : (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) := by permutateOr lean_s1914, [1, 0], (- 1)
have lean_s1916 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 37))))) := by R1 lean_s1913, lean_s1915, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s1917 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) := by factor lean_s1916, (- 1)
let lean_s1918 := by R2 lean_s1917, lean_s1648, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), (- 1)]
let lean_s1919 := by R1 lean_s1918, lean_s1635, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s1920 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) :=
  (scope (fun lean_a310 : (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) =>
    have lean_s1920 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) :=
      (scope (fun lean_a311 : (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) =>
        have lean_s1920 : (Eq (Int.ofNat 120) (format (Int.ofNat 1))) := by timed Eq.symm lean_a311
        have lean_s1921 : (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) := by timed Eq.symm lean_s1920
        let lean_s1922 := by timed flipCongrArg lean_s1921 [Eq]
        have lean_s1923 : (Eq (Int.ofNat 37) (Int.ofNat 37)) := by timed rfl
        have lean_s1924 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (Int.ofNat 120) (Int.ofNat 37))) := by timed congr lean_s1922 lean_s1923
        have lean_s1925 : (Eq (Not (Eq (Int.ofNat 120) (Int.ofNat 37))) (Not False)) := by timed flipCongrArg lean_r38 [Not]
        have lean_s1926 : (Eq (Not (Eq (Int.ofNat 120) (Int.ofNat 37))) True) := by timed Eq.trans lean_s1925 lean_r195
        have lean_s1927 : (Eq (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) True) := by timed Eq.trans lean_r207 lean_s1926
        have lean_s1928 : (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) := by timed trueElim lean_s1927
        have lean_s1929 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) False) := by timed Eq.trans lean_s1924 lean_s1928
        have lean_s1930 : (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) := by timed falseElim lean_s1929
        show (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) from lean_s1930
      ))
    have lean_s1921 : (Implies (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) := by liftOrNToImp lean_s1920, 1
    have lean_s1922 : (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) := by timed modusPonens lean_a310 lean_s1921
    show (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) from lean_s1922
  ))
have lean_s1921 : (Implies (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) := by liftOrNToImp lean_s1920, 1
have lean_s1922 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37)))) := by timed impliesElim lean_s1921
have lean_s1923 : (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by permutateOr lean_s1922, [1, 0], (- 1)
let lean_s1924 := by R1 lean_s1919, lean_s1923, (Eq (format (Int.ofNat 1)) (Int.ofNat 37)), [(- 1), (- 1)]
have lean_s1925 : (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by R1 lean_s1924, lean_s1721, (Eq (format (Int.ofNat 1)) (Int.ofNat 115)), [(- 1), (- 1)]
have lean_s1926 : (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by factor lean_s1925, (- 1)
let lean_s1927 := by R2 lean_s1926, lean_s1728, (Eq (format (Int.ofNat 1)) (Int.ofNat 120)), [(- 1), (- 1)]
have lean_s1928 : (Or (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by R2 lean_s1927, lean_s1725, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), (- 1)]
have lean_s1929 : (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by factor lean_s1928, 1
have lean_s1930 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) := by R1 lean_s1673, lean_s1929, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))), [(- 1), 0]
let lean_s1931 := by R2 lean_s1660, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1932 := by R2 lean_s1931, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1933 : (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by andElim lean_s1614, 26
have lean_s1934 : (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by timed impliesElim lean_s1933
have lean_s1935 : (Or (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) := by permutateOr lean_s1934, [1, 0], (- 1)
let lean_s1936 := by R2 lean_s1932, lean_s1935, (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))), [(- 1), (- 1)]
let lean_s1937 := by R2 lean_s1936, lean_s1627, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s1938 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))) :=
  (scope (fun lean_a311 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a312 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a313 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a314 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
          (scope (fun lean_a315 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
            (scope (fun lean_a316 : (Eq fmt1 (Int.ofNat 3)) =>
              have lean_s1938 : (Eq (Eq fmt1 (Int.ofNat 3)) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r262
              have lean_s1939 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a316 lean_s1938
              let lean_s1940 := by timed And.intro lean_a314 lean_a312
              have lean_s1941 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_s1939 lean_s1940
              have lean_s1942 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a311 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a312 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a313 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                      have lean_s1942 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a313
                      have lean_s1943 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a312
                      have lean_s1944 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1943
                      let lean_s1945 := by timed Eq.trans lean_s1942 lean_s1944
                      have lean_s1946 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a311
                      have lean_s1947 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1946
                      have lean_s1948 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1947 [xx5fcount]
                      have lean_s1949 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1945 lean_s1948
                      show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1949
                ))))))
              have lean_s1943 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1942, 3
              have lean_s1944 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1941 lean_s1943
              let lean_s1945 := by timed And.intro lean_a313 lean_a311
              have lean_s1946 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_s1939 lean_s1945
              have lean_s1947 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a311 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a312 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a313 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                      have lean_s1947 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a313
                      have lean_s1948 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a312
                      have lean_s1949 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1948
                      let lean_s1950 := by timed Eq.trans lean_s1947 lean_s1949
                      have lean_s1951 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a311
                      have lean_s1952 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1951
                      have lean_s1953 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1952 [sx5fcount]
                      have lean_s1954 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1950 lean_s1953
                      show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1954
                ))))))
              have lean_s1948 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1947, 3
              have lean_s1949 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1946 lean_s1948
              let lean_s1950 := by timed And.intro lean_s1944 lean_s1949
              have lean_s1951 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a315 lean_s1950
              show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1951
  ))))))))))))
have lean_s1939 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1938, 6
have lean_s1940 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed rfl
let lean_s1941 := by timed flipCongrArg lean_s1940 [Implies]
have lean_s1942 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1753
have lean_s1943 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False)) := by timed congr lean_s1941 lean_s1942
have lean_s1944 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) := by timed Eq.trans lean_s1943 lean_r2
have lean_s1945 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed eqResolve lean_s1939 lean_s1944
have lean_s1946 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 3)))))))) := by timed flipNotAnd lean_s1945 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 3))]
have lean_s1947 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))) := by permutateOr lean_s1946, [4, 5, 0, 2, 1, 3], (- 1)
let lean_s1948 := by R1 lean_s1937, lean_s1947, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
let lean_s1949 := by R2 lean_s1948, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
have lean_s1950 : (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))))))) := by R2 lean_s1949, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
have lean_s1951 : (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))))) := by factor lean_s1950, (- 1)
let lean_s1952 := by R2 lean_s1951, lean_s1911, (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
have lean_s1953 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))) :=
  (scope (fun lean_a311 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a312 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a313 : (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) =>
        (scope (fun lean_a314 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
          (scope (fun lean_a315 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
            (scope (fun lean_a316 : (Eq fmt1 (Int.ofNat 3)) =>
              have lean_s1953 : (Eq (Eq fmt1 (Int.ofNat 3)) (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r262
              have lean_s1954 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a316 lean_s1953
              let lean_s1955 := by timed And.intro lean_a314 lean_a312
              have lean_s1956 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_s1954 lean_s1955
              have lean_s1957 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                (scope (fun lean_a312 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a313 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                    (scope (fun lean_a314 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                      have lean_s1957 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a314
                      have lean_s1958 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a313
                      have lean_s1959 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1958
                      let lean_s1960 := by timed Eq.trans lean_s1957 lean_s1959
                      have lean_s1961 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a312
                      have lean_s1962 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1961
                      have lean_s1963 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1962 [xx5fcount]
                      have lean_s1964 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1960 lean_s1963
                      show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1964
                ))))))
              have lean_s1958 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1957, 3
              have lean_s1959 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1956 lean_s1958
              have lean_s1960 : (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_a313 lean_a311
              have lean_s1961 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) :=
                (scope (fun lean_a312 : (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) =>
                  (scope (fun lean_a313 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                    have lean_s1961 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a313
                    have lean_s1962 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a312
                    have lean_s1963 : (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) := by timed Eq.symm lean_s1962
                    have lean_s1964 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) := by timed Eq.trans lean_s1961 lean_s1963
                    show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) from lean_s1964
                ))))
              have lean_s1962 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by liftOrNToImp lean_s1961, 2
              have lean_s1963 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) := by timed modusPonens lean_s1960 lean_s1962
              have lean_s1964 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) :=
                (scope (fun lean_a312 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) =>
                  have lean_s1964 : (Eq (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed eqResolve lean_a312 lean_r4
                  have lean_s1965 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1964
                  show (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) from lean_s1965
                ))
              have lean_s1965 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) := by liftOrNToImp lean_s1964, 1
              have lean_s1966 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) := by timed modusPonens lean_s1963 lean_s1965
              have lean_s1967 : (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) := by timed And.intro lean_s1954 lean_s1966
              have lean_s1968 : (Or (Not (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                (scope (fun lean_a313 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                  (scope (fun lean_a314 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) =>
                    have lean_s1968 : (Eq (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_a314
                    have lean_s1969 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1968
                    have lean_s1970 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 1)) := by timed Eq.symm lean_a313
                    have lean_s1971 : (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1970
                    have lean_s1972 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1971 [sx5fcount]
                    have lean_s1973 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1969 lean_s1972
                    show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1973
                ))))
              have lean_s1969 : (Implies (And (Eq (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1968, 2
              have lean_s1970 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1967 lean_s1969
              let lean_s1971 := by timed And.intro lean_s1959 lean_s1970
              have lean_s1972 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a315 lean_s1971
              show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s1972
  ))))))))))))
have lean_s1954 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1953, 6
have lean_s1955 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed rfl
let lean_s1956 := by timed flipCongrArg lean_s1955 [Implies]
have lean_s1957 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s5
have lean_s1958 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) False)) := by timed congr lean_s1956 lean_s1957
have lean_s1959 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3))))))))) := by timed Eq.trans lean_s1958 lean_r3
have lean_s1960 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 3)))))))) := by timed eqResolve lean_s1954 lean_s1959
have lean_s1961 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 3)))))))) := by timed flipNotAnd lean_s1960 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 3))]
have lean_s1962 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 3))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))) := by permutateOr lean_s1961, [4, 5, 0, 2, 1, 3], (- 1)
let lean_s1963 := by R2 lean_s1962, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1964 := by R2 lean_s1963, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1965 := by R2 lean_s1964, lean_s1627, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
have lean_s1966 : (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 1)) (Int.ofNat 37)), (Eq (format (Int.ofNat 2)) (Int.ofNat 120))] 1
have lean_s1967 : (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) := by permutateOr lean_s1966, [1, 0], (- 1)
let lean_s1968 := by R1 lean_s1965, lean_s1967, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s1969 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) :=
  (scope (fun lean_a314 : (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) =>
    have lean_s1969 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) :=
      (scope (fun lean_a315 : (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) =>
        have lean_s1969 : (Eq (Int.ofNat 115) (format (Int.ofNat 2))) := by timed Eq.symm lean_a315
        have lean_s1970 : (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) := by timed Eq.symm lean_s1969
        let lean_s1971 := by timed flipCongrArg lean_s1970 [Eq]
        have lean_s1972 : (Eq (Int.ofNat 120) (Int.ofNat 120)) := by timed rfl
        have lean_s1973 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Eq (Int.ofNat 115) (Int.ofNat 120))) := by timed congr lean_s1971 lean_s1972
        have lean_s1974 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 120))) (Not False)) := by timed flipCongrArg lean_r212 [Not]
        have lean_s1975 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 120))) True) := by timed Eq.trans lean_s1974 lean_r195
        have lean_s1976 : (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) True) := by timed Eq.trans lean_r200 lean_s1975
        have lean_s1977 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 120)) False) := by timed trueElim lean_s1976
        have lean_s1978 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) False) := by timed Eq.trans lean_s1973 lean_s1977
        have lean_s1979 : (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) := by timed falseElim lean_s1978
        show (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) from lean_s1979
      ))
    have lean_s1970 : (Implies (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by liftOrNToImp lean_s1969, 1
    have lean_s1971 : (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) := by timed modusPonens lean_a314 lean_s1970
    show (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) from lean_s1971
  ))
have lean_s1970 : (Implies (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by liftOrNToImp lean_s1969, 1
have lean_s1971 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by timed impliesElim lean_s1970
let lean_s1972 := by R1 lean_s1968, lean_s1971, (Eq (format (Int.ofNat 2)) (Int.ofNat 120)), [(- 1), (- 1)]
have lean_s1973 : (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by andElim lean_s1614, 14
have lean_s1974 : (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by timed impliesElim lean_s1973
have lean_s1975 : (Or (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) := by permutateOr lean_s1974, [1, 0], (- 1)
let lean_s1976 := by R2 lean_s1972, lean_s1975, (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))), [(- 1), (- 1)]
have lean_s1977 : (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 1)) (Int.ofNat 37)), (Eq (format (Int.ofNat 2)) (Int.ofNat 115))] 1
have lean_s1978 : (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) := by permutateOr lean_s1977, [1, 0], (- 1)
let lean_s1979 := by R2 lean_s1976, lean_s1978, (Eq (format (Int.ofNat 2)) (Int.ofNat 115)), [(- 1), (- 1)]
let lean_s1980 := by R2 lean_s1979, lean_s39, (Eq fmt1 (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s1981 := by R1 lean_s1980, lean_s1769, (binrel% GE.ge fmt1 (Int.ofNat 5)), [(- 1), 0]
let lean_s1982 := by R2 lean_s1981, lean_s1767, (binrel% GE.ge fmt1 (Int.ofNat 3)), [(- 1), 0]
have lean_s1983 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a315 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a316 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a317 : (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) =>
        (scope (fun lean_a318 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a319 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a320 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a321 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a322 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s1983 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s1984 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a322 lean_s1983
                  let lean_s1985 := by timed And.intro lean_a319 lean_a316
                  let lean_s1986 := by timed And.intro lean_a320 lean_s1985
                  have lean_s1987 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s1984 lean_s1986
                  have lean_s1988 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a315 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a316 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a317 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a318 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s1988 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a318
                            have lean_s1989 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a317
                            have lean_s1990 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1989
                            let lean_s1991 := by timed Eq.trans lean_s1988 lean_s1990
                            have lean_s1992 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a316
                            have lean_s1993 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s1992
                            let lean_s1994 := by timed Eq.trans lean_s1991 lean_s1993
                            have lean_s1995 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a315
                            have lean_s1996 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s1995
                            have lean_s1997 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s1996 [xx5fcount]
                            have lean_s1998 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s1994 lean_s1997
                            show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s1998
                    ))))))))
                  have lean_s1989 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s1988, 4
                  have lean_s1990 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1987 lean_s1989
                  have lean_s1991 : (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_a317 lean_a315
                  have lean_s1992 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) :=
                    (scope (fun lean_a315 : (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) =>
                      (scope (fun lean_a316 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                        have lean_s1992 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a316
                        have lean_s1993 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a315
                        have lean_s1994 : (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) := by timed Eq.symm lean_s1993
                        have lean_s1995 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) := by timed Eq.trans lean_s1992 lean_s1994
                        show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) from lean_s1995
                    ))))
                  have lean_s1993 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by liftOrNToImp lean_s1992, 2
                  have lean_s1994 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) := by timed modusPonens lean_s1991 lean_s1993
                  have lean_s1995 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) :=
                    (scope (fun lean_a315 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) =>
                      have lean_s1995 : (Eq (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed eqResolve lean_a315 lean_r4
                      have lean_s1996 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s1995
                      show (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) from lean_s1996
                    ))
                  have lean_s1996 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) := by liftOrNToImp lean_s1995, 1
                  have lean_s1997 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) := by timed modusPonens lean_s1994 lean_s1996
                  let lean_s1998 := by timed And.intro lean_a318 lean_s1997
                  have lean_s1999 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))))) := by timed And.intro lean_s1984 lean_s1998
                  have lean_s2000 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                    (scope (fun lean_a315 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a316 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a317 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) =>
                          have lean_s2000 : (Eq (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_a317
                          have lean_s2001 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2000
                          have lean_s2002 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a316
                          have lean_s2003 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2002
                          let lean_s2004 := by timed Eq.trans lean_s2001 lean_s2003
                          have lean_s2005 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a315
                          have lean_s2006 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2005
                          have lean_s2007 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2006 [sx5fcount]
                          have lean_s2008 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2004 lean_s2007
                          show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2008
                    ))))))
                  have lean_s2001 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 1))))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2000, 3
                  have lean_s2002 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s1999 lean_s2001
                  let lean_s2003 := by timed And.intro lean_s1990 lean_s2002
                  have lean_s2004 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a321 lean_s2003
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s2004
  ))))))))))))))))
have lean_s1984 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s1983, 8
have lean_s1985 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s1986 := by timed flipCongrArg lean_s1985 [Implies]
have lean_s1987 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s5
have lean_s1988 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s1986 lean_s1987
have lean_s1989 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s1988 lean_r265
have lean_s1990 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s1984 lean_s1989
have lean_s1991 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s1990 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s1992 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s1991, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s1993 := by R2 lean_s1992, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s1994 := by R2 lean_s1993, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s1995 := by R2 lean_s1994, lean_s1800, (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
let lean_s1996 := by R2 lean_s1995, lean_s1862, (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
let lean_s1997 := by R2 lean_s1996, lean_s1627, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
have lean_s1998 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 2)) (Int.ofNat 37)), (Eq (format (Int.ofNat 3)) (Int.ofNat 120))] 0
have lean_s1999 : (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) := by permutateOr lean_s1998, [1, 0], (- 1)
let lean_s2000 := by R1 lean_s1997, lean_s1999, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s2001 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) := by timed @cnfAndPos [(Eq (format (Int.ofNat 2)) (Int.ofNat 37)), (Eq (format (Int.ofNat 3)) (Int.ofNat 115))] 0
have lean_s2002 : (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) := by permutateOr lean_s2001, [1, 0], (- 1)
let lean_s2003 := by R1 lean_s2000, lean_s2002, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s2004 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))))) := by R1 lean_s2003, lean_s1967, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s2005 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))))) := by factor lean_s2004, (- 1)
have lean_s2006 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) :=
  (scope (fun lean_a315 : (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) =>
    have lean_s2006 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) :=
      (scope (fun lean_a315 : (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) =>
        have lean_s2006 : (Eq (Int.ofNat 115) (format (Int.ofNat 2))) := by timed Eq.symm lean_a315
        have lean_s2007 : (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) := by timed Eq.symm lean_s2006
        let lean_s2008 := by timed flipCongrArg lean_s2007 [Eq]
        have lean_s2009 : (Eq (Int.ofNat 37) (Int.ofNat 37)) := by timed rfl
        have lean_s2010 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (Int.ofNat 115) (Int.ofNat 37))) := by timed congr lean_s2008 lean_s2009
        have lean_s2011 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 37))) (Not False)) := by timed flipCongrArg lean_r233 [Not]
        have lean_s2012 : (Eq (Not (Eq (Int.ofNat 115) (Int.ofNat 37))) True) := by timed Eq.trans lean_s2011 lean_r195
        have lean_s2013 : (Eq (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) True) := by timed Eq.trans lean_r159 lean_s2012
        have lean_s2014 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 37)) False) := by timed trueElim lean_s2013
        have lean_s2015 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) False) := by timed Eq.trans lean_s2010 lean_s2014
        have lean_s2016 : (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) := by timed falseElim lean_s2015
        show (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) from lean_s2016
      ))
    have lean_s2007 : (Implies (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) := by liftOrNToImp lean_s2006, 1
    have lean_s2008 : (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) := by timed modusPonens lean_a315 lean_s2007
    show (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) from lean_s2008
  ))
have lean_s2007 : (Implies (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) := by liftOrNToImp lean_s2006, 1
have lean_s2008 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) := by timed impliesElim lean_s2007
have lean_s2009 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) := by permutateOr lean_s2008, [1, 0], (- 1)
let lean_s2010 := by R1 lean_s2005, lean_s2009, (Eq (format (Int.ofNat 2)) (Int.ofNat 37)), [(- 1), (- 1)]
let lean_s2011 := by R1 lean_s2010, lean_s1971, (Eq (format (Int.ofNat 2)) (Int.ofNat 120)), [(- 1), (- 1)]
have lean_s2012 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))))))) := by R2 lean_s2011, lean_s1975, (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))), [(- 1), (- 1)]
have lean_s2013 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))))) := by factor lean_s2012, (- 1)
have lean_s2014 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))))) := by R2 lean_s2013, lean_s1978, (Eq (format (Int.ofNat 2)) (Int.ofNat 115)), [(- 1), (- 1)]
have lean_s2015 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))))) := by factor lean_s2014, (- 1)
let lean_s2016 := by R2 lean_s2015, lean_s1911, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s2017 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a315 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a316 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a317 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a318 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a319 : (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) =>
            (scope (fun lean_a320 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a321 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a322 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s2017 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s2018 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a322 lean_s2017
                  have lean_s2019 : (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed And.intro lean_a319 lean_a316
                  have lean_s2020 : (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) :=
                    (scope (fun lean_a315 : (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) =>
                      (scope (fun lean_a316 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                        have lean_s2020 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a316
                        have lean_s2021 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a315
                        have lean_s2022 : (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) := by timed Eq.symm lean_s2021
                        have lean_s2023 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) := by timed Eq.trans lean_s2020 lean_s2022
                        show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) from lean_s2023
                    ))))
                  have lean_s2021 : (Implies (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by liftOrNToImp lean_s2020, 2
                  have lean_s2022 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) := by timed modusPonens lean_s2019 lean_s2021
                  have lean_s2023 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) :=
                    (scope (fun lean_a315 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) =>
                      have lean_s2023 : (Eq (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed eqResolve lean_a315 lean_r10
                      have lean_s2024 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2023
                      show (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) from lean_s2024
                    ))
                  have lean_s2024 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) := by liftOrNToImp lean_s2023, 1
                  have lean_s2025 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) := by timed modusPonens lean_s2022 lean_s2024
                  let lean_s2026 := by timed And.intro lean_a320 lean_s2025
                  have lean_s2027 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))))) := by timed And.intro lean_s2018 lean_s2026
                  have lean_s2028 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) :=
                    (scope (fun lean_a315 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a316 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a317 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) =>
                          have lean_s2028 : (Eq (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) := by timed Eq.symm lean_a317
                          have lean_s2029 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2028
                          have lean_s2030 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a316
                          have lean_s2031 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2030
                          let lean_s2032 := by timed Eq.trans lean_s2029 lean_s2031
                          have lean_s2033 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a315
                          have lean_s2034 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2033
                          have lean_s2035 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2034 [xx5fcount]
                          have lean_s2036 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2032 lean_s2035
                          show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2036
                    ))))))
                  have lean_s2029 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 1))))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2028, 3
                  have lean_s2030 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2027 lean_s2029
                  let lean_s2031 := by timed And.intro lean_a317 lean_a315
                  let lean_s2032 := by timed And.intro lean_a318 lean_s2031
                  have lean_s2033 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s2018 lean_s2032
                  have lean_s2034 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a315 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a316 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a317 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a318 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s2034 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a318
                            have lean_s2035 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a317
                            have lean_s2036 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2035
                            let lean_s2037 := by timed Eq.trans lean_s2034 lean_s2036
                            have lean_s2038 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a316
                            have lean_s2039 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2038
                            let lean_s2040 := by timed Eq.trans lean_s2037 lean_s2039
                            have lean_s2041 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a315
                            have lean_s2042 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2041
                            have lean_s2043 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2042 [sx5fcount]
                            have lean_s2044 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2040 lean_s2043
                            show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2044
                    ))))))))
                  have lean_s2035 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2034, 4
                  have lean_s2036 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2033 lean_s2035
                  let lean_s2037 := by timed And.intro lean_s2030 lean_s2036
                  have lean_s2038 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a321 lean_s2037
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s2038
  ))))))))))))))))
have lean_s2018 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s2017, 8
have lean_s2019 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s2020 := by timed flipCongrArg lean_s2019 [Implies]
have lean_s2021 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1654
have lean_s2022 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s2020 lean_s2021
have lean_s2023 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s2022 lean_r263
have lean_s2024 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s2018 lean_s2023
have lean_s2025 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s2024 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s2026 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s2025, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s2027 := by R2 lean_s2026, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2028 := by R2 lean_s2027, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s2029 := by R2 lean_s2028, lean_s1800, (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
let lean_s2030 := by R2 lean_s2029, lean_s1862, (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
let lean_s2031 := by R1 lean_s2030, lean_s1999, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s2032 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 37))))))) := by R1 lean_s2031, lean_s2002, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s2033 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))))) := by factor lean_s2032, (- 1)
have lean_s2034 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) :=
  (scope (fun lean_a315 : (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) =>
    have lean_s2034 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) :=
      (scope (fun lean_a316 : (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) =>
        have lean_s2034 : (Eq (Int.ofNat 120) (format (Int.ofNat 2))) := by timed Eq.symm lean_a316
        have lean_s2035 : (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) := by timed Eq.symm lean_s2034
        let lean_s2036 := by timed flipCongrArg lean_s2035 [Eq]
        have lean_s2037 : (Eq (Int.ofNat 37) (Int.ofNat 37)) := by timed rfl
        have lean_s2038 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (Int.ofNat 120) (Int.ofNat 37))) := by timed congr lean_s2036 lean_s2037
        have lean_s2039 : (Eq (Not (Eq (Int.ofNat 120) (Int.ofNat 37))) (Not False)) := by timed flipCongrArg lean_r38 [Not]
        have lean_s2040 : (Eq (Not (Eq (Int.ofNat 120) (Int.ofNat 37))) True) := by timed Eq.trans lean_s2039 lean_r195
        have lean_s2041 : (Eq (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) True) := by timed Eq.trans lean_r207 lean_s2040
        have lean_s2042 : (Eq (Eq (Int.ofNat 120) (Int.ofNat 37)) False) := by timed trueElim lean_s2041
        have lean_s2043 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) False) := by timed Eq.trans lean_s2038 lean_s2042
        have lean_s2044 : (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) := by timed falseElim lean_s2043
        show (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) from lean_s2044
      ))
    have lean_s2035 : (Implies (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) := by liftOrNToImp lean_s2034, 1
    have lean_s2036 : (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) := by timed modusPonens lean_a315 lean_s2035
    show (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) from lean_s2036
  ))
have lean_s2035 : (Implies (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) := by liftOrNToImp lean_s2034, 1
have lean_s2036 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37)))) := by timed impliesElim lean_s2035
have lean_s2037 : (Or (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) (Not (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by permutateOr lean_s2036, [1, 0], (- 1)
let lean_s2038 := by R1 lean_s2033, lean_s2037, (Eq (format (Int.ofNat 2)) (Int.ofNat 37)), [(- 1), (- 1)]
let lean_s2039 := by R2 lean_s2038, lean_s1935, (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))), [(- 1), (- 1)]
have lean_s2040 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))))))) := by R2 lean_s2039, lean_s1967, (Eq (format (Int.ofNat 2)) (Int.ofNat 120)), [(- 1), (- 1)]
have lean_s2041 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))))) := by factor lean_s2040, (- 1)
let lean_s2042 := by R2 lean_s2041, lean_s1627, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s2043 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a316 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a317 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a318 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a319 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
          (scope (fun lean_a320 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a321 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
              (scope (fun lean_a322 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a323 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s2043 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s2044 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a323 lean_s2043
                  let lean_s2045 := by timed And.intro lean_a320 lean_a317
                  let lean_s2046 := by timed And.intro lean_a321 lean_s2045
                  have lean_s2047 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s2044 lean_s2046
                  have lean_s2048 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a316 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a317 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a318 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a319 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s2048 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a319
                            have lean_s2049 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a318
                            have lean_s2050 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2049
                            let lean_s2051 := by timed Eq.trans lean_s2048 lean_s2050
                            have lean_s2052 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a317
                            have lean_s2053 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2052
                            let lean_s2054 := by timed Eq.trans lean_s2051 lean_s2053
                            have lean_s2055 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a316
                            have lean_s2056 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2055
                            have lean_s2057 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2056 [xx5fcount]
                            have lean_s2058 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2054 lean_s2057
                            show (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2058
                    ))))))))
                  have lean_s2049 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2048, 4
                  have lean_s2050 : (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2047 lean_s2049
                  let lean_s2051 := by timed And.intro lean_a318 lean_a316
                  have lean_s2052 : (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_a319 lean_s2051
                  have lean_s2053 : (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))))) :=
                    (scope (fun lean_a316 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
                      (scope (fun lean_a317 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                        (scope (fun lean_a318 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                          have lean_s2053 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a318
                          have lean_s2054 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a317
                          have lean_s2055 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2054
                          let lean_s2056 := by timed Eq.trans lean_s2053 lean_s2055
                          have lean_s2057 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a316
                          have lean_s2058 : (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed Eq.symm lean_s2057
                          have lean_s2059 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed Eq.trans lean_s2056 lean_s2058
                          show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) from lean_s2059
                    ))))))
                  have lean_s2054 : (Implies (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by liftOrNToImp lean_s2053, 3
                  have lean_s2055 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed modusPonens lean_s2052 lean_s2054
                  have lean_s2056 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) :=
                    (scope (fun lean_a316 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) =>
                      have lean_s2056 : (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed eqResolve lean_a316 lean_r234
                      have lean_s2057 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2056
                      show (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) from lean_s2057
                    ))
                  have lean_s2057 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) := by liftOrNToImp lean_s2056, 1
                  have lean_s2058 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) := by timed modusPonens lean_s2055 lean_s2057
                  have lean_s2059 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) := by timed And.intro lean_s2044 lean_s2058
                  have lean_s2060 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                    (scope (fun lean_a316 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a317 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) =>
                        have lean_s2060 : (Eq (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_a317
                        have lean_s2061 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2060
                        have lean_s2062 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a316
                        have lean_s2063 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2062
                        have lean_s2064 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2063 [sx5fcount]
                        have lean_s2065 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2061 lean_s2064
                        show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2065
                    ))))
                  have lean_s2061 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2060, 2
                  have lean_s2062 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2059 lean_s2061
                  let lean_s2063 := by timed And.intro lean_s2050 lean_s2062
                  have lean_s2064 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a322 lean_s2063
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s2064
  ))))))))))))))))
have lean_s2044 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s2043, 8
have lean_s2045 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s2046 := by timed flipCongrArg lean_s2045 [Implies]
have lean_s2047 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s5
have lean_s2048 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s2046 lean_s2047
have lean_s2049 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 0) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s2048 lean_r110
have lean_s2050 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s2044 lean_s2049
have lean_s2051 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s2050 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s2052 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))))))) := by permutateOr lean_s2051, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s2053 := by R2 lean_s2052, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2054 := by R2 lean_s2053, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s2055 := by R2 lean_s2054, lean_s1887, (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))), [(- 1), (- 1)]
let lean_s2056 := by R2 lean_s2055, lean_s1862, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s2057 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))))))))) := by R1 lean_s2056, lean_s1847, (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
have lean_s2058 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))))) := by factor lean_s2057, (- 1)
let lean_s2059 := by R2 lean_s2058, lean_s1800, (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
have lean_s2060 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a316 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
    (scope (fun lean_a317 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a318 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a319 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a320 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a321 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
              (scope (fun lean_a322 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a323 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s2060 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s2061 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a323 lean_s2060
                  let lean_s2062 := by timed And.intro lean_a320 lean_a317
                  have lean_s2063 : (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_a321 lean_s2062
                  have lean_s2064 : (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))) :=
                    (scope (fun lean_a316 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
                      (scope (fun lean_a317 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                        (scope (fun lean_a318 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                          have lean_s2064 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a318
                          have lean_s2065 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a317
                          have lean_s2066 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2065
                          let lean_s2067 := by timed Eq.trans lean_s2064 lean_s2066
                          have lean_s2068 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a316
                          have lean_s2069 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed Eq.symm lean_s2068
                          have lean_s2070 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed Eq.trans lean_s2067 lean_s2069
                          show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) from lean_s2070
                    ))))))
                  have lean_s2065 : (Implies (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by liftOrNToImp lean_s2064, 3
                  have lean_s2066 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed modusPonens lean_s2063 lean_s2065
                  have lean_s2067 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) :=
                    (scope (fun lean_a316 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
                      have lean_s2067 : (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed eqResolve lean_a316 lean_r115
                      have lean_s2068 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2067
                      show (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) from lean_s2068
                    ))
                  have lean_s2068 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) := by liftOrNToImp lean_s2067, 1
                  have lean_s2069 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) := by timed modusPonens lean_s2066 lean_s2068
                  have lean_s2070 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) := by timed And.intro lean_s2061 lean_s2069
                  have lean_s2071 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                    (scope (fun lean_a317 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a318 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) =>
                        have lean_s2071 : (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_a318
                        have lean_s2072 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2071
                        have lean_s2073 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a317
                        have lean_s2074 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2073
                        have lean_s2075 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2074 [xx5fcount]
                        have lean_s2076 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2072 lean_s2075
                        show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2076
                    ))))
                  have lean_s2072 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2071, 2
                  have lean_s2073 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2070 lean_s2072
                  let lean_s2074 := by timed And.intro lean_a318 lean_a316
                  let lean_s2075 := by timed And.intro lean_a319 lean_s2074
                  have lean_s2076 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by timed And.intro lean_s2061 lean_s2075
                  have lean_s2077 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a318 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a319 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a320 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a321 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                            have lean_s2077 : (Eq (Int.ofNat 0) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a321
                            have lean_s2078 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a320
                            have lean_s2079 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2078
                            let lean_s2080 := by timed Eq.trans lean_s2077 lean_s2079
                            have lean_s2081 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a319
                            have lean_s2082 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2081
                            let lean_s2083 := by timed Eq.trans lean_s2080 lean_s2082
                            have lean_s2084 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a318
                            have lean_s2085 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2084
                            have lean_s2086 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2085 [sx5fcount]
                            have lean_s2087 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2083 lean_s2086
                            show (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2087
                    ))))))))
                  have lean_s2078 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2077, 4
                  have lean_s2079 : (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2076 lean_s2078
                  let lean_s2080 := by timed And.intro lean_s2073 lean_s2079
                  have lean_s2081 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a322 lean_s2080
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s2081
  ))))))))))))))))
have lean_s2061 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s2060, 8
have lean_s2062 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s2063 := by timed flipCongrArg lean_s2062 [Implies]
have lean_s2064 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1654
have lean_s2065 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s2063 lean_s2064
have lean_s2066 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 0) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s2065 lean_r105
have lean_s2067 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s2061 lean_s2066
have lean_s2068 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s2067 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s2069 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))))))))) := by permutateOr lean_s2068, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s2070 := by R2 lean_s2069, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2071 := by R2 lean_s2070, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s2072 := by R2 lean_s2071, lean_s1862, (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
let lean_s2073 := by R1 lean_s2072, lean_s1890, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))), [(- 1), (- 1)]
let lean_s2074 := by R1 lean_s2073, lean_s1883, (Eq (format (Int.ofNat 3)) (Int.ofNat 115)), [(- 1), (- 1)]
let lean_s2075 := by R2 lean_s2074, lean_s1786, (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))), [(- 1), (- 1)]
have lean_s2076 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))))))) := by R2 lean_s2075, lean_s1879, (Eq (format (Int.ofNat 3)) (Int.ofNat 120)), [(- 1), (- 1)]
have lean_s2077 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))))))) := by factor lean_s2076, (- 1)
have lean_s2078 : (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))))))) := by permutateOr lean_s2077, [4, 0, 1, 2, 3], (- 1)
have lean_s2079 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))))))) := by R1 lean_s2059, lean_s2078, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))), [(- 1), (- 1)]
have lean_s2080 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))))) := by factor lean_s2079, (- 1)
have lean_s2081 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))))))) := by R1 lean_s2042, lean_s2080, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
have lean_s2082 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))))) := by factor lean_s2081, (- 1)
have lean_s2083 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))))) := by R1 lean_s2016, lean_s2082, (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), [(- 1), (- 1)]
have lean_s2084 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by factor lean_s2083, (- 1)
have lean_s2085 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))))) := by R1 lean_s1982, lean_s2084, (Eq fmt1 (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2086 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) := by factor lean_s2085, 3
have lean_s2087 : (Or (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by permutateOr lean_s2086, [1, 0], (- 1)
let lean_s2088 := by R1 lean_s1952, lean_s2087, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))), [(- 1), (- 1)]
let lean_s2089 := by R2 lean_s2088, lean_s39, (Eq fmt1 (Int.ofNat 3)), [(- 1), (- 1)]
let lean_s2090 := by R2 lean_s2089, lean_s1767, (binrel% GE.ge fmt1 (Int.ofNat 3)), [(- 1), 0]
let lean_s2091 := by R1 lean_s2090, lean_s1769, (binrel% GE.ge fmt1 (Int.ofNat 5)), [(- 1), 0]
have lean_s2092 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))))) := by R1 lean_s2091, lean_s2084, (Eq fmt1 (Int.ofNat 4)), [(- 1), (- 1)]
have lean_s2093 : (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by factor lean_s2092, 2
have lean_s2094 : (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) := by R1 lean_s1648, lean_s2093, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
have lean_s2095 : (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) := by R2 lean_s1635, lean_s2094, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))), [(- 1), 0]
have lean_s2096 : (Not (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) := by R2 lean_s1633, lean_s2095, (Eq (format (Int.ofNat 1)) (Int.ofNat 115)), [(- 1), 0]
have lean_s2097 : (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by R1 lean_s1629, lean_s2096, (Eq (format (Int.ofNat 1)) (Int.ofNat 37)), [(- 1), 0]
have lean_s2098 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by R1 lean_s1627, lean_s2097, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))), [(- 1), 0]
let lean_s2099 := by R2 lean_s51, lean_s2098, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), 0]
have lean_s2100 : (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) := by R1 lean_s1915, lean_s2096, (Eq (format (Int.ofNat 1)) (Int.ofNat 37)), [(- 1), 0]
have lean_s2101 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by R1 lean_s1911, lean_s2100, (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))), [(- 1), 0]
let lean_s2102 := by R2 lean_s2099, lean_s2101, (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), [(- 1), 0]
have lean_s2103 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) := by R2 lean_s1745, lean_s2094, (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))), [(- 1), 0]
let lean_s2104 := by R2 lean_s2102, lean_s2103, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2105 := by R2 lean_s2104, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2106 := by R2 lean_s2105, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s2107 := by R2 lean_s2106, lean_s1800, (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
let lean_s2108 := by R1 lean_s2107, lean_s1879, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))), [(- 1), (- 1)]
let lean_s2109 := by R1 lean_s2108, lean_s1883, (Eq (format (Int.ofNat 3)) (Int.ofNat 120)), [(- 1), (- 1)]
let lean_s2110 := by R2 lean_s2109, lean_s1887, (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))), [(- 1), (- 1)]
have lean_s2111 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))))) := by R2 lean_s2110, lean_s1890, (Eq (format (Int.ofNat 3)) (Int.ofNat 115)), [(- 1), (- 1)]
have lean_s2112 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) := by factor lean_s2111, (- 1)
let lean_s2113 := by R2 lean_s2112, lean_s1862, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))), [(- 1), (- 1)]
have lean_s2114 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) :=
  (scope (fun lean_a318 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
    (scope (fun lean_a319 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
      (scope (fun lean_a320 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
        (scope (fun lean_a321 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
          (scope (fun lean_a322 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
            (scope (fun lean_a323 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
              (scope (fun lean_a324 : (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) =>
                (scope (fun lean_a325 : (Eq fmt1 (Int.ofNat 4)) =>
                  have lean_s2114 : (Eq (Eq fmt1 (Int.ofNat 4)) (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.symm lean_r140
                  have lean_s2115 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed eqResolve lean_a325 lean_s2114
                  let lean_s2116 := by timed And.intro lean_a322 lean_a319
                  have lean_s2117 : (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed And.intro lean_a323 lean_s2116
                  have lean_s2118 : (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))))) :=
                    (scope (fun lean_a318 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
                      (scope (fun lean_a319 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) =>
                        (scope (fun lean_a320 : (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) =>
                          have lean_s2118 : (Eq (Int.ofNat 0) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a320
                          have lean_s2119 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a319
                          have lean_s2120 : (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2119
                          let lean_s2121 := by timed Eq.trans lean_s2118 lean_s2120
                          have lean_s2122 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (xx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a318
                          have lean_s2123 : (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed Eq.symm lean_s2122
                          have lean_s2124 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed Eq.trans lean_s2121 lean_s2123
                          show (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) from lean_s2124
                    ))))))
                  have lean_s2119 : (Implies (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by liftOrNToImp lean_s2118, 3
                  have lean_s2120 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed modusPonens lean_s2117 lean_s2119
                  have lean_s2121 : (Or (Not (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) :=
                    (scope (fun lean_a318 : (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) =>
                      have lean_s2121 : (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed eqResolve lean_a318 lean_r115
                      have lean_s2122 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2121
                      show (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) from lean_s2122
                    ))
                  have lean_s2122 : (Implies (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) := by liftOrNToImp lean_s2121, 1
                  have lean_s2123 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) := by timed modusPonens lean_s2120 lean_s2122
                  have lean_s2124 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) := by timed And.intro lean_s2115 lean_s2123
                  have lean_s2125 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) :=
                    (scope (fun lean_a318 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a319 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) =>
                        have lean_s2125 : (Eq (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) := by timed Eq.symm lean_a319
                        have lean_s2126 : (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2125
                        have lean_s2127 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a318
                        have lean_s2128 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2127
                        have lean_s2129 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2128 [xx5fcount]
                        have lean_s2130 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2126 lean_s2129
                        show (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2130
                    ))))
                  have lean_s2126 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2125, 2
                  have lean_s2127 : (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2124 lean_s2126
                  let lean_s2128 := by timed And.intro lean_a320 lean_a318
                  let lean_s2129 := by timed And.intro lean_a321 lean_s2128
                  have lean_s2130 : (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) := by timed And.intro lean_s2115 lean_s2129
                  have lean_s2131 : (Or (Not (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) :=
                    (scope (fun lean_a318 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) =>
                      (scope (fun lean_a319 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) =>
                        (scope (fun lean_a320 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) =>
                          (scope (fun lean_a321 : (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) =>
                            have lean_s2131 : (Eq (Int.ofNat 1) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a321
                            have lean_s2132 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) := by timed Eq.symm lean_a320
                            have lean_s2133 : (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_s2132
                            let lean_s2134 := by timed Eq.trans lean_s2131 lean_s2133
                            have lean_s2135 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) := by timed Eq.symm lean_a319
                            have lean_s2136 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) := by timed Eq.symm lean_s2135
                            let lean_s2137 := by timed Eq.trans lean_s2134 lean_s2136
                            have lean_s2138 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (Int.ofNat 2)) := by timed Eq.symm lean_a318
                            have lean_s2139 : (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.symm lean_s2138
                            have lean_s2140 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s2139 [sx5fcount]
                            have lean_s2141 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s2137 lean_s2140
                            show (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) from lean_s2141
                    ))))))))
                  have lean_s2132 : (Implies (And (Eq (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by liftOrNToImp lean_s2131, 4
                  have lean_s2133 : (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed modusPonens lean_s2130 lean_s2132
                  let lean_s2134 := by timed And.intro lean_s2127 lean_s2133
                  have lean_s2135 : (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) := by timed And.intro lean_a324 lean_s2134
                  show (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) from lean_s2135
  ))))))))))))))))
have lean_s2115 : (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by liftOrNToImp lean_s2114, 8
have lean_s2116 : (Eq (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed rfl
let lean_s2117 := by timed flipCongrArg lean_s2116 [Implies]
have lean_s2118 : (Eq (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) False) := by timed falseIntro lean_s1869
have lean_s2119 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) False)) := by timed congr lean_s2117 lean_s2118
have lean_s2120 : (Eq (Implies (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Eq (Int.ofNat 1) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Eq (Int.ofNat 1) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))))))) := by timed Eq.trans lean_s2119 lean_r126
have lean_s2121 : (Not (And (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (And (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (And (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (And (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (And (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (And (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))))))) := by timed eqResolve lean_s2115 lean_s2120
have lean_s2122 : (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Or (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Not (Eq fmt1 (Int.ofNat 4)))))))))) := by timed flipNotAnd lean_s2121 [(Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))), (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), (Eq fmt1 (Int.ofNat 4))]
have lean_s2123 : (Or (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Or (Not (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Or (Not (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Not (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))))))))) := by permutateOr lean_s2122, [6, 7, 0, 2, 3, 1, 4, 5], (- 1)
let lean_s2124 := by R2 lean_s2123, lean_s2098, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), 0]
let lean_s2125 := by R2 lean_s2124, lean_s2101, (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), [(- 1), 0]
let lean_s2126 := by R2 lean_s2125, lean_s2103, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2127 := by R2 lean_s2126, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2128 := by R2 lean_s2127, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
let lean_s2129 := by R2 lean_s2128, lean_s1786, (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))), [(- 1), (- 1)]
let lean_s2130 := by R2 lean_s2129, lean_s1800, (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))), [(- 1), (- 1)]
let lean_s2131 := by R1 lean_s2130, lean_s1811, (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
let lean_s2132 := by R2 lean_s2131, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
let lean_s2133 := by R2 lean_s2132, lean_s2103, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2134 := by R2 lean_s2133, lean_s2098, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), 0]
let lean_s2135 := by R2 lean_s2134, lean_s2101, (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), [(- 1), 0]
have lean_s2136 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Or (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Or (Not (Eq fmt1 (Int.ofNat 4))) (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))))) := by R2 lean_s2135, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [(- 1), 0]
have lean_s2137 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Not (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by factor lean_s2136, (- 1)
have lean_s2138 : (Or (Not (Eq fmt1 (Int.ofNat 4))) (Not (Eq fmt1 (Int.ofNat 4)))) := by R1 lean_s2113, lean_s2137, (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))), [(- 1), (- 1)]
have lean_s2139 : (Not (Eq fmt1 (Int.ofNat 4))) := by factor lean_s2138, 1
let lean_s2140 := by R1 lean_s39, lean_s2139, (Eq fmt1 (Int.ofNat 4)), [(- 1), 0]
let lean_s2141 := by R2 lean_s2140, lean_s1767, (binrel% GE.ge fmt1 (Int.ofNat 3)), [(- 1), 0]
have lean_s2142 : (Eq fmt1 (Int.ofNat 3)) := by R1 lean_s2141, lean_s1769, (binrel% GE.ge fmt1 (Int.ofNat 5)), [(- 1), 0]
let lean_s2143 := by R2 lean_s11, lean_s2142, (Eq fmt1 (Int.ofNat 3)), [(- 1), 0]
let lean_s2144 := by R2 lean_s2143, lean_s2098, (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))), [(- 1), 0]
let lean_s2145 := by R2 lean_s2144, lean_s2101, (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))), [(- 1), 0]
let lean_s2146 := by R2 lean_s2145, lean_s2103, (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)), [(- 1), 0]
let lean_s2147 := by R2 lean_s2146, lean_s1930, (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)), [(- 1), 0]
exact (show False from by R2 lean_s2147, lean_s1684, (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)), [0, 0])


