-- import Smt.Reconstruction.Certifying
open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {distance : Int}
variable {fmtx5flength : Int}
variable {fmt0 : Int}
variable {xx5fcount : (Int -> Int)}
variable {x : Int}
variable {percent : Int}
variable {arg0 : Int}
variable {xx5fcount : (Int -> Int)}
variable {fmt1 : Int}
variable {s : Int}
variable {adrx5fhi : Int}
variable {adrx5fmedlo : Int}
variable {adrx5fmedhi : Int}
variable {x : Int}
variable {format : (Int -> Int)}
variable {fmt1 : Int}
variable {arg1 : Int}
variable {s : Int}
variable {adrx5fhi : Int}
variable {fmtx5flength : Int}
variable {distance : Int}
variable {arg0 : Int}
variable {adrx5fmedlo : Int}
variable {arg1 : Int}
variable {sx5fcount : (Int -> Int)}
variable {adrx5fmedhi : Int}
variable {adrx5flo : Int}
variable {adrx5flo : Int}
variable {sx5fcount : (Int -> Int)}
variable {percent : Int}
variable {format : (Int -> Int)}
variable {fmt0 : Int}

theorem th0 : (Eq (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))))) → (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) → (Eq (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Not (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))))) → (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) → (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) → (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) → (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))))) → (Eq (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) → (Eq (binrel% HAdd.hAdd fmt1 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) → (Eq (Eq fmt1 fmt0) (Eq fmt0 fmt1)) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) → (Eq (binrel% HSub.hSub fmt0 distance) (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 0)) percent) (Or (Eq (format (Int.ofNat 0)) s) (Or (Eq (format (Int.ofNat 0)) x) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (format (Int.ofNat 4)) x) (Eq x (format (Int.ofNat 4)))) → (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) → (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 2))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 2))) → (Eq (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 10))) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)) (And (Not (Eq (format fmt1) percent)) (And (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (And (Eq (format arg1) adrx5flo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi))))))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (binrel% HAdd.hAdd (Int.ofNat 15) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (Eq (Int.ofNat 10) (Int.ofNat 10)) True) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Int.ofNat 2)) (Not (binrel% GE.ge fmt1 (Int.ofNat 4)))) → (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Neg.neg (Int.ofNat 10))) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt1 (Int.ofNat 3))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) → (Eq (Eq (format (Int.ofNat 5)) s) (Eq s (format (Int.ofNat 5)))) → (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) False) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) → (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) → (Eq (Eq (Neg.neg (Int.ofNat 10)) (Neg.neg (Int.ofNat 10))) True) → (Eq (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))))) → (Eq (Or False False) False) → (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Eq fmt1 (Int.ofNat 1))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 37))) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) adrx5fmedlo) (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)))) → (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4))) → (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) → (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt1 (Int.ofNat 4))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) → (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5))) → (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) → (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (And (binrel% GE.ge arg1 fmt0) (And (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (And (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (And (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (And (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (And (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (And (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))))))))))))))))))))))))))))))))))))))))))))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 120))) → (Eq (Eq (Int.ofNat 37) (Int.ofNat 37)) True) → (Eq (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) → (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) → (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) → (Eq (Eq (Int.ofNat 37) (format fmt1)) (Eq (format fmt1) (Int.ofNat 37))) → (Eq (Implies False (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6)))))))) True) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) → (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) → (Eq (Not True) False) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (binrel% HAdd.hAdd (Int.ofNat 5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1))) → (Eq (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))))))) → (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 37))) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) → (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) → (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 15) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) adrx5fhi) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))) → (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 37))) → (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) → (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) → (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) → (Eq (binrel% HAdd.hAdd fmt1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) → (Eq (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) → (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)))))) → (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)) (Neg.neg (Int.ofNat 10))) → (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) → (Eq (Eq (Int.ofNat 120) (Int.ofNat 120)) True) → (Eq (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0) (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) (Int.ofNat 0)) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) → (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 115))) → (Eq (Eq (Int.ofNat 6) (Int.ofNat 6)) True) → (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) → (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) → (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 0)) fmt0) → (Eq (Eq (Int.ofNat 115) (Int.ofNat 115)) True) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) → (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) → (Eq (Eq (format arg1) adrx5flo) (Eq adrx5flo (format arg1))) → (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) → (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) adrx5fmedhi) (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)))) → (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) → (Eq (Eq (format (Int.ofNat 2)) percent) (Eq percent (format (Int.ofNat 2)))) → (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) → (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) s) (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) → (Eq (Eq (format fmt1) percent) (Eq percent (format fmt1))) → (Eq (Eq (Int.ofNat 0) fmt1) (Eq fmt1 (Int.ofNat 0))) → (Eq (Eq (format (Int.ofNat 4)) s) (Eq s (format (Int.ofNat 4)))) → (Eq (Eq (format (Int.ofNat 4)) percent) (Eq percent (format (Int.ofNat 4)))) → (Eq (Eq (format (Int.ofNat 5)) x) (Eq x (format (Int.ofNat 5)))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 2)) percent) (Or (Eq (format (Int.ofNat 2)) s) (Or (Eq (format (Int.ofNat 2)) x) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) → (Eq (Eq (format (Int.ofNat 3)) percent) (Eq percent (format (Int.ofNat 3)))) → (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) → (Eq (binrel% GE.ge arg1 fmt0) (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0))) → (Eq (Eq (format (Int.ofNat 3)) x) (Eq x (format (Int.ofNat 3)))) → (Eq (Eq (format (Int.ofNat 2)) x) (Eq x (format (Int.ofNat 2)))) → (Eq (Eq (format (Int.ofNat 1)) percent) (Eq percent (format (Int.ofNat 1)))) → (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) False) → (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) → (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) → (Eq (Eq (format (Int.ofNat 1)) x) (Eq x (format (Int.ofNat 1)))) → (Eq (Eq (format (Int.ofNat 0)) percent) (Eq percent (format (Int.ofNat 0)))) → (Eq (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) → (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) → (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) → (Eq (Eq arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) → (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) → (Eq (Eq (format (Int.ofNat 3)) s) (Eq s (format (Int.ofNat 3)))) → (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) → (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) → (Eq (Eq (format (Int.ofNat 2)) s) (Eq s (format (Int.ofNat 2)))) → (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) → (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) → (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (Neg.neg (Int.ofNat 10))) (Neg.neg (Int.ofNat 10))) → (Eq (Eq (format (Int.ofNat 0)) x) (Eq x (format (Int.ofNat 0)))) → (Eq (Eq (format (Int.ofNat 1)) s) (Eq s (format (Int.ofNat 1)))) → (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 4)) percent) (Or (Eq (format (Int.ofNat 4)) s) (Or (Eq (format (Int.ofNat 4)) x) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 3)) percent) (Or (Eq (format (Int.ofNat 3)) s) (Or (Eq (format (Int.ofNat 3)) x) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) → (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 4))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (And True (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))) (And False (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) False) → (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 1)) percent) (Or (Eq (format (Int.ofNat 1)) s) (Or (Eq (format (Int.ofNat 1)) x) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) → (Eq (Eq (format (Int.ofNat 0)) s) (Eq s (format (Int.ofNat 0)))) → (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) → False :=
fun lean_r0 : (Eq (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Not (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)) (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))))) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq (binrel% HAdd.hAdd fmt1 (Neg.neg (Int.ofNat 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq (Eq fmt1 fmt0) (Eq fmt0 fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 3) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq (binrel% HSub.hSub fmt0 distance) (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 0)) percent) (Or (Eq (format (Int.ofNat 0)) s) (Or (Eq (format (Int.ofNat 0)) x) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 0)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq (Eq (format (Int.ofNat 4)) x) (Eq x (format (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) (binrel% GE.ge fmt1 (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq fmt1 (Int.ofNat 2))) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))))) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 10))) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)) (And (Not (Eq (format fmt1) percent)) (And (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (And (Eq (format arg1) adrx5flo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi))))))) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (binrel% HAdd.hAdd (Int.ofNat 15) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq (Eq (Int.ofNat 10) (Int.ofNat 10)) True) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Int.ofNat 2)) (Not (binrel% GE.ge fmt1 (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Neg.neg (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt1 (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq (Eq (format (Int.ofNat 5)) s) (Eq s (format (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) False) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 4) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (Neg.neg (Int.ofNat 10))) True) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))))) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq (Or False False) False) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Eq fmt1 (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) adrx5fmedlo) (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)))) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq fmt1 (Int.ofNat 4))) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5))) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (And (binrel% GE.ge arg1 fmt0) (And (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (And (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (And (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (And (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (And (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (And (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))))))))))))))))))))))))))))))))))))))))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq (Eq (Int.ofNat 37) (Int.ofNat 37)) True) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq (Eq (Int.ofNat 37) (format fmt1)) (Eq (format fmt1) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq (Implies False (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6)))))))) True) => -- THEORY_REWRITE_BOOL
fun lean_r81 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 5))) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq (Not True) False) => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (binrel% HAdd.hAdd (Int.ofNat 5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))))))) => -- THEORY_REWRITE_BOOL
fun lean_r87 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 15) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) adrx5fhi) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq (binrel% HAdd.hAdd fmt1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3))) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)))))) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)) (Neg.neg (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq (Eq (Int.ofNat 0) (Int.ofNat 0)) True) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq (Eq (Int.ofNat 120) (Int.ofNat 120)) True) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0) (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0))) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) (Int.ofNat 0)) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Eq (format (Int.ofNat 0)) (Int.ofNat 115))) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq (Eq (Int.ofNat 6) (Int.ofNat 6)) True) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) => -- THEORY_REWRITE_BOOL
fun lean_r115 : (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq (binrel% HAdd.hAdd fmt0 (Int.ofNat 0)) fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq (Eq (Int.ofNat 115) (Int.ofNat 115)) True) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq (Eq (Int.ofNat 5) (Int.ofNat 5)) True) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq (Eq (format arg1) adrx5flo) (Eq adrx5flo (format arg1))) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq (Eq (Int.ofNat 4) (Int.ofNat 4)) True) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq (Eq (Int.ofNat 3) (Int.ofNat 3)) True) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) adrx5fmedhi) (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)))) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq (binrel% HAdd.hAdd arg1 (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq (Eq (format (Int.ofNat 2)) percent) (Eq percent (format (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) s) (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq (Eq (format fmt1) percent) (Eq percent (format fmt1))) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq (Eq (Int.ofNat 0) fmt1) (Eq fmt1 (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq (Eq (format (Int.ofNat 4)) s) (Eq s (format (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq (Eq (format (Int.ofNat 4)) percent) (Eq percent (format (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq (Eq (format (Int.ofNat 5)) x) (Eq x (format (Int.ofNat 5)))) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 2)) percent) (Or (Eq (format (Int.ofNat 2)) s) (Or (Eq (format (Int.ofNat 2)) x) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r134 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq (Eq (format (Int.ofNat 3)) percent) (Eq percent (format (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq (binrel% GE.ge arg1 fmt0) (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0))) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq (Eq (format (Int.ofNat 3)) x) (Eq x (format (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq (Eq (format (Int.ofNat 2)) x) (Eq x (format (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq (Eq (format (Int.ofNat 1)) percent) (Eq percent (format (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1)) False) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)) (Int.ofNat 1)) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq (Eq (format (Int.ofNat 1)) x) (Eq x (format (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq (Eq (format (Int.ofNat 0)) percent) (Eq percent (format (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq (Eq arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq (Eq (format (Int.ofNat 3)) s) (Eq s (format (Int.ofNat 3)))) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq (Eq (format (Int.ofNat 2)) s) (Eq s (format (Int.ofNat 2)))) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (format (Int.ofNat 2)) (Int.ofNat 37))) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (Neg.neg (Int.ofNat 10))) (Neg.neg (Int.ofNat 10))) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq (Eq (format (Int.ofNat 0)) x) (Eq x (format (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq (Eq (format (Int.ofNat 1)) s) (Eq s (format (Int.ofNat 1)))) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 4)) percent) (Or (Eq (format (Int.ofNat 4)) s) (Or (Eq (format (Int.ofNat 4)) x) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r164 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 3)) percent) (Or (Eq (format (Int.ofNat 3)) s) (Or (Eq (format (Int.ofNat 3)) x) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r165 : (Eq (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 4))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (And True (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))) (And False (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) False) => -- THEORY_REWRITE_BOOL
fun lean_r166 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (Or (Eq (format (Int.ofNat 1)) percent) (Or (Eq (format (Int.ofNat 1)) s) (Or (Eq (format (Int.ofNat 1)) x) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) => -- THEORY_REWRITE_BOOL
fun lean_r167 : (Eq (Eq (format (Int.ofNat 0)) s) (Eq s (format (Int.ofNat 0)))) => -- THEORY_REWRITE_ARITH
fun lean_a168 : (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) => by
have lean_s0 : (Eq And And) := by timed rfl
have lean_s1 : (Eq (Eq distance (Int.ofNat 10)) (Eq distance (Int.ofNat 10))) := by timed rfl
let lean_s2 := by timed congr lean_s0 lean_s1
have lean_s3 : (Eq (Eq fmtx5flength (Int.ofNat 5)) (Eq fmtx5flength (Int.ofNat 5))) := by timed rfl
let lean_s4 := by timed congr lean_s0 lean_s3
have lean_s5 : (Eq (Eq adrx5flo (Int.ofNat 3)) (Eq adrx5flo (Int.ofNat 3))) := by timed rfl
let lean_s6 := by timed congr lean_s0 lean_s5
have lean_s7 : (Eq (Eq adrx5fmedlo (Int.ofNat 4)) (Eq adrx5fmedlo (Int.ofNat 4))) := by timed rfl
let lean_s8 := by timed congr lean_s0 lean_s7
have lean_s9 : (Eq (Eq adrx5fmedhi (Int.ofNat 5)) (Eq adrx5fmedhi (Int.ofNat 5))) := by timed rfl
let lean_s10 := by timed congr lean_s0 lean_s9
have lean_s11 : (Eq (Eq adrx5fhi (Int.ofNat 6)) (Eq adrx5fhi (Int.ofNat 6))) := by timed rfl
let lean_s12 := by timed congr lean_s0 lean_s11
have lean_s13 : (Eq (Eq percent (Int.ofNat 37)) (Eq percent (Int.ofNat 37))) := by timed rfl
let lean_s14 := by timed congr lean_s0 lean_s13
have lean_s15 : (Eq (Eq s (Int.ofNat 115)) (Eq s (Int.ofNat 115))) := by timed rfl
let lean_s16 := by timed congr lean_s0 lean_s15
have lean_s17 : (Eq (Eq x (Int.ofNat 120)) (Eq x (Int.ofNat 120))) := by timed rfl
let lean_s18 := by timed congr lean_s0 lean_s17
have lean_s19 : (Eq (Eq fmt0 (Int.ofNat 0)) (Eq fmt0 (Int.ofNat 0))) := by timed rfl
let lean_s20 := by timed congr lean_s0 lean_s19
have lean_s21 : (Eq arg0 arg0) := by timed rfl
let lean_s22 := by timed flipCongrArg lean_s21 [Eq]
have lean_s23 : (Eq (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance)))) := by timed congr lean_s22 lean_r21
let lean_s24 := by timed congr lean_s0 lean_s23
let lean_s25 := by timed congr lean_s0 lean_r138
have lean_s26 : (Eq fmt1 fmt1) := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [GE.ge]
have lean_s28 : (Eq fmt0 fmt0) := by timed rfl
let lean_s29 := by timed flipCongrArg lean_s28 [HAdd.hAdd]
have lean_s30 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s31 := by timed flipCongrArg lean_s30 [HAdd.hAdd]
have lean_s32 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s31 lean_r136
have lean_s33 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) := by timed Eq.trans lean_s32 lean_r94
have lean_s34 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength)) := by timed Eq.trans lean_r1 lean_s33
have lean_s35 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))) (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmtx5flength))) := by timed congr lean_s29 lean_s34
have lean_s36 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength))) := by timed Eq.trans lean_s35 lean_r2
have lean_s37 : (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (binrel% GE.ge fmt1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd fmt0 fmtx5flength)))) := by timed congr lean_s27 lean_s36
have lean_s38 : (Eq (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)))) := by timed Eq.trans lean_s37 lean_r25
have lean_s39 : (Eq (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))))) := by timed flipCongrArg lean_s38 [Not]
have lean_s40 : (Eq (Not (binrel% GE.ge fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) := by timed Eq.trans lean_s39 lean_r90
have lean_s41 : (Eq (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2))) := by timed Eq.trans lean_r0 lean_s40
let lean_s42 := by timed congr lean_s0 lean_s41
let lean_s43 := by timed flipCongrArg lean_s26 [LE.le]
have lean_s44 : (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (binrel% LE.le fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) := by timed congr lean_s43 lean_r20
have lean_s45 : (Eq (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) := by timed Eq.trans lean_s44 lean_r4
have lean_s46 : (Eq (Not (binrel% LE.le fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))))) := by timed flipCongrArg lean_s45 [Not]
have lean_s47 : (Eq (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))))) := by timed Eq.trans lean_r3 lean_s46
let lean_s48 := by timed congr lean_s0 lean_s47
let lean_s49 := by timed congr lean_s0 lean_r5
have lean_s50 : (Eq arg1 arg1) := by timed rfl
let lean_s51 := by timed flipCongrArg lean_s50 [GE.ge]
have lean_s52 : (Eq distance distance) := by timed rfl
let lean_s53 := by timed flipCongrArg lean_s30 [HAdd.hAdd]
have lean_s54 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4))) (binrel% HAdd.hAdd fmtx5flength (Neg.neg (Int.ofNat 4)))) := by timed congr lean_s53 lean_r8
have lean_s55 : (Eq (binrel% HAdd.hAdd fmtx5flength (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 4))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) := by timed Eq.trans lean_s54 lean_r9
have lean_s56 : (Eq (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)) := by timed Eq.trans lean_r7 lean_s55
let lean_s57 := by timed congrHAdd lean_s52 lean_s56
have lean_s58 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmtx5flength)))) := by timed congrHAdd lean_s21 lean_s57
have lean_s59 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) := by timed Eq.trans lean_s58 lean_r162
have lean_s60 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength)))) := by timed Eq.trans lean_r6 lean_s59
have lean_s61 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance fmtx5flength))))) := by timed congr lean_s51 lean_s60
have lean_s62 : (Eq (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)))) := by timed Eq.trans lean_s61 lean_r126
have lean_s63 : (Eq (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))))) := by timed flipCongrArg lean_s62 [Not]
have lean_s64 : (Eq (Not (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) := by timed Eq.trans lean_s63 lean_r114
have lean_s65 : (Eq (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5))) := by timed Eq.trans lean_r31 lean_s64
let lean_s66 := by timed congr lean_s0 lean_s65
let lean_s67 := by timed flipCongrArg lean_s50 [Eq]
have lean_s68 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
let lean_s69 := by timed flipCongrArg lean_s68 [HMul.hMul]
let lean_s70 := by timed flipCongrArg lean_s26 [HAdd.hAdd]
have lean_s71 : (Eq (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2))) (binrel% HAdd.hAdd fmt1 (Neg.neg (Int.ofNat 2)))) := by timed congr lean_s70 lean_r12
have lean_s72 : (Eq (binrel% HAdd.hAdd fmt1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 2))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.trans lean_s71 lean_r13
have lean_s73 : (Eq (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.trans lean_r11 lean_s72
let lean_s74 := by timed flipCongrArg lean_s73 [HAdd.hAdd]
have lean_s75 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) := by timed rfl
have lean_s76 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0))) := by timed congr lean_s74 lean_s75
have lean_s77 : (Eq (binrel% HAdd.hAdd (binrel% HSub.hSub fmt1 (Int.ofNat 2)) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) := by timed Eq.trans lean_s76 lean_r14
have lean_s78 : (Eq (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) := by timed Eq.trans lean_r109 lean_s77
have lean_s79 : (Eq (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) := by timed flipCongrArg lean_s78 [sx5fcount]
have lean_s80 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))) := by timed congr lean_s69 lean_s79
let lean_s81 := by timed flipCongrArg lean_s68 [HMul.hMul]
have lean_s82 : (Eq (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) := by timed flipCongrArg lean_s78 [xx5fcount]
have lean_s83 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))) := by timed congr lean_s81 lean_s82
let lean_s84 := by timed congrHAdd lean_s80 lean_s83
have lean_s85 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) := by timed congrHAdd lean_s21 lean_s84
have lean_s86 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) := by timed Eq.trans lean_r10 lean_s85
have lean_s87 : (Eq (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (Eq arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) := by timed congr lean_s67 lean_s86
have lean_s88 : (Eq (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))))) := by timed Eq.trans lean_s87 lean_r151
let lean_s89 := by timed congr lean_s0 lean_s88
have lean_s90 : (Eq Or Or) := by timed rfl
let lean_s91 := by timed flipCongrArg lean_s26 [Eq]
have lean_s92 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 fmt0)) := by timed congr lean_s91 lean_r116
have lean_s93 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt0 fmt1)) := by timed Eq.trans lean_s92 lean_r15
let lean_s94 := by timed congr lean_s90 lean_s93
let lean_s95 := by timed flipCongrArg lean_s26 [Eq]
have lean_s96 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) := by timed congr lean_s95 lean_r20
have lean_s97 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) := by timed Eq.trans lean_s96 lean_r60
let lean_s98 := by timed congr lean_s90 lean_s97
let lean_s99 := by timed flipCongrArg lean_s26 [Eq]
have lean_s100 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 2) fmt0))) := by timed congr lean_s99 lean_r16
have lean_s101 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed Eq.trans lean_s100 lean_r65
let lean_s102 := by timed congr lean_s90 lean_s101
let lean_s103 := by timed flipCongrArg lean_s26 [Eq]
have lean_s104 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 3) fmt0))) := by timed congr lean_s103 lean_r17
have lean_s105 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) := by timed Eq.trans lean_s104 lean_r18
let lean_s106 := by timed congr lean_s90 lean_s105
let lean_s107 := by timed flipCongrArg lean_s26 [Eq]
have lean_s108 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))) (Eq fmt1 (binrel% HAdd.hAdd (Int.ofNat 4) fmt0))) := by timed congr lean_s107 lean_r19
have lean_s109 : (Eq (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) := by timed Eq.trans lean_s108 lean_r48
let lean_s110 := by timed congr lean_s106 lean_s109
let lean_s111 := by timed congr lean_s102 lean_s110
let lean_s112 := by timed congr lean_s98 lean_s111
have lean_s113 : (Eq (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2))) (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4))))))) (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))))))) := by timed congr lean_s94 lean_s112
have lean_s114 : (Eq (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))))))) := by timed Eq.trans lean_r86 lean_s113
let lean_s115 := by timed congr lean_s0 lean_s114
let lean_s116 := by timed flipCongrArg lean_s50 [Eq]
have lean_s117 : (Eq (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 fmt0)) := by timed congr lean_s116 lean_r116
let lean_s118 := by timed flipCongrArg lean_s117 [Or]
let lean_s119 := by timed flipCongrArg lean_s50 [Eq]
have lean_s120 : (Eq (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) := by timed congr lean_s119 lean_r20
have lean_s121 : (Eq (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)))) := by timed congr lean_s118 lean_s120
let lean_s122 := by timed congr lean_s0 lean_s121
have lean_s123 : (Eq Or Or) := by timed rfl
let lean_s124 := by timed congr lean_s123 lean_r147
let lean_s125 := by timed congr lean_s123 lean_r167
let lean_s126 := by timed congr lean_s123 lean_r160
have lean_s127 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s128 := by timed congr lean_s123 lean_s127
have lean_s129 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s130 := by timed congr lean_s123 lean_s129
have lean_s131 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s132 := by timed congr lean_s123 lean_s131
have lean_s133 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s134 := by timed congr lean_s123 lean_s133
have lean_s135 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 255)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) := by timed rfl
let lean_s136 := by timed congr lean_s134 lean_s135
let lean_s137 := by timed congr lean_s132 lean_s136
let lean_s138 := by timed congr lean_s130 lean_s137
let lean_s139 := by timed congr lean_s128 lean_s138
let lean_s140 := by timed congr lean_s126 lean_s139
let lean_s141 := by timed congr lean_s125 lean_s140
have lean_s142 : (Eq (Or (Eq (format (Int.ofNat 0)) percent) (Or (Eq (format (Int.ofNat 0)) s) (Or (Eq (format (Int.ofNat 0)) x) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed congr lean_s124 lean_s141
have lean_s143 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r22 lean_s142
let lean_s144 := by timed congr lean_s0 lean_s143
have lean_s145 : (Eq Or Or) := by timed rfl
let lean_s146 := by timed congr lean_s145 lean_r141
let lean_s147 := by timed congr lean_s145 lean_r161
let lean_s148 := by timed congr lean_s145 lean_r146
have lean_s149 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s150 := by timed congr lean_s145 lean_s149
have lean_s151 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s152 := by timed congr lean_s145 lean_s151
have lean_s153 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s154 := by timed congr lean_s145 lean_s153
have lean_s155 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) := by timed rfl
let lean_s156 := by timed congr lean_s145 lean_s155
have lean_s157 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 255)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) := by timed rfl
let lean_s158 := by timed congr lean_s156 lean_s157
let lean_s159 := by timed congr lean_s154 lean_s158
let lean_s160 := by timed congr lean_s152 lean_s159
let lean_s161 := by timed congr lean_s150 lean_s160
let lean_s162 := by timed congr lean_s148 lean_s161
let lean_s163 := by timed congr lean_s147 lean_s162
have lean_s164 : (Eq (Or (Eq (format (Int.ofNat 1)) percent) (Or (Eq (format (Int.ofNat 1)) s) (Or (Eq (format (Int.ofNat 1)) x) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed congr lean_s146 lean_s163
have lean_s165 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r166 lean_s164
let lean_s166 := by timed congr lean_s0 lean_s165
have lean_s167 : (Eq Or Or) := by timed rfl
let lean_s168 := by timed congr lean_s167 lean_r125
let lean_s169 := by timed congr lean_s167 lean_r156
let lean_s170 := by timed congr lean_s167 lean_r140
have lean_s171 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s172 := by timed congr lean_s167 lean_s171
have lean_s173 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s174 := by timed congr lean_s167 lean_s173
have lean_s175 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s176 := by timed congr lean_s167 lean_s175
have lean_s177 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) := by timed rfl
let lean_s178 := by timed congr lean_s167 lean_s177
have lean_s179 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 255)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) := by timed rfl
let lean_s180 := by timed congr lean_s178 lean_s179
let lean_s181 := by timed congr lean_s176 lean_s180
let lean_s182 := by timed congr lean_s174 lean_s181
let lean_s183 := by timed congr lean_s172 lean_s182
let lean_s184 := by timed congr lean_s170 lean_s183
let lean_s185 := by timed congr lean_s169 lean_s184
have lean_s186 : (Eq (Or (Eq (format (Int.ofNat 2)) percent) (Or (Eq (format (Int.ofNat 2)) s) (Or (Eq (format (Int.ofNat 2)) x) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed congr lean_s168 lean_s185
have lean_s187 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r133 lean_s186
let lean_s188 := by timed congr lean_s0 lean_s187
have lean_s189 : (Eq Or Or) := by timed rfl
let lean_s190 := by timed congr lean_s189 lean_r135
let lean_s191 := by timed congr lean_s189 lean_r153
let lean_s192 := by timed congr lean_s189 lean_r139
have lean_s193 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s194 := by timed congr lean_s189 lean_s193
have lean_s195 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s196 := by timed congr lean_s189 lean_s195
have lean_s197 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s198 := by timed congr lean_s189 lean_s197
have lean_s199 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) := by timed rfl
let lean_s200 := by timed congr lean_s189 lean_s199
have lean_s201 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 255)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) := by timed rfl
let lean_s202 := by timed congr lean_s200 lean_s201
let lean_s203 := by timed congr lean_s198 lean_s202
let lean_s204 := by timed congr lean_s196 lean_s203
let lean_s205 := by timed congr lean_s194 lean_s204
let lean_s206 := by timed congr lean_s192 lean_s205
let lean_s207 := by timed congr lean_s191 lean_s206
have lean_s208 : (Eq (Or (Eq (format (Int.ofNat 3)) percent) (Or (Eq (format (Int.ofNat 3)) s) (Or (Eq (format (Int.ofNat 3)) x) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed congr lean_s190 lean_s207
have lean_s209 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r164 lean_s208
let lean_s210 := by timed congr lean_s0 lean_s209
have lean_s211 : (Eq Or Or) := by timed rfl
let lean_s212 := by timed congr lean_s211 lean_r131
let lean_s213 := by timed congr lean_s211 lean_r130
let lean_s214 := by timed congr lean_s211 lean_r24
have lean_s215 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s216 := by timed congr lean_s211 lean_s215
have lean_s217 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s218 := by timed congr lean_s211 lean_s217
have lean_s219 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s220 := by timed congr lean_s211 lean_s219
have lean_s221 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) := by timed rfl
let lean_s222 := by timed congr lean_s211 lean_s221
have lean_s223 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 255)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) := by timed rfl
let lean_s224 := by timed congr lean_s222 lean_s223
let lean_s225 := by timed congr lean_s220 lean_s224
let lean_s226 := by timed congr lean_s218 lean_s225
let lean_s227 := by timed congr lean_s216 lean_s226
let lean_s228 := by timed congr lean_s214 lean_s227
let lean_s229 := by timed congr lean_s213 lean_s228
have lean_s230 : (Eq (Or (Eq (format (Int.ofNat 4)) percent) (Or (Eq (format (Int.ofNat 4)) s) (Or (Eq (format (Int.ofNat 4)) x) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed congr lean_s212 lean_s229
have lean_s231 : (Eq (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed Eq.trans lean_r163 lean_s230
let lean_s232 := by timed congr lean_s0 lean_s231
let lean_s233 := by timed flipCongrArg lean_r147 [And]
have lean_s234 : (Eq (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) := by timed congr lean_s233 lean_r161
let lean_s235 := by timed flipCongrArg lean_s234 [Implies]
have lean_s236 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s237 : (Eq (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s235 lean_s236
let lean_s238 := by timed congr lean_s0 lean_s237
have lean_s239 : (Eq (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s234 [Not]
let lean_s240 := by timed flipCongrArg lean_s239 [Implies]
have lean_s241 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s242 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s240 lean_s241
let lean_s243 := by timed congr lean_s0 lean_s242
let lean_s244 := by timed flipCongrArg lean_r141 [And]
have lean_s245 : (Eq (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) := by timed congr lean_s244 lean_r156
let lean_s246 := by timed flipCongrArg lean_s245 [Implies]
have lean_s247 : (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))) := by timed rfl
let lean_s248 := by timed flipCongrArg lean_s247 [Eq]
have lean_s249 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 0))))) := by timed congr lean_s248 lean_r111
have lean_s250 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by timed Eq.trans lean_s249 lean_r157
have lean_s251 : (Eq (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) := by timed congr lean_s246 lean_s250
let lean_s252 := by timed congr lean_s0 lean_s251
have lean_s253 : (Eq (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s245 [Not]
let lean_s254 := by timed flipCongrArg lean_s253 [Implies]
have lean_s255 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s254 lean_r155
let lean_s256 := by timed congr lean_s0 lean_s255
let lean_s257 := by timed flipCongrArg lean_r125 [And]
have lean_s258 : (Eq (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) := by timed congr lean_s257 lean_r153
let lean_s259 := by timed flipCongrArg lean_s258 [Implies]
have lean_s260 : (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 2))) := by timed rfl
let lean_s261 := by timed flipCongrArg lean_s260 [Eq]
have lean_s262 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s261 lean_r81
have lean_s263 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed Eq.trans lean_s262 lean_r154
have lean_s264 : (Eq (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))))) := by timed congr lean_s259 lean_s263
let lean_s265 := by timed congr lean_s0 lean_s264
have lean_s266 : (Eq (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s258 [Not]
let lean_s267 := by timed flipCongrArg lean_s266 [Implies]
have lean_s268 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s267 lean_r152
let lean_s269 := by timed congr lean_s0 lean_s268
let lean_s270 := by timed flipCongrArg lean_r135 [And]
have lean_s271 : (Eq (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) := by timed congr lean_s270 lean_r130
let lean_s272 := by timed flipCongrArg lean_s271 [Implies]
have lean_s273 : (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 3))) := by timed rfl
let lean_s274 := by timed flipCongrArg lean_s273 [Eq]
have lean_s275 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s274 lean_r43
have lean_s276 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) := by timed Eq.trans lean_s275 lean_r87
have lean_s277 : (Eq (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))))) := by timed congr lean_s272 lean_s276
let lean_s278 := by timed congr lean_s0 lean_s277
have lean_s279 : (Eq (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s271 [Not]
let lean_s280 := by timed flipCongrArg lean_s279 [Implies]
have lean_s281 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s280 lean_r75
let lean_s282 := by timed congr lean_s0 lean_s281
let lean_s283 := by timed flipCongrArg lean_r131 [And]
have lean_s284 : (Eq (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) := by timed congr lean_s283 lean_r46
let lean_s285 := by timed flipCongrArg lean_s284 [Implies]
have lean_s286 : (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 4))) := by timed rfl
let lean_s287 := by timed flipCongrArg lean_s286 [Eq]
have lean_s288 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s287 lean_r150
have lean_s289 : (Eq (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) := by timed Eq.trans lean_s288 lean_r149
have lean_s290 : (Eq (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))))) := by timed congr lean_s285 lean_s289
let lean_s291 := by timed congr lean_s0 lean_s290
have lean_s292 : (Eq (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s284 [Not]
let lean_s293 := by timed flipCongrArg lean_s292 [Implies]
have lean_s294 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))))) := by timed congr lean_s293 lean_r148
let lean_s295 := by timed congr lean_s0 lean_s294
let lean_s296 := by timed flipCongrArg lean_r147 [And]
have lean_s297 : (Eq (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) := by timed congr lean_s296 lean_r146
let lean_s298 := by timed flipCongrArg lean_s297 [Implies]
have lean_s299 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s300 : (Eq (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s298 lean_s299
let lean_s301 := by timed congr lean_s0 lean_s300
have lean_s302 : (Eq (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s297 [Not]
let lean_s303 := by timed flipCongrArg lean_s302 [Implies]
have lean_s304 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s305 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s303 lean_s304
let lean_s306 := by timed congr lean_s0 lean_s305
let lean_s307 := by timed flipCongrArg lean_r141 [And]
have lean_s308 : (Eq (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) := by timed congr lean_s307 lean_r140
let lean_s309 := by timed flipCongrArg lean_s308 [Implies]
have lean_s310 : (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))) := by timed rfl
let lean_s311 := by timed flipCongrArg lean_s310 [Eq]
have lean_s312 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 0))))) := by timed congr lean_s311 lean_r145
have lean_s313 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by timed Eq.trans lean_s312 lean_r143
have lean_s314 : (Eq (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) := by timed congr lean_s309 lean_s313
let lean_s315 := by timed congr lean_s0 lean_s314
have lean_s316 : (Eq (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s308 [Not]
let lean_s317 := by timed flipCongrArg lean_s316 [Implies]
have lean_s318 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s317 lean_r78
let lean_s319 := by timed congr lean_s0 lean_s318
let lean_s320 := by timed flipCongrArg lean_r125 [And]
have lean_s321 : (Eq (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) := by timed congr lean_s320 lean_r139
let lean_s322 := by timed flipCongrArg lean_s321 [Implies]
have lean_s323 : (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 2))) := by timed rfl
let lean_s324 := by timed flipCongrArg lean_s323 [Eq]
have lean_s325 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s324 lean_r118
have lean_s326 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed Eq.trans lean_s325 lean_r69
have lean_s327 : (Eq (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))) := by timed congr lean_s322 lean_s326
let lean_s328 := by timed congr lean_s0 lean_s327
have lean_s329 : (Eq (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s321 [Not]
let lean_s330 := by timed flipCongrArg lean_s329 [Implies]
have lean_s331 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s330 lean_r99
let lean_s332 := by timed congr lean_s0 lean_s331
let lean_s333 := by timed flipCongrArg lean_r135 [And]
have lean_s334 : (Eq (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) := by timed congr lean_s333 lean_r24
let lean_s335 := by timed flipCongrArg lean_s334 [Implies]
have lean_s336 : (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 3))) := by timed rfl
let lean_s337 := by timed flipCongrArg lean_s336 [Eq]
have lean_s338 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s337 lean_r137
have lean_s339 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) := by timed Eq.trans lean_s338 lean_r96
have lean_s340 : (Eq (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))))) := by timed congr lean_s335 lean_s339
let lean_s341 := by timed congr lean_s0 lean_s340
have lean_s342 : (Eq (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s334 [Not]
let lean_s343 := by timed flipCongrArg lean_s342 [Implies]
have lean_s344 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s343 lean_r82
let lean_s345 := by timed congr lean_s0 lean_s344
let lean_s346 := by timed flipCongrArg lean_r131 [And]
have lean_s347 : (Eq (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) := by timed congr lean_s346 lean_r132
let lean_s348 := by timed flipCongrArg lean_s347 [Implies]
have lean_s349 : (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 4))) := by timed rfl
let lean_s350 := by timed flipCongrArg lean_s349 [Eq]
have lean_s351 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (Int.ofNat 1) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s350 lean_r134
have lean_s352 : (Eq (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) := by timed Eq.trans lean_s351 lean_r91
have lean_s353 : (Eq (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))))) := by timed congr lean_s348 lean_s352
let lean_s354 := by timed congr lean_s0 lean_s353
have lean_s355 : (Eq (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s347 [Not]
let lean_s356 := by timed flipCongrArg lean_s355 [Implies]
have lean_s357 : (Eq (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))) := by timed congr lean_s356 lean_r74
let lean_s358 := by timed congr lean_s354 lean_s357
let lean_s359 := by timed congr lean_s345 lean_s358
let lean_s360 := by timed congr lean_s341 lean_s359
let lean_s361 := by timed congr lean_s332 lean_s360
let lean_s362 := by timed congr lean_s328 lean_s361
let lean_s363 := by timed congr lean_s319 lean_s362
let lean_s364 := by timed congr lean_s315 lean_s363
let lean_s365 := by timed congr lean_s306 lean_s364
let lean_s366 := by timed congr lean_s301 lean_s365
let lean_s367 := by timed congr lean_s295 lean_s366
let lean_s368 := by timed congr lean_s291 lean_s367
let lean_s369 := by timed congr lean_s282 lean_s368
let lean_s370 := by timed congr lean_s278 lean_s369
let lean_s371 := by timed congr lean_s269 lean_s370
let lean_s372 := by timed congr lean_s265 lean_s371
let lean_s373 := by timed congr lean_s256 lean_s372
let lean_s374 := by timed congr lean_s252 lean_s373
let lean_s375 := by timed congr lean_s243 lean_s374
let lean_s376 := by timed congr lean_s238 lean_s375
let lean_s377 := by timed congr lean_s232 lean_s376
let lean_s378 := by timed congr lean_s210 lean_s377
let lean_s379 := by timed congr lean_s188 lean_s378
let lean_s380 := by timed congr lean_s166 lean_s379
let lean_s381 := by timed congr lean_s144 lean_s380
let lean_s382 := by timed congr lean_s122 lean_s381
let lean_s383 := by timed congr lean_s115 lean_s382
let lean_s384 := by timed congr lean_s89 lean_s383
let lean_s385 := by timed congr lean_s66 lean_s384
let lean_s386 := by timed congr lean_s49 lean_s385
let lean_s387 := by timed congr lean_s48 lean_s386
let lean_s388 := by timed congr lean_s42 lean_s387
let lean_s389 := by timed congr lean_s25 lean_s388
let lean_s390 := by timed congr lean_s24 lean_s389
let lean_s391 := by timed congr lean_s20 lean_s390
let lean_s392 := by timed congr lean_s18 lean_s391
let lean_s393 := by timed congr lean_s16 lean_s392
let lean_s394 := by timed congr lean_s14 lean_s393
let lean_s395 := by timed congr lean_s12 lean_s394
let lean_s396 := by timed congr lean_s10 lean_s395
let lean_s397 := by timed congr lean_s8 lean_s396
let lean_s398 := by timed congr lean_s6 lean_s397
let lean_s399 := by timed congr lean_s4 lean_s398
have lean_s400 : (Eq (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HSub.hSub fmt0 distance)) (And (binrel% GE.ge arg1 fmt0) (And (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1)))) (And (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1))) (And (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance)) (And (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4))))) (And (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (And (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s2 lean_s399
have lean_s401 : (Eq (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))) := by timed Eq.trans lean_r71 lean_s400
let lean_s402 := by timed flipCongrArg lean_s401 [Implies]
have lean_s403 : (Eq And And) := by timed rfl
have lean_s404 : (Eq (Not (Eq (format fmt1) percent)) (Not (Eq percent (format fmt1)))) := by timed flipCongrArg lean_r128 [Not]
let lean_s405 := by timed congr lean_s403 lean_s404
have lean_s406 : (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) := by timed flipCongrArg lean_r101 [format]
let lean_s407 := by timed flipCongrArg lean_s406 [Eq]
have lean_s408 : (Eq s s) := by timed rfl
have lean_s409 : (Eq (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) s)) := by timed congr lean_s407 lean_s408
have lean_s410 : (Eq (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) := by timed Eq.trans lean_s409 lean_r127
let lean_s411 := by timed congr lean_s403 lean_s410
let lean_s412 := by timed congr lean_s403 lean_r120
have lean_s413 : (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) := by timed flipCongrArg lean_r115 [format]
let lean_s414 := by timed flipCongrArg lean_s413 [Eq]
have lean_s415 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s416 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) adrx5fmedlo)) := by timed congr lean_s414 lean_s415
have lean_s417 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)))) := by timed Eq.trans lean_s416 lean_r63
let lean_s418 := by timed congr lean_s403 lean_s417
have lean_s419 : (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) := by timed flipCongrArg lean_r124 [format]
let lean_s420 := by timed flipCongrArg lean_s419 [Eq]
have lean_s421 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s422 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) adrx5fmedhi)) := by timed congr lean_s420 lean_s421
have lean_s423 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)))) := by timed Eq.trans lean_s422 lean_r123
let lean_s424 := by timed congr lean_s403 lean_s423
have lean_s425 : (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))) := by timed flipCongrArg lean_r105 [format]
let lean_s426 := by timed flipCongrArg lean_s425 [Eq]
have lean_s427 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s428 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi) (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) adrx5fhi)) := by timed congr lean_s426 lean_s427
have lean_s429 : (Eq (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))) := by timed Eq.trans lean_s428 lean_r93
let lean_s430 := by timed congr lean_s424 lean_s429
let lean_s431 := by timed congr lean_s418 lean_s430
let lean_s432 := by timed congr lean_s412 lean_s431
let lean_s433 := by timed congr lean_s411 lean_s432
have lean_s434 : (Eq (And (Not (Eq (format fmt1) percent)) (And (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s) (And (Eq (format arg1) adrx5flo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo) (And (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))) := by timed congr lean_s405 lean_s433
have lean_s435 : (Eq (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))) := by timed Eq.trans lean_r36 lean_s434
have lean_s436 : (Eq (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi))) (Implies (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) := by timed congr lean_s402 lean_s435
have lean_s437 : (Eq (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) (Not (Implies (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))))) := by timed flipCongrArg lean_s436 [Not]
have lean_s438 : (Eq And And) := by timed rfl
have lean_s439 : (Not (Implies (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) := by timed eqResolve lean_a168 lean_s437
have lean_s440 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s441 : (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) := by andElim lean_s440, 16
have lean_s442 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s443 : (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) := by andElim lean_s442, 10
have lean_s444 : (Eq arg0 arg0) := by timed rfl
let lean_s445 := by timed flipCongrArg lean_s444 [Eq]
have lean_s446 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s447 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s446, 9
have lean_s448 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s449 : (Eq x (Int.ofNat 120)) := by andElim lean_s448, 8
have lean_s450 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s451 : (Eq s (Int.ofNat 115)) := by andElim lean_s450, 7
have lean_s452 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s453 : (Eq percent (Int.ofNat 37)) := by andElim lean_s452, 6
have lean_s454 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s455 : (Eq adrx5fhi (Int.ofNat 6)) := by andElim lean_s454, 5
have lean_s456 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s457 : (Eq adrx5fmedhi (Int.ofNat 5)) := by andElim lean_s456, 4
have lean_s458 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s459 : (Eq adrx5fmedlo (Int.ofNat 4)) := by andElim lean_s458, 3
have lean_s460 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s461 : (Eq adrx5flo (Int.ofNat 3)) := by andElim lean_s460, 2
have lean_s462 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s463 : (Eq fmtx5flength (Int.ofNat 5)) := by andElim lean_s462, 1
have lean_s464 : (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) := by timed notImplies1 lean_s439
have lean_s465 : (Eq distance (Int.ofNat 10)) := by andElim lean_s464, 0
let lean_s466 := by timed And.intro lean_s463 lean_s465
let lean_s467 := by timed And.intro lean_s461 lean_s466
let lean_s468 := by timed And.intro lean_s459 lean_s467
let lean_s469 := by timed And.intro lean_s457 lean_s468
let lean_s470 := by timed And.intro lean_s455 lean_s469
let lean_s471 := by timed And.intro lean_s453 lean_s470
let lean_s472 := by timed And.intro lean_s451 lean_s471
let lean_s473 := by timed And.intro lean_s449 lean_s472
have lean_s474 : (And (Eq fmt0 (Int.ofNat 0)) (And (Eq x (Int.ofNat 120)) (And (Eq s (Int.ofNat 115)) (And (Eq percent (Int.ofNat 37)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq fmtx5flength (Int.ofNat 5)) (Eq distance (Int.ofNat 10))))))))))) := by timed And.intro lean_s447 lean_s473
have lean_s475 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s474, 0
let lean_s476 := by timed flipCongrArg lean_s475 [HAdd.hAdd]
have lean_s477 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s478 := by timed flipCongrArg lean_s477 [HMul.hMul]
have lean_s479 : (Eq distance (Int.ofNat 10)) := by andElim lean_s474, 9
have lean_s480 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10))) := by timed congr lean_s478 lean_s479
have lean_s481 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) := by timed congr lean_s476 lean_s480
have lean_s482 : (Eq (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (Eq arg0 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10))))) := by timed congr lean_s445 lean_s481
let lean_s483 := by timed flipCongrArg lean_s21 [Eq]
have lean_s484 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
let lean_s485 := by timed flipCongrArg lean_s484 [HAdd.hAdd]
have lean_s486 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10))) (binrel% HAdd.hAdd (Int.ofNat 0) (Neg.neg (Int.ofNat 10)))) := by timed congr lean_s485 lean_r106
have lean_s487 : (Eq (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10))) (Neg.neg (Int.ofNat 10))) := by timed Eq.trans lean_s486 lean_r159
have lean_s488 : (Eq (Eq arg0 (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (Eq arg0 (Neg.neg (Int.ofNat 10)))) := by timed congr lean_s483 lean_s487
have lean_s489 : (Eq (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (Eq arg0 (Neg.neg (Int.ofNat 10)))) := by timed Eq.trans lean_s482 lean_s488
have lean_s490 : (Eq arg0 (Neg.neg (Int.ofNat 10))) := by timed eqResolve lean_s443 lean_s489
let lean_s491 := by timed And.intro lean_s463 lean_s465
let lean_s492 := by timed And.intro lean_s461 lean_s491
let lean_s493 := by timed And.intro lean_s459 lean_s492
let lean_s494 := by timed And.intro lean_s457 lean_s493
let lean_s495 := by timed And.intro lean_s455 lean_s494
let lean_s496 := by timed And.intro lean_s453 lean_s495
let lean_s497 := by timed And.intro lean_s451 lean_s496
let lean_s498 := by timed And.intro lean_s449 lean_s497
let lean_s499 := by timed And.intro lean_s447 lean_s498
have lean_s500 : (And (Eq arg0 (Neg.neg (Int.ofNat 10))) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq x (Int.ofNat 120)) (And (Eq s (Int.ofNat 115)) (And (Eq percent (Int.ofNat 37)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq fmtx5flength (Int.ofNat 5)) (Eq distance (Int.ofNat 10)))))))))))) := by timed And.intro lean_s490 lean_s499
have lean_s501 : (Eq arg0 (Neg.neg (Int.ofNat 10))) := by andElim lean_s500, 0
let lean_s502 := by timed flipCongrArg lean_s501 [Eq]
have lean_s503 : (Eq arg1 arg1) := by timed rfl
have lean_s504 : (Eq (Neg.neg (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) := by timed rfl
let lean_s505 := by timed flipCongrArg lean_s504 [HMul.hMul]
have lean_s506 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
have lean_s507 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s508 := by timed flipCongrArg lean_s507 [HMul.hMul]
have lean_s509 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s500, 1
have lean_s510 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) := by timed congr lean_s508 lean_s509
have lean_s511 : (Eq fmt1 fmt1) := by timed rfl
let lean_s512 := by timed congrHAdd lean_s510 lean_s511
have lean_s513 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) := by timed congrHAdd lean_s506 lean_s512
have lean_s514 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s513 [sx5fcount]
have lean_s515 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s505 lean_s514
let lean_s516 := by timed flipCongrArg lean_s504 [HMul.hMul]
have lean_s517 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s513 [xx5fcount]
have lean_s518 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s516 lean_s517
let lean_s519 := by timed congrHAdd lean_s515 lean_s518
have lean_s520 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) := by timed congrHAdd lean_s503 lean_s519
have lean_s521 : (Eq (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) := by timed congr lean_s502 lean_s520
have lean_s522 : (Eq (Neg.neg (Int.ofNat 10)) (Neg.neg (Int.ofNat 10))) := by timed rfl
let lean_s523 := by timed flipCongrArg lean_s522 [Eq]
have lean_s524 : (Eq (Neg.neg (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) := by timed rfl
let lean_s525 := by timed flipCongrArg lean_s524 [HMul.hMul]
have lean_s526 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
let lean_s527 := by timed congrHAdd lean_r110 lean_s26
have lean_s528 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (Int.ofNat 0) fmt1))) := by timed congrHAdd lean_s526 lean_s527
have lean_s529 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed Eq.trans lean_s528 lean_r40
have lean_s530 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s529 [sx5fcount]
have lean_s531 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed congr lean_s525 lean_s530
let lean_s532 := by timed flipCongrArg lean_s524 [HMul.hMul]
have lean_s533 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed flipCongrArg lean_s529 [xx5fcount]
have lean_s534 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed congr lean_s532 lean_s533
let lean_s535 := by timed congrHAdd lean_s531 lean_s534
have lean_s536 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed congrHAdd lean_s50 lean_s535
have lean_s537 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s523 lean_s536
have lean_s538 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed Eq.trans lean_s537 lean_r38
have lean_s539 : (Eq (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed Eq.trans lean_s521 lean_s538
have lean_s540 : (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed eqResolve lean_s441 lean_s539
let lean_s541 := by timed And.intro lean_s463 lean_s465
let lean_s542 := by timed And.intro lean_s461 lean_s541
let lean_s543 := by timed And.intro lean_s459 lean_s542
let lean_s544 := by timed And.intro lean_s457 lean_s543
let lean_s545 := by timed And.intro lean_s455 lean_s544
let lean_s546 := by timed And.intro lean_s453 lean_s545
let lean_s547 := by timed And.intro lean_s451 lean_s546
let lean_s548 := by timed And.intro lean_s449 lean_s547
let lean_s549 := by timed And.intro lean_s447 lean_s548
let lean_s550 := by timed And.intro lean_s490 lean_s549
have lean_s551 : (And (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (And (Eq arg0 (Neg.neg (Int.ofNat 10))) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq x (Int.ofNat 120)) (And (Eq s (Int.ofNat 115)) (And (Eq percent (Int.ofNat 37)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq fmtx5flength (Int.ofNat 5)) (Eq distance (Int.ofNat 10))))))))))))) := by timed And.intro lean_s540 lean_s550
have lean_s552 : (Eq distance (Int.ofNat 10)) := by andElim lean_s551, 11
let lean_s553 := by timed flipCongrArg lean_s552 [Eq]
have lean_s554 : (Eq (Int.ofNat 10) (Int.ofNat 10)) := by timed rfl
have lean_s555 : (Eq (Eq distance (Int.ofNat 10)) (Eq (Int.ofNat 10) (Int.ofNat 10))) := by timed congr lean_s553 lean_s554
let lean_s556 := by timed congr lean_s438 lean_s555
have lean_s557 : (Eq fmtx5flength (Int.ofNat 5)) := by andElim lean_s551, 10
let lean_s558 := by timed flipCongrArg lean_s557 [Eq]
have lean_s559 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
have lean_s560 : (Eq (Eq fmtx5flength (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s558 lean_s559
let lean_s561 := by timed congr lean_s438 lean_s560
have lean_s562 : (Eq adrx5flo (Int.ofNat 3)) := by andElim lean_s551, 9
let lean_s563 := by timed flipCongrArg lean_s562 [Eq]
have lean_s564 : (Eq (Int.ofNat 3) (Int.ofNat 3)) := by timed rfl
have lean_s565 : (Eq (Eq adrx5flo (Int.ofNat 3)) (Eq (Int.ofNat 3) (Int.ofNat 3))) := by timed congr lean_s563 lean_s564
let lean_s566 := by timed congr lean_s438 lean_s565
have lean_s567 : (Eq adrx5fmedlo (Int.ofNat 4)) := by andElim lean_s551, 8
let lean_s568 := by timed flipCongrArg lean_s567 [Eq]
have lean_s569 : (Eq (Int.ofNat 4) (Int.ofNat 4)) := by timed rfl
have lean_s570 : (Eq (Eq adrx5fmedlo (Int.ofNat 4)) (Eq (Int.ofNat 4) (Int.ofNat 4))) := by timed congr lean_s568 lean_s569
let lean_s571 := by timed congr lean_s438 lean_s570
have lean_s572 : (Eq adrx5fmedhi (Int.ofNat 5)) := by andElim lean_s551, 7
let lean_s573 := by timed flipCongrArg lean_s572 [Eq]
have lean_s574 : (Eq (Eq adrx5fmedhi (Int.ofNat 5)) (Eq (Int.ofNat 5) (Int.ofNat 5))) := by timed congr lean_s573 lean_s559
let lean_s575 := by timed congr lean_s438 lean_s574
have lean_s576 : (Eq adrx5fhi (Int.ofNat 6)) := by andElim lean_s551, 6
let lean_s577 := by timed flipCongrArg lean_s576 [Eq]
have lean_s578 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
have lean_s579 : (Eq (Eq adrx5fhi (Int.ofNat 6)) (Eq (Int.ofNat 6) (Int.ofNat 6))) := by timed congr lean_s577 lean_s578
let lean_s580 := by timed congr lean_s438 lean_s579
have lean_s581 : (Eq percent (Int.ofNat 37)) := by andElim lean_s551, 5
let lean_s582 := by timed flipCongrArg lean_s581 [Eq]
have lean_s583 : (Eq (Int.ofNat 37) (Int.ofNat 37)) := by timed rfl
have lean_s584 : (Eq (Eq percent (Int.ofNat 37)) (Eq (Int.ofNat 37) (Int.ofNat 37))) := by timed congr lean_s582 lean_s583
let lean_s585 := by timed congr lean_s438 lean_s584
have lean_s586 : (Eq s (Int.ofNat 115)) := by andElim lean_s551, 4
let lean_s587 := by timed flipCongrArg lean_s586 [Eq]
have lean_s588 : (Eq (Int.ofNat 115) (Int.ofNat 115)) := by timed rfl
have lean_s589 : (Eq (Eq s (Int.ofNat 115)) (Eq (Int.ofNat 115) (Int.ofNat 115))) := by timed congr lean_s587 lean_s588
let lean_s590 := by timed congr lean_s438 lean_s589
have lean_s591 : (Eq x (Int.ofNat 120)) := by andElim lean_s551, 3
let lean_s592 := by timed flipCongrArg lean_s591 [Eq]
have lean_s593 : (Eq (Int.ofNat 120) (Int.ofNat 120)) := by timed rfl
have lean_s594 : (Eq (Eq x (Int.ofNat 120)) (Eq (Int.ofNat 120) (Int.ofNat 120))) := by timed congr lean_s592 lean_s593
let lean_s595 := by timed congr lean_s438 lean_s594
have lean_s596 : (Eq fmt0 (Int.ofNat 0)) := by andElim lean_s551, 2
let lean_s597 := by timed flipCongrArg lean_s596 [Eq]
have lean_s598 : (Eq (Int.ofNat 0) (Int.ofNat 0)) := by timed rfl
have lean_s599 : (Eq (Eq fmt0 (Int.ofNat 0)) (Eq (Int.ofNat 0) (Int.ofNat 0))) := by timed congr lean_s597 lean_s598
let lean_s600 := by timed congr lean_s438 lean_s599
have lean_s601 : (Eq arg0 (Neg.neg (Int.ofNat 10))) := by andElim lean_s551, 1
let lean_s602 := by timed flipCongrArg lean_s601 [Eq]
let lean_s603 := by timed flipCongrArg lean_s596 [HAdd.hAdd]
have lean_s604 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
let lean_s605 := by timed flipCongrArg lean_s604 [HMul.hMul]
have lean_s606 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10))) := by timed congr lean_s605 lean_s552
have lean_s607 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) := by timed congr lean_s603 lean_s606
have lean_s608 : (Eq (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10))))) := by timed congr lean_s602 lean_s607
let lean_s609 := by timed congr lean_s438 lean_s608
have lean_s610 : (Eq arg1 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by andElim lean_s551, 0
let lean_s611 := by timed flipCongrArg lean_s610 [HAdd.hAdd]
let lean_s612 := by timed flipCongrArg lean_s604 [HMul.hMul]
have lean_s613 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) := by timed congr lean_s612 lean_s596
have lean_s614 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)))) := by timed congr lean_s611 lean_s613
let lean_s615 := by timed flipCongrArg lean_s614 [GE.ge]
have lean_s616 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0))) := by timed congr lean_s615 lean_s598
let lean_s617 := by timed congr lean_s438 lean_s616
have lean_s618 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) := by timed rfl
let lean_s619 := by timed congrHAdd lean_s618 lean_s557
have lean_s620 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5)))) := by timed congrHAdd lean_s596 lean_s619
let lean_s621 := by timed flipCongrArg lean_s620 [GE.ge]
have lean_s622 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s623 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2))) := by timed congr lean_s621 lean_s622
let lean_s624 := by timed congr lean_s438 lean_s623
let lean_s625 := by timed flipCongrArg lean_s596 [HAdd.hAdd]
have lean_s626 : (Eq (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1))) := by timed congr lean_s625 lean_s618
let lean_s627 := by timed flipCongrArg lean_s626 [GE.ge]
have lean_s628 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s627 lean_s604
have lean_s629 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))))) := by timed flipCongrArg lean_s628 [Not]
let lean_s630 := by timed congr lean_s438 lean_s629
let lean_s631 := by timed flipCongrArg lean_s604 [HMul.hMul]
have lean_s632 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s631 lean_s610
let lean_s633 := by timed congrHAdd lean_s632 lean_s552
have lean_s634 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10)))) := by timed congrHAdd lean_s601 lean_s633
let lean_s635 := by timed flipCongrArg lean_s634 [GE.ge]
have lean_s636 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s637 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) := by timed congr lean_s635 lean_s636
have lean_s638 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1)))) := by timed flipCongrArg lean_s637 [Not]
let lean_s639 := by timed congr lean_s438 lean_s638
let lean_s640 := by timed congrHAdd lean_s552 lean_s557
let lean_s641 := by timed congrHAdd lean_s632 lean_s640
have lean_s642 : (Eq (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5))))) := by timed congrHAdd lean_s601 lean_s641
let lean_s643 := by timed flipCongrArg lean_s642 [GE.ge]
have lean_s644 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5))) := by timed congr lean_s643 lean_s559
let lean_s645 := by timed congr lean_s438 lean_s644
let lean_s646 := by timed flipCongrArg lean_s601 [Eq]
have lean_s647 : (Eq (Neg.neg (Int.ofNat 4)) (Neg.neg (Int.ofNat 4))) := by timed rfl
let lean_s648 := by timed flipCongrArg lean_s647 [HMul.hMul]
have lean_s649 : (Eq (Neg.neg (Int.ofNat 2)) (Neg.neg (Int.ofNat 2))) := by timed rfl
have lean_s650 : (Eq fmt1 fmt1) := by timed rfl
let lean_s651 := by timed congrHAdd lean_s613 lean_s650
have lean_s652 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))) := by timed congrHAdd lean_s649 lean_s651
have lean_s653 : (Eq (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s652 [sx5fcount]
have lean_s654 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s648 lean_s653
let lean_s655 := by timed flipCongrArg lean_s647 [HMul.hMul]
have lean_s656 : (Eq (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) := by timed flipCongrArg lean_s652 [xx5fcount]
have lean_s657 : (Eq (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))) := by timed congr lean_s655 lean_s656
let lean_s658 := by timed congrHAdd lean_s654 lean_s657
have lean_s659 : (Eq (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))))) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) := by timed congrHAdd lean_s610 lean_s658
have lean_s660 : (Eq (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) := by timed congr lean_s646 lean_s659
let lean_s661 := by timed congr lean_s438 lean_s660
have lean_s662 : (Eq Or Or) := by timed rfl
let lean_s663 := by timed flipCongrArg lean_s596 [Eq]
have lean_s664 : (Eq (Eq fmt0 fmt1) (Eq (Int.ofNat 0) fmt1)) := by timed congr lean_s663 lean_s650
let lean_s665 := by timed congr lean_s662 lean_s664
let lean_s666 := by timed flipCongrArg lean_s596 [Eq]
have lean_s667 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) := by timed rfl
have lean_s668 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1))) := by timed congr lean_s666 lean_s667
let lean_s669 := by timed congr lean_s662 lean_s668
let lean_s670 := by timed flipCongrArg lean_s596 [Eq]
have lean_s671 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) := by timed rfl
have lean_s672 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) := by timed congr lean_s670 lean_s671
let lean_s673 := by timed congr lean_s662 lean_s672
let lean_s674 := by timed flipCongrArg lean_s596 [Eq]
have lean_s675 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) := by timed rfl
have lean_s676 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1))) := by timed congr lean_s674 lean_s675
let lean_s677 := by timed congr lean_s662 lean_s676
let lean_s678 := by timed flipCongrArg lean_s596 [Eq]
have lean_s679 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) := by timed rfl
have lean_s680 : (Eq (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))) := by timed congr lean_s678 lean_s679
let lean_s681 := by timed congr lean_s677 lean_s680
let lean_s682 := by timed congr lean_s673 lean_s681
let lean_s683 := by timed congr lean_s669 lean_s682
have lean_s684 : (Eq (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1))))))) := by timed congr lean_s665 lean_s683
let lean_s685 := by timed congr lean_s438 lean_s684
let lean_s686 := by timed flipCongrArg lean_s610 [Eq]
have lean_s687 : (Eq (Eq arg1 fmt0) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0))) := by timed congr lean_s686 lean_s596
let lean_s688 := by timed flipCongrArg lean_s687 [Or]
let lean_s689 := by timed flipCongrArg lean_s610 [Eq]
let lean_s690 := by timed flipCongrArg lean_s636 [HAdd.hAdd]
have lean_s691 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) fmt0) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) := by timed congr lean_s690 lean_s596
have lean_s692 : (Eq (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) := by timed congr lean_s689 lean_s691
have lean_s693 : (Eq (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))))) := by timed congr lean_s688 lean_s692
let lean_s694 := by timed congr lean_s438 lean_s693
have lean_s695 : (Eq Or Or) := by timed rfl
let lean_s696 := by timed flipCongrArg lean_s581 [Eq]
have lean_s697 : (Eq (format (Int.ofNat 0)) (format (Int.ofNat 0))) := by timed rfl
have lean_s698 : (Eq (Eq percent (format (Int.ofNat 0))) (Eq (Int.ofNat 37) (format (Int.ofNat 0)))) := by timed congr lean_s696 lean_s697
let lean_s699 := by timed congr lean_s695 lean_s698
let lean_s700 := by timed flipCongrArg lean_s586 [Eq]
have lean_s701 : (Eq (Eq s (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 0)))) := by timed congr lean_s700 lean_s697
let lean_s702 := by timed congr lean_s695 lean_s701
let lean_s703 := by timed flipCongrArg lean_s591 [Eq]
have lean_s704 : (Eq (Eq x (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 0)))) := by timed congr lean_s703 lean_s697
let lean_s705 := by timed congr lean_s695 lean_s704
have lean_s706 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) := by timed rfl
let lean_s707 := by timed congr lean_s695 lean_s706
have lean_s708 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) := by timed rfl
let lean_s709 := by timed congr lean_s695 lean_s708
have lean_s710 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) := by timed rfl
let lean_s711 := by timed congr lean_s695 lean_s710
have lean_s712 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) := by timed rfl
let lean_s713 := by timed congr lean_s695 lean_s712
have lean_s714 : (Eq (Eq (format (Int.ofNat 0)) (Int.ofNat 255)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) := by timed rfl
let lean_s715 := by timed congr lean_s713 lean_s714
let lean_s716 := by timed congr lean_s711 lean_s715
let lean_s717 := by timed congr lean_s709 lean_s716
let lean_s718 := by timed congr lean_s707 lean_s717
let lean_s719 := by timed congr lean_s705 lean_s718
let lean_s720 := by timed congr lean_s702 lean_s719
have lean_s721 : (Eq (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed congr lean_s699 lean_s720
let lean_s722 := by timed congr lean_s438 lean_s721
have lean_s723 : (Eq Or Or) := by timed rfl
let lean_s724 := by timed flipCongrArg lean_s581 [Eq]
have lean_s725 : (Eq (format (Int.ofNat 1)) (format (Int.ofNat 1))) := by timed rfl
have lean_s726 : (Eq (Eq percent (format (Int.ofNat 1))) (Eq (Int.ofNat 37) (format (Int.ofNat 1)))) := by timed congr lean_s724 lean_s725
let lean_s727 := by timed congr lean_s723 lean_s726
let lean_s728 := by timed flipCongrArg lean_s586 [Eq]
have lean_s729 : (Eq (Eq s (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) := by timed congr lean_s728 lean_s725
let lean_s730 := by timed congr lean_s723 lean_s729
let lean_s731 := by timed flipCongrArg lean_s591 [Eq]
have lean_s732 : (Eq (Eq x (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) := by timed congr lean_s731 lean_s725
let lean_s733 := by timed congr lean_s723 lean_s732
have lean_s734 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) := by timed rfl
let lean_s735 := by timed congr lean_s723 lean_s734
have lean_s736 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) := by timed rfl
let lean_s737 := by timed congr lean_s723 lean_s736
have lean_s738 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) := by timed rfl
let lean_s739 := by timed congr lean_s723 lean_s738
have lean_s740 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) := by timed rfl
let lean_s741 := by timed congr lean_s723 lean_s740
have lean_s742 : (Eq (Eq (format (Int.ofNat 1)) (Int.ofNat 255)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))) := by timed rfl
let lean_s743 := by timed congr lean_s741 lean_s742
let lean_s744 := by timed congr lean_s739 lean_s743
let lean_s745 := by timed congr lean_s737 lean_s744
let lean_s746 := by timed congr lean_s735 lean_s745
let lean_s747 := by timed congr lean_s733 lean_s746
let lean_s748 := by timed congr lean_s730 lean_s747
have lean_s749 : (Eq (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed congr lean_s727 lean_s748
let lean_s750 := by timed congr lean_s438 lean_s749
have lean_s751 : (Eq Or Or) := by timed rfl
let lean_s752 := by timed flipCongrArg lean_s581 [Eq]
have lean_s753 : (Eq (format (Int.ofNat 2)) (format (Int.ofNat 2))) := by timed rfl
have lean_s754 : (Eq (Eq percent (format (Int.ofNat 2))) (Eq (Int.ofNat 37) (format (Int.ofNat 2)))) := by timed congr lean_s752 lean_s753
let lean_s755 := by timed congr lean_s751 lean_s754
let lean_s756 := by timed flipCongrArg lean_s586 [Eq]
have lean_s757 : (Eq (Eq s (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) := by timed congr lean_s756 lean_s753
let lean_s758 := by timed congr lean_s751 lean_s757
let lean_s759 := by timed flipCongrArg lean_s591 [Eq]
have lean_s760 : (Eq (Eq x (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) := by timed congr lean_s759 lean_s753
let lean_s761 := by timed congr lean_s751 lean_s760
have lean_s762 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) := by timed rfl
let lean_s763 := by timed congr lean_s751 lean_s762
have lean_s764 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) := by timed rfl
let lean_s765 := by timed congr lean_s751 lean_s764
have lean_s766 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) := by timed rfl
let lean_s767 := by timed congr lean_s751 lean_s766
have lean_s768 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) := by timed rfl
let lean_s769 := by timed congr lean_s751 lean_s768
have lean_s770 : (Eq (Eq (format (Int.ofNat 2)) (Int.ofNat 255)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))) := by timed rfl
let lean_s771 := by timed congr lean_s769 lean_s770
let lean_s772 := by timed congr lean_s767 lean_s771
let lean_s773 := by timed congr lean_s765 lean_s772
let lean_s774 := by timed congr lean_s763 lean_s773
let lean_s775 := by timed congr lean_s761 lean_s774
let lean_s776 := by timed congr lean_s758 lean_s775
have lean_s777 : (Eq (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed congr lean_s755 lean_s776
let lean_s778 := by timed congr lean_s438 lean_s777
have lean_s779 : (Eq Or Or) := by timed rfl
let lean_s780 := by timed flipCongrArg lean_s581 [Eq]
have lean_s781 : (Eq (format (Int.ofNat 3)) (format (Int.ofNat 3))) := by timed rfl
have lean_s782 : (Eq (Eq percent (format (Int.ofNat 3))) (Eq (Int.ofNat 37) (format (Int.ofNat 3)))) := by timed congr lean_s780 lean_s781
let lean_s783 := by timed congr lean_s779 lean_s782
let lean_s784 := by timed flipCongrArg lean_s586 [Eq]
have lean_s785 : (Eq (Eq s (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) := by timed congr lean_s784 lean_s781
let lean_s786 := by timed congr lean_s779 lean_s785
let lean_s787 := by timed flipCongrArg lean_s591 [Eq]
have lean_s788 : (Eq (Eq x (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) := by timed congr lean_s787 lean_s781
let lean_s789 := by timed congr lean_s779 lean_s788
have lean_s790 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) := by timed rfl
let lean_s791 := by timed congr lean_s779 lean_s790
have lean_s792 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) := by timed rfl
let lean_s793 := by timed congr lean_s779 lean_s792
have lean_s794 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) := by timed rfl
let lean_s795 := by timed congr lean_s779 lean_s794
have lean_s796 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) := by timed rfl
let lean_s797 := by timed congr lean_s779 lean_s796
have lean_s798 : (Eq (Eq (format (Int.ofNat 3)) (Int.ofNat 255)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))) := by timed rfl
let lean_s799 := by timed congr lean_s797 lean_s798
let lean_s800 := by timed congr lean_s795 lean_s799
let lean_s801 := by timed congr lean_s793 lean_s800
let lean_s802 := by timed congr lean_s791 lean_s801
let lean_s803 := by timed congr lean_s789 lean_s802
let lean_s804 := by timed congr lean_s786 lean_s803
have lean_s805 : (Eq (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed congr lean_s783 lean_s804
let lean_s806 := by timed congr lean_s438 lean_s805
have lean_s807 : (Eq Or Or) := by timed rfl
let lean_s808 := by timed flipCongrArg lean_s581 [Eq]
have lean_s809 : (Eq (format (Int.ofNat 4)) (format (Int.ofNat 4))) := by timed rfl
have lean_s810 : (Eq (Eq percent (format (Int.ofNat 4))) (Eq (Int.ofNat 37) (format (Int.ofNat 4)))) := by timed congr lean_s808 lean_s809
let lean_s811 := by timed congr lean_s807 lean_s810
let lean_s812 := by timed flipCongrArg lean_s586 [Eq]
have lean_s813 : (Eq (Eq s (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) := by timed congr lean_s812 lean_s809
let lean_s814 := by timed congr lean_s807 lean_s813
let lean_s815 := by timed flipCongrArg lean_s591 [Eq]
have lean_s816 : (Eq (Eq x (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) := by timed congr lean_s815 lean_s809
let lean_s817 := by timed congr lean_s807 lean_s816
have lean_s818 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) := by timed rfl
let lean_s819 := by timed congr lean_s807 lean_s818
have lean_s820 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) := by timed rfl
let lean_s821 := by timed congr lean_s807 lean_s820
have lean_s822 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) := by timed rfl
let lean_s823 := by timed congr lean_s807 lean_s822
have lean_s824 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) := by timed rfl
let lean_s825 := by timed congr lean_s807 lean_s824
have lean_s826 : (Eq (Eq (format (Int.ofNat 4)) (Int.ofNat 255)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))) := by timed rfl
let lean_s827 := by timed congr lean_s825 lean_s826
let lean_s828 := by timed congr lean_s823 lean_s827
let lean_s829 := by timed congr lean_s821 lean_s828
let lean_s830 := by timed congr lean_s819 lean_s829
let lean_s831 := by timed congr lean_s817 lean_s830
let lean_s832 := by timed congr lean_s814 lean_s831
have lean_s833 : (Eq (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed congr lean_s811 lean_s832
let lean_s834 := by timed congr lean_s438 lean_s833
let lean_s835 := by timed flipCongrArg lean_s698 [And]
have lean_s836 : (Eq (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) := by timed congr lean_s835 lean_s729
let lean_s837 := by timed flipCongrArg lean_s836 [Implies]
have lean_s838 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s839 : (Eq (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s837 lean_s838
let lean_s840 := by timed congr lean_s438 lean_s839
have lean_s841 : (Eq (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s836 [Not]
let lean_s842 := by timed flipCongrArg lean_s841 [Implies]
have lean_s843 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s844 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s842 lean_s843
let lean_s845 := by timed congr lean_s438 lean_s844
let lean_s846 := by timed flipCongrArg lean_s726 [And]
have lean_s847 : (Eq (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) := by timed congr lean_s846 lean_s757
let lean_s848 := by timed flipCongrArg lean_s847 [Implies]
have lean_s849 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s850 : (Eq (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) := by timed congr lean_s848 lean_s849
let lean_s851 := by timed congr lean_s438 lean_s850
have lean_s852 : (Eq (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s847 [Not]
let lean_s853 := by timed flipCongrArg lean_s852 [Implies]
have lean_s854 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s855 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s853 lean_s854
let lean_s856 := by timed congr lean_s438 lean_s855
let lean_s857 := by timed flipCongrArg lean_s754 [And]
have lean_s858 : (Eq (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) := by timed congr lean_s857 lean_s785
let lean_s859 := by timed flipCongrArg lean_s858 [Implies]
have lean_s860 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s861 : (Eq (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))))) := by timed congr lean_s859 lean_s860
let lean_s862 := by timed congr lean_s438 lean_s861
have lean_s863 : (Eq (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s858 [Not]
let lean_s864 := by timed flipCongrArg lean_s863 [Implies]
have lean_s865 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s866 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s864 lean_s865
let lean_s867 := by timed congr lean_s438 lean_s866
let lean_s868 := by timed flipCongrArg lean_s782 [And]
have lean_s869 : (Eq (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) := by timed congr lean_s868 lean_s813
let lean_s870 := by timed flipCongrArg lean_s869 [Implies]
have lean_s871 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s872 : (Eq (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))))) := by timed congr lean_s870 lean_s871
let lean_s873 := by timed congr lean_s438 lean_s872
have lean_s874 : (Eq (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s869 [Not]
let lean_s875 := by timed flipCongrArg lean_s874 [Implies]
have lean_s876 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s877 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s875 lean_s876
let lean_s878 := by timed congr lean_s438 lean_s877
let lean_s879 := by timed flipCongrArg lean_s810 [And]
let lean_s880 := by timed flipCongrArg lean_s586 [Eq]
have lean_s881 : (Eq (format (Int.ofNat 5)) (format (Int.ofNat 5))) := by timed rfl
have lean_s882 : (Eq (Eq s (format (Int.ofNat 5))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) := by timed congr lean_s880 lean_s881
have lean_s883 : (Eq (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) := by timed congr lean_s879 lean_s882
let lean_s884 := by timed flipCongrArg lean_s883 [Implies]
have lean_s885 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s886 : (Eq (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))))) := by timed congr lean_s884 lean_s885
let lean_s887 := by timed congr lean_s438 lean_s886
have lean_s888 : (Eq (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s883 [Not]
let lean_s889 := by timed flipCongrArg lean_s888 [Implies]
have lean_s890 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s891 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))))) := by timed congr lean_s889 lean_s890
let lean_s892 := by timed congr lean_s438 lean_s891
let lean_s893 := by timed flipCongrArg lean_s698 [And]
have lean_s894 : (Eq (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) := by timed congr lean_s893 lean_s732
let lean_s895 := by timed flipCongrArg lean_s894 [Implies]
have lean_s896 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) := by timed rfl
have lean_s897 : (Eq (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s895 lean_s896
let lean_s898 := by timed congr lean_s438 lean_s897
have lean_s899 : (Eq (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))))) := by timed flipCongrArg lean_s894 [Not]
let lean_s900 := by timed flipCongrArg lean_s899 [Implies]
have lean_s901 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) := by timed rfl
have lean_s902 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s900 lean_s901
let lean_s903 := by timed congr lean_s438 lean_s902
let lean_s904 := by timed flipCongrArg lean_s726 [And]
have lean_s905 : (Eq (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) := by timed congr lean_s904 lean_s760
let lean_s906 := by timed flipCongrArg lean_s905 [Implies]
have lean_s907 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s908 : (Eq (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) := by timed congr lean_s906 lean_s907
let lean_s909 := by timed congr lean_s438 lean_s908
have lean_s910 : (Eq (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))))) := by timed flipCongrArg lean_s905 [Not]
let lean_s911 := by timed flipCongrArg lean_s910 [Implies]
have lean_s912 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s913 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s911 lean_s912
let lean_s914 := by timed congr lean_s438 lean_s913
let lean_s915 := by timed flipCongrArg lean_s754 [And]
have lean_s916 : (Eq (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) := by timed congr lean_s915 lean_s788
let lean_s917 := by timed flipCongrArg lean_s916 [Implies]
have lean_s918 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s919 : (Eq (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))) := by timed congr lean_s917 lean_s918
let lean_s920 := by timed congr lean_s438 lean_s919
have lean_s921 : (Eq (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))))) := by timed flipCongrArg lean_s916 [Not]
let lean_s922 := by timed flipCongrArg lean_s921 [Implies]
have lean_s923 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s924 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s922 lean_s923
let lean_s925 := by timed congr lean_s438 lean_s924
let lean_s926 := by timed flipCongrArg lean_s782 [And]
have lean_s927 : (Eq (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) := by timed congr lean_s926 lean_s816
let lean_s928 := by timed flipCongrArg lean_s927 [Implies]
have lean_s929 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s930 : (Eq (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))))) := by timed congr lean_s928 lean_s929
let lean_s931 := by timed congr lean_s438 lean_s930
have lean_s932 : (Eq (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))))) := by timed flipCongrArg lean_s927 [Not]
let lean_s933 := by timed flipCongrArg lean_s932 [Implies]
have lean_s934 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s935 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s933 lean_s934
let lean_s936 := by timed congr lean_s438 lean_s935
let lean_s937 := by timed flipCongrArg lean_s810 [And]
let lean_s938 := by timed flipCongrArg lean_s591 [Eq]
have lean_s939 : (Eq (Eq x (format (Int.ofNat 5))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) := by timed congr lean_s938 lean_s881
have lean_s940 : (Eq (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) := by timed congr lean_s937 lean_s939
let lean_s941 := by timed flipCongrArg lean_s940 [Implies]
have lean_s942 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s943 : (Eq (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))))) := by timed congr lean_s941 lean_s942
let lean_s944 := by timed congr lean_s438 lean_s943
have lean_s945 : (Eq (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))))) := by timed flipCongrArg lean_s940 [Not]
let lean_s946 := by timed flipCongrArg lean_s945 [Implies]
have lean_s947 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s948 : (Eq (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))) := by timed congr lean_s946 lean_s947
let lean_s949 := by timed congr lean_s944 lean_s948
let lean_s950 := by timed congr lean_s936 lean_s949
let lean_s951 := by timed congr lean_s931 lean_s950
let lean_s952 := by timed congr lean_s925 lean_s951
let lean_s953 := by timed congr lean_s920 lean_s952
let lean_s954 := by timed congr lean_s914 lean_s953
let lean_s955 := by timed congr lean_s909 lean_s954
let lean_s956 := by timed congr lean_s903 lean_s955
let lean_s957 := by timed congr lean_s898 lean_s956
let lean_s958 := by timed congr lean_s892 lean_s957
let lean_s959 := by timed congr lean_s887 lean_s958
let lean_s960 := by timed congr lean_s878 lean_s959
let lean_s961 := by timed congr lean_s873 lean_s960
let lean_s962 := by timed congr lean_s867 lean_s961
let lean_s963 := by timed congr lean_s862 lean_s962
let lean_s964 := by timed congr lean_s856 lean_s963
let lean_s965 := by timed congr lean_s851 lean_s964
let lean_s966 := by timed congr lean_s845 lean_s965
let lean_s967 := by timed congr lean_s840 lean_s966
let lean_s968 := by timed congr lean_s834 lean_s967
let lean_s969 := by timed congr lean_s806 lean_s968
let lean_s970 := by timed congr lean_s778 lean_s969
let lean_s971 := by timed congr lean_s750 lean_s970
let lean_s972 := by timed congr lean_s722 lean_s971
let lean_s973 := by timed congr lean_s694 lean_s972
let lean_s974 := by timed congr lean_s685 lean_s973
let lean_s975 := by timed congr lean_s661 lean_s974
let lean_s976 := by timed congr lean_s645 lean_s975
let lean_s977 := by timed congr lean_s639 lean_s976
let lean_s978 := by timed congr lean_s630 lean_s977
let lean_s979 := by timed congr lean_s624 lean_s978
let lean_s980 := by timed congr lean_s617 lean_s979
let lean_s981 := by timed congr lean_s609 lean_s980
let lean_s982 := by timed congr lean_s600 lean_s981
let lean_s983 := by timed congr lean_s595 lean_s982
let lean_s984 := by timed congr lean_s590 lean_s983
let lean_s985 := by timed congr lean_s585 lean_s984
let lean_s986 := by timed congr lean_s580 lean_s985
let lean_s987 := by timed congr lean_s575 lean_s986
let lean_s988 := by timed congr lean_s571 lean_s987
let lean_s989 := by timed congr lean_s566 lean_s988
let lean_s990 := by timed congr lean_s561 lean_s989
have lean_s991 : (Eq (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s556 lean_s990
let lean_s992 := by timed flipCongrArg lean_s991 [Implies]
have lean_s993 : (Eq And And) := by timed rfl
let lean_s994 := by timed flipCongrArg lean_s581 [Eq]
have lean_s995 : (Eq (format fmt1) (format fmt1)) := by timed rfl
have lean_s996 : (Eq (Eq percent (format fmt1)) (Eq (Int.ofNat 37) (format fmt1))) := by timed congr lean_s994 lean_s995
have lean_s997 : (Eq (Not (Eq percent (format fmt1))) (Not (Eq (Int.ofNat 37) (format fmt1)))) := by timed flipCongrArg lean_s996 [Not]
let lean_s998 := by timed congr lean_s993 lean_s997
let lean_s999 := by timed flipCongrArg lean_s586 [Eq]
have lean_s1000 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) := by timed rfl
have lean_s1001 : (Eq (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)))) := by timed congr lean_s999 lean_s1000
let lean_s1002 := by timed congr lean_s993 lean_s1001
let lean_s1003 := by timed flipCongrArg lean_s562 [Eq]
have lean_s1004 : (Eq (format arg1) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s610 [format]
have lean_s1005 : (Eq (Eq adrx5flo (format arg1)) (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1003 lean_s1004
let lean_s1006 := by timed congr lean_s993 lean_s1005
let lean_s1007 := by timed flipCongrArg lean_s567 [Eq]
let lean_s1008 := by timed flipCongrArg lean_s636 [HAdd.hAdd]
have lean_s1009 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) arg1) (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s1008 lean_s610
have lean_s1010 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1)) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed flipCongrArg lean_s1009 [format]
have lean_s1011 : (Eq (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) := by timed congr lean_s1007 lean_s1010
let lean_s1012 := by timed congr lean_s993 lean_s1011
let lean_s1013 := by timed flipCongrArg lean_s572 [Eq]
let lean_s1014 := by timed flipCongrArg lean_s622 [HAdd.hAdd]
have lean_s1015 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) arg1) (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s1014 lean_s610
have lean_s1016 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1)) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed flipCongrArg lean_s1015 [format]
have lean_s1017 : (Eq (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) := by timed congr lean_s1013 lean_s1016
let lean_s1018 := by timed congr lean_s993 lean_s1017
let lean_s1019 := by timed flipCongrArg lean_s576 [Eq]
let lean_s1020 := by timed flipCongrArg lean_s564 [HAdd.hAdd]
have lean_s1021 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) arg1) (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed congr lean_s1020 lean_s610
have lean_s1022 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed flipCongrArg lean_s1021 [format]
have lean_s1023 : (Eq (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))) := by timed congr lean_s1019 lean_s1022
let lean_s1024 := by timed congr lean_s1018 lean_s1023
let lean_s1025 := by timed congr lean_s1012 lean_s1024
let lean_s1026 := by timed congr lean_s1006 lean_s1025
let lean_s1027 := by timed congr lean_s1002 lean_s1026
have lean_s1028 : (Eq (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))))))))) := by timed congr lean_s998 lean_s1027
have lean_s1029 : (Eq (Implies (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1))))))))) (Implies (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))))) := by timed congr lean_s992 lean_s1028
have lean_s1030 : (Eq (Not (Implies (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) (Not (Implies (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))))))))))) := by timed flipCongrArg lean_s1029 [Not]
have lean_s1031 : (Eq And And) := by timed rfl
let lean_s1032 := by timed congr lean_s1031 lean_r39
let lean_s1033 := by timed congr lean_s1031 lean_r119
let lean_s1034 := by timed congr lean_s1031 lean_r122
let lean_s1035 := by timed congr lean_s1031 lean_r121
let lean_s1036 := by timed congr lean_s1031 lean_r119
let lean_s1037 := by timed congr lean_s1031 lean_r113
let lean_s1038 := by timed congr lean_s1031 lean_r73
let lean_s1039 := by timed congr lean_s1031 lean_r117
let lean_s1040 := by timed congr lean_s1031 lean_r108
let lean_s1041 := by timed congr lean_s1031 lean_r107
let lean_s1042 := by timed flipCongrArg lean_s522 [Eq]
have lean_s1043 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (Eq (Neg.neg (Int.ofNat 10)) (Neg.neg (Int.ofNat 10)))) := by timed congr lean_s1042 lean_s487
have lean_s1044 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) True) := by timed Eq.trans lean_s1043 lean_r51
let lean_s1045 := by timed congr lean_s1031 lean_s1044
have lean_s1046 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed rfl
have lean_s1047 : (Eq (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))) := by timed rfl
let lean_s1048 := by timed congrHAdd lean_s1047 lean_r110
let lean_s1049 := by timed congrHAdd lean_s1046 lean_s1048
have lean_s1050 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 0))))) := by timed congrHAdd lean_s522 lean_s1049
have lean_s1051 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1050 lean_r23
have lean_s1052 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r104 lean_s1051
let lean_s1053 := by timed flipCongrArg lean_s1052 [GE.ge]
have lean_s1054 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0))) := by timed congr lean_s1053 lean_s484
have lean_s1055 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed Eq.trans lean_s1054 lean_r26
let lean_s1056 := by timed congr lean_s1031 lean_s1055
let lean_s1057 := by timed flipCongrArg lean_r85 [GE.ge]
have lean_s1058 : (Eq (Int.ofNat 2) (Int.ofNat 2)) := by timed rfl
have lean_s1059 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 5) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Int.ofNat 2))) := by timed congr lean_s1057 lean_s1058
have lean_s1060 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (Not (binrel% GE.ge fmt1 (Int.ofNat 4)))) := by timed Eq.trans lean_s1059 lean_r41
let lean_s1061 := by timed congr lean_s1031 lean_s1060
let lean_s1062 := by timed flipCongrArg lean_r50 [GE.ge]
have lean_s1063 : (Eq (Neg.neg (Int.ofNat 1)) (Neg.neg (Int.ofNat 1))) := by timed rfl
have lean_s1064 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))) (binrel% GE.ge (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Neg.neg (Int.ofNat 1)))) := by timed congr lean_s1062 lean_s1063
have lean_s1065 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1))) (Not (binrel% GE.ge fmt1 (Int.ofNat 2)))) := by timed Eq.trans lean_s1064 lean_r27
have lean_s1066 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (Not (Not (binrel% GE.ge fmt1 (Int.ofNat 2))))) := by timed flipCongrArg lean_s1065 [Not]
have lean_s1067 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (binrel% GE.ge fmt1 (Int.ofNat 2))) := by timed Eq.trans lean_s1066 lean_r29
let lean_s1068 := by timed congr lean_s1031 lean_s1067
have lean_s1069 : (Eq (Int.ofNat 10) (Int.ofNat 10)) := by timed rfl
let lean_s1070 := by timed congrHAdd lean_r35 lean_s1069
have lean_s1071 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 10)))) := by timed congrHAdd lean_s522 lean_s1070
have lean_s1072 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1071 lean_r32
let lean_s1073 := by timed flipCongrArg lean_s1072 [GE.ge]
have lean_s1074 : (Eq (Int.ofNat 1) (Int.ofNat 1)) := by timed rfl
have lean_s1075 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1))) := by timed congr lean_s1073 lean_s1074
have lean_s1076 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) := by timed Eq.trans lean_s1075 lean_r34
have lean_s1077 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (Not (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))))) := by timed flipCongrArg lean_s1076 [Not]
have lean_s1078 : (Eq (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) := by timed Eq.trans lean_s1077 lean_r53
let lean_s1079 := by timed congr lean_s1031 lean_s1078
have lean_s1080 : (Eq (Int.ofNat 5) (Int.ofNat 5)) := by timed rfl
let lean_s1081 := by timed congrHAdd lean_s1069 lean_s1080
let lean_s1082 := by timed congrHAdd lean_r35 lean_s1081
have lean_s1083 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Int.ofNat 10) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5))))) := by timed congrHAdd lean_s522 lean_s1082
have lean_s1084 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (binrel% HAdd.hAdd (Int.ofNat 15) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_s1083 lean_r37
let lean_s1085 := by timed flipCongrArg lean_s1084 [GE.ge]
have lean_s1086 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 15) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 5))) := by timed congr lean_s1085 lean_s1080
have lean_s1087 : (Eq (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)))) := by timed Eq.trans lean_s1086 lean_r92
let lean_s1088 := by timed congr lean_s1031 lean_s1087
let lean_s1089 := by timed flipCongrArg lean_s522 [Eq]
let lean_s1090 := by timed congrHAdd lean_s531 lean_s534
let lean_s1091 := by timed congrHAdd lean_s1047 lean_s1090
let lean_s1092 := by timed congrHAdd lean_s1046 lean_s1091
have lean_s1093 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congrHAdd lean_s522 lean_s1092
have lean_s1094 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))))) (Neg.neg (Int.ofNat 10))) := by timed Eq.trans lean_s1093 lean_r42
have lean_s1095 : (Eq (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))))) (Neg.neg (Int.ofNat 10))) := by timed Eq.trans lean_r56 lean_s1094
have lean_s1096 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (Eq (Neg.neg (Int.ofNat 10)) (Neg.neg (Int.ofNat 10)))) := by timed congr lean_s1089 lean_s1095
have lean_s1097 : (Eq (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) True) := by timed Eq.trans lean_s1096 lean_r51
let lean_s1098 := by timed congr lean_s1031 lean_s1097
have lean_s1099 : (Eq Or Or) := by timed rfl
let lean_s1100 := by timed congr lean_s1099 lean_r129
let lean_s1101 := by timed congr lean_s1099 lean_r61
let lean_s1102 := by timed congr lean_s1099 lean_r30
let lean_s1103 := by timed congr lean_s1099 lean_r44
let lean_s1104 := by timed congr lean_s1103 lean_r66
let lean_s1105 := by timed congr lean_s1102 lean_s1104
let lean_s1106 := by timed congr lean_s1101 lean_s1105
have lean_s1107 : (Eq (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4))))))) := by timed congr lean_s1100 lean_s1106
let lean_s1108 := by timed congr lean_s1031 lean_s1107
let lean_s1109 := by timed flipCongrArg lean_r47 [Or]
have lean_s1110 : (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed rfl
let lean_s1111 := by timed flipCongrArg lean_s1110 [Eq]
have lean_s1112 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 1))) := by timed congr lean_s1111 lean_r144
have lean_s1113 : (Eq (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0))) False) := by timed Eq.trans lean_s1112 lean_r142
have lean_s1114 : (Eq (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (Or False False)) := by timed congr lean_s1109 lean_s1113
have lean_s1115 : (Eq (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) False) := by timed Eq.trans lean_s1114 lean_r57
let lean_s1116 := by timed congr lean_s1031 lean_s1115
have lean_s1117 : (Eq Or Or) := by timed rfl
let lean_s1118 := by timed congr lean_s1117 lean_r62
let lean_s1119 := by timed congr lean_s1117 lean_r112
let lean_s1120 := by timed congr lean_s1117 lean_r72
let lean_s1121 := by timed congr lean_s1117 lean_s127
let lean_s1122 := by timed congr lean_s1117 lean_s129
let lean_s1123 := by timed congr lean_s1117 lean_s131
let lean_s1124 := by timed congr lean_s1117 lean_s133
let lean_s1125 := by timed congr lean_s1124 lean_s135
let lean_s1126 := by timed congr lean_s1123 lean_s1125
let lean_s1127 := by timed congr lean_s1122 lean_s1126
let lean_s1128 := by timed congr lean_s1121 lean_s1127
let lean_s1129 := by timed congr lean_s1120 lean_s1128
let lean_s1130 := by timed congr lean_s1119 lean_s1129
have lean_s1131 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255)))))))))) := by timed congr lean_s1118 lean_s1130
let lean_s1132 := by timed congr lean_s1031 lean_s1131
have lean_s1133 : (Eq Or Or) := by timed rfl
let lean_s1134 := by timed congr lean_s1133 lean_r70
let lean_s1135 := by timed congr lean_s1133 lean_r67
let lean_s1136 := by timed congr lean_s1133 lean_r77
let lean_s1137 := by timed congr lean_s1133 lean_s149
let lean_s1138 := by timed congr lean_s1133 lean_s151
let lean_s1139 := by timed congr lean_s1133 lean_s153
let lean_s1140 := by timed congr lean_s1133 lean_s155
let lean_s1141 := by timed congr lean_s1140 lean_s157
let lean_s1142 := by timed congr lean_s1139 lean_s1141
let lean_s1143 := by timed congr lean_s1138 lean_s1142
let lean_s1144 := by timed congr lean_s1137 lean_s1143
let lean_s1145 := by timed congr lean_s1136 lean_s1144
let lean_s1146 := by timed congr lean_s1135 lean_s1145
have lean_s1147 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))))))))) := by timed congr lean_s1134 lean_s1146
let lean_s1148 := by timed congr lean_s1031 lean_s1147
have lean_s1149 : (Eq Or Or) := by timed rfl
let lean_s1150 := by timed congr lean_s1149 lean_r158
let lean_s1151 := by timed congr lean_s1149 lean_r45
let lean_s1152 := by timed congr lean_s1149 lean_r97
let lean_s1153 := by timed congr lean_s1149 lean_s171
let lean_s1154 := by timed congr lean_s1149 lean_s173
let lean_s1155 := by timed congr lean_s1149 lean_s175
let lean_s1156 := by timed congr lean_s1149 lean_s177
let lean_s1157 := by timed congr lean_s1156 lean_s179
let lean_s1158 := by timed congr lean_s1155 lean_s1157
let lean_s1159 := by timed congr lean_s1154 lean_s1158
let lean_s1160 := by timed congr lean_s1153 lean_s1159
let lean_s1161 := by timed congr lean_s1152 lean_s1160
let lean_s1162 := by timed congr lean_s1151 lean_s1161
have lean_s1163 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))))))))) := by timed congr lean_s1150 lean_s1162
let lean_s1164 := by timed congr lean_s1031 lean_s1163
have lean_s1165 : (Eq Or Or) := by timed rfl
let lean_s1166 := by timed congr lean_s1165 lean_r95
let lean_s1167 := by timed congr lean_s1165 lean_r103
let lean_s1168 := by timed congr lean_s1165 lean_r98
let lean_s1169 := by timed congr lean_s1165 lean_s193
let lean_s1170 := by timed congr lean_s1165 lean_s195
let lean_s1171 := by timed congr lean_s1165 lean_s197
let lean_s1172 := by timed congr lean_s1165 lean_s199
let lean_s1173 := by timed congr lean_s1172 lean_s201
let lean_s1174 := by timed congr lean_s1171 lean_s1173
let lean_s1175 := by timed congr lean_s1170 lean_s1174
let lean_s1176 := by timed congr lean_s1169 lean_s1175
let lean_s1177 := by timed congr lean_s1168 lean_s1176
let lean_s1178 := by timed congr lean_s1167 lean_s1177
have lean_s1179 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))))))))) := by timed congr lean_s1166 lean_s1178
let lean_s1180 := by timed congr lean_s1031 lean_s1179
have lean_s1181 : (Eq Or Or) := by timed rfl
let lean_s1182 := by timed congr lean_s1181 lean_r89
let lean_s1183 := by timed congr lean_s1181 lean_r100
let lean_s1184 := by timed congr lean_s1181 lean_r55
let lean_s1185 := by timed congr lean_s1181 lean_s215
let lean_s1186 := by timed congr lean_s1181 lean_s217
let lean_s1187 := by timed congr lean_s1181 lean_s219
let lean_s1188 := by timed congr lean_s1181 lean_s221
let lean_s1189 := by timed congr lean_s1188 lean_s223
let lean_s1190 := by timed congr lean_s1187 lean_s1189
let lean_s1191 := by timed congr lean_s1186 lean_s1190
let lean_s1192 := by timed congr lean_s1185 lean_s1191
let lean_s1193 := by timed congr lean_s1184 lean_s1192
let lean_s1194 := by timed congr lean_s1183 lean_s1193
have lean_s1195 : (Eq (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255)))))))))) := by timed congr lean_s1182 lean_s1194
let lean_s1196 := by timed congr lean_s1031 lean_s1195
let lean_s1197 := by timed flipCongrArg lean_r62 [And]
have lean_s1198 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) := by timed congr lean_s1197 lean_r67
let lean_s1199 := by timed flipCongrArg lean_s1198 [Implies]
have lean_s1200 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s1199 lean_s236
let lean_s1201 := by timed congr lean_s1031 lean_s1200
have lean_s1202 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1198 [Not]
let lean_s1203 := by timed flipCongrArg lean_s1202 [Implies]
have lean_s1204 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s1203 lean_s241
let lean_s1205 := by timed congr lean_s1031 lean_s1204
let lean_s1206 := by timed flipCongrArg lean_r70 [And]
have lean_s1207 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) := by timed congr lean_s1206 lean_r45
let lean_s1208 := by timed flipCongrArg lean_s1207 [Implies]
have lean_s1209 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s1210 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1)))))) := by timed congr lean_s1208 lean_s1209
let lean_s1211 := by timed congr lean_s1031 lean_s1210
have lean_s1212 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1207 [Not]
let lean_s1213 := by timed flipCongrArg lean_s1212 [Implies]
have lean_s1214 : (Eq (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1215 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1))))) := by timed congr lean_s1213 lean_s1214
let lean_s1216 := by timed congr lean_s1031 lean_s1215
let lean_s1217 := by timed flipCongrArg lean_r158 [And]
have lean_s1218 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) := by timed congr lean_s1217 lean_r103
let lean_s1219 := by timed flipCongrArg lean_s1218 [Implies]
have lean_s1220 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s1221 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))))) := by timed congr lean_s1219 lean_s1220
let lean_s1222 := by timed congr lean_s1031 lean_s1221
have lean_s1223 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1218 [Not]
let lean_s1224 := by timed flipCongrArg lean_s1223 [Implies]
have lean_s1225 : (Eq (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1226 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) := by timed congr lean_s1224 lean_s1225
let lean_s1227 := by timed congr lean_s1031 lean_s1226
let lean_s1228 := by timed flipCongrArg lean_r95 [And]
have lean_s1229 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) := by timed congr lean_s1228 lean_r100
let lean_s1230 := by timed flipCongrArg lean_s1229 [Implies]
have lean_s1231 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s1232 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3)))))) := by timed congr lean_s1230 lean_s1231
let lean_s1233 := by timed congr lean_s1031 lean_s1232
have lean_s1234 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1229 [Not]
let lean_s1235 := by timed flipCongrArg lean_s1234 [Implies]
have lean_s1236 : (Eq (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s1237 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3))))) := by timed congr lean_s1235 lean_s1236
let lean_s1238 := by timed congr lean_s1031 lean_s1237
let lean_s1239 := by timed flipCongrArg lean_r89 [And]
have lean_s1240 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) := by timed congr lean_s1239 lean_r76
let lean_s1241 := by timed flipCongrArg lean_s1240 [Implies]
have lean_s1242 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s1243 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4)))))) := by timed congr lean_s1241 lean_s1242
let lean_s1244 := by timed congr lean_s1031 lean_s1243
have lean_s1245 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))))) := by timed flipCongrArg lean_s1240 [Not]
let lean_s1246 := by timed flipCongrArg lean_s1245 [Implies]
have lean_s1247 : (Eq (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s1248 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4))))) := by timed congr lean_s1246 lean_s1247
let lean_s1249 := by timed congr lean_s1031 lean_s1248
let lean_s1250 := by timed flipCongrArg lean_r62 [And]
have lean_s1251 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) := by timed congr lean_s1250 lean_r77
let lean_s1252 := by timed flipCongrArg lean_s1251 [Implies]
have lean_s1253 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) := by timed congr lean_s1252 lean_s299
let lean_s1254 := by timed congr lean_s1031 lean_s1253
have lean_s1255 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1251 [Not]
let lean_s1256 := by timed flipCongrArg lean_s1255 [Implies]
have lean_s1257 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) := by timed congr lean_s1256 lean_s304
let lean_s1258 := by timed congr lean_s1031 lean_s1257
let lean_s1259 := by timed flipCongrArg lean_r70 [And]
have lean_s1260 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) := by timed congr lean_s1259 lean_r97
let lean_s1261 := by timed flipCongrArg lean_s1260 [Implies]
have lean_s1262 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) := by timed rfl
have lean_s1263 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1)))))) := by timed congr lean_s1261 lean_s1262
let lean_s1264 := by timed congr lean_s1031 lean_s1263
have lean_s1265 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1260 [Not]
let lean_s1266 := by timed flipCongrArg lean_s1265 [Implies]
have lean_s1267 : (Eq (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) := by timed rfl
have lean_s1268 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1))))) := by timed congr lean_s1266 lean_s1267
let lean_s1269 := by timed congr lean_s1031 lean_s1268
let lean_s1270 := by timed flipCongrArg lean_r158 [And]
have lean_s1271 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) := by timed congr lean_s1270 lean_r98
let lean_s1272 := by timed flipCongrArg lean_s1271 [Implies]
have lean_s1273 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed rfl
have lean_s1274 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))))) := by timed congr lean_s1272 lean_s1273
let lean_s1275 := by timed congr lean_s1031 lean_s1274
have lean_s1276 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1271 [Not]
let lean_s1277 := by timed flipCongrArg lean_s1276 [Implies]
have lean_s1278 : (Eq (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) := by timed rfl
have lean_s1279 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) := by timed congr lean_s1277 lean_s1278
let lean_s1280 := by timed congr lean_s1031 lean_s1279
let lean_s1281 := by timed flipCongrArg lean_r95 [And]
have lean_s1282 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) := by timed congr lean_s1281 lean_r55
let lean_s1283 := by timed flipCongrArg lean_s1282 [Implies]
have lean_s1284 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) := by timed rfl
have lean_s1285 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3)))))) := by timed congr lean_s1283 lean_s1284
let lean_s1286 := by timed congr lean_s1031 lean_s1285
have lean_s1287 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1282 [Not]
let lean_s1288 := by timed flipCongrArg lean_s1287 [Implies]
have lean_s1289 : (Eq (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) := by timed rfl
have lean_s1290 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3))))) := by timed congr lean_s1288 lean_s1289
let lean_s1291 := by timed congr lean_s1031 lean_s1290
let lean_s1292 := by timed flipCongrArg lean_r89 [And]
have lean_s1293 : (Eq (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) := by timed congr lean_s1292 lean_r83
let lean_s1294 := by timed flipCongrArg lean_s1293 [Implies]
have lean_s1295 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) := by timed rfl
have lean_s1296 : (Eq (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4)))))) := by timed congr lean_s1294 lean_s1295
let lean_s1297 := by timed congr lean_s1031 lean_s1296
have lean_s1298 : (Eq (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))))) := by timed flipCongrArg lean_s1293 [Not]
let lean_s1299 := by timed flipCongrArg lean_s1298 [Implies]
have lean_s1300 : (Eq (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) := by timed rfl
have lean_s1301 : (Eq (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))) := by timed congr lean_s1299 lean_s1300
let lean_s1302 := by timed congr lean_s1297 lean_s1301
let lean_s1303 := by timed congr lean_s1291 lean_s1302
let lean_s1304 := by timed congr lean_s1286 lean_s1303
let lean_s1305 := by timed congr lean_s1280 lean_s1304
let lean_s1306 := by timed congr lean_s1275 lean_s1305
let lean_s1307 := by timed congr lean_s1269 lean_s1306
let lean_s1308 := by timed congr lean_s1264 lean_s1307
let lean_s1309 := by timed congr lean_s1258 lean_s1308
let lean_s1310 := by timed congr lean_s1254 lean_s1309
let lean_s1311 := by timed congr lean_s1249 lean_s1310
let lean_s1312 := by timed congr lean_s1244 lean_s1311
let lean_s1313 := by timed congr lean_s1238 lean_s1312
let lean_s1314 := by timed congr lean_s1233 lean_s1313
let lean_s1315 := by timed congr lean_s1227 lean_s1314
let lean_s1316 := by timed congr lean_s1222 lean_s1315
let lean_s1317 := by timed congr lean_s1216 lean_s1316
let lean_s1318 := by timed congr lean_s1211 lean_s1317
let lean_s1319 := by timed congr lean_s1205 lean_s1318
let lean_s1320 := by timed congr lean_s1201 lean_s1319
let lean_s1321 := by timed congr lean_s1196 lean_s1320
let lean_s1322 := by timed congr lean_s1180 lean_s1321
let lean_s1323 := by timed congr lean_s1164 lean_s1322
let lean_s1324 := by timed congr lean_s1148 lean_s1323
let lean_s1325 := by timed congr lean_s1132 lean_s1324
let lean_s1326 := by timed congr lean_s1116 lean_s1325
let lean_s1327 := by timed congr lean_s1108 lean_s1326
let lean_s1328 := by timed congr lean_s1098 lean_s1327
let lean_s1329 := by timed congr lean_s1088 lean_s1328
let lean_s1330 := by timed congr lean_s1079 lean_s1329
let lean_s1331 := by timed congr lean_s1068 lean_s1330
let lean_s1332 := by timed congr lean_s1061 lean_s1331
let lean_s1333 := by timed congr lean_s1056 lean_s1332
let lean_s1334 := by timed congr lean_s1045 lean_s1333
let lean_s1335 := by timed congr lean_s1041 lean_s1334
let lean_s1336 := by timed congr lean_s1040 lean_s1335
let lean_s1337 := by timed congr lean_s1039 lean_s1336
let lean_s1338 := by timed congr lean_s1038 lean_s1337
let lean_s1339 := by timed congr lean_s1037 lean_s1338
let lean_s1340 := by timed congr lean_s1036 lean_s1339
let lean_s1341 := by timed congr lean_s1035 lean_s1340
let lean_s1342 := by timed congr lean_s1034 lean_s1341
let lean_s1343 := by timed congr lean_s1033 lean_s1342
have lean_s1344 : (Eq (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge fmt1 (Int.ofNat 4))) (And (binrel% GE.ge fmt1 (Int.ofNat 2)) (And (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (Int.ofNat 3))) (And True (And (Or (Eq fmt1 (Int.ofNat 0)) (Or (Eq fmt1 (Int.ofNat 1)) (Or (Eq fmt1 (Int.ofNat 2)) (Or (Eq fmt1 (Int.ofNat 3)) (Eq fmt1 (Int.ofNat 4)))))) (And False (And (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 115)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 120)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 115)))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (format (Int.ofNat 0)) (Int.ofNat 37)) (Eq (format (Int.ofNat 1)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (format (Int.ofNat 1)) (Int.ofNat 37)) (Eq (format (Int.ofNat 2)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (format (Int.ofNat 2)) (Int.ofNat 37)) (Eq (format (Int.ofNat 3)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (format (Int.ofNat 3)) (Int.ofNat 37)) (Eq (format (Int.ofNat 4)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (format (Int.ofNat 4)) (Int.ofNat 37)) (Eq (format (Int.ofNat 5)) (Int.ofNat 120)))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4)))))))))))))))))))))))))))))))))))))))))))))))) := by timed congr lean_s1032 lean_s1343
have lean_s1345 : (Eq (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) False) := by timed Eq.trans lean_s1344 lean_r165
let lean_s1346 := by timed flipCongrArg lean_s1345 [Implies]
have lean_s1347 : (Eq And And) := by timed rfl
have lean_s1348 : (Eq (Not (Eq (Int.ofNat 37) (format fmt1))) (Not (Eq (format fmt1) (Int.ofNat 37)))) := by timed flipCongrArg lean_r79 [Not]
let lean_s1349 := by timed congr lean_s1347 lean_s1348
let lean_s1350 := by timed congr lean_s1347 lean_r52
let lean_s1351 := by timed congr lean_s1347 lean_r102
let lean_s1352 := by timed flipCongrArg lean_s68 [Eq]
have lean_s1353 : (Eq (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r28 lean_r59
have lean_s1354 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s1353 [format]
have lean_s1355 : (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1352 lean_s1354
have lean_s1356 : (Eq (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4))) := by timed Eq.trans lean_s1355 lean_r64
let lean_s1357 := by timed congr lean_s1347 lean_s1356
let lean_s1358 := by timed flipCongrArg lean_s1080 [Eq]
have lean_s1359 : (Eq (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r88 lean_r33
have lean_s1360 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s1359 [format]
have lean_s1361 : (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1358 lean_s1360
have lean_s1362 : (Eq (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5))) := by timed Eq.trans lean_s1361 lean_r68
let lean_s1363 := by timed congr lean_s1347 lean_s1362
have lean_s1364 : (Eq (Int.ofNat 6) (Int.ofNat 6)) := by timed rfl
let lean_s1365 := by timed flipCongrArg lean_s1364 [Eq]
have lean_s1366 : (Eq (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) := by timed Eq.trans lean_r54 lean_r58
have lean_s1367 : (Eq (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) := by timed flipCongrArg lean_s1366 [format]
have lean_s1368 : (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) := by timed congr lean_s1365 lean_s1367
have lean_s1369 : (Eq (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))) := by timed Eq.trans lean_s1368 lean_r49
let lean_s1370 := by timed congr lean_s1363 lean_s1369
let lean_s1371 := by timed congr lean_s1357 lean_s1370
let lean_s1372 := by timed congr lean_s1351 lean_s1371
let lean_s1373 := by timed congr lean_s1350 lean_s1372
have lean_s1374 : (Eq (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))) (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6)))))))) := by timed congr lean_s1349 lean_s1373
have lean_s1375 : (Eq (Implies (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))))))))) (Implies False (And (Not (Eq (format fmt1) (Int.ofNat 37))) (And (Eq (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1)) (Int.ofNat 115)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 3)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 4)) (And (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 8)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 5)) (Eq (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 6))))))))) := by timed congr lean_s1346 lean_s1374
have lean_s1376 : (Eq (Implies (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))))))))) True) := by timed Eq.trans lean_s1375 lean_r80
have lean_s1377 : (Eq (Not (Implies (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))))) (Not True)) := by timed flipCongrArg lean_s1376 [Not]
have lean_s1378 : (Eq (Not (Implies (And (Eq (Int.ofNat 10) (Int.ofNat 10)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 3) (Int.ofNat 3)) (And (Eq (Int.ofNat 4) (Int.ofNat 4)) (And (Eq (Int.ofNat 5) (Int.ofNat 5)) (And (Eq (Int.ofNat 6) (Int.ofNat 6)) (And (Eq (Int.ofNat 37) (Int.ofNat 37)) (And (Eq (Int.ofNat 115) (Int.ofNat 115)) (And (Eq (Int.ofNat 120) (Int.ofNat 120)) (And (Eq (Int.ofNat 0) (Int.ofNat 0)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 10)))) (And (binrel% GE.ge (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0))) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) (Int.ofNat 5))) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Int.ofNat 0) (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (Int.ofNat 10))) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))) (binrel% HAdd.hAdd (Int.ofNat 10) (Int.ofNat 5)))) (Int.ofNat 5)) (And (Eq (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) (Int.ofNat 0)) fmt1))))))) (And (Or (Eq (Int.ofNat 0) fmt1) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq (Int.ofNat 0) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (Int.ofNat 0)) (Eq (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))) (binrel% HAdd.hAdd (Int.ofNat 1) (Int.ofNat 0)))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 0))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 1))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 2))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 3))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 115) (format (Int.ofNat 4))) (Or (Eq (Int.ofNat 120) (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 115) (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 115) (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 115) (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 115) (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 115) (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 0))) (Eq (Int.ofNat 120) (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 1))) (Eq (Int.ofNat 120) (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 2))) (Eq (Int.ofNat 120) (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 3))) (Eq (Int.ofNat 120) (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq (Int.ofNat 37) (format (Int.ofNat 4))) (Eq (Int.ofNat 120) (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq (Int.ofNat 37) (format fmt1))) (And (Eq (Int.ofNat 115) (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq (Int.ofNat 3) (format (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))) (And (Eq (Int.ofNat 4) (format (binrel% HAdd.hAdd (Int.ofNat 1) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (And (Eq (Int.ofNat 5) (format (binrel% HAdd.hAdd (Int.ofNat 2) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)))))))) (Eq (Int.ofNat 6) (format (binrel% HAdd.hAdd (Int.ofNat 3) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1))))))))))))))) False) := by timed Eq.trans lean_s1377 lean_r84
have lean_s1379 : (Eq (Not (Implies (And (Eq distance (Int.ofNat 10)) (And (Eq fmtx5flength (Int.ofNat 5)) (And (Eq adrx5flo (Int.ofNat 3)) (And (Eq adrx5fmedlo (Int.ofNat 4)) (And (Eq adrx5fmedhi (Int.ofNat 5)) (And (Eq adrx5fhi (Int.ofNat 6)) (And (Eq percent (Int.ofNat 37)) (And (Eq s (Int.ofNat 115)) (And (Eq x (Int.ofNat 120)) (And (Eq fmt0 (Int.ofNat 0)) (And (Eq arg0 (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) distance))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg1 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0)) (Int.ofNat 0)) (And (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1) fmtx5flength)) (Int.ofNat 2)) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd fmt0 (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt1)) (Neg.neg (Int.ofNat 1)))) (And (Not (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) distance)) (Int.ofNat 1))) (And (binrel% GE.ge (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) arg1) (binrel% HAdd.hAdd distance fmtx5flength))) (Int.ofNat 5)) (And (Eq arg0 (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (sx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1)))) (binrel% HMul.hMul (Neg.neg (Int.ofNat 4)) (xx5fcount (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) (binrel% HAdd.hAdd (binrel% HMul.hMul (Neg.neg (Int.ofNat 1)) fmt0) fmt1))))))) (And (Or (Eq fmt0 fmt1) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 2)) fmt1)) (Or (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 3)) fmt1)) (Eq fmt0 (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 4)) fmt1)))))) (And (Or (Eq arg1 fmt0) (Eq arg1 (binrel% HAdd.hAdd (Int.ofNat 1) fmt0))) (And (Or (Eq percent (format (Int.ofNat 0))) (Or (Eq s (format (Int.ofNat 0))) (Or (Eq x (format (Int.ofNat 0))) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 0)) (Int.ofNat 6)) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 1))) (Or (Eq s (format (Int.ofNat 1))) (Or (Eq x (format (Int.ofNat 1))) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 1)) (Int.ofNat 6)) (Eq (format (Int.ofNat 1)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 2))) (Or (Eq s (format (Int.ofNat 2))) (Or (Eq x (format (Int.ofNat 2))) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 2)) (Int.ofNat 6)) (Eq (format (Int.ofNat 2)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 3))) (Or (Eq s (format (Int.ofNat 3))) (Or (Eq x (format (Int.ofNat 3))) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 3)) (Int.ofNat 6)) (Eq (format (Int.ofNat 3)) (Int.ofNat 255))))))))) (And (Or (Eq percent (format (Int.ofNat 4))) (Or (Eq s (format (Int.ofNat 4))) (Or (Eq x (format (Int.ofNat 4))) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 3)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 4)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 5)) (Or (Eq (format (Int.ofNat 4)) (Int.ofNat 6)) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))))))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1)))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq s (format (Int.ofNat 1))))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2)))) (Eq (sx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq s (format (Int.ofNat 2))))) (Eq (sx5fcount (Int.ofNat 0)) (sx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3)))) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq s (format (Int.ofNat 3))))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4)))) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq s (format (Int.ofNat 4))))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5)))) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (sx5fcount (Int.ofNat 4))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq s (format (Int.ofNat 5))))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 4)))) (And (Implies (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1)))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 0))) (Eq x (format (Int.ofNat 1))))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0))) (And (Implies (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2)))) (Eq (xx5fcount (Int.ofNat 0)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 1))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 1))) (Eq x (format (Int.ofNat 2))))) (Eq (xx5fcount (Int.ofNat 0)) (xx5fcount (Int.ofNat 1)))) (And (Implies (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3)))) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 2))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 2))) (Eq x (format (Int.ofNat 3))))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 2)))) (And (Implies (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4)))) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 3))))) (And (Implies (Not (And (Eq percent (format (Int.ofNat 3))) (Eq x (format (Int.ofNat 4))))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 3)))) (And (Implies (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5)))) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 1)) (xx5fcount (Int.ofNat 4))))) (Implies (Not (And (Eq percent (format (Int.ofNat 4))) (Eq x (format (Int.ofNat 5))))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 4))))))))))))))))))))))))))))))))))))))))))))))) (And (Not (Eq percent (format fmt1))) (And (Eq s (format (binrel% HAdd.hAdd (Int.ofNat 1) fmt1))) (And (Eq adrx5flo (format arg1)) (And (Eq adrx5fmedlo (format (binrel% HAdd.hAdd (Int.ofNat 1) arg1))) (And (Eq adrx5fmedhi (format (binrel% HAdd.hAdd (Int.ofNat 2) arg1))) (Eq adrx5fhi (format (binrel% HAdd.hAdd (Int.ofNat 3) arg1)))))))))) False) := by timed Eq.trans lean_s1030 lean_s1378
have lean_s1380 : (Eq (Not (Implies (And (And (And (And (And (And (And (And (And (And (And (Eq distance (Int.ofNat 10)) (Eq fmtx5flength (Int.ofNat 5))) (Eq adrx5flo (Int.ofNat 3))) (Eq adrx5fmedlo (Int.ofNat 4))) (Eq adrx5fmedhi (Int.ofNat 5))) (Eq adrx5fhi (Int.ofNat 6))) (And (And (Eq percent (Int.ofNat 37)) (Eq s (Int.ofNat 115))) (Eq x (Int.ofNat 120)))) (And (And (And (And (And (And (And (Eq fmt0 (Int.ofNat 0)) (Eq arg0 (binrel% HSub.hSub fmt0 distance))) (binrel% GE.ge arg1 fmt0)) (binrel% LT.lt fmt1 (binrel% HAdd.hAdd fmt0 (binrel% HSub.hSub fmtx5flength (Int.ofNat 1))))) (binrel% GT.gt fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))) (binrel% LT.lt arg1 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HSub.hSub fmtx5flength (Int.ofNat 4)))))) (Eq arg1 (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 (binrel% HMul.hMul (Int.ofNat 4) (sx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0)))) (binrel% HMul.hMul (Int.ofNat 4) (xx5fcount (binrel% HSub.hSub (binrel% HSub.hSub fmt1 (Int.ofNat 2)) fmt0))))))) (And (Or (Or (Or (Or (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 2)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 3)))) (Eq fmt1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 4)))) (Or (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 0))) (Eq arg1 (binrel% HAdd.hAdd fmt0 (Int.ofNat 1)))))) (And (And (And (And (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 0)) s)) (Eq (format (Int.ofNat 0)) x)) (Eq (format (Int.ofNat 0)) (Int.ofNat 3))) (Eq (format (Int.ofNat 0)) (Int.ofNat 4))) (Eq (format (Int.ofNat 0)) (Int.ofNat 5))) (Eq (format (Int.ofNat 0)) (Int.ofNat 6))) (Eq (format (Int.ofNat 0)) (Int.ofNat 255))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (format (Int.ofNat 1)) x)) (Eq (format (Int.ofNat 1)) (Int.ofNat 3))) (Eq (format (Int.ofNat 1)) (Int.ofNat 4))) (Eq (format (Int.ofNat 1)) (Int.ofNat 5))) (Eq (format (Int.ofNat 1)) (Int.ofNat 6))) (Eq (format (Int.ofNat 1)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (format (Int.ofNat 2)) x)) (Eq (format (Int.ofNat 2)) (Int.ofNat 3))) (Eq (format (Int.ofNat 2)) (Int.ofNat 4))) (Eq (format (Int.ofNat 2)) (Int.ofNat 5))) (Eq (format (Int.ofNat 2)) (Int.ofNat 6))) (Eq (format (Int.ofNat 2)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (format (Int.ofNat 3)) x)) (Eq (format (Int.ofNat 3)) (Int.ofNat 3))) (Eq (format (Int.ofNat 3)) (Int.ofNat 4))) (Eq (format (Int.ofNat 3)) (Int.ofNat 5))) (Eq (format (Int.ofNat 3)) (Int.ofNat 6))) (Eq (format (Int.ofNat 3)) (Int.ofNat 255)))) (Or (Or (Or (Or (Or (Or (Or (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (format (Int.ofNat 4)) x)) (Eq (format (Int.ofNat 4)) (Int.ofNat 3))) (Eq (format (Int.ofNat 4)) (Int.ofNat 4))) (Eq (format (Int.ofNat 4)) (Int.ofNat 5))) (Eq (format (Int.ofNat 4)) (Int.ofNat 6))) (Eq (format (Int.ofNat 4)) (Int.ofNat 255))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s)) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) s))) (Eq (sx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s)) (Eq (sx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) s))) (Eq (sx5fcount (Int.ofNat 1)) (sx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s)) (Eq (sx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) s))) (Eq (sx5fcount (Int.ofNat 2)) (sx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s)) (Eq (sx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) s))) (Eq (sx5fcount (Int.ofNat 3)) (sx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s)) (Eq (sx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (sx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) s))) (Eq (sx5fcount (Int.ofNat 4)) (sx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Implies (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x)) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 1))) (Implies (Not (And (Eq (format (Int.ofNat 0)) percent) (Eq (format (Int.ofNat 1)) x))) (Eq (xx5fcount (Int.ofNat 0)) (Int.ofNat 0)))) (And (Implies (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x)) (Eq (xx5fcount (Int.ofNat 1)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 0)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 1)) percent) (Eq (format (Int.ofNat 2)) x))) (Eq (xx5fcount (Int.ofNat 1)) (xx5fcount (Int.ofNat 0)))))) (And (Implies (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x)) (Eq (xx5fcount (Int.ofNat 2)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 1)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 2)) percent) (Eq (format (Int.ofNat 3)) x))) (Eq (xx5fcount (Int.ofNat 2)) (xx5fcount (Int.ofNat 1)))))) (And (Implies (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x)) (Eq (xx5fcount (Int.ofNat 3)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 2)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 3)) percent) (Eq (format (Int.ofNat 4)) x))) (Eq (xx5fcount (Int.ofNat 3)) (xx5fcount (Int.ofNat 2)))))) (And (Implies (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x)) (Eq (xx5fcount (Int.ofNat 4)) (binrel% HAdd.hAdd (xx5fcount (Int.ofNat 3)) (Int.ofNat 1)))) (Implies (Not (And (Eq (format (Int.ofNat 4)) percent) (Eq (format (Int.ofNat 5)) x))) (Eq (xx5fcount (Int.ofNat 4)) (xx5fcount (Int.ofNat 3))))))) (And (And (And (And (And (Not (Eq (format fmt1) percent)) (Eq (format (binrel% HAdd.hAdd fmt1 (Int.ofNat 1))) s)) (Eq (format arg1) adrx5flo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 1))) adrx5fmedlo)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 2))) adrx5fmedhi)) (Eq (format (binrel% HAdd.hAdd arg1 (Int.ofNat 3))) adrx5fhi)))) False) := by timed Eq.trans lean_s437 lean_s1379
exact (show False from by timed eqResolve lean_a168 lean_s1380)


