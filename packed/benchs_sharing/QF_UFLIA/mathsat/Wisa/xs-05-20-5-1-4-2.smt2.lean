open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {fmtx5flength : Int}
variable {arg0 : Int}
variable {xx5fcount : (Int -> Int)}
variable {arg1 : Int}
variable {sx5fcount : (Int -> Int)}
variable {fmt0 : Int}
variable {fmt0 : Int}
variable {percent : Int}
variable {adrx5fhi : Int}
variable {fmt1 : Int}
variable {s : Int}
variable {adrx5flo : Int}
variable {adrx5fmedlo : Int}
variable {fmt1 : Int}
variable {adrx5fmedhi : Int}
variable {x : Int}
variable {arg1 : Int}
variable {x : Int}
variable {s : Int}
variable {adrx5fhi : Int}
variable {adrx5flo : Int}
variable {arg0 : Int}
variable {adrx5fmedlo : Int}
variable {fmtx5flength : Int}
variable {distance : Int}
variable {selectx5fformat : (Int -> Int)}
variable {adrx5fmedhi : Int}
variable {selectx5fformat : (Int -> Int)}
variable {percent : Int}
variable {distance : Int}
variable {xx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}

theorem th0 :
  let let1 := (Int.ofNat 3)
  let let2 := (Eq fmt1 let1)
  let let3 := (Int.ofNat 5)
  let let4 := (Int.ofNat 2)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 fmt1)
  let let7 := (xx5fcount let6)
  let let8 := (sx5fcount let6)
  let let9 := (binrel% HAdd.hAdd let8 let7)
  let let10 := (binrel% GE.ge let9 let3)
  let let11 := (And let10 let2)
  let let12 := (Int.ofNat 1)
  let let13 := (xx5fcount let12)
  let let14 := (Int.ofNat 0)
  let let15 := (xx5fcount let14)
  let let16 := (Eq let15 let13)
  let let17 := (And let16 let11)
  let let18 := (sx5fcount let12)
  let let19 := (sx5fcount let14)
  let let20 := (Eq let19 let18)
  let let21 := (And let20 let17)
  let let22 := (Eq let15 let14)
  let let23 := (And let22 let21)
  let let24 := (Eq let19 let12)
  let let25 := (And let24 let23)
  let let26 := (Not let25)
  let let27 := (Implies let25 False)
  let let28 := (Int.ofNat 37)
  let let29 := (Int.ofNat 115)
  let let30 := (Eq let29 let28)
  let let31 := (Not let30)
  let let32 := (Eq let30 False)
  let let33 := (Int.ofNat 120)
  let let34 := (Eq let29 let33)
  let let35 := (Eq let34 False)
  let let36 := (Eq let33 let28)
  let let37 := (Not let36)
  let let38 := (Eq let36 False)
  let let39 := (Rat.ofInt 1)
  let let40 := (binrel% HMul.hMul let39 let12)
  let let41 := (Neg.neg (Rat.ofInt 4))
  let let42 := (Neg.neg (Rat.ofInt 5))
  let let43 := (Rat.ofInt 0)
  let let44 := (binrel% HAdd.hAdd let43 let42)
  let let45 := (binrel% HAdd.hAdd let39 let44)
  let let46 := (Eq let19 let14)
  let let47 := (And let46 let23)
  let let48 := (Not let47)
  let let49 := (Implies let47 False)
  let let50 := (Int.ofNat 4)
  let let51 := (binrel% GE.ge fmt1 let50)
  let let52 := (Not let51)
  let let53 := (binrel% LT.lt fmt1 let50)
  let let54 := (Not let52)
  let let55 := (Eq let51 let54)
  let let56 := (Eq let54 let51)
  let let57 := (Eq fmt1 let4)
  let let58 := (Not let57)
  let let59 := (Not let58)
  let let60 := (Eq let59 let57)
  let let61 := (Eq let57 let57)
  let let62 := (Eq let18 let12)
  let let63 := (Neg.neg let12)
  let let64 := (binrel% HAdd.hAdd let63 let18)
  let let65 := (Eq let14 let64)
  let let66 := (Eq let14 let6)
  let let67 := (binrel% GT.gt let39 let14)
  let let68 := (Rat.ofInt let7)
  let let69 := (binrel% HMul.hMul let39 let7)
  let let70 := (binrel% HMul.hMul let63 let7)
  let let71 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let63 let8) let70))
  let let72 := (Neg.neg let39)
  let let73 := (binrel% HMul.hMul let72 let9)
  let let74 := (Eq let19 let64)
  let let75 := (And let46 (And let22 (And let74 let17)))
  let let76 := (Not let75)
  let let77 := (Implies let75 False)
  let let78 := (Rat.ofInt let8)
  let let79 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let68 let71))
  let let80 := (binrel% HMul.hMul let39 let14)
  let let81 := (binrel% HMul.hMul let72 let3)
  let let82 := (binrel% LE.le let43 let42)
  let let83 := (Int.ofNat 20)
  let let84 := (binrel% HAdd.hAdd let83 arg0)
  let let85 := (binrel% HAdd.hAdd arg0 let83)
  let let86 := (Neg.neg let83)
  let let87 := (Eq arg0 let86)
  let let88 := (Eq let14 let84)
  let let89 := (binrel% HAdd.hAdd arg1 let1)
  let let90 := (selectx5fformat let89)
  let let91 := (Eq let90 adrx5fhi)
  let let92 := (binrel% HAdd.hAdd arg1 let4)
  let let93 := (selectx5fformat let92)
  let let94 := (Eq let93 adrx5fmedhi)
  let let95 := (binrel% HAdd.hAdd arg1 let12)
  let let96 := (selectx5fformat let95)
  let let97 := (Eq let96 adrx5fmedlo)
  let let98 := (selectx5fformat arg1)
  let let99 := (Eq let98 adrx5flo)
  let let100 := (binrel% HAdd.hAdd fmt1 let12)
  let let101 := (selectx5fformat let100)
  let let102 := (Eq let101 s)
  let let103 := (selectx5fformat fmt1)
  let let104 := (Eq let103 percent)
  let let105 := (And (And (And (And (And let104 let102) let99) let97) let94) let91)
  let let106 := (Not let105)
  let let107 := (binrel% HAdd.hAdd fmt0 let12)
  let let108 := (Eq arg1 let107)
  let let109 := (binrel% HAdd.hAdd fmt0 let14)
  let let110 := (Eq arg1 let109)
  let let111 := (Or let110 let108)
  let let112 := (binrel% HAdd.hAdd fmt0 let50)
  let let113 := (Eq fmt1 let112)
  let let114 := (binrel% HAdd.hAdd fmt0 let1)
  let let115 := (Eq fmt1 let114)
  let let116 := (binrel% HAdd.hAdd fmt0 let4)
  let let117 := (Eq fmt1 let116)
  let let118 := (Eq fmt1 let107)
  let let119 := (Eq fmt1 let109)
  let let120 := (Or (Or (Or (Or let119 let118) let117) let115) let113)
  let let121 := (xx5fcount let1)
  let let122 := (xx5fcount let50)
  let let123 := (Eq let122 let121)
  let let124 := (binrel% HAdd.hAdd let121 let12)
  let let125 := (Eq let122 let124)
  let let126 := (selectx5fformat let3)
  let let127 := (Eq let126 x)
  let let128 := (selectx5fformat let50)
  let let129 := (Eq let128 percent)
  let let130 := (And let129 let127)
  let let131 := (smtIte let130 let125 let123 Prop)
  let let132 := (xx5fcount let4)
  let let133 := (Eq let121 let132)
  let let134 := (binrel% HAdd.hAdd let132 let12)
  let let135 := (Eq let121 let134)
  let let136 := (Eq let128 x)
  let let137 := (selectx5fformat let1)
  let let138 := (Eq let137 percent)
  let let139 := (And let138 let136)
  let let140 := (smtIte let139 let135 let133 Prop)
  let let141 := (Eq let132 let13)
  let let142 := (binrel% HAdd.hAdd let13 let12)
  let let143 := (Eq let132 let142)
  let let144 := (Eq let137 x)
  let let145 := (selectx5fformat let4)
  let let146 := (Eq let145 percent)
  let let147 := (And let146 let144)
  let let148 := (smtIte let147 let143 let141 Prop)
  let let149 := (Eq let13 let15)
  let let150 := (binrel% HAdd.hAdd let15 let12)
  let let151 := (Eq let13 let150)
  let let152 := (Eq let145 x)
  let let153 := (selectx5fformat let12)
  let let154 := (Eq let153 percent)
  let let155 := (And let154 let152)
  let let156 := (smtIte let155 let151 let149 Prop)
  let let157 := (Eq let15 let12)
  let let158 := (Eq let153 x)
  let let159 := (selectx5fformat let14)
  let let160 := (Eq let159 percent)
  let let161 := (And let160 let158)
  let let162 := (smtIte let161 let157 let22 Prop)
  let let163 := (sx5fcount let1)
  let let164 := (sx5fcount let50)
  let let165 := (Eq let164 let163)
  let let166 := (binrel% HAdd.hAdd let163 let12)
  let let167 := (Eq let164 let166)
  let let168 := (Eq let126 s)
  let let169 := (And let129 let168)
  let let170 := (smtIte let169 let167 let165 Prop)
  let let171 := (sx5fcount let4)
  let let172 := (Eq let163 let171)
  let let173 := (binrel% HAdd.hAdd let171 let12)
  let let174 := (Eq let163 let173)
  let let175 := (Eq let128 s)
  let let176 := (And let138 let175)
  let let177 := (smtIte let176 let174 let172 Prop)
  let let178 := (Eq let171 let18)
  let let179 := (binrel% HAdd.hAdd let18 let12)
  let let180 := (Eq let171 let179)
  let let181 := (Eq let137 s)
  let let182 := (And let146 let181)
  let let183 := (smtIte let182 let180 let178 Prop)
  let let184 := (Eq let18 let19)
  let let185 := (binrel% HAdd.hAdd let19 let12)
  let let186 := (Eq let18 let185)
  let let187 := (Eq let145 s)
  let let188 := (And let154 let187)
  let let189 := (smtIte let188 let186 let184 Prop)
  let let190 := (Eq let153 s)
  let let191 := (And let160 let190)
  let let192 := (smtIte let191 let24 let46 Prop)
  let let193 := (Int.ofNat 255)
  let let194 := (Eq let128 let193)
  let let195 := (Eq let128 adrx5fhi)
  let let196 := (Eq let128 adrx5fmedhi)
  let let197 := (Eq let128 adrx5fmedlo)
  let let198 := (Eq let128 adrx5flo)
  let let199 := (Eq let137 let193)
  let let200 := (Eq let137 adrx5fhi)
  let let201 := (Eq let137 adrx5fmedhi)
  let let202 := (Eq let137 adrx5fmedlo)
  let let203 := (Eq let137 adrx5flo)
  let let204 := (Eq let145 let193)
  let let205 := (Eq let145 adrx5fhi)
  let let206 := (Eq let145 adrx5fmedhi)
  let let207 := (Eq let145 adrx5fmedlo)
  let let208 := (Eq let145 adrx5flo)
  let let209 := (Eq let153 let193)
  let let210 := (Eq let153 adrx5fhi)
  let let211 := (Eq let153 adrx5fmedhi)
  let let212 := (Eq let153 adrx5fmedlo)
  let let213 := (Eq let153 adrx5flo)
  let let214 := (Eq let159 let193)
  let let215 := (Eq let159 adrx5fhi)
  let let216 := (Eq let159 adrx5fmedhi)
  let let217 := (Eq let159 adrx5fmedlo)
  let let218 := (Eq let159 adrx5flo)
  let let219 := (Eq let159 x)
  let let220 := (Eq let159 s)
  let let221 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let160 let220) let219) let218) let217) let216) let215) let214) let154) let190) let158) let213) let212) let211) let210) let209) let146) let187) let152) let208) let207) let206) let205) let204) let138) let181) let144) let203) let202) let201) let200) let199) let129) let175) let136) let198) let197) let196) let195) let194)
  let let222 := (binrel% HSub.hSub fmt1 let4)
  let let223 := (binrel% HSub.hSub let222 fmt0)
  let let224 := (xx5fcount let223)
  let let225 := (binrel% HMul.hMul let50 let224)
  let let226 := (sx5fcount let223)
  let let227 := (binrel% HMul.hMul let50 let226)
  let let228 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let227) let225)
  let let229 := (Eq arg1 let228)
  let let230 := (binrel% HAdd.hAdd arg0 distance)
  let let231 := (binrel% HAdd.hAdd let230 fmtx5flength)
  let let232 := (binrel% HSub.hSub let231 let50)
  let let233 := (binrel% LT.lt arg1 let232)
  let let234 := (binrel% GE.ge arg1 let230)
  let let235 := (binrel% GT.gt fmt1 let107)
  let let236 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let237 := (binrel% HSub.hSub let236 let12)
  let let238 := (binrel% LT.lt fmt1 let237)
  let let239 := (binrel% GE.ge arg1 fmt0)
  let let240 := (binrel% HSub.hSub fmt0 distance)
  let let241 := (Eq arg0 let240)
  let let242 := (Eq fmt0 let14)
  let let243 := (Eq x let33)
  let let244 := (Eq s let29)
  let let245 := (Eq percent let28)
  let let246 := (Eq adrx5fhi let4)
  let let247 := (Eq adrx5fmedhi let50)
  let let248 := (Eq adrx5fmedlo let12)
  let let249 := (Eq adrx5flo let3)
  let let250 := (Eq fmtx5flength let3)
  let let251 := (Eq distance let83)
  let let252 := (And let251 (And let250 (And let249 (And let248 (And let247 (And let246 (And let245 (And let244 (And let243 (And let242 (And let241 (And let239 (And let238 (And let235 (And let234 (And let233 (And let229 (And let221 (And let192 (And let189 (And let183 (And let177 (And let170 (And let162 (And let156 (And let148 (And let140 (And let131 (And let120 (And let111 let106))))))))))))))))))))))))))))))
  let let253 := (And (And (And (And (And (And (And (And (And (And (And (And (And let251 let250) let249) let248) let247) let246) let245) let244) let243) (And (And (And (And (And (And (And let242 let241) let239) let238) let235) let234) let233) let229)) let221) (And (And (And (And (And (And (And (And (And let192 let189) let183) let177) let170) let162) let156) let148) let140) let131)) (And let120 let111)) let106)
  let let254 := (binrel% LT.lt let72 let14)
  let let255 := (binrel% HMul.hMul let63 arg1)
  let let256 := (binrel% HAdd.hAdd fmt0 let255)
  let let257 := (binrel% GE.ge let256 let12)
  let let258 := (Not let257)
  let let259 := (Eq let33 let29)
  let let260 := (Not let259)
  let let261 := (Eq let259 False)
  let let262 := (binrel% HMul.hMul let63 let12)
  let let263 := (binrel% HAdd.hAdd let236 let262)
  let let264 := (binrel% HMul.hMul let63 fmtx5flength)
  let let265 := (binrel% HMul.hMul let63 fmt0)
  let let266 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let265 let264))
  let let267 := (binrel% GE.ge let266 let63)
  let let268 := (binrel% HAdd.hAdd let63 let236)
  let let269 := (binrel% GE.ge fmt1 let268)
  let let270 := (binrel% LE.le fmt1 let107)
  let let271 := (Not let270)
  let let272 := (binrel% HAdd.hAdd fmt1 let265)
  let let273 := (binrel% GE.ge let272 let4)
  let let274 := (Not let273)
  let let275 := (binrel% HAdd.hAdd let12 fmt0)
  let let276 := (binrel% LE.le fmt1 let275)
  let let277 := (Not let274)
  let let278 := (binrel% HMul.hMul let63 distance)
  let let279 := (binrel% HMul.hMul let63 arg0)
  let let280 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let279 let278))
  let let281 := (binrel% GE.ge let280 let14)
  let let282 := (binrel% GE.ge arg1 let232)
  let let283 := (Not let282)
  let let284 := (binrel% HMul.hMul let63 let50)
  let let285 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let284)))
  let let286 := (binrel% HAdd.hAdd let231 let284)
  let let287 := (Neg.neg let50)
  let let288 := (binrel% HAdd.hAdd let287 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let289 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let287)))
  let let290 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let279 (binrel% HAdd.hAdd let264 let278)))
  let let291 := (binrel% GE.ge let290 let287)
  let let292 := (binrel% GE.ge arg1 let288)
  let let293 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let227 let225))
  let let294 := (And let10 let57)
  let let295 := (And let46 (And let157 let294))
  let let296 := (Not let295)
  let let297 := (Implies let295 False)
  let let298 := (binrel% HAdd.hAdd let222 let265)
  let let299 := (binrel% HMul.hMul let63 let4)
  let let300 := (binrel% HAdd.hAdd fmt1 let299)
  let let301 := (Eq let51 let51)
  let let302 := (Eq s let159)
  let let303 := (Eq adrx5flo let159)
  let let304 := (Eq adrx5fmedlo let159)
  let let305 := (Eq adrx5fhi let159)
  let let306 := (Eq adrx5flo let153)
  let let307 := (Eq adrx5fmedlo let153)
  let let308 := (binrel% HAdd.hAdd let63 let13)
  let let309 := (Eq let15 let308)
  let let310 := (And let46 (And let22 (And let20 (And let309 let11))))
  let let311 := (Not let310)
  let let312 := (Implies let310 False)
  let let313 := (Eq adrx5fmedhi let153)
  let let314 := (Eq adrx5fmedlo let145)
  let let315 := (Eq adrx5fhi let145)
  let let316 := (Eq adrx5fmedlo let137)
  let let317 := (Eq adrx5fhi let128)
  let let318 := (Not let34)
  let let319 := (Eq s let153)
  let let320 := (Eq s let145)
  let let321 := (binrel% HAdd.hAdd let12 let19)
  let let322 := (Eq let18 let321)
  let let323 := (binrel% HAdd.hAdd fmt0 let278)
  let let324 := (Eq fmt0 let230)
  let let325 := (Eq arg0 let323)
  let let326 := (Eq s let137)
  let let327 := (binrel% HAdd.hAdd let12 let18)
  let let328 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let262))
  let let329 := (Eq let18 let171)
  let let330 := (binrel% HMul.hMul let39 let8)
  let let331 := (Eq s let128)
  let let332 := (binrel% HAdd.hAdd let12 let171)
  let let333 := (Eq let171 (binrel% HAdd.hAdd let63 let163))
  let let334 := (Eq let163 let332)
  let let335 := (Eq let171 let163)
  let let336 := (Eq s let126)
  let let337 := (binrel% HAdd.hAdd let12 let163)
  let let338 := (Eq let163 let164)
  let let339 := (Eq percent let159)
  let let340 := (Eq x let153)
  let let341 := (Eq let159 let50)
  let let342 := (Eq let50 let159)
  let let343 := (Eq let153 let12)
  let let344 := (Eq let12 let153)
  let let345 := (binrel% HAdd.hAdd let1 let14)
  let let346 := (Eq x let126)
  let let347 := (Eq let153 let50)
  let let348 := (Eq let50 let153)
  let let349 := (binrel% HMul.hMul let50 let7)
  let let350 := (binrel% HMul.hMul let50 let8)
  let let351 := (binrel% HAdd.hAdd let350 let349)
  let let352 := (binrel% HAdd.hAdd let86 let351)
  let let353 := (binrel% GE.ge let352 let14)
  let let354 := (Eq let145 let3)
  let let355 := (Eq let3 let145)
  let let356 := (Eq let13 let12)
  let let357 := (Eq let14 let308)
  let let358 := (Eq let145 let12)
  let let359 := (Eq let12 let145)
  let let360 := (Eq let137 let50)
  let let361 := (Eq let50 let137)
  let let362 := (Eq let128 let12)
  let let363 := (Eq let12 let128)
  let let364 := (Eq let128 let50)
  let let365 := (Eq let50 let128)
  let let366 := (Eq let128 let3)
  let let367 := (Eq let3 let128)
  let let368 := (Eq let145 let50)
  let let369 := (Eq let50 let145)
  let let370 := (binrel% HMul.hMul let63 let86)
  let let371 := (Eq let126 let29)
  let let372 := (Eq let29 let126)
  let let373 := (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd (binrel% HMul.hMul let287 let8) (binrel% HMul.hMul let287 let7)))
  let let374 := (binrel% HMul.hMul let63 let352)
  let let375 := (Eq let153 let29)
  let let376 := (Eq let29 let153)
  let let377 := (Eq let137 let12)
  let let378 := (Eq let12 let137)
  let let379 := (Not let10)
  let let380 := (binrel% GE.ge let373 let12)
  let let381 := (Eq fmt0 arg1)
  let let382 := (Eq arg1 fmt0)
  let let383 := (Eq adrx5fhi let153)
  let let384 := (Eq let153 let28)
  let let385 := (Eq let28 let153)
  let let386 := (Eq let29 let29)
  let let387 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let63))
  let let388 := (binrel% HAdd.hAdd let63 let352)
  let let389 := (Eq let137 let4)
  let let390 := (Eq let4 let137)
  let let391 := (Or let160 (Or let220 (Or let219 (Or let218 (Or let217 (Or let216 (Or let215 (Or let214 (Or let154 (Or let190 (Or let158 (Or let213 (Or let212 (Or let211 (Or let210 (Or let209 (Or let146 (Or let187 (Or let152 (Or let208 (Or let207 (Or let206 (Or let205 (Or let204 (Or let138 (Or let181 (Or let144 (Or let203 (Or let202 (Or let201 (Or let200 (Or let199 (Or let129 (Or let175 (Or let136 (Or let198 (Or let197 (Or let196 (Or let195 let194)))))))))))))))))))))))))))))))))))))))
  let let392 := (binrel% HAdd.hAdd let50 fmt0)
  let let393 := (binrel% HAdd.hAdd fmt1 let5)
  let let394 := (binrel% HAdd.hAdd let12 let121)
  let let395 := (selectx5fformat let352)
  let let396 := (Eq let395 let3)
  let let397 := (Eq let3 let395)
  let let398 := (binrel% HAdd.hAdd let43 let44)
  let let399 := (binrel% GE.ge let9 (Int.ofNat 6))
  let let400 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 25)) let351)
  let let401 := (binrel% GE.ge let400 let287)
  let let402 := (binrel% HAdd.hAdd let12 fmt1)
  let let403 := (selectx5fformat let402)
  let let404 := (Eq let403 let29)
  let let405 := (Eq let29 let403)
  let let406 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let351)
  let let407 := (selectx5fformat let406)
  let let408 := (Eq let407 let4)
  let let409 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 18)) let351)
  let let410 := (selectx5fformat let409)
  let let411 := (Eq let410 let50)
  let let412 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 19)) let351)
  let let413 := (selectx5fformat let412)
  let let414 := (Eq let413 let12)
  let let415 := (Eq let103 let28)
  let let416 := (And let415 (And let404 (And let396 (And let414 (And let411 let408)))))
  let let417 := (Not let416)
  let let418 := (Eq let8 (binrel% HAdd.hAdd let3 let70))
  let let419 := (Eq fmt1 let50)
  let let420 := (Eq fmt1 let12)
  let let421 := (Eq fmt1 let14)
  let let422 := (Or let421 (Or let420 (Or let57 (Or let2 let419))))
  let let423 := (Eq let121 let122)
  let let424 := (Eq let121 (binrel% HAdd.hAdd let63 let122))
  let let425 := (Eq let126 let33)
  let let426 := (Eq let128 let28)
  let let427 := (And let426 let425)
  let let428 := (smtIte let427 let424 let423 Prop)
  let let429 := (Eq let132 let121)
  let let430 := (Eq let132 (binrel% HAdd.hAdd let63 let121))
  let let431 := (Eq let128 let33)
  let let432 := (Eq let137 let28)
  let let433 := (And let432 let431)
  let let434 := (smtIte let433 let430 let429 Prop)
  let let435 := (Eq let13 let132)
  let let436 := (Eq let13 (binrel% HAdd.hAdd let63 let132))
  let let437 := (Eq let137 let33)
  let let438 := (Eq let145 let28)
  let let439 := (And let438 let437)
  let let440 := (smtIte let439 let436 let435 Prop)
  let let441 := (Eq let145 let33)
  let let442 := (And let384 let441)
  let let443 := (smtIte let442 let309 let16 Prop)
  let let444 := (Eq let153 let33)
  let let445 := (Eq let159 let28)
  let let446 := (And let445 let444)
  let let447 := (smtIte let446 let157 let22 Prop)
  let let448 := (Eq let163 (binrel% HAdd.hAdd let63 let164))
  let let449 := (And let426 let371)
  let let450 := (smtIte let449 let448 let338 Prop)
  let let451 := (Eq let128 let29)
  let let452 := (And let432 let451)
  let let453 := (smtIte let452 let333 let335 Prop)
  let let454 := (Eq let18 (binrel% HAdd.hAdd let63 let171))
  let let455 := (Eq let137 let29)
  let let456 := (And let438 let455)
  let let457 := (smtIte let456 let454 let329 Prop)
  let let458 := (Eq let145 let29)
  let let459 := (And let384 let458)
  let let460 := (smtIte let459 let74 let20 Prop)
  let let461 := (And let445 let375)
  let let462 := (smtIte let461 let24 let46 Prop)
  let let463 := (Eq let128 let4)
  let let464 := (Eq let137 let3)
  let let465 := (Eq let145 let4)
  let let466 := (Eq let153 let4)
  let let467 := (Eq let153 let3)
  let let468 := (Eq let159 let4)
  let let469 := (Eq let159 let12)
  let let470 := (Eq let159 let3)
  let let471 := (Eq let159 let33)
  let let472 := (Eq let159 let29)
  let let473 := (Or let445 (Or let472 (Or let471 (Or let470 (Or let469 (Or let341 (Or let468 (Or let214 (Or let384 (Or let375 (Or let444 (Or let467 (Or let343 (Or let347 (Or let466 (Or let209 (Or let438 (Or let458 (Or let441 (Or let354 (Or let358 (Or let368 (Or let465 (Or let204 (Or let432 (Or let455 (Or let437 (Or let464 (Or let377 (Or let360 (Or let389 (Or let199 (Or let426 (Or let451 (Or let431 (Or let366 (Or let362 (Or let364 (Or let463 let194)))))))))))))))))))))))))))))))))))))))
  let let474 := (And let473 (And let462 (And let460 (And let457 (And let453 (And let450 (And let447 (And let443 (And let440 (And let434 (And let428 (And let422 (And let418 let417)))))))))))))
  let let475 := (Not let399)
  let let476 := (binrel% GE.ge fmt1 let4)
  let let477 := (And let10 (And let52 (And let476 (And let475 let474))))
  let let478 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let10 (And let52 (And let476 (And let10 (And let475 (And True let474)))))))))))))))))
  let let479 := (binrel% HAdd.hAdd let12 let15)
  let let480 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let351)
  let let481 := (Eq let388 let480)
  let let482 := (Eq let29 let137)
  let let483 := (Eq let4 let4)
  let let484 := (Eq adrx5flo let145)
  let let485 := (Eq let33 let145)
  let let486 := (Eq let12 let6)
  let let487 := (Eq let12 let413)
  let let488 := (Eq adrx5fmedhi let145)
  let let489 := (Not let379)
  let let490 := (Eq adrx5flo let137)
  let let491 := (binrel% HAdd.hAdd let63 arg1)
  let let492 := (Eq fmt0 let491)
  let let493 := (Eq arg1 let275)
  let let494 := (Eq let4 let128)
  let let495 := (And let46 (And let157 let21))
  let let496 := (Not let495)
  let let497 := (Implies let495 False)
  let let498 := (binrel% HAdd.hAdd let12 let352)
  let let499 := (binrel% HAdd.hAdd let4 let352)
  let let500 := (Eq let29 let159)
  let let501 := (Eq let4 let407)
  let let502 := (binrel% HMul.hMul let63 let83)
  let let503 := (binrel% HAdd.hAdd let370 let502)
  let let504 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 let503)))
  let let505 := (binrel% HAdd.hAdd let352 let503)
  let let506 := (Eq let33 let159)
  let let507 := (Eq let498 let412)
  let let508 := (Eq let28 let103)
  let let509 := (Eq let50 let410)
  let let510 := (Eq let14 let352)
  let let511 := (Eq let12 let12)
  let let512 := (Eq let4 let159)
  let let513 := (binrel% HAdd.hAdd let50 let14)
  let let514 := (binrel% HAdd.hAdd let4 arg1)
  let let515 := (selectx5fformat let514)
  let let516 := (Eq adrx5fmedhi let515)
  let let517 := (Eq let515 adrx5fmedhi)
  let let518 := (Eq x let159)
  let let519 := (Eq let29 let128)
  let let520 := (Eq let14 let480)
  let let521 := (Eq let3 let137)
  let let522 := (Eq let28 let159)
  let let523 := (Eq let164 let337)
  let let524 := (Or let418 False)
  let let525 := (binrel% HAdd.hAdd let4 let14)
  let let526 := (Eq let28 let137)
  let let527 := (Eq let4 let145)
  let let528 := (Neg.neg let3)
  let let529 := (binrel% HMul.hMul let63 let3)
  let let530 := (binrel% HAdd.hAdd let12 let14)
  let let531 := (Eq adrx5fmedhi let128)
  let let532 := (Eq let33 let126)
  let let533 := (Eq s let403)
  let let534 := (Eq let403 s)
  let let535 := (Eq adrx5fmedlo let128)
  let let536 := (Eq let28 let128)
  let let537 := (Eq let3 let153)
  let let538 := (Eq let4 let153)
  let let539 := (Eq percent let128)
  let let540 := (Eq let33 let128)
  let let541 := (Eq x let128)
  let let542 := (Eq let12 let159)
  let let543 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 (binrel% HAdd.hAdd let83 let86))))
  let let544 := (binrel% HAdd.hAdd let12 let132)
  let let545 := (Eq let121 let544)
  let let546 := (Eq let33 let137)
  let let547 := (binrel% HAdd.hAdd let528 fmt1)
  let let548 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let14 let528))
  let let549 := (Eq let28 let145)
  let let550 := (Eq let352 let352)
  let let551 := (binrel% HAdd.hAdd fmt1 let14)
  let let552 := (binrel% HAdd.hAdd let5 let551)
  let let553 := (binrel% HAdd.hAdd let1 let352)
  let let554 := (Eq percent let145)
  let let555 := (binrel% HMul.hMul let63 let14)
  let let556 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let528 let86)))))
  let let557 := (binrel% LE.le let43 let41)
  let let558 := (binrel% GE.ge fmt1 let237)
  let let559 := (Not let558)
  let let560 := (Eq let171 let327)
  let let561 := (binrel% HAdd.hAdd let370 (binrel% HAdd.hAdd let529 let502))
  let let562 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 let561)))
  let let563 := (binrel% HAdd.hAdd let352 let561)
  let let564 := (Eq adrx5flo let98)
  let let565 := (Eq let33 let153)
  let let566 := (binrel% HAdd.hAdd let14 let373)
  let let567 := (Eq x let145)
  let let568 := (Eq adrx5fmedhi let159)
  let let569 := (Eq let14 let14)
  let let570 := (Eq let57 let59)
  let let571 := (binrel% HAdd.hAdd let86 let83)
  let let572 := (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let39 let42))
  let let573 := (Eq let33 let33)
  let let574 := (Eq let28 let28)
  let let575 := (And let22 let294)
  let let576 := (And let24 let575)
  let let577 := (Not let576)
  let let578 := (Implies let576 False)
  let let579 := (Eq let3 let3)
  let let580 := (Eq let50 let50)
  let let581 := (binrel% HAdd.hAdd let1 fmt0)
  let let582 := (Or let119 (Or let118 (Or let117 (Or let115 let113))))
  let let583 := (Eq let83 let83)
  let let584 := (binrel% HAdd.hAdd let1 arg1)
  let let585 := (selectx5fformat let584)
  let let586 := (Eq adrx5fhi let585)
  let let587 := (Eq let585 adrx5fhi)
  let let588 := (binrel% HAdd.hAdd let12 arg1)
  let let589 := (selectx5fformat let588)
  let let590 := (Eq adrx5fmedlo let589)
  let let591 := (Eq let589 adrx5fmedlo)
  let let592 := (Eq adrx5flo let128)
  let let593 := (binrel% GE.ge let547 let63)
  let let594 := (Eq adrx5fhi let137)
  let let595 := (Eq percent let103)
  let let596 := (Eq adrx5fmedhi let137)
  let let597 := (And let104 (And let102 (And let99 (And let97 (And let94 let91)))))
  let let598 := (Not False)
  let let599 := (Eq let553 let406)
  let let600 := (Eq x let137)
  let let601 := (Eq let29 let145)
  let let602 := (binrel% HAdd.hAdd let4 fmt0)
  let let603 := (binrel% HAdd.hAdd let5 let272)
  let let604 := (binrel% HAdd.hAdd let6 let265)
  let let605 := (Eq let122 let394)
  let let606 := (And let46 let575)
  let let607 := (Not let606)
  let let608 := (Implies let606 False)
  let let609 := (Eq let3 let159)
  let let610 := (Eq percent let137)
  let let611 := (binrel% HAdd.hAdd let12 let13)
  let let612 := (Eq let132 let611)
  let let613 := (Eq let499 let409)
  let let614 := (Eq let13 let479)
  let let615 := (Eq percent let153)
  let let616 := (And let595 (And let533 (And let564 (And let590 (And let516 let586)))))
  let let617 := (Not let616)
  let let618 := (Or let381 let492)
  let let619 := (Eq fmt1 let392)
  let let620 := (Eq fmt1 let581)
  let let621 := (Eq fmt1 let602)
  let let622 := (Eq fmt1 let275)
  let let623 := (Eq fmt1 fmt0)
  let let624 := (Or let623 (Or let622 (Or let621 (Or let620 let619))))
  let let625 := (And let539 let346)
  let let626 := (smtIte let625 let424 let423 Prop)
  let let627 := (And let610 let541)
  let let628 := (smtIte let627 let430 let429 Prop)
  let let629 := (And let554 let600)
  let let630 := (smtIte let629 let436 let435 Prop)
  let let631 := (And let615 let567)
  let let632 := (smtIte let631 let309 let16 Prop)
  let let633 := (And let339 let340)
  let let634 := (smtIte let633 let157 let22 Prop)
  let let635 := (And let539 let336)
  let let636 := (smtIte let635 let448 let338 Prop)
  let let637 := (And let610 let331)
  let let638 := (smtIte let637 let333 let335 Prop)
  let let639 := (And let554 let326)
  let let640 := (smtIte let639 let454 let329 Prop)
  let let641 := (And let615 let320)
  let let642 := (smtIte let641 let74 let20 Prop)
  let let643 := (And let339 let319)
  let let644 := (smtIte let643 let24 let46 Prop)
  let let645 := (Or let339 (Or let302 (Or let518 (Or let303 (Or let304 (Or let568 (Or let305 (Or let214 (Or let615 (Or let319 (Or let340 (Or let306 (Or let307 (Or let313 (Or let383 (Or let209 (Or let554 (Or let320 (Or let567 (Or let484 (Or let314 (Or let488 (Or let315 (Or let204 (Or let610 (Or let326 (Or let600 (Or let490 (Or let316 (Or let596 (Or let594 (Or let199 (Or let539 (Or let331 (Or let541 (Or let592 (Or let535 (Or let531 (Or let317 let194)))))))))))))))))))))))))))))))))))))))
  let let646 := (xx5fcount let603)
  let let647 := (binrel% HMul.hMul let50 let646)
  let let648 := (sx5fcount let603)
  let let649 := (binrel% HMul.hMul let50 let648)
  let let650 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let649 let647))
  let let651 := (Eq arg1 let650)
  let let652 := (Not let291)
  let let653 := (Not let267)
  let let654 := (And let251 (And let250 (And let249 (And let248 (And let247 (And let246 (And let245 (And let244 (And let243 (And let242 (And let324 (And let258 (And let653 (And let273 (And let281 (And let652 (And let651 (And let645 (And let644 (And let642 (And let640 (And let638 (And let636 (And let634 (And let632 (And let630 (And let628 (And let626 (And let624 (And let618 let617))))))))))))))))))))))))))))))
  let let655 := (selectx5fformat let553)
  let let656 := (Eq let4 let655)
  let let657 := (selectx5fformat let499)
  let let658 := (Eq let50 let657)
  let let659 := (selectx5fformat let498)
  let let660 := (Eq let12 let659)
  let let661 := (And let508 (And let405 (And let397 (And let660 (And let658 let656)))))
  let let662 := (Not let661)
  let let663 := (Eq let14 let388)
  let let664 := (Or let510 let663)
  let let665 := (Eq fmt1 let513)
  let let666 := (Eq fmt1 let345)
  let let667 := (Eq fmt1 let525)
  let let668 := (Eq fmt1 let530)
  let let669 := (Or let421 (Or let668 (Or let667 (Or let666 let665))))
  let let670 := (And let536 let532)
  let let671 := (smtIte let670 let424 let423 Prop)
  let let672 := (And let526 let540)
  let let673 := (smtIte let672 let430 let429 Prop)
  let let674 := (And let549 let546)
  let let675 := (smtIte let674 let436 let435 Prop)
  let let676 := (And let385 let485)
  let let677 := (smtIte let676 let309 let16 Prop)
  let let678 := (And let522 let565)
  let let679 := (smtIte let678 let157 let22 Prop)
  let let680 := (And let536 let372)
  let let681 := (smtIte let680 let448 let338 Prop)
  let let682 := (And let526 let519)
  let let683 := (smtIte let682 let333 let335 Prop)
  let let684 := (And let549 let482)
  let let685 := (smtIte let684 let454 let329 Prop)
  let let686 := (And let385 let601)
  let let687 := (smtIte let686 let74 let20 Prop)
  let let688 := (And let522 let376)
  let let689 := (smtIte let688 let24 let46 Prop)
  let let690 := (Or let522 (Or let500 (Or let506 (Or let609 (Or let542 (Or let342 (Or let512 (Or let214 (Or let385 (Or let376 (Or let565 (Or let537 (Or let344 (Or let348 (Or let538 (Or let209 (Or let549 (Or let601 (Or let485 (Or let355 (Or let359 (Or let369 (Or let527 (Or let204 (Or let526 (Or let482 (Or let546 (Or let521 (Or let378 (Or let361 (Or let390 (Or let199 (Or let536 (Or let519 (Or let540 (Or let367 (Or let363 (Or let365 (Or let494 let194)))))))))))))))))))))))))))))))))))))))
  let let691 := (binrel% HAdd.hAdd fmt1 let555)
  let let692 := (binrel% HAdd.hAdd let5 let691)
  let let693 := (xx5fcount let692)
  let let694 := (binrel% HMul.hMul let50 let693)
  let let695 := (sx5fcount let692)
  let let696 := (binrel% HMul.hMul let50 let695)
  let let697 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let696 let694))
  let let698 := (Eq let352 let697)
  let let699 := (binrel% GE.ge let563 let287)
  let let700 := (Not let699)
  let let701 := (binrel% GE.ge let505 let14)
  let let702 := (binrel% GE.ge let691 let4)
  let let703 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let555 let529))
  let let704 := (binrel% GE.ge let703 let63)
  let let705 := (Not let704)
  let let706 := (binrel% HAdd.hAdd let14 let374)
  let let707 := (binrel% GE.ge let706 let12)
  let let708 := (Not let707)
  let let709 := (Eq let14 let571)
  let let710 := (And let583 (And let579 (And let579 (And let511 (And let580 (And let483 (And let574 (And let386 (And let573 (And let569 (And let709 (And let708 (And let705 (And let702 (And let701 (And let700 (And let698 (And let690 (And let689 (And let687 (And let685 (And let683 (And let681 (And let679 (And let677 (And let675 (And let673 (And let671 (And let669 (And let664 let662))))))))))))))))))))))))))))))
  let let711 := (Eq And And)
  let let712 := (Eq fmt1 fmt1)
  let let713 := (Eq Or Or)
  let let714 := (Eq let423 let423)
  let let715 := (Eq let424 let424)
  let let716 := (Eq let429 let429)
  let let717 := (Eq let430 let430)
  let let718 := (Eq let435 let435)
  let let719 := (Eq let436 let436)
  let let720 := (Eq let16 let16)
  let let721 := (Eq let309 let309)
  let let722 := (Eq let22 let22)
  let let723 := (Eq let157 let157)
  let let724 := (Eq let338 let338)
  let let725 := (Eq let448 let448)
  let let726 := (Eq let335 let335)
  let let727 := (Eq let333 let333)
  let let728 := (Eq let329 let329)
  let let729 := (Eq let454 let454)
  let let730 := (Eq let20 let20)
  let let731 := (Eq let74 let74)
  let let732 := (Eq let46 let46)
  let let733 := (Eq let24 let24)
  let let734 := (Eq let194 let194)
  let let735 := (Eq let199 let199)
  let let736 := (Eq let204 let204)
  let let737 := (Eq let209 let209)
  let let738 := (Eq let214 let214)
  let let739 := (Eq let5 let5)
  let let740 := (Eq let287 let287)
  let let741 := (Eq let63 let63)
  let let742 := (Eq arg1 let352)
  let let743 := (And let242 (And let243 (And let244 (And let245 (And let246 (And let247 (And let248 (And let249 (And let250 let251)))))))))
  let let744 := (And let87 let743)
  let let745 := (Eq arg1 arg1)
  let let746 := (Eq arg0 arg0)
  let let747 := (Eq let14 let85)
  let let748 := (Eq arg1 let697)
  let let749 := (Eq let650 let697)
  let let750 := (Eq let647 let694)
  let let751 := (Eq let646 let693)
  let let752 := (Eq let603 let692)
  let let753 := (Eq let265 let555)
  let let754 := (Eq let649 let696)
  let let755 := (Eq let648 let695)
  let let756 := (Not let2)
  let let757 := (Not let46)
  let let758 := (Or let757 let756)
  let let759 := (Not let20)
  let let760 := (Or let757 (Or let759 let756))
  let let761 := (Not let22)
  let let762 := (Or let757 let761)
  let let763 := (Not let16)
  let let764 := (Or let761 let58)
  let let765 := (Or let379 let58)
  let let766 := (Or let761 let765)
  let let767 := (Eq let14 let8)
  let let768 := (Eq let14 let7)
  let let769 := (And let10 (And let768 let767))
  let let770 := (Implies let606 let769)
  let let771 := (Eq let769 False)
  let let772 := (Or (Not let767) False)
  let let773 := (Not let768)
  let let774 := (Eq let8 let14)
  let let775 := (Not let774)
  let let776 := (Or let775 False)
  let let777 := (binrel% HAdd.hAdd let80 let81)
  let let778 := (binrel% HAdd.hAdd let80 let777)
  let let779 := (binrel% HAdd.hAdd let330 (binrel% HAdd.hAdd let69 let73))
  let let780 := (binrel% LE.le let779 let778)
  let let781 := (binrel% LE.le let73 let81)
  let let782 := (And let254 let10)
  let let783 := (Implies let782 let781)
  let let784 := (Eq let69 let80)
  let let785 := (Eq let7 let14)
  let let786 := (And let67 let785)
  let let787 := (Implies let786 let784)
  let let788 := (Eq let330 let80)
  let let789 := (And let67 let774)
  let let790 := (Implies let789 let788)
  let let791 := (And let66 let46)
  let let792 := (Implies let791 let767)
  let let793 := (Or let757 let767)
  let let794 := (Not let66)
  let let795 := (Or let794 let793)
  let let796 := (Eq let19 let8)
  let let797 := (Eq let6 let14)
  let let798 := (Eq let14 let19)
  let let799 := (Eq let57 let66)
  let let800 := (And let66 let22)
  let let801 := (Implies let800 let768)
  let let802 := (Or let761 let768)
  let let803 := (Or let794 let802)
  let let804 := (Eq let15 let7)
  let let805 := (Eq let14 let15)
  let let806 := (Not let476)
  let let807 := (Or let806 (Or let51 (Or let57 let2)))
  let let808 := (Or let806 (Or let54 (Or let59 let2)))
  let let809 := (And let476 (And let52 let58))
  let let810 := (Eq let1 fmt1)
  let let811 := (And let476 (And let58 let52))
  let let812 := (Or let763 let756)
  let let813 := (Or let761 let812)
  let let814 := (Or let757 let813)
  let let815 := (Or let759 let813)
  let let816 := (Or let379 let756)
  let let817 := (Or let763 let816)
  let let818 := (Or let759 let817)
  let let819 := (Or let761 let818)
  let let820 := (Implies let47 let769)
  let let821 := (And let486 (And let20 let46))
  let let822 := (Implies let821 let767)
  let let823 := (Not let486)
  let let824 := (Or let823 (Or let759 let793))
  let let825 := (Eq let18 let8)
  let let826 := (Eq let6 let12)
  let let827 := (Eq let2 let486)
  let let828 := (And let486 (And let16 let22))
  let let829 := (Implies let828 let768)
  let let830 := (Or let823 (Or let763 let802))
  let let831 := (Eq let13 let7)
  let let832 := (Not let459)
  let let833 := (Not let74)
  let let834 := (Eq let12 let8)
  let let835 := (And let10 (And let768 let834))
  let let836 := (Implies let75 let835)
  let let837 := (Eq let835 False)
  let let838 := (Eq let8 let12)
  let let839 := (Not let838)
  let let840 := (binrel% HAdd.hAdd let40 let777)
  let let841 := (binrel% LE.le let779 let840)
  let let842 := (Eq let330 let40)
  let let843 := (And let67 let838)
  let let844 := (Or let763 (Or let379 (Or let756 let835)))
  let let845 := (Eq let12 let18)
  let let846 := (And let486 let845)
  let let847 := (And let74 let46)
  let let848 := (Not let309)
  let let849 := (Eq let12 let7)
  let let850 := (And let10 (And let849 let767))
  let let851 := (Implies let310 let850)
  let let852 := (Eq let850 False)
  let let853 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let40 let81))
  let let854 := (binrel% LE.le let779 let853)
  let let855 := (Eq let69 let40)
  let let856 := (Eq let7 let12)
  let let857 := (And let67 let856)
  let let858 := (Or let379 (Or let756 let850))
  let let859 := (Eq let12 let13)
  let let860 := (And let486 let859)
  let let861 := (And let309 let22)
  let let862 := (Not let442)
  let let863 := (Not let446)
  let let864 := (Not let444)
  let let865 := (Not let384)
  let let866 := (Or let864 let865)
  let let867 := (Implies let444 let865)
  let let868 := (Eq let384 False)
  let let869 := (Not let157)
  let let870 := (Implies let495 let850)
  let let871 := (And let486 (And let16 let157))
  let let872 := (Or let869 let849)
  let let873 := (Eq let12 let15)
  let let874 := (Not let441)
  let let875 := (Not let458)
  let let876 := (Or let874 let875)
  let let877 := (Implies let441 let875)
  let let878 := (Not let461)
  let let879 := (Not let375)
  let let880 := (Or let879 let878)
  let let881 := (Or let879 let864)
  let let882 := (Implies let375 let864)
  let let883 := (Or let879 let865)
  let let884 := (Implies let375 let865)
  let let885 := (Or let384 let444)
  let let886 := (Not let24)
  let let887 := (Implies let25 let835)
  let let888 := (And let486 (And let20 let24))
  let let889 := (Or let886 let834)
  let let890 := (Eq let12 let19)
  let let891 := (Implies let576 let835)
  let let892 := (And let66 let24)
  let let893 := (Implies let295 let850)
  let let894 := (And let66 let157)
(Eq let27 let26) → (Eq let32 let31) → let32 → let35 → (Eq let38 let37) → (Eq let40 let39) → (Eq let45 let41) → (Eq let49 let48) → (Eq let53 let52) → (Eq let56 let55) → let60 → (Eq let61 True) → (Eq let65 let62) → (Eq let66 let57) → (Eq let67 True) → (Eq let69 let68) → (Eq let73 let71) → (Eq let77 let76) → (Eq let79 let43) → (Eq let80 let43) → (Eq let81 let42) → (Eq let82 False) → (Eq let85 let84) → (Eq let88 let87) → (Eq let253 let252) → (Eq let254 True) → (Eq let239 let258) → (Eq let261 let260) → (Eq let237 let263) → (Eq let269 let267) → (Eq let235 let271) → (Eq let276 let274) → (Eq let277 let273) → (Eq let234 let281) → (Eq let233 let283) → (Eq let286 let285) → (Eq let284 let287) → (Eq let289 let288) → (Eq let292 let291) → (Eq let228 let293) → (Eq let297 let296) → (Eq let223 let298) → (Eq let222 let300) → (Eq let301 True) → (Eq let220 let302) → (Eq let218 let303) → (Eq let217 let304) → (Eq let215 let305) → (Eq let213 let306) → (Eq let212 let307) → (Eq let312 let311) → (Eq let211 let313) → (Eq let207 let314) → (Eq let205 let315) → (Eq let202 let316) → (Eq let195 let317) → (Eq let35 let318) → (Eq let190 let319) → (Eq let187 let320) → (Eq let322 let74) → (Eq let240 let323) → (Eq let184 let20) → (Eq let325 let324) → (Eq let181 let326) → (Eq let179 let327) → let261 → (Eq let263 let328) → (Eq let178 let329) → (Eq let330 let78) → (Eq let262 let63) → (Eq let175 let331) → (Eq let173 let332) → (Eq let334 let333) → (Eq let172 let335) → (Eq let168 let336) → (Eq let166 let337) → (Eq let165 let338) → (Eq let160 let339) → (Eq let158 let340) → (Eq let342 let341) → (Eq let344 let343) → (Eq let345 let1) → (Eq let127 let346) → (Eq let348 let347) → (Eq let353 let10) → (Eq let299 let5) → (Eq let355 let354) → (Eq let357 let356) → (Eq let359 let358) → (Eq let361 let360) → (Eq let363 let362) → (Eq let365 let364) → (Eq let367 let366) → (Eq let369 let368) → (Eq let370 let83) → (Eq let372 let371) → (Eq let374 let373) → (Eq let376 let375) → (Eq let378 let377) → (Eq let380 let379) → (Eq let382 let381) → (Eq let210 let383) → (Eq let385 let384) → (Eq let109 fmt0) → (Eq let386 True) → (Eq let387 let268) → (Eq let388 let388) → (Eq let390 let389) → let56 → (Eq let221 let391) → (Eq let112 let392) → (Eq let393 let6) → (Eq let124 let394) → (Eq let397 let396) → (Eq let398 let42) → (Eq let401 let399) → (Eq let405 let404) → (Eq let478 let477) → (Eq let150 let479) → let481 → (Eq let482 let455) → (Eq let483 True) → (Eq let208 let484) → (Eq let485 let441) → (Eq let486 let2) → (Eq let487 let414) → (Eq let206 let488) → (Eq let489 let10) → (Eq let203 let490) → (Eq let493 let492) → (Eq let494 let463) → (Eq let497 let496) → (Eq let498 let498) → (Eq let499 let499) → (Eq let500 let472) → (Eq let501 let408) → (Eq let505 let504) → (Eq let506 let471) → let507 → (Eq let508 let415) → (Eq let509 let411) → (Eq let510 let418) → (Eq let511 True) → (Eq let512 let468) → (Eq let513 let50) → (Eq let517 let516) → (Eq let133 let429) → (Eq let219 let518) → (Eq let519 let451) → (Eq let520 False) → (Eq let521 let464) → (Eq let522 let445) → (Eq let523 let448) → (Eq let524 let418) → (Eq let525 let4) → (Eq let526 let432) → (Eq let527 let465) → (Eq let529 let528) → (Eq let530 let12) → (Eq let141 let435) → (Eq let196 let531) → (Eq let532 let425) → (Eq let534 let533) → (Eq let197 let535) → (Eq let536 let426) → (Eq let537 let467) → (Eq let538 let466) → (Eq let129 let539) → (Eq let540 let431) → (Eq let136 let541) → (Eq let542 let469) → (Eq let543 let352) → (Eq let92 let514) → (Eq let545 let430) → (Eq let546 let437) → (Eq let548 let547) → (Eq let549 let438) → (Eq let550 True) → (Eq let232 let286) → (Eq let552 let6) → let38 → (Eq let553 let553) → (Eq let146 let554) → (Eq let555 let14) → (Eq let107 let275) → (Eq let556 let400) → (Eq let502 let86) → (Eq let557 False) → (Eq let238 let559) → (Eq let560 let454) → (Eq let563 let562) → (Eq let99 let564) → (Eq let551 fmt1) → (Eq let565 let444) → (Eq let566 let373) → (Eq let152 let567) → (Eq let216 let568) → (Eq let569 True) → (Eq let60 let570) → (Eq let571 let14) → (Eq let572 let41) → (Eq let573 True) → (Eq let574 True) → (Eq let578 let577) → (Eq let579 True) → (Eq let580 True) → (Eq let114 let581) → (Eq let120 let582) → (Eq let583 True) → (Eq let587 let586) → (Eq let89 let584) → (Eq let185 let321) → (Eq let591 let590) → (Eq let95 let588) → (Eq let198 let592) → (Eq let593 let51) → (Eq let100 let402) → (Eq let200 let594) → (Eq let104 let595) → (Eq let201 let596) → (Eq let105 let597) → (Eq let598 True) → let599 → (Eq let144 let600) → (Eq let601 let458) → (Eq let116 let602) → (Eq let604 let603) → (Eq let123 let423) → (Eq let605 let424) → (Eq let608 let607) → (Eq let134 let544) → (Eq let609 let470) → (Eq let138 let610) → (Eq let612 let436) → (Eq let142 let611) → (Eq let149 let16) → let613 → (Eq let614 let309) → (Eq let154 let615) → let253 → False :=
  let let1 := (Int.ofNat 3)
  let let2 := (Eq fmt1 let1)
  let let3 := (Int.ofNat 5)
  let let4 := (Int.ofNat 2)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 fmt1)
  let let7 := (xx5fcount let6)
  let let8 := (sx5fcount let6)
  let let9 := (binrel% HAdd.hAdd let8 let7)
  let let10 := (binrel% GE.ge let9 let3)
  let let11 := (And let10 let2)
  let let12 := (Int.ofNat 1)
  let let13 := (xx5fcount let12)
  let let14 := (Int.ofNat 0)
  let let15 := (xx5fcount let14)
  let let16 := (Eq let15 let13)
  let let17 := (And let16 let11)
  let let18 := (sx5fcount let12)
  let let19 := (sx5fcount let14)
  let let20 := (Eq let19 let18)
  let let21 := (And let20 let17)
  let let22 := (Eq let15 let14)
  let let23 := (And let22 let21)
  let let24 := (Eq let19 let12)
  let let25 := (And let24 let23)
  let let26 := (Not let25)
  let let27 := (Implies let25 False)
  let let28 := (Int.ofNat 37)
  let let29 := (Int.ofNat 115)
  let let30 := (Eq let29 let28)
  let let31 := (Not let30)
  let let32 := (Eq let30 False)
  let let33 := (Int.ofNat 120)
  let let34 := (Eq let29 let33)
  let let35 := (Eq let34 False)
  let let36 := (Eq let33 let28)
  let let37 := (Not let36)
  let let38 := (Eq let36 False)
  let let39 := (Rat.ofInt 1)
  let let40 := (binrel% HMul.hMul let39 let12)
  let let41 := (Neg.neg (Rat.ofInt 4))
  let let42 := (Neg.neg (Rat.ofInt 5))
  let let43 := (Rat.ofInt 0)
  let let44 := (binrel% HAdd.hAdd let43 let42)
  let let45 := (binrel% HAdd.hAdd let39 let44)
  let let46 := (Eq let19 let14)
  let let47 := (And let46 let23)
  let let48 := (Not let47)
  let let49 := (Implies let47 False)
  let let50 := (Int.ofNat 4)
  let let51 := (binrel% GE.ge fmt1 let50)
  let let52 := (Not let51)
  let let53 := (binrel% LT.lt fmt1 let50)
  let let54 := (Not let52)
  let let55 := (Eq let51 let54)
  let let56 := (Eq let54 let51)
  let let57 := (Eq fmt1 let4)
  let let58 := (Not let57)
  let let59 := (Not let58)
  let let60 := (Eq let59 let57)
  let let61 := (Eq let57 let57)
  let let62 := (Eq let18 let12)
  let let63 := (Neg.neg let12)
  let let64 := (binrel% HAdd.hAdd let63 let18)
  let let65 := (Eq let14 let64)
  let let66 := (Eq let14 let6)
  let let67 := (binrel% GT.gt let39 let14)
  let let68 := (Rat.ofInt let7)
  let let69 := (binrel% HMul.hMul let39 let7)
  let let70 := (binrel% HMul.hMul let63 let7)
  let let71 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let63 let8) let70))
  let let72 := (Neg.neg let39)
  let let73 := (binrel% HMul.hMul let72 let9)
  let let74 := (Eq let19 let64)
  let let75 := (And let46 (And let22 (And let74 let17)))
  let let76 := (Not let75)
  let let77 := (Implies let75 False)
  let let78 := (Rat.ofInt let8)
  let let79 := (binrel% HAdd.hAdd let78 (binrel% HAdd.hAdd let68 let71))
  let let80 := (binrel% HMul.hMul let39 let14)
  let let81 := (binrel% HMul.hMul let72 let3)
  let let82 := (binrel% LE.le let43 let42)
  let let83 := (Int.ofNat 20)
  let let84 := (binrel% HAdd.hAdd let83 arg0)
  let let85 := (binrel% HAdd.hAdd arg0 let83)
  let let86 := (Neg.neg let83)
  let let87 := (Eq arg0 let86)
  let let88 := (Eq let14 let84)
  let let89 := (binrel% HAdd.hAdd arg1 let1)
  let let90 := (selectx5fformat let89)
  let let91 := (Eq let90 adrx5fhi)
  let let92 := (binrel% HAdd.hAdd arg1 let4)
  let let93 := (selectx5fformat let92)
  let let94 := (Eq let93 adrx5fmedhi)
  let let95 := (binrel% HAdd.hAdd arg1 let12)
  let let96 := (selectx5fformat let95)
  let let97 := (Eq let96 adrx5fmedlo)
  let let98 := (selectx5fformat arg1)
  let let99 := (Eq let98 adrx5flo)
  let let100 := (binrel% HAdd.hAdd fmt1 let12)
  let let101 := (selectx5fformat let100)
  let let102 := (Eq let101 s)
  let let103 := (selectx5fformat fmt1)
  let let104 := (Eq let103 percent)
  let let105 := (And (And (And (And (And let104 let102) let99) let97) let94) let91)
  let let106 := (Not let105)
  let let107 := (binrel% HAdd.hAdd fmt0 let12)
  let let108 := (Eq arg1 let107)
  let let109 := (binrel% HAdd.hAdd fmt0 let14)
  let let110 := (Eq arg1 let109)
  let let111 := (Or let110 let108)
  let let112 := (binrel% HAdd.hAdd fmt0 let50)
  let let113 := (Eq fmt1 let112)
  let let114 := (binrel% HAdd.hAdd fmt0 let1)
  let let115 := (Eq fmt1 let114)
  let let116 := (binrel% HAdd.hAdd fmt0 let4)
  let let117 := (Eq fmt1 let116)
  let let118 := (Eq fmt1 let107)
  let let119 := (Eq fmt1 let109)
  let let120 := (Or (Or (Or (Or let119 let118) let117) let115) let113)
  let let121 := (xx5fcount let1)
  let let122 := (xx5fcount let50)
  let let123 := (Eq let122 let121)
  let let124 := (binrel% HAdd.hAdd let121 let12)
  let let125 := (Eq let122 let124)
  let let126 := (selectx5fformat let3)
  let let127 := (Eq let126 x)
  let let128 := (selectx5fformat let50)
  let let129 := (Eq let128 percent)
  let let130 := (And let129 let127)
  let let131 := (smtIte let130 let125 let123 Prop)
  let let132 := (xx5fcount let4)
  let let133 := (Eq let121 let132)
  let let134 := (binrel% HAdd.hAdd let132 let12)
  let let135 := (Eq let121 let134)
  let let136 := (Eq let128 x)
  let let137 := (selectx5fformat let1)
  let let138 := (Eq let137 percent)
  let let139 := (And let138 let136)
  let let140 := (smtIte let139 let135 let133 Prop)
  let let141 := (Eq let132 let13)
  let let142 := (binrel% HAdd.hAdd let13 let12)
  let let143 := (Eq let132 let142)
  let let144 := (Eq let137 x)
  let let145 := (selectx5fformat let4)
  let let146 := (Eq let145 percent)
  let let147 := (And let146 let144)
  let let148 := (smtIte let147 let143 let141 Prop)
  let let149 := (Eq let13 let15)
  let let150 := (binrel% HAdd.hAdd let15 let12)
  let let151 := (Eq let13 let150)
  let let152 := (Eq let145 x)
  let let153 := (selectx5fformat let12)
  let let154 := (Eq let153 percent)
  let let155 := (And let154 let152)
  let let156 := (smtIte let155 let151 let149 Prop)
  let let157 := (Eq let15 let12)
  let let158 := (Eq let153 x)
  let let159 := (selectx5fformat let14)
  let let160 := (Eq let159 percent)
  let let161 := (And let160 let158)
  let let162 := (smtIte let161 let157 let22 Prop)
  let let163 := (sx5fcount let1)
  let let164 := (sx5fcount let50)
  let let165 := (Eq let164 let163)
  let let166 := (binrel% HAdd.hAdd let163 let12)
  let let167 := (Eq let164 let166)
  let let168 := (Eq let126 s)
  let let169 := (And let129 let168)
  let let170 := (smtIte let169 let167 let165 Prop)
  let let171 := (sx5fcount let4)
  let let172 := (Eq let163 let171)
  let let173 := (binrel% HAdd.hAdd let171 let12)
  let let174 := (Eq let163 let173)
  let let175 := (Eq let128 s)
  let let176 := (And let138 let175)
  let let177 := (smtIte let176 let174 let172 Prop)
  let let178 := (Eq let171 let18)
  let let179 := (binrel% HAdd.hAdd let18 let12)
  let let180 := (Eq let171 let179)
  let let181 := (Eq let137 s)
  let let182 := (And let146 let181)
  let let183 := (smtIte let182 let180 let178 Prop)
  let let184 := (Eq let18 let19)
  let let185 := (binrel% HAdd.hAdd let19 let12)
  let let186 := (Eq let18 let185)
  let let187 := (Eq let145 s)
  let let188 := (And let154 let187)
  let let189 := (smtIte let188 let186 let184 Prop)
  let let190 := (Eq let153 s)
  let let191 := (And let160 let190)
  let let192 := (smtIte let191 let24 let46 Prop)
  let let193 := (Int.ofNat 255)
  let let194 := (Eq let128 let193)
  let let195 := (Eq let128 adrx5fhi)
  let let196 := (Eq let128 adrx5fmedhi)
  let let197 := (Eq let128 adrx5fmedlo)
  let let198 := (Eq let128 adrx5flo)
  let let199 := (Eq let137 let193)
  let let200 := (Eq let137 adrx5fhi)
  let let201 := (Eq let137 adrx5fmedhi)
  let let202 := (Eq let137 adrx5fmedlo)
  let let203 := (Eq let137 adrx5flo)
  let let204 := (Eq let145 let193)
  let let205 := (Eq let145 adrx5fhi)
  let let206 := (Eq let145 adrx5fmedhi)
  let let207 := (Eq let145 adrx5fmedlo)
  let let208 := (Eq let145 adrx5flo)
  let let209 := (Eq let153 let193)
  let let210 := (Eq let153 adrx5fhi)
  let let211 := (Eq let153 adrx5fmedhi)
  let let212 := (Eq let153 adrx5fmedlo)
  let let213 := (Eq let153 adrx5flo)
  let let214 := (Eq let159 let193)
  let let215 := (Eq let159 adrx5fhi)
  let let216 := (Eq let159 adrx5fmedhi)
  let let217 := (Eq let159 adrx5fmedlo)
  let let218 := (Eq let159 adrx5flo)
  let let219 := (Eq let159 x)
  let let220 := (Eq let159 s)
  let let221 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let160 let220) let219) let218) let217) let216) let215) let214) let154) let190) let158) let213) let212) let211) let210) let209) let146) let187) let152) let208) let207) let206) let205) let204) let138) let181) let144) let203) let202) let201) let200) let199) let129) let175) let136) let198) let197) let196) let195) let194)
  let let222 := (binrel% HSub.hSub fmt1 let4)
  let let223 := (binrel% HSub.hSub let222 fmt0)
  let let224 := (xx5fcount let223)
  let let225 := (binrel% HMul.hMul let50 let224)
  let let226 := (sx5fcount let223)
  let let227 := (binrel% HMul.hMul let50 let226)
  let let228 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let227) let225)
  let let229 := (Eq arg1 let228)
  let let230 := (binrel% HAdd.hAdd arg0 distance)
  let let231 := (binrel% HAdd.hAdd let230 fmtx5flength)
  let let232 := (binrel% HSub.hSub let231 let50)
  let let233 := (binrel% LT.lt arg1 let232)
  let let234 := (binrel% GE.ge arg1 let230)
  let let235 := (binrel% GT.gt fmt1 let107)
  let let236 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let237 := (binrel% HSub.hSub let236 let12)
  let let238 := (binrel% LT.lt fmt1 let237)
  let let239 := (binrel% GE.ge arg1 fmt0)
  let let240 := (binrel% HSub.hSub fmt0 distance)
  let let241 := (Eq arg0 let240)
  let let242 := (Eq fmt0 let14)
  let let243 := (Eq x let33)
  let let244 := (Eq s let29)
  let let245 := (Eq percent let28)
  let let246 := (Eq adrx5fhi let4)
  let let247 := (Eq adrx5fmedhi let50)
  let let248 := (Eq adrx5fmedlo let12)
  let let249 := (Eq adrx5flo let3)
  let let250 := (Eq fmtx5flength let3)
  let let251 := (Eq distance let83)
  let let252 := (And let251 (And let250 (And let249 (And let248 (And let247 (And let246 (And let245 (And let244 (And let243 (And let242 (And let241 (And let239 (And let238 (And let235 (And let234 (And let233 (And let229 (And let221 (And let192 (And let189 (And let183 (And let177 (And let170 (And let162 (And let156 (And let148 (And let140 (And let131 (And let120 (And let111 let106))))))))))))))))))))))))))))))
  let let253 := (And (And (And (And (And (And (And (And (And (And (And (And (And let251 let250) let249) let248) let247) let246) let245) let244) let243) (And (And (And (And (And (And (And let242 let241) let239) let238) let235) let234) let233) let229)) let221) (And (And (And (And (And (And (And (And (And let192 let189) let183) let177) let170) let162) let156) let148) let140) let131)) (And let120 let111)) let106)
  let let254 := (binrel% LT.lt let72 let14)
  let let255 := (binrel% HMul.hMul let63 arg1)
  let let256 := (binrel% HAdd.hAdd fmt0 let255)
  let let257 := (binrel% GE.ge let256 let12)
  let let258 := (Not let257)
  let let259 := (Eq let33 let29)
  let let260 := (Not let259)
  let let261 := (Eq let259 False)
  let let262 := (binrel% HMul.hMul let63 let12)
  let let263 := (binrel% HAdd.hAdd let236 let262)
  let let264 := (binrel% HMul.hMul let63 fmtx5flength)
  let let265 := (binrel% HMul.hMul let63 fmt0)
  let let266 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let265 let264))
  let let267 := (binrel% GE.ge let266 let63)
  let let268 := (binrel% HAdd.hAdd let63 let236)
  let let269 := (binrel% GE.ge fmt1 let268)
  let let270 := (binrel% LE.le fmt1 let107)
  let let271 := (Not let270)
  let let272 := (binrel% HAdd.hAdd fmt1 let265)
  let let273 := (binrel% GE.ge let272 let4)
  let let274 := (Not let273)
  let let275 := (binrel% HAdd.hAdd let12 fmt0)
  let let276 := (binrel% LE.le fmt1 let275)
  let let277 := (Not let274)
  let let278 := (binrel% HMul.hMul let63 distance)
  let let279 := (binrel% HMul.hMul let63 arg0)
  let let280 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let279 let278))
  let let281 := (binrel% GE.ge let280 let14)
  let let282 := (binrel% GE.ge arg1 let232)
  let let283 := (Not let282)
  let let284 := (binrel% HMul.hMul let63 let50)
  let let285 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let284)))
  let let286 := (binrel% HAdd.hAdd let231 let284)
  let let287 := (Neg.neg let50)
  let let288 := (binrel% HAdd.hAdd let287 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let289 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let287)))
  let let290 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let279 (binrel% HAdd.hAdd let264 let278)))
  let let291 := (binrel% GE.ge let290 let287)
  let let292 := (binrel% GE.ge arg1 let288)
  let let293 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let227 let225))
  let let294 := (And let10 let57)
  let let295 := (And let46 (And let157 let294))
  let let296 := (Not let295)
  let let297 := (Implies let295 False)
  let let298 := (binrel% HAdd.hAdd let222 let265)
  let let299 := (binrel% HMul.hMul let63 let4)
  let let300 := (binrel% HAdd.hAdd fmt1 let299)
  let let301 := (Eq let51 let51)
  let let302 := (Eq s let159)
  let let303 := (Eq adrx5flo let159)
  let let304 := (Eq adrx5fmedlo let159)
  let let305 := (Eq adrx5fhi let159)
  let let306 := (Eq adrx5flo let153)
  let let307 := (Eq adrx5fmedlo let153)
  let let308 := (binrel% HAdd.hAdd let63 let13)
  let let309 := (Eq let15 let308)
  let let310 := (And let46 (And let22 (And let20 (And let309 let11))))
  let let311 := (Not let310)
  let let312 := (Implies let310 False)
  let let313 := (Eq adrx5fmedhi let153)
  let let314 := (Eq adrx5fmedlo let145)
  let let315 := (Eq adrx5fhi let145)
  let let316 := (Eq adrx5fmedlo let137)
  let let317 := (Eq adrx5fhi let128)
  let let318 := (Not let34)
  let let319 := (Eq s let153)
  let let320 := (Eq s let145)
  let let321 := (binrel% HAdd.hAdd let12 let19)
  let let322 := (Eq let18 let321)
  let let323 := (binrel% HAdd.hAdd fmt0 let278)
  let let324 := (Eq fmt0 let230)
  let let325 := (Eq arg0 let323)
  let let326 := (Eq s let137)
  let let327 := (binrel% HAdd.hAdd let12 let18)
  let let328 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let262))
  let let329 := (Eq let18 let171)
  let let330 := (binrel% HMul.hMul let39 let8)
  let let331 := (Eq s let128)
  let let332 := (binrel% HAdd.hAdd let12 let171)
  let let333 := (Eq let171 (binrel% HAdd.hAdd let63 let163))
  let let334 := (Eq let163 let332)
  let let335 := (Eq let171 let163)
  let let336 := (Eq s let126)
  let let337 := (binrel% HAdd.hAdd let12 let163)
  let let338 := (Eq let163 let164)
  let let339 := (Eq percent let159)
  let let340 := (Eq x let153)
  let let341 := (Eq let159 let50)
  let let342 := (Eq let50 let159)
  let let343 := (Eq let153 let12)
  let let344 := (Eq let12 let153)
  let let345 := (binrel% HAdd.hAdd let1 let14)
  let let346 := (Eq x let126)
  let let347 := (Eq let153 let50)
  let let348 := (Eq let50 let153)
  let let349 := (binrel% HMul.hMul let50 let7)
  let let350 := (binrel% HMul.hMul let50 let8)
  let let351 := (binrel% HAdd.hAdd let350 let349)
  let let352 := (binrel% HAdd.hAdd let86 let351)
  let let353 := (binrel% GE.ge let352 let14)
  let let354 := (Eq let145 let3)
  let let355 := (Eq let3 let145)
  let let356 := (Eq let13 let12)
  let let357 := (Eq let14 let308)
  let let358 := (Eq let145 let12)
  let let359 := (Eq let12 let145)
  let let360 := (Eq let137 let50)
  let let361 := (Eq let50 let137)
  let let362 := (Eq let128 let12)
  let let363 := (Eq let12 let128)
  let let364 := (Eq let128 let50)
  let let365 := (Eq let50 let128)
  let let366 := (Eq let128 let3)
  let let367 := (Eq let3 let128)
  let let368 := (Eq let145 let50)
  let let369 := (Eq let50 let145)
  let let370 := (binrel% HMul.hMul let63 let86)
  let let371 := (Eq let126 let29)
  let let372 := (Eq let29 let126)
  let let373 := (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd (binrel% HMul.hMul let287 let8) (binrel% HMul.hMul let287 let7)))
  let let374 := (binrel% HMul.hMul let63 let352)
  let let375 := (Eq let153 let29)
  let let376 := (Eq let29 let153)
  let let377 := (Eq let137 let12)
  let let378 := (Eq let12 let137)
  let let379 := (Not let10)
  let let380 := (binrel% GE.ge let373 let12)
  let let381 := (Eq fmt0 arg1)
  let let382 := (Eq arg1 fmt0)
  let let383 := (Eq adrx5fhi let153)
  let let384 := (Eq let153 let28)
  let let385 := (Eq let28 let153)
  let let386 := (Eq let29 let29)
  let let387 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let63))
  let let388 := (binrel% HAdd.hAdd let63 let352)
  let let389 := (Eq let137 let4)
  let let390 := (Eq let4 let137)
  let let391 := (Or let160 (Or let220 (Or let219 (Or let218 (Or let217 (Or let216 (Or let215 (Or let214 (Or let154 (Or let190 (Or let158 (Or let213 (Or let212 (Or let211 (Or let210 (Or let209 (Or let146 (Or let187 (Or let152 (Or let208 (Or let207 (Or let206 (Or let205 (Or let204 (Or let138 (Or let181 (Or let144 (Or let203 (Or let202 (Or let201 (Or let200 (Or let199 (Or let129 (Or let175 (Or let136 (Or let198 (Or let197 (Or let196 (Or let195 let194)))))))))))))))))))))))))))))))))))))))
  let let392 := (binrel% HAdd.hAdd let50 fmt0)
  let let393 := (binrel% HAdd.hAdd fmt1 let5)
  let let394 := (binrel% HAdd.hAdd let12 let121)
  let let395 := (selectx5fformat let352)
  let let396 := (Eq let395 let3)
  let let397 := (Eq let3 let395)
  let let398 := (binrel% HAdd.hAdd let43 let44)
  let let399 := (binrel% GE.ge let9 (Int.ofNat 6))
  let let400 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 25)) let351)
  let let401 := (binrel% GE.ge let400 let287)
  let let402 := (binrel% HAdd.hAdd let12 fmt1)
  let let403 := (selectx5fformat let402)
  let let404 := (Eq let403 let29)
  let let405 := (Eq let29 let403)
  let let406 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let351)
  let let407 := (selectx5fformat let406)
  let let408 := (Eq let407 let4)
  let let409 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 18)) let351)
  let let410 := (selectx5fformat let409)
  let let411 := (Eq let410 let50)
  let let412 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 19)) let351)
  let let413 := (selectx5fformat let412)
  let let414 := (Eq let413 let12)
  let let415 := (Eq let103 let28)
  let let416 := (And let415 (And let404 (And let396 (And let414 (And let411 let408)))))
  let let417 := (Not let416)
  let let418 := (Eq let8 (binrel% HAdd.hAdd let3 let70))
  let let419 := (Eq fmt1 let50)
  let let420 := (Eq fmt1 let12)
  let let421 := (Eq fmt1 let14)
  let let422 := (Or let421 (Or let420 (Or let57 (Or let2 let419))))
  let let423 := (Eq let121 let122)
  let let424 := (Eq let121 (binrel% HAdd.hAdd let63 let122))
  let let425 := (Eq let126 let33)
  let let426 := (Eq let128 let28)
  let let427 := (And let426 let425)
  let let428 := (smtIte let427 let424 let423 Prop)
  let let429 := (Eq let132 let121)
  let let430 := (Eq let132 (binrel% HAdd.hAdd let63 let121))
  let let431 := (Eq let128 let33)
  let let432 := (Eq let137 let28)
  let let433 := (And let432 let431)
  let let434 := (smtIte let433 let430 let429 Prop)
  let let435 := (Eq let13 let132)
  let let436 := (Eq let13 (binrel% HAdd.hAdd let63 let132))
  let let437 := (Eq let137 let33)
  let let438 := (Eq let145 let28)
  let let439 := (And let438 let437)
  let let440 := (smtIte let439 let436 let435 Prop)
  let let441 := (Eq let145 let33)
  let let442 := (And let384 let441)
  let let443 := (smtIte let442 let309 let16 Prop)
  let let444 := (Eq let153 let33)
  let let445 := (Eq let159 let28)
  let let446 := (And let445 let444)
  let let447 := (smtIte let446 let157 let22 Prop)
  let let448 := (Eq let163 (binrel% HAdd.hAdd let63 let164))
  let let449 := (And let426 let371)
  let let450 := (smtIte let449 let448 let338 Prop)
  let let451 := (Eq let128 let29)
  let let452 := (And let432 let451)
  let let453 := (smtIte let452 let333 let335 Prop)
  let let454 := (Eq let18 (binrel% HAdd.hAdd let63 let171))
  let let455 := (Eq let137 let29)
  let let456 := (And let438 let455)
  let let457 := (smtIte let456 let454 let329 Prop)
  let let458 := (Eq let145 let29)
  let let459 := (And let384 let458)
  let let460 := (smtIte let459 let74 let20 Prop)
  let let461 := (And let445 let375)
  let let462 := (smtIte let461 let24 let46 Prop)
  let let463 := (Eq let128 let4)
  let let464 := (Eq let137 let3)
  let let465 := (Eq let145 let4)
  let let466 := (Eq let153 let4)
  let let467 := (Eq let153 let3)
  let let468 := (Eq let159 let4)
  let let469 := (Eq let159 let12)
  let let470 := (Eq let159 let3)
  let let471 := (Eq let159 let33)
  let let472 := (Eq let159 let29)
  let let473 := (Or let445 (Or let472 (Or let471 (Or let470 (Or let469 (Or let341 (Or let468 (Or let214 (Or let384 (Or let375 (Or let444 (Or let467 (Or let343 (Or let347 (Or let466 (Or let209 (Or let438 (Or let458 (Or let441 (Or let354 (Or let358 (Or let368 (Or let465 (Or let204 (Or let432 (Or let455 (Or let437 (Or let464 (Or let377 (Or let360 (Or let389 (Or let199 (Or let426 (Or let451 (Or let431 (Or let366 (Or let362 (Or let364 (Or let463 let194)))))))))))))))))))))))))))))))))))))))
  let let474 := (And let473 (And let462 (And let460 (And let457 (And let453 (And let450 (And let447 (And let443 (And let440 (And let434 (And let428 (And let422 (And let418 let417)))))))))))))
  let let475 := (Not let399)
  let let476 := (binrel% GE.ge fmt1 let4)
  let let477 := (And let10 (And let52 (And let476 (And let475 let474))))
  let let478 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let10 (And let52 (And let476 (And let10 (And let475 (And True let474)))))))))))))))))
  let let479 := (binrel% HAdd.hAdd let12 let15)
  let let480 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let351)
  let let481 := (Eq let388 let480)
  let let482 := (Eq let29 let137)
  let let483 := (Eq let4 let4)
  let let484 := (Eq adrx5flo let145)
  let let485 := (Eq let33 let145)
  let let486 := (Eq let12 let6)
  let let487 := (Eq let12 let413)
  let let488 := (Eq adrx5fmedhi let145)
  let let489 := (Not let379)
  let let490 := (Eq adrx5flo let137)
  let let491 := (binrel% HAdd.hAdd let63 arg1)
  let let492 := (Eq fmt0 let491)
  let let493 := (Eq arg1 let275)
  let let494 := (Eq let4 let128)
  let let495 := (And let46 (And let157 let21))
  let let496 := (Not let495)
  let let497 := (Implies let495 False)
  let let498 := (binrel% HAdd.hAdd let12 let352)
  let let499 := (binrel% HAdd.hAdd let4 let352)
  let let500 := (Eq let29 let159)
  let let501 := (Eq let4 let407)
  let let502 := (binrel% HMul.hMul let63 let83)
  let let503 := (binrel% HAdd.hAdd let370 let502)
  let let504 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 let503)))
  let let505 := (binrel% HAdd.hAdd let352 let503)
  let let506 := (Eq let33 let159)
  let let507 := (Eq let498 let412)
  let let508 := (Eq let28 let103)
  let let509 := (Eq let50 let410)
  let let510 := (Eq let14 let352)
  let let511 := (Eq let12 let12)
  let let512 := (Eq let4 let159)
  let let513 := (binrel% HAdd.hAdd let50 let14)
  let let514 := (binrel% HAdd.hAdd let4 arg1)
  let let515 := (selectx5fformat let514)
  let let516 := (Eq adrx5fmedhi let515)
  let let517 := (Eq let515 adrx5fmedhi)
  let let518 := (Eq x let159)
  let let519 := (Eq let29 let128)
  let let520 := (Eq let14 let480)
  let let521 := (Eq let3 let137)
  let let522 := (Eq let28 let159)
  let let523 := (Eq let164 let337)
  let let524 := (Or let418 False)
  let let525 := (binrel% HAdd.hAdd let4 let14)
  let let526 := (Eq let28 let137)
  let let527 := (Eq let4 let145)
  let let528 := (Neg.neg let3)
  let let529 := (binrel% HMul.hMul let63 let3)
  let let530 := (binrel% HAdd.hAdd let12 let14)
  let let531 := (Eq adrx5fmedhi let128)
  let let532 := (Eq let33 let126)
  let let533 := (Eq s let403)
  let let534 := (Eq let403 s)
  let let535 := (Eq adrx5fmedlo let128)
  let let536 := (Eq let28 let128)
  let let537 := (Eq let3 let153)
  let let538 := (Eq let4 let153)
  let let539 := (Eq percent let128)
  let let540 := (Eq let33 let128)
  let let541 := (Eq x let128)
  let let542 := (Eq let12 let159)
  let let543 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 (binrel% HAdd.hAdd let83 let86))))
  let let544 := (binrel% HAdd.hAdd let12 let132)
  let let545 := (Eq let121 let544)
  let let546 := (Eq let33 let137)
  let let547 := (binrel% HAdd.hAdd let528 fmt1)
  let let548 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let14 let528))
  let let549 := (Eq let28 let145)
  let let550 := (Eq let352 let352)
  let let551 := (binrel% HAdd.hAdd fmt1 let14)
  let let552 := (binrel% HAdd.hAdd let5 let551)
  let let553 := (binrel% HAdd.hAdd let1 let352)
  let let554 := (Eq percent let145)
  let let555 := (binrel% HMul.hMul let63 let14)
  let let556 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 (binrel% HAdd.hAdd let83 (binrel% HAdd.hAdd let528 let86)))))
  let let557 := (binrel% LE.le let43 let41)
  let let558 := (binrel% GE.ge fmt1 let237)
  let let559 := (Not let558)
  let let560 := (Eq let171 let327)
  let let561 := (binrel% HAdd.hAdd let370 (binrel% HAdd.hAdd let529 let502))
  let let562 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let350 (binrel% HAdd.hAdd let349 let561)))
  let let563 := (binrel% HAdd.hAdd let352 let561)
  let let564 := (Eq adrx5flo let98)
  let let565 := (Eq let33 let153)
  let let566 := (binrel% HAdd.hAdd let14 let373)
  let let567 := (Eq x let145)
  let let568 := (Eq adrx5fmedhi let159)
  let let569 := (Eq let14 let14)
  let let570 := (Eq let57 let59)
  let let571 := (binrel% HAdd.hAdd let86 let83)
  let let572 := (binrel% HAdd.hAdd let43 (binrel% HAdd.hAdd let39 let42))
  let let573 := (Eq let33 let33)
  let let574 := (Eq let28 let28)
  let let575 := (And let22 let294)
  let let576 := (And let24 let575)
  let let577 := (Not let576)
  let let578 := (Implies let576 False)
  let let579 := (Eq let3 let3)
  let let580 := (Eq let50 let50)
  let let581 := (binrel% HAdd.hAdd let1 fmt0)
  let let582 := (Or let119 (Or let118 (Or let117 (Or let115 let113))))
  let let583 := (Eq let83 let83)
  let let584 := (binrel% HAdd.hAdd let1 arg1)
  let let585 := (selectx5fformat let584)
  let let586 := (Eq adrx5fhi let585)
  let let587 := (Eq let585 adrx5fhi)
  let let588 := (binrel% HAdd.hAdd let12 arg1)
  let let589 := (selectx5fformat let588)
  let let590 := (Eq adrx5fmedlo let589)
  let let591 := (Eq let589 adrx5fmedlo)
  let let592 := (Eq adrx5flo let128)
  let let593 := (binrel% GE.ge let547 let63)
  let let594 := (Eq adrx5fhi let137)
  let let595 := (Eq percent let103)
  let let596 := (Eq adrx5fmedhi let137)
  let let597 := (And let104 (And let102 (And let99 (And let97 (And let94 let91)))))
  let let598 := (Not False)
  let let599 := (Eq let553 let406)
  let let600 := (Eq x let137)
  let let601 := (Eq let29 let145)
  let let602 := (binrel% HAdd.hAdd let4 fmt0)
  let let603 := (binrel% HAdd.hAdd let5 let272)
  let let604 := (binrel% HAdd.hAdd let6 let265)
  let let605 := (Eq let122 let394)
  let let606 := (And let46 let575)
  let let607 := (Not let606)
  let let608 := (Implies let606 False)
  let let609 := (Eq let3 let159)
  let let610 := (Eq percent let137)
  let let611 := (binrel% HAdd.hAdd let12 let13)
  let let612 := (Eq let132 let611)
  let let613 := (Eq let499 let409)
  let let614 := (Eq let13 let479)
  let let615 := (Eq percent let153)
  let let616 := (And let595 (And let533 (And let564 (And let590 (And let516 let586)))))
  let let617 := (Not let616)
  let let618 := (Or let381 let492)
  let let619 := (Eq fmt1 let392)
  let let620 := (Eq fmt1 let581)
  let let621 := (Eq fmt1 let602)
  let let622 := (Eq fmt1 let275)
  let let623 := (Eq fmt1 fmt0)
  let let624 := (Or let623 (Or let622 (Or let621 (Or let620 let619))))
  let let625 := (And let539 let346)
  let let626 := (smtIte let625 let424 let423 Prop)
  let let627 := (And let610 let541)
  let let628 := (smtIte let627 let430 let429 Prop)
  let let629 := (And let554 let600)
  let let630 := (smtIte let629 let436 let435 Prop)
  let let631 := (And let615 let567)
  let let632 := (smtIte let631 let309 let16 Prop)
  let let633 := (And let339 let340)
  let let634 := (smtIte let633 let157 let22 Prop)
  let let635 := (And let539 let336)
  let let636 := (smtIte let635 let448 let338 Prop)
  let let637 := (And let610 let331)
  let let638 := (smtIte let637 let333 let335 Prop)
  let let639 := (And let554 let326)
  let let640 := (smtIte let639 let454 let329 Prop)
  let let641 := (And let615 let320)
  let let642 := (smtIte let641 let74 let20 Prop)
  let let643 := (And let339 let319)
  let let644 := (smtIte let643 let24 let46 Prop)
  let let645 := (Or let339 (Or let302 (Or let518 (Or let303 (Or let304 (Or let568 (Or let305 (Or let214 (Or let615 (Or let319 (Or let340 (Or let306 (Or let307 (Or let313 (Or let383 (Or let209 (Or let554 (Or let320 (Or let567 (Or let484 (Or let314 (Or let488 (Or let315 (Or let204 (Or let610 (Or let326 (Or let600 (Or let490 (Or let316 (Or let596 (Or let594 (Or let199 (Or let539 (Or let331 (Or let541 (Or let592 (Or let535 (Or let531 (Or let317 let194)))))))))))))))))))))))))))))))))))))))
  let let646 := (xx5fcount let603)
  let let647 := (binrel% HMul.hMul let50 let646)
  let let648 := (sx5fcount let603)
  let let649 := (binrel% HMul.hMul let50 let648)
  let let650 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let649 let647))
  let let651 := (Eq arg1 let650)
  let let652 := (Not let291)
  let let653 := (Not let267)
  let let654 := (And let251 (And let250 (And let249 (And let248 (And let247 (And let246 (And let245 (And let244 (And let243 (And let242 (And let324 (And let258 (And let653 (And let273 (And let281 (And let652 (And let651 (And let645 (And let644 (And let642 (And let640 (And let638 (And let636 (And let634 (And let632 (And let630 (And let628 (And let626 (And let624 (And let618 let617))))))))))))))))))))))))))))))
  let let655 := (selectx5fformat let553)
  let let656 := (Eq let4 let655)
  let let657 := (selectx5fformat let499)
  let let658 := (Eq let50 let657)
  let let659 := (selectx5fformat let498)
  let let660 := (Eq let12 let659)
  let let661 := (And let508 (And let405 (And let397 (And let660 (And let658 let656)))))
  let let662 := (Not let661)
  let let663 := (Eq let14 let388)
  let let664 := (Or let510 let663)
  let let665 := (Eq fmt1 let513)
  let let666 := (Eq fmt1 let345)
  let let667 := (Eq fmt1 let525)
  let let668 := (Eq fmt1 let530)
  let let669 := (Or let421 (Or let668 (Or let667 (Or let666 let665))))
  let let670 := (And let536 let532)
  let let671 := (smtIte let670 let424 let423 Prop)
  let let672 := (And let526 let540)
  let let673 := (smtIte let672 let430 let429 Prop)
  let let674 := (And let549 let546)
  let let675 := (smtIte let674 let436 let435 Prop)
  let let676 := (And let385 let485)
  let let677 := (smtIte let676 let309 let16 Prop)
  let let678 := (And let522 let565)
  let let679 := (smtIte let678 let157 let22 Prop)
  let let680 := (And let536 let372)
  let let681 := (smtIte let680 let448 let338 Prop)
  let let682 := (And let526 let519)
  let let683 := (smtIte let682 let333 let335 Prop)
  let let684 := (And let549 let482)
  let let685 := (smtIte let684 let454 let329 Prop)
  let let686 := (And let385 let601)
  let let687 := (smtIte let686 let74 let20 Prop)
  let let688 := (And let522 let376)
  let let689 := (smtIte let688 let24 let46 Prop)
  let let690 := (Or let522 (Or let500 (Or let506 (Or let609 (Or let542 (Or let342 (Or let512 (Or let214 (Or let385 (Or let376 (Or let565 (Or let537 (Or let344 (Or let348 (Or let538 (Or let209 (Or let549 (Or let601 (Or let485 (Or let355 (Or let359 (Or let369 (Or let527 (Or let204 (Or let526 (Or let482 (Or let546 (Or let521 (Or let378 (Or let361 (Or let390 (Or let199 (Or let536 (Or let519 (Or let540 (Or let367 (Or let363 (Or let365 (Or let494 let194)))))))))))))))))))))))))))))))))))))))
  let let691 := (binrel% HAdd.hAdd fmt1 let555)
  let let692 := (binrel% HAdd.hAdd let5 let691)
  let let693 := (xx5fcount let692)
  let let694 := (binrel% HMul.hMul let50 let693)
  let let695 := (sx5fcount let692)
  let let696 := (binrel% HMul.hMul let50 let695)
  let let697 := (binrel% HAdd.hAdd let86 (binrel% HAdd.hAdd let696 let694))
  let let698 := (Eq let352 let697)
  let let699 := (binrel% GE.ge let563 let287)
  let let700 := (Not let699)
  let let701 := (binrel% GE.ge let505 let14)
  let let702 := (binrel% GE.ge let691 let4)
  let let703 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let555 let529))
  let let704 := (binrel% GE.ge let703 let63)
  let let705 := (Not let704)
  let let706 := (binrel% HAdd.hAdd let14 let374)
  let let707 := (binrel% GE.ge let706 let12)
  let let708 := (Not let707)
  let let709 := (Eq let14 let571)
  let let710 := (And let583 (And let579 (And let579 (And let511 (And let580 (And let483 (And let574 (And let386 (And let573 (And let569 (And let709 (And let708 (And let705 (And let702 (And let701 (And let700 (And let698 (And let690 (And let689 (And let687 (And let685 (And let683 (And let681 (And let679 (And let677 (And let675 (And let673 (And let671 (And let669 (And let664 let662))))))))))))))))))))))))))))))
  let let711 := (Eq And And)
  let let712 := (Eq fmt1 fmt1)
  let let713 := (Eq Or Or)
  let let714 := (Eq let423 let423)
  let let715 := (Eq let424 let424)
  let let716 := (Eq let429 let429)
  let let717 := (Eq let430 let430)
  let let718 := (Eq let435 let435)
  let let719 := (Eq let436 let436)
  let let720 := (Eq let16 let16)
  let let721 := (Eq let309 let309)
  let let722 := (Eq let22 let22)
  let let723 := (Eq let157 let157)
  let let724 := (Eq let338 let338)
  let let725 := (Eq let448 let448)
  let let726 := (Eq let335 let335)
  let let727 := (Eq let333 let333)
  let let728 := (Eq let329 let329)
  let let729 := (Eq let454 let454)
  let let730 := (Eq let20 let20)
  let let731 := (Eq let74 let74)
  let let732 := (Eq let46 let46)
  let let733 := (Eq let24 let24)
  let let734 := (Eq let194 let194)
  let let735 := (Eq let199 let199)
  let let736 := (Eq let204 let204)
  let let737 := (Eq let209 let209)
  let let738 := (Eq let214 let214)
  let let739 := (Eq let5 let5)
  let let740 := (Eq let287 let287)
  let let741 := (Eq let63 let63)
  let let742 := (Eq arg1 let352)
  let let743 := (And let242 (And let243 (And let244 (And let245 (And let246 (And let247 (And let248 (And let249 (And let250 let251)))))))))
  let let744 := (And let87 let743)
  let let745 := (Eq arg1 arg1)
  let let746 := (Eq arg0 arg0)
  let let747 := (Eq let14 let85)
  let let748 := (Eq arg1 let697)
  let let749 := (Eq let650 let697)
  let let750 := (Eq let647 let694)
  let let751 := (Eq let646 let693)
  let let752 := (Eq let603 let692)
  let let753 := (Eq let265 let555)
  let let754 := (Eq let649 let696)
  let let755 := (Eq let648 let695)
  let let756 := (Not let2)
  let let757 := (Not let46)
  let let758 := (Or let757 let756)
  let let759 := (Not let20)
  let let760 := (Or let757 (Or let759 let756))
  let let761 := (Not let22)
  let let762 := (Or let757 let761)
  let let763 := (Not let16)
  let let764 := (Or let761 let58)
  let let765 := (Or let379 let58)
  let let766 := (Or let761 let765)
  let let767 := (Eq let14 let8)
  let let768 := (Eq let14 let7)
  let let769 := (And let10 (And let768 let767))
  let let770 := (Implies let606 let769)
  let let771 := (Eq let769 False)
  let let772 := (Or (Not let767) False)
  let let773 := (Not let768)
  let let774 := (Eq let8 let14)
  let let775 := (Not let774)
  let let776 := (Or let775 False)
  let let777 := (binrel% HAdd.hAdd let80 let81)
  let let778 := (binrel% HAdd.hAdd let80 let777)
  let let779 := (binrel% HAdd.hAdd let330 (binrel% HAdd.hAdd let69 let73))
  let let780 := (binrel% LE.le let779 let778)
  let let781 := (binrel% LE.le let73 let81)
  let let782 := (And let254 let10)
  let let783 := (Implies let782 let781)
  let let784 := (Eq let69 let80)
  let let785 := (Eq let7 let14)
  let let786 := (And let67 let785)
  let let787 := (Implies let786 let784)
  let let788 := (Eq let330 let80)
  let let789 := (And let67 let774)
  let let790 := (Implies let789 let788)
  let let791 := (And let66 let46)
  let let792 := (Implies let791 let767)
  let let793 := (Or let757 let767)
  let let794 := (Not let66)
  let let795 := (Or let794 let793)
  let let796 := (Eq let19 let8)
  let let797 := (Eq let6 let14)
  let let798 := (Eq let14 let19)
  let let799 := (Eq let57 let66)
  let let800 := (And let66 let22)
  let let801 := (Implies let800 let768)
  let let802 := (Or let761 let768)
  let let803 := (Or let794 let802)
  let let804 := (Eq let15 let7)
  let let805 := (Eq let14 let15)
  let let806 := (Not let476)
  let let807 := (Or let806 (Or let51 (Or let57 let2)))
  let let808 := (Or let806 (Or let54 (Or let59 let2)))
  let let809 := (And let476 (And let52 let58))
  let let810 := (Eq let1 fmt1)
  let let811 := (And let476 (And let58 let52))
  let let812 := (Or let763 let756)
  let let813 := (Or let761 let812)
  let let814 := (Or let757 let813)
  let let815 := (Or let759 let813)
  let let816 := (Or let379 let756)
  let let817 := (Or let763 let816)
  let let818 := (Or let759 let817)
  let let819 := (Or let761 let818)
  let let820 := (Implies let47 let769)
  let let821 := (And let486 (And let20 let46))
  let let822 := (Implies let821 let767)
  let let823 := (Not let486)
  let let824 := (Or let823 (Or let759 let793))
  let let825 := (Eq let18 let8)
  let let826 := (Eq let6 let12)
  let let827 := (Eq let2 let486)
  let let828 := (And let486 (And let16 let22))
  let let829 := (Implies let828 let768)
  let let830 := (Or let823 (Or let763 let802))
  let let831 := (Eq let13 let7)
  let let832 := (Not let459)
  let let833 := (Not let74)
  let let834 := (Eq let12 let8)
  let let835 := (And let10 (And let768 let834))
  let let836 := (Implies let75 let835)
  let let837 := (Eq let835 False)
  let let838 := (Eq let8 let12)
  let let839 := (Not let838)
  let let840 := (binrel% HAdd.hAdd let40 let777)
  let let841 := (binrel% LE.le let779 let840)
  let let842 := (Eq let330 let40)
  let let843 := (And let67 let838)
  let let844 := (Or let763 (Or let379 (Or let756 let835)))
  let let845 := (Eq let12 let18)
  let let846 := (And let486 let845)
  let let847 := (And let74 let46)
  let let848 := (Not let309)
  let let849 := (Eq let12 let7)
  let let850 := (And let10 (And let849 let767))
  let let851 := (Implies let310 let850)
  let let852 := (Eq let850 False)
  let let853 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let40 let81))
  let let854 := (binrel% LE.le let779 let853)
  let let855 := (Eq let69 let40)
  let let856 := (Eq let7 let12)
  let let857 := (And let67 let856)
  let let858 := (Or let379 (Or let756 let850))
  let let859 := (Eq let12 let13)
  let let860 := (And let486 let859)
  let let861 := (And let309 let22)
  let let862 := (Not let442)
  let let863 := (Not let446)
  let let864 := (Not let444)
  let let865 := (Not let384)
  let let866 := (Or let864 let865)
  let let867 := (Implies let444 let865)
  let let868 := (Eq let384 False)
  let let869 := (Not let157)
  let let870 := (Implies let495 let850)
  let let871 := (And let486 (And let16 let157))
  let let872 := (Or let869 let849)
  let let873 := (Eq let12 let15)
  let let874 := (Not let441)
  let let875 := (Not let458)
  let let876 := (Or let874 let875)
  let let877 := (Implies let441 let875)
  let let878 := (Not let461)
  let let879 := (Not let375)
  let let880 := (Or let879 let878)
  let let881 := (Or let879 let864)
  let let882 := (Implies let375 let864)
  let let883 := (Or let879 let865)
  let let884 := (Implies let375 let865)
  let let885 := (Or let384 let444)
  let let886 := (Not let24)
  let let887 := (Implies let25 let835)
  let let888 := (And let486 (And let20 let24))
  let let889 := (Or let886 let834)
  let let890 := (Eq let12 let19)
  let let891 := (Implies let576 let835)
  let let892 := (And let66 let24)
  let let893 := (Implies let295 let850)
  let let894 := (And let66 let157)
fun lean_r0 : (Eq let27 let26) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq let32 let31) => -- THEORY_REWRITE_BOOL
fun lean_r2 : let32 => -- THEORY_REWRITE_ARITH
fun lean_r3 : let35 => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let38 let37) => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq let40 let39) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let45 let41) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let49 let48) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let53 let52) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let56 let55) => -- THEORY_REWRITE_BOOL
fun lean_r10 : let60 => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let61 True) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let65 let62) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let66 let57) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let67 True) => -- EVALUATE
fun lean_r15 : (Eq let69 let68) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let73 let71) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let77 let76) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let79 let43) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let80 let43) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let81 let42) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let82 False) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let85 let84) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let88 let87) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let253 let252) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let254 True) => -- EVALUATE
fun lean_r26 : (Eq let239 let258) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let261 let260) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let237 let263) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let269 let267) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let235 let271) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let276 let274) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let277 let273) => -- THEORY_REWRITE_BOOL
fun lean_r33 : (Eq let234 let281) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let233 let283) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let286 let285) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let284 let287) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let289 let288) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let292 let291) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let228 let293) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let297 let296) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let223 let298) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let222 let300) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let301 True) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let220 let302) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let218 let303) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let217 let304) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let215 let305) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let213 let306) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let212 let307) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let312 let311) => -- THEORY_REWRITE_BOOL
fun lean_r51 : (Eq let211 let313) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let207 let314) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let205 let315) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let202 let316) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let195 let317) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let35 let318) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let190 let319) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let187 let320) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let322 let74) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let240 let323) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let184 let20) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let325 let324) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let181 let326) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let179 let327) => -- THEORY_REWRITE_ARITH
fun lean_r65 : let261 => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let263 let328) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let178 let329) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let330 let78) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let262 let63) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let175 let331) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let173 let332) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let334 let333) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let172 let335) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let168 let336) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let166 let337) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let165 let338) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let160 let339) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let158 let340) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let342 let341) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let344 let343) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let345 let1) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let127 let346) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let348 let347) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let353 let10) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let299 let5) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let355 let354) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let357 let356) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let359 let358) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let361 let360) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let363 let362) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let365 let364) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let367 let366) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let369 let368) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let370 let83) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let372 let371) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let374 let373) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let376 let375) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let378 let377) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let380 let379) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let382 let381) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let210 let383) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let385 let384) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let109 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let386 True) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let387 let268) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let388 let388) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let390 let389) => -- THEORY_REWRITE_ARITH
fun lean_r108 : let56 => -- THEORY_REWRITE_BOOL
fun lean_r109 : (Eq let221 let391) => -- THEORY_REWRITE_BOOL
fun lean_r110 : (Eq let112 let392) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let393 let6) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let124 let394) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let397 let396) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let398 let42) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let401 let399) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let405 let404) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let478 let477) => -- THEORY_REWRITE_BOOL
fun lean_r118 : (Eq let150 let479) => -- THEORY_REWRITE_ARITH
fun lean_r119 : let481 => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let482 let455) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let483 True) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let208 let484) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let485 let441) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let486 let2) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let487 let414) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let206 let488) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let489 let10) => -- THEORY_REWRITE_BOOL
fun lean_r128 : (Eq let203 let490) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let493 let492) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let494 let463) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let497 let496) => -- THEORY_REWRITE_BOOL
fun lean_r132 : (Eq let498 let498) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let499 let499) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let500 let472) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let501 let408) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let505 let504) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let506 let471) => -- THEORY_REWRITE_ARITH
fun lean_r138 : let507 => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let508 let415) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let509 let411) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let510 let418) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let511 True) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let512 let468) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let513 let50) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let517 let516) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let133 let429) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let219 let518) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let519 let451) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let520 False) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let521 let464) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let522 let445) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let523 let448) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let524 let418) => -- THEORY_REWRITE_BOOL
fun lean_r154 : (Eq let525 let4) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let526 let432) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let527 let465) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let529 let528) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let530 let12) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let141 let435) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let196 let531) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let532 let425) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq let534 let533) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let197 let535) => -- THEORY_REWRITE_ARITH
fun lean_r164 : (Eq let536 let426) => -- THEORY_REWRITE_ARITH
fun lean_r165 : (Eq let537 let467) => -- THEORY_REWRITE_ARITH
fun lean_r166 : (Eq let538 let466) => -- THEORY_REWRITE_ARITH
fun lean_r167 : (Eq let129 let539) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let540 let431) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let136 let541) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let542 let469) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let543 let352) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let92 let514) => -- THEORY_REWRITE_ARITH
fun lean_r173 : (Eq let545 let430) => -- THEORY_REWRITE_ARITH
fun lean_r174 : (Eq let546 let437) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let548 let547) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let549 let438) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq let550 True) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let232 let286) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let552 let6) => -- THEORY_REWRITE_ARITH
fun lean_r180 : let38 => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq let553 let553) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq let146 let554) => -- THEORY_REWRITE_ARITH
fun lean_r183 : (Eq let555 let14) => -- THEORY_REWRITE_ARITH
fun lean_r184 : (Eq let107 let275) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq let556 let400) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let502 let86) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let557 False) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq let238 let559) => -- THEORY_REWRITE_ARITH
fun lean_r189 : (Eq let560 let454) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq let563 let562) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let99 let564) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let551 fmt1) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq let565 let444) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let566 let373) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq let152 let567) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let216 let568) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq let569 True) => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq let60 let570) => -- THEORY_REWRITE_BOOL
fun lean_r199 : (Eq let571 let14) => -- THEORY_REWRITE_ARITH
fun lean_r200 : (Eq let572 let41) => -- THEORY_REWRITE_ARITH
fun lean_r201 : (Eq let573 True) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let574 True) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq let578 let577) => -- THEORY_REWRITE_BOOL
fun lean_r204 : (Eq let579 True) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq let580 True) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq let114 let581) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let120 let582) => -- THEORY_REWRITE_BOOL
fun lean_r208 : (Eq let583 True) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let587 let586) => -- THEORY_REWRITE_ARITH
fun lean_r210 : (Eq let89 let584) => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let185 let321) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq let591 let590) => -- THEORY_REWRITE_ARITH
fun lean_r213 : (Eq let95 let588) => -- THEORY_REWRITE_ARITH
fun lean_r214 : (Eq let198 let592) => -- THEORY_REWRITE_ARITH
fun lean_r215 : (Eq let593 let51) => -- THEORY_REWRITE_ARITH
fun lean_r216 : (Eq let100 let402) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq let200 let594) => -- THEORY_REWRITE_ARITH
fun lean_r218 : (Eq let104 let595) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq let201 let596) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let105 let597) => -- THEORY_REWRITE_BOOL
fun lean_r221 : (Eq let598 True) => -- THEORY_REWRITE_BOOL
fun lean_r222 : let599 => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let144 let600) => -- THEORY_REWRITE_ARITH
fun lean_r224 : (Eq let601 let458) => -- THEORY_REWRITE_ARITH
fun lean_r225 : (Eq let116 let602) => -- THEORY_REWRITE_ARITH
fun lean_r226 : (Eq let604 let603) => -- THEORY_REWRITE_ARITH
fun lean_r227 : (Eq let123 let423) => -- THEORY_REWRITE_ARITH
fun lean_r228 : (Eq let605 let424) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq let608 let607) => -- THEORY_REWRITE_BOOL
fun lean_r230 : (Eq let134 let544) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq let609 let470) => -- THEORY_REWRITE_ARITH
fun lean_r232 : (Eq let138 let610) => -- THEORY_REWRITE_ARITH
fun lean_r233 : (Eq let612 let436) => -- THEORY_REWRITE_ARITH
fun lean_r234 : (Eq let142 let611) => -- THEORY_REWRITE_ARITH
fun lean_r235 : (Eq let149 let16) => -- THEORY_REWRITE_ARITH
fun lean_r236 : let613 => -- THEORY_REWRITE_ARITH
fun lean_r237 : (Eq let614 let309) => -- THEORY_REWRITE_ARITH
fun lean_r238 : (Eq let154 let615) => -- THEORY_REWRITE_ARITH
fun lean_a239 : let253 => by
have lean_s0 : (Or let757 (Or let869 (Or let379 (Or let58 let850)))) :=
  (scope (fun lean_a240 : let46 =>
    (scope (fun lean_a241 : let157 =>
      (scope (fun lean_a242 : let10 =>
        (scope (fun lean_a243 : let57 =>
          have lean_s0 : let799 := by timed Eq.symm lean_r13
          have lean_s1 : let66 := by timed eqResolve lean_a243 lean_s0
          have lean_s2 : let894 := by timed And.intro lean_s1 lean_a241
          have lean_s3 : (Or let794 let872) :=
            (scope (fun lean_a244 : let66 =>
              (scope (fun lean_a245 : let157 =>
                have lean_s3 : let873 := by timed Eq.symm lean_a245
                have lean_s4 : let797 := by timed Eq.symm lean_a244
                have lean_s5 : let66 := by timed Eq.symm lean_s4
                have lean_s6 : let804 := by timed flipCongrArg lean_s5 [xx5fcount]
                have lean_s7 : let849 := by timed Eq.trans lean_s3 lean_s6
                show let849 from lean_s7
            ))))
          have lean_s4 : (Implies let894 let849) := by liftOrNToImp lean_s3, 2
          have lean_s5 : let849 := by timed modusPonens lean_s2 lean_s4
          have lean_s6 : let791 := by timed And.intro lean_s1 lean_a240
          have lean_s7 : let795 :=
            (scope (fun lean_a245 : let66 =>
              (scope (fun lean_a246 : let46 =>
                have lean_s7 : let798 := by timed Eq.symm lean_a246
                have lean_s8 : let797 := by timed Eq.symm lean_a245
                have lean_s9 : let66 := by timed Eq.symm lean_s8
                have lean_s10 : let796 := by timed flipCongrArg lean_s9 [sx5fcount]
                have lean_s11 : let767 := by timed Eq.trans lean_s7 lean_s10
                show let767 from lean_s11
            ))))
          have lean_s8 : let792 := by liftOrNToImp lean_s7, 2
          have lean_s9 : let767 := by timed modusPonens lean_s6 lean_s8
          let lean_s10 := by timed And.intro lean_s5 lean_s9
          have lean_s11 : let850 := by timed And.intro lean_a242 lean_s10
          show let850 from lean_s11
  ))))))))
have lean_s1 : let893 := by liftOrNToImp lean_s0, 4
have lean_s2 : (Eq let295 let295) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or let379 (Or (Not let849) let772)) :=
  (scope (fun lean_a245 : let10 =>
    (scope (fun lean_a246 : let849 =>
      (scope (fun lean_a247 : let767 =>
        have lean_s4 : let774 := by timed Eq.symm lean_a247
        have lean_s5 : let776 :=
          (scope (fun lean_a247 : let774 =>
            have lean_s5 : let67 := by timed trueElim lean_r14
            have lean_s6 : let789 := by timed And.intro lean_s5 lean_a247
            have lean_s7 : let790 := by arithMulPos [let8, let14, let39], 4
            have lean_s8 : let788 := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : let856 := by timed Eq.symm lean_a246
            have lean_s10 : let857 := by timed And.intro lean_s5 lean_s9
            have lean_s11 : (Implies let857 let855) := by arithMulPos [let7, let12, let39], 4
            have lean_s12 : let855 := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : let254 := by timed trueElim lean_r25
            have lean_s14 : let782 := by timed And.intro lean_s13 lean_a245
            have lean_s15 : let783 := by arithMulNeg [let9, let3, let72], 3
            have lean_s16 : let781 := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : let854 := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r15 lean_r16
            have lean_s19 : (Eq let779 let79) := by timed congrHAdd lean_r68 lean_s18
            have lean_s20 : (Eq let779 let43) := by timed Eq.trans lean_s19 lean_r18
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r5 lean_r20
            have lean_s23 : (Eq let853 let572) := by timed congrHAdd lean_r19 lean_s22
            have lean_s24 : (Eq let853 let41) := by timed Eq.trans lean_s23 lean_r200
            have lean_s25 : (Eq let854 let557) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let854 False) := by timed Eq.trans lean_s25 lean_r187
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : let775 := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not let850) := by liftOrNToNeg lean_s4
have lean_s6 : let852 := by timed falseIntro lean_s5
have lean_s7 : (Eq let893 let297) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let893 let296) := by timed Eq.trans lean_s7 lean_r40
have lean_s9 : let296 := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or let757 (Or let869 let765)) := by timed flipNotAnd lean_s9 [let46, let157, let10, let57]
have lean_s11 : (Or let379 (Or let757 (Or let869 let58))) := by permutateOr lean_s10, [2, 0, 1, 3], (- 1)
have lean_s12 : let711 := by timed rfl
have lean_s13 : (Eq let251 let251) := by timed rfl
let lean_s14 := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq let250 let250) := by timed rfl
let lean_s16 := by timed congr lean_s12 lean_s15
have lean_s17 : (Eq let249 let249) := by timed rfl
let lean_s18 := by timed congr lean_s12 lean_s17
have lean_s19 : (Eq let248 let248) := by timed rfl
let lean_s20 := by timed congr lean_s12 lean_s19
have lean_s21 : (Eq let247 let247) := by timed rfl
let lean_s22 := by timed congr lean_s12 lean_s21
have lean_s23 : (Eq let246 let246) := by timed rfl
let lean_s24 := by timed congr lean_s12 lean_s23
have lean_s25 : (Eq let245 let245) := by timed rfl
let lean_s26 := by timed congr lean_s12 lean_s25
have lean_s27 : (Eq let244 let244) := by timed rfl
let lean_s28 := by timed congr lean_s12 lean_s27
have lean_s29 : (Eq let243 let243) := by timed rfl
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq let242 let242) := by timed rfl
let lean_s32 := by timed congr lean_s12 lean_s31
have lean_s33 : let746 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let241 let325) := by timed congr lean_s34 lean_r60
have lean_s36 : (Eq let241 let324) := by timed Eq.trans lean_s35 lean_r62
let lean_s37 := by timed congr lean_s12 lean_s36
let lean_s38 := by timed congr lean_s12 lean_r26
have lean_s39 : let712 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [GE.ge]
have lean_s41 : (Eq fmt0 fmt0) := by timed rfl
have lean_s42 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s43 := by timed congrHAdd lean_s42 lean_r69
have lean_s44 : (Eq let328 let387) := by timed congrHAdd lean_s41 lean_s43
have lean_s45 : (Eq let328 let268) := by timed Eq.trans lean_s44 lean_r105
have lean_s46 : (Eq let263 let268) := by timed Eq.trans lean_r66 lean_s45
have lean_s47 : (Eq let237 let268) := by timed Eq.trans lean_r28 lean_s46
have lean_s48 : (Eq let558 let269) := by timed congr lean_s40 lean_s47
have lean_s49 : (Eq let558 let267) := by timed Eq.trans lean_s48 lean_r29
have lean_s50 : (Eq let559 let653) := by timed flipCongrArg lean_s49 [Not]
have lean_s51 : (Eq let238 let653) := by timed Eq.trans lean_r188 lean_s50
let lean_s52 := by timed congr lean_s12 lean_s51
let lean_s53 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s54 : (Eq let270 let276) := by timed congr lean_s53 lean_r184
have lean_s55 : (Eq let270 let274) := by timed Eq.trans lean_s54 lean_r31
have lean_s56 : (Eq let271 let277) := by timed flipCongrArg lean_s55 [Not]
have lean_s57 : (Eq let271 let273) := by timed Eq.trans lean_s56 lean_r32
have lean_s58 : (Eq let235 let273) := by timed Eq.trans lean_r30 lean_s57
let lean_s59 := by timed congr lean_s12 lean_s58
let lean_s60 := by timed congr lean_s12 lean_r33
have lean_s61 : let745 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq distance distance) := by timed rfl
let lean_s64 := by timed congrHAdd lean_s42 lean_r36
let lean_s65 := by timed congrHAdd lean_s63 lean_s64
have lean_s66 : (Eq let285 let289) := by timed congrHAdd lean_s33 lean_s65
have lean_s67 : (Eq let285 let288) := by timed Eq.trans lean_s66 lean_r37
have lean_s68 : (Eq let286 let288) := by timed Eq.trans lean_r35 lean_s67
have lean_s69 : (Eq let232 let288) := by timed Eq.trans lean_r178 lean_s68
have lean_s70 : (Eq let282 let292) := by timed congr lean_s62 lean_s69
have lean_s71 : (Eq let282 let291) := by timed Eq.trans lean_s70 lean_r38
have lean_s72 : (Eq let283 let652) := by timed flipCongrArg lean_s71 [Not]
have lean_s73 : (Eq let233 let652) := by timed Eq.trans lean_r34 lean_s72
let lean_s74 := by timed congr lean_s12 lean_s73
let lean_s75 := by timed flipCongrArg lean_s61 [Eq]
have lean_s76 : let580 := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [HMul.hMul]
let lean_s78 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s79 : (Eq let300 let393) := by timed congr lean_s78 lean_r85
have lean_s80 : (Eq let300 let6) := by timed Eq.trans lean_s79 lean_r111
have lean_s81 : (Eq let222 let6) := by timed Eq.trans lean_r42 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let265 let265) := by timed rfl
have lean_s84 : (Eq let298 let604) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let298 let603) := by timed Eq.trans lean_s84 lean_r226
have lean_s86 : (Eq let223 let603) := by timed Eq.trans lean_r41 lean_s85
have lean_s87 : (Eq let226 let648) := by timed flipCongrArg lean_s86 [sx5fcount]
have lean_s88 : (Eq let227 let649) := by timed congr lean_s77 lean_s87
let lean_s89 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s90 : (Eq let224 let646) := by timed flipCongrArg lean_s86 [xx5fcount]
have lean_s91 : (Eq let225 let647) := by timed congr lean_s89 lean_s90
let lean_s92 := by timed congrHAdd lean_s88 lean_s91
have lean_s93 : (Eq let293 let650) := by timed congrHAdd lean_s33 lean_s92
have lean_s94 : (Eq let228 let650) := by timed Eq.trans lean_r39 lean_s93
have lean_s95 : (Eq let229 let651) := by timed congr lean_s75 lean_s94
let lean_s96 := by timed congr lean_s12 lean_s95
have lean_s97 : let713 := by timed rfl
let lean_s98 := by timed congr lean_s97 lean_r77
let lean_s99 := by timed congr lean_s97 lean_r44
let lean_s100 := by timed congr lean_s97 lean_r147
let lean_s101 := by timed congr lean_s97 lean_r45
let lean_s102 := by timed congr lean_s97 lean_r46
let lean_s103 := by timed congr lean_s97 lean_r196
let lean_s104 := by timed congr lean_s97 lean_r47
have lean_s105 : let738 := by timed rfl
let lean_s106 := by timed congr lean_s97 lean_s105
let lean_s107 := by timed congr lean_s97 lean_r238
let lean_s108 := by timed congr lean_s97 lean_r57
let lean_s109 := by timed congr lean_s97 lean_r78
let lean_s110 := by timed congr lean_s97 lean_r48
let lean_s111 := by timed congr lean_s97 lean_r49
let lean_s112 := by timed congr lean_s97 lean_r51
let lean_s113 := by timed congr lean_s97 lean_r101
have lean_s114 : let737 := by timed rfl
let lean_s115 := by timed congr lean_s97 lean_s114
let lean_s116 := by timed congr lean_s97 lean_r182
let lean_s117 := by timed congr lean_s97 lean_r58
let lean_s118 := by timed congr lean_s97 lean_r195
let lean_s119 := by timed congr lean_s97 lean_r122
let lean_s120 := by timed congr lean_s97 lean_r52
let lean_s121 := by timed congr lean_s97 lean_r126
let lean_s122 := by timed congr lean_s97 lean_r53
have lean_s123 : let736 := by timed rfl
let lean_s124 := by timed congr lean_s97 lean_s123
let lean_s125 := by timed congr lean_s97 lean_r232
let lean_s126 := by timed congr lean_s97 lean_r63
let lean_s127 := by timed congr lean_s97 lean_r223
let lean_s128 := by timed congr lean_s97 lean_r128
let lean_s129 := by timed congr lean_s97 lean_r54
let lean_s130 := by timed congr lean_s97 lean_r219
let lean_s131 := by timed congr lean_s97 lean_r217
have lean_s132 : let735 := by timed rfl
let lean_s133 := by timed congr lean_s97 lean_s132
let lean_s134 := by timed congr lean_s97 lean_r167
let lean_s135 := by timed congr lean_s97 lean_r70
let lean_s136 := by timed congr lean_s97 lean_r169
let lean_s137 := by timed congr lean_s97 lean_r214
let lean_s138 := by timed congr lean_s97 lean_r163
let lean_s139 := by timed congr lean_s97 lean_r160
let lean_s140 := by timed congr lean_s97 lean_r55
have lean_s141 : let734 := by timed rfl
let lean_s142 := by timed congr lean_s140 lean_s141
let lean_s143 := by timed congr lean_s139 lean_s142
let lean_s144 := by timed congr lean_s138 lean_s143
let lean_s145 := by timed congr lean_s137 lean_s144
let lean_s146 := by timed congr lean_s136 lean_s145
let lean_s147 := by timed congr lean_s135 lean_s146
let lean_s148 := by timed congr lean_s134 lean_s147
let lean_s149 := by timed congr lean_s133 lean_s148
let lean_s150 := by timed congr lean_s131 lean_s149
let lean_s151 := by timed congr lean_s130 lean_s150
let lean_s152 := by timed congr lean_s129 lean_s151
let lean_s153 := by timed congr lean_s128 lean_s152
let lean_s154 := by timed congr lean_s127 lean_s153
let lean_s155 := by timed congr lean_s126 lean_s154
let lean_s156 := by timed congr lean_s125 lean_s155
let lean_s157 := by timed congr lean_s124 lean_s156
let lean_s158 := by timed congr lean_s122 lean_s157
let lean_s159 := by timed congr lean_s121 lean_s158
let lean_s160 := by timed congr lean_s120 lean_s159
let lean_s161 := by timed congr lean_s119 lean_s160
let lean_s162 := by timed congr lean_s118 lean_s161
let lean_s163 := by timed congr lean_s117 lean_s162
let lean_s164 := by timed congr lean_s116 lean_s163
let lean_s165 := by timed congr lean_s115 lean_s164
let lean_s166 := by timed congr lean_s113 lean_s165
let lean_s167 := by timed congr lean_s112 lean_s166
let lean_s168 := by timed congr lean_s111 lean_s167
let lean_s169 := by timed congr lean_s110 lean_s168
let lean_s170 := by timed congr lean_s109 lean_s169
let lean_s171 := by timed congr lean_s108 lean_s170
let lean_s172 := by timed congr lean_s107 lean_s171
let lean_s173 := by timed congr lean_s106 lean_s172
let lean_s174 := by timed congr lean_s104 lean_s173
let lean_s175 := by timed congr lean_s103 lean_s174
let lean_s176 := by timed congr lean_s102 lean_s175
let lean_s177 := by timed congr lean_s101 lean_s176
let lean_s178 := by timed congr lean_s100 lean_s177
let lean_s179 := by timed congr lean_s99 lean_s178
have lean_s180 : (Eq let391 let645) := by timed congr lean_s98 lean_s179
have lean_s181 : (Eq let221 let645) := by timed Eq.trans lean_r109 lean_s180
let lean_s182 := by timed congr lean_s12 lean_s181
let lean_s183 := by timed flipCongrArg lean_r77 [And]
have lean_s184 : (Eq let191 let643) := by timed congr lean_s183 lean_r57
have lean_s185 : let733 := by timed rfl
have lean_s186 : let732 := by timed rfl
have lean_s187 : (Eq let192 let644) := by timed congrIte lean_s184 lean_s185 lean_s186
let lean_s188 := by timed congr lean_s12 lean_s187
let lean_s189 := by timed flipCongrArg lean_r238 [And]
have lean_s190 : (Eq let188 let641) := by timed congr lean_s189 lean_r58
have lean_s191 : (Eq let18 let18) := by timed rfl
let lean_s192 := by timed flipCongrArg lean_s191 [Eq]
have lean_s193 : (Eq let186 let322) := by timed congr lean_s192 lean_r211
have lean_s194 : (Eq let186 let74) := by timed Eq.trans lean_s193 lean_r59
have lean_s195 : (Eq let189 let642) := by timed congrIte lean_s190 lean_s194 lean_r61
let lean_s196 := by timed congr lean_s12 lean_s195
let lean_s197 := by timed flipCongrArg lean_r182 [And]
have lean_s198 : (Eq let182 let639) := by timed congr lean_s197 lean_r63
have lean_s199 : (Eq let171 let171) := by timed rfl
let lean_s200 := by timed flipCongrArg lean_s199 [Eq]
have lean_s201 : (Eq let180 let560) := by timed congr lean_s200 lean_r64
have lean_s202 : (Eq let180 let454) := by timed Eq.trans lean_s201 lean_r189
have lean_s203 : (Eq let183 let640) := by timed congrIte lean_s198 lean_s202 lean_r67
let lean_s204 := by timed congr lean_s12 lean_s203
let lean_s205 := by timed flipCongrArg lean_r232 [And]
have lean_s206 : (Eq let176 let637) := by timed congr lean_s205 lean_r70
have lean_s207 : (Eq let163 let163) := by timed rfl
let lean_s208 := by timed flipCongrArg lean_s207 [Eq]
have lean_s209 : (Eq let174 let334) := by timed congr lean_s208 lean_r71
have lean_s210 : (Eq let174 let333) := by timed Eq.trans lean_s209 lean_r72
have lean_s211 : (Eq let177 let638) := by timed congrIte lean_s206 lean_s210 lean_r73
let lean_s212 := by timed congr lean_s12 lean_s211
let lean_s213 := by timed flipCongrArg lean_r167 [And]
have lean_s214 : (Eq let169 let635) := by timed congr lean_s213 lean_r74
have lean_s215 : (Eq let164 let164) := by timed rfl
let lean_s216 := by timed flipCongrArg lean_s215 [Eq]
have lean_s217 : (Eq let167 let523) := by timed congr lean_s216 lean_r75
have lean_s218 : (Eq let167 let448) := by timed Eq.trans lean_s217 lean_r152
have lean_s219 : (Eq let170 let636) := by timed congrIte lean_s214 lean_s218 lean_r76
let lean_s220 := by timed congr lean_s12 lean_s219
let lean_s221 := by timed flipCongrArg lean_r77 [And]
have lean_s222 : (Eq let161 let633) := by timed congr lean_s221 lean_r78
have lean_s223 : let723 := by timed rfl
have lean_s224 : let722 := by timed rfl
have lean_s225 : (Eq let162 let634) := by timed congrIte lean_s222 lean_s223 lean_s224
let lean_s226 := by timed congr lean_s12 lean_s225
let lean_s227 := by timed flipCongrArg lean_r238 [And]
have lean_s228 : (Eq let155 let631) := by timed congr lean_s227 lean_r195
have lean_s229 : (Eq let13 let13) := by timed rfl
let lean_s230 := by timed flipCongrArg lean_s229 [Eq]
have lean_s231 : (Eq let151 let614) := by timed congr lean_s230 lean_r118
have lean_s232 : (Eq let151 let309) := by timed Eq.trans lean_s231 lean_r237
have lean_s233 : (Eq let156 let632) := by timed congrIte lean_s228 lean_s232 lean_r235
let lean_s234 := by timed congr lean_s12 lean_s233
let lean_s235 := by timed flipCongrArg lean_r182 [And]
have lean_s236 : (Eq let147 let629) := by timed congr lean_s235 lean_r223
have lean_s237 : (Eq let132 let132) := by timed rfl
let lean_s238 := by timed flipCongrArg lean_s237 [Eq]
have lean_s239 : (Eq let143 let612) := by timed congr lean_s238 lean_r234
have lean_s240 : (Eq let143 let436) := by timed Eq.trans lean_s239 lean_r233
have lean_s241 : (Eq let148 let630) := by timed congrIte lean_s236 lean_s240 lean_r159
let lean_s242 := by timed congr lean_s12 lean_s241
let lean_s243 := by timed flipCongrArg lean_r232 [And]
have lean_s244 : (Eq let139 let627) := by timed congr lean_s243 lean_r169
have lean_s245 : (Eq let121 let121) := by timed rfl
let lean_s246 := by timed flipCongrArg lean_s245 [Eq]
have lean_s247 : (Eq let135 let545) := by timed congr lean_s246 lean_r230
have lean_s248 : (Eq let135 let430) := by timed Eq.trans lean_s247 lean_r173
have lean_s249 : (Eq let140 let628) := by timed congrIte lean_s244 lean_s248 lean_r146
let lean_s250 := by timed congr lean_s12 lean_s249
let lean_s251 := by timed flipCongrArg lean_r167 [And]
have lean_s252 : (Eq let130 let625) := by timed congr lean_s251 lean_r82
have lean_s253 : (Eq let122 let122) := by timed rfl
let lean_s254 := by timed flipCongrArg lean_s253 [Eq]
have lean_s255 : (Eq let125 let605) := by timed congr lean_s254 lean_r112
have lean_s256 : (Eq let125 let424) := by timed Eq.trans lean_s255 lean_r228
have lean_s257 : (Eq let131 let626) := by timed congrIte lean_s252 lean_s256 lean_r227
let lean_s258 := by timed congr lean_s12 lean_s257
have lean_s259 : let713 := by timed rfl
let lean_s260 := by timed flipCongrArg lean_s39 [Eq]
have lean_s261 : (Eq let119 let623) := by timed congr lean_s260 lean_r103
let lean_s262 := by timed congr lean_s259 lean_s261
let lean_s263 := by timed flipCongrArg lean_s39 [Eq]
have lean_s264 : (Eq let118 let622) := by timed congr lean_s263 lean_r184
let lean_s265 := by timed congr lean_s259 lean_s264
let lean_s266 := by timed flipCongrArg lean_s39 [Eq]
have lean_s267 : (Eq let117 let621) := by timed congr lean_s266 lean_r225
let lean_s268 := by timed congr lean_s259 lean_s267
let lean_s269 := by timed flipCongrArg lean_s39 [Eq]
have lean_s270 : (Eq let115 let620) := by timed congr lean_s269 lean_r206
let lean_s271 := by timed congr lean_s259 lean_s270
let lean_s272 := by timed flipCongrArg lean_s39 [Eq]
have lean_s273 : (Eq let113 let619) := by timed congr lean_s272 lean_r110
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s268 lean_s274
let lean_s276 := by timed congr lean_s265 lean_s275
have lean_s277 : (Eq let582 let624) := by timed congr lean_s262 lean_s276
have lean_s278 : (Eq let120 let624) := by timed Eq.trans lean_r207 lean_s277
let lean_s279 := by timed congr lean_s12 lean_s278
let lean_s280 := by timed flipCongrArg lean_s61 [Eq]
have lean_s281 : (Eq let110 let382) := by timed congr lean_s280 lean_r103
have lean_s282 : (Eq let110 let381) := by timed Eq.trans lean_s281 lean_r100
let lean_s283 := by timed flipCongrArg lean_s282 [Or]
let lean_s284 := by timed flipCongrArg lean_s61 [Eq]
have lean_s285 : (Eq let108 let493) := by timed congr lean_s284 lean_r184
have lean_s286 : (Eq let108 let492) := by timed Eq.trans lean_s285 lean_r129
have lean_s287 : (Eq let111 let618) := by timed congr lean_s283 lean_s286
let lean_s288 := by timed congr lean_s12 lean_s287
have lean_s289 : let711 := by timed rfl
let lean_s290 := by timed congr lean_s289 lean_r218
have lean_s291 : (Eq let101 let403) := by timed flipCongrArg lean_r216 [selectx5fformat]
let lean_s292 := by timed flipCongrArg lean_s291 [Eq]
have lean_s293 : (Eq s s) := by timed rfl
have lean_s294 : (Eq let102 let534) := by timed congr lean_s292 lean_s293
have lean_s295 : (Eq let102 let533) := by timed Eq.trans lean_s294 lean_r162
let lean_s296 := by timed congr lean_s289 lean_s295
let lean_s297 := by timed congr lean_s289 lean_r191
have lean_s298 : (Eq let96 let589) := by timed flipCongrArg lean_r213 [selectx5fformat]
let lean_s299 := by timed flipCongrArg lean_s298 [Eq]
have lean_s300 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s301 : (Eq let97 let591) := by timed congr lean_s299 lean_s300
have lean_s302 : (Eq let97 let590) := by timed Eq.trans lean_s301 lean_r212
let lean_s303 := by timed congr lean_s289 lean_s302
have lean_s304 : (Eq let93 let515) := by timed flipCongrArg lean_r172 [selectx5fformat]
let lean_s305 := by timed flipCongrArg lean_s304 [Eq]
have lean_s306 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s307 : (Eq let94 let517) := by timed congr lean_s305 lean_s306
have lean_s308 : (Eq let94 let516) := by timed Eq.trans lean_s307 lean_r145
let lean_s309 := by timed congr lean_s289 lean_s308
have lean_s310 : (Eq let90 let585) := by timed flipCongrArg lean_r210 [selectx5fformat]
let lean_s311 := by timed flipCongrArg lean_s310 [Eq]
have lean_s312 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s313 : (Eq let91 let587) := by timed congr lean_s311 lean_s312
have lean_s314 : (Eq let91 let586) := by timed Eq.trans lean_s313 lean_r209
let lean_s315 := by timed congr lean_s309 lean_s314
let lean_s316 := by timed congr lean_s303 lean_s315
let lean_s317 := by timed congr lean_s297 lean_s316
let lean_s318 := by timed congr lean_s296 lean_s317
have lean_s319 : (Eq let597 let616) := by timed congr lean_s290 lean_s318
have lean_s320 : (Eq let105 let616) := by timed Eq.trans lean_r220 lean_s319
have lean_s321 : (Eq let106 let617) := by timed flipCongrArg lean_s320 [Not]
let lean_s322 := by timed congr lean_s288 lean_s321
let lean_s323 := by timed congr lean_s279 lean_s322
let lean_s324 := by timed congr lean_s258 lean_s323
let lean_s325 := by timed congr lean_s250 lean_s324
let lean_s326 := by timed congr lean_s242 lean_s325
let lean_s327 := by timed congr lean_s234 lean_s326
let lean_s328 := by timed congr lean_s226 lean_s327
let lean_s329 := by timed congr lean_s220 lean_s328
let lean_s330 := by timed congr lean_s212 lean_s329
let lean_s331 := by timed congr lean_s204 lean_s330
let lean_s332 := by timed congr lean_s196 lean_s331
let lean_s333 := by timed congr lean_s188 lean_s332
let lean_s334 := by timed congr lean_s182 lean_s333
let lean_s335 := by timed congr lean_s96 lean_s334
let lean_s336 := by timed congr lean_s74 lean_s335
let lean_s337 := by timed congr lean_s60 lean_s336
let lean_s338 := by timed congr lean_s59 lean_s337
let lean_s339 := by timed congr lean_s52 lean_s338
let lean_s340 := by timed congr lean_s38 lean_s339
let lean_s341 := by timed congr lean_s37 lean_s340
let lean_s342 := by timed congr lean_s32 lean_s341
let lean_s343 := by timed congr lean_s30 lean_s342
let lean_s344 := by timed congr lean_s28 lean_s343
let lean_s345 := by timed congr lean_s26 lean_s344
let lean_s346 := by timed congr lean_s24 lean_s345
let lean_s347 := by timed congr lean_s22 lean_s346
let lean_s348 := by timed congr lean_s20 lean_s347
let lean_s349 := by timed congr lean_s18 lean_s348
let lean_s350 := by timed congr lean_s16 lean_s349
have lean_s351 : (Eq let252 let654) := by timed congr lean_s14 lean_s350
have lean_s352 : (Eq let253 let654) := by timed Eq.trans lean_r24 lean_s351
have lean_s353 : let711 := by timed rfl
have lean_s354 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s355 : let651 := by andElim lean_s354, 16
have lean_s356 : let745 := by timed rfl
let lean_s357 := by timed flipCongrArg lean_s356 [Eq]
have lean_s358 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s359 : let324 := by andElim lean_s358, 10
have lean_s360 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s361 : let242 := by andElim lean_s360, 9
have lean_s362 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s363 : let243 := by andElim lean_s362, 8
have lean_s364 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s365 : let244 := by andElim lean_s364, 7
have lean_s366 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s367 : let245 := by andElim lean_s366, 6
have lean_s368 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s369 : let246 := by andElim lean_s368, 5
have lean_s370 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s371 : let247 := by andElim lean_s370, 4
have lean_s372 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s373 : let248 := by andElim lean_s372, 3
have lean_s374 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s375 : let249 := by andElim lean_s374, 2
have lean_s376 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s377 : let250 := by andElim lean_s376, 1
have lean_s378 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s379 : let251 := by andElim lean_s378, 0
let lean_s380 := by timed And.intro lean_s377 lean_s379
let lean_s381 := by timed And.intro lean_s375 lean_s380
let lean_s382 := by timed And.intro lean_s373 lean_s381
let lean_s383 := by timed And.intro lean_s371 lean_s382
let lean_s384 := by timed And.intro lean_s369 lean_s383
let lean_s385 := by timed And.intro lean_s367 lean_s384
let lean_s386 := by timed And.intro lean_s365 lean_s385
let lean_s387 := by timed And.intro lean_s363 lean_s386
have lean_s388 : let743 := by timed And.intro lean_s361 lean_s387
have lean_s389 : let242 := by andElim lean_s388, 0
let lean_s390 := by timed flipCongrArg lean_s389 [Eq]
have lean_s391 : let746 := by timed rfl
let lean_s392 := by timed flipCongrArg lean_s391 [HAdd.hAdd]
have lean_s393 : let251 := by andElim lean_s388, 9
have lean_s394 : (Eq let230 let85) := by timed congr lean_s392 lean_s393
have lean_s395 : (Eq let324 let747) := by timed congr lean_s390 lean_s394
have lean_s396 : let569 := by timed rfl
let lean_s397 := by timed flipCongrArg lean_s396 [Eq]
have lean_s398 : (Eq let747 let88) := by timed congr lean_s397 lean_r22
have lean_s399 : (Eq let747 let87) := by timed Eq.trans lean_s398 lean_r23
have lean_s400 : (Eq let324 let87) := by timed Eq.trans lean_s395 lean_s399
have lean_s401 : let87 := by timed eqResolve lean_s359 lean_s400
let lean_s402 := by timed And.intro lean_s377 lean_s379
let lean_s403 := by timed And.intro lean_s375 lean_s402
let lean_s404 := by timed And.intro lean_s373 lean_s403
let lean_s405 := by timed And.intro lean_s371 lean_s404
let lean_s406 := by timed And.intro lean_s369 lean_s405
let lean_s407 := by timed And.intro lean_s367 lean_s406
let lean_s408 := by timed And.intro lean_s365 lean_s407
let lean_s409 := by timed And.intro lean_s363 lean_s408
let lean_s410 := by timed And.intro lean_s361 lean_s409
have lean_s411 : let744 := by timed And.intro lean_s401 lean_s410
have lean_s412 : let87 := by andElim lean_s411, 0
have lean_s413 : let580 := by timed rfl
let lean_s414 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s415 : let739 := by timed rfl
have lean_s416 : let712 := by timed rfl
have lean_s417 : let741 := by timed rfl
let lean_s418 := by timed flipCongrArg lean_s417 [HMul.hMul]
have lean_s419 : let242 := by andElim lean_s411, 1
have lean_s420 : let753 := by timed congr lean_s418 lean_s419
let lean_s421 := by timed congrHAdd lean_s416 lean_s420
have lean_s422 : let752 := by timed congrHAdd lean_s415 lean_s421
have lean_s423 : let755 := by timed flipCongrArg lean_s422 [sx5fcount]
have lean_s424 : let754 := by timed congr lean_s414 lean_s423
let lean_s425 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s426 : let751 := by timed flipCongrArg lean_s422 [xx5fcount]
have lean_s427 : let750 := by timed congr lean_s425 lean_s426
let lean_s428 := by timed congrHAdd lean_s424 lean_s427
have lean_s429 : let749 := by timed congrHAdd lean_s412 lean_s428
have lean_s430 : (Eq let651 let748) := by timed congr lean_s357 lean_s429
let lean_s431 := by timed flipCongrArg lean_s61 [Eq]
have lean_s432 : (Eq let86 let86) := by timed rfl
let lean_s433 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s434 : let739 := by timed rfl
let lean_s435 := by timed congrHAdd lean_s39 lean_r183
have lean_s436 : (Eq let692 let552) := by timed congrHAdd lean_s434 lean_s435
have lean_s437 : (Eq let692 let6) := by timed Eq.trans lean_s436 lean_r179
have lean_s438 : (Eq let695 let8) := by timed flipCongrArg lean_s437 [sx5fcount]
have lean_s439 : (Eq let696 let350) := by timed congr lean_s433 lean_s438
let lean_s440 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s441 : (Eq let693 let7) := by timed flipCongrArg lean_s437 [xx5fcount]
have lean_s442 : (Eq let694 let349) := by timed congr lean_s440 lean_s441
let lean_s443 := by timed congrHAdd lean_s439 lean_s442
have lean_s444 : (Eq let697 let352) := by timed congrHAdd lean_s432 lean_s443
have lean_s445 : (Eq let748 let742) := by timed congr lean_s431 lean_s444
have lean_s446 : (Eq let651 let742) := by timed Eq.trans lean_s430 lean_s445
have lean_s447 : let742 := by timed eqResolve lean_s355 lean_s446
let lean_s448 := by timed And.intro lean_s377 lean_s379
let lean_s449 := by timed And.intro lean_s375 lean_s448
let lean_s450 := by timed And.intro lean_s373 lean_s449
let lean_s451 := by timed And.intro lean_s371 lean_s450
let lean_s452 := by timed And.intro lean_s369 lean_s451
let lean_s453 := by timed And.intro lean_s367 lean_s452
let lean_s454 := by timed And.intro lean_s365 lean_s453
let lean_s455 := by timed And.intro lean_s363 lean_s454
let lean_s456 := by timed And.intro lean_s361 lean_s455
let lean_s457 := by timed And.intro lean_s401 lean_s456
have lean_s458 : (And let742 let744) := by timed And.intro lean_s447 lean_s457
have lean_s459 : let251 := by andElim lean_s458, 11
let lean_s460 := by timed flipCongrArg lean_s459 [Eq]
have lean_s461 : let583 := by timed rfl
have lean_s462 : (Eq let251 let583) := by timed congr lean_s460 lean_s461
let lean_s463 := by timed congr lean_s353 lean_s462
have lean_s464 : let250 := by andElim lean_s458, 10
let lean_s465 := by timed flipCongrArg lean_s464 [Eq]
have lean_s466 : let579 := by timed rfl
have lean_s467 : (Eq let250 let579) := by timed congr lean_s465 lean_s466
let lean_s468 := by timed congr lean_s353 lean_s467
have lean_s469 : let249 := by andElim lean_s458, 9
let lean_s470 := by timed flipCongrArg lean_s469 [Eq]
have lean_s471 : (Eq let249 let579) := by timed congr lean_s470 lean_s466
let lean_s472 := by timed congr lean_s353 lean_s471
have lean_s473 : let248 := by andElim lean_s458, 8
let lean_s474 := by timed flipCongrArg lean_s473 [Eq]
have lean_s475 : let511 := by timed rfl
have lean_s476 : (Eq let248 let511) := by timed congr lean_s474 lean_s475
let lean_s477 := by timed congr lean_s353 lean_s476
have lean_s478 : let247 := by andElim lean_s458, 7
let lean_s479 := by timed flipCongrArg lean_s478 [Eq]
have lean_s480 : let580 := by timed rfl
have lean_s481 : (Eq let247 let580) := by timed congr lean_s479 lean_s480
let lean_s482 := by timed congr lean_s353 lean_s481
have lean_s483 : let246 := by andElim lean_s458, 6
let lean_s484 := by timed flipCongrArg lean_s483 [Eq]
have lean_s485 : let483 := by timed rfl
have lean_s486 : (Eq let246 let483) := by timed congr lean_s484 lean_s485
let lean_s487 := by timed congr lean_s353 lean_s486
have lean_s488 : let245 := by andElim lean_s458, 5
let lean_s489 := by timed flipCongrArg lean_s488 [Eq]
have lean_s490 : let574 := by timed rfl
have lean_s491 : (Eq let245 let574) := by timed congr lean_s489 lean_s490
let lean_s492 := by timed congr lean_s353 lean_s491
have lean_s493 : let244 := by andElim lean_s458, 4
let lean_s494 := by timed flipCongrArg lean_s493 [Eq]
have lean_s495 : let386 := by timed rfl
have lean_s496 : (Eq let244 let386) := by timed congr lean_s494 lean_s495
let lean_s497 := by timed congr lean_s353 lean_s496
have lean_s498 : let243 := by andElim lean_s458, 3
let lean_s499 := by timed flipCongrArg lean_s498 [Eq]
have lean_s500 : let573 := by timed rfl
have lean_s501 : (Eq let243 let573) := by timed congr lean_s499 lean_s500
let lean_s502 := by timed congr lean_s353 lean_s501
have lean_s503 : let242 := by andElim lean_s458, 2
let lean_s504 := by timed flipCongrArg lean_s503 [Eq]
have lean_s505 : let569 := by timed rfl
have lean_s506 : (Eq let242 let569) := by timed congr lean_s504 lean_s505
let lean_s507 := by timed congr lean_s353 lean_s506
let lean_s508 := by timed flipCongrArg lean_s503 [Eq]
have lean_s509 : let87 := by andElim lean_s458, 1
let lean_s510 := by timed flipCongrArg lean_s509 [HAdd.hAdd]
have lean_s511 : (Eq let230 let571) := by timed congr lean_s510 lean_s459
have lean_s512 : (Eq let324 let709) := by timed congr lean_s508 lean_s511
let lean_s513 := by timed congr lean_s353 lean_s512
let lean_s514 := by timed flipCongrArg lean_s503 [HAdd.hAdd]
have lean_s515 : let741 := by timed rfl
let lean_s516 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s517 : let742 := by andElim lean_s458, 0
have lean_s518 : (Eq let255 let374) := by timed congr lean_s516 lean_s517
have lean_s519 : (Eq let256 let706) := by timed congr lean_s514 lean_s518
let lean_s520 := by timed flipCongrArg lean_s519 [GE.ge]
have lean_s521 : (Eq let257 let707) := by timed congr lean_s520 lean_s475
have lean_s522 : (Eq let258 let708) := by timed flipCongrArg lean_s521 [Not]
let lean_s523 := by timed congr lean_s353 lean_s522
have lean_s524 : let712 := by timed rfl
let lean_s525 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s526 : let753 := by timed congr lean_s525 lean_s503
let lean_s527 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s528 : (Eq let264 let529) := by timed congr lean_s527 lean_s464
let lean_s529 := by timed congrHAdd lean_s526 lean_s528
have lean_s530 : (Eq let266 let703) := by timed congrHAdd lean_s524 lean_s529
let lean_s531 := by timed flipCongrArg lean_s530 [GE.ge]
have lean_s532 : (Eq let267 let704) := by timed congr lean_s531 lean_s515
have lean_s533 : (Eq let653 let705) := by timed flipCongrArg lean_s532 [Not]
let lean_s534 := by timed congr lean_s353 lean_s533
let lean_s535 := by timed flipCongrArg lean_s524 [HAdd.hAdd]
have lean_s536 : (Eq let272 let691) := by timed congr lean_s535 lean_s526
let lean_s537 := by timed flipCongrArg lean_s536 [GE.ge]
have lean_s538 : (Eq let273 let702) := by timed congr lean_s537 lean_s485
let lean_s539 := by timed congr lean_s353 lean_s538
let lean_s540 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s541 : (Eq let279 let370) := by timed congr lean_s540 lean_s509
let lean_s542 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s543 : (Eq let278 let502) := by timed congr lean_s542 lean_s459
let lean_s544 := by timed congrHAdd lean_s541 lean_s543
have lean_s545 : (Eq let280 let505) := by timed congrHAdd lean_s517 lean_s544
let lean_s546 := by timed flipCongrArg lean_s545 [GE.ge]
have lean_s547 : (Eq let281 let701) := by timed congr lean_s546 lean_s505
let lean_s548 := by timed congr lean_s353 lean_s547
let lean_s549 := by timed congrHAdd lean_s528 lean_s543
let lean_s550 := by timed congrHAdd lean_s541 lean_s549
have lean_s551 : (Eq let290 let563) := by timed congrHAdd lean_s517 lean_s550
let lean_s552 := by timed flipCongrArg lean_s551 [GE.ge]
have lean_s553 : let740 := by timed rfl
have lean_s554 : (Eq let291 let699) := by timed congr lean_s552 lean_s553
have lean_s555 : (Eq let652 let700) := by timed flipCongrArg lean_s554 [Not]
let lean_s556 := by timed congr lean_s353 lean_s555
let lean_s557 := by timed flipCongrArg lean_s517 [Eq]
let lean_s558 := by timed flipCongrArg lean_s480 [HMul.hMul]
have lean_s559 : let739 := by timed rfl
let lean_s560 := by timed congrHAdd lean_s524 lean_s526
have lean_s561 : let752 := by timed congrHAdd lean_s559 lean_s560
have lean_s562 : let755 := by timed flipCongrArg lean_s561 [sx5fcount]
have lean_s563 : let754 := by timed congr lean_s558 lean_s562
let lean_s564 := by timed flipCongrArg lean_s480 [HMul.hMul]
have lean_s565 : let751 := by timed flipCongrArg lean_s561 [xx5fcount]
have lean_s566 : let750 := by timed congr lean_s564 lean_s565
let lean_s567 := by timed congrHAdd lean_s563 lean_s566
have lean_s568 : let749 := by timed congrHAdd lean_s509 lean_s567
have lean_s569 : (Eq let651 let698) := by timed congr lean_s557 lean_s568
let lean_s570 := by timed congr lean_s353 lean_s569
have lean_s571 : let713 := by timed rfl
let lean_s572 := by timed flipCongrArg lean_s488 [Eq]
have lean_s573 : (Eq let159 let159) := by timed rfl
have lean_s574 : (Eq let339 let522) := by timed congr lean_s572 lean_s573
let lean_s575 := by timed congr lean_s571 lean_s574
let lean_s576 := by timed flipCongrArg lean_s493 [Eq]
have lean_s577 : (Eq let302 let500) := by timed congr lean_s576 lean_s573
let lean_s578 := by timed congr lean_s571 lean_s577
let lean_s579 := by timed flipCongrArg lean_s498 [Eq]
have lean_s580 : (Eq let518 let506) := by timed congr lean_s579 lean_s573
let lean_s581 := by timed congr lean_s571 lean_s580
let lean_s582 := by timed flipCongrArg lean_s469 [Eq]
have lean_s583 : (Eq let303 let609) := by timed congr lean_s582 lean_s573
let lean_s584 := by timed congr lean_s571 lean_s583
let lean_s585 := by timed flipCongrArg lean_s473 [Eq]
have lean_s586 : (Eq let304 let542) := by timed congr lean_s585 lean_s573
let lean_s587 := by timed congr lean_s571 lean_s586
let lean_s588 := by timed flipCongrArg lean_s478 [Eq]
have lean_s589 : (Eq let568 let342) := by timed congr lean_s588 lean_s573
let lean_s590 := by timed congr lean_s571 lean_s589
let lean_s591 := by timed flipCongrArg lean_s483 [Eq]
have lean_s592 : (Eq let305 let512) := by timed congr lean_s591 lean_s573
let lean_s593 := by timed congr lean_s571 lean_s592
have lean_s594 : let738 := by timed rfl
let lean_s595 := by timed congr lean_s571 lean_s594
let lean_s596 := by timed flipCongrArg lean_s488 [Eq]
have lean_s597 : (Eq let153 let153) := by timed rfl
have lean_s598 : (Eq let615 let385) := by timed congr lean_s596 lean_s597
let lean_s599 := by timed congr lean_s571 lean_s598
let lean_s600 := by timed flipCongrArg lean_s493 [Eq]
have lean_s601 : (Eq let319 let376) := by timed congr lean_s600 lean_s597
let lean_s602 := by timed congr lean_s571 lean_s601
let lean_s603 := by timed flipCongrArg lean_s498 [Eq]
have lean_s604 : (Eq let340 let565) := by timed congr lean_s603 lean_s597
let lean_s605 := by timed congr lean_s571 lean_s604
let lean_s606 := by timed flipCongrArg lean_s469 [Eq]
have lean_s607 : (Eq let306 let537) := by timed congr lean_s606 lean_s597
let lean_s608 := by timed congr lean_s571 lean_s607
let lean_s609 := by timed flipCongrArg lean_s473 [Eq]
have lean_s610 : (Eq let307 let344) := by timed congr lean_s609 lean_s597
let lean_s611 := by timed congr lean_s571 lean_s610
let lean_s612 := by timed flipCongrArg lean_s478 [Eq]
have lean_s613 : (Eq let313 let348) := by timed congr lean_s612 lean_s597
let lean_s614 := by timed congr lean_s571 lean_s613
let lean_s615 := by timed flipCongrArg lean_s483 [Eq]
have lean_s616 : (Eq let383 let538) := by timed congr lean_s615 lean_s597
let lean_s617 := by timed congr lean_s571 lean_s616
have lean_s618 : let737 := by timed rfl
let lean_s619 := by timed congr lean_s571 lean_s618
let lean_s620 := by timed flipCongrArg lean_s488 [Eq]
have lean_s621 : (Eq let145 let145) := by timed rfl
have lean_s622 : (Eq let554 let549) := by timed congr lean_s620 lean_s621
let lean_s623 := by timed congr lean_s571 lean_s622
let lean_s624 := by timed flipCongrArg lean_s493 [Eq]
have lean_s625 : (Eq let320 let601) := by timed congr lean_s624 lean_s621
let lean_s626 := by timed congr lean_s571 lean_s625
let lean_s627 := by timed flipCongrArg lean_s498 [Eq]
have lean_s628 : (Eq let567 let485) := by timed congr lean_s627 lean_s621
let lean_s629 := by timed congr lean_s571 lean_s628
let lean_s630 := by timed flipCongrArg lean_s469 [Eq]
have lean_s631 : (Eq let484 let355) := by timed congr lean_s630 lean_s621
let lean_s632 := by timed congr lean_s571 lean_s631
let lean_s633 := by timed flipCongrArg lean_s473 [Eq]
have lean_s634 : (Eq let314 let359) := by timed congr lean_s633 lean_s621
let lean_s635 := by timed congr lean_s571 lean_s634
let lean_s636 := by timed flipCongrArg lean_s478 [Eq]
have lean_s637 : (Eq let488 let369) := by timed congr lean_s636 lean_s621
let lean_s638 := by timed congr lean_s571 lean_s637
let lean_s639 := by timed flipCongrArg lean_s483 [Eq]
have lean_s640 : (Eq let315 let527) := by timed congr lean_s639 lean_s621
let lean_s641 := by timed congr lean_s571 lean_s640
have lean_s642 : let736 := by timed rfl
let lean_s643 := by timed congr lean_s571 lean_s642
let lean_s644 := by timed flipCongrArg lean_s488 [Eq]
have lean_s645 : (Eq let137 let137) := by timed rfl
have lean_s646 : (Eq let610 let526) := by timed congr lean_s644 lean_s645
let lean_s647 := by timed congr lean_s571 lean_s646
let lean_s648 := by timed flipCongrArg lean_s493 [Eq]
have lean_s649 : (Eq let326 let482) := by timed congr lean_s648 lean_s645
let lean_s650 := by timed congr lean_s571 lean_s649
let lean_s651 := by timed flipCongrArg lean_s498 [Eq]
have lean_s652 : (Eq let600 let546) := by timed congr lean_s651 lean_s645
let lean_s653 := by timed congr lean_s571 lean_s652
let lean_s654 := by timed flipCongrArg lean_s469 [Eq]
have lean_s655 : (Eq let490 let521) := by timed congr lean_s654 lean_s645
let lean_s656 := by timed congr lean_s571 lean_s655
let lean_s657 := by timed flipCongrArg lean_s473 [Eq]
have lean_s658 : (Eq let316 let378) := by timed congr lean_s657 lean_s645
let lean_s659 := by timed congr lean_s571 lean_s658
let lean_s660 := by timed flipCongrArg lean_s478 [Eq]
have lean_s661 : (Eq let596 let361) := by timed congr lean_s660 lean_s645
let lean_s662 := by timed congr lean_s571 lean_s661
let lean_s663 := by timed flipCongrArg lean_s483 [Eq]
have lean_s664 : (Eq let594 let390) := by timed congr lean_s663 lean_s645
let lean_s665 := by timed congr lean_s571 lean_s664
have lean_s666 : let735 := by timed rfl
let lean_s667 := by timed congr lean_s571 lean_s666
let lean_s668 := by timed flipCongrArg lean_s488 [Eq]
have lean_s669 : (Eq let128 let128) := by timed rfl
have lean_s670 : (Eq let539 let536) := by timed congr lean_s668 lean_s669
let lean_s671 := by timed congr lean_s571 lean_s670
let lean_s672 := by timed flipCongrArg lean_s493 [Eq]
have lean_s673 : (Eq let331 let519) := by timed congr lean_s672 lean_s669
let lean_s674 := by timed congr lean_s571 lean_s673
let lean_s675 := by timed flipCongrArg lean_s498 [Eq]
have lean_s676 : (Eq let541 let540) := by timed congr lean_s675 lean_s669
let lean_s677 := by timed congr lean_s571 lean_s676
let lean_s678 := by timed flipCongrArg lean_s469 [Eq]
have lean_s679 : (Eq let592 let367) := by timed congr lean_s678 lean_s669
let lean_s680 := by timed congr lean_s571 lean_s679
let lean_s681 := by timed flipCongrArg lean_s473 [Eq]
have lean_s682 : (Eq let535 let363) := by timed congr lean_s681 lean_s669
let lean_s683 := by timed congr lean_s571 lean_s682
let lean_s684 := by timed flipCongrArg lean_s478 [Eq]
have lean_s685 : (Eq let531 let365) := by timed congr lean_s684 lean_s669
let lean_s686 := by timed congr lean_s571 lean_s685
let lean_s687 := by timed flipCongrArg lean_s483 [Eq]
have lean_s688 : (Eq let317 let494) := by timed congr lean_s687 lean_s669
let lean_s689 := by timed congr lean_s571 lean_s688
have lean_s690 : let734 := by timed rfl
let lean_s691 := by timed congr lean_s689 lean_s690
let lean_s692 := by timed congr lean_s686 lean_s691
let lean_s693 := by timed congr lean_s683 lean_s692
let lean_s694 := by timed congr lean_s680 lean_s693
let lean_s695 := by timed congr lean_s677 lean_s694
let lean_s696 := by timed congr lean_s674 lean_s695
let lean_s697 := by timed congr lean_s671 lean_s696
let lean_s698 := by timed congr lean_s667 lean_s697
let lean_s699 := by timed congr lean_s665 lean_s698
let lean_s700 := by timed congr lean_s662 lean_s699
let lean_s701 := by timed congr lean_s659 lean_s700
let lean_s702 := by timed congr lean_s656 lean_s701
let lean_s703 := by timed congr lean_s653 lean_s702
let lean_s704 := by timed congr lean_s650 lean_s703
let lean_s705 := by timed congr lean_s647 lean_s704
let lean_s706 := by timed congr lean_s643 lean_s705
let lean_s707 := by timed congr lean_s641 lean_s706
let lean_s708 := by timed congr lean_s638 lean_s707
let lean_s709 := by timed congr lean_s635 lean_s708
let lean_s710 := by timed congr lean_s632 lean_s709
let lean_s711 := by timed congr lean_s629 lean_s710
let lean_s712 := by timed congr lean_s626 lean_s711
let lean_s713 := by timed congr lean_s623 lean_s712
let lean_s714 := by timed congr lean_s619 lean_s713
let lean_s715 := by timed congr lean_s617 lean_s714
let lean_s716 := by timed congr lean_s614 lean_s715
let lean_s717 := by timed congr lean_s611 lean_s716
let lean_s718 := by timed congr lean_s608 lean_s717
let lean_s719 := by timed congr lean_s605 lean_s718
let lean_s720 := by timed congr lean_s602 lean_s719
let lean_s721 := by timed congr lean_s599 lean_s720
let lean_s722 := by timed congr lean_s595 lean_s721
let lean_s723 := by timed congr lean_s593 lean_s722
let lean_s724 := by timed congr lean_s590 lean_s723
let lean_s725 := by timed congr lean_s587 lean_s724
let lean_s726 := by timed congr lean_s584 lean_s725
let lean_s727 := by timed congr lean_s581 lean_s726
let lean_s728 := by timed congr lean_s578 lean_s727
have lean_s729 : (Eq let645 let690) := by timed congr lean_s575 lean_s728
let lean_s730 := by timed congr lean_s353 lean_s729
let lean_s731 := by timed flipCongrArg lean_s574 [And]
have lean_s732 : (Eq let643 let688) := by timed congr lean_s731 lean_s601
have lean_s733 : let733 := by timed rfl
have lean_s734 : let732 := by timed rfl
have lean_s735 : (Eq let644 let689) := by timed congrIte lean_s732 lean_s733 lean_s734
let lean_s736 := by timed congr lean_s353 lean_s735
let lean_s737 := by timed flipCongrArg lean_s598 [And]
have lean_s738 : (Eq let641 let686) := by timed congr lean_s737 lean_s625
have lean_s739 : let731 := by timed rfl
have lean_s740 : let730 := by timed rfl
have lean_s741 : (Eq let642 let687) := by timed congrIte lean_s738 lean_s739 lean_s740
let lean_s742 := by timed congr lean_s353 lean_s741
let lean_s743 := by timed flipCongrArg lean_s622 [And]
have lean_s744 : (Eq let639 let684) := by timed congr lean_s743 lean_s649
have lean_s745 : let729 := by timed rfl
have lean_s746 : let728 := by timed rfl
have lean_s747 : (Eq let640 let685) := by timed congrIte lean_s744 lean_s745 lean_s746
let lean_s748 := by timed congr lean_s353 lean_s747
let lean_s749 := by timed flipCongrArg lean_s646 [And]
have lean_s750 : (Eq let637 let682) := by timed congr lean_s749 lean_s673
have lean_s751 : let727 := by timed rfl
have lean_s752 : let726 := by timed rfl
have lean_s753 : (Eq let638 let683) := by timed congrIte lean_s750 lean_s751 lean_s752
let lean_s754 := by timed congr lean_s353 lean_s753
let lean_s755 := by timed flipCongrArg lean_s670 [And]
let lean_s756 := by timed flipCongrArg lean_s493 [Eq]
have lean_s757 : (Eq let126 let126) := by timed rfl
have lean_s758 : (Eq let336 let372) := by timed congr lean_s756 lean_s757
have lean_s759 : (Eq let635 let680) := by timed congr lean_s755 lean_s758
have lean_s760 : let725 := by timed rfl
have lean_s761 : let724 := by timed rfl
have lean_s762 : (Eq let636 let681) := by timed congrIte lean_s759 lean_s760 lean_s761
let lean_s763 := by timed congr lean_s353 lean_s762
let lean_s764 := by timed flipCongrArg lean_s574 [And]
have lean_s765 : (Eq let633 let678) := by timed congr lean_s764 lean_s604
have lean_s766 : let723 := by timed rfl
have lean_s767 : let722 := by timed rfl
have lean_s768 : (Eq let634 let679) := by timed congrIte lean_s765 lean_s766 lean_s767
let lean_s769 := by timed congr lean_s353 lean_s768
let lean_s770 := by timed flipCongrArg lean_s598 [And]
have lean_s771 : (Eq let631 let676) := by timed congr lean_s770 lean_s628
have lean_s772 : let721 := by timed rfl
have lean_s773 : let720 := by timed rfl
have lean_s774 : (Eq let632 let677) := by timed congrIte lean_s771 lean_s772 lean_s773
let lean_s775 := by timed congr lean_s353 lean_s774
let lean_s776 := by timed flipCongrArg lean_s622 [And]
have lean_s777 : (Eq let629 let674) := by timed congr lean_s776 lean_s652
have lean_s778 : let719 := by timed rfl
have lean_s779 : let718 := by timed rfl
have lean_s780 : (Eq let630 let675) := by timed congrIte lean_s777 lean_s778 lean_s779
let lean_s781 := by timed congr lean_s353 lean_s780
let lean_s782 := by timed flipCongrArg lean_s646 [And]
have lean_s783 : (Eq let627 let672) := by timed congr lean_s782 lean_s676
have lean_s784 : let717 := by timed rfl
have lean_s785 : let716 := by timed rfl
have lean_s786 : (Eq let628 let673) := by timed congrIte lean_s783 lean_s784 lean_s785
let lean_s787 := by timed congr lean_s353 lean_s786
let lean_s788 := by timed flipCongrArg lean_s670 [And]
let lean_s789 := by timed flipCongrArg lean_s498 [Eq]
have lean_s790 : (Eq let346 let532) := by timed congr lean_s789 lean_s757
have lean_s791 : (Eq let625 let670) := by timed congr lean_s788 lean_s790
have lean_s792 : let715 := by timed rfl
have lean_s793 : let714 := by timed rfl
have lean_s794 : (Eq let626 let671) := by timed congrIte lean_s791 lean_s792 lean_s793
let lean_s795 := by timed congr lean_s353 lean_s794
have lean_s796 : let713 := by timed rfl
let lean_s797 := by timed flipCongrArg lean_s524 [Eq]
have lean_s798 : (Eq let623 let421) := by timed congr lean_s797 lean_s503
let lean_s799 := by timed congr lean_s796 lean_s798
let lean_s800 := by timed flipCongrArg lean_s524 [Eq]
let lean_s801 := by timed flipCongrArg lean_s475 [HAdd.hAdd]
have lean_s802 : (Eq let275 let530) := by timed congr lean_s801 lean_s503
have lean_s803 : (Eq let622 let668) := by timed congr lean_s800 lean_s802
let lean_s804 := by timed congr lean_s796 lean_s803
let lean_s805 := by timed flipCongrArg lean_s524 [Eq]
let lean_s806 := by timed flipCongrArg lean_s485 [HAdd.hAdd]
have lean_s807 : (Eq let602 let525) := by timed congr lean_s806 lean_s503
have lean_s808 : (Eq let621 let667) := by timed congr lean_s805 lean_s807
let lean_s809 := by timed congr lean_s796 lean_s808
let lean_s810 := by timed flipCongrArg lean_s524 [Eq]
have lean_s811 : (Eq let1 let1) := by timed rfl
let lean_s812 := by timed flipCongrArg lean_s811 [HAdd.hAdd]
have lean_s813 : (Eq let581 let345) := by timed congr lean_s812 lean_s503
have lean_s814 : (Eq let620 let666) := by timed congr lean_s810 lean_s813
let lean_s815 := by timed congr lean_s796 lean_s814
let lean_s816 := by timed flipCongrArg lean_s524 [Eq]
let lean_s817 := by timed flipCongrArg lean_s480 [HAdd.hAdd]
have lean_s818 : (Eq let392 let513) := by timed congr lean_s817 lean_s503
have lean_s819 : (Eq let619 let665) := by timed congr lean_s816 lean_s818
let lean_s820 := by timed congr lean_s815 lean_s819
let lean_s821 := by timed congr lean_s809 lean_s820
let lean_s822 := by timed congr lean_s804 lean_s821
have lean_s823 : (Eq let624 let669) := by timed congr lean_s799 lean_s822
let lean_s824 := by timed congr lean_s353 lean_s823
let lean_s825 := by timed flipCongrArg lean_s503 [Eq]
have lean_s826 : (Eq let381 let510) := by timed congr lean_s825 lean_s517
let lean_s827 := by timed flipCongrArg lean_s826 [Or]
let lean_s828 := by timed flipCongrArg lean_s503 [Eq]
let lean_s829 := by timed flipCongrArg lean_s515 [HAdd.hAdd]
have lean_s830 : (Eq let491 let388) := by timed congr lean_s829 lean_s517
have lean_s831 : (Eq let492 let663) := by timed congr lean_s828 lean_s830
have lean_s832 : (Eq let618 let664) := by timed congr lean_s827 lean_s831
let lean_s833 := by timed congr lean_s353 lean_s832
have lean_s834 : let711 := by timed rfl
let lean_s835 := by timed flipCongrArg lean_s488 [Eq]
have lean_s836 : (Eq let103 let103) := by timed rfl
have lean_s837 : (Eq let595 let508) := by timed congr lean_s835 lean_s836
let lean_s838 := by timed congr lean_s834 lean_s837
let lean_s839 := by timed flipCongrArg lean_s493 [Eq]
have lean_s840 : (Eq let403 let403) := by timed rfl
have lean_s841 : (Eq let533 let405) := by timed congr lean_s839 lean_s840
let lean_s842 := by timed congr lean_s834 lean_s841
let lean_s843 := by timed flipCongrArg lean_s469 [Eq]
have lean_s844 : (Eq let98 let395) := by timed flipCongrArg lean_s517 [selectx5fformat]
have lean_s845 : (Eq let564 let397) := by timed congr lean_s843 lean_s844
let lean_s846 := by timed congr lean_s834 lean_s845
let lean_s847 := by timed flipCongrArg lean_s473 [Eq]
let lean_s848 := by timed flipCongrArg lean_s475 [HAdd.hAdd]
have lean_s849 : (Eq let588 let498) := by timed congr lean_s848 lean_s517
have lean_s850 : (Eq let589 let659) := by timed flipCongrArg lean_s849 [selectx5fformat]
have lean_s851 : (Eq let590 let660) := by timed congr lean_s847 lean_s850
let lean_s852 := by timed congr lean_s834 lean_s851
let lean_s853 := by timed flipCongrArg lean_s478 [Eq]
let lean_s854 := by timed flipCongrArg lean_s485 [HAdd.hAdd]
have lean_s855 : (Eq let514 let499) := by timed congr lean_s854 lean_s517
have lean_s856 : (Eq let515 let657) := by timed flipCongrArg lean_s855 [selectx5fformat]
have lean_s857 : (Eq let516 let658) := by timed congr lean_s853 lean_s856
let lean_s858 := by timed congr lean_s834 lean_s857
let lean_s859 := by timed flipCongrArg lean_s483 [Eq]
let lean_s860 := by timed flipCongrArg lean_s811 [HAdd.hAdd]
have lean_s861 : (Eq let584 let553) := by timed congr lean_s860 lean_s517
have lean_s862 : (Eq let585 let655) := by timed flipCongrArg lean_s861 [selectx5fformat]
have lean_s863 : (Eq let586 let656) := by timed congr lean_s859 lean_s862
let lean_s864 := by timed congr lean_s858 lean_s863
let lean_s865 := by timed congr lean_s852 lean_s864
let lean_s866 := by timed congr lean_s846 lean_s865
let lean_s867 := by timed congr lean_s842 lean_s866
have lean_s868 : (Eq let616 let661) := by timed congr lean_s838 lean_s867
have lean_s869 : (Eq let617 let662) := by timed flipCongrArg lean_s868 [Not]
let lean_s870 := by timed congr lean_s833 lean_s869
let lean_s871 := by timed congr lean_s824 lean_s870
let lean_s872 := by timed congr lean_s795 lean_s871
let lean_s873 := by timed congr lean_s787 lean_s872
let lean_s874 := by timed congr lean_s781 lean_s873
let lean_s875 := by timed congr lean_s775 lean_s874
let lean_s876 := by timed congr lean_s769 lean_s875
let lean_s877 := by timed congr lean_s763 lean_s876
let lean_s878 := by timed congr lean_s754 lean_s877
let lean_s879 := by timed congr lean_s748 lean_s878
let lean_s880 := by timed congr lean_s742 lean_s879
let lean_s881 := by timed congr lean_s736 lean_s880
let lean_s882 := by timed congr lean_s730 lean_s881
let lean_s883 := by timed congr lean_s570 lean_s882
let lean_s884 := by timed congr lean_s556 lean_s883
let lean_s885 := by timed congr lean_s548 lean_s884
let lean_s886 := by timed congr lean_s539 lean_s885
let lean_s887 := by timed congr lean_s534 lean_s886
let lean_s888 := by timed congr lean_s523 lean_s887
let lean_s889 := by timed congr lean_s513 lean_s888
let lean_s890 := by timed congr lean_s507 lean_s889
let lean_s891 := by timed congr lean_s502 lean_s890
let lean_s892 := by timed congr lean_s497 lean_s891
let lean_s893 := by timed congr lean_s492 lean_s892
let lean_s894 := by timed congr lean_s487 lean_s893
let lean_s895 := by timed congr lean_s482 lean_s894
let lean_s896 := by timed congr lean_s477 lean_s895
let lean_s897 := by timed congr lean_s472 lean_s896
let lean_s898 := by timed congr lean_s468 lean_s897
have lean_s899 : (Eq let654 let710) := by timed congr lean_s463 lean_s898
have lean_s900 : let711 := by timed rfl
let lean_s901 := by timed congr lean_s900 lean_r208
let lean_s902 := by timed congr lean_s900 lean_r204
let lean_s903 := by timed congr lean_s900 lean_r204
let lean_s904 := by timed congr lean_s900 lean_r142
let lean_s905 := by timed congr lean_s900 lean_r205
let lean_s906 := by timed congr lean_s900 lean_r121
let lean_s907 := by timed congr lean_s900 lean_r202
let lean_s908 := by timed congr lean_s900 lean_r104
let lean_s909 := by timed congr lean_s900 lean_r201
let lean_s910 := by timed congr lean_s900 lean_r197
let lean_s911 := by timed flipCongrArg lean_s396 [Eq]
have lean_s912 : (Eq let709 let569) := by timed congr lean_s911 lean_r199
have lean_s913 : (Eq let709 True) := by timed Eq.trans lean_s912 lean_r197
let lean_s914 := by timed congr lean_s900 lean_s913
let lean_s915 := by timed flipCongrArg lean_s396 [HAdd.hAdd]
have lean_s916 : (Eq let706 let566) := by timed congr lean_s915 lean_r96
have lean_s917 : (Eq let706 let373) := by timed Eq.trans lean_s916 lean_r194
let lean_s918 := by timed flipCongrArg lean_s917 [GE.ge]
have lean_s919 : let511 := by timed rfl
have lean_s920 : (Eq let707 let380) := by timed congr lean_s918 lean_s919
have lean_s921 : (Eq let707 let379) := by timed Eq.trans lean_s920 lean_r99
have lean_s922 : (Eq let708 let489) := by timed flipCongrArg lean_s921 [Not]
have lean_s923 : (Eq let708 let10) := by timed Eq.trans lean_s922 lean_r127
let lean_s924 := by timed congr lean_s900 lean_s923
let lean_s925 := by timed congrHAdd lean_r183 lean_r157
have lean_s926 : (Eq let703 let548) := by timed congrHAdd lean_s39 lean_s925
have lean_s927 : (Eq let703 let547) := by timed Eq.trans lean_s926 lean_r175
let lean_s928 := by timed flipCongrArg lean_s927 [GE.ge]
have lean_s929 : let741 := by timed rfl
have lean_s930 : (Eq let704 let593) := by timed congr lean_s928 lean_s929
have lean_s931 : (Eq let704 let51) := by timed Eq.trans lean_s930 lean_r215
have lean_s932 : (Eq let705 let52) := by timed flipCongrArg lean_s931 [Not]
let lean_s933 := by timed congr lean_s900 lean_s932
let lean_s934 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s935 : (Eq let691 let551) := by timed congr lean_s934 lean_r183
have lean_s936 : (Eq let691 fmt1) := by timed Eq.trans lean_s935 lean_r192
let lean_s937 := by timed flipCongrArg lean_s936 [GE.ge]
have lean_s938 : let483 := by timed rfl
have lean_s939 : (Eq let702 let476) := by timed congr lean_s937 lean_s938
let lean_s940 := by timed congr lean_s900 lean_s939
have lean_s941 : (Eq let350 let350) := by timed rfl
have lean_s942 : (Eq let349 let349) := by timed rfl
let lean_s943 := by timed congrHAdd lean_r94 lean_r186
let lean_s944 := by timed congrHAdd lean_s942 lean_s943
let lean_s945 := by timed congrHAdd lean_s941 lean_s944
have lean_s946 : (Eq let504 let543) := by timed congrHAdd lean_s432 lean_s945
have lean_s947 : (Eq let504 let352) := by timed Eq.trans lean_s946 lean_r171
have lean_s948 : (Eq let505 let352) := by timed Eq.trans lean_r136 lean_s947
let lean_s949 := by timed flipCongrArg lean_s948 [GE.ge]
have lean_s950 : (Eq let701 let353) := by timed congr lean_s949 lean_s396
have lean_s951 : (Eq let701 let10) := by timed Eq.trans lean_s950 lean_r84
let lean_s952 := by timed congr lean_s900 lean_s951
let lean_s953 := by timed congrHAdd lean_r157 lean_r186
let lean_s954 := by timed congrHAdd lean_r94 lean_s953
let lean_s955 := by timed congrHAdd lean_s942 lean_s954
let lean_s956 := by timed congrHAdd lean_s941 lean_s955
have lean_s957 : (Eq let562 let556) := by timed congrHAdd lean_s432 lean_s956
have lean_s958 : (Eq let562 let400) := by timed Eq.trans lean_s957 lean_r185
have lean_s959 : (Eq let563 let400) := by timed Eq.trans lean_r190 lean_s958
let lean_s960 := by timed flipCongrArg lean_s959 [GE.ge]
have lean_s961 : let740 := by timed rfl
have lean_s962 : (Eq let699 let401) := by timed congr lean_s960 lean_s961
have lean_s963 : (Eq let699 let399) := by timed Eq.trans lean_s962 lean_r115
have lean_s964 : (Eq let700 let475) := by timed flipCongrArg lean_s963 [Not]
let lean_s965 := by timed congr lean_s900 lean_s964
have lean_s966 : let550 := by timed rfl
let lean_s967 := by timed flipCongrArg lean_s966 [Eq]
have lean_s968 : (Eq let698 let550) := by timed congr lean_s967 lean_s444
have lean_s969 : (Eq let698 True) := by timed Eq.trans lean_s968 lean_r177
let lean_s970 := by timed congr lean_s900 lean_s969
have lean_s971 : let713 := by timed rfl
let lean_s972 := by timed congr lean_s971 lean_r151
let lean_s973 := by timed congr lean_s971 lean_r134
let lean_s974 := by timed congr lean_s971 lean_r137
let lean_s975 := by timed congr lean_s971 lean_r231
let lean_s976 := by timed congr lean_s971 lean_r170
let lean_s977 := by timed congr lean_s971 lean_r79
let lean_s978 := by timed congr lean_s971 lean_r143
let lean_s979 := by timed congr lean_s971 lean_s105
let lean_s980 := by timed congr lean_s971 lean_r102
let lean_s981 := by timed congr lean_s971 lean_r97
let lean_s982 := by timed congr lean_s971 lean_r193
let lean_s983 := by timed congr lean_s971 lean_r165
let lean_s984 := by timed congr lean_s971 lean_r80
let lean_s985 := by timed congr lean_s971 lean_r83
let lean_s986 := by timed congr lean_s971 lean_r166
let lean_s987 := by timed congr lean_s971 lean_s114
let lean_s988 := by timed congr lean_s971 lean_r176
let lean_s989 := by timed congr lean_s971 lean_r224
let lean_s990 := by timed congr lean_s971 lean_r123
let lean_s991 := by timed congr lean_s971 lean_r86
let lean_s992 := by timed congr lean_s971 lean_r88
let lean_s993 := by timed congr lean_s971 lean_r93
let lean_s994 := by timed congr lean_s971 lean_r156
let lean_s995 := by timed congr lean_s971 lean_s123
let lean_s996 := by timed congr lean_s971 lean_r155
let lean_s997 := by timed congr lean_s971 lean_r120
let lean_s998 := by timed congr lean_s971 lean_r174
let lean_s999 := by timed congr lean_s971 lean_r150
let lean_s1000 := by timed congr lean_s971 lean_r98
let lean_s1001 := by timed congr lean_s971 lean_r89
let lean_s1002 := by timed congr lean_s971 lean_r107
let lean_s1003 := by timed congr lean_s971 lean_s132
let lean_s1004 := by timed congr lean_s971 lean_r164
let lean_s1005 := by timed congr lean_s971 lean_r148
let lean_s1006 := by timed congr lean_s971 lean_r168
let lean_s1007 := by timed congr lean_s971 lean_r92
let lean_s1008 := by timed congr lean_s971 lean_r90
let lean_s1009 := by timed congr lean_s971 lean_r91
let lean_s1010 := by timed congr lean_s971 lean_r130
let lean_s1011 := by timed congr lean_s1010 lean_s141
let lean_s1012 := by timed congr lean_s1009 lean_s1011
let lean_s1013 := by timed congr lean_s1008 lean_s1012
let lean_s1014 := by timed congr lean_s1007 lean_s1013
let lean_s1015 := by timed congr lean_s1006 lean_s1014
let lean_s1016 := by timed congr lean_s1005 lean_s1015
let lean_s1017 := by timed congr lean_s1004 lean_s1016
let lean_s1018 := by timed congr lean_s1003 lean_s1017
let lean_s1019 := by timed congr lean_s1002 lean_s1018
let lean_s1020 := by timed congr lean_s1001 lean_s1019
let lean_s1021 := by timed congr lean_s1000 lean_s1020
let lean_s1022 := by timed congr lean_s999 lean_s1021
let lean_s1023 := by timed congr lean_s998 lean_s1022
let lean_s1024 := by timed congr lean_s997 lean_s1023
let lean_s1025 := by timed congr lean_s996 lean_s1024
let lean_s1026 := by timed congr lean_s995 lean_s1025
let lean_s1027 := by timed congr lean_s994 lean_s1026
let lean_s1028 := by timed congr lean_s993 lean_s1027
let lean_s1029 := by timed congr lean_s992 lean_s1028
let lean_s1030 := by timed congr lean_s991 lean_s1029
let lean_s1031 := by timed congr lean_s990 lean_s1030
let lean_s1032 := by timed congr lean_s989 lean_s1031
let lean_s1033 := by timed congr lean_s988 lean_s1032
let lean_s1034 := by timed congr lean_s987 lean_s1033
let lean_s1035 := by timed congr lean_s986 lean_s1034
let lean_s1036 := by timed congr lean_s985 lean_s1035
let lean_s1037 := by timed congr lean_s984 lean_s1036
let lean_s1038 := by timed congr lean_s983 lean_s1037
let lean_s1039 := by timed congr lean_s982 lean_s1038
let lean_s1040 := by timed congr lean_s981 lean_s1039
let lean_s1041 := by timed congr lean_s980 lean_s1040
let lean_s1042 := by timed congr lean_s979 lean_s1041
let lean_s1043 := by timed congr lean_s978 lean_s1042
let lean_s1044 := by timed congr lean_s977 lean_s1043
let lean_s1045 := by timed congr lean_s976 lean_s1044
let lean_s1046 := by timed congr lean_s975 lean_s1045
let lean_s1047 := by timed congr lean_s974 lean_s1046
let lean_s1048 := by timed congr lean_s973 lean_s1047
have lean_s1049 : (Eq let690 let473) := by timed congr lean_s972 lean_s1048
let lean_s1050 := by timed congr lean_s900 lean_s1049
let lean_s1051 := by timed flipCongrArg lean_r151 [And]
have lean_s1052 : (Eq let688 let461) := by timed congr lean_s1051 lean_r97
have lean_s1053 : (Eq let689 let462) := by timed congrIte lean_s1052 lean_s185 lean_s186
let lean_s1054 := by timed congr lean_s900 lean_s1053
let lean_s1055 := by timed flipCongrArg lean_r102 [And]
have lean_s1056 : (Eq let686 let459) := by timed congr lean_s1055 lean_r224
have lean_s1057 : let731 := by timed rfl
have lean_s1058 : let730 := by timed rfl
have lean_s1059 : (Eq let687 let460) := by timed congrIte lean_s1056 lean_s1057 lean_s1058
let lean_s1060 := by timed congr lean_s900 lean_s1059
let lean_s1061 := by timed flipCongrArg lean_r176 [And]
have lean_s1062 : (Eq let684 let456) := by timed congr lean_s1061 lean_r120
have lean_s1063 : let729 := by timed rfl
have lean_s1064 : let728 := by timed rfl
have lean_s1065 : (Eq let685 let457) := by timed congrIte lean_s1062 lean_s1063 lean_s1064
let lean_s1066 := by timed congr lean_s900 lean_s1065
let lean_s1067 := by timed flipCongrArg lean_r155 [And]
have lean_s1068 : (Eq let682 let452) := by timed congr lean_s1067 lean_r148
have lean_s1069 : let727 := by timed rfl
have lean_s1070 : let726 := by timed rfl
have lean_s1071 : (Eq let683 let453) := by timed congrIte lean_s1068 lean_s1069 lean_s1070
let lean_s1072 := by timed congr lean_s900 lean_s1071
let lean_s1073 := by timed flipCongrArg lean_r164 [And]
have lean_s1074 : (Eq let680 let449) := by timed congr lean_s1073 lean_r95
have lean_s1075 : let725 := by timed rfl
have lean_s1076 : let724 := by timed rfl
have lean_s1077 : (Eq let681 let450) := by timed congrIte lean_s1074 lean_s1075 lean_s1076
let lean_s1078 := by timed congr lean_s900 lean_s1077
let lean_s1079 := by timed flipCongrArg lean_r151 [And]
have lean_s1080 : (Eq let678 let446) := by timed congr lean_s1079 lean_r193
have lean_s1081 : (Eq let679 let447) := by timed congrIte lean_s1080 lean_s223 lean_s224
let lean_s1082 := by timed congr lean_s900 lean_s1081
let lean_s1083 := by timed flipCongrArg lean_r102 [And]
have lean_s1084 : (Eq let676 let442) := by timed congr lean_s1083 lean_r123
have lean_s1085 : let721 := by timed rfl
have lean_s1086 : let720 := by timed rfl
have lean_s1087 : (Eq let677 let443) := by timed congrIte lean_s1084 lean_s1085 lean_s1086
let lean_s1088 := by timed congr lean_s900 lean_s1087
let lean_s1089 := by timed flipCongrArg lean_r176 [And]
have lean_s1090 : (Eq let674 let439) := by timed congr lean_s1089 lean_r174
have lean_s1091 : let719 := by timed rfl
have lean_s1092 : let718 := by timed rfl
have lean_s1093 : (Eq let675 let440) := by timed congrIte lean_s1090 lean_s1091 lean_s1092
let lean_s1094 := by timed congr lean_s900 lean_s1093
let lean_s1095 := by timed flipCongrArg lean_r155 [And]
have lean_s1096 : (Eq let672 let433) := by timed congr lean_s1095 lean_r168
have lean_s1097 : let717 := by timed rfl
have lean_s1098 : let716 := by timed rfl
have lean_s1099 : (Eq let673 let434) := by timed congrIte lean_s1096 lean_s1097 lean_s1098
let lean_s1100 := by timed congr lean_s900 lean_s1099
let lean_s1101 := by timed flipCongrArg lean_r164 [And]
have lean_s1102 : (Eq let670 let427) := by timed congr lean_s1101 lean_r161
have lean_s1103 : let715 := by timed rfl
have lean_s1104 : let714 := by timed rfl
have lean_s1105 : (Eq let671 let428) := by timed congrIte lean_s1102 lean_s1103 lean_s1104
let lean_s1106 := by timed congr lean_s900 lean_s1105
have lean_s1107 : let713 := by timed rfl
have lean_s1108 : (Eq let421 let421) := by timed rfl
let lean_s1109 := by timed congr lean_s1107 lean_s1108
let lean_s1110 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1111 : (Eq let668 let420) := by timed congr lean_s1110 lean_r158
let lean_s1112 := by timed congr lean_s1107 lean_s1111
let lean_s1113 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1114 : (Eq let667 let57) := by timed congr lean_s1113 lean_r154
let lean_s1115 := by timed congr lean_s1107 lean_s1114
let lean_s1116 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1117 : (Eq let666 let2) := by timed congr lean_s1116 lean_r81
let lean_s1118 := by timed congr lean_s1107 lean_s1117
let lean_s1119 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1120 : (Eq let665 let419) := by timed congr lean_s1119 lean_r144
let lean_s1121 := by timed congr lean_s1118 lean_s1120
let lean_s1122 := by timed congr lean_s1115 lean_s1121
let lean_s1123 := by timed congr lean_s1112 lean_s1122
have lean_s1124 : (Eq let669 let422) := by timed congr lean_s1109 lean_s1123
let lean_s1125 := by timed congr lean_s900 lean_s1124
let lean_s1126 := by timed flipCongrArg lean_r141 [Or]
let lean_s1127 := by timed flipCongrArg lean_s396 [Eq]
have lean_s1128 : let481 := by timed Eq.trans lean_r106 lean_r119
have lean_s1129 : (Eq let663 let520) := by timed congr lean_s1127 lean_s1128
have lean_s1130 : (Eq let663 False) := by timed Eq.trans lean_s1129 lean_r149
have lean_s1131 : (Eq let664 let524) := by timed congr lean_s1126 lean_s1130
have lean_s1132 : (Eq let664 let418) := by timed Eq.trans lean_s1131 lean_r153
let lean_s1133 := by timed congr lean_s900 lean_s1132
have lean_s1134 : let711 := by timed rfl
let lean_s1135 := by timed congr lean_s1134 lean_r139
let lean_s1136 := by timed congr lean_s1134 lean_r116
let lean_s1137 := by timed congr lean_s1134 lean_r113
let lean_s1138 := by timed flipCongrArg lean_s919 [Eq]
have lean_s1139 : let507 := by timed Eq.trans lean_r132 lean_r138
have lean_s1140 : (Eq let659 let413) := by timed flipCongrArg lean_s1139 [selectx5fformat]
have lean_s1141 : (Eq let660 let487) := by timed congr lean_s1138 lean_s1140
have lean_s1142 : (Eq let660 let414) := by timed Eq.trans lean_s1141 lean_r125
let lean_s1143 := by timed congr lean_s1134 lean_s1142
let lean_s1144 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1145 : let613 := by timed Eq.trans lean_r133 lean_r236
have lean_s1146 : (Eq let657 let410) := by timed flipCongrArg lean_s1145 [selectx5fformat]
have lean_s1147 : (Eq let658 let509) := by timed congr lean_s1144 lean_s1146
have lean_s1148 : (Eq let658 let411) := by timed Eq.trans lean_s1147 lean_r140
let lean_s1149 := by timed congr lean_s1134 lean_s1148
let lean_s1150 := by timed flipCongrArg lean_s938 [Eq]
have lean_s1151 : let599 := by timed Eq.trans lean_r181 lean_r222
have lean_s1152 : (Eq let655 let407) := by timed flipCongrArg lean_s1151 [selectx5fformat]
have lean_s1153 : (Eq let656 let501) := by timed congr lean_s1150 lean_s1152
have lean_s1154 : (Eq let656 let408) := by timed Eq.trans lean_s1153 lean_r135
let lean_s1155 := by timed congr lean_s1149 lean_s1154
let lean_s1156 := by timed congr lean_s1143 lean_s1155
let lean_s1157 := by timed congr lean_s1137 lean_s1156
let lean_s1158 := by timed congr lean_s1136 lean_s1157
have lean_s1159 : (Eq let661 let416) := by timed congr lean_s1135 lean_s1158
have lean_s1160 : (Eq let662 let417) := by timed flipCongrArg lean_s1159 [Not]
let lean_s1161 := by timed congr lean_s1133 lean_s1160
let lean_s1162 := by timed congr lean_s1125 lean_s1161
let lean_s1163 := by timed congr lean_s1106 lean_s1162
let lean_s1164 := by timed congr lean_s1100 lean_s1163
let lean_s1165 := by timed congr lean_s1094 lean_s1164
let lean_s1166 := by timed congr lean_s1088 lean_s1165
let lean_s1167 := by timed congr lean_s1082 lean_s1166
let lean_s1168 := by timed congr lean_s1078 lean_s1167
let lean_s1169 := by timed congr lean_s1072 lean_s1168
let lean_s1170 := by timed congr lean_s1066 lean_s1169
let lean_s1171 := by timed congr lean_s1060 lean_s1170
let lean_s1172 := by timed congr lean_s1054 lean_s1171
let lean_s1173 := by timed congr lean_s1050 lean_s1172
let lean_s1174 := by timed congr lean_s970 lean_s1173
let lean_s1175 := by timed congr lean_s965 lean_s1174
let lean_s1176 := by timed congr lean_s952 lean_s1175
let lean_s1177 := by timed congr lean_s940 lean_s1176
let lean_s1178 := by timed congr lean_s933 lean_s1177
let lean_s1179 := by timed congr lean_s924 lean_s1178
let lean_s1180 := by timed congr lean_s914 lean_s1179
let lean_s1181 := by timed congr lean_s910 lean_s1180
let lean_s1182 := by timed congr lean_s909 lean_s1181
let lean_s1183 := by timed congr lean_s908 lean_s1182
let lean_s1184 := by timed congr lean_s907 lean_s1183
let lean_s1185 := by timed congr lean_s906 lean_s1184
let lean_s1186 := by timed congr lean_s905 lean_s1185
let lean_s1187 := by timed congr lean_s904 lean_s1186
let lean_s1188 := by timed congr lean_s903 lean_s1187
let lean_s1189 := by timed congr lean_s902 lean_s1188
have lean_s1190 : (Eq let710 let478) := by timed congr lean_s901 lean_s1189
have lean_s1191 : (Eq let710 let477) := by timed Eq.trans lean_s1190 lean_r117
have lean_s1192 : (Eq let654 let477) := by timed Eq.trans lean_s899 lean_s1191
have lean_s1193 : (Eq let253 let477) := by timed Eq.trans lean_s352 lean_s1192
have lean_s1194 : let477 := by timed eqResolve lean_a239 lean_s1193
have lean_s1195 : let462 := by andElim lean_s1194, 5
have lean_s1196 : (Or let461 let46) := by timed iteElim2 lean_s1195
have lean_s1197 : (Or let46 let461) := by permutateOr lean_s1196, [1, 0], (- 1)
have lean_s1198 : (Or let878 let375) := by timed @cnfAndPos [let445, let375] 1
have lean_s1199 : (Or let375 let878) := by permutateOr lean_s1198, [1, 0], (- 1)
have lean_s1200 : let881 :=
  (scope (fun lean_a248 : let375 =>
    have lean_s1200 : let881 :=
      (scope (fun lean_a249 : let375 =>
        have lean_s1200 : let376 := by timed Eq.symm lean_a249
        have lean_s1201 : let375 := by timed Eq.symm lean_s1200
        let lean_s1202 := by timed flipCongrArg lean_s1201 [Eq]
        have lean_s1203 : let573 := by timed rfl
        have lean_s1204 : (Eq let444 let34) := by timed congr lean_s1202 lean_s1203
        have lean_s1205 : (Eq let318 let598) := by timed flipCongrArg lean_r3 [Not]
        have lean_s1206 : (Eq let318 True) := by timed Eq.trans lean_s1205 lean_r221
        have lean_s1207 : (Eq let35 True) := by timed Eq.trans lean_r56 lean_s1206
        have lean_s1208 : let35 := by timed trueElim lean_s1207
        have lean_s1209 : (Eq let444 False) := by timed Eq.trans lean_s1204 lean_s1208
        have lean_s1210 : let864 := by timed falseElim lean_s1209
        show let864 from lean_s1210
      ))
    have lean_s1201 : let882 := by liftOrNToImp lean_s1200, 1
    have lean_s1202 : let864 := by timed modusPonens lean_a248 lean_s1201
    show let864 from lean_s1202
  ))
have lean_s1201 : let882 := by liftOrNToImp lean_s1200, 1
have lean_s1202 : let881 := by timed impliesElim lean_s1201
have lean_s1203 : (Or let863 let444) := by timed @cnfAndPos [let445, let444] 1
have lean_s1204 : (Or let444 let863) := by permutateOr lean_s1203, [1, 0], (- 1)
have lean_s1205 : let447 := by andElim lean_s1194, 10
have lean_s1206 : (Or let446 let22) := by timed iteElim2 lean_s1205
have lean_s1207 : (Or let22 let446) := by permutateOr lean_s1206, [1, 0], (- 1)
have lean_s1208 : (Or let886 (Or let761 (Or let379 (Or let58 let835)))) :=
  (scope (fun lean_a249 : let24 =>
    (scope (fun lean_a250 : let22 =>
      (scope (fun lean_a251 : let10 =>
        (scope (fun lean_a252 : let57 =>
          have lean_s1208 : let799 := by timed Eq.symm lean_r13
          have lean_s1209 : let66 := by timed eqResolve lean_a252 lean_s1208
          have lean_s1210 : let800 := by timed And.intro lean_s1209 lean_a250
          have lean_s1211 : let803 :=
            (scope (fun lean_a251 : let66 =>
              (scope (fun lean_a252 : let22 =>
                have lean_s1211 : let805 := by timed Eq.symm lean_a252
                have lean_s1212 : let797 := by timed Eq.symm lean_a251
                have lean_s1213 : let66 := by timed Eq.symm lean_s1212
                have lean_s1214 : let804 := by timed flipCongrArg lean_s1213 [xx5fcount]
                have lean_s1215 : let768 := by timed Eq.trans lean_s1211 lean_s1214
                show let768 from lean_s1215
            ))))
          have lean_s1212 : let801 := by liftOrNToImp lean_s1211, 2
          have lean_s1213 : let768 := by timed modusPonens lean_s1210 lean_s1212
          have lean_s1214 : let892 := by timed And.intro lean_s1209 lean_a249
          have lean_s1215 : (Or let794 let889) :=
            (scope (fun lean_a251 : let66 =>
              (scope (fun lean_a252 : let24 =>
                have lean_s1215 : let890 := by timed Eq.symm lean_a252
                have lean_s1216 : let797 := by timed Eq.symm lean_a251
                have lean_s1217 : let66 := by timed Eq.symm lean_s1216
                have lean_s1218 : let796 := by timed flipCongrArg lean_s1217 [sx5fcount]
                have lean_s1219 : let834 := by timed Eq.trans lean_s1215 lean_s1218
                show let834 from lean_s1219
            ))))
          have lean_s1216 : (Implies let892 let834) := by liftOrNToImp lean_s1215, 2
          have lean_s1217 : let834 := by timed modusPonens lean_s1214 lean_s1216
          let lean_s1218 := by timed And.intro lean_s1213 lean_s1217
          have lean_s1219 : let835 := by timed And.intro lean_a251 lean_s1218
          show let835 from lean_s1219
  ))))))))
have lean_s1209 : let891 := by liftOrNToImp lean_s1208, 4
have lean_s1210 : (Eq let576 let576) := by timed rfl
let lean_s1211 := by timed flipCongrArg lean_s1210 [Implies]
have lean_s1212 : (Or let379 (Or let773 (Or (Not let834) False))) :=
  (scope (fun lean_a251 : let10 =>
    (scope (fun lean_a252 : let768 =>
      (scope (fun lean_a253 : let834 =>
        have lean_s1212 : let838 := by timed Eq.symm lean_a253
        have lean_s1213 : (Or let839 False) :=
          (scope (fun lean_a253 : let838 =>
            have lean_s1213 : let67 := by timed trueElim lean_r14
            have lean_s1214 : let843 := by timed And.intro lean_s1213 lean_a253
            have lean_s1215 : (Implies let843 let842) := by arithMulPos [let8, let12, let39], 4
            have lean_s1216 : let842 := by timed modusPonens lean_s1214 lean_s1215
            have lean_s1217 : let785 := by timed Eq.symm lean_a252
            have lean_s1218 : let786 := by timed And.intro lean_s1213 lean_s1217
            have lean_s1219 : let787 := by arithMulPos [let7, let14, let39], 4
            have lean_s1220 : let784 := by timed modusPonens lean_s1218 lean_s1219
            have lean_s1221 : let254 := by timed trueElim lean_r25
            have lean_s1222 : let782 := by timed And.intro lean_s1221 lean_a251
            have lean_s1223 : let783 := by arithMulNeg [let9, let3, let72], 3
            have lean_s1224 : let781 := by timed modusPonens lean_s1222 lean_s1223
            have lean_s1225 : let841 := by sumBounds [lean_s1216, lean_s1220, lean_s1224]
            let lean_s1226 := by timed congrHAdd lean_r15 lean_r16
            have lean_s1227 : (Eq let779 let79) := by timed congrHAdd lean_r68 lean_s1226
            have lean_s1228 : (Eq let779 let43) := by timed Eq.trans lean_s1227 lean_r18
            let lean_s1229 := by timed flipCongrArg lean_s1228 [LE.le]
            let lean_s1230 := by timed congrHAdd lean_r19 lean_r20
            have lean_s1231 : (Eq let840 let45) := by timed congrHAdd lean_r5 lean_s1230
            have lean_s1232 : (Eq let840 let41) := by timed Eq.trans lean_s1231 lean_r6
            have lean_s1233 : (Eq let841 let557) := by timed congr lean_s1229 lean_s1232
            have lean_s1234 : (Eq let841 False) := by timed Eq.trans lean_s1233 lean_r187
            show False from by timed eqResolve lean_s1225 lean_s1234
          ))
        have lean_s1214 : let839 := by liftOrNToNeg lean_s1213
        show False from by timed contradiction lean_s1212 lean_s1214
  ))))))
have lean_s1213 : (Not let835) := by liftOrNToNeg lean_s1212
have lean_s1214 : let837 := by timed falseIntro lean_s1213
have lean_s1215 : (Eq let891 let578) := by timed congr lean_s1211 lean_s1214
have lean_s1216 : (Eq let891 let577) := by timed Eq.trans lean_s1215 lean_r203
have lean_s1217 : let577 := by timed eqResolve lean_s1209 lean_s1216
have lean_s1218 : (Or let886 let766) := by timed flipNotAnd lean_s1217 [let24, let22, let10, let57]
have lean_s1219 : (Or let379 (Or let886 let764)) := by permutateOr lean_s1218, [2, 0, 1, 3], (- 1)
have lean_s1220 : (Or let809 (Or let806 (Or let54 let59))) := by timed cnfAndNeg [let476, let52, let58]
have lean_s1221 : let808 :=
  (scope (fun lean_a254 : let476 =>
    (scope (fun lean_a255 : let52 =>
      (scope (fun lean_a256 : let58 =>
        let lean_s1221 := by timed And.intro lean_a256 lean_a255
        have lean_s1222 : let811 := by timed And.intro lean_a254 lean_s1221
        have lean_s1223 : (Or let806 (Or let59 (Or let54 let810))) :=
          (scope (fun lean_a257 : let476 =>
            (scope (fun lean_a258 : let58 =>
              (scope (fun lean_a259 : let52 =>
                have lean_s1223 : (binrel% GT.gt fmt1 let4) := by trichotomy lean_a257, lean_a258
                have lean_s1224 : (binrel% GE.ge fmt1 let1) := by intTightLb lean_s1223
                have lean_s1225 : (Eq let52 let53) := by timed Eq.symm lean_r8
                have lean_s1226 : let53 := by timed eqResolve lean_a259 lean_s1225
                have lean_s1227 : (binrel% LE.le fmt1 let1) := by intTightUb lean_s1226
                have lean_s1228 : let2 := by trichotomy lean_s1224, lean_s1227
                have lean_s1229 : let810 := by timed Eq.symm lean_s1228
                show let810 from lean_s1229
          ))))))
        have lean_s1224 : (Implies let811 let810) := by liftOrNToImp lean_s1223, 3
        have lean_s1225 : let810 := by timed modusPonens lean_s1222 lean_s1224
        have lean_s1226 : (Or (Not let810) let2) :=
          (scope (fun lean_a257 : let810 =>
            have lean_s1226 : let2 := by timed Eq.symm lean_a257
            show let2 from lean_s1226
          ))
        have lean_s1227 : (Implies let810 let2) := by liftOrNToImp lean_s1226, 1
        have lean_s1228 : let2 := by timed modusPonens lean_s1225 lean_s1227
        show let2 from lean_s1228
  ))))))
have lean_s1222 : (Implies let809 let2) := by liftOrNToImp lean_s1221, 3
have lean_s1223 : (Or (Not let809) let2) := by timed impliesElim lean_s1222
have lean_s1224 : let808 := by R1 lean_s1220, lean_s1223, let809, [(- 1), (- 1)]
have lean_s1225 : let713 := by timed rfl
have lean_s1226 : (Eq let806 let806) := by timed rfl
let lean_s1227 := by timed congr lean_s1225 lean_s1226
have lean_s1228 : let301 := by timed rfl
let lean_s1229 := by timed flipCongrArg lean_s1228 [Eq]
have lean_s1230 : (Eq let55 let301) := by timed congr lean_s1229 lean_r108
have lean_s1231 : (Eq let55 True) := by timed Eq.trans lean_s1230 lean_r43
have lean_s1232 : (Eq let56 True) := by timed Eq.trans lean_r9 lean_s1231
have lean_s1233 : let56 := by timed trueElim lean_s1232
let lean_s1234 := by timed congr lean_s1225 lean_s1233
have lean_s1235 : let61 := by timed rfl
let lean_s1236 := by timed flipCongrArg lean_s1235 [Eq]
have lean_s1237 : (Eq let570 let61) := by timed congr lean_s1236 lean_r10
have lean_s1238 : (Eq let570 True) := by timed Eq.trans lean_s1237 lean_r11
have lean_s1239 : (Eq let60 True) := by timed Eq.trans lean_r198 lean_s1238
have lean_s1240 : let60 := by timed trueElim lean_s1239
let lean_s1241 := by timed congr lean_s1225 lean_s1240
have lean_s1242 : (Eq let2 let2) := by timed rfl
let lean_s1243 := by timed congr lean_s1241 lean_s1242
let lean_s1244 := by timed congr lean_s1234 lean_s1243
have lean_s1245 : (Eq let808 let807) := by timed congr lean_s1227 lean_s1244
have lean_s1246 : let807 := by timed eqResolve lean_s1224 lean_s1245
have lean_s1247 : (Or let51 (Or let57 (Or let2 let806))) := by permutateOr lean_s1246, [1, 2, 3, 0], (- 1)
have lean_s1248 : (Or let886 (Or let761 (Or let759 let844))) :=
  (scope (fun lean_a258 : let24 =>
    (scope (fun lean_a259 : let22 =>
      (scope (fun lean_a260 : let20 =>
        (scope (fun lean_a261 : let16 =>
          (scope (fun lean_a262 : let10 =>
            (scope (fun lean_a263 : let2 =>
              have lean_s1248 : let827 := by timed Eq.symm lean_r124
              have lean_s1249 : let486 := by timed eqResolve lean_a263 lean_s1248
              let lean_s1250 := by timed And.intro lean_a261 lean_a259
              have lean_s1251 : let828 := by timed And.intro lean_s1249 lean_s1250
              have lean_s1252 : let830 :=
                (scope (fun lean_a261 : let486 =>
                  (scope (fun lean_a262 : let16 =>
                    (scope (fun lean_a263 : let22 =>
                      have lean_s1252 : let805 := by timed Eq.symm lean_a263
                      have lean_s1253 : let149 := by timed Eq.symm lean_a262
                      have lean_s1254 : let16 := by timed Eq.symm lean_s1253
                      let lean_s1255 := by timed Eq.trans lean_s1252 lean_s1254
                      have lean_s1256 : let826 := by timed Eq.symm lean_a261
                      have lean_s1257 : let486 := by timed Eq.symm lean_s1256
                      have lean_s1258 : let831 := by timed flipCongrArg lean_s1257 [xx5fcount]
                      have lean_s1259 : let768 := by timed Eq.trans lean_s1255 lean_s1258
                      show let768 from lean_s1259
                ))))))
              have lean_s1253 : let829 := by liftOrNToImp lean_s1252, 3
              have lean_s1254 : let768 := by timed modusPonens lean_s1251 lean_s1253
              let lean_s1255 := by timed And.intro lean_a260 lean_a258
              have lean_s1256 : let888 := by timed And.intro lean_s1249 lean_s1255
              have lean_s1257 : (Or let823 (Or let759 let889)) :=
                (scope (fun lean_a262 : let486 =>
                  (scope (fun lean_a263 : let20 =>
                    (scope (fun lean_a264 : let24 =>
                      have lean_s1257 : let890 := by timed Eq.symm lean_a264
                      have lean_s1258 : let184 := by timed Eq.symm lean_a263
                      have lean_s1259 : let20 := by timed Eq.symm lean_s1258
                      let lean_s1260 := by timed Eq.trans lean_s1257 lean_s1259
                      have lean_s1261 : let826 := by timed Eq.symm lean_a262
                      have lean_s1262 : let486 := by timed Eq.symm lean_s1261
                      have lean_s1263 : let825 := by timed flipCongrArg lean_s1262 [sx5fcount]
                      have lean_s1264 : let834 := by timed Eq.trans lean_s1260 lean_s1263
                      show let834 from lean_s1264
                ))))))
              have lean_s1258 : (Implies let888 let834) := by liftOrNToImp lean_s1257, 3
              have lean_s1259 : let834 := by timed modusPonens lean_s1256 lean_s1258
              let lean_s1260 := by timed And.intro lean_s1254 lean_s1259
              have lean_s1261 : let835 := by timed And.intro lean_a262 lean_s1260
              show let835 from lean_s1261
  ))))))))))))
have lean_s1249 : let887 := by liftOrNToImp lean_s1248, 6
have lean_s1250 : (Eq let25 let25) := by timed rfl
let lean_s1251 := by timed flipCongrArg lean_s1250 [Implies]
have lean_s1252 : let837 := by timed falseIntro lean_s1213
have lean_s1253 : (Eq let887 let27) := by timed congr lean_s1251 lean_s1252
have lean_s1254 : (Eq let887 let26) := by timed Eq.trans lean_s1253 lean_r0
have lean_s1255 : let26 := by timed eqResolve lean_s1249 lean_s1254
have lean_s1256 : (Or let886 let819) := by timed flipNotAnd lean_s1255 [let24, let22, let20, let16, let10, let2]
have lean_s1257 : (Or let379 (Or let886 let815)) := by permutateOr lean_s1256, [4, 0, 2, 1, 3, 5], (- 1)
have lean_s1258 : let10 := by andElim lean_s1194, 0
let lean_s1259 := by R2 lean_s1257, lean_s1258, let10, [(- 1), 0]
have lean_s1260 : let443 := by andElim lean_s1194, 11
have lean_s1261 : (Or let442 let16) := by timed iteElim2 lean_s1260
have lean_s1262 : (Or let16 let442) := by permutateOr lean_s1261, [1, 0], (- 1)
let lean_s1263 := by R2 lean_s1259, lean_s1262, let16, [(- 1), (- 1)]
have lean_s1264 : let460 := by andElim lean_s1194, 6
have lean_s1265 : (Or let459 let20) := by timed iteElim2 lean_s1264
have lean_s1266 : (Or let20 let459) := by permutateOr lean_s1265, [1, 0], (- 1)
let lean_s1267 := by R2 lean_s1263, lean_s1266, let20, [(- 1), (- 1)]
let lean_s1268 := by R2 lean_s1267, lean_s1207, let22, [(- 1), (- 1)]
have lean_s1269 : (Or let862 let384) := by timed @cnfAndPos [let384, let441] 0
have lean_s1270 : (Or let384 let862) := by permutateOr lean_s1269, [1, 0], (- 1)
let lean_s1271 := by R1 lean_s1268, lean_s1270, let442, [(- 1), (- 1)]
have lean_s1272 : (Or let832 let384) := by timed @cnfAndPos [let384, let458] 0
have lean_s1273 : (Or let384 let832) := by permutateOr lean_s1272, [1, 0], (- 1)
let lean_s1274 := by R1 lean_s1271, lean_s1273, let459, [(- 1), (- 1)]
have lean_s1275 : (Or let886 (Or let756 (Or let384 let885))) := by R1 lean_s1274, lean_s1204, let446, [(- 1), (- 1)]
have lean_s1276 : (Or let886 (Or let756 let885)) := by factor lean_s1275, (- 1)
have lean_s1277 : let883 :=
  (scope (fun lean_a262 : let375 =>
    have lean_s1277 : let883 :=
      (scope (fun lean_a262 : let375 =>
        have lean_s1277 : let376 := by timed Eq.symm lean_a262
        have lean_s1278 : let375 := by timed Eq.symm lean_s1277
        let lean_s1279 := by timed flipCongrArg lean_s1278 [Eq]
        have lean_s1280 : let574 := by timed rfl
        have lean_s1281 : (Eq let384 let30) := by timed congr lean_s1279 lean_s1280
        have lean_s1282 : (Eq let31 let598) := by timed flipCongrArg lean_r2 [Not]
        have lean_s1283 : (Eq let31 True) := by timed Eq.trans lean_s1282 lean_r221
        have lean_s1284 : (Eq let32 True) := by timed Eq.trans lean_r1 lean_s1283
        have lean_s1285 : let32 := by timed trueElim lean_s1284
        have lean_s1286 : let868 := by timed Eq.trans lean_s1281 lean_s1285
        have lean_s1287 : let865 := by timed falseElim lean_s1286
        show let865 from lean_s1287
      ))
    have lean_s1278 : let884 := by liftOrNToImp lean_s1277, 1
    have lean_s1279 : let865 := by timed modusPonens lean_a262 lean_s1278
    show let865 from lean_s1279
  ))
have lean_s1278 : let884 := by liftOrNToImp lean_s1277, 1
have lean_s1279 : let883 := by timed impliesElim lean_s1278
have lean_s1280 : (Or let865 let879) := by permutateOr lean_s1279, [1, 0], (- 1)
let lean_s1281 := by R1 lean_s1276, lean_s1280, let384, [(- 1), (- 1)]
let lean_s1282 := by R1 lean_s1281, lean_s1202, let444, [(- 1), (- 1)]
have lean_s1283 : (Or let878 let24) := by timed iteElim1 lean_s1195
have lean_s1284 : (Or let24 let878) := by permutateOr lean_s1283, [1, 0], (- 1)
have lean_s1285 : (Or let756 (Or let879 let880)) := by R2 lean_s1282, lean_s1284, let24, [(- 1), (- 1)]
have lean_s1286 : (Or let756 let880) := by factor lean_s1285, (- 1)
have lean_s1287 : (Or let756 (Or let878 let878)) := by R2 lean_s1286, lean_s1199, let375, [(- 1), (- 1)]
have lean_s1288 : (Or let756 let878) := by factor lean_s1287, (- 1)
let lean_s1289 := by R2 lean_s1288, lean_s1197, let461, [(- 1), (- 1)]
have lean_s1290 : (Or let757 (Or let761 (Or let833 let844))) :=
  (scope (fun lean_a262 : let46 =>
    (scope (fun lean_a263 : let22 =>
      (scope (fun lean_a264 : let74 =>
        (scope (fun lean_a265 : let16 =>
          (scope (fun lean_a266 : let10 =>
            (scope (fun lean_a267 : let2 =>
              have lean_s1290 : let827 := by timed Eq.symm lean_r124
              have lean_s1291 : let486 := by timed eqResolve lean_a267 lean_s1290
              let lean_s1292 := by timed And.intro lean_a265 lean_a263
              have lean_s1293 : let828 := by timed And.intro lean_s1291 lean_s1292
              have lean_s1294 : let830 :=
                (scope (fun lean_a263 : let486 =>
                  (scope (fun lean_a264 : let16 =>
                    (scope (fun lean_a265 : let22 =>
                      have lean_s1294 : let805 := by timed Eq.symm lean_a265
                      have lean_s1295 : let149 := by timed Eq.symm lean_a264
                      have lean_s1296 : let16 := by timed Eq.symm lean_s1295
                      let lean_s1297 := by timed Eq.trans lean_s1294 lean_s1296
                      have lean_s1298 : let826 := by timed Eq.symm lean_a263
                      have lean_s1299 : let486 := by timed Eq.symm lean_s1298
                      have lean_s1300 : let831 := by timed flipCongrArg lean_s1299 [xx5fcount]
                      have lean_s1301 : let768 := by timed Eq.trans lean_s1297 lean_s1300
                      show let768 from lean_s1301
                ))))))
              have lean_s1295 : let829 := by liftOrNToImp lean_s1294, 3
              have lean_s1296 : let768 := by timed modusPonens lean_s1293 lean_s1295
              have lean_s1297 : let847 := by timed And.intro lean_a264 lean_a262
              have lean_s1298 : (Or let833 (Or let757 let65)) :=
                (scope (fun lean_a263 : let74 =>
                  (scope (fun lean_a264 : let46 =>
                    have lean_s1298 : let798 := by timed Eq.symm lean_a264
                    have lean_s1299 : (Eq let64 let19) := by timed Eq.symm lean_a263
                    have lean_s1300 : let74 := by timed Eq.symm lean_s1299
                    have lean_s1301 : let65 := by timed Eq.trans lean_s1298 lean_s1300
                    show let65 from lean_s1301
                ))))
              have lean_s1299 : (Implies let847 let65) := by liftOrNToImp lean_s1298, 2
              have lean_s1300 : let65 := by timed modusPonens lean_s1297 lean_s1299
              have lean_s1301 : (Or (Not let65) let845) :=
                (scope (fun lean_a263 : let65 =>
                  have lean_s1301 : let62 := by timed eqResolve lean_a263 lean_r12
                  have lean_s1302 : let845 := by timed Eq.symm lean_s1301
                  show let845 from lean_s1302
                ))
              have lean_s1302 : (Implies let65 let845) := by liftOrNToImp lean_s1301, 1
              have lean_s1303 : let845 := by timed modusPonens lean_s1300 lean_s1302
              have lean_s1304 : let846 := by timed And.intro lean_s1291 lean_s1303
              have lean_s1305 : (Or let823 (Or (Not let845) let834)) :=
                (scope (fun lean_a264 : let486 =>
                  (scope (fun lean_a265 : let845 =>
                    have lean_s1305 : let62 := by timed Eq.symm lean_a265
                    have lean_s1306 : let845 := by timed Eq.symm lean_s1305
                    have lean_s1307 : let826 := by timed Eq.symm lean_a264
                    have lean_s1308 : let486 := by timed Eq.symm lean_s1307
                    have lean_s1309 : let825 := by timed flipCongrArg lean_s1308 [sx5fcount]
                    have lean_s1310 : let834 := by timed Eq.trans lean_s1306 lean_s1309
                    show let834 from lean_s1310
                ))))
              have lean_s1306 : (Implies let846 let834) := by liftOrNToImp lean_s1305, 2
              have lean_s1307 : let834 := by timed modusPonens lean_s1304 lean_s1306
              let lean_s1308 := by timed And.intro lean_s1296 lean_s1307
              have lean_s1309 : let835 := by timed And.intro lean_a266 lean_s1308
              show let835 from lean_s1309
  ))))))))))))
have lean_s1291 : let836 := by liftOrNToImp lean_s1290, 6
have lean_s1292 : (Eq let75 let75) := by timed rfl
let lean_s1293 := by timed flipCongrArg lean_s1292 [Implies]
have lean_s1294 : let837 := by timed falseIntro lean_s1213
have lean_s1295 : (Eq let836 let77) := by timed congr lean_s1293 lean_s1294
have lean_s1296 : (Eq let836 let76) := by timed Eq.trans lean_s1295 lean_r17
have lean_s1297 : let76 := by timed eqResolve lean_s1291 lean_s1296
have lean_s1298 : (Or let757 (Or let761 (Or let833 let817))) := by timed flipNotAnd lean_s1297 [let46, let22, let74, let16, let10, let2]
have lean_s1299 : (Or let379 (Or let757 (Or let833 let813))) := by permutateOr lean_s1298, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1300 := by R2 lean_s1299, lean_s1258, let10, [(- 1), 0]
have lean_s1301 : (Or let832 let74) := by timed iteElim1 lean_s1264
have lean_s1302 : (Or let74 let832) := by permutateOr lean_s1301, [1, 0], (- 1)
let lean_s1303 := by R2 lean_s1300, lean_s1302, let74, [(- 1), (- 1)]
let lean_s1304 := by R2 lean_s1303, lean_s1266, let459, [(- 1), (- 1)]
have lean_s1305 : (Or let757 (Or let761 (Or let759 (Or let763 (Or let379 (Or let756 let769)))))) :=
  (scope (fun lean_a265 : let46 =>
    (scope (fun lean_a266 : let22 =>
      (scope (fun lean_a267 : let20 =>
        (scope (fun lean_a268 : let16 =>
          (scope (fun lean_a269 : let10 =>
            (scope (fun lean_a270 : let2 =>
              have lean_s1305 : let827 := by timed Eq.symm lean_r124
              have lean_s1306 : let486 := by timed eqResolve lean_a270 lean_s1305
              let lean_s1307 := by timed And.intro lean_a268 lean_a266
              have lean_s1308 : let828 := by timed And.intro lean_s1306 lean_s1307
              have lean_s1309 : let830 :=
                (scope (fun lean_a265 : let486 =>
                  (scope (fun lean_a266 : let16 =>
                    (scope (fun lean_a267 : let22 =>
                      have lean_s1309 : let805 := by timed Eq.symm lean_a267
                      have lean_s1310 : let149 := by timed Eq.symm lean_a266
                      have lean_s1311 : let16 := by timed Eq.symm lean_s1310
                      let lean_s1312 := by timed Eq.trans lean_s1309 lean_s1311
                      have lean_s1313 : let826 := by timed Eq.symm lean_a265
                      have lean_s1314 : let486 := by timed Eq.symm lean_s1313
                      have lean_s1315 : let831 := by timed flipCongrArg lean_s1314 [xx5fcount]
                      have lean_s1316 : let768 := by timed Eq.trans lean_s1312 lean_s1315
                      show let768 from lean_s1316
                ))))))
              have lean_s1310 : let829 := by liftOrNToImp lean_s1309, 3
              have lean_s1311 : let768 := by timed modusPonens lean_s1308 lean_s1310
              let lean_s1312 := by timed And.intro lean_a267 lean_a265
              have lean_s1313 : let821 := by timed And.intro lean_s1306 lean_s1312
              have lean_s1314 : let824 :=
                (scope (fun lean_a265 : let486 =>
                  (scope (fun lean_a266 : let20 =>
                    (scope (fun lean_a267 : let46 =>
                      have lean_s1314 : let798 := by timed Eq.symm lean_a267
                      have lean_s1315 : let184 := by timed Eq.symm lean_a266
                      have lean_s1316 : let20 := by timed Eq.symm lean_s1315
                      let lean_s1317 := by timed Eq.trans lean_s1314 lean_s1316
                      have lean_s1318 : let826 := by timed Eq.symm lean_a265
                      have lean_s1319 : let486 := by timed Eq.symm lean_s1318
                      have lean_s1320 : let825 := by timed flipCongrArg lean_s1319 [sx5fcount]
                      have lean_s1321 : let767 := by timed Eq.trans lean_s1317 lean_s1320
                      show let767 from lean_s1321
                ))))))
              have lean_s1315 : let822 := by liftOrNToImp lean_s1314, 3
              have lean_s1316 : let767 := by timed modusPonens lean_s1313 lean_s1315
              let lean_s1317 := by timed And.intro lean_s1311 lean_s1316
              have lean_s1318 : let769 := by timed And.intro lean_a269 lean_s1317
              show let769 from lean_s1318
  ))))))))))))
have lean_s1306 : let820 := by liftOrNToImp lean_s1305, 6
have lean_s1307 : (Eq let47 let47) := by timed rfl
let lean_s1308 := by timed flipCongrArg lean_s1307 [Implies]
have lean_s1309 : (Or let379 (Or let773 let772)) :=
  (scope (fun lean_a265 : let10 =>
    (scope (fun lean_a266 : let768 =>
      (scope (fun lean_a267 : let767 =>
        have lean_s1309 : let774 := by timed Eq.symm lean_a267
        have lean_s1310 : let776 :=
          (scope (fun lean_a265 : let774 =>
            have lean_s1310 : let67 := by timed trueElim lean_r14
            have lean_s1311 : let789 := by timed And.intro lean_s1310 lean_a265
            have lean_s1312 : let790 := by arithMulPos [let8, let14, let39], 4
            have lean_s1313 : let788 := by timed modusPonens lean_s1311 lean_s1312
            have lean_s1314 : let785 := by timed Eq.symm lean_a266
            have lean_s1315 : let786 := by timed And.intro lean_s1310 lean_s1314
            have lean_s1316 : let787 := by arithMulPos [let7, let14, let39], 4
            have lean_s1317 : let784 := by timed modusPonens lean_s1315 lean_s1316
            have lean_s1318 : let254 := by timed trueElim lean_r25
            have lean_s1319 : let782 := by timed And.intro lean_s1318 lean_a265
            have lean_s1320 : let783 := by arithMulNeg [let9, let3, let72], 3
            have lean_s1321 : let781 := by timed modusPonens lean_s1319 lean_s1320
            have lean_s1322 : let780 := by sumBounds [lean_s1313, lean_s1317, lean_s1321]
            let lean_s1323 := by timed congrHAdd lean_r15 lean_r16
            have lean_s1324 : (Eq let779 let79) := by timed congrHAdd lean_r68 lean_s1323
            have lean_s1325 : (Eq let779 let43) := by timed Eq.trans lean_s1324 lean_r18
            let lean_s1326 := by timed flipCongrArg lean_s1325 [LE.le]
            let lean_s1327 := by timed congrHAdd lean_r19 lean_r20
            have lean_s1328 : (Eq let778 let398) := by timed congrHAdd lean_r19 lean_s1327
            have lean_s1329 : (Eq let778 let42) := by timed Eq.trans lean_s1328 lean_r114
            have lean_s1330 : (Eq let780 let82) := by timed congr lean_s1326 lean_s1329
            have lean_s1331 : (Eq let780 False) := by timed Eq.trans lean_s1330 lean_r21
            show False from by timed eqResolve lean_s1322 lean_s1331
          ))
        have lean_s1311 : let775 := by liftOrNToNeg lean_s1310
        show False from by timed contradiction lean_s1309 lean_s1311
  ))))))
have lean_s1310 : (Not let769) := by liftOrNToNeg lean_s1309
have lean_s1311 : let771 := by timed falseIntro lean_s1310
have lean_s1312 : (Eq let820 let49) := by timed congr lean_s1308 lean_s1311
have lean_s1313 : (Eq let820 let48) := by timed Eq.trans lean_s1312 lean_r7
have lean_s1314 : let48 := by timed eqResolve lean_s1306 lean_s1313
have lean_s1315 : (Or let757 let819) := by timed flipNotAnd lean_s1314 [let46, let22, let20, let16, let10, let2]
have lean_s1316 : (Or let379 (Or let757 let815)) := by permutateOr lean_s1315, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1317 := by R1 lean_s1304, lean_s1316, let20, [(- 1), (- 1)]
have lean_s1318 : (Or let757 (Or let761 (Or let763 (Or let756 let814)))) := by R2 lean_s1317, lean_s1258, let10, [(- 1), 0]
have lean_s1319 : let814 := by factor lean_s1318, (- 1)
let lean_s1320 := by R2 lean_s1319, lean_s1247, let2, [(- 1), (- 1)]
have lean_s1321 : let52 := by andElim lean_s1194, 1
let lean_s1322 := by R1 lean_s1320, lean_s1321, let51, [(- 1), 0]
have lean_s1323 : let476 := by andElim lean_s1194, 2
let lean_s1324 := by R2 lean_s1322, lean_s1323, let476, [(- 1), 0]
have lean_s1325 : (Or let757 (Or let761 (Or let379 (Or let58 let769)))) :=
  (scope (fun lean_a265 : let46 =>
    (scope (fun lean_a266 : let22 =>
      (scope (fun lean_a267 : let10 =>
        (scope (fun lean_a268 : let57 =>
          have lean_s1325 : let799 := by timed Eq.symm lean_r13
          have lean_s1326 : let66 := by timed eqResolve lean_a268 lean_s1325
          have lean_s1327 : let800 := by timed And.intro lean_s1326 lean_a266
          have lean_s1328 : let803 :=
            (scope (fun lean_a265 : let66 =>
              (scope (fun lean_a266 : let22 =>
                have lean_s1328 : let805 := by timed Eq.symm lean_a266
                have lean_s1329 : let797 := by timed Eq.symm lean_a265
                have lean_s1330 : let66 := by timed Eq.symm lean_s1329
                have lean_s1331 : let804 := by timed flipCongrArg lean_s1330 [xx5fcount]
                have lean_s1332 : let768 := by timed Eq.trans lean_s1328 lean_s1331
                show let768 from lean_s1332
            ))))
          have lean_s1329 : let801 := by liftOrNToImp lean_s1328, 2
          have lean_s1330 : let768 := by timed modusPonens lean_s1327 lean_s1329
          have lean_s1331 : let791 := by timed And.intro lean_s1326 lean_a265
          have lean_s1332 : let795 :=
            (scope (fun lean_a265 : let66 =>
              (scope (fun lean_a266 : let46 =>
                have lean_s1332 : let798 := by timed Eq.symm lean_a266
                have lean_s1333 : let797 := by timed Eq.symm lean_a265
                have lean_s1334 : let66 := by timed Eq.symm lean_s1333
                have lean_s1335 : let796 := by timed flipCongrArg lean_s1334 [sx5fcount]
                have lean_s1336 : let767 := by timed Eq.trans lean_s1332 lean_s1335
                show let767 from lean_s1336
            ))))
          have lean_s1333 : let792 := by liftOrNToImp lean_s1332, 2
          have lean_s1334 : let767 := by timed modusPonens lean_s1331 lean_s1333
          let lean_s1335 := by timed And.intro lean_s1330 lean_s1334
          have lean_s1336 : let769 := by timed And.intro lean_a267 lean_s1335
          show let769 from lean_s1336
  ))))))))
have lean_s1326 : let770 := by liftOrNToImp lean_s1325, 4
have lean_s1327 : (Eq let606 let606) := by timed rfl
let lean_s1328 := by timed flipCongrArg lean_s1327 [Implies]
have lean_s1329 : let771 := by timed falseIntro lean_s1310
have lean_s1330 : (Eq let770 let608) := by timed congr lean_s1328 lean_s1329
have lean_s1331 : (Eq let770 let607) := by timed Eq.trans lean_s1330 lean_r229
have lean_s1332 : let607 := by timed eqResolve lean_s1326 lean_s1331
have lean_s1333 : (Or let757 let766) := by timed flipNotAnd lean_s1332 [let46, let22, let10, let57]
have lean_s1334 : (Or let379 (Or let757 let764)) := by permutateOr lean_s1333, [2, 0, 1, 3], (- 1)
let lean_s1335 := by R1 lean_s1324, lean_s1334, let57, [(- 1), (- 1)]
have lean_s1336 : (Or let757 (Or let761 (Or let763 let762))) := by R2 lean_s1335, lean_s1258, let10, [(- 1), 0]
have lean_s1337 : (Or let757 (Or let761 let763)) := by factor lean_s1336, 4
let lean_s1338 := by R2 lean_s1337, lean_s1262, let16, [(- 1), (- 1)]
let lean_s1339 := by R2 lean_s1338, lean_s1207, let22, [(- 1), (- 1)]
have lean_s1340 : (Or let862 let441) := by timed @cnfAndPos [let384, let441] 1
have lean_s1341 : (Or let441 let862) := by permutateOr lean_s1340, [1, 0], (- 1)
let lean_s1342 := by R1 lean_s1339, lean_s1341, let442, [(- 1), (- 1)]
let lean_s1343 := by R1 lean_s1342, lean_s1204, let446, [(- 1), (- 1)]
have lean_s1344 : let876 :=
  (scope (fun lean_a265 : let441 =>
    have lean_s1344 : let876 :=
      (scope (fun lean_a266 : let441 =>
        have lean_s1344 : let485 := by timed Eq.symm lean_a266
        have lean_s1345 : let441 := by timed Eq.symm lean_s1344
        let lean_s1346 := by timed flipCongrArg lean_s1345 [Eq]
        have lean_s1347 : let386 := by timed rfl
        have lean_s1348 : (Eq let458 let259) := by timed congr lean_s1346 lean_s1347
        have lean_s1349 : (Eq let260 let598) := by timed flipCongrArg lean_r65 [Not]
        have lean_s1350 : (Eq let260 True) := by timed Eq.trans lean_s1349 lean_r221
        have lean_s1351 : (Eq let261 True) := by timed Eq.trans lean_r27 lean_s1350
        have lean_s1352 : let261 := by timed trueElim lean_s1351
        have lean_s1353 : (Eq let458 False) := by timed Eq.trans lean_s1348 lean_s1352
        have lean_s1354 : let875 := by timed falseElim lean_s1353
        show let875 from lean_s1354
      ))
    have lean_s1345 : let877 := by liftOrNToImp lean_s1344, 1
    have lean_s1346 : let875 := by timed modusPonens lean_a265 lean_s1345
    show let875 from lean_s1346
  ))
have lean_s1345 : let877 := by liftOrNToImp lean_s1344, 1
have lean_s1346 : let876 := by timed impliesElim lean_s1345
have lean_s1347 : (Or let875 let874) := by permutateOr lean_s1346, [1, 0], (- 1)
let lean_s1348 := by R1 lean_s1343, lean_s1347, let441, [(- 1), (- 1)]
have lean_s1349 : let866 :=
  (scope (fun lean_a266 : let444 =>
    have lean_s1349 : let866 :=
      (scope (fun lean_a267 : let444 =>
        have lean_s1349 : let565 := by timed Eq.symm lean_a267
        have lean_s1350 : let444 := by timed Eq.symm lean_s1349
        let lean_s1351 := by timed flipCongrArg lean_s1350 [Eq]
        have lean_s1352 : let574 := by timed rfl
        have lean_s1353 : (Eq let384 let36) := by timed congr lean_s1351 lean_s1352
        have lean_s1354 : (Eq let37 let598) := by timed flipCongrArg lean_r180 [Not]
        have lean_s1355 : (Eq let37 True) := by timed Eq.trans lean_s1354 lean_r221
        have lean_s1356 : (Eq let38 True) := by timed Eq.trans lean_r4 lean_s1355
        have lean_s1357 : let38 := by timed trueElim lean_s1356
        have lean_s1358 : let868 := by timed Eq.trans lean_s1353 lean_s1357
        have lean_s1359 : let865 := by timed falseElim lean_s1358
        show let865 from lean_s1359
      ))
    have lean_s1350 : let867 := by liftOrNToImp lean_s1349, 1
    have lean_s1351 : let865 := by timed modusPonens lean_a266 lean_s1350
    show let865 from lean_s1351
  ))
have lean_s1350 : let867 := by liftOrNToImp lean_s1349, 1
have lean_s1351 : let866 := by timed impliesElim lean_s1350
have lean_s1352 : (Or let865 let864) := by permutateOr lean_s1351, [1, 0], (- 1)
let lean_s1353 := by R1 lean_s1348, lean_s1352, let444, [(- 1), (- 1)]
have lean_s1354 : (Or let832 let458) := by timed @cnfAndPos [let384, let458] 1
have lean_s1355 : (Or let458 let832) := by permutateOr lean_s1354, [1, 0], (- 1)
let lean_s1356 := by R2 lean_s1353, lean_s1355, let458, [(- 1), (- 1)]
have lean_s1357 : (Or let757 (Or let832 let832)) := by R2 lean_s1356, lean_s1273, let384, [(- 1), (- 1)]
have lean_s1358 : (Or let757 let832) := by factor lean_s1357, (- 1)
let lean_s1359 := by R2 lean_s1358, lean_s1266, let459, [(- 1), (- 1)]
have lean_s1360 : (Or let757 (Or let869 (Or let759 (Or let763 let858)))) :=
  (scope (fun lean_a267 : let46 =>
    (scope (fun lean_a268 : let157 =>
      (scope (fun lean_a269 : let20 =>
        (scope (fun lean_a270 : let16 =>
          (scope (fun lean_a271 : let10 =>
            (scope (fun lean_a272 : let2 =>
              have lean_s1360 : let827 := by timed Eq.symm lean_r124
              have lean_s1361 : let486 := by timed eqResolve lean_a272 lean_s1360
              let lean_s1362 := by timed And.intro lean_a270 lean_a268
              have lean_s1363 : let871 := by timed And.intro lean_s1361 lean_s1362
              have lean_s1364 : (Or let823 (Or let763 let872)) :=
                (scope (fun lean_a267 : let486 =>
                  (scope (fun lean_a268 : let16 =>
                    (scope (fun lean_a269 : let157 =>
                      have lean_s1364 : let873 := by timed Eq.symm lean_a269
                      have lean_s1365 : let149 := by timed Eq.symm lean_a268
                      have lean_s1366 : let16 := by timed Eq.symm lean_s1365
                      let lean_s1367 := by timed Eq.trans lean_s1364 lean_s1366
                      have lean_s1368 : let826 := by timed Eq.symm lean_a267
                      have lean_s1369 : let486 := by timed Eq.symm lean_s1368
                      have lean_s1370 : let831 := by timed flipCongrArg lean_s1369 [xx5fcount]
                      have lean_s1371 : let849 := by timed Eq.trans lean_s1367 lean_s1370
                      show let849 from lean_s1371
                ))))))
              have lean_s1365 : (Implies let871 let849) := by liftOrNToImp lean_s1364, 3
              have lean_s1366 : let849 := by timed modusPonens lean_s1363 lean_s1365
              let lean_s1367 := by timed And.intro lean_a269 lean_a267
              have lean_s1368 : let821 := by timed And.intro lean_s1361 lean_s1367
              have lean_s1369 : let824 :=
                (scope (fun lean_a267 : let486 =>
                  (scope (fun lean_a268 : let20 =>
                    (scope (fun lean_a269 : let46 =>
                      have lean_s1369 : let798 := by timed Eq.symm lean_a269
                      have lean_s1370 : let184 := by timed Eq.symm lean_a268
                      have lean_s1371 : let20 := by timed Eq.symm lean_s1370
                      let lean_s1372 := by timed Eq.trans lean_s1369 lean_s1371
                      have lean_s1373 : let826 := by timed Eq.symm lean_a267
                      have lean_s1374 : let486 := by timed Eq.symm lean_s1373
                      have lean_s1375 : let825 := by timed flipCongrArg lean_s1374 [sx5fcount]
                      have lean_s1376 : let767 := by timed Eq.trans lean_s1372 lean_s1375
                      show let767 from lean_s1376
                ))))))
              have lean_s1370 : let822 := by liftOrNToImp lean_s1369, 3
              have lean_s1371 : let767 := by timed modusPonens lean_s1368 lean_s1370
              let lean_s1372 := by timed And.intro lean_s1366 lean_s1371
              have lean_s1373 : let850 := by timed And.intro lean_a271 lean_s1372
              show let850 from lean_s1373
  ))))))))))))
have lean_s1361 : let870 := by liftOrNToImp lean_s1360, 6
have lean_s1362 : (Eq let495 let495) := by timed rfl
let lean_s1363 := by timed flipCongrArg lean_s1362 [Implies]
have lean_s1364 : let852 := by timed falseIntro lean_s5
have lean_s1365 : (Eq let870 let497) := by timed congr lean_s1363 lean_s1364
have lean_s1366 : (Eq let870 let496) := by timed Eq.trans lean_s1365 lean_r131
have lean_s1367 : let496 := by timed eqResolve lean_s1361 lean_s1366
have lean_s1368 : (Or let757 (Or let869 let818)) := by timed flipNotAnd lean_s1367 [let46, let157, let20, let16, let10, let2]
have lean_s1369 : (Or let379 (Or let757 (Or let759 (Or let869 let812)))) := by permutateOr lean_s1368, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1370 := by R2 lean_s1369, lean_s1258, let10, [(- 1), 0]
let lean_s1371 := by R2 lean_s1370, lean_s1262, let16, [(- 1), (- 1)]
let lean_s1372 := by R1 lean_s1371, lean_s1270, let442, [(- 1), (- 1)]
let lean_s1373 := by R1 lean_s1372, lean_s1352, let384, [(- 1), (- 1)]
have lean_s1374 : (Or let863 let157) := by timed iteElim1 lean_s1205
have lean_s1375 : (Or let157 let863) := by permutateOr lean_s1374, [1, 0], (- 1)
let lean_s1376 := by R2 lean_s1373, lean_s1375, let157, [(- 1), (- 1)]
have lean_s1377 : (Or let757 (Or let759 (Or let756 (Or let863 let863)))) := by R2 lean_s1376, lean_s1204, let444, [(- 1), (- 1)]
have lean_s1378 : (Or let757 (Or let759 (Or let756 let863))) := by factor lean_s1377, (- 1)
let lean_s1379 := by R2 lean_s1378, lean_s1207, let446, [(- 1), (- 1)]
have lean_s1380 : (Or let862 let309) := by timed iteElim1 lean_s1260
have lean_s1381 : (Or let309 let862) := by permutateOr lean_s1380, [1, 0], (- 1)
let lean_s1382 := by R2 lean_s1381, lean_s1262, let442, [(- 1), (- 1)]
have lean_s1383 : (Or let757 (Or let761 (Or let759 (Or let848 let858)))) :=
  (scope (fun lean_a267 : let46 =>
    (scope (fun lean_a268 : let22 =>
      (scope (fun lean_a269 : let20 =>
        (scope (fun lean_a270 : let309 =>
          (scope (fun lean_a271 : let10 =>
            (scope (fun lean_a272 : let2 =>
              have lean_s1383 : let827 := by timed Eq.symm lean_r124
              have lean_s1384 : let486 := by timed eqResolve lean_a272 lean_s1383
              have lean_s1385 : let861 := by timed And.intro lean_a270 lean_a268
              have lean_s1386 : (Or let848 (Or let761 let357)) :=
                (scope (fun lean_a268 : let309 =>
                  (scope (fun lean_a269 : let22 =>
                    have lean_s1386 : let805 := by timed Eq.symm lean_a269
                    have lean_s1387 : (Eq let308 let15) := by timed Eq.symm lean_a268
                    have lean_s1388 : let309 := by timed Eq.symm lean_s1387
                    have lean_s1389 : let357 := by timed Eq.trans lean_s1386 lean_s1388
                    show let357 from lean_s1389
                ))))
              have lean_s1387 : (Implies let861 let357) := by liftOrNToImp lean_s1386, 2
              have lean_s1388 : let357 := by timed modusPonens lean_s1385 lean_s1387
              have lean_s1389 : (Or (Not let357) let859) :=
                (scope (fun lean_a268 : let357 =>
                  have lean_s1389 : let356 := by timed eqResolve lean_a268 lean_r87
                  have lean_s1390 : let859 := by timed Eq.symm lean_s1389
                  show let859 from lean_s1390
                ))
              have lean_s1390 : (Implies let357 let859) := by liftOrNToImp lean_s1389, 1
              have lean_s1391 : let859 := by timed modusPonens lean_s1388 lean_s1390
              have lean_s1392 : let860 := by timed And.intro lean_s1384 lean_s1391
              have lean_s1393 : (Or let823 (Or (Not let859) let849)) :=
                (scope (fun lean_a269 : let486 =>
                  (scope (fun lean_a270 : let859 =>
                    have lean_s1393 : let356 := by timed Eq.symm lean_a270
                    have lean_s1394 : let859 := by timed Eq.symm lean_s1393
                    have lean_s1395 : let826 := by timed Eq.symm lean_a269
                    have lean_s1396 : let486 := by timed Eq.symm lean_s1395
                    have lean_s1397 : let831 := by timed flipCongrArg lean_s1396 [xx5fcount]
                    have lean_s1398 : let849 := by timed Eq.trans lean_s1394 lean_s1397
                    show let849 from lean_s1398
                ))))
              have lean_s1394 : (Implies let860 let849) := by liftOrNToImp lean_s1393, 2
              have lean_s1395 : let849 := by timed modusPonens lean_s1392 lean_s1394
              let lean_s1396 := by timed And.intro lean_a269 lean_a267
              have lean_s1397 : let821 := by timed And.intro lean_s1384 lean_s1396
              have lean_s1398 : let824 :=
                (scope (fun lean_a270 : let486 =>
                  (scope (fun lean_a271 : let20 =>
                    (scope (fun lean_a272 : let46 =>
                      have lean_s1398 : let798 := by timed Eq.symm lean_a272
                      have lean_s1399 : let184 := by timed Eq.symm lean_a271
                      have lean_s1400 : let20 := by timed Eq.symm lean_s1399
                      let lean_s1401 := by timed Eq.trans lean_s1398 lean_s1400
                      have lean_s1402 : let826 := by timed Eq.symm lean_a270
                      have lean_s1403 : let486 := by timed Eq.symm lean_s1402
                      have lean_s1404 : let825 := by timed flipCongrArg lean_s1403 [sx5fcount]
                      have lean_s1405 : let767 := by timed Eq.trans lean_s1401 lean_s1404
                      show let767 from lean_s1405
                ))))))
              have lean_s1399 : let822 := by liftOrNToImp lean_s1398, 3
              have lean_s1400 : let767 := by timed modusPonens lean_s1397 lean_s1399
              let lean_s1401 := by timed And.intro lean_s1395 lean_s1400
              have lean_s1402 : let850 := by timed And.intro lean_a271 lean_s1401
              show let850 from lean_s1402
  ))))))))))))
have lean_s1384 : let851 := by liftOrNToImp lean_s1383, 6
have lean_s1385 : (Eq let310 let310) := by timed rfl
let lean_s1386 := by timed flipCongrArg lean_s1385 [Implies]
have lean_s1387 : let852 := by timed falseIntro lean_s5
have lean_s1388 : (Eq let851 let312) := by timed congr lean_s1386 lean_s1387
have lean_s1389 : (Eq let851 let311) := by timed Eq.trans lean_s1388 lean_r50
have lean_s1390 : let311 := by timed eqResolve lean_s1384 lean_s1389
have lean_s1391 : (Or let757 (Or let761 (Or let759 (Or let848 let816)))) := by timed flipNotAnd lean_s1390 [let46, let22, let20, let309, let10, let2]
have lean_s1392 : (Or let379 (Or let757 (Or let759 (Or let761 (Or let848 let756))))) := by permutateOr lean_s1391, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1393 := by R1 lean_s1382, lean_s1392, let309, [(- 1), (- 1)]
let lean_s1394 := by R2 lean_s1393, lean_s1258, let10, [(- 1), 0]
have lean_s1395 : (Or let757 (Or let759 (Or let761 (Or let756 let762)))) := by R1 lean_s1394, lean_s1337, let16, [(- 1), (- 1)]
have lean_s1396 : (Or let757 (Or let759 (Or let761 let756))) := by factor lean_s1395, 5
have lean_s1397 : (Or let757 (Or let759 (Or let756 let760))) := by R1 lean_s1379, lean_s1396, let22, [(- 1), (- 1)]
have lean_s1398 : let760 := by factor lean_s1397, (- 1)
have lean_s1399 : (Or let757 let758) := by R1 lean_s1359, lean_s1398, let20, [(- 1), (- 1)]
have lean_s1400 : let758 := by factor lean_s1399, (- 1)
have lean_s1401 : (Or let756 let756) := by R1 lean_s1289, lean_s1400, let46, [(- 1), (- 1)]
have lean_s1402 : let756 := by factor lean_s1401, 1
let lean_s1403 := by R1 lean_s1247, lean_s1402, let2, [(- 1), 0]
let lean_s1404 := by R2 lean_s1403, lean_s1323, let476, [(- 1), 0]
have lean_s1405 : let57 := by R1 lean_s1404, lean_s1321, let51, [(- 1), 0]
let lean_s1406 := by R2 lean_s1219, lean_s1405, let57, [(- 1), 0]
let lean_s1407 := by R2 lean_s1406, lean_s1258, let10, [(- 1), 0]
let lean_s1408 := by R2 lean_s1407, lean_s1284, let24, [(- 1), (- 1)]
let lean_s1409 := by R2 lean_s1408, lean_s1197, let461, [(- 1), (- 1)]
let lean_s1410 := by R1 lean_s1409, lean_s1334, let46, [(- 1), (- 1)]
let lean_s1411 := by R2 lean_s1410, lean_s1405, let57, [(- 1), 0]
have lean_s1412 : (Or let761 let761) := by R2 lean_s1411, lean_s1258, let10, [(- 1), 0]
have lean_s1413 : let761 := by factor lean_s1412, 1
have lean_s1414 : let446 := by R1 lean_s1207, lean_s1413, let22, [(- 1), 0]
have lean_s1415 : let444 := by R2 lean_s1204, lean_s1414, let446, [(- 1), 0]
have lean_s1416 : let879 := by R2 lean_s1202, lean_s1415, let444, [(- 1), 0]
have lean_s1417 : let878 := by R1 lean_s1199, lean_s1416, let375, [(- 1), 0]
have lean_s1418 : let46 := by R1 lean_s1197, lean_s1417, let461, [(- 1), 0]
let lean_s1419 := by R2 lean_s11, lean_s1418, let46, [(- 1), 0]
have lean_s1420 : let157 := by R2 lean_s1375, lean_s1414, let446, [(- 1), 0]
let lean_s1421 := by R2 lean_s1419, lean_s1420, let157, [(- 1), 0]
let lean_s1422 := by R2 lean_s1421, lean_s1405, let57, [(- 1), 0]
exact (show False from by R2 lean_s1422, lean_s1258, let10, [0, 0])


