open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {fmtx5flength : Int}
variable {arg0 : Int}
variable {xx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {fmt0 : Int}
variable {percent : Int}
variable {adrx5fmedlo : Int}
variable {s : Int}
variable {arg1 : Int}
variable {adrx5flo : Int}
variable {adrx5fhi : Int}
variable {percent : Int}
variable {adrx5fmedlo : Int}
variable {adrx5fmedhi : Int}
variable {selectx5fformat : (Int -> Int)}
variable {x : Int}
variable {arg1 : Int}
variable {adrx5fhi : Int}
variable {fmt1 : Int}
variable {adrx5flo : Int}
variable {s : Int}
variable {arg0 : Int}
variable {distance : Int}
variable {selectx5fformat : (Int -> Int)}
variable {adrx5fmedhi : Int}
variable {fmtx5flength : Int}
variable {fmt1 : Int}
variable {fmt0 : Int}
variable {distance : Int}
variable {xx5fcount : (Int -> Int)}
variable {x : Int}

theorem th0 :
  let let1 := (Int.ofNat 2)
  let let2 := (Eq fmt1 let1)
  let let3 := (Int.ofNat 4)
  let let4 := (Neg.neg let1)
  let let5 := (binrel% HAdd.hAdd let4 fmt1)
  let let6 := (xx5fcount let5)
  let let7 := (sx5fcount let5)
  let let8 := (binrel% HAdd.hAdd let7 let6)
  let let9 := (binrel% GE.ge let8 let3)
  let let10 := (And let9 let2)
  let let11 := (Int.ofNat 1)
  let let12 := (Int.ofNat 0)
  let let13 := (xx5fcount let12)
  let let14 := (Eq let13 let11)
  let let15 := (sx5fcount let12)
  let let16 := (Eq let15 let12)
  let let17 := (And let16 (And let14 let10))
  let let18 := (Not let17)
  let let19 := (Implies let17 False)
  let let20 := (Eq let13 let12)
  let let21 := (And let20 let10)
  let let22 := (Eq let15 let11)
  let let23 := (And let22 let21)
  let let24 := (Not let23)
  let let25 := (Implies let23 False)
  let let26 := (Int.ofNat 3)
  let let27 := (Eq fmt1 let26)
  let let28 := (And let9 let27)
  let let29 := (xx5fcount let11)
  let let30 := (Eq let13 let29)
  let let31 := (And let30 let28)
  let let32 := (sx5fcount let11)
  let let33 := (Eq let15 let32)
  let let34 := (And let33 let31)
  let let35 := (And let20 let34)
  let let36 := (And let22 let35)
  let let37 := (Not let36)
  let let38 := (Implies let36 False)
  let let39 := (Int.ofNat 37)
  let let40 := (Int.ofNat 115)
  let let41 := (Eq let40 let39)
  let let42 := (Not let41)
  let let43 := (Eq let41 False)
  let let44 := (Int.ofNat 120)
  let let45 := (Eq let44 let40)
  let let46 := (Not let45)
  let let47 := (Eq let45 False)
  let let48 := (Eq let44 let39)
  let let49 := (Not let48)
  let let50 := (Eq let48 False)
  let let51 := (Neg.neg let11)
  let let52 := (binrel% HAdd.hAdd let51 let29)
  let let53 := (Eq let13 let52)
  let let54 := (And let16 (And let20 (And let33 (And let53 let28))))
  let let55 := (Not let54)
  let let56 := (Implies let54 False)
  let let57 := (Neg.neg (Rat.ofInt 3))
  let let58 := (Neg.neg (Rat.ofInt 4))
  let let59 := (Rat.ofInt 0)
  let let60 := (binrel% HAdd.hAdd let59 let58)
  let let61 := (Rat.ofInt 1)
  let let62 := (binrel% HAdd.hAdd let61 let60)
  let let63 := (binrel% GE.ge fmt1 let3)
  let let64 := (Not let63)
  let let65 := (binrel% LT.lt fmt1 let3)
  let let66 := (Not let64)
  let let67 := (Eq let63 let66)
  let let68 := (Eq let66 let63)
  let let69 := (Eq let63 let63)
  let let70 := (binrel% GT.gt let61 let12)
  let let71 := (Neg.neg let61)
  let let72 := (binrel% LT.lt let71 let12)
  let let73 := (Rat.ofInt let7)
  let let74 := (binrel% HMul.hMul let61 let7)
  let let75 := (Rat.ofInt let6)
  let let76 := (binrel% HMul.hMul let61 let6)
  let let77 := (binrel% HAdd.hAdd let51 let32)
  let let78 := (Eq let15 let77)
  let let79 := (And let16 (And let20 (And let78 let31)))
  let let80 := (Not let79)
  let let81 := (Implies let79 False)
  let let82 := (binrel% HMul.hMul let51 let6)
  let let83 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let51 let7) let82))
  let let84 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let75 let83))
  let let85 := (binrel% HMul.hMul let61 let12)
  let let86 := (binrel% LE.le let59 let58)
  let let87 := (And let16 let21)
  let let88 := (Not let87)
  let let89 := (Implies let87 False)
  let let90 := (Int.ofNat 16)
  let let91 := (Neg.neg let90)
  let let92 := (Eq arg0 let91)
  let let93 := (binrel% HAdd.hAdd let90 arg0)
  let let94 := (Eq let12 let93)
  let let95 := (binrel% HMul.hMul let51 arg1)
  let let96 := (binrel% HAdd.hAdd fmt0 let95)
  let let97 := (binrel% GE.ge let96 let11)
  let let98 := (Not let97)
  let let99 := (binrel% GE.ge arg1 fmt0)
  let let100 := (binrel% HMul.hMul let51 let11)
  let let101 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let102 := (binrel% HAdd.hAdd let101 let100)
  let let103 := (binrel% HSub.hSub let101 let11)
  let let104 := (binrel% HMul.hMul let71 let8)
  let let105 := (binrel% HAdd.hAdd let51 let101)
  let let106 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let51))
  let let107 := (binrel% HMul.hMul let51 fmtx5flength)
  let let108 := (binrel% HMul.hMul let51 fmt0)
  let let109 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let108 let107))
  let let110 := (binrel% GE.ge let109 let51)
  let let111 := (binrel% GE.ge fmt1 let105)
  let let112 := (binrel% HMul.hMul let71 let3)
  let let113 := (binrel% HAdd.hAdd fmt0 let11)
  let let114 := (binrel% LE.le fmt1 let113)
  let let115 := (Not let114)
  let let116 := (binrel% GT.gt fmt1 let113)
  let let117 := (binrel% HMul.hMul let51 let3)
  let let118 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let117)))
  let let119 := (binrel% HAdd.hAdd arg0 distance)
  let let120 := (binrel% HAdd.hAdd let119 fmtx5flength)
  let let121 := (binrel% HAdd.hAdd let120 let117)
  let let122 := (Neg.neg let3)
  let let123 := (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let124 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let122)))
  let let125 := (binrel% HMul.hMul let51 distance)
  let let126 := (binrel% HMul.hMul let51 arg0)
  let let127 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let107 let125)))
  let let128 := (binrel% GE.ge let127 let122)
  let let129 := (binrel% GE.ge arg1 let123)
  let let130 := (binrel% HMul.hMul let51 let1)
  let let131 := (selectx5fformat let12)
  let let132 := (Eq s let131)
  let let133 := (Eq let131 s)
  let let134 := (Eq x let131)
  let let135 := (Eq let131 x)
  let let136 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let61 let58))
  let let137 := (Eq adrx5flo let131)
  let let138 := (Eq let131 adrx5flo)
  let let139 := (Not let2)
  let let140 := (Not let139)
  let let141 := (Eq let2 let140)
  let let142 := (Eq let140 let2)
  let let143 := (Eq adrx5fmedlo let131)
  let let144 := (Eq let131 adrx5fmedlo)
  let let145 := (Eq let2 let2)
  let let146 := (Eq adrx5fhi let131)
  let let147 := (Eq let131 adrx5fhi)
  let let148 := (selectx5fformat let11)
  let let149 := (Eq adrx5fmedhi let148)
  let let150 := (Eq let148 adrx5fmedhi)
  let let151 := (Eq adrx5fhi let148)
  let let152 := (Eq let148 adrx5fhi)
  let let153 := (selectx5fformat let1)
  let let154 := (Eq adrx5flo let153)
  let let155 := (Eq let153 adrx5flo)
  let let156 := (Eq adrx5fmedlo let153)
  let let157 := (Eq let153 adrx5fmedlo)
  let let158 := (Eq adrx5fhi let153)
  let let159 := (Eq let153 adrx5fhi)
  let let160 := (selectx5fformat let26)
  let let161 := (Eq adrx5fmedlo let160)
  let let162 := (Eq let160 adrx5fmedlo)
  let let163 := (Eq let32 let11)
  let let164 := (Eq let12 let77)
  let let165 := (Eq let12 let5)
  let let166 := (selectx5fformat let3)
  let let167 := (Eq adrx5fmedlo let166)
  let let168 := (Eq let166 adrx5fmedlo)
  let let169 := (Eq adrx5fhi let166)
  let let170 := (Eq let166 adrx5fhi)
  let let171 := (Eq s let148)
  let let172 := (Eq let148 s)
  let let173 := (Eq s let153)
  let let174 := (Eq let153 s)
  let let175 := (binrel% HAdd.hAdd let11 let15)
  let let176 := (Eq let32 let175)
  let let177 := (binrel% HAdd.hAdd fmt0 let125)
  let let178 := (binrel% HSub.hSub fmt0 distance)
  let let179 := (Eq let32 let15)
  let let180 := (binrel% HMul.hMul let61 let11)
  let let181 := (Eq fmt0 let119)
  let let182 := (Eq arg0 let177)
  let let183 := (Eq s let160)
  let let184 := (Eq let160 s)
  let let185 := (binrel% GE.ge fmt1 let103)
  let let186 := (Not let185)
  let let187 := (binrel% LT.lt fmt1 let103)
  let let188 := (sx5fcount let1)
  let let189 := (Eq let32 (binrel% HAdd.hAdd let51 let188))
  let let190 := (binrel% HAdd.hAdd let11 let32)
  let let191 := (Eq let188 let190)
  let let192 := (Eq s let166)
  let let193 := (Eq let166 s)
  let let194 := (sx5fcount let26)
  let let195 := (Eq let188 (binrel% HAdd.hAdd let51 let194))
  let let196 := (binrel% HAdd.hAdd let11 let188)
  let let197 := (Eq let194 let196)
  let let198 := (Int.ofNat 5)
  let let199 := (selectx5fformat let198)
  let let200 := (Eq s let199)
  let let201 := (Eq let199 s)
  let let202 := (binrel% HAdd.hAdd let11 let194)
  let let203 := (binrel% HAdd.hAdd let194 let11)
  let let204 := (sx5fcount let3)
  let let205 := (Eq let194 (binrel% HAdd.hAdd let51 let204))
  let let206 := (Eq let204 let202)
  let let207 := (Eq percent let131)
  let let208 := (Eq let131 percent)
  let let209 := (Eq x let148)
  let let210 := (Eq let148 x)
  let let211 := (Eq let131 let3)
  let let212 := (Eq let3 let131)
  let let213 := (Eq let148 let198)
  let let214 := (Eq let198 let148)
  let let215 := (binrel% HAdd.hAdd let26 let12)
  let let216 := (binrel% HSub.hSub fmt1 let1)
  let let217 := (binrel% HAdd.hAdd let216 let108)
  let let218 := (binrel% HSub.hSub let216 fmt0)
  let let219 := (Eq let148 let3)
  let let220 := (Eq let3 let148)
  let let221 := (binrel% HAdd.hAdd let26 arg1)
  let let222 := (selectx5fformat let221)
  let let223 := (Eq adrx5fhi let222)
  let let224 := (Eq let222 adrx5fhi)
  let let225 := (binrel% HAdd.hAdd fmt1 let130)
  let let226 := (Eq let148 let26)
  let let227 := (Eq let26 let148)
  let let228 := (binrel% HAdd.hAdd let32 let11)
  let let229 := (binrel% HMul.hMul let3 let6)
  let let230 := (binrel% HMul.hMul let3 let7)
  let let231 := (binrel% HAdd.hAdd let230 let229)
  let let232 := (binrel% HAdd.hAdd let91 let231)
  let let233 := (binrel% GE.ge let232 let12)
  let let234 := (Eq let153 let11)
  let let235 := (Eq let11 let153)
  let let236 := (Eq let160 let3)
  let let237 := (Eq let3 let160)
  let let238 := (Eq let39 let39)
  let let239 := (Eq let166 let3)
  let let240 := (Eq let3 let166)
  let let241 := (Eq let166 let198)
  let let242 := (Eq let198 let166)
  let let243 := (Eq let26 let26)
  let let244 := (Eq let153 let3)
  let let245 := (Eq let3 let153)
  let let246 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let100))
  let let247 := (Eq let32 let188)
  let let248 := (Eq let188 let32)
  let let249 := (binrel% HMul.hMul let51 let91)
  let let250 := (Eq let199 let40)
  let let251 := (Eq let40 let199)
  let let252 := (Eq let148 let40)
  let let253 := (Eq let40 let148)
  let let254 := (Eq let160 let198)
  let let255 := (Eq let198 let160)
  let let256 := (Eq adrx5fmedlo let148)
  let let257 := (Eq let148 adrx5fmedlo)
  let let258 := (Eq let148 let44)
  let let259 := (Eq let44 let148)
  let let260 := (binrel% HAdd.hAdd let51 let232)
  let let261 := (binrel% HAdd.hAdd let3 let12)
  let let262 := (selectx5fformat let232)
  let let263 := (Eq let262 let11)
  let let264 := (Eq let11 let262)
  let let265 := (binrel% HAdd.hAdd let59 let60)
  let let266 := (binrel% HAdd.hAdd fmt1 let108)
  let let267 := (binrel% GE.ge let266 let1)
  let let268 := (Not let267)
  let let269 := (binrel% HAdd.hAdd let11 fmt0)
  let let270 := (binrel% LE.le fmt1 let269)
  let let271 := (binrel% GE.ge let8 let198)
  let let272 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let231)
  let let273 := (binrel% GE.ge let272 let122)
  let let274 := (binrel% HAdd.hAdd let11 fmt1)
  let let275 := (selectx5fformat let274)
  let let276 := (Eq let275 let40)
  let let277 := (Eq let40 let275)
  let let278 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let231)
  let let279 := (selectx5fformat let278)
  let let280 := (Eq let279 let26)
  let let281 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let231)
  let let282 := (selectx5fformat let281)
  let let283 := (Eq let282 let3)
  let let284 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 15)) let231)
  let let285 := (selectx5fformat let284)
  let let286 := (Eq let285 let198)
  let let287 := (selectx5fformat fmt1)
  let let288 := (Eq let287 let39)
  let let289 := (And let288 (And let276 (And let263 (And let286 (And let283 let280)))))
  let let290 := (Not let289)
  let let291 := (Eq let7 (binrel% HAdd.hAdd let3 let82))
  let let292 := (Eq fmt1 let3)
  let let293 := (Eq fmt1 let11)
  let let294 := (Eq fmt1 let12)
  let let295 := (Or let294 (Or let293 (Or let2 (Or let27 let292))))
  let let296 := (xx5fcount let3)
  let let297 := (xx5fcount let26)
  let let298 := (Eq let297 let296)
  let let299 := (Eq let297 (binrel% HAdd.hAdd let51 let296))
  let let300 := (Eq let199 let44)
  let let301 := (Eq let166 let39)
  let let302 := (And let301 let300)
  let let303 := (smtIte let302 let299 let298 Prop)
  let let304 := (xx5fcount let1)
  let let305 := (Eq let304 let297)
  let let306 := (Eq let304 (binrel% HAdd.hAdd let51 let297))
  let let307 := (Eq let166 let44)
  let let308 := (Eq let160 let39)
  let let309 := (And let308 let307)
  let let310 := (smtIte let309 let306 let305 Prop)
  let let311 := (Eq let29 let304)
  let let312 := (Eq let29 (binrel% HAdd.hAdd let51 let304))
  let let313 := (Eq let160 let44)
  let let314 := (Eq let153 let39)
  let let315 := (And let314 let313)
  let let316 := (smtIte let315 let312 let311 Prop)
  let let317 := (Eq let153 let44)
  let let318 := (Eq let148 let39)
  let let319 := (And let318 let317)
  let let320 := (smtIte let319 let53 let30 Prop)
  let let321 := (Eq let131 let39)
  let let322 := (And let321 let258)
  let let323 := (smtIte let322 let14 let20 Prop)
  let let324 := (Eq let194 let204)
  let let325 := (And let301 let250)
  let let326 := (smtIte let325 let205 let324 Prop)
  let let327 := (Eq let188 let194)
  let let328 := (Eq let166 let40)
  let let329 := (And let308 let328)
  let let330 := (smtIte let329 let195 let327 Prop)
  let let331 := (Eq let160 let40)
  let let332 := (And let314 let331)
  let let333 := (smtIte let332 let189 let247 Prop)
  let let334 := (Eq let153 let40)
  let let335 := (And let318 let334)
  let let336 := (smtIte let335 let78 let33 Prop)
  let let337 := (And let321 let252)
  let let338 := (smtIte let337 let22 let16 Prop)
  let let339 := (Int.ofNat 255)
  let let340 := (Eq let166 let339)
  let let341 := (Eq let166 let26)
  let let342 := (Eq let166 let11)
  let let343 := (Eq let160 let339)
  let let344 := (Eq let160 let26)
  let let345 := (Eq let160 let11)
  let let346 := (Eq let153 let339)
  let let347 := (Eq let153 let26)
  let let348 := (Eq let153 let198)
  let let349 := (Eq let148 let339)
  let let350 := (Eq let148 let11)
  let let351 := (Eq let131 let339)
  let let352 := (Eq let131 let26)
  let let353 := (Eq let131 let198)
  let let354 := (Eq let131 let11)
  let let355 := (Eq let131 let44)
  let let356 := (Eq let131 let40)
  let let357 := (Or let321 (Or let356 (Or let355 (Or let354 (Or let353 (Or let211 (Or let352 (Or let351 (Or let318 (Or let252 (Or let258 (Or let350 (Or let213 (Or let219 (Or let226 (Or let349 (Or let314 (Or let334 (Or let317 (Or let234 (Or let348 (Or let244 (Or let347 (Or let346 (Or let308 (Or let331 (Or let313 (Or let345 (Or let254 (Or let236 (Or let344 (Or let343 (Or let301 (Or let328 (Or let307 (Or let342 (Or let241 (Or let239 (Or let341 let340)))))))))))))))))))))))))))))))))))))))
  let let358 := (And let357 (And let338 (And let336 (And let333 (And let330 (And let326 (And let323 (And let320 (And let316 (And let310 (And let303 (And let295 (And let291 let290)))))))))))))
  let let359 := (Not let271)
  let let360 := (binrel% GE.ge fmt1 let1)
  let let361 := (And let9 (And let64 (And let360 (And let359 let358))))
  let let362 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let9 (And let64 (And let360 (And let9 (And let359 (And True let358)))))))))))))))))
  let let363 := (Not let9)
  let let364 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd (binrel% HMul.hMul let122 let7) (binrel% HMul.hMul let122 let6)))
  let let365 := (binrel% GE.ge let364 let11)
  let let366 := (Eq fmt0 arg1)
  let let367 := (Eq arg1 fmt0)
  let let368 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let231)
  let let369 := (Eq let260 let368)
  let let370 := (Eq let44 let153)
  let let371 := (Eq let11 let5)
  let let372 := (Eq let198 let285)
  let let373 := (Eq let40 let40)
  let let374 := (Eq let26 let166)
  let let375 := (Eq let44 let44)
  let let376 := (And let16 (And let14 let34))
  let let377 := (Not let376)
  let let378 := (Implies let376 False)
  let let379 := (Not let268)
  let let380 := (binrel% HAdd.hAdd let11 let232)
  let let381 := (binrel% HAdd.hAdd let11 let13)
  let let382 := (Eq let29 let381)
  let let383 := (binrel% HSub.hSub let120 let3)
  let let384 := (binrel% GE.ge arg1 let383)
  let let385 := (Not let384)
  let let386 := (binrel% LT.lt arg1 let383)
  let let387 := (binrel% HAdd.hAdd let1 let232)
  let let388 := (Eq x let160)
  let let389 := (Eq let160 x)
  let let390 := (Eq let40 let131)
  let let391 := (Eq let26 let279)
  let let392 := (Eq let11 let131)
  let let393 := (binrel% HAdd.hAdd arg1 let26)
  let let394 := (selectx5fformat let393)
  let let395 := (Eq let394 adrx5fhi)
  let let396 := (binrel% HAdd.hAdd arg1 let1)
  let let397 := (selectx5fformat let396)
  let let398 := (Eq let397 adrx5fmedhi)
  let let399 := (binrel% HAdd.hAdd arg1 let11)
  let let400 := (selectx5fformat let399)
  let let401 := (Eq let400 adrx5fmedlo)
  let let402 := (selectx5fformat arg1)
  let let403 := (Eq let402 adrx5flo)
  let let404 := (binrel% HAdd.hAdd fmt1 let11)
  let let405 := (selectx5fformat let404)
  let let406 := (Eq let405 s)
  let let407 := (Eq let287 percent)
  let let408 := (And (And (And (And (And let407 let406) let403) let401) let398) let395)
  let let409 := (Not let408)
  let let410 := (Eq arg1 let113)
  let let411 := (binrel% HAdd.hAdd fmt0 let12)
  let let412 := (Eq arg1 let411)
  let let413 := (Or let412 let410)
  let let414 := (binrel% HAdd.hAdd fmt0 let3)
  let let415 := (Eq fmt1 let414)
  let let416 := (binrel% HAdd.hAdd fmt0 let26)
  let let417 := (Eq fmt1 let416)
  let let418 := (binrel% HAdd.hAdd fmt0 let1)
  let let419 := (Eq fmt1 let418)
  let let420 := (Eq fmt1 let113)
  let let421 := (Eq fmt1 let411)
  let let422 := (Or (Or (Or (Or let421 let420) let419) let417) let415)
  let let423 := (Eq let296 let297)
  let let424 := (binrel% HAdd.hAdd let297 let11)
  let let425 := (Eq let296 let424)
  let let426 := (Eq let199 x)
  let let427 := (Eq let166 percent)
  let let428 := (And let427 let426)
  let let429 := (smtIte let428 let425 let423 Prop)
  let let430 := (Eq let297 let304)
  let let431 := (binrel% HAdd.hAdd let304 let11)
  let let432 := (Eq let297 let431)
  let let433 := (Eq let166 x)
  let let434 := (Eq let160 percent)
  let let435 := (And let434 let433)
  let let436 := (smtIte let435 let432 let430 Prop)
  let let437 := (Eq let304 let29)
  let let438 := (binrel% HAdd.hAdd let29 let11)
  let let439 := (Eq let304 let438)
  let let440 := (Eq let153 percent)
  let let441 := (And let440 let389)
  let let442 := (smtIte let441 let439 let437 Prop)
  let let443 := (Eq let29 let13)
  let let444 := (binrel% HAdd.hAdd let13 let11)
  let let445 := (Eq let29 let444)
  let let446 := (Eq let153 x)
  let let447 := (Eq let148 percent)
  let let448 := (And let447 let446)
  let let449 := (smtIte let448 let445 let443 Prop)
  let let450 := (And let208 let210)
  let let451 := (smtIte let450 let14 let20 Prop)
  let let452 := (Eq let204 let194)
  let let453 := (Eq let204 let203)
  let let454 := (And let427 let201)
  let let455 := (smtIte let454 let453 let452 Prop)
  let let456 := (Eq let194 let188)
  let let457 := (binrel% HAdd.hAdd let188 let11)
  let let458 := (Eq let194 let457)
  let let459 := (And let434 let193)
  let let460 := (smtIte let459 let458 let456 Prop)
  let let461 := (Eq let188 let228)
  let let462 := (And let440 let184)
  let let463 := (smtIte let462 let461 let248 Prop)
  let let464 := (binrel% HAdd.hAdd let15 let11)
  let let465 := (Eq let32 let464)
  let let466 := (And let447 let174)
  let let467 := (smtIte let466 let465 let179 Prop)
  let let468 := (And let208 let172)
  let let469 := (smtIte let468 let22 let16 Prop)
  let let470 := (Eq let166 adrx5fmedhi)
  let let471 := (Eq let166 adrx5flo)
  let let472 := (Eq let160 adrx5fhi)
  let let473 := (Eq let160 adrx5fmedhi)
  let let474 := (Eq let160 adrx5flo)
  let let475 := (Eq let153 adrx5fmedhi)
  let let476 := (Eq let148 adrx5flo)
  let let477 := (Eq let131 adrx5fmedhi)
  let let478 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let208 let133) let135) let138) let144) let477) let147) let351) let447) let172) let210) let476) let257) let150) let152) let349) let440) let174) let446) let155) let157) let475) let159) let346) let434) let184) let389) let474) let162) let473) let472) let343) let427) let193) let433) let471) let168) let470) let170) let340)
  let let479 := (xx5fcount let218)
  let let480 := (binrel% HMul.hMul let3 let479)
  let let481 := (sx5fcount let218)
  let let482 := (binrel% HMul.hMul let3 let481)
  let let483 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let482) let480)
  let let484 := (Eq arg1 let483)
  let let485 := (binrel% GE.ge arg1 let119)
  let let486 := (Eq arg0 let178)
  let let487 := (Eq fmt0 let12)
  let let488 := (Eq x let44)
  let let489 := (Eq s let40)
  let let490 := (Eq percent let39)
  let let491 := (Eq adrx5fhi let26)
  let let492 := (Eq adrx5fmedhi let3)
  let let493 := (Eq adrx5fmedlo let198)
  let let494 := (Eq adrx5flo let11)
  let let495 := (Eq fmtx5flength let198)
  let let496 := (Eq distance let90)
  let let497 := (And let496 (And let495 (And let494 (And let493 (And let492 (And let491 (And let490 (And let489 (And let488 (And let487 (And let486 (And let99 (And let187 (And let116 (And let485 (And let386 (And let484 (And let478 (And let469 (And let467 (And let463 (And let460 (And let455 (And let451 (And let449 (And let442 (And let436 (And let429 (And let422 (And let413 let409))))))))))))))))))))))))))))))
  let let498 := (And (And (And (And (And (And (And (And (And (And (And (And (And let496 let495) let494) let493) let492) let491) let490) let489) let488) (And (And (And (And (And (And (And let487 let486) let99) let187) let116) let485) let386) let484)) let478) (And (And (And (And (And (And (And (And (And let469 let467) let463) let460) let455) let451) let449) let442) let436) let429)) (And let422 let413)) let409)
  let let499 := (binrel% HMul.hMul let51 let90)
  let let500 := (binrel% HAdd.hAdd let249 let499)
  let let501 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 let500)))
  let let502 := (binrel% HAdd.hAdd let232 let500)
  let let503 := (Eq let44 let131)
  let let504 := (binrel% HAdd.hAdd let11 arg1)
  let let505 := (selectx5fformat let504)
  let let506 := (Eq adrx5fmedlo let505)
  let let507 := (Eq let505 adrx5fmedlo)
  let let508 := (Eq percent let148)
  let let509 := (Eq let380 let284)
  let let510 := (Eq let39 let287)
  let let511 := (binrel% HAdd.hAdd let12 let364)
  let let512 := (Eq x let153)
  let let513 := (Eq let12 let232)
  let let514 := (Or let208 (Or let133 (Or let135 (Or let138 (Or let144 (Or let477 (Or let147 (Or let351 (Or let447 (Or let172 (Or let210 (Or let476 (Or let257 (Or let150 (Or let152 (Or let349 (Or let440 (Or let174 (Or let446 (Or let155 (Or let157 (Or let475 (Or let159 (Or let346 (Or let434 (Or let184 (Or let389 (Or let474 (Or let162 (Or let473 (Or let472 (Or let343 (Or let427 (Or let193 (Or let433 (Or let471 (Or let168 (Or let470 (Or let170 let340)))))))))))))))))))))))))))))))))))))))
  let let515 := (Eq let40 let160)
  let let516 := (binrel% HAdd.hAdd let3 fmt0)
  let let517 := (Eq let26 let131)
  let let518 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let90 let91))))
  let let519 := (Eq let40 let166)
  let let520 := (Eq let12 let368)
  let let521 := (Eq let26 let160)
  let let522 := (binrel% HAdd.hAdd let1 fmt0)
  let let523 := (Eq adrx5flo let148)
  let let524 := (Eq let39 let131)
  let let525 := (Or let291 False)
  let let526 := (binrel% HAdd.hAdd let1 let12)
  let let527 := (Eq percent let166)
  let let528 := (Eq let387 let281)
  let let529 := (Eq adrx5fmedhi let160)
  let let530 := (And let407 (And let406 (And let403 (And let401 (And let398 let395)))))
  let let531 := (Eq let39 let160)
  let let532 := (Eq adrx5fmedhi let166)
  let let533 := (Eq s let275)
  let let534 := (Eq let275 s)
  let let535 := (Eq let26 let153)
  let let536 := (Neg.neg let198)
  let let537 := (binrel% HMul.hMul let51 let198)
  let let538 := (binrel% HAdd.hAdd let11 let12)
  let let539 := (binrel% HAdd.hAdd let1 arg1)
  let let540 := (selectx5fformat let539)
  let let541 := (Eq adrx5fmedhi let540)
  let let542 := (Eq let540 adrx5fmedhi)
  let let543 := (Not False)
  let let544 := (binrel% HAdd.hAdd let26 let232)
  let let545 := (Eq let544 let278)
  let let546 := (Eq let44 let199)
  let let547 := (binrel% HAdd.hAdd arg0 let90)
  let let548 := (Eq let39 let166)
  let let549 := (Eq x let166)
  let let550 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let482 let480))
  let let551 := (Eq let11 let148)
  let let552 := (Eq adrx5fhi let160)
  let let553 := (Eq percent let287)
  let let554 := (Eq let44 let166)
  let let555 := (Eq let198 let131)
  let let556 := (Eq let44 let160)
  let let557 := (And let16 let35)
  let let558 := (Not let557)
  let let559 := (Implies let557 False)
  let let560 := (binrel% HAdd.hAdd let11 let29)
  let let561 := (Eq let39 let153)
  let let562 := (binrel% HAdd.hAdd fmt1 let12)
  let let563 := (binrel% HAdd.hAdd let4 let562)
  let let564 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let126 let125))
  let let565 := (binrel% GE.ge let564 let12)
  let let566 := (binrel% HMul.hMul let51 let12)
  let let567 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let536 let91)))))
  let let568 := (binrel% LE.le let59 let57)
  let let569 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let537 let499))
  let let570 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 let569)))
  let let571 := (binrel% HAdd.hAdd let232 let569)
  let let572 := (binrel% HAdd.hAdd let536 fmt1)
  let let573 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let12 let536))
  let let574 := (Eq adrx5fmedhi let153)
  let let575 := (Not let363)
  let let576 := (Eq adrx5flo let160)
  let let577 := (binrel% HAdd.hAdd let51 arg1)
  let let578 := (Eq fmt0 let577)
  let let579 := (Eq arg1 let269)
  let let580 := (binrel% HMul.hMul let51 let232)
  let let581 := (Eq adrx5fmedhi let131)
  let let582 := (Eq let12 let12)
  let let583 := (binrel% HAdd.hAdd let91 let90)
  let let584 := (Eq let40 let153)
  let let585 := (Eq let198 let198)
  let let586 := (Eq let11 let11)
  let let587 := (Eq let11 let166)
  let let588 := (Eq let3 let3)
  let let589 := (binrel% HAdd.hAdd let26 fmt0)
  let let590 := (binrel% HAdd.hAdd let11 let304)
  let let591 := (Eq let297 let590)
  let let592 := (Eq let40 let44)
  let let593 := (Eq let592 False)
  let let594 := (Not let592)
  let let595 := (Eq adrx5flo let402)
  let let596 := (Eq adrx5flo let166)
  let let597 := (binrel% GE.ge let572 let51)
  let let598 := (Eq let39 let148)
  let let599 := (Eq let90 let90)
  let let600 := (Or let421 (Or let420 (Or let419 (Or let417 let415))))
  let let601 := (binrel% HAdd.hAdd let4 let266)
  let let602 := (binrel% HAdd.hAdd let5 let108)
  let let603 := (Eq let11 let160)
  let let604 := (binrel% HAdd.hAdd let11 let297)
  let let605 := (Eq let296 let604)
  let let606 := (Eq let29 let11)
  let let607 := (Eq let12 let52)
  let let608 := (binrel% HAdd.hAdd fmt1 let4)
  let let609 := (Eq let198 let153)
  let let610 := (Eq x let199)
  let let611 := (Eq percent let160)
  let let612 := (Eq let232 let232)
  let let613 := (Eq let304 let560)
  let let614 := (Eq percent let153)
  let let615 := (Eq let3 let282)
  let let616 := (And let553 (And let533 (And let595 (And let506 (And let541 let223)))))
  let let617 := (Not let616)
  let let618 := (Or let366 let578)
  let let619 := (Eq fmt1 let516)
  let let620 := (Eq fmt1 let589)
  let let621 := (Eq fmt1 let522)
  let let622 := (Eq fmt1 let269)
  let let623 := (Eq fmt1 fmt0)
  let let624 := (Or let623 (Or let622 (Or let621 (Or let620 let619))))
  let let625 := (And let527 let610)
  let let626 := (smtIte let625 let299 let298 Prop)
  let let627 := (And let611 let549)
  let let628 := (smtIte let627 let306 let305 Prop)
  let let629 := (And let614 let388)
  let let630 := (smtIte let629 let312 let311 Prop)
  let let631 := (And let508 let512)
  let let632 := (smtIte let631 let53 let30 Prop)
  let let633 := (And let207 let209)
  let let634 := (smtIte let633 let14 let20 Prop)
  let let635 := (And let527 let200)
  let let636 := (smtIte let635 let205 let324 Prop)
  let let637 := (And let611 let192)
  let let638 := (smtIte let637 let195 let327 Prop)
  let let639 := (And let614 let183)
  let let640 := (smtIte let639 let189 let247 Prop)
  let let641 := (And let508 let173)
  let let642 := (smtIte let641 let78 let33 Prop)
  let let643 := (And let207 let171)
  let let644 := (smtIte let643 let22 let16 Prop)
  let let645 := (Or let207 (Or let132 (Or let134 (Or let137 (Or let143 (Or let581 (Or let146 (Or let351 (Or let508 (Or let171 (Or let209 (Or let523 (Or let256 (Or let149 (Or let151 (Or let349 (Or let614 (Or let173 (Or let512 (Or let154 (Or let156 (Or let574 (Or let158 (Or let346 (Or let611 (Or let183 (Or let388 (Or let576 (Or let161 (Or let529 (Or let552 (Or let343 (Or let527 (Or let192 (Or let549 (Or let596 (Or let167 (Or let532 (Or let169 let340)))))))))))))))))))))))))))))))))))))))
  let let646 := (xx5fcount let601)
  let let647 := (binrel% HMul.hMul let3 let646)
  let let648 := (sx5fcount let601)
  let let649 := (binrel% HMul.hMul let3 let648)
  let let650 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let649 let647))
  let let651 := (Eq arg1 let650)
  let let652 := (Not let128)
  let let653 := (Not let110)
  let let654 := (And let496 (And let495 (And let494 (And let493 (And let492 (And let491 (And let490 (And let489 (And let488 (And let487 (And let181 (And let98 (And let653 (And let267 (And let565 (And let652 (And let651 (And let645 (And let644 (And let642 (And let640 (And let638 (And let636 (And let634 (And let632 (And let630 (And let628 (And let626 (And let624 (And let618 let617))))))))))))))))))))))))))))))
  let let655 := (selectx5fformat let544)
  let let656 := (Eq let26 let655)
  let let657 := (selectx5fformat let387)
  let let658 := (Eq let3 let657)
  let let659 := (selectx5fformat let380)
  let let660 := (Eq let198 let659)
  let let661 := (And let510 (And let277 (And let264 (And let660 (And let658 let656)))))
  let let662 := (Not let661)
  let let663 := (Eq let12 let260)
  let let664 := (Or let513 let663)
  let let665 := (Eq fmt1 let261)
  let let666 := (Eq fmt1 let215)
  let let667 := (Eq fmt1 let526)
  let let668 := (Eq fmt1 let538)
  let let669 := (Or let294 (Or let668 (Or let667 (Or let666 let665))))
  let let670 := (And let548 let546)
  let let671 := (smtIte let670 let299 let298 Prop)
  let let672 := (And let531 let554)
  let let673 := (smtIte let672 let306 let305 Prop)
  let let674 := (And let561 let556)
  let let675 := (smtIte let674 let312 let311 Prop)
  let let676 := (And let598 let370)
  let let677 := (smtIte let676 let53 let30 Prop)
  let let678 := (And let524 let259)
  let let679 := (smtIte let678 let14 let20 Prop)
  let let680 := (And let548 let251)
  let let681 := (smtIte let680 let205 let324 Prop)
  let let682 := (And let531 let519)
  let let683 := (smtIte let682 let195 let327 Prop)
  let let684 := (And let561 let515)
  let let685 := (smtIte let684 let189 let247 Prop)
  let let686 := (And let598 let584)
  let let687 := (smtIte let686 let78 let33 Prop)
  let let688 := (And let524 let253)
  let let689 := (smtIte let688 let22 let16 Prop)
  let let690 := (Or let524 (Or let390 (Or let503 (Or let392 (Or let555 (Or let212 (Or let517 (Or let351 (Or let598 (Or let253 (Or let259 (Or let551 (Or let214 (Or let220 (Or let227 (Or let349 (Or let561 (Or let584 (Or let370 (Or let235 (Or let609 (Or let245 (Or let535 (Or let346 (Or let531 (Or let515 (Or let556 (Or let603 (Or let255 (Or let237 (Or let521 (Or let343 (Or let548 (Or let519 (Or let554 (Or let587 (Or let242 (Or let240 (Or let374 let340)))))))))))))))))))))))))))))))))))))))
  let let691 := (binrel% HAdd.hAdd fmt1 let566)
  let let692 := (binrel% HAdd.hAdd let4 let691)
  let let693 := (xx5fcount let692)
  let let694 := (binrel% HMul.hMul let3 let693)
  let let695 := (sx5fcount let692)
  let let696 := (binrel% HMul.hMul let3 let695)
  let let697 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let696 let694))
  let let698 := (Eq let232 let697)
  let let699 := (binrel% GE.ge let571 let122)
  let let700 := (Not let699)
  let let701 := (binrel% GE.ge let502 let12)
  let let702 := (binrel% GE.ge let691 let1)
  let let703 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let566 let537))
  let let704 := (binrel% GE.ge let703 let51)
  let let705 := (Not let704)
  let let706 := (binrel% HAdd.hAdd let12 let580)
  let let707 := (binrel% GE.ge let706 let11)
  let let708 := (Not let707)
  let let709 := (Eq let12 let583)
  let let710 := (And let599 (And let585 (And let586 (And let585 (And let588 (And let243 (And let238 (And let373 (And let375 (And let582 (And let709 (And let708 (And let705 (And let702 (And let701 (And let700 (And let698 (And let690 (And let689 (And let687 (And let685 (And let683 (And let681 (And let679 (And let677 (And let675 (And let673 (And let671 (And let669 (And let664 let662))))))))))))))))))))))))))))))
  let let711 := (Eq And And)
  let let712 := (Eq fmt1 fmt1)
  let let713 := (Eq Or Or)
  let let714 := (Eq let298 let298)
  let let715 := (Eq let299 let299)
  let let716 := (Eq let305 let305)
  let let717 := (Eq let306 let306)
  let let718 := (Eq let311 let311)
  let let719 := (Eq let312 let312)
  let let720 := (Eq let30 let30)
  let let721 := (Eq let53 let53)
  let let722 := (Eq let20 let20)
  let let723 := (Eq let14 let14)
  let let724 := (Eq let324 let324)
  let let725 := (Eq let205 let205)
  let let726 := (Eq let327 let327)
  let let727 := (Eq let195 let195)
  let let728 := (Eq let247 let247)
  let let729 := (Eq let189 let189)
  let let730 := (Eq let33 let33)
  let let731 := (Eq let78 let78)
  let let732 := (Eq let16 let16)
  let let733 := (Eq let22 let22)
  let let734 := (Eq let340 let340)
  let let735 := (Eq let343 let343)
  let let736 := (Eq let346 let346)
  let let737 := (Eq let349 let349)
  let let738 := (Eq let351 let351)
  let let739 := (Eq let4 let4)
  let let740 := (Eq let122 let122)
  let let741 := (Eq let1 let1)
  let let742 := (Eq let51 let51)
  let let743 := (Eq arg1 let232)
  let let744 := (And let487 (And let488 (And let489 (And let490 (And let491 (And let492 (And let493 (And let494 (And let495 let496)))))))))
  let let745 := (And let92 let744)
  let let746 := (Eq arg1 arg1)
  let let747 := (Eq arg0 arg0)
  let let748 := (Eq let12 let547)
  let let749 := (Eq arg1 let697)
  let let750 := (Eq let650 let697)
  let let751 := (Eq let647 let694)
  let let752 := (Eq let646 let693)
  let let753 := (Eq let601 let692)
  let let754 := (Eq let108 let566)
  let let755 := (Eq let649 let696)
  let let756 := (Eq let648 let695)
  let let757 := (Not let27)
  let let758 := (Not let16)
  let let759 := (Or let758 let757)
  let let760 := (Not let33)
  let let761 := (Or let758 (Or let760 let757))
  let let762 := (Not let20)
  let let763 := (Or let758 let762)
  let let764 := (Not let30)
  let let765 := (Or let762 let139)
  let let766 := (Or let363 let139)
  let let767 := (Or let762 let766)
  let let768 := (Eq let12 let7)
  let let769 := (Eq let12 let6)
  let let770 := (And let9 (And let769 let768))
  let let771 := (Implies let87 let770)
  let let772 := (Eq let770 False)
  let let773 := (Or (Not let768) False)
  let let774 := (Not let769)
  let let775 := (Eq let7 let12)
  let let776 := (Not let775)
  let let777 := (Or let776 False)
  let let778 := (binrel% HAdd.hAdd let85 let112)
  let let779 := (binrel% HAdd.hAdd let85 let778)
  let let780 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let76 let104))
  let let781 := (binrel% LE.le let780 let779)
  let let782 := (binrel% LE.le let104 let112)
  let let783 := (And let72 let9)
  let let784 := (Implies let783 let782)
  let let785 := (Eq let76 let85)
  let let786 := (Eq let6 let12)
  let let787 := (And let70 let786)
  let let788 := (Implies let787 let785)
  let let789 := (Eq let74 let85)
  let let790 := (And let70 let775)
  let let791 := (Implies let790 let789)
  let let792 := (And let165 let16)
  let let793 := (Implies let792 let768)
  let let794 := (Or let758 let768)
  let let795 := (Not let165)
  let let796 := (Or let795 let794)
  let let797 := (Eq let15 let7)
  let let798 := (Eq let5 let12)
  let let799 := (Eq let12 let15)
  let let800 := (Eq let2 let165)
  let let801 := (And let165 let20)
  let let802 := (Implies let801 let769)
  let let803 := (Or let762 let769)
  let let804 := (Or let795 let803)
  let let805 := (Eq let13 let6)
  let let806 := (Eq let12 let13)
  let let807 := (Not let360)
  let let808 := (Or let807 (Or let63 (Or let2 let27)))
  let let809 := (Or let807 (Or let66 (Or let140 let27)))
  let let810 := (And let360 (And let64 let139))
  let let811 := (Eq let26 fmt1)
  let let812 := (And let360 (And let139 let64))
  let let813 := (Or let764 let757)
  let let814 := (Or let762 let813)
  let let815 := (Or let758 let814)
  let let816 := (Or let760 let814)
  let let817 := (Or let363 let757)
  let let818 := (Or let764 let817)
  let let819 := (Or let760 let818)
  let let820 := (Or let762 let819)
  let let821 := (Implies let557 let770)
  let let822 := (And let371 (And let33 let16))
  let let823 := (Implies let822 let768)
  let let824 := (Not let371)
  let let825 := (Or let824 (Or let760 let794))
  let let826 := (Eq let32 let7)
  let let827 := (Eq let5 let11)
  let let828 := (Eq let27 let371)
  let let829 := (And let371 (And let30 let20))
  let let830 := (Implies let829 let769)
  let let831 := (Or let824 (Or let764 let803))
  let let832 := (Eq let29 let6)
  let let833 := (Not let335)
  let let834 := (Not let78)
  let let835 := (Eq let11 let7)
  let let836 := (And let9 (And let769 let835))
  let let837 := (Implies let79 let836)
  let let838 := (Eq let836 False)
  let let839 := (Eq let7 let11)
  let let840 := (Not let839)
  let let841 := (binrel% HAdd.hAdd let180 let778)
  let let842 := (binrel% LE.le let780 let841)
  let let843 := (Eq let74 let180)
  let let844 := (And let70 let839)
  let let845 := (Or let764 (Or let363 (Or let757 let836)))
  let let846 := (Eq let11 let32)
  let let847 := (And let371 let846)
  let let848 := (And let78 let16)
  let let849 := (Not let53)
  let let850 := (Eq let11 let6)
  let let851 := (And let9 (And let850 let768))
  let let852 := (Implies let54 let851)
  let let853 := (Eq let851 False)
  let let854 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let180 let112))
  let let855 := (binrel% LE.le let780 let854)
  let let856 := (Eq let76 let180)
  let let857 := (Eq let6 let11)
  let let858 := (And let70 let857)
  let let859 := (Or let363 (Or let757 let851))
  let let860 := (Eq let11 let29)
  let let861 := (And let371 let860)
  let let862 := (And let53 let20)
  let let863 := (Not let319)
  let let864 := (Not let322)
  let let865 := (Not let258)
  let let866 := (Not let318)
  let let867 := (Or let865 let866)
  let let868 := (Implies let258 let866)
  let let869 := (Eq let318 False)
  let let870 := (Not let14)
  let let871 := (Implies let376 let851)
  let let872 := (And let371 (And let30 let14))
  let let873 := (Or let870 let850)
  let let874 := (Eq let11 let13)
  let let875 := (Not let317)
  let let876 := (Not let334)
  let let877 := (Or let875 let876)
  let let878 := (Implies let317 let876)
  let let879 := (Not let337)
  let let880 := (Not let252)
  let let881 := (Or let880 let879)
  let let882 := (Or let880 let865)
  let let883 := (Implies let252 let865)
  let let884 := (Or let880 let866)
  let let885 := (Implies let252 let866)
  let let886 := (Or let318 let258)
  let let887 := (Not let22)
  let let888 := (Implies let36 let836)
  let let889 := (And let371 (And let33 let22))
  let let890 := (Or let887 let835)
  let let891 := (Eq let11 let15)
  let let892 := (Implies let23 let836)
  let let893 := (And let165 let22)
  let let894 := (Implies let17 let851)
  let let895 := (And let165 let14)
(Eq let19 let18) → (Eq let25 let24) → (Eq let38 let37) → (Eq let43 let42) → let43 → (Eq let47 let46) → let47 → (Eq let50 let49) → (Eq let56 let55) → (Eq let62 let57) → (Eq let65 let64) → (Eq let68 let67) → let68 → (Eq let69 True) → (Eq let70 True) → (Eq let72 True) → (Eq let74 let73) → (Eq let76 let75) → (Eq let81 let80) → (Eq let84 let59) → (Eq let85 let59) → (Eq let86 False) → (Eq let89 let88) → (Eq let94 let92) → (Eq let99 let98) → (Eq let103 let102) → (Eq let104 let83) → (Eq let106 let105) → (Eq let111 let110) → (Eq let112 let58) → (Eq let116 let115) → (Eq let121 let118) → (Eq let117 let122) → (Eq let124 let123) → (Eq let129 let128) → (Eq let130 let4) → (Eq let133 let132) → (Eq let135 let134) → (Eq let136 let57) → (Eq let138 let137) → (Eq let142 let141) → (Eq let144 let143) → (Eq let145 True) → (Eq let147 let146) → (Eq let150 let149) → (Eq let152 let151) → (Eq let155 let154) → (Eq let157 let156) → (Eq let159 let158) → (Eq let162 let161) → (Eq let164 let163) → (Eq let165 let2) → (Eq let168 let167) → (Eq let170 let169) → (Eq let172 let171) → (Eq let174 let173) → (Eq let176 let78) → (Eq let178 let177) → (Eq let179 let33) → (Eq let180 let61) → (Eq let182 let181) → (Eq let184 let183) → (Eq let187 let186) → (Eq let191 let189) → (Eq let100 let51) → (Eq let193 let192) → (Eq let197 let195) → (Eq let201 let200) → (Eq let203 let202) → (Eq let206 let205) → (Eq let208 let207) → (Eq let210 let209) → (Eq let212 let211) → (Eq let214 let213) → (Eq let215 let26) → (Eq let218 let217) → (Eq let220 let219) → (Eq let224 let223) → (Eq let216 let225) → (Eq let227 let226) → (Eq let228 let190) → (Eq let233 let9) → (Eq let235 let234) → (Eq let237 let236) → (Eq let238 True) → (Eq let240 let239) → (Eq let242 let241) → (Eq let243 True) → (Eq let245 let244) → (Eq let102 let246) → (Eq let248 let247) → (Eq let249 let90) → (Eq let251 let250) → (Eq let253 let252) → (Eq let255 let254) → (Eq let257 let256) → (Eq let259 let258) → (Eq let260 let260) → (Eq let261 let3) → (Eq let264 let263) → (Eq let265 let58) → (Eq let270 let268) → (Eq let273 let271) → (Eq let277 let276) → (Eq let362 let361) → (Eq let365 let363) → (Eq let367 let366) → let369 → (Eq let370 let317) → (Eq let371 let27) → (Eq let372 let286) → (Eq let373 True) → (Eq let374 let341) → (Eq let375 True) → (Eq let378 let377) → (Eq let379 let267) → (Eq let380 let380) → (Eq let382 let53) → (Eq let386 let385) → (Eq let387 let387) → (Eq let389 let388) → (Eq let390 let356) → (Eq let391 let280) → (Eq let392 let354) → (Eq let498 let497) → (Eq let502 let501) → (Eq let503 let355) → (Eq let464 let175) → (Eq let507 let506) → (Eq let447 let508) → let509 → (Eq let452 let324) → (Eq let510 let288) → (Eq let511 let364) → (Eq let446 let512) → (Eq let457 let196) → (Eq let513 let291) → (Eq let478 let514) → (Eq let515 let331) → (Eq let414 let516) → (Eq let517 let352) → (Eq let518 let232) → (Eq let519 let328) → (Eq let456 let327) → (Eq let520 False) → (Eq let521 let344) → (Eq let418 let522) → (Eq let476 let523) → (Eq let524 let321) → (Eq let525 let291) → (Eq let526 let1) → (Eq let427 let527) → (Eq let383 let121) → let528 → (Eq let473 let529) → (Eq let408 let530) → (Eq let531 let308) → (Eq let470 let532) → (Eq let534 let533) → (Eq let535 let347) → (Eq let537 let536) → (Eq let538 let11) → (Eq let542 let541) → (Eq let430 let305) → (Eq let543 True) → let545 → (Eq let546 let300) → let50 → (Eq let544 let544) → (Eq let547 let93) → (Eq let548 let301) → (Eq let433 let549) → (Eq let483 let550) → (Eq let551 let350) → (Eq let393 let221) → (Eq let472 let552) → (Eq let407 let553) → (Eq let554 let307) → (Eq let437 let311) → (Eq let555 let353) → (Eq let556 let313) → (Eq let559 let558) → (Eq let438 let560) → (Eq let113 let269) → (Eq let561 let314) → (Eq let563 let5) → (Eq let485 let565) → (Eq let566 let12) → (Eq let567 let272) → (Eq let499 let91) → (Eq let568 False) → (Eq let571 let570) → (Eq let573 let572) → (Eq let475 let574) → (Eq let575 let9) → (Eq let474 let576) → (Eq let579 let578) → (Eq let580 let364) → let142 → (Eq let477 let581) → (Eq let582 True) → (Eq let583 let12) → (Eq let584 let334) → (Eq let585 True) → (Eq let586 True) → (Eq let587 let342) → (Eq let588 True) → (Eq let416 let589) → (Eq let396 let539) → (Eq let591 let306) → let593 → (Eq let399 let504) → (Eq let593 let594) → (Eq let562 fmt1) → (Eq let403 let595) → (Eq let471 let596) → (Eq let597 let63) → (Eq let404 let274) → (Eq let598 let318) → (Eq let411 fmt0) → (Eq let599 True) → (Eq let422 let600) → (Eq let602 let601) → (Eq let603 let345) → (Eq let423 let298) → (Eq let605 let299) → (Eq let607 let606) → (Eq let608 let5) → (Eq let609 let348) → (Eq let424 let604) → (Eq let426 let610) → (Eq let431 let590) → (Eq let434 let611) → (Eq let612 True) → (Eq let613 let312) → (Eq let440 let614) → (Eq let615 let283) → (Eq let443 let30) → (Eq let444 let381) → let498 → False :=
  let let1 := (Int.ofNat 2)
  let let2 := (Eq fmt1 let1)
  let let3 := (Int.ofNat 4)
  let let4 := (Neg.neg let1)
  let let5 := (binrel% HAdd.hAdd let4 fmt1)
  let let6 := (xx5fcount let5)
  let let7 := (sx5fcount let5)
  let let8 := (binrel% HAdd.hAdd let7 let6)
  let let9 := (binrel% GE.ge let8 let3)
  let let10 := (And let9 let2)
  let let11 := (Int.ofNat 1)
  let let12 := (Int.ofNat 0)
  let let13 := (xx5fcount let12)
  let let14 := (Eq let13 let11)
  let let15 := (sx5fcount let12)
  let let16 := (Eq let15 let12)
  let let17 := (And let16 (And let14 let10))
  let let18 := (Not let17)
  let let19 := (Implies let17 False)
  let let20 := (Eq let13 let12)
  let let21 := (And let20 let10)
  let let22 := (Eq let15 let11)
  let let23 := (And let22 let21)
  let let24 := (Not let23)
  let let25 := (Implies let23 False)
  let let26 := (Int.ofNat 3)
  let let27 := (Eq fmt1 let26)
  let let28 := (And let9 let27)
  let let29 := (xx5fcount let11)
  let let30 := (Eq let13 let29)
  let let31 := (And let30 let28)
  let let32 := (sx5fcount let11)
  let let33 := (Eq let15 let32)
  let let34 := (And let33 let31)
  let let35 := (And let20 let34)
  let let36 := (And let22 let35)
  let let37 := (Not let36)
  let let38 := (Implies let36 False)
  let let39 := (Int.ofNat 37)
  let let40 := (Int.ofNat 115)
  let let41 := (Eq let40 let39)
  let let42 := (Not let41)
  let let43 := (Eq let41 False)
  let let44 := (Int.ofNat 120)
  let let45 := (Eq let44 let40)
  let let46 := (Not let45)
  let let47 := (Eq let45 False)
  let let48 := (Eq let44 let39)
  let let49 := (Not let48)
  let let50 := (Eq let48 False)
  let let51 := (Neg.neg let11)
  let let52 := (binrel% HAdd.hAdd let51 let29)
  let let53 := (Eq let13 let52)
  let let54 := (And let16 (And let20 (And let33 (And let53 let28))))
  let let55 := (Not let54)
  let let56 := (Implies let54 False)
  let let57 := (Neg.neg (Rat.ofInt 3))
  let let58 := (Neg.neg (Rat.ofInt 4))
  let let59 := (Rat.ofInt 0)
  let let60 := (binrel% HAdd.hAdd let59 let58)
  let let61 := (Rat.ofInt 1)
  let let62 := (binrel% HAdd.hAdd let61 let60)
  let let63 := (binrel% GE.ge fmt1 let3)
  let let64 := (Not let63)
  let let65 := (binrel% LT.lt fmt1 let3)
  let let66 := (Not let64)
  let let67 := (Eq let63 let66)
  let let68 := (Eq let66 let63)
  let let69 := (Eq let63 let63)
  let let70 := (binrel% GT.gt let61 let12)
  let let71 := (Neg.neg let61)
  let let72 := (binrel% LT.lt let71 let12)
  let let73 := (Rat.ofInt let7)
  let let74 := (binrel% HMul.hMul let61 let7)
  let let75 := (Rat.ofInt let6)
  let let76 := (binrel% HMul.hMul let61 let6)
  let let77 := (binrel% HAdd.hAdd let51 let32)
  let let78 := (Eq let15 let77)
  let let79 := (And let16 (And let20 (And let78 let31)))
  let let80 := (Not let79)
  let let81 := (Implies let79 False)
  let let82 := (binrel% HMul.hMul let51 let6)
  let let83 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let51 let7) let82))
  let let84 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let75 let83))
  let let85 := (binrel% HMul.hMul let61 let12)
  let let86 := (binrel% LE.le let59 let58)
  let let87 := (And let16 let21)
  let let88 := (Not let87)
  let let89 := (Implies let87 False)
  let let90 := (Int.ofNat 16)
  let let91 := (Neg.neg let90)
  let let92 := (Eq arg0 let91)
  let let93 := (binrel% HAdd.hAdd let90 arg0)
  let let94 := (Eq let12 let93)
  let let95 := (binrel% HMul.hMul let51 arg1)
  let let96 := (binrel% HAdd.hAdd fmt0 let95)
  let let97 := (binrel% GE.ge let96 let11)
  let let98 := (Not let97)
  let let99 := (binrel% GE.ge arg1 fmt0)
  let let100 := (binrel% HMul.hMul let51 let11)
  let let101 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let102 := (binrel% HAdd.hAdd let101 let100)
  let let103 := (binrel% HSub.hSub let101 let11)
  let let104 := (binrel% HMul.hMul let71 let8)
  let let105 := (binrel% HAdd.hAdd let51 let101)
  let let106 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let51))
  let let107 := (binrel% HMul.hMul let51 fmtx5flength)
  let let108 := (binrel% HMul.hMul let51 fmt0)
  let let109 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let108 let107))
  let let110 := (binrel% GE.ge let109 let51)
  let let111 := (binrel% GE.ge fmt1 let105)
  let let112 := (binrel% HMul.hMul let71 let3)
  let let113 := (binrel% HAdd.hAdd fmt0 let11)
  let let114 := (binrel% LE.le fmt1 let113)
  let let115 := (Not let114)
  let let116 := (binrel% GT.gt fmt1 let113)
  let let117 := (binrel% HMul.hMul let51 let3)
  let let118 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let117)))
  let let119 := (binrel% HAdd.hAdd arg0 distance)
  let let120 := (binrel% HAdd.hAdd let119 fmtx5flength)
  let let121 := (binrel% HAdd.hAdd let120 let117)
  let let122 := (Neg.neg let3)
  let let123 := (binrel% HAdd.hAdd let122 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let124 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let122)))
  let let125 := (binrel% HMul.hMul let51 distance)
  let let126 := (binrel% HMul.hMul let51 arg0)
  let let127 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let126 (binrel% HAdd.hAdd let107 let125)))
  let let128 := (binrel% GE.ge let127 let122)
  let let129 := (binrel% GE.ge arg1 let123)
  let let130 := (binrel% HMul.hMul let51 let1)
  let let131 := (selectx5fformat let12)
  let let132 := (Eq s let131)
  let let133 := (Eq let131 s)
  let let134 := (Eq x let131)
  let let135 := (Eq let131 x)
  let let136 := (binrel% HAdd.hAdd let59 (binrel% HAdd.hAdd let61 let58))
  let let137 := (Eq adrx5flo let131)
  let let138 := (Eq let131 adrx5flo)
  let let139 := (Not let2)
  let let140 := (Not let139)
  let let141 := (Eq let2 let140)
  let let142 := (Eq let140 let2)
  let let143 := (Eq adrx5fmedlo let131)
  let let144 := (Eq let131 adrx5fmedlo)
  let let145 := (Eq let2 let2)
  let let146 := (Eq adrx5fhi let131)
  let let147 := (Eq let131 adrx5fhi)
  let let148 := (selectx5fformat let11)
  let let149 := (Eq adrx5fmedhi let148)
  let let150 := (Eq let148 adrx5fmedhi)
  let let151 := (Eq adrx5fhi let148)
  let let152 := (Eq let148 adrx5fhi)
  let let153 := (selectx5fformat let1)
  let let154 := (Eq adrx5flo let153)
  let let155 := (Eq let153 adrx5flo)
  let let156 := (Eq adrx5fmedlo let153)
  let let157 := (Eq let153 adrx5fmedlo)
  let let158 := (Eq adrx5fhi let153)
  let let159 := (Eq let153 adrx5fhi)
  let let160 := (selectx5fformat let26)
  let let161 := (Eq adrx5fmedlo let160)
  let let162 := (Eq let160 adrx5fmedlo)
  let let163 := (Eq let32 let11)
  let let164 := (Eq let12 let77)
  let let165 := (Eq let12 let5)
  let let166 := (selectx5fformat let3)
  let let167 := (Eq adrx5fmedlo let166)
  let let168 := (Eq let166 adrx5fmedlo)
  let let169 := (Eq adrx5fhi let166)
  let let170 := (Eq let166 adrx5fhi)
  let let171 := (Eq s let148)
  let let172 := (Eq let148 s)
  let let173 := (Eq s let153)
  let let174 := (Eq let153 s)
  let let175 := (binrel% HAdd.hAdd let11 let15)
  let let176 := (Eq let32 let175)
  let let177 := (binrel% HAdd.hAdd fmt0 let125)
  let let178 := (binrel% HSub.hSub fmt0 distance)
  let let179 := (Eq let32 let15)
  let let180 := (binrel% HMul.hMul let61 let11)
  let let181 := (Eq fmt0 let119)
  let let182 := (Eq arg0 let177)
  let let183 := (Eq s let160)
  let let184 := (Eq let160 s)
  let let185 := (binrel% GE.ge fmt1 let103)
  let let186 := (Not let185)
  let let187 := (binrel% LT.lt fmt1 let103)
  let let188 := (sx5fcount let1)
  let let189 := (Eq let32 (binrel% HAdd.hAdd let51 let188))
  let let190 := (binrel% HAdd.hAdd let11 let32)
  let let191 := (Eq let188 let190)
  let let192 := (Eq s let166)
  let let193 := (Eq let166 s)
  let let194 := (sx5fcount let26)
  let let195 := (Eq let188 (binrel% HAdd.hAdd let51 let194))
  let let196 := (binrel% HAdd.hAdd let11 let188)
  let let197 := (Eq let194 let196)
  let let198 := (Int.ofNat 5)
  let let199 := (selectx5fformat let198)
  let let200 := (Eq s let199)
  let let201 := (Eq let199 s)
  let let202 := (binrel% HAdd.hAdd let11 let194)
  let let203 := (binrel% HAdd.hAdd let194 let11)
  let let204 := (sx5fcount let3)
  let let205 := (Eq let194 (binrel% HAdd.hAdd let51 let204))
  let let206 := (Eq let204 let202)
  let let207 := (Eq percent let131)
  let let208 := (Eq let131 percent)
  let let209 := (Eq x let148)
  let let210 := (Eq let148 x)
  let let211 := (Eq let131 let3)
  let let212 := (Eq let3 let131)
  let let213 := (Eq let148 let198)
  let let214 := (Eq let198 let148)
  let let215 := (binrel% HAdd.hAdd let26 let12)
  let let216 := (binrel% HSub.hSub fmt1 let1)
  let let217 := (binrel% HAdd.hAdd let216 let108)
  let let218 := (binrel% HSub.hSub let216 fmt0)
  let let219 := (Eq let148 let3)
  let let220 := (Eq let3 let148)
  let let221 := (binrel% HAdd.hAdd let26 arg1)
  let let222 := (selectx5fformat let221)
  let let223 := (Eq adrx5fhi let222)
  let let224 := (Eq let222 adrx5fhi)
  let let225 := (binrel% HAdd.hAdd fmt1 let130)
  let let226 := (Eq let148 let26)
  let let227 := (Eq let26 let148)
  let let228 := (binrel% HAdd.hAdd let32 let11)
  let let229 := (binrel% HMul.hMul let3 let6)
  let let230 := (binrel% HMul.hMul let3 let7)
  let let231 := (binrel% HAdd.hAdd let230 let229)
  let let232 := (binrel% HAdd.hAdd let91 let231)
  let let233 := (binrel% GE.ge let232 let12)
  let let234 := (Eq let153 let11)
  let let235 := (Eq let11 let153)
  let let236 := (Eq let160 let3)
  let let237 := (Eq let3 let160)
  let let238 := (Eq let39 let39)
  let let239 := (Eq let166 let3)
  let let240 := (Eq let3 let166)
  let let241 := (Eq let166 let198)
  let let242 := (Eq let198 let166)
  let let243 := (Eq let26 let26)
  let let244 := (Eq let153 let3)
  let let245 := (Eq let3 let153)
  let let246 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let100))
  let let247 := (Eq let32 let188)
  let let248 := (Eq let188 let32)
  let let249 := (binrel% HMul.hMul let51 let91)
  let let250 := (Eq let199 let40)
  let let251 := (Eq let40 let199)
  let let252 := (Eq let148 let40)
  let let253 := (Eq let40 let148)
  let let254 := (Eq let160 let198)
  let let255 := (Eq let198 let160)
  let let256 := (Eq adrx5fmedlo let148)
  let let257 := (Eq let148 adrx5fmedlo)
  let let258 := (Eq let148 let44)
  let let259 := (Eq let44 let148)
  let let260 := (binrel% HAdd.hAdd let51 let232)
  let let261 := (binrel% HAdd.hAdd let3 let12)
  let let262 := (selectx5fformat let232)
  let let263 := (Eq let262 let11)
  let let264 := (Eq let11 let262)
  let let265 := (binrel% HAdd.hAdd let59 let60)
  let let266 := (binrel% HAdd.hAdd fmt1 let108)
  let let267 := (binrel% GE.ge let266 let1)
  let let268 := (Not let267)
  let let269 := (binrel% HAdd.hAdd let11 fmt0)
  let let270 := (binrel% LE.le fmt1 let269)
  let let271 := (binrel% GE.ge let8 let198)
  let let272 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let231)
  let let273 := (binrel% GE.ge let272 let122)
  let let274 := (binrel% HAdd.hAdd let11 fmt1)
  let let275 := (selectx5fformat let274)
  let let276 := (Eq let275 let40)
  let let277 := (Eq let40 let275)
  let let278 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let231)
  let let279 := (selectx5fformat let278)
  let let280 := (Eq let279 let26)
  let let281 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let231)
  let let282 := (selectx5fformat let281)
  let let283 := (Eq let282 let3)
  let let284 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 15)) let231)
  let let285 := (selectx5fformat let284)
  let let286 := (Eq let285 let198)
  let let287 := (selectx5fformat fmt1)
  let let288 := (Eq let287 let39)
  let let289 := (And let288 (And let276 (And let263 (And let286 (And let283 let280)))))
  let let290 := (Not let289)
  let let291 := (Eq let7 (binrel% HAdd.hAdd let3 let82))
  let let292 := (Eq fmt1 let3)
  let let293 := (Eq fmt1 let11)
  let let294 := (Eq fmt1 let12)
  let let295 := (Or let294 (Or let293 (Or let2 (Or let27 let292))))
  let let296 := (xx5fcount let3)
  let let297 := (xx5fcount let26)
  let let298 := (Eq let297 let296)
  let let299 := (Eq let297 (binrel% HAdd.hAdd let51 let296))
  let let300 := (Eq let199 let44)
  let let301 := (Eq let166 let39)
  let let302 := (And let301 let300)
  let let303 := (smtIte let302 let299 let298 Prop)
  let let304 := (xx5fcount let1)
  let let305 := (Eq let304 let297)
  let let306 := (Eq let304 (binrel% HAdd.hAdd let51 let297))
  let let307 := (Eq let166 let44)
  let let308 := (Eq let160 let39)
  let let309 := (And let308 let307)
  let let310 := (smtIte let309 let306 let305 Prop)
  let let311 := (Eq let29 let304)
  let let312 := (Eq let29 (binrel% HAdd.hAdd let51 let304))
  let let313 := (Eq let160 let44)
  let let314 := (Eq let153 let39)
  let let315 := (And let314 let313)
  let let316 := (smtIte let315 let312 let311 Prop)
  let let317 := (Eq let153 let44)
  let let318 := (Eq let148 let39)
  let let319 := (And let318 let317)
  let let320 := (smtIte let319 let53 let30 Prop)
  let let321 := (Eq let131 let39)
  let let322 := (And let321 let258)
  let let323 := (smtIte let322 let14 let20 Prop)
  let let324 := (Eq let194 let204)
  let let325 := (And let301 let250)
  let let326 := (smtIte let325 let205 let324 Prop)
  let let327 := (Eq let188 let194)
  let let328 := (Eq let166 let40)
  let let329 := (And let308 let328)
  let let330 := (smtIte let329 let195 let327 Prop)
  let let331 := (Eq let160 let40)
  let let332 := (And let314 let331)
  let let333 := (smtIte let332 let189 let247 Prop)
  let let334 := (Eq let153 let40)
  let let335 := (And let318 let334)
  let let336 := (smtIte let335 let78 let33 Prop)
  let let337 := (And let321 let252)
  let let338 := (smtIte let337 let22 let16 Prop)
  let let339 := (Int.ofNat 255)
  let let340 := (Eq let166 let339)
  let let341 := (Eq let166 let26)
  let let342 := (Eq let166 let11)
  let let343 := (Eq let160 let339)
  let let344 := (Eq let160 let26)
  let let345 := (Eq let160 let11)
  let let346 := (Eq let153 let339)
  let let347 := (Eq let153 let26)
  let let348 := (Eq let153 let198)
  let let349 := (Eq let148 let339)
  let let350 := (Eq let148 let11)
  let let351 := (Eq let131 let339)
  let let352 := (Eq let131 let26)
  let let353 := (Eq let131 let198)
  let let354 := (Eq let131 let11)
  let let355 := (Eq let131 let44)
  let let356 := (Eq let131 let40)
  let let357 := (Or let321 (Or let356 (Or let355 (Or let354 (Or let353 (Or let211 (Or let352 (Or let351 (Or let318 (Or let252 (Or let258 (Or let350 (Or let213 (Or let219 (Or let226 (Or let349 (Or let314 (Or let334 (Or let317 (Or let234 (Or let348 (Or let244 (Or let347 (Or let346 (Or let308 (Or let331 (Or let313 (Or let345 (Or let254 (Or let236 (Or let344 (Or let343 (Or let301 (Or let328 (Or let307 (Or let342 (Or let241 (Or let239 (Or let341 let340)))))))))))))))))))))))))))))))))))))))
  let let358 := (And let357 (And let338 (And let336 (And let333 (And let330 (And let326 (And let323 (And let320 (And let316 (And let310 (And let303 (And let295 (And let291 let290)))))))))))))
  let let359 := (Not let271)
  let let360 := (binrel% GE.ge fmt1 let1)
  let let361 := (And let9 (And let64 (And let360 (And let359 let358))))
  let let362 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let9 (And let64 (And let360 (And let9 (And let359 (And True let358)))))))))))))))))
  let let363 := (Not let9)
  let let364 := (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd (binrel% HMul.hMul let122 let7) (binrel% HMul.hMul let122 let6)))
  let let365 := (binrel% GE.ge let364 let11)
  let let366 := (Eq fmt0 arg1)
  let let367 := (Eq arg1 fmt0)
  let let368 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let231)
  let let369 := (Eq let260 let368)
  let let370 := (Eq let44 let153)
  let let371 := (Eq let11 let5)
  let let372 := (Eq let198 let285)
  let let373 := (Eq let40 let40)
  let let374 := (Eq let26 let166)
  let let375 := (Eq let44 let44)
  let let376 := (And let16 (And let14 let34))
  let let377 := (Not let376)
  let let378 := (Implies let376 False)
  let let379 := (Not let268)
  let let380 := (binrel% HAdd.hAdd let11 let232)
  let let381 := (binrel% HAdd.hAdd let11 let13)
  let let382 := (Eq let29 let381)
  let let383 := (binrel% HSub.hSub let120 let3)
  let let384 := (binrel% GE.ge arg1 let383)
  let let385 := (Not let384)
  let let386 := (binrel% LT.lt arg1 let383)
  let let387 := (binrel% HAdd.hAdd let1 let232)
  let let388 := (Eq x let160)
  let let389 := (Eq let160 x)
  let let390 := (Eq let40 let131)
  let let391 := (Eq let26 let279)
  let let392 := (Eq let11 let131)
  let let393 := (binrel% HAdd.hAdd arg1 let26)
  let let394 := (selectx5fformat let393)
  let let395 := (Eq let394 adrx5fhi)
  let let396 := (binrel% HAdd.hAdd arg1 let1)
  let let397 := (selectx5fformat let396)
  let let398 := (Eq let397 adrx5fmedhi)
  let let399 := (binrel% HAdd.hAdd arg1 let11)
  let let400 := (selectx5fformat let399)
  let let401 := (Eq let400 adrx5fmedlo)
  let let402 := (selectx5fformat arg1)
  let let403 := (Eq let402 adrx5flo)
  let let404 := (binrel% HAdd.hAdd fmt1 let11)
  let let405 := (selectx5fformat let404)
  let let406 := (Eq let405 s)
  let let407 := (Eq let287 percent)
  let let408 := (And (And (And (And (And let407 let406) let403) let401) let398) let395)
  let let409 := (Not let408)
  let let410 := (Eq arg1 let113)
  let let411 := (binrel% HAdd.hAdd fmt0 let12)
  let let412 := (Eq arg1 let411)
  let let413 := (Or let412 let410)
  let let414 := (binrel% HAdd.hAdd fmt0 let3)
  let let415 := (Eq fmt1 let414)
  let let416 := (binrel% HAdd.hAdd fmt0 let26)
  let let417 := (Eq fmt1 let416)
  let let418 := (binrel% HAdd.hAdd fmt0 let1)
  let let419 := (Eq fmt1 let418)
  let let420 := (Eq fmt1 let113)
  let let421 := (Eq fmt1 let411)
  let let422 := (Or (Or (Or (Or let421 let420) let419) let417) let415)
  let let423 := (Eq let296 let297)
  let let424 := (binrel% HAdd.hAdd let297 let11)
  let let425 := (Eq let296 let424)
  let let426 := (Eq let199 x)
  let let427 := (Eq let166 percent)
  let let428 := (And let427 let426)
  let let429 := (smtIte let428 let425 let423 Prop)
  let let430 := (Eq let297 let304)
  let let431 := (binrel% HAdd.hAdd let304 let11)
  let let432 := (Eq let297 let431)
  let let433 := (Eq let166 x)
  let let434 := (Eq let160 percent)
  let let435 := (And let434 let433)
  let let436 := (smtIte let435 let432 let430 Prop)
  let let437 := (Eq let304 let29)
  let let438 := (binrel% HAdd.hAdd let29 let11)
  let let439 := (Eq let304 let438)
  let let440 := (Eq let153 percent)
  let let441 := (And let440 let389)
  let let442 := (smtIte let441 let439 let437 Prop)
  let let443 := (Eq let29 let13)
  let let444 := (binrel% HAdd.hAdd let13 let11)
  let let445 := (Eq let29 let444)
  let let446 := (Eq let153 x)
  let let447 := (Eq let148 percent)
  let let448 := (And let447 let446)
  let let449 := (smtIte let448 let445 let443 Prop)
  let let450 := (And let208 let210)
  let let451 := (smtIte let450 let14 let20 Prop)
  let let452 := (Eq let204 let194)
  let let453 := (Eq let204 let203)
  let let454 := (And let427 let201)
  let let455 := (smtIte let454 let453 let452 Prop)
  let let456 := (Eq let194 let188)
  let let457 := (binrel% HAdd.hAdd let188 let11)
  let let458 := (Eq let194 let457)
  let let459 := (And let434 let193)
  let let460 := (smtIte let459 let458 let456 Prop)
  let let461 := (Eq let188 let228)
  let let462 := (And let440 let184)
  let let463 := (smtIte let462 let461 let248 Prop)
  let let464 := (binrel% HAdd.hAdd let15 let11)
  let let465 := (Eq let32 let464)
  let let466 := (And let447 let174)
  let let467 := (smtIte let466 let465 let179 Prop)
  let let468 := (And let208 let172)
  let let469 := (smtIte let468 let22 let16 Prop)
  let let470 := (Eq let166 adrx5fmedhi)
  let let471 := (Eq let166 adrx5flo)
  let let472 := (Eq let160 adrx5fhi)
  let let473 := (Eq let160 adrx5fmedhi)
  let let474 := (Eq let160 adrx5flo)
  let let475 := (Eq let153 adrx5fmedhi)
  let let476 := (Eq let148 adrx5flo)
  let let477 := (Eq let131 adrx5fmedhi)
  let let478 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let208 let133) let135) let138) let144) let477) let147) let351) let447) let172) let210) let476) let257) let150) let152) let349) let440) let174) let446) let155) let157) let475) let159) let346) let434) let184) let389) let474) let162) let473) let472) let343) let427) let193) let433) let471) let168) let470) let170) let340)
  let let479 := (xx5fcount let218)
  let let480 := (binrel% HMul.hMul let3 let479)
  let let481 := (sx5fcount let218)
  let let482 := (binrel% HMul.hMul let3 let481)
  let let483 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let482) let480)
  let let484 := (Eq arg1 let483)
  let let485 := (binrel% GE.ge arg1 let119)
  let let486 := (Eq arg0 let178)
  let let487 := (Eq fmt0 let12)
  let let488 := (Eq x let44)
  let let489 := (Eq s let40)
  let let490 := (Eq percent let39)
  let let491 := (Eq adrx5fhi let26)
  let let492 := (Eq adrx5fmedhi let3)
  let let493 := (Eq adrx5fmedlo let198)
  let let494 := (Eq adrx5flo let11)
  let let495 := (Eq fmtx5flength let198)
  let let496 := (Eq distance let90)
  let let497 := (And let496 (And let495 (And let494 (And let493 (And let492 (And let491 (And let490 (And let489 (And let488 (And let487 (And let486 (And let99 (And let187 (And let116 (And let485 (And let386 (And let484 (And let478 (And let469 (And let467 (And let463 (And let460 (And let455 (And let451 (And let449 (And let442 (And let436 (And let429 (And let422 (And let413 let409))))))))))))))))))))))))))))))
  let let498 := (And (And (And (And (And (And (And (And (And (And (And (And (And let496 let495) let494) let493) let492) let491) let490) let489) let488) (And (And (And (And (And (And (And let487 let486) let99) let187) let116) let485) let386) let484)) let478) (And (And (And (And (And (And (And (And (And let469 let467) let463) let460) let455) let451) let449) let442) let436) let429)) (And let422 let413)) let409)
  let let499 := (binrel% HMul.hMul let51 let90)
  let let500 := (binrel% HAdd.hAdd let249 let499)
  let let501 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 let500)))
  let let502 := (binrel% HAdd.hAdd let232 let500)
  let let503 := (Eq let44 let131)
  let let504 := (binrel% HAdd.hAdd let11 arg1)
  let let505 := (selectx5fformat let504)
  let let506 := (Eq adrx5fmedlo let505)
  let let507 := (Eq let505 adrx5fmedlo)
  let let508 := (Eq percent let148)
  let let509 := (Eq let380 let284)
  let let510 := (Eq let39 let287)
  let let511 := (binrel% HAdd.hAdd let12 let364)
  let let512 := (Eq x let153)
  let let513 := (Eq let12 let232)
  let let514 := (Or let208 (Or let133 (Or let135 (Or let138 (Or let144 (Or let477 (Or let147 (Or let351 (Or let447 (Or let172 (Or let210 (Or let476 (Or let257 (Or let150 (Or let152 (Or let349 (Or let440 (Or let174 (Or let446 (Or let155 (Or let157 (Or let475 (Or let159 (Or let346 (Or let434 (Or let184 (Or let389 (Or let474 (Or let162 (Or let473 (Or let472 (Or let343 (Or let427 (Or let193 (Or let433 (Or let471 (Or let168 (Or let470 (Or let170 let340)))))))))))))))))))))))))))))))))))))))
  let let515 := (Eq let40 let160)
  let let516 := (binrel% HAdd.hAdd let3 fmt0)
  let let517 := (Eq let26 let131)
  let let518 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let90 let91))))
  let let519 := (Eq let40 let166)
  let let520 := (Eq let12 let368)
  let let521 := (Eq let26 let160)
  let let522 := (binrel% HAdd.hAdd let1 fmt0)
  let let523 := (Eq adrx5flo let148)
  let let524 := (Eq let39 let131)
  let let525 := (Or let291 False)
  let let526 := (binrel% HAdd.hAdd let1 let12)
  let let527 := (Eq percent let166)
  let let528 := (Eq let387 let281)
  let let529 := (Eq adrx5fmedhi let160)
  let let530 := (And let407 (And let406 (And let403 (And let401 (And let398 let395)))))
  let let531 := (Eq let39 let160)
  let let532 := (Eq adrx5fmedhi let166)
  let let533 := (Eq s let275)
  let let534 := (Eq let275 s)
  let let535 := (Eq let26 let153)
  let let536 := (Neg.neg let198)
  let let537 := (binrel% HMul.hMul let51 let198)
  let let538 := (binrel% HAdd.hAdd let11 let12)
  let let539 := (binrel% HAdd.hAdd let1 arg1)
  let let540 := (selectx5fformat let539)
  let let541 := (Eq adrx5fmedhi let540)
  let let542 := (Eq let540 adrx5fmedhi)
  let let543 := (Not False)
  let let544 := (binrel% HAdd.hAdd let26 let232)
  let let545 := (Eq let544 let278)
  let let546 := (Eq let44 let199)
  let let547 := (binrel% HAdd.hAdd arg0 let90)
  let let548 := (Eq let39 let166)
  let let549 := (Eq x let166)
  let let550 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let482 let480))
  let let551 := (Eq let11 let148)
  let let552 := (Eq adrx5fhi let160)
  let let553 := (Eq percent let287)
  let let554 := (Eq let44 let166)
  let let555 := (Eq let198 let131)
  let let556 := (Eq let44 let160)
  let let557 := (And let16 let35)
  let let558 := (Not let557)
  let let559 := (Implies let557 False)
  let let560 := (binrel% HAdd.hAdd let11 let29)
  let let561 := (Eq let39 let153)
  let let562 := (binrel% HAdd.hAdd fmt1 let12)
  let let563 := (binrel% HAdd.hAdd let4 let562)
  let let564 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let126 let125))
  let let565 := (binrel% GE.ge let564 let12)
  let let566 := (binrel% HMul.hMul let51 let12)
  let let567 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 (binrel% HAdd.hAdd let90 (binrel% HAdd.hAdd let536 let91)))))
  let let568 := (binrel% LE.le let59 let57)
  let let569 := (binrel% HAdd.hAdd let249 (binrel% HAdd.hAdd let537 let499))
  let let570 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let230 (binrel% HAdd.hAdd let229 let569)))
  let let571 := (binrel% HAdd.hAdd let232 let569)
  let let572 := (binrel% HAdd.hAdd let536 fmt1)
  let let573 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let12 let536))
  let let574 := (Eq adrx5fmedhi let153)
  let let575 := (Not let363)
  let let576 := (Eq adrx5flo let160)
  let let577 := (binrel% HAdd.hAdd let51 arg1)
  let let578 := (Eq fmt0 let577)
  let let579 := (Eq arg1 let269)
  let let580 := (binrel% HMul.hMul let51 let232)
  let let581 := (Eq adrx5fmedhi let131)
  let let582 := (Eq let12 let12)
  let let583 := (binrel% HAdd.hAdd let91 let90)
  let let584 := (Eq let40 let153)
  let let585 := (Eq let198 let198)
  let let586 := (Eq let11 let11)
  let let587 := (Eq let11 let166)
  let let588 := (Eq let3 let3)
  let let589 := (binrel% HAdd.hAdd let26 fmt0)
  let let590 := (binrel% HAdd.hAdd let11 let304)
  let let591 := (Eq let297 let590)
  let let592 := (Eq let40 let44)
  let let593 := (Eq let592 False)
  let let594 := (Not let592)
  let let595 := (Eq adrx5flo let402)
  let let596 := (Eq adrx5flo let166)
  let let597 := (binrel% GE.ge let572 let51)
  let let598 := (Eq let39 let148)
  let let599 := (Eq let90 let90)
  let let600 := (Or let421 (Or let420 (Or let419 (Or let417 let415))))
  let let601 := (binrel% HAdd.hAdd let4 let266)
  let let602 := (binrel% HAdd.hAdd let5 let108)
  let let603 := (Eq let11 let160)
  let let604 := (binrel% HAdd.hAdd let11 let297)
  let let605 := (Eq let296 let604)
  let let606 := (Eq let29 let11)
  let let607 := (Eq let12 let52)
  let let608 := (binrel% HAdd.hAdd fmt1 let4)
  let let609 := (Eq let198 let153)
  let let610 := (Eq x let199)
  let let611 := (Eq percent let160)
  let let612 := (Eq let232 let232)
  let let613 := (Eq let304 let560)
  let let614 := (Eq percent let153)
  let let615 := (Eq let3 let282)
  let let616 := (And let553 (And let533 (And let595 (And let506 (And let541 let223)))))
  let let617 := (Not let616)
  let let618 := (Or let366 let578)
  let let619 := (Eq fmt1 let516)
  let let620 := (Eq fmt1 let589)
  let let621 := (Eq fmt1 let522)
  let let622 := (Eq fmt1 let269)
  let let623 := (Eq fmt1 fmt0)
  let let624 := (Or let623 (Or let622 (Or let621 (Or let620 let619))))
  let let625 := (And let527 let610)
  let let626 := (smtIte let625 let299 let298 Prop)
  let let627 := (And let611 let549)
  let let628 := (smtIte let627 let306 let305 Prop)
  let let629 := (And let614 let388)
  let let630 := (smtIte let629 let312 let311 Prop)
  let let631 := (And let508 let512)
  let let632 := (smtIte let631 let53 let30 Prop)
  let let633 := (And let207 let209)
  let let634 := (smtIte let633 let14 let20 Prop)
  let let635 := (And let527 let200)
  let let636 := (smtIte let635 let205 let324 Prop)
  let let637 := (And let611 let192)
  let let638 := (smtIte let637 let195 let327 Prop)
  let let639 := (And let614 let183)
  let let640 := (smtIte let639 let189 let247 Prop)
  let let641 := (And let508 let173)
  let let642 := (smtIte let641 let78 let33 Prop)
  let let643 := (And let207 let171)
  let let644 := (smtIte let643 let22 let16 Prop)
  let let645 := (Or let207 (Or let132 (Or let134 (Or let137 (Or let143 (Or let581 (Or let146 (Or let351 (Or let508 (Or let171 (Or let209 (Or let523 (Or let256 (Or let149 (Or let151 (Or let349 (Or let614 (Or let173 (Or let512 (Or let154 (Or let156 (Or let574 (Or let158 (Or let346 (Or let611 (Or let183 (Or let388 (Or let576 (Or let161 (Or let529 (Or let552 (Or let343 (Or let527 (Or let192 (Or let549 (Or let596 (Or let167 (Or let532 (Or let169 let340)))))))))))))))))))))))))))))))))))))))
  let let646 := (xx5fcount let601)
  let let647 := (binrel% HMul.hMul let3 let646)
  let let648 := (sx5fcount let601)
  let let649 := (binrel% HMul.hMul let3 let648)
  let let650 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let649 let647))
  let let651 := (Eq arg1 let650)
  let let652 := (Not let128)
  let let653 := (Not let110)
  let let654 := (And let496 (And let495 (And let494 (And let493 (And let492 (And let491 (And let490 (And let489 (And let488 (And let487 (And let181 (And let98 (And let653 (And let267 (And let565 (And let652 (And let651 (And let645 (And let644 (And let642 (And let640 (And let638 (And let636 (And let634 (And let632 (And let630 (And let628 (And let626 (And let624 (And let618 let617))))))))))))))))))))))))))))))
  let let655 := (selectx5fformat let544)
  let let656 := (Eq let26 let655)
  let let657 := (selectx5fformat let387)
  let let658 := (Eq let3 let657)
  let let659 := (selectx5fformat let380)
  let let660 := (Eq let198 let659)
  let let661 := (And let510 (And let277 (And let264 (And let660 (And let658 let656)))))
  let let662 := (Not let661)
  let let663 := (Eq let12 let260)
  let let664 := (Or let513 let663)
  let let665 := (Eq fmt1 let261)
  let let666 := (Eq fmt1 let215)
  let let667 := (Eq fmt1 let526)
  let let668 := (Eq fmt1 let538)
  let let669 := (Or let294 (Or let668 (Or let667 (Or let666 let665))))
  let let670 := (And let548 let546)
  let let671 := (smtIte let670 let299 let298 Prop)
  let let672 := (And let531 let554)
  let let673 := (smtIte let672 let306 let305 Prop)
  let let674 := (And let561 let556)
  let let675 := (smtIte let674 let312 let311 Prop)
  let let676 := (And let598 let370)
  let let677 := (smtIte let676 let53 let30 Prop)
  let let678 := (And let524 let259)
  let let679 := (smtIte let678 let14 let20 Prop)
  let let680 := (And let548 let251)
  let let681 := (smtIte let680 let205 let324 Prop)
  let let682 := (And let531 let519)
  let let683 := (smtIte let682 let195 let327 Prop)
  let let684 := (And let561 let515)
  let let685 := (smtIte let684 let189 let247 Prop)
  let let686 := (And let598 let584)
  let let687 := (smtIte let686 let78 let33 Prop)
  let let688 := (And let524 let253)
  let let689 := (smtIte let688 let22 let16 Prop)
  let let690 := (Or let524 (Or let390 (Or let503 (Or let392 (Or let555 (Or let212 (Or let517 (Or let351 (Or let598 (Or let253 (Or let259 (Or let551 (Or let214 (Or let220 (Or let227 (Or let349 (Or let561 (Or let584 (Or let370 (Or let235 (Or let609 (Or let245 (Or let535 (Or let346 (Or let531 (Or let515 (Or let556 (Or let603 (Or let255 (Or let237 (Or let521 (Or let343 (Or let548 (Or let519 (Or let554 (Or let587 (Or let242 (Or let240 (Or let374 let340)))))))))))))))))))))))))))))))))))))))
  let let691 := (binrel% HAdd.hAdd fmt1 let566)
  let let692 := (binrel% HAdd.hAdd let4 let691)
  let let693 := (xx5fcount let692)
  let let694 := (binrel% HMul.hMul let3 let693)
  let let695 := (sx5fcount let692)
  let let696 := (binrel% HMul.hMul let3 let695)
  let let697 := (binrel% HAdd.hAdd let91 (binrel% HAdd.hAdd let696 let694))
  let let698 := (Eq let232 let697)
  let let699 := (binrel% GE.ge let571 let122)
  let let700 := (Not let699)
  let let701 := (binrel% GE.ge let502 let12)
  let let702 := (binrel% GE.ge let691 let1)
  let let703 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let566 let537))
  let let704 := (binrel% GE.ge let703 let51)
  let let705 := (Not let704)
  let let706 := (binrel% HAdd.hAdd let12 let580)
  let let707 := (binrel% GE.ge let706 let11)
  let let708 := (Not let707)
  let let709 := (Eq let12 let583)
  let let710 := (And let599 (And let585 (And let586 (And let585 (And let588 (And let243 (And let238 (And let373 (And let375 (And let582 (And let709 (And let708 (And let705 (And let702 (And let701 (And let700 (And let698 (And let690 (And let689 (And let687 (And let685 (And let683 (And let681 (And let679 (And let677 (And let675 (And let673 (And let671 (And let669 (And let664 let662))))))))))))))))))))))))))))))
  let let711 := (Eq And And)
  let let712 := (Eq fmt1 fmt1)
  let let713 := (Eq Or Or)
  let let714 := (Eq let298 let298)
  let let715 := (Eq let299 let299)
  let let716 := (Eq let305 let305)
  let let717 := (Eq let306 let306)
  let let718 := (Eq let311 let311)
  let let719 := (Eq let312 let312)
  let let720 := (Eq let30 let30)
  let let721 := (Eq let53 let53)
  let let722 := (Eq let20 let20)
  let let723 := (Eq let14 let14)
  let let724 := (Eq let324 let324)
  let let725 := (Eq let205 let205)
  let let726 := (Eq let327 let327)
  let let727 := (Eq let195 let195)
  let let728 := (Eq let247 let247)
  let let729 := (Eq let189 let189)
  let let730 := (Eq let33 let33)
  let let731 := (Eq let78 let78)
  let let732 := (Eq let16 let16)
  let let733 := (Eq let22 let22)
  let let734 := (Eq let340 let340)
  let let735 := (Eq let343 let343)
  let let736 := (Eq let346 let346)
  let let737 := (Eq let349 let349)
  let let738 := (Eq let351 let351)
  let let739 := (Eq let4 let4)
  let let740 := (Eq let122 let122)
  let let741 := (Eq let1 let1)
  let let742 := (Eq let51 let51)
  let let743 := (Eq arg1 let232)
  let let744 := (And let487 (And let488 (And let489 (And let490 (And let491 (And let492 (And let493 (And let494 (And let495 let496)))))))))
  let let745 := (And let92 let744)
  let let746 := (Eq arg1 arg1)
  let let747 := (Eq arg0 arg0)
  let let748 := (Eq let12 let547)
  let let749 := (Eq arg1 let697)
  let let750 := (Eq let650 let697)
  let let751 := (Eq let647 let694)
  let let752 := (Eq let646 let693)
  let let753 := (Eq let601 let692)
  let let754 := (Eq let108 let566)
  let let755 := (Eq let649 let696)
  let let756 := (Eq let648 let695)
  let let757 := (Not let27)
  let let758 := (Not let16)
  let let759 := (Or let758 let757)
  let let760 := (Not let33)
  let let761 := (Or let758 (Or let760 let757))
  let let762 := (Not let20)
  let let763 := (Or let758 let762)
  let let764 := (Not let30)
  let let765 := (Or let762 let139)
  let let766 := (Or let363 let139)
  let let767 := (Or let762 let766)
  let let768 := (Eq let12 let7)
  let let769 := (Eq let12 let6)
  let let770 := (And let9 (And let769 let768))
  let let771 := (Implies let87 let770)
  let let772 := (Eq let770 False)
  let let773 := (Or (Not let768) False)
  let let774 := (Not let769)
  let let775 := (Eq let7 let12)
  let let776 := (Not let775)
  let let777 := (Or let776 False)
  let let778 := (binrel% HAdd.hAdd let85 let112)
  let let779 := (binrel% HAdd.hAdd let85 let778)
  let let780 := (binrel% HAdd.hAdd let74 (binrel% HAdd.hAdd let76 let104))
  let let781 := (binrel% LE.le let780 let779)
  let let782 := (binrel% LE.le let104 let112)
  let let783 := (And let72 let9)
  let let784 := (Implies let783 let782)
  let let785 := (Eq let76 let85)
  let let786 := (Eq let6 let12)
  let let787 := (And let70 let786)
  let let788 := (Implies let787 let785)
  let let789 := (Eq let74 let85)
  let let790 := (And let70 let775)
  let let791 := (Implies let790 let789)
  let let792 := (And let165 let16)
  let let793 := (Implies let792 let768)
  let let794 := (Or let758 let768)
  let let795 := (Not let165)
  let let796 := (Or let795 let794)
  let let797 := (Eq let15 let7)
  let let798 := (Eq let5 let12)
  let let799 := (Eq let12 let15)
  let let800 := (Eq let2 let165)
  let let801 := (And let165 let20)
  let let802 := (Implies let801 let769)
  let let803 := (Or let762 let769)
  let let804 := (Or let795 let803)
  let let805 := (Eq let13 let6)
  let let806 := (Eq let12 let13)
  let let807 := (Not let360)
  let let808 := (Or let807 (Or let63 (Or let2 let27)))
  let let809 := (Or let807 (Or let66 (Or let140 let27)))
  let let810 := (And let360 (And let64 let139))
  let let811 := (Eq let26 fmt1)
  let let812 := (And let360 (And let139 let64))
  let let813 := (Or let764 let757)
  let let814 := (Or let762 let813)
  let let815 := (Or let758 let814)
  let let816 := (Or let760 let814)
  let let817 := (Or let363 let757)
  let let818 := (Or let764 let817)
  let let819 := (Or let760 let818)
  let let820 := (Or let762 let819)
  let let821 := (Implies let557 let770)
  let let822 := (And let371 (And let33 let16))
  let let823 := (Implies let822 let768)
  let let824 := (Not let371)
  let let825 := (Or let824 (Or let760 let794))
  let let826 := (Eq let32 let7)
  let let827 := (Eq let5 let11)
  let let828 := (Eq let27 let371)
  let let829 := (And let371 (And let30 let20))
  let let830 := (Implies let829 let769)
  let let831 := (Or let824 (Or let764 let803))
  let let832 := (Eq let29 let6)
  let let833 := (Not let335)
  let let834 := (Not let78)
  let let835 := (Eq let11 let7)
  let let836 := (And let9 (And let769 let835))
  let let837 := (Implies let79 let836)
  let let838 := (Eq let836 False)
  let let839 := (Eq let7 let11)
  let let840 := (Not let839)
  let let841 := (binrel% HAdd.hAdd let180 let778)
  let let842 := (binrel% LE.le let780 let841)
  let let843 := (Eq let74 let180)
  let let844 := (And let70 let839)
  let let845 := (Or let764 (Or let363 (Or let757 let836)))
  let let846 := (Eq let11 let32)
  let let847 := (And let371 let846)
  let let848 := (And let78 let16)
  let let849 := (Not let53)
  let let850 := (Eq let11 let6)
  let let851 := (And let9 (And let850 let768))
  let let852 := (Implies let54 let851)
  let let853 := (Eq let851 False)
  let let854 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let180 let112))
  let let855 := (binrel% LE.le let780 let854)
  let let856 := (Eq let76 let180)
  let let857 := (Eq let6 let11)
  let let858 := (And let70 let857)
  let let859 := (Or let363 (Or let757 let851))
  let let860 := (Eq let11 let29)
  let let861 := (And let371 let860)
  let let862 := (And let53 let20)
  let let863 := (Not let319)
  let let864 := (Not let322)
  let let865 := (Not let258)
  let let866 := (Not let318)
  let let867 := (Or let865 let866)
  let let868 := (Implies let258 let866)
  let let869 := (Eq let318 False)
  let let870 := (Not let14)
  let let871 := (Implies let376 let851)
  let let872 := (And let371 (And let30 let14))
  let let873 := (Or let870 let850)
  let let874 := (Eq let11 let13)
  let let875 := (Not let317)
  let let876 := (Not let334)
  let let877 := (Or let875 let876)
  let let878 := (Implies let317 let876)
  let let879 := (Not let337)
  let let880 := (Not let252)
  let let881 := (Or let880 let879)
  let let882 := (Or let880 let865)
  let let883 := (Implies let252 let865)
  let let884 := (Or let880 let866)
  let let885 := (Implies let252 let866)
  let let886 := (Or let318 let258)
  let let887 := (Not let22)
  let let888 := (Implies let36 let836)
  let let889 := (And let371 (And let33 let22))
  let let890 := (Or let887 let835)
  let let891 := (Eq let11 let15)
  let let892 := (Implies let23 let836)
  let let893 := (And let165 let22)
  let let894 := (Implies let17 let851)
  let let895 := (And let165 let14)
fun lean_r0 : (Eq let19 let18) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq let25 let24) => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq let38 let37) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let43 let42) => -- THEORY_REWRITE_BOOL
fun lean_r4 : let43 => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let47 let46) => -- THEORY_REWRITE_BOOL
fun lean_r6 : let47 => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let50 let49) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let56 let55) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let62 let57) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let65 let64) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let68 let67) => -- THEORY_REWRITE_BOOL
fun lean_r12 : let68 => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let69 True) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let70 True) => -- EVALUATE
fun lean_r15 : (Eq let72 True) => -- EVALUATE
fun lean_r16 : (Eq let74 let73) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let76 let75) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let81 let80) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let84 let59) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let85 let59) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let86 False) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let89 let88) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let94 let92) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let99 let98) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let103 let102) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let104 let83) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let106 let105) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let111 let110) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let112 let58) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let116 let115) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let121 let118) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let117 let122) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let124 let123) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let129 let128) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let130 let4) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let133 let132) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let135 let134) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let136 let57) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let138 let137) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let142 let141) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let144 let143) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let145 True) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let147 let146) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let150 let149) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let152 let151) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let155 let154) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let157 let156) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let159 let158) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let162 let161) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let164 let163) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let165 let2) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let168 let167) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let170 let169) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let174 let173) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let176 let78) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let178 let177) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let179 let33) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let180 let61) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let182 let181) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let184 let183) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let187 let186) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let191 let189) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let100 let51) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let193 let192) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let197 let195) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let201 let200) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let203 let202) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let206 let205) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let208 let207) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let210 let209) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let212 let211) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let214 let213) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let215 let26) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let218 let217) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let220 let219) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let224 let223) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let216 let225) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let227 let226) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let228 let190) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let233 let9) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let235 let234) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let237 let236) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let238 True) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let240 let239) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let242 let241) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let243 True) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let245 let244) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let102 let246) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let248 let247) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let249 let90) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let251 let250) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let253 let252) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let255 let254) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let257 let256) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let259 let258) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let260 let260) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let261 let3) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let264 let263) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let265 let58) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let270 let268) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let273 let271) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let277 let276) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let362 let361) => -- THEORY_REWRITE_BOOL
fun lean_r105 : (Eq let365 let363) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let367 let366) => -- THEORY_REWRITE_ARITH
fun lean_r107 : let369 => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let370 let317) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let371 let27) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let372 let286) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let373 True) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let374 let341) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let375 True) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let378 let377) => -- THEORY_REWRITE_BOOL
fun lean_r115 : (Eq let379 let267) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq let380 let380) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let382 let53) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let386 let385) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let387 let387) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let389 let388) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let390 let356) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let391 let280) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let392 let354) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let498 let497) => -- THEORY_REWRITE_BOOL
fun lean_r125 : (Eq let502 let501) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let503 let355) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let464 let175) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let507 let506) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let447 let508) => -- THEORY_REWRITE_ARITH
fun lean_r130 : let509 => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let452 let324) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let510 let288) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let511 let364) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let446 let512) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let457 let196) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let513 let291) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let478 let514) => -- THEORY_REWRITE_BOOL
fun lean_r138 : (Eq let515 let331) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let414 let516) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let517 let352) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let518 let232) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let519 let328) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let456 let327) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let520 False) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let521 let344) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let418 let522) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let476 let523) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let524 let321) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let525 let291) => -- THEORY_REWRITE_BOOL
fun lean_r150 : (Eq let526 let1) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let427 let527) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let383 let121) => -- THEORY_REWRITE_ARITH
fun lean_r153 : let528 => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let473 let529) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let408 let530) => -- THEORY_REWRITE_BOOL
fun lean_r156 : (Eq let531 let308) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let470 let532) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let534 let533) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let535 let347) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let537 let536) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let538 let11) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq let542 let541) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let430 let305) => -- THEORY_REWRITE_ARITH
fun lean_r164 : (Eq let543 True) => -- THEORY_REWRITE_BOOL
fun lean_r165 : let545 => -- THEORY_REWRITE_ARITH
fun lean_r166 : (Eq let546 let300) => -- THEORY_REWRITE_ARITH
fun lean_r167 : let50 => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let544 let544) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let547 let93) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let548 let301) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let433 let549) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let483 let550) => -- THEORY_REWRITE_ARITH
fun lean_r173 : (Eq let551 let350) => -- THEORY_REWRITE_ARITH
fun lean_r174 : (Eq let393 let221) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let472 let552) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let407 let553) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq let554 let307) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let437 let311) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let555 let353) => -- THEORY_REWRITE_ARITH
fun lean_r180 : (Eq let556 let313) => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq let559 let558) => -- THEORY_REWRITE_BOOL
fun lean_r182 : (Eq let438 let560) => -- THEORY_REWRITE_ARITH
fun lean_r183 : (Eq let113 let269) => -- THEORY_REWRITE_ARITH
fun lean_r184 : (Eq let561 let314) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq let563 let5) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let485 let565) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let566 let12) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq let567 let272) => -- THEORY_REWRITE_ARITH
fun lean_r189 : (Eq let499 let91) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq let568 False) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let571 let570) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let573 let572) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq let475 let574) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let575 let9) => -- THEORY_REWRITE_BOOL
fun lean_r195 : (Eq let474 let576) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let579 let578) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq let580 let364) => -- THEORY_REWRITE_ARITH
fun lean_r198 : let142 => -- THEORY_REWRITE_BOOL
fun lean_r199 : (Eq let477 let581) => -- THEORY_REWRITE_ARITH
fun lean_r200 : (Eq let582 True) => -- THEORY_REWRITE_ARITH
fun lean_r201 : (Eq let583 let12) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let584 let334) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq let585 True) => -- THEORY_REWRITE_ARITH
fun lean_r204 : (Eq let586 True) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq let587 let342) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq let588 True) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let416 let589) => -- THEORY_REWRITE_ARITH
fun lean_r208 : (Eq let396 let539) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let591 let306) => -- THEORY_REWRITE_ARITH
fun lean_r210 : let593 => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let399 let504) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq let593 let594) => -- THEORY_REWRITE_BOOL
fun lean_r213 : (Eq let562 fmt1) => -- THEORY_REWRITE_ARITH
fun lean_r214 : (Eq let403 let595) => -- THEORY_REWRITE_ARITH
fun lean_r215 : (Eq let471 let596) => -- THEORY_REWRITE_ARITH
fun lean_r216 : (Eq let597 let63) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq let404 let274) => -- THEORY_REWRITE_ARITH
fun lean_r218 : (Eq let598 let318) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq let411 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let599 True) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq let422 let600) => -- THEORY_REWRITE_BOOL
fun lean_r222 : (Eq let602 let601) => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let603 let345) => -- THEORY_REWRITE_ARITH
fun lean_r224 : (Eq let423 let298) => -- THEORY_REWRITE_ARITH
fun lean_r225 : (Eq let605 let299) => -- THEORY_REWRITE_ARITH
fun lean_r226 : (Eq let607 let606) => -- THEORY_REWRITE_ARITH
fun lean_r227 : (Eq let608 let5) => -- THEORY_REWRITE_ARITH
fun lean_r228 : (Eq let609 let348) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq let424 let604) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq let426 let610) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq let431 let590) => -- THEORY_REWRITE_ARITH
fun lean_r232 : (Eq let434 let611) => -- THEORY_REWRITE_ARITH
fun lean_r233 : (Eq let612 True) => -- THEORY_REWRITE_ARITH
fun lean_r234 : (Eq let613 let312) => -- THEORY_REWRITE_ARITH
fun lean_r235 : (Eq let440 let614) => -- THEORY_REWRITE_ARITH
fun lean_r236 : (Eq let615 let283) => -- THEORY_REWRITE_ARITH
fun lean_r237 : (Eq let443 let30) => -- THEORY_REWRITE_ARITH
fun lean_r238 : (Eq let444 let381) => -- THEORY_REWRITE_ARITH
fun lean_a239 : let498 => by
have lean_s0 : (Or let758 (Or let870 (Or let363 (Or let139 let851)))) :=
  (scope (fun lean_a240 : let16 =>
    (scope (fun lean_a241 : let14 =>
      (scope (fun lean_a242 : let9 =>
        (scope (fun lean_a243 : let2 =>
          have lean_s0 : let800 := by timed Eq.symm lean_r51
          have lean_s1 : let165 := by timed eqResolve lean_a243 lean_s0
          have lean_s2 : let895 := by timed And.intro lean_s1 lean_a241
          have lean_s3 : (Or let795 let873) :=
            (scope (fun lean_a244 : let165 =>
              (scope (fun lean_a245 : let14 =>
                have lean_s3 : let874 := by timed Eq.symm lean_a245
                have lean_s4 : let798 := by timed Eq.symm lean_a244
                have lean_s5 : let165 := by timed Eq.symm lean_s4
                have lean_s6 : let805 := by timed flipCongrArg lean_s5 [xx5fcount]
                have lean_s7 : let850 := by timed Eq.trans lean_s3 lean_s6
                show let850 from lean_s7
            ))))
          have lean_s4 : (Implies let895 let850) := by liftOrNToImp lean_s3, 2
          have lean_s5 : let850 := by timed modusPonens lean_s2 lean_s4
          have lean_s6 : let792 := by timed And.intro lean_s1 lean_a240
          have lean_s7 : let796 :=
            (scope (fun lean_a245 : let165 =>
              (scope (fun lean_a246 : let16 =>
                have lean_s7 : let799 := by timed Eq.symm lean_a246
                have lean_s8 : let798 := by timed Eq.symm lean_a245
                have lean_s9 : let165 := by timed Eq.symm lean_s8
                have lean_s10 : let797 := by timed flipCongrArg lean_s9 [sx5fcount]
                have lean_s11 : let768 := by timed Eq.trans lean_s7 lean_s10
                show let768 from lean_s11
            ))))
          have lean_s8 : let793 := by liftOrNToImp lean_s7, 2
          have lean_s9 : let768 := by timed modusPonens lean_s6 lean_s8
          let lean_s10 := by timed And.intro lean_s5 lean_s9
          have lean_s11 : let851 := by timed And.intro lean_a242 lean_s10
          show let851 from lean_s11
  ))))))))
have lean_s1 : let894 := by liftOrNToImp lean_s0, 4
have lean_s2 : (Eq let17 let17) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or let363 (Or (Not let850) let773)) :=
  (scope (fun lean_a245 : let9 =>
    (scope (fun lean_a246 : let850 =>
      (scope (fun lean_a247 : let768 =>
        have lean_s4 : let775 := by timed Eq.symm lean_a247
        have lean_s5 : let777 :=
          (scope (fun lean_a247 : let775 =>
            have lean_s5 : let70 := by timed trueElim lean_r14
            have lean_s6 : let790 := by timed And.intro lean_s5 lean_a247
            have lean_s7 : let791 := by arithMulPos [let7, let12, let61], 4
            have lean_s8 : let789 := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : let857 := by timed Eq.symm lean_a246
            have lean_s10 : let858 := by timed And.intro lean_s5 lean_s9
            have lean_s11 : (Implies let858 let856) := by arithMulPos [let6, let11, let61], 4
            have lean_s12 : let856 := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : let72 := by timed trueElim lean_r15
            have lean_s14 : let783 := by timed And.intro lean_s13 lean_a245
            have lean_s15 : let784 := by arithMulNeg [let8, let3, let71], 3
            have lean_s16 : let782 := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : let855 := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r17 lean_r26
            have lean_s19 : (Eq let780 let84) := by timed congrHAdd lean_r16 lean_s18
            have lean_s20 : (Eq let780 let59) := by timed Eq.trans lean_s19 lean_r19
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r59 lean_r29
            have lean_s23 : (Eq let854 let136) := by timed congrHAdd lean_r20 lean_s22
            have lean_s24 : (Eq let854 let57) := by timed Eq.trans lean_s23 lean_r38
            have lean_s25 : (Eq let855 let568) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let855 False) := by timed Eq.trans lean_s25 lean_r190
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : let776 := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not let851) := by liftOrNToNeg lean_s4
have lean_s6 : let853 := by timed falseIntro lean_s5
have lean_s7 : (Eq let894 let19) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let894 let18) := by timed Eq.trans lean_s7 lean_r0
have lean_s9 : let18 := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or let758 (Or let870 let766)) := by timed flipNotAnd lean_s9 [let16, let14, let9, let2]
have lean_s11 : (Or let363 (Or let758 (Or let870 let139))) := by permutateOr lean_s10, [2, 0, 1, 3], (- 1)
have lean_s12 : let711 := by timed rfl
have lean_s13 : (Eq let496 let496) := by timed rfl
let lean_s14 := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq let495 let495) := by timed rfl
let lean_s16 := by timed congr lean_s12 lean_s15
have lean_s17 : (Eq let494 let494) := by timed rfl
let lean_s18 := by timed congr lean_s12 lean_s17
have lean_s19 : (Eq let493 let493) := by timed rfl
let lean_s20 := by timed congr lean_s12 lean_s19
have lean_s21 : (Eq let492 let492) := by timed rfl
let lean_s22 := by timed congr lean_s12 lean_s21
have lean_s23 : (Eq let491 let491) := by timed rfl
let lean_s24 := by timed congr lean_s12 lean_s23
have lean_s25 : (Eq let490 let490) := by timed rfl
let lean_s26 := by timed congr lean_s12 lean_s25
have lean_s27 : (Eq let489 let489) := by timed rfl
let lean_s28 := by timed congr lean_s12 lean_s27
have lean_s29 : (Eq let488 let488) := by timed rfl
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq let487 let487) := by timed rfl
let lean_s32 := by timed congr lean_s12 lean_s31
have lean_s33 : let747 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let486 let182) := by timed congr lean_s34 lean_r57
have lean_s36 : (Eq let486 let181) := by timed Eq.trans lean_s35 lean_r60
let lean_s37 := by timed congr lean_s12 lean_s36
let lean_s38 := by timed congr lean_s12 lean_r24
have lean_s39 : let712 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [GE.ge]
have lean_s41 : (Eq fmt0 fmt0) := by timed rfl
have lean_s42 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s43 := by timed congrHAdd lean_s42 lean_r64
have lean_s44 : (Eq let246 let106) := by timed congrHAdd lean_s41 lean_s43
have lean_s45 : (Eq let246 let105) := by timed Eq.trans lean_s44 lean_r27
have lean_s46 : (Eq let102 let105) := by timed Eq.trans lean_r89 lean_s45
have lean_s47 : (Eq let103 let105) := by timed Eq.trans lean_r25 lean_s46
have lean_s48 : (Eq let185 let111) := by timed congr lean_s40 lean_s47
have lean_s49 : (Eq let185 let110) := by timed Eq.trans lean_s48 lean_r28
have lean_s50 : (Eq let186 let653) := by timed flipCongrArg lean_s49 [Not]
have lean_s51 : (Eq let187 let653) := by timed Eq.trans lean_r62 lean_s50
let lean_s52 := by timed congr lean_s12 lean_s51
let lean_s53 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s54 : (Eq let114 let270) := by timed congr lean_s53 lean_r183
have lean_s55 : (Eq let114 let268) := by timed Eq.trans lean_s54 lean_r101
have lean_s56 : (Eq let115 let379) := by timed flipCongrArg lean_s55 [Not]
have lean_s57 : (Eq let115 let267) := by timed Eq.trans lean_s56 lean_r115
have lean_s58 : (Eq let116 let267) := by timed Eq.trans lean_r30 lean_s57
let lean_s59 := by timed congr lean_s12 lean_s58
let lean_s60 := by timed congr lean_s12 lean_r186
have lean_s61 : let746 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq distance distance) := by timed rfl
let lean_s64 := by timed congrHAdd lean_s42 lean_r32
let lean_s65 := by timed congrHAdd lean_s63 lean_s64
have lean_s66 : (Eq let118 let124) := by timed congrHAdd lean_s33 lean_s65
have lean_s67 : (Eq let118 let123) := by timed Eq.trans lean_s66 lean_r33
have lean_s68 : (Eq let121 let123) := by timed Eq.trans lean_r31 lean_s67
have lean_s69 : (Eq let383 let123) := by timed Eq.trans lean_r152 lean_s68
have lean_s70 : (Eq let384 let129) := by timed congr lean_s62 lean_s69
have lean_s71 : (Eq let384 let128) := by timed Eq.trans lean_s70 lean_r34
have lean_s72 : (Eq let385 let652) := by timed flipCongrArg lean_s71 [Not]
have lean_s73 : (Eq let386 let652) := by timed Eq.trans lean_r118 lean_s72
let lean_s74 := by timed congr lean_s12 lean_s73
let lean_s75 := by timed flipCongrArg lean_s61 [Eq]
have lean_s76 : let588 := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [HMul.hMul]
let lean_s78 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s79 : (Eq let225 let608) := by timed congr lean_s78 lean_r35
have lean_s80 : (Eq let225 let5) := by timed Eq.trans lean_s79 lean_r227
have lean_s81 : (Eq let216 let5) := by timed Eq.trans lean_r78 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let108 let108) := by timed rfl
have lean_s84 : (Eq let217 let602) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let217 let601) := by timed Eq.trans lean_s84 lean_r222
have lean_s86 : (Eq let218 let601) := by timed Eq.trans lean_r75 lean_s85
have lean_s87 : (Eq let481 let648) := by timed flipCongrArg lean_s86 [sx5fcount]
have lean_s88 : (Eq let482 let649) := by timed congr lean_s77 lean_s87
let lean_s89 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s90 : (Eq let479 let646) := by timed flipCongrArg lean_s86 [xx5fcount]
have lean_s91 : (Eq let480 let647) := by timed congr lean_s89 lean_s90
let lean_s92 := by timed congrHAdd lean_s88 lean_s91
have lean_s93 : (Eq let550 let650) := by timed congrHAdd lean_s33 lean_s92
have lean_s94 : (Eq let483 let650) := by timed Eq.trans lean_r172 lean_s93
have lean_s95 : (Eq let484 let651) := by timed congr lean_s75 lean_s94
let lean_s96 := by timed congr lean_s12 lean_s95
have lean_s97 : let713 := by timed rfl
let lean_s98 := by timed congr lean_s97 lean_r70
let lean_s99 := by timed congr lean_s97 lean_r36
let lean_s100 := by timed congr lean_s97 lean_r37
let lean_s101 := by timed congr lean_s97 lean_r39
let lean_s102 := by timed congr lean_s97 lean_r41
let lean_s103 := by timed congr lean_s97 lean_r199
let lean_s104 := by timed congr lean_s97 lean_r43
have lean_s105 : let738 := by timed rfl
let lean_s106 := by timed congr lean_s97 lean_s105
let lean_s107 := by timed congr lean_s97 lean_r129
let lean_s108 := by timed congr lean_s97 lean_r54
let lean_s109 := by timed congr lean_s97 lean_r71
let lean_s110 := by timed congr lean_s97 lean_r147
let lean_s111 := by timed congr lean_s97 lean_r95
let lean_s112 := by timed congr lean_s97 lean_r44
let lean_s113 := by timed congr lean_s97 lean_r45
have lean_s114 : let737 := by timed rfl
let lean_s115 := by timed congr lean_s97 lean_s114
let lean_s116 := by timed congr lean_s97 lean_r235
let lean_s117 := by timed congr lean_s97 lean_r55
let lean_s118 := by timed congr lean_s97 lean_r134
let lean_s119 := by timed congr lean_s97 lean_r46
let lean_s120 := by timed congr lean_s97 lean_r47
let lean_s121 := by timed congr lean_s97 lean_r193
let lean_s122 := by timed congr lean_s97 lean_r48
have lean_s123 : let736 := by timed rfl
let lean_s124 := by timed congr lean_s97 lean_s123
let lean_s125 := by timed congr lean_s97 lean_r232
let lean_s126 := by timed congr lean_s97 lean_r61
let lean_s127 := by timed congr lean_s97 lean_r120
let lean_s128 := by timed congr lean_s97 lean_r195
let lean_s129 := by timed congr lean_s97 lean_r49
let lean_s130 := by timed congr lean_s97 lean_r154
let lean_s131 := by timed congr lean_s97 lean_r175
have lean_s132 : let735 := by timed rfl
let lean_s133 := by timed congr lean_s97 lean_s132
let lean_s134 := by timed congr lean_s97 lean_r151
let lean_s135 := by timed congr lean_s97 lean_r65
let lean_s136 := by timed congr lean_s97 lean_r171
let lean_s137 := by timed congr lean_s97 lean_r215
let lean_s138 := by timed congr lean_s97 lean_r52
let lean_s139 := by timed congr lean_s97 lean_r157
let lean_s140 := by timed congr lean_s97 lean_r53
have lean_s141 : let734 := by timed rfl
let lean_s142 := by timed congr lean_s140 lean_s141
let lean_s143 := by timed congr lean_s139 lean_s142
let lean_s144 := by timed congr lean_s138 lean_s143
let lean_s145 := by timed congr lean_s137 lean_s144
let lean_s146 := by timed congr lean_s136 lean_s145
let lean_s147 := by timed congr lean_s135 lean_s146
let lean_s148 := by timed congr lean_s134 lean_s147
let lean_s149 := by timed congr lean_s133 lean_s148
let lean_s150 := by timed congr lean_s131 lean_s149
let lean_s151 := by timed congr lean_s130 lean_s150
let lean_s152 := by timed congr lean_s129 lean_s151
let lean_s153 := by timed congr lean_s128 lean_s152
let lean_s154 := by timed congr lean_s127 lean_s153
let lean_s155 := by timed congr lean_s126 lean_s154
let lean_s156 := by timed congr lean_s125 lean_s155
let lean_s157 := by timed congr lean_s124 lean_s156
let lean_s158 := by timed congr lean_s122 lean_s157
let lean_s159 := by timed congr lean_s121 lean_s158
let lean_s160 := by timed congr lean_s120 lean_s159
let lean_s161 := by timed congr lean_s119 lean_s160
let lean_s162 := by timed congr lean_s118 lean_s161
let lean_s163 := by timed congr lean_s117 lean_s162
let lean_s164 := by timed congr lean_s116 lean_s163
let lean_s165 := by timed congr lean_s115 lean_s164
let lean_s166 := by timed congr lean_s113 lean_s165
let lean_s167 := by timed congr lean_s112 lean_s166
let lean_s168 := by timed congr lean_s111 lean_s167
let lean_s169 := by timed congr lean_s110 lean_s168
let lean_s170 := by timed congr lean_s109 lean_s169
let lean_s171 := by timed congr lean_s108 lean_s170
let lean_s172 := by timed congr lean_s107 lean_s171
let lean_s173 := by timed congr lean_s106 lean_s172
let lean_s174 := by timed congr lean_s104 lean_s173
let lean_s175 := by timed congr lean_s103 lean_s174
let lean_s176 := by timed congr lean_s102 lean_s175
let lean_s177 := by timed congr lean_s101 lean_s176
let lean_s178 := by timed congr lean_s100 lean_s177
let lean_s179 := by timed congr lean_s99 lean_s178
have lean_s180 : (Eq let514 let645) := by timed congr lean_s98 lean_s179
have lean_s181 : (Eq let478 let645) := by timed Eq.trans lean_r137 lean_s180
let lean_s182 := by timed congr lean_s12 lean_s181
let lean_s183 := by timed flipCongrArg lean_r70 [And]
have lean_s184 : (Eq let468 let643) := by timed congr lean_s183 lean_r54
have lean_s185 : let733 := by timed rfl
have lean_s186 : let732 := by timed rfl
have lean_s187 : (Eq let469 let644) := by timed congrIte lean_s184 lean_s185 lean_s186
let lean_s188 := by timed congr lean_s12 lean_s187
let lean_s189 := by timed flipCongrArg lean_r129 [And]
have lean_s190 : (Eq let466 let641) := by timed congr lean_s189 lean_r55
have lean_s191 : (Eq let32 let32) := by timed rfl
let lean_s192 := by timed flipCongrArg lean_s191 [Eq]
have lean_s193 : (Eq let465 let176) := by timed congr lean_s192 lean_r127
have lean_s194 : (Eq let465 let78) := by timed Eq.trans lean_s193 lean_r56
have lean_s195 : (Eq let467 let642) := by timed congrIte lean_s190 lean_s194 lean_r58
let lean_s196 := by timed congr lean_s12 lean_s195
let lean_s197 := by timed flipCongrArg lean_r235 [And]
have lean_s198 : (Eq let462 let639) := by timed congr lean_s197 lean_r61
have lean_s199 : (Eq let188 let188) := by timed rfl
let lean_s200 := by timed flipCongrArg lean_s199 [Eq]
have lean_s201 : (Eq let461 let191) := by timed congr lean_s200 lean_r80
have lean_s202 : (Eq let461 let189) := by timed Eq.trans lean_s201 lean_r63
have lean_s203 : (Eq let463 let640) := by timed congrIte lean_s198 lean_s202 lean_r90
let lean_s204 := by timed congr lean_s12 lean_s203
let lean_s205 := by timed flipCongrArg lean_r232 [And]
have lean_s206 : (Eq let459 let637) := by timed congr lean_s205 lean_r65
have lean_s207 : (Eq let194 let194) := by timed rfl
let lean_s208 := by timed flipCongrArg lean_s207 [Eq]
have lean_s209 : (Eq let458 let197) := by timed congr lean_s208 lean_r135
have lean_s210 : (Eq let458 let195) := by timed Eq.trans lean_s209 lean_r66
have lean_s211 : (Eq let460 let638) := by timed congrIte lean_s206 lean_s210 lean_r143
let lean_s212 := by timed congr lean_s12 lean_s211
let lean_s213 := by timed flipCongrArg lean_r151 [And]
have lean_s214 : (Eq let454 let635) := by timed congr lean_s213 lean_r67
have lean_s215 : (Eq let204 let204) := by timed rfl
let lean_s216 := by timed flipCongrArg lean_s215 [Eq]
have lean_s217 : (Eq let453 let206) := by timed congr lean_s216 lean_r68
have lean_s218 : (Eq let453 let205) := by timed Eq.trans lean_s217 lean_r69
have lean_s219 : (Eq let455 let636) := by timed congrIte lean_s214 lean_s218 lean_r131
let lean_s220 := by timed congr lean_s12 lean_s219
let lean_s221 := by timed flipCongrArg lean_r70 [And]
have lean_s222 : (Eq let450 let633) := by timed congr lean_s221 lean_r71
have lean_s223 : let723 := by timed rfl
have lean_s224 : let722 := by timed rfl
have lean_s225 : (Eq let451 let634) := by timed congrIte lean_s222 lean_s223 lean_s224
let lean_s226 := by timed congr lean_s12 lean_s225
let lean_s227 := by timed flipCongrArg lean_r129 [And]
have lean_s228 : (Eq let448 let631) := by timed congr lean_s227 lean_r134
have lean_s229 : (Eq let29 let29) := by timed rfl
let lean_s230 := by timed flipCongrArg lean_s229 [Eq]
have lean_s231 : (Eq let445 let382) := by timed congr lean_s230 lean_r238
have lean_s232 : (Eq let445 let53) := by timed Eq.trans lean_s231 lean_r117
have lean_s233 : (Eq let449 let632) := by timed congrIte lean_s228 lean_s232 lean_r237
let lean_s234 := by timed congr lean_s12 lean_s233
let lean_s235 := by timed flipCongrArg lean_r235 [And]
have lean_s236 : (Eq let441 let629) := by timed congr lean_s235 lean_r120
have lean_s237 : (Eq let304 let304) := by timed rfl
let lean_s238 := by timed flipCongrArg lean_s237 [Eq]
have lean_s239 : (Eq let439 let613) := by timed congr lean_s238 lean_r182
have lean_s240 : (Eq let439 let312) := by timed Eq.trans lean_s239 lean_r234
have lean_s241 : (Eq let442 let630) := by timed congrIte lean_s236 lean_s240 lean_r178
let lean_s242 := by timed congr lean_s12 lean_s241
let lean_s243 := by timed flipCongrArg lean_r232 [And]
have lean_s244 : (Eq let435 let627) := by timed congr lean_s243 lean_r171
have lean_s245 : (Eq let297 let297) := by timed rfl
let lean_s246 := by timed flipCongrArg lean_s245 [Eq]
have lean_s247 : (Eq let432 let591) := by timed congr lean_s246 lean_r231
have lean_s248 : (Eq let432 let306) := by timed Eq.trans lean_s247 lean_r209
have lean_s249 : (Eq let436 let628) := by timed congrIte lean_s244 lean_s248 lean_r163
let lean_s250 := by timed congr lean_s12 lean_s249
let lean_s251 := by timed flipCongrArg lean_r151 [And]
have lean_s252 : (Eq let428 let625) := by timed congr lean_s251 lean_r230
have lean_s253 : (Eq let296 let296) := by timed rfl
let lean_s254 := by timed flipCongrArg lean_s253 [Eq]
have lean_s255 : (Eq let425 let605) := by timed congr lean_s254 lean_r229
have lean_s256 : (Eq let425 let299) := by timed Eq.trans lean_s255 lean_r225
have lean_s257 : (Eq let429 let626) := by timed congrIte lean_s252 lean_s256 lean_r224
let lean_s258 := by timed congr lean_s12 lean_s257
have lean_s259 : let713 := by timed rfl
let lean_s260 := by timed flipCongrArg lean_s39 [Eq]
have lean_s261 : (Eq let421 let623) := by timed congr lean_s260 lean_r219
let lean_s262 := by timed congr lean_s259 lean_s261
let lean_s263 := by timed flipCongrArg lean_s39 [Eq]
have lean_s264 : (Eq let420 let622) := by timed congr lean_s263 lean_r183
let lean_s265 := by timed congr lean_s259 lean_s264
let lean_s266 := by timed flipCongrArg lean_s39 [Eq]
have lean_s267 : (Eq let419 let621) := by timed congr lean_s266 lean_r146
let lean_s268 := by timed congr lean_s259 lean_s267
let lean_s269 := by timed flipCongrArg lean_s39 [Eq]
have lean_s270 : (Eq let417 let620) := by timed congr lean_s269 lean_r207
let lean_s271 := by timed congr lean_s259 lean_s270
let lean_s272 := by timed flipCongrArg lean_s39 [Eq]
have lean_s273 : (Eq let415 let619) := by timed congr lean_s272 lean_r139
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s268 lean_s274
let lean_s276 := by timed congr lean_s265 lean_s275
have lean_s277 : (Eq let600 let624) := by timed congr lean_s262 lean_s276
have lean_s278 : (Eq let422 let624) := by timed Eq.trans lean_r221 lean_s277
let lean_s279 := by timed congr lean_s12 lean_s278
let lean_s280 := by timed flipCongrArg lean_s61 [Eq]
have lean_s281 : (Eq let412 let367) := by timed congr lean_s280 lean_r219
have lean_s282 : (Eq let412 let366) := by timed Eq.trans lean_s281 lean_r106
let lean_s283 := by timed flipCongrArg lean_s282 [Or]
let lean_s284 := by timed flipCongrArg lean_s61 [Eq]
have lean_s285 : (Eq let410 let579) := by timed congr lean_s284 lean_r183
have lean_s286 : (Eq let410 let578) := by timed Eq.trans lean_s285 lean_r196
have lean_s287 : (Eq let413 let618) := by timed congr lean_s283 lean_s286
let lean_s288 := by timed congr lean_s12 lean_s287
have lean_s289 : let711 := by timed rfl
let lean_s290 := by timed congr lean_s289 lean_r176
have lean_s291 : (Eq let405 let275) := by timed flipCongrArg lean_r217 [selectx5fformat]
let lean_s292 := by timed flipCongrArg lean_s291 [Eq]
have lean_s293 : (Eq s s) := by timed rfl
have lean_s294 : (Eq let406 let534) := by timed congr lean_s292 lean_s293
have lean_s295 : (Eq let406 let533) := by timed Eq.trans lean_s294 lean_r158
let lean_s296 := by timed congr lean_s289 lean_s295
let lean_s297 := by timed congr lean_s289 lean_r214
have lean_s298 : (Eq let400 let505) := by timed flipCongrArg lean_r211 [selectx5fformat]
let lean_s299 := by timed flipCongrArg lean_s298 [Eq]
have lean_s300 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s301 : (Eq let401 let507) := by timed congr lean_s299 lean_s300
have lean_s302 : (Eq let401 let506) := by timed Eq.trans lean_s301 lean_r128
let lean_s303 := by timed congr lean_s289 lean_s302
have lean_s304 : (Eq let397 let540) := by timed flipCongrArg lean_r208 [selectx5fformat]
let lean_s305 := by timed flipCongrArg lean_s304 [Eq]
have lean_s306 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s307 : (Eq let398 let542) := by timed congr lean_s305 lean_s306
have lean_s308 : (Eq let398 let541) := by timed Eq.trans lean_s307 lean_r162
let lean_s309 := by timed congr lean_s289 lean_s308
have lean_s310 : (Eq let394 let222) := by timed flipCongrArg lean_r174 [selectx5fformat]
let lean_s311 := by timed flipCongrArg lean_s310 [Eq]
have lean_s312 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s313 : (Eq let395 let224) := by timed congr lean_s311 lean_s312
have lean_s314 : (Eq let395 let223) := by timed Eq.trans lean_s313 lean_r77
let lean_s315 := by timed congr lean_s309 lean_s314
let lean_s316 := by timed congr lean_s303 lean_s315
let lean_s317 := by timed congr lean_s297 lean_s316
let lean_s318 := by timed congr lean_s296 lean_s317
have lean_s319 : (Eq let530 let616) := by timed congr lean_s290 lean_s318
have lean_s320 : (Eq let408 let616) := by timed Eq.trans lean_r155 lean_s319
have lean_s321 : (Eq let409 let617) := by timed flipCongrArg lean_s320 [Not]
let lean_s322 := by timed congr lean_s288 lean_s321
let lean_s323 := by timed congr lean_s279 lean_s322
let lean_s324 := by timed congr lean_s258 lean_s323
let lean_s325 := by timed congr lean_s250 lean_s324
let lean_s326 := by timed congr lean_s242 lean_s325
let lean_s327 := by timed congr lean_s234 lean_s326
let lean_s328 := by timed congr lean_s226 lean_s327
let lean_s329 := by timed congr lean_s220 lean_s328
let lean_s330 := by timed congr lean_s212 lean_s329
let lean_s331 := by timed congr lean_s204 lean_s330
let lean_s332 := by timed congr lean_s196 lean_s331
let lean_s333 := by timed congr lean_s188 lean_s332
let lean_s334 := by timed congr lean_s182 lean_s333
let lean_s335 := by timed congr lean_s96 lean_s334
let lean_s336 := by timed congr lean_s74 lean_s335
let lean_s337 := by timed congr lean_s60 lean_s336
let lean_s338 := by timed congr lean_s59 lean_s337
let lean_s339 := by timed congr lean_s52 lean_s338
let lean_s340 := by timed congr lean_s38 lean_s339
let lean_s341 := by timed congr lean_s37 lean_s340
let lean_s342 := by timed congr lean_s32 lean_s341
let lean_s343 := by timed congr lean_s30 lean_s342
let lean_s344 := by timed congr lean_s28 lean_s343
let lean_s345 := by timed congr lean_s26 lean_s344
let lean_s346 := by timed congr lean_s24 lean_s345
let lean_s347 := by timed congr lean_s22 lean_s346
let lean_s348 := by timed congr lean_s20 lean_s347
let lean_s349 := by timed congr lean_s18 lean_s348
let lean_s350 := by timed congr lean_s16 lean_s349
have lean_s351 : (Eq let497 let654) := by timed congr lean_s14 lean_s350
have lean_s352 : (Eq let498 let654) := by timed Eq.trans lean_r124 lean_s351
have lean_s353 : let711 := by timed rfl
have lean_s354 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s355 : let651 := by andElim lean_s354, 16
have lean_s356 : let746 := by timed rfl
let lean_s357 := by timed flipCongrArg lean_s356 [Eq]
have lean_s358 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s359 : let181 := by andElim lean_s358, 10
have lean_s360 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s361 : let487 := by andElim lean_s360, 9
have lean_s362 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s363 : let488 := by andElim lean_s362, 8
have lean_s364 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s365 : let489 := by andElim lean_s364, 7
have lean_s366 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s367 : let490 := by andElim lean_s366, 6
have lean_s368 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s369 : let491 := by andElim lean_s368, 5
have lean_s370 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s371 : let492 := by andElim lean_s370, 4
have lean_s372 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s373 : let493 := by andElim lean_s372, 3
have lean_s374 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s375 : let494 := by andElim lean_s374, 2
have lean_s376 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s377 : let495 := by andElim lean_s376, 1
have lean_s378 : let654 := by timed eqResolve lean_a239 lean_s352
have lean_s379 : let496 := by andElim lean_s378, 0
let lean_s380 := by timed And.intro lean_s377 lean_s379
let lean_s381 := by timed And.intro lean_s375 lean_s380
let lean_s382 := by timed And.intro lean_s373 lean_s381
let lean_s383 := by timed And.intro lean_s371 lean_s382
let lean_s384 := by timed And.intro lean_s369 lean_s383
let lean_s385 := by timed And.intro lean_s367 lean_s384
let lean_s386 := by timed And.intro lean_s365 lean_s385
let lean_s387 := by timed And.intro lean_s363 lean_s386
have lean_s388 : let744 := by timed And.intro lean_s361 lean_s387
have lean_s389 : let487 := by andElim lean_s388, 0
let lean_s390 := by timed flipCongrArg lean_s389 [Eq]
have lean_s391 : let747 := by timed rfl
let lean_s392 := by timed flipCongrArg lean_s391 [HAdd.hAdd]
have lean_s393 : let496 := by andElim lean_s388, 9
have lean_s394 : (Eq let119 let547) := by timed congr lean_s392 lean_s393
have lean_s395 : (Eq let181 let748) := by timed congr lean_s390 lean_s394
have lean_s396 : let582 := by timed rfl
let lean_s397 := by timed flipCongrArg lean_s396 [Eq]
have lean_s398 : (Eq let748 let94) := by timed congr lean_s397 lean_r169
have lean_s399 : (Eq let748 let92) := by timed Eq.trans lean_s398 lean_r23
have lean_s400 : (Eq let181 let92) := by timed Eq.trans lean_s395 lean_s399
have lean_s401 : let92 := by timed eqResolve lean_s359 lean_s400
let lean_s402 := by timed And.intro lean_s377 lean_s379
let lean_s403 := by timed And.intro lean_s375 lean_s402
let lean_s404 := by timed And.intro lean_s373 lean_s403
let lean_s405 := by timed And.intro lean_s371 lean_s404
let lean_s406 := by timed And.intro lean_s369 lean_s405
let lean_s407 := by timed And.intro lean_s367 lean_s406
let lean_s408 := by timed And.intro lean_s365 lean_s407
let lean_s409 := by timed And.intro lean_s363 lean_s408
let lean_s410 := by timed And.intro lean_s361 lean_s409
have lean_s411 : let745 := by timed And.intro lean_s401 lean_s410
have lean_s412 : let92 := by andElim lean_s411, 0
have lean_s413 : let588 := by timed rfl
let lean_s414 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s415 : let739 := by timed rfl
have lean_s416 : let712 := by timed rfl
have lean_s417 : let742 := by timed rfl
let lean_s418 := by timed flipCongrArg lean_s417 [HMul.hMul]
have lean_s419 : let487 := by andElim lean_s411, 1
have lean_s420 : let754 := by timed congr lean_s418 lean_s419
let lean_s421 := by timed congrHAdd lean_s416 lean_s420
have lean_s422 : let753 := by timed congrHAdd lean_s415 lean_s421
have lean_s423 : let756 := by timed flipCongrArg lean_s422 [sx5fcount]
have lean_s424 : let755 := by timed congr lean_s414 lean_s423
let lean_s425 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s426 : let752 := by timed flipCongrArg lean_s422 [xx5fcount]
have lean_s427 : let751 := by timed congr lean_s425 lean_s426
let lean_s428 := by timed congrHAdd lean_s424 lean_s427
have lean_s429 : let750 := by timed congrHAdd lean_s412 lean_s428
have lean_s430 : (Eq let651 let749) := by timed congr lean_s357 lean_s429
let lean_s431 := by timed flipCongrArg lean_s61 [Eq]
have lean_s432 : (Eq let91 let91) := by timed rfl
let lean_s433 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s434 : let739 := by timed rfl
let lean_s435 := by timed congrHAdd lean_s39 lean_r187
have lean_s436 : (Eq let692 let563) := by timed congrHAdd lean_s434 lean_s435
have lean_s437 : (Eq let692 let5) := by timed Eq.trans lean_s436 lean_r185
have lean_s438 : (Eq let695 let7) := by timed flipCongrArg lean_s437 [sx5fcount]
have lean_s439 : (Eq let696 let230) := by timed congr lean_s433 lean_s438
let lean_s440 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s441 : (Eq let693 let6) := by timed flipCongrArg lean_s437 [xx5fcount]
have lean_s442 : (Eq let694 let229) := by timed congr lean_s440 lean_s441
let lean_s443 := by timed congrHAdd lean_s439 lean_s442
have lean_s444 : (Eq let697 let232) := by timed congrHAdd lean_s432 lean_s443
have lean_s445 : (Eq let749 let743) := by timed congr lean_s431 lean_s444
have lean_s446 : (Eq let651 let743) := by timed Eq.trans lean_s430 lean_s445
have lean_s447 : let743 := by timed eqResolve lean_s355 lean_s446
let lean_s448 := by timed And.intro lean_s377 lean_s379
let lean_s449 := by timed And.intro lean_s375 lean_s448
let lean_s450 := by timed And.intro lean_s373 lean_s449
let lean_s451 := by timed And.intro lean_s371 lean_s450
let lean_s452 := by timed And.intro lean_s369 lean_s451
let lean_s453 := by timed And.intro lean_s367 lean_s452
let lean_s454 := by timed And.intro lean_s365 lean_s453
let lean_s455 := by timed And.intro lean_s363 lean_s454
let lean_s456 := by timed And.intro lean_s361 lean_s455
let lean_s457 := by timed And.intro lean_s401 lean_s456
have lean_s458 : (And let743 let745) := by timed And.intro lean_s447 lean_s457
have lean_s459 : let496 := by andElim lean_s458, 11
let lean_s460 := by timed flipCongrArg lean_s459 [Eq]
have lean_s461 : let599 := by timed rfl
have lean_s462 : (Eq let496 let599) := by timed congr lean_s460 lean_s461
let lean_s463 := by timed congr lean_s353 lean_s462
have lean_s464 : let495 := by andElim lean_s458, 10
let lean_s465 := by timed flipCongrArg lean_s464 [Eq]
have lean_s466 : let585 := by timed rfl
have lean_s467 : (Eq let495 let585) := by timed congr lean_s465 lean_s466
let lean_s468 := by timed congr lean_s353 lean_s467
have lean_s469 : let494 := by andElim lean_s458, 9
let lean_s470 := by timed flipCongrArg lean_s469 [Eq]
have lean_s471 : let586 := by timed rfl
have lean_s472 : (Eq let494 let586) := by timed congr lean_s470 lean_s471
let lean_s473 := by timed congr lean_s353 lean_s472
have lean_s474 : let493 := by andElim lean_s458, 8
let lean_s475 := by timed flipCongrArg lean_s474 [Eq]
have lean_s476 : (Eq let493 let585) := by timed congr lean_s475 lean_s466
let lean_s477 := by timed congr lean_s353 lean_s476
have lean_s478 : let492 := by andElim lean_s458, 7
let lean_s479 := by timed flipCongrArg lean_s478 [Eq]
have lean_s480 : let588 := by timed rfl
have lean_s481 : (Eq let492 let588) := by timed congr lean_s479 lean_s480
let lean_s482 := by timed congr lean_s353 lean_s481
have lean_s483 : let491 := by andElim lean_s458, 6
let lean_s484 := by timed flipCongrArg lean_s483 [Eq]
have lean_s485 : let243 := by timed rfl
have lean_s486 : (Eq let491 let243) := by timed congr lean_s484 lean_s485
let lean_s487 := by timed congr lean_s353 lean_s486
have lean_s488 : let490 := by andElim lean_s458, 5
let lean_s489 := by timed flipCongrArg lean_s488 [Eq]
have lean_s490 : let238 := by timed rfl
have lean_s491 : (Eq let490 let238) := by timed congr lean_s489 lean_s490
let lean_s492 := by timed congr lean_s353 lean_s491
have lean_s493 : let489 := by andElim lean_s458, 4
let lean_s494 := by timed flipCongrArg lean_s493 [Eq]
have lean_s495 : let373 := by timed rfl
have lean_s496 : (Eq let489 let373) := by timed congr lean_s494 lean_s495
let lean_s497 := by timed congr lean_s353 lean_s496
have lean_s498 : let488 := by andElim lean_s458, 3
let lean_s499 := by timed flipCongrArg lean_s498 [Eq]
have lean_s500 : let375 := by timed rfl
have lean_s501 : (Eq let488 let375) := by timed congr lean_s499 lean_s500
let lean_s502 := by timed congr lean_s353 lean_s501
have lean_s503 : let487 := by andElim lean_s458, 2
let lean_s504 := by timed flipCongrArg lean_s503 [Eq]
have lean_s505 : let582 := by timed rfl
have lean_s506 : (Eq let487 let582) := by timed congr lean_s504 lean_s505
let lean_s507 := by timed congr lean_s353 lean_s506
let lean_s508 := by timed flipCongrArg lean_s503 [Eq]
have lean_s509 : let92 := by andElim lean_s458, 1
let lean_s510 := by timed flipCongrArg lean_s509 [HAdd.hAdd]
have lean_s511 : (Eq let119 let583) := by timed congr lean_s510 lean_s459
have lean_s512 : (Eq let181 let709) := by timed congr lean_s508 lean_s511
let lean_s513 := by timed congr lean_s353 lean_s512
let lean_s514 := by timed flipCongrArg lean_s503 [HAdd.hAdd]
have lean_s515 : let742 := by timed rfl
let lean_s516 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s517 : let743 := by andElim lean_s458, 0
have lean_s518 : (Eq let95 let580) := by timed congr lean_s516 lean_s517
have lean_s519 : (Eq let96 let706) := by timed congr lean_s514 lean_s518
let lean_s520 := by timed flipCongrArg lean_s519 [GE.ge]
have lean_s521 : (Eq let97 let707) := by timed congr lean_s520 lean_s471
have lean_s522 : (Eq let98 let708) := by timed flipCongrArg lean_s521 [Not]
let lean_s523 := by timed congr lean_s353 lean_s522
have lean_s524 : let712 := by timed rfl
let lean_s525 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s526 : let754 := by timed congr lean_s525 lean_s503
let lean_s527 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s528 : (Eq let107 let537) := by timed congr lean_s527 lean_s464
let lean_s529 := by timed congrHAdd lean_s526 lean_s528
have lean_s530 : (Eq let109 let703) := by timed congrHAdd lean_s524 lean_s529
let lean_s531 := by timed flipCongrArg lean_s530 [GE.ge]
have lean_s532 : (Eq let110 let704) := by timed congr lean_s531 lean_s515
have lean_s533 : (Eq let653 let705) := by timed flipCongrArg lean_s532 [Not]
let lean_s534 := by timed congr lean_s353 lean_s533
let lean_s535 := by timed flipCongrArg lean_s524 [HAdd.hAdd]
have lean_s536 : (Eq let266 let691) := by timed congr lean_s535 lean_s526
let lean_s537 := by timed flipCongrArg lean_s536 [GE.ge]
have lean_s538 : let741 := by timed rfl
have lean_s539 : (Eq let267 let702) := by timed congr lean_s537 lean_s538
let lean_s540 := by timed congr lean_s353 lean_s539
let lean_s541 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s542 : (Eq let126 let249) := by timed congr lean_s541 lean_s509
let lean_s543 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s544 : (Eq let125 let499) := by timed congr lean_s543 lean_s459
let lean_s545 := by timed congrHAdd lean_s542 lean_s544
have lean_s546 : (Eq let564 let502) := by timed congrHAdd lean_s517 lean_s545
let lean_s547 := by timed flipCongrArg lean_s546 [GE.ge]
have lean_s548 : (Eq let565 let701) := by timed congr lean_s547 lean_s505
let lean_s549 := by timed congr lean_s353 lean_s548
let lean_s550 := by timed congrHAdd lean_s528 lean_s544
let lean_s551 := by timed congrHAdd lean_s542 lean_s550
have lean_s552 : (Eq let127 let571) := by timed congrHAdd lean_s517 lean_s551
let lean_s553 := by timed flipCongrArg lean_s552 [GE.ge]
have lean_s554 : let740 := by timed rfl
have lean_s555 : (Eq let128 let699) := by timed congr lean_s553 lean_s554
have lean_s556 : (Eq let652 let700) := by timed flipCongrArg lean_s555 [Not]
let lean_s557 := by timed congr lean_s353 lean_s556
let lean_s558 := by timed flipCongrArg lean_s517 [Eq]
let lean_s559 := by timed flipCongrArg lean_s480 [HMul.hMul]
have lean_s560 : let739 := by timed rfl
let lean_s561 := by timed congrHAdd lean_s524 lean_s526
have lean_s562 : let753 := by timed congrHAdd lean_s560 lean_s561
have lean_s563 : let756 := by timed flipCongrArg lean_s562 [sx5fcount]
have lean_s564 : let755 := by timed congr lean_s559 lean_s563
let lean_s565 := by timed flipCongrArg lean_s480 [HMul.hMul]
have lean_s566 : let752 := by timed flipCongrArg lean_s562 [xx5fcount]
have lean_s567 : let751 := by timed congr lean_s565 lean_s566
let lean_s568 := by timed congrHAdd lean_s564 lean_s567
have lean_s569 : let750 := by timed congrHAdd lean_s509 lean_s568
have lean_s570 : (Eq let651 let698) := by timed congr lean_s558 lean_s569
let lean_s571 := by timed congr lean_s353 lean_s570
have lean_s572 : let713 := by timed rfl
let lean_s573 := by timed flipCongrArg lean_s488 [Eq]
have lean_s574 : (Eq let131 let131) := by timed rfl
have lean_s575 : (Eq let207 let524) := by timed congr lean_s573 lean_s574
let lean_s576 := by timed congr lean_s572 lean_s575
let lean_s577 := by timed flipCongrArg lean_s493 [Eq]
have lean_s578 : (Eq let132 let390) := by timed congr lean_s577 lean_s574
let lean_s579 := by timed congr lean_s572 lean_s578
let lean_s580 := by timed flipCongrArg lean_s498 [Eq]
have lean_s581 : (Eq let134 let503) := by timed congr lean_s580 lean_s574
let lean_s582 := by timed congr lean_s572 lean_s581
let lean_s583 := by timed flipCongrArg lean_s469 [Eq]
have lean_s584 : (Eq let137 let392) := by timed congr lean_s583 lean_s574
let lean_s585 := by timed congr lean_s572 lean_s584
let lean_s586 := by timed flipCongrArg lean_s474 [Eq]
have lean_s587 : (Eq let143 let555) := by timed congr lean_s586 lean_s574
let lean_s588 := by timed congr lean_s572 lean_s587
let lean_s589 := by timed flipCongrArg lean_s478 [Eq]
have lean_s590 : (Eq let581 let212) := by timed congr lean_s589 lean_s574
let lean_s591 := by timed congr lean_s572 lean_s590
let lean_s592 := by timed flipCongrArg lean_s483 [Eq]
have lean_s593 : (Eq let146 let517) := by timed congr lean_s592 lean_s574
let lean_s594 := by timed congr lean_s572 lean_s593
have lean_s595 : let738 := by timed rfl
let lean_s596 := by timed congr lean_s572 lean_s595
let lean_s597 := by timed flipCongrArg lean_s488 [Eq]
have lean_s598 : (Eq let148 let148) := by timed rfl
have lean_s599 : (Eq let508 let598) := by timed congr lean_s597 lean_s598
let lean_s600 := by timed congr lean_s572 lean_s599
let lean_s601 := by timed flipCongrArg lean_s493 [Eq]
have lean_s602 : (Eq let171 let253) := by timed congr lean_s601 lean_s598
let lean_s603 := by timed congr lean_s572 lean_s602
let lean_s604 := by timed flipCongrArg lean_s498 [Eq]
have lean_s605 : (Eq let209 let259) := by timed congr lean_s604 lean_s598
let lean_s606 := by timed congr lean_s572 lean_s605
let lean_s607 := by timed flipCongrArg lean_s469 [Eq]
have lean_s608 : (Eq let523 let551) := by timed congr lean_s607 lean_s598
let lean_s609 := by timed congr lean_s572 lean_s608
let lean_s610 := by timed flipCongrArg lean_s474 [Eq]
have lean_s611 : (Eq let256 let214) := by timed congr lean_s610 lean_s598
let lean_s612 := by timed congr lean_s572 lean_s611
let lean_s613 := by timed flipCongrArg lean_s478 [Eq]
have lean_s614 : (Eq let149 let220) := by timed congr lean_s613 lean_s598
let lean_s615 := by timed congr lean_s572 lean_s614
let lean_s616 := by timed flipCongrArg lean_s483 [Eq]
have lean_s617 : (Eq let151 let227) := by timed congr lean_s616 lean_s598
let lean_s618 := by timed congr lean_s572 lean_s617
have lean_s619 : let737 := by timed rfl
let lean_s620 := by timed congr lean_s572 lean_s619
let lean_s621 := by timed flipCongrArg lean_s488 [Eq]
have lean_s622 : (Eq let153 let153) := by timed rfl
have lean_s623 : (Eq let614 let561) := by timed congr lean_s621 lean_s622
let lean_s624 := by timed congr lean_s572 lean_s623
let lean_s625 := by timed flipCongrArg lean_s493 [Eq]
have lean_s626 : (Eq let173 let584) := by timed congr lean_s625 lean_s622
let lean_s627 := by timed congr lean_s572 lean_s626
let lean_s628 := by timed flipCongrArg lean_s498 [Eq]
have lean_s629 : (Eq let512 let370) := by timed congr lean_s628 lean_s622
let lean_s630 := by timed congr lean_s572 lean_s629
let lean_s631 := by timed flipCongrArg lean_s469 [Eq]
have lean_s632 : (Eq let154 let235) := by timed congr lean_s631 lean_s622
let lean_s633 := by timed congr lean_s572 lean_s632
let lean_s634 := by timed flipCongrArg lean_s474 [Eq]
have lean_s635 : (Eq let156 let609) := by timed congr lean_s634 lean_s622
let lean_s636 := by timed congr lean_s572 lean_s635
let lean_s637 := by timed flipCongrArg lean_s478 [Eq]
have lean_s638 : (Eq let574 let245) := by timed congr lean_s637 lean_s622
let lean_s639 := by timed congr lean_s572 lean_s638
let lean_s640 := by timed flipCongrArg lean_s483 [Eq]
have lean_s641 : (Eq let158 let535) := by timed congr lean_s640 lean_s622
let lean_s642 := by timed congr lean_s572 lean_s641
have lean_s643 : let736 := by timed rfl
let lean_s644 := by timed congr lean_s572 lean_s643
let lean_s645 := by timed flipCongrArg lean_s488 [Eq]
have lean_s646 : (Eq let160 let160) := by timed rfl
have lean_s647 : (Eq let611 let531) := by timed congr lean_s645 lean_s646
let lean_s648 := by timed congr lean_s572 lean_s647
let lean_s649 := by timed flipCongrArg lean_s493 [Eq]
have lean_s650 : (Eq let183 let515) := by timed congr lean_s649 lean_s646
let lean_s651 := by timed congr lean_s572 lean_s650
let lean_s652 := by timed flipCongrArg lean_s498 [Eq]
have lean_s653 : (Eq let388 let556) := by timed congr lean_s652 lean_s646
let lean_s654 := by timed congr lean_s572 lean_s653
let lean_s655 := by timed flipCongrArg lean_s469 [Eq]
have lean_s656 : (Eq let576 let603) := by timed congr lean_s655 lean_s646
let lean_s657 := by timed congr lean_s572 lean_s656
let lean_s658 := by timed flipCongrArg lean_s474 [Eq]
have lean_s659 : (Eq let161 let255) := by timed congr lean_s658 lean_s646
let lean_s660 := by timed congr lean_s572 lean_s659
let lean_s661 := by timed flipCongrArg lean_s478 [Eq]
have lean_s662 : (Eq let529 let237) := by timed congr lean_s661 lean_s646
let lean_s663 := by timed congr lean_s572 lean_s662
let lean_s664 := by timed flipCongrArg lean_s483 [Eq]
have lean_s665 : (Eq let552 let521) := by timed congr lean_s664 lean_s646
let lean_s666 := by timed congr lean_s572 lean_s665
have lean_s667 : let735 := by timed rfl
let lean_s668 := by timed congr lean_s572 lean_s667
let lean_s669 := by timed flipCongrArg lean_s488 [Eq]
have lean_s670 : (Eq let166 let166) := by timed rfl
have lean_s671 : (Eq let527 let548) := by timed congr lean_s669 lean_s670
let lean_s672 := by timed congr lean_s572 lean_s671
let lean_s673 := by timed flipCongrArg lean_s493 [Eq]
have lean_s674 : (Eq let192 let519) := by timed congr lean_s673 lean_s670
let lean_s675 := by timed congr lean_s572 lean_s674
let lean_s676 := by timed flipCongrArg lean_s498 [Eq]
have lean_s677 : (Eq let549 let554) := by timed congr lean_s676 lean_s670
let lean_s678 := by timed congr lean_s572 lean_s677
let lean_s679 := by timed flipCongrArg lean_s469 [Eq]
have lean_s680 : (Eq let596 let587) := by timed congr lean_s679 lean_s670
let lean_s681 := by timed congr lean_s572 lean_s680
let lean_s682 := by timed flipCongrArg lean_s474 [Eq]
have lean_s683 : (Eq let167 let242) := by timed congr lean_s682 lean_s670
let lean_s684 := by timed congr lean_s572 lean_s683
let lean_s685 := by timed flipCongrArg lean_s478 [Eq]
have lean_s686 : (Eq let532 let240) := by timed congr lean_s685 lean_s670
let lean_s687 := by timed congr lean_s572 lean_s686
let lean_s688 := by timed flipCongrArg lean_s483 [Eq]
have lean_s689 : (Eq let169 let374) := by timed congr lean_s688 lean_s670
let lean_s690 := by timed congr lean_s572 lean_s689
have lean_s691 : let734 := by timed rfl
let lean_s692 := by timed congr lean_s690 lean_s691
let lean_s693 := by timed congr lean_s687 lean_s692
let lean_s694 := by timed congr lean_s684 lean_s693
let lean_s695 := by timed congr lean_s681 lean_s694
let lean_s696 := by timed congr lean_s678 lean_s695
let lean_s697 := by timed congr lean_s675 lean_s696
let lean_s698 := by timed congr lean_s672 lean_s697
let lean_s699 := by timed congr lean_s668 lean_s698
let lean_s700 := by timed congr lean_s666 lean_s699
let lean_s701 := by timed congr lean_s663 lean_s700
let lean_s702 := by timed congr lean_s660 lean_s701
let lean_s703 := by timed congr lean_s657 lean_s702
let lean_s704 := by timed congr lean_s654 lean_s703
let lean_s705 := by timed congr lean_s651 lean_s704
let lean_s706 := by timed congr lean_s648 lean_s705
let lean_s707 := by timed congr lean_s644 lean_s706
let lean_s708 := by timed congr lean_s642 lean_s707
let lean_s709 := by timed congr lean_s639 lean_s708
let lean_s710 := by timed congr lean_s636 lean_s709
let lean_s711 := by timed congr lean_s633 lean_s710
let lean_s712 := by timed congr lean_s630 lean_s711
let lean_s713 := by timed congr lean_s627 lean_s712
let lean_s714 := by timed congr lean_s624 lean_s713
let lean_s715 := by timed congr lean_s620 lean_s714
let lean_s716 := by timed congr lean_s618 lean_s715
let lean_s717 := by timed congr lean_s615 lean_s716
let lean_s718 := by timed congr lean_s612 lean_s717
let lean_s719 := by timed congr lean_s609 lean_s718
let lean_s720 := by timed congr lean_s606 lean_s719
let lean_s721 := by timed congr lean_s603 lean_s720
let lean_s722 := by timed congr lean_s600 lean_s721
let lean_s723 := by timed congr lean_s596 lean_s722
let lean_s724 := by timed congr lean_s594 lean_s723
let lean_s725 := by timed congr lean_s591 lean_s724
let lean_s726 := by timed congr lean_s588 lean_s725
let lean_s727 := by timed congr lean_s585 lean_s726
let lean_s728 := by timed congr lean_s582 lean_s727
let lean_s729 := by timed congr lean_s579 lean_s728
have lean_s730 : (Eq let645 let690) := by timed congr lean_s576 lean_s729
let lean_s731 := by timed congr lean_s353 lean_s730
let lean_s732 := by timed flipCongrArg lean_s575 [And]
have lean_s733 : (Eq let643 let688) := by timed congr lean_s732 lean_s602
have lean_s734 : let733 := by timed rfl
have lean_s735 : let732 := by timed rfl
have lean_s736 : (Eq let644 let689) := by timed congrIte lean_s733 lean_s734 lean_s735
let lean_s737 := by timed congr lean_s353 lean_s736
let lean_s738 := by timed flipCongrArg lean_s599 [And]
have lean_s739 : (Eq let641 let686) := by timed congr lean_s738 lean_s626
have lean_s740 : let731 := by timed rfl
have lean_s741 : let730 := by timed rfl
have lean_s742 : (Eq let642 let687) := by timed congrIte lean_s739 lean_s740 lean_s741
let lean_s743 := by timed congr lean_s353 lean_s742
let lean_s744 := by timed flipCongrArg lean_s623 [And]
have lean_s745 : (Eq let639 let684) := by timed congr lean_s744 lean_s650
have lean_s746 : let729 := by timed rfl
have lean_s747 : let728 := by timed rfl
have lean_s748 : (Eq let640 let685) := by timed congrIte lean_s745 lean_s746 lean_s747
let lean_s749 := by timed congr lean_s353 lean_s748
let lean_s750 := by timed flipCongrArg lean_s647 [And]
have lean_s751 : (Eq let637 let682) := by timed congr lean_s750 lean_s674
have lean_s752 : let727 := by timed rfl
have lean_s753 : let726 := by timed rfl
have lean_s754 : (Eq let638 let683) := by timed congrIte lean_s751 lean_s752 lean_s753
let lean_s755 := by timed congr lean_s353 lean_s754
let lean_s756 := by timed flipCongrArg lean_s671 [And]
let lean_s757 := by timed flipCongrArg lean_s493 [Eq]
have lean_s758 : (Eq let199 let199) := by timed rfl
have lean_s759 : (Eq let200 let251) := by timed congr lean_s757 lean_s758
have lean_s760 : (Eq let635 let680) := by timed congr lean_s756 lean_s759
have lean_s761 : let725 := by timed rfl
have lean_s762 : let724 := by timed rfl
have lean_s763 : (Eq let636 let681) := by timed congrIte lean_s760 lean_s761 lean_s762
let lean_s764 := by timed congr lean_s353 lean_s763
let lean_s765 := by timed flipCongrArg lean_s575 [And]
have lean_s766 : (Eq let633 let678) := by timed congr lean_s765 lean_s605
have lean_s767 : let723 := by timed rfl
have lean_s768 : let722 := by timed rfl
have lean_s769 : (Eq let634 let679) := by timed congrIte lean_s766 lean_s767 lean_s768
let lean_s770 := by timed congr lean_s353 lean_s769
let lean_s771 := by timed flipCongrArg lean_s599 [And]
have lean_s772 : (Eq let631 let676) := by timed congr lean_s771 lean_s629
have lean_s773 : let721 := by timed rfl
have lean_s774 : let720 := by timed rfl
have lean_s775 : (Eq let632 let677) := by timed congrIte lean_s772 lean_s773 lean_s774
let lean_s776 := by timed congr lean_s353 lean_s775
let lean_s777 := by timed flipCongrArg lean_s623 [And]
have lean_s778 : (Eq let629 let674) := by timed congr lean_s777 lean_s653
have lean_s779 : let719 := by timed rfl
have lean_s780 : let718 := by timed rfl
have lean_s781 : (Eq let630 let675) := by timed congrIte lean_s778 lean_s779 lean_s780
let lean_s782 := by timed congr lean_s353 lean_s781
let lean_s783 := by timed flipCongrArg lean_s647 [And]
have lean_s784 : (Eq let627 let672) := by timed congr lean_s783 lean_s677
have lean_s785 : let717 := by timed rfl
have lean_s786 : let716 := by timed rfl
have lean_s787 : (Eq let628 let673) := by timed congrIte lean_s784 lean_s785 lean_s786
let lean_s788 := by timed congr lean_s353 lean_s787
let lean_s789 := by timed flipCongrArg lean_s671 [And]
let lean_s790 := by timed flipCongrArg lean_s498 [Eq]
have lean_s791 : (Eq let610 let546) := by timed congr lean_s790 lean_s758
have lean_s792 : (Eq let625 let670) := by timed congr lean_s789 lean_s791
have lean_s793 : let715 := by timed rfl
have lean_s794 : let714 := by timed rfl
have lean_s795 : (Eq let626 let671) := by timed congrIte lean_s792 lean_s793 lean_s794
let lean_s796 := by timed congr lean_s353 lean_s795
have lean_s797 : let713 := by timed rfl
let lean_s798 := by timed flipCongrArg lean_s524 [Eq]
have lean_s799 : (Eq let623 let294) := by timed congr lean_s798 lean_s503
let lean_s800 := by timed congr lean_s797 lean_s799
let lean_s801 := by timed flipCongrArg lean_s524 [Eq]
let lean_s802 := by timed flipCongrArg lean_s471 [HAdd.hAdd]
have lean_s803 : (Eq let269 let538) := by timed congr lean_s802 lean_s503
have lean_s804 : (Eq let622 let668) := by timed congr lean_s801 lean_s803
let lean_s805 := by timed congr lean_s797 lean_s804
let lean_s806 := by timed flipCongrArg lean_s524 [Eq]
let lean_s807 := by timed flipCongrArg lean_s538 [HAdd.hAdd]
have lean_s808 : (Eq let522 let526) := by timed congr lean_s807 lean_s503
have lean_s809 : (Eq let621 let667) := by timed congr lean_s806 lean_s808
let lean_s810 := by timed congr lean_s797 lean_s809
let lean_s811 := by timed flipCongrArg lean_s524 [Eq]
let lean_s812 := by timed flipCongrArg lean_s485 [HAdd.hAdd]
have lean_s813 : (Eq let589 let215) := by timed congr lean_s812 lean_s503
have lean_s814 : (Eq let620 let666) := by timed congr lean_s811 lean_s813
let lean_s815 := by timed congr lean_s797 lean_s814
let lean_s816 := by timed flipCongrArg lean_s524 [Eq]
let lean_s817 := by timed flipCongrArg lean_s480 [HAdd.hAdd]
have lean_s818 : (Eq let516 let261) := by timed congr lean_s817 lean_s503
have lean_s819 : (Eq let619 let665) := by timed congr lean_s816 lean_s818
let lean_s820 := by timed congr lean_s815 lean_s819
let lean_s821 := by timed congr lean_s810 lean_s820
let lean_s822 := by timed congr lean_s805 lean_s821
have lean_s823 : (Eq let624 let669) := by timed congr lean_s800 lean_s822
let lean_s824 := by timed congr lean_s353 lean_s823
let lean_s825 := by timed flipCongrArg lean_s503 [Eq]
have lean_s826 : (Eq let366 let513) := by timed congr lean_s825 lean_s517
let lean_s827 := by timed flipCongrArg lean_s826 [Or]
let lean_s828 := by timed flipCongrArg lean_s503 [Eq]
let lean_s829 := by timed flipCongrArg lean_s515 [HAdd.hAdd]
have lean_s830 : (Eq let577 let260) := by timed congr lean_s829 lean_s517
have lean_s831 : (Eq let578 let663) := by timed congr lean_s828 lean_s830
have lean_s832 : (Eq let618 let664) := by timed congr lean_s827 lean_s831
let lean_s833 := by timed congr lean_s353 lean_s832
have lean_s834 : let711 := by timed rfl
let lean_s835 := by timed flipCongrArg lean_s488 [Eq]
have lean_s836 : (Eq let287 let287) := by timed rfl
have lean_s837 : (Eq let553 let510) := by timed congr lean_s835 lean_s836
let lean_s838 := by timed congr lean_s834 lean_s837
let lean_s839 := by timed flipCongrArg lean_s493 [Eq]
have lean_s840 : (Eq let275 let275) := by timed rfl
have lean_s841 : (Eq let533 let277) := by timed congr lean_s839 lean_s840
let lean_s842 := by timed congr lean_s834 lean_s841
let lean_s843 := by timed flipCongrArg lean_s469 [Eq]
have lean_s844 : (Eq let402 let262) := by timed flipCongrArg lean_s517 [selectx5fformat]
have lean_s845 : (Eq let595 let264) := by timed congr lean_s843 lean_s844
let lean_s846 := by timed congr lean_s834 lean_s845
let lean_s847 := by timed flipCongrArg lean_s474 [Eq]
let lean_s848 := by timed flipCongrArg lean_s471 [HAdd.hAdd]
have lean_s849 : (Eq let504 let380) := by timed congr lean_s848 lean_s517
have lean_s850 : (Eq let505 let659) := by timed flipCongrArg lean_s849 [selectx5fformat]
have lean_s851 : (Eq let506 let660) := by timed congr lean_s847 lean_s850
let lean_s852 := by timed congr lean_s834 lean_s851
let lean_s853 := by timed flipCongrArg lean_s478 [Eq]
let lean_s854 := by timed flipCongrArg lean_s538 [HAdd.hAdd]
have lean_s855 : (Eq let539 let387) := by timed congr lean_s854 lean_s517
have lean_s856 : (Eq let540 let657) := by timed flipCongrArg lean_s855 [selectx5fformat]
have lean_s857 : (Eq let541 let658) := by timed congr lean_s853 lean_s856
let lean_s858 := by timed congr lean_s834 lean_s857
let lean_s859 := by timed flipCongrArg lean_s483 [Eq]
let lean_s860 := by timed flipCongrArg lean_s485 [HAdd.hAdd]
have lean_s861 : (Eq let221 let544) := by timed congr lean_s860 lean_s517
have lean_s862 : (Eq let222 let655) := by timed flipCongrArg lean_s861 [selectx5fformat]
have lean_s863 : (Eq let223 let656) := by timed congr lean_s859 lean_s862
let lean_s864 := by timed congr lean_s858 lean_s863
let lean_s865 := by timed congr lean_s852 lean_s864
let lean_s866 := by timed congr lean_s846 lean_s865
let lean_s867 := by timed congr lean_s842 lean_s866
have lean_s868 : (Eq let616 let661) := by timed congr lean_s838 lean_s867
have lean_s869 : (Eq let617 let662) := by timed flipCongrArg lean_s868 [Not]
let lean_s870 := by timed congr lean_s833 lean_s869
let lean_s871 := by timed congr lean_s824 lean_s870
let lean_s872 := by timed congr lean_s796 lean_s871
let lean_s873 := by timed congr lean_s788 lean_s872
let lean_s874 := by timed congr lean_s782 lean_s873
let lean_s875 := by timed congr lean_s776 lean_s874
let lean_s876 := by timed congr lean_s770 lean_s875
let lean_s877 := by timed congr lean_s764 lean_s876
let lean_s878 := by timed congr lean_s755 lean_s877
let lean_s879 := by timed congr lean_s749 lean_s878
let lean_s880 := by timed congr lean_s743 lean_s879
let lean_s881 := by timed congr lean_s737 lean_s880
let lean_s882 := by timed congr lean_s731 lean_s881
let lean_s883 := by timed congr lean_s571 lean_s882
let lean_s884 := by timed congr lean_s557 lean_s883
let lean_s885 := by timed congr lean_s549 lean_s884
let lean_s886 := by timed congr lean_s540 lean_s885
let lean_s887 := by timed congr lean_s534 lean_s886
let lean_s888 := by timed congr lean_s523 lean_s887
let lean_s889 := by timed congr lean_s513 lean_s888
let lean_s890 := by timed congr lean_s507 lean_s889
let lean_s891 := by timed congr lean_s502 lean_s890
let lean_s892 := by timed congr lean_s497 lean_s891
let lean_s893 := by timed congr lean_s492 lean_s892
let lean_s894 := by timed congr lean_s487 lean_s893
let lean_s895 := by timed congr lean_s482 lean_s894
let lean_s896 := by timed congr lean_s477 lean_s895
let lean_s897 := by timed congr lean_s473 lean_s896
let lean_s898 := by timed congr lean_s468 lean_s897
have lean_s899 : (Eq let654 let710) := by timed congr lean_s463 lean_s898
have lean_s900 : let711 := by timed rfl
let lean_s901 := by timed congr lean_s900 lean_r220
let lean_s902 := by timed congr lean_s900 lean_r203
let lean_s903 := by timed congr lean_s900 lean_r204
let lean_s904 := by timed congr lean_s900 lean_r203
let lean_s905 := by timed congr lean_s900 lean_r206
let lean_s906 := by timed congr lean_s900 lean_r87
let lean_s907 := by timed congr lean_s900 lean_r84
let lean_s908 := by timed congr lean_s900 lean_r111
let lean_s909 := by timed congr lean_s900 lean_r113
let lean_s910 := by timed congr lean_s900 lean_r200
let lean_s911 := by timed flipCongrArg lean_s396 [Eq]
have lean_s912 : (Eq let709 let582) := by timed congr lean_s911 lean_r201
have lean_s913 : (Eq let709 True) := by timed Eq.trans lean_s912 lean_r200
let lean_s914 := by timed congr lean_s900 lean_s913
let lean_s915 := by timed flipCongrArg lean_s396 [HAdd.hAdd]
have lean_s916 : (Eq let706 let511) := by timed congr lean_s915 lean_r197
have lean_s917 : (Eq let706 let364) := by timed Eq.trans lean_s916 lean_r133
let lean_s918 := by timed flipCongrArg lean_s917 [GE.ge]
have lean_s919 : let586 := by timed rfl
have lean_s920 : (Eq let707 let365) := by timed congr lean_s918 lean_s919
have lean_s921 : (Eq let707 let363) := by timed Eq.trans lean_s920 lean_r105
have lean_s922 : (Eq let708 let575) := by timed flipCongrArg lean_s921 [Not]
have lean_s923 : (Eq let708 let9) := by timed Eq.trans lean_s922 lean_r194
let lean_s924 := by timed congr lean_s900 lean_s923
let lean_s925 := by timed congrHAdd lean_r187 lean_r160
have lean_s926 : (Eq let703 let573) := by timed congrHAdd lean_s39 lean_s925
have lean_s927 : (Eq let703 let572) := by timed Eq.trans lean_s926 lean_r192
let lean_s928 := by timed flipCongrArg lean_s927 [GE.ge]
have lean_s929 : let742 := by timed rfl
have lean_s930 : (Eq let704 let597) := by timed congr lean_s928 lean_s929
have lean_s931 : (Eq let704 let63) := by timed Eq.trans lean_s930 lean_r216
have lean_s932 : (Eq let705 let64) := by timed flipCongrArg lean_s931 [Not]
let lean_s933 := by timed congr lean_s900 lean_s932
let lean_s934 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s935 : (Eq let691 let562) := by timed congr lean_s934 lean_r187
have lean_s936 : (Eq let691 fmt1) := by timed Eq.trans lean_s935 lean_r213
let lean_s937 := by timed flipCongrArg lean_s936 [GE.ge]
have lean_s938 : let741 := by timed rfl
have lean_s939 : (Eq let702 let360) := by timed congr lean_s937 lean_s938
let lean_s940 := by timed congr lean_s900 lean_s939
have lean_s941 : (Eq let230 let230) := by timed rfl
have lean_s942 : (Eq let229 let229) := by timed rfl
let lean_s943 := by timed congrHAdd lean_r91 lean_r189
let lean_s944 := by timed congrHAdd lean_s942 lean_s943
let lean_s945 := by timed congrHAdd lean_s941 lean_s944
have lean_s946 : (Eq let501 let518) := by timed congrHAdd lean_s432 lean_s945
have lean_s947 : (Eq let501 let232) := by timed Eq.trans lean_s946 lean_r141
have lean_s948 : (Eq let502 let232) := by timed Eq.trans lean_r125 lean_s947
let lean_s949 := by timed flipCongrArg lean_s948 [GE.ge]
have lean_s950 : (Eq let701 let233) := by timed congr lean_s949 lean_s396
have lean_s951 : (Eq let701 let9) := by timed Eq.trans lean_s950 lean_r81
let lean_s952 := by timed congr lean_s900 lean_s951
let lean_s953 := by timed congrHAdd lean_r160 lean_r189
let lean_s954 := by timed congrHAdd lean_r91 lean_s953
let lean_s955 := by timed congrHAdd lean_s942 lean_s954
let lean_s956 := by timed congrHAdd lean_s941 lean_s955
have lean_s957 : (Eq let570 let567) := by timed congrHAdd lean_s432 lean_s956
have lean_s958 : (Eq let570 let272) := by timed Eq.trans lean_s957 lean_r188
have lean_s959 : (Eq let571 let272) := by timed Eq.trans lean_r191 lean_s958
let lean_s960 := by timed flipCongrArg lean_s959 [GE.ge]
have lean_s961 : let740 := by timed rfl
have lean_s962 : (Eq let699 let273) := by timed congr lean_s960 lean_s961
have lean_s963 : (Eq let699 let271) := by timed Eq.trans lean_s962 lean_r102
have lean_s964 : (Eq let700 let359) := by timed flipCongrArg lean_s963 [Not]
let lean_s965 := by timed congr lean_s900 lean_s964
have lean_s966 : let612 := by timed rfl
let lean_s967 := by timed flipCongrArg lean_s966 [Eq]
have lean_s968 : (Eq let698 let612) := by timed congr lean_s967 lean_s444
have lean_s969 : (Eq let698 True) := by timed Eq.trans lean_s968 lean_r233
let lean_s970 := by timed congr lean_s900 lean_s969
have lean_s971 : let713 := by timed rfl
let lean_s972 := by timed congr lean_s971 lean_r148
let lean_s973 := by timed congr lean_s971 lean_r121
let lean_s974 := by timed congr lean_s971 lean_r126
let lean_s975 := by timed congr lean_s971 lean_r123
let lean_s976 := by timed congr lean_s971 lean_r179
let lean_s977 := by timed congr lean_s971 lean_r72
let lean_s978 := by timed congr lean_s971 lean_r140
let lean_s979 := by timed congr lean_s971 lean_s105
let lean_s980 := by timed congr lean_s971 lean_r218
let lean_s981 := by timed congr lean_s971 lean_r93
let lean_s982 := by timed congr lean_s971 lean_r96
let lean_s983 := by timed congr lean_s971 lean_r173
let lean_s984 := by timed congr lean_s971 lean_r73
let lean_s985 := by timed congr lean_s971 lean_r76
let lean_s986 := by timed congr lean_s971 lean_r79
let lean_s987 := by timed congr lean_s971 lean_s114
let lean_s988 := by timed congr lean_s971 lean_r184
let lean_s989 := by timed congr lean_s971 lean_r202
let lean_s990 := by timed congr lean_s971 lean_r108
let lean_s991 := by timed congr lean_s971 lean_r82
let lean_s992 := by timed congr lean_s971 lean_r228
let lean_s993 := by timed congr lean_s971 lean_r88
let lean_s994 := by timed congr lean_s971 lean_r159
let lean_s995 := by timed congr lean_s971 lean_s123
let lean_s996 := by timed congr lean_s971 lean_r156
let lean_s997 := by timed congr lean_s971 lean_r138
let lean_s998 := by timed congr lean_s971 lean_r180
let lean_s999 := by timed congr lean_s971 lean_r223
let lean_s1000 := by timed congr lean_s971 lean_r94
let lean_s1001 := by timed congr lean_s971 lean_r83
let lean_s1002 := by timed congr lean_s971 lean_r145
let lean_s1003 := by timed congr lean_s971 lean_s132
let lean_s1004 := by timed congr lean_s971 lean_r170
let lean_s1005 := by timed congr lean_s971 lean_r142
let lean_s1006 := by timed congr lean_s971 lean_r177
let lean_s1007 := by timed congr lean_s971 lean_r205
let lean_s1008 := by timed congr lean_s971 lean_r86
let lean_s1009 := by timed congr lean_s971 lean_r85
let lean_s1010 := by timed congr lean_s971 lean_r112
let lean_s1011 := by timed congr lean_s1010 lean_s141
let lean_s1012 := by timed congr lean_s1009 lean_s1011
let lean_s1013 := by timed congr lean_s1008 lean_s1012
let lean_s1014 := by timed congr lean_s1007 lean_s1013
let lean_s1015 := by timed congr lean_s1006 lean_s1014
let lean_s1016 := by timed congr lean_s1005 lean_s1015
let lean_s1017 := by timed congr lean_s1004 lean_s1016
let lean_s1018 := by timed congr lean_s1003 lean_s1017
let lean_s1019 := by timed congr lean_s1002 lean_s1018
let lean_s1020 := by timed congr lean_s1001 lean_s1019
let lean_s1021 := by timed congr lean_s1000 lean_s1020
let lean_s1022 := by timed congr lean_s999 lean_s1021
let lean_s1023 := by timed congr lean_s998 lean_s1022
let lean_s1024 := by timed congr lean_s997 lean_s1023
let lean_s1025 := by timed congr lean_s996 lean_s1024
let lean_s1026 := by timed congr lean_s995 lean_s1025
let lean_s1027 := by timed congr lean_s994 lean_s1026
let lean_s1028 := by timed congr lean_s993 lean_s1027
let lean_s1029 := by timed congr lean_s992 lean_s1028
let lean_s1030 := by timed congr lean_s991 lean_s1029
let lean_s1031 := by timed congr lean_s990 lean_s1030
let lean_s1032 := by timed congr lean_s989 lean_s1031
let lean_s1033 := by timed congr lean_s988 lean_s1032
let lean_s1034 := by timed congr lean_s987 lean_s1033
let lean_s1035 := by timed congr lean_s986 lean_s1034
let lean_s1036 := by timed congr lean_s985 lean_s1035
let lean_s1037 := by timed congr lean_s984 lean_s1036
let lean_s1038 := by timed congr lean_s983 lean_s1037
let lean_s1039 := by timed congr lean_s982 lean_s1038
let lean_s1040 := by timed congr lean_s981 lean_s1039
let lean_s1041 := by timed congr lean_s980 lean_s1040
let lean_s1042 := by timed congr lean_s979 lean_s1041
let lean_s1043 := by timed congr lean_s978 lean_s1042
let lean_s1044 := by timed congr lean_s977 lean_s1043
let lean_s1045 := by timed congr lean_s976 lean_s1044
let lean_s1046 := by timed congr lean_s975 lean_s1045
let lean_s1047 := by timed congr lean_s974 lean_s1046
let lean_s1048 := by timed congr lean_s973 lean_s1047
have lean_s1049 : (Eq let690 let357) := by timed congr lean_s972 lean_s1048
let lean_s1050 := by timed congr lean_s900 lean_s1049
let lean_s1051 := by timed flipCongrArg lean_r148 [And]
have lean_s1052 : (Eq let688 let337) := by timed congr lean_s1051 lean_r93
have lean_s1053 : (Eq let689 let338) := by timed congrIte lean_s1052 lean_s185 lean_s186
let lean_s1054 := by timed congr lean_s900 lean_s1053
let lean_s1055 := by timed flipCongrArg lean_r218 [And]
have lean_s1056 : (Eq let686 let335) := by timed congr lean_s1055 lean_r202
have lean_s1057 : let731 := by timed rfl
have lean_s1058 : let730 := by timed rfl
have lean_s1059 : (Eq let687 let336) := by timed congrIte lean_s1056 lean_s1057 lean_s1058
let lean_s1060 := by timed congr lean_s900 lean_s1059
let lean_s1061 := by timed flipCongrArg lean_r184 [And]
have lean_s1062 : (Eq let684 let332) := by timed congr lean_s1061 lean_r138
have lean_s1063 : let729 := by timed rfl
have lean_s1064 : let728 := by timed rfl
have lean_s1065 : (Eq let685 let333) := by timed congrIte lean_s1062 lean_s1063 lean_s1064
let lean_s1066 := by timed congr lean_s900 lean_s1065
let lean_s1067 := by timed flipCongrArg lean_r156 [And]
have lean_s1068 : (Eq let682 let329) := by timed congr lean_s1067 lean_r142
have lean_s1069 : let727 := by timed rfl
have lean_s1070 : let726 := by timed rfl
have lean_s1071 : (Eq let683 let330) := by timed congrIte lean_s1068 lean_s1069 lean_s1070
let lean_s1072 := by timed congr lean_s900 lean_s1071
let lean_s1073 := by timed flipCongrArg lean_r170 [And]
have lean_s1074 : (Eq let680 let325) := by timed congr lean_s1073 lean_r92
have lean_s1075 : let725 := by timed rfl
have lean_s1076 : let724 := by timed rfl
have lean_s1077 : (Eq let681 let326) := by timed congrIte lean_s1074 lean_s1075 lean_s1076
let lean_s1078 := by timed congr lean_s900 lean_s1077
let lean_s1079 := by timed flipCongrArg lean_r148 [And]
have lean_s1080 : (Eq let678 let322) := by timed congr lean_s1079 lean_r96
have lean_s1081 : (Eq let679 let323) := by timed congrIte lean_s1080 lean_s223 lean_s224
let lean_s1082 := by timed congr lean_s900 lean_s1081
let lean_s1083 := by timed flipCongrArg lean_r218 [And]
have lean_s1084 : (Eq let676 let319) := by timed congr lean_s1083 lean_r108
have lean_s1085 : let721 := by timed rfl
have lean_s1086 : let720 := by timed rfl
have lean_s1087 : (Eq let677 let320) := by timed congrIte lean_s1084 lean_s1085 lean_s1086
let lean_s1088 := by timed congr lean_s900 lean_s1087
let lean_s1089 := by timed flipCongrArg lean_r184 [And]
have lean_s1090 : (Eq let674 let315) := by timed congr lean_s1089 lean_r180
have lean_s1091 : let719 := by timed rfl
have lean_s1092 : let718 := by timed rfl
have lean_s1093 : (Eq let675 let316) := by timed congrIte lean_s1090 lean_s1091 lean_s1092
let lean_s1094 := by timed congr lean_s900 lean_s1093
let lean_s1095 := by timed flipCongrArg lean_r156 [And]
have lean_s1096 : (Eq let672 let309) := by timed congr lean_s1095 lean_r177
have lean_s1097 : let717 := by timed rfl
have lean_s1098 : let716 := by timed rfl
have lean_s1099 : (Eq let673 let310) := by timed congrIte lean_s1096 lean_s1097 lean_s1098
let lean_s1100 := by timed congr lean_s900 lean_s1099
let lean_s1101 := by timed flipCongrArg lean_r170 [And]
have lean_s1102 : (Eq let670 let302) := by timed congr lean_s1101 lean_r166
have lean_s1103 : let715 := by timed rfl
have lean_s1104 : let714 := by timed rfl
have lean_s1105 : (Eq let671 let303) := by timed congrIte lean_s1102 lean_s1103 lean_s1104
let lean_s1106 := by timed congr lean_s900 lean_s1105
have lean_s1107 : let713 := by timed rfl
have lean_s1108 : (Eq let294 let294) := by timed rfl
let lean_s1109 := by timed congr lean_s1107 lean_s1108
let lean_s1110 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1111 : (Eq let668 let293) := by timed congr lean_s1110 lean_r161
let lean_s1112 := by timed congr lean_s1107 lean_s1111
let lean_s1113 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1114 : (Eq let667 let2) := by timed congr lean_s1113 lean_r150
let lean_s1115 := by timed congr lean_s1107 lean_s1114
let lean_s1116 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1117 : (Eq let666 let27) := by timed congr lean_s1116 lean_r74
let lean_s1118 := by timed congr lean_s1107 lean_s1117
let lean_s1119 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1120 : (Eq let665 let292) := by timed congr lean_s1119 lean_r98
let lean_s1121 := by timed congr lean_s1118 lean_s1120
let lean_s1122 := by timed congr lean_s1115 lean_s1121
let lean_s1123 := by timed congr lean_s1112 lean_s1122
have lean_s1124 : (Eq let669 let295) := by timed congr lean_s1109 lean_s1123
let lean_s1125 := by timed congr lean_s900 lean_s1124
let lean_s1126 := by timed flipCongrArg lean_r136 [Or]
let lean_s1127 := by timed flipCongrArg lean_s396 [Eq]
have lean_s1128 : let369 := by timed Eq.trans lean_r97 lean_r107
have lean_s1129 : (Eq let663 let520) := by timed congr lean_s1127 lean_s1128
have lean_s1130 : (Eq let663 False) := by timed Eq.trans lean_s1129 lean_r144
have lean_s1131 : (Eq let664 let525) := by timed congr lean_s1126 lean_s1130
have lean_s1132 : (Eq let664 let291) := by timed Eq.trans lean_s1131 lean_r149
let lean_s1133 := by timed congr lean_s900 lean_s1132
have lean_s1134 : let711 := by timed rfl
let lean_s1135 := by timed congr lean_s1134 lean_r132
let lean_s1136 := by timed congr lean_s1134 lean_r103
let lean_s1137 := by timed congr lean_s1134 lean_r99
have lean_s1138 : let585 := by timed rfl
let lean_s1139 := by timed flipCongrArg lean_s1138 [Eq]
have lean_s1140 : let509 := by timed Eq.trans lean_r116 lean_r130
have lean_s1141 : (Eq let659 let285) := by timed flipCongrArg lean_s1140 [selectx5fformat]
have lean_s1142 : (Eq let660 let372) := by timed congr lean_s1139 lean_s1141
have lean_s1143 : (Eq let660 let286) := by timed Eq.trans lean_s1142 lean_r110
let lean_s1144 := by timed congr lean_s1134 lean_s1143
let lean_s1145 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1146 : let528 := by timed Eq.trans lean_r119 lean_r153
have lean_s1147 : (Eq let657 let282) := by timed flipCongrArg lean_s1146 [selectx5fformat]
have lean_s1148 : (Eq let658 let615) := by timed congr lean_s1145 lean_s1147
have lean_s1149 : (Eq let658 let283) := by timed Eq.trans lean_s1148 lean_r236
let lean_s1150 := by timed congr lean_s1134 lean_s1149
have lean_s1151 : let243 := by timed rfl
let lean_s1152 := by timed flipCongrArg lean_s1151 [Eq]
have lean_s1153 : let545 := by timed Eq.trans lean_r168 lean_r165
have lean_s1154 : (Eq let655 let279) := by timed flipCongrArg lean_s1153 [selectx5fformat]
have lean_s1155 : (Eq let656 let391) := by timed congr lean_s1152 lean_s1154
have lean_s1156 : (Eq let656 let280) := by timed Eq.trans lean_s1155 lean_r122
let lean_s1157 := by timed congr lean_s1150 lean_s1156
let lean_s1158 := by timed congr lean_s1144 lean_s1157
let lean_s1159 := by timed congr lean_s1137 lean_s1158
let lean_s1160 := by timed congr lean_s1136 lean_s1159
have lean_s1161 : (Eq let661 let289) := by timed congr lean_s1135 lean_s1160
have lean_s1162 : (Eq let662 let290) := by timed flipCongrArg lean_s1161 [Not]
let lean_s1163 := by timed congr lean_s1133 lean_s1162
let lean_s1164 := by timed congr lean_s1125 lean_s1163
let lean_s1165 := by timed congr lean_s1106 lean_s1164
let lean_s1166 := by timed congr lean_s1100 lean_s1165
let lean_s1167 := by timed congr lean_s1094 lean_s1166
let lean_s1168 := by timed congr lean_s1088 lean_s1167
let lean_s1169 := by timed congr lean_s1082 lean_s1168
let lean_s1170 := by timed congr lean_s1078 lean_s1169
let lean_s1171 := by timed congr lean_s1072 lean_s1170
let lean_s1172 := by timed congr lean_s1066 lean_s1171
let lean_s1173 := by timed congr lean_s1060 lean_s1172
let lean_s1174 := by timed congr lean_s1054 lean_s1173
let lean_s1175 := by timed congr lean_s1050 lean_s1174
let lean_s1176 := by timed congr lean_s970 lean_s1175
let lean_s1177 := by timed congr lean_s965 lean_s1176
let lean_s1178 := by timed congr lean_s952 lean_s1177
let lean_s1179 := by timed congr lean_s940 lean_s1178
let lean_s1180 := by timed congr lean_s933 lean_s1179
let lean_s1181 := by timed congr lean_s924 lean_s1180
let lean_s1182 := by timed congr lean_s914 lean_s1181
let lean_s1183 := by timed congr lean_s910 lean_s1182
let lean_s1184 := by timed congr lean_s909 lean_s1183
let lean_s1185 := by timed congr lean_s908 lean_s1184
let lean_s1186 := by timed congr lean_s907 lean_s1185
let lean_s1187 := by timed congr lean_s906 lean_s1186
let lean_s1188 := by timed congr lean_s905 lean_s1187
let lean_s1189 := by timed congr lean_s904 lean_s1188
let lean_s1190 := by timed congr lean_s903 lean_s1189
let lean_s1191 := by timed congr lean_s902 lean_s1190
have lean_s1192 : (Eq let710 let362) := by timed congr lean_s901 lean_s1191
have lean_s1193 : (Eq let710 let361) := by timed Eq.trans lean_s1192 lean_r104
have lean_s1194 : (Eq let654 let361) := by timed Eq.trans lean_s899 lean_s1193
have lean_s1195 : (Eq let498 let361) := by timed Eq.trans lean_s352 lean_s1194
have lean_s1196 : let361 := by timed eqResolve lean_a239 lean_s1195
have lean_s1197 : let338 := by andElim lean_s1196, 5
have lean_s1198 : (Or let337 let16) := by timed iteElim2 lean_s1197
have lean_s1199 : (Or let16 let337) := by permutateOr lean_s1198, [1, 0], (- 1)
have lean_s1200 : (Or let879 let252) := by timed @cnfAndPos [let321, let252] 1
have lean_s1201 : (Or let252 let879) := by permutateOr lean_s1200, [1, 0], (- 1)
have lean_s1202 : let882 :=
  (scope (fun lean_a248 : let252 =>
    have lean_s1202 : let882 :=
      (scope (fun lean_a249 : let252 =>
        have lean_s1202 : let253 := by timed Eq.symm lean_a249
        have lean_s1203 : let252 := by timed Eq.symm lean_s1202
        let lean_s1204 := by timed flipCongrArg lean_s1203 [Eq]
        have lean_s1205 : let375 := by timed rfl
        have lean_s1206 : (Eq let258 let592) := by timed congr lean_s1204 lean_s1205
        have lean_s1207 : (Eq let594 let543) := by timed flipCongrArg lean_r210 [Not]
        have lean_s1208 : (Eq let594 True) := by timed Eq.trans lean_s1207 lean_r164
        have lean_s1209 : (Eq let593 True) := by timed Eq.trans lean_r212 lean_s1208
        have lean_s1210 : let593 := by timed trueElim lean_s1209
        have lean_s1211 : (Eq let258 False) := by timed Eq.trans lean_s1206 lean_s1210
        have lean_s1212 : let865 := by timed falseElim lean_s1211
        show let865 from lean_s1212
      ))
    have lean_s1203 : let883 := by liftOrNToImp lean_s1202, 1
    have lean_s1204 : let865 := by timed modusPonens lean_a248 lean_s1203
    show let865 from lean_s1204
  ))
have lean_s1203 : let883 := by liftOrNToImp lean_s1202, 1
have lean_s1204 : let882 := by timed impliesElim lean_s1203
have lean_s1205 : (Or let864 let258) := by timed @cnfAndPos [let321, let258] 1
have lean_s1206 : (Or let258 let864) := by permutateOr lean_s1205, [1, 0], (- 1)
have lean_s1207 : let323 := by andElim lean_s1196, 10
have lean_s1208 : (Or let322 let20) := by timed iteElim2 lean_s1207
have lean_s1209 : (Or let20 let322) := by permutateOr lean_s1208, [1, 0], (- 1)
have lean_s1210 : (Or let887 (Or let762 (Or let363 (Or let139 let836)))) :=
  (scope (fun lean_a249 : let22 =>
    (scope (fun lean_a250 : let20 =>
      (scope (fun lean_a251 : let9 =>
        (scope (fun lean_a252 : let2 =>
          have lean_s1210 : let800 := by timed Eq.symm lean_r51
          have lean_s1211 : let165 := by timed eqResolve lean_a252 lean_s1210
          have lean_s1212 : let801 := by timed And.intro lean_s1211 lean_a250
          have lean_s1213 : let804 :=
            (scope (fun lean_a251 : let165 =>
              (scope (fun lean_a252 : let20 =>
                have lean_s1213 : let806 := by timed Eq.symm lean_a252
                have lean_s1214 : let798 := by timed Eq.symm lean_a251
                have lean_s1215 : let165 := by timed Eq.symm lean_s1214
                have lean_s1216 : let805 := by timed flipCongrArg lean_s1215 [xx5fcount]
                have lean_s1217 : let769 := by timed Eq.trans lean_s1213 lean_s1216
                show let769 from lean_s1217
            ))))
          have lean_s1214 : let802 := by liftOrNToImp lean_s1213, 2
          have lean_s1215 : let769 := by timed modusPonens lean_s1212 lean_s1214
          have lean_s1216 : let893 := by timed And.intro lean_s1211 lean_a249
          have lean_s1217 : (Or let795 let890) :=
            (scope (fun lean_a251 : let165 =>
              (scope (fun lean_a252 : let22 =>
                have lean_s1217 : let891 := by timed Eq.symm lean_a252
                have lean_s1218 : let798 := by timed Eq.symm lean_a251
                have lean_s1219 : let165 := by timed Eq.symm lean_s1218
                have lean_s1220 : let797 := by timed flipCongrArg lean_s1219 [sx5fcount]
                have lean_s1221 : let835 := by timed Eq.trans lean_s1217 lean_s1220
                show let835 from lean_s1221
            ))))
          have lean_s1218 : (Implies let893 let835) := by liftOrNToImp lean_s1217, 2
          have lean_s1219 : let835 := by timed modusPonens lean_s1216 lean_s1218
          let lean_s1220 := by timed And.intro lean_s1215 lean_s1219
          have lean_s1221 : let836 := by timed And.intro lean_a251 lean_s1220
          show let836 from lean_s1221
  ))))))))
have lean_s1211 : let892 := by liftOrNToImp lean_s1210, 4
have lean_s1212 : (Eq let23 let23) := by timed rfl
let lean_s1213 := by timed flipCongrArg lean_s1212 [Implies]
have lean_s1214 : (Or let363 (Or let774 (Or (Not let835) False))) :=
  (scope (fun lean_a251 : let9 =>
    (scope (fun lean_a252 : let769 =>
      (scope (fun lean_a253 : let835 =>
        have lean_s1214 : let839 := by timed Eq.symm lean_a253
        have lean_s1215 : (Or let840 False) :=
          (scope (fun lean_a253 : let839 =>
            have lean_s1215 : let70 := by timed trueElim lean_r14
            have lean_s1216 : let844 := by timed And.intro lean_s1215 lean_a253
            have lean_s1217 : (Implies let844 let843) := by arithMulPos [let7, let11, let61], 4
            have lean_s1218 : let843 := by timed modusPonens lean_s1216 lean_s1217
            have lean_s1219 : let786 := by timed Eq.symm lean_a252
            have lean_s1220 : let787 := by timed And.intro lean_s1215 lean_s1219
            have lean_s1221 : let788 := by arithMulPos [let6, let12, let61], 4
            have lean_s1222 : let785 := by timed modusPonens lean_s1220 lean_s1221
            have lean_s1223 : let72 := by timed trueElim lean_r15
            have lean_s1224 : let783 := by timed And.intro lean_s1223 lean_a251
            have lean_s1225 : let784 := by arithMulNeg [let8, let3, let71], 3
            have lean_s1226 : let782 := by timed modusPonens lean_s1224 lean_s1225
            have lean_s1227 : let842 := by sumBounds [lean_s1218, lean_s1222, lean_s1226]
            let lean_s1228 := by timed congrHAdd lean_r17 lean_r26
            have lean_s1229 : (Eq let780 let84) := by timed congrHAdd lean_r16 lean_s1228
            have lean_s1230 : (Eq let780 let59) := by timed Eq.trans lean_s1229 lean_r19
            let lean_s1231 := by timed flipCongrArg lean_s1230 [LE.le]
            let lean_s1232 := by timed congrHAdd lean_r20 lean_r29
            have lean_s1233 : (Eq let841 let62) := by timed congrHAdd lean_r59 lean_s1232
            have lean_s1234 : (Eq let841 let57) := by timed Eq.trans lean_s1233 lean_r9
            have lean_s1235 : (Eq let842 let568) := by timed congr lean_s1231 lean_s1234
            have lean_s1236 : (Eq let842 False) := by timed Eq.trans lean_s1235 lean_r190
            show False from by timed eqResolve lean_s1227 lean_s1236
          ))
        have lean_s1216 : let840 := by liftOrNToNeg lean_s1215
        show False from by timed contradiction lean_s1214 lean_s1216
  ))))))
have lean_s1215 : (Not let836) := by liftOrNToNeg lean_s1214
have lean_s1216 : let838 := by timed falseIntro lean_s1215
have lean_s1217 : (Eq let892 let25) := by timed congr lean_s1213 lean_s1216
have lean_s1218 : (Eq let892 let24) := by timed Eq.trans lean_s1217 lean_r1
have lean_s1219 : let24 := by timed eqResolve lean_s1211 lean_s1218
have lean_s1220 : (Or let887 let767) := by timed flipNotAnd lean_s1219 [let22, let20, let9, let2]
have lean_s1221 : (Or let363 (Or let887 let765)) := by permutateOr lean_s1220, [2, 0, 1, 3], (- 1)
have lean_s1222 : (Or let810 (Or let807 (Or let66 let140))) := by timed cnfAndNeg [let360, let64, let139]
have lean_s1223 : let809 :=
  (scope (fun lean_a254 : let360 =>
    (scope (fun lean_a255 : let64 =>
      (scope (fun lean_a256 : let139 =>
        let lean_s1223 := by timed And.intro lean_a256 lean_a255
        have lean_s1224 : let812 := by timed And.intro lean_a254 lean_s1223
        have lean_s1225 : (Or let807 (Or let140 (Or let66 let811))) :=
          (scope (fun lean_a257 : let360 =>
            (scope (fun lean_a258 : let139 =>
              (scope (fun lean_a259 : let64 =>
                have lean_s1225 : (binrel% GT.gt fmt1 let1) := by trichotomy lean_a257, lean_a258
                have lean_s1226 : (binrel% GE.ge fmt1 let26) := by intTightLb lean_s1225
                have lean_s1227 : (Eq let64 let65) := by timed Eq.symm lean_r10
                have lean_s1228 : let65 := by timed eqResolve lean_a259 lean_s1227
                have lean_s1229 : (binrel% LE.le fmt1 let26) := by intTightUb lean_s1228
                have lean_s1230 : let27 := by trichotomy lean_s1226, lean_s1229
                have lean_s1231 : let811 := by timed Eq.symm lean_s1230
                show let811 from lean_s1231
          ))))))
        have lean_s1226 : (Implies let812 let811) := by liftOrNToImp lean_s1225, 3
        have lean_s1227 : let811 := by timed modusPonens lean_s1224 lean_s1226
        have lean_s1228 : (Or (Not let811) let27) :=
          (scope (fun lean_a257 : let811 =>
            have lean_s1228 : let27 := by timed Eq.symm lean_a257
            show let27 from lean_s1228
          ))
        have lean_s1229 : (Implies let811 let27) := by liftOrNToImp lean_s1228, 1
        have lean_s1230 : let27 := by timed modusPonens lean_s1227 lean_s1229
        show let27 from lean_s1230
  ))))))
have lean_s1224 : (Implies let810 let27) := by liftOrNToImp lean_s1223, 3
have lean_s1225 : (Or (Not let810) let27) := by timed impliesElim lean_s1224
have lean_s1226 : let809 := by R1 lean_s1222, lean_s1225, let810, [(- 1), (- 1)]
have lean_s1227 : let713 := by timed rfl
have lean_s1228 : (Eq let807 let807) := by timed rfl
let lean_s1229 := by timed congr lean_s1227 lean_s1228
have lean_s1230 : let69 := by timed rfl
let lean_s1231 := by timed flipCongrArg lean_s1230 [Eq]
have lean_s1232 : (Eq let67 let69) := by timed congr lean_s1231 lean_r12
have lean_s1233 : (Eq let67 True) := by timed Eq.trans lean_s1232 lean_r13
have lean_s1234 : (Eq let68 True) := by timed Eq.trans lean_r11 lean_s1233
have lean_s1235 : let68 := by timed trueElim lean_s1234
let lean_s1236 := by timed congr lean_s1227 lean_s1235
have lean_s1237 : let145 := by timed rfl
let lean_s1238 := by timed flipCongrArg lean_s1237 [Eq]
have lean_s1239 : (Eq let141 let145) := by timed congr lean_s1238 lean_r198
have lean_s1240 : (Eq let141 True) := by timed Eq.trans lean_s1239 lean_r42
have lean_s1241 : (Eq let142 True) := by timed Eq.trans lean_r40 lean_s1240
have lean_s1242 : let142 := by timed trueElim lean_s1241
let lean_s1243 := by timed congr lean_s1227 lean_s1242
have lean_s1244 : (Eq let27 let27) := by timed rfl
let lean_s1245 := by timed congr lean_s1243 lean_s1244
let lean_s1246 := by timed congr lean_s1236 lean_s1245
have lean_s1247 : (Eq let809 let808) := by timed congr lean_s1229 lean_s1246
have lean_s1248 : let808 := by timed eqResolve lean_s1226 lean_s1247
have lean_s1249 : (Or let63 (Or let2 (Or let27 let807))) := by permutateOr lean_s1248, [1, 2, 3, 0], (- 1)
have lean_s1250 : (Or let887 (Or let762 (Or let760 let845))) :=
  (scope (fun lean_a258 : let22 =>
    (scope (fun lean_a259 : let20 =>
      (scope (fun lean_a260 : let33 =>
        (scope (fun lean_a261 : let30 =>
          (scope (fun lean_a262 : let9 =>
            (scope (fun lean_a263 : let27 =>
              have lean_s1250 : let828 := by timed Eq.symm lean_r109
              have lean_s1251 : let371 := by timed eqResolve lean_a263 lean_s1250
              let lean_s1252 := by timed And.intro lean_a261 lean_a259
              have lean_s1253 : let829 := by timed And.intro lean_s1251 lean_s1252
              have lean_s1254 : let831 :=
                (scope (fun lean_a261 : let371 =>
                  (scope (fun lean_a262 : let30 =>
                    (scope (fun lean_a263 : let20 =>
                      have lean_s1254 : let806 := by timed Eq.symm lean_a263
                      have lean_s1255 : let443 := by timed Eq.symm lean_a262
                      have lean_s1256 : let30 := by timed Eq.symm lean_s1255
                      let lean_s1257 := by timed Eq.trans lean_s1254 lean_s1256
                      have lean_s1258 : let827 := by timed Eq.symm lean_a261
                      have lean_s1259 : let371 := by timed Eq.symm lean_s1258
                      have lean_s1260 : let832 := by timed flipCongrArg lean_s1259 [xx5fcount]
                      have lean_s1261 : let769 := by timed Eq.trans lean_s1257 lean_s1260
                      show let769 from lean_s1261
                ))))))
              have lean_s1255 : let830 := by liftOrNToImp lean_s1254, 3
              have lean_s1256 : let769 := by timed modusPonens lean_s1253 lean_s1255
              let lean_s1257 := by timed And.intro lean_a260 lean_a258
              have lean_s1258 : let889 := by timed And.intro lean_s1251 lean_s1257
              have lean_s1259 : (Or let824 (Or let760 let890)) :=
                (scope (fun lean_a262 : let371 =>
                  (scope (fun lean_a263 : let33 =>
                    (scope (fun lean_a264 : let22 =>
                      have lean_s1259 : let891 := by timed Eq.symm lean_a264
                      have lean_s1260 : let179 := by timed Eq.symm lean_a263
                      have lean_s1261 : let33 := by timed Eq.symm lean_s1260
                      let lean_s1262 := by timed Eq.trans lean_s1259 lean_s1261
                      have lean_s1263 : let827 := by timed Eq.symm lean_a262
                      have lean_s1264 : let371 := by timed Eq.symm lean_s1263
                      have lean_s1265 : let826 := by timed flipCongrArg lean_s1264 [sx5fcount]
                      have lean_s1266 : let835 := by timed Eq.trans lean_s1262 lean_s1265
                      show let835 from lean_s1266
                ))))))
              have lean_s1260 : (Implies let889 let835) := by liftOrNToImp lean_s1259, 3
              have lean_s1261 : let835 := by timed modusPonens lean_s1258 lean_s1260
              let lean_s1262 := by timed And.intro lean_s1256 lean_s1261
              have lean_s1263 : let836 := by timed And.intro lean_a262 lean_s1262
              show let836 from lean_s1263
  ))))))))))))
have lean_s1251 : let888 := by liftOrNToImp lean_s1250, 6
have lean_s1252 : (Eq let36 let36) := by timed rfl
let lean_s1253 := by timed flipCongrArg lean_s1252 [Implies]
have lean_s1254 : let838 := by timed falseIntro lean_s1215
have lean_s1255 : (Eq let888 let38) := by timed congr lean_s1253 lean_s1254
have lean_s1256 : (Eq let888 let37) := by timed Eq.trans lean_s1255 lean_r2
have lean_s1257 : let37 := by timed eqResolve lean_s1251 lean_s1256
have lean_s1258 : (Or let887 let820) := by timed flipNotAnd lean_s1257 [let22, let20, let33, let30, let9, let27]
have lean_s1259 : (Or let363 (Or let887 let816)) := by permutateOr lean_s1258, [4, 0, 2, 1, 3, 5], (- 1)
have lean_s1260 : let9 := by andElim lean_s1196, 0
let lean_s1261 := by R2 lean_s1259, lean_s1260, let9, [(- 1), 0]
have lean_s1262 : let320 := by andElim lean_s1196, 11
have lean_s1263 : (Or let319 let30) := by timed iteElim2 lean_s1262
have lean_s1264 : (Or let30 let319) := by permutateOr lean_s1263, [1, 0], (- 1)
let lean_s1265 := by R2 lean_s1261, lean_s1264, let30, [(- 1), (- 1)]
have lean_s1266 : let336 := by andElim lean_s1196, 6
have lean_s1267 : (Or let335 let33) := by timed iteElim2 lean_s1266
have lean_s1268 : (Or let33 let335) := by permutateOr lean_s1267, [1, 0], (- 1)
let lean_s1269 := by R2 lean_s1265, lean_s1268, let33, [(- 1), (- 1)]
let lean_s1270 := by R2 lean_s1269, lean_s1209, let20, [(- 1), (- 1)]
have lean_s1271 : (Or let863 let318) := by timed @cnfAndPos [let318, let317] 0
have lean_s1272 : (Or let318 let863) := by permutateOr lean_s1271, [1, 0], (- 1)
let lean_s1273 := by R1 lean_s1270, lean_s1272, let319, [(- 1), (- 1)]
have lean_s1274 : (Or let833 let318) := by timed @cnfAndPos [let318, let334] 0
have lean_s1275 : (Or let318 let833) := by permutateOr lean_s1274, [1, 0], (- 1)
let lean_s1276 := by R1 lean_s1273, lean_s1275, let335, [(- 1), (- 1)]
have lean_s1277 : (Or let887 (Or let757 (Or let318 let886))) := by R1 lean_s1276, lean_s1206, let322, [(- 1), (- 1)]
have lean_s1278 : (Or let887 (Or let757 let886)) := by factor lean_s1277, (- 1)
have lean_s1279 : let884 :=
  (scope (fun lean_a262 : let252 =>
    have lean_s1279 : let884 :=
      (scope (fun lean_a262 : let252 =>
        have lean_s1279 : let253 := by timed Eq.symm lean_a262
        have lean_s1280 : let252 := by timed Eq.symm lean_s1279
        let lean_s1281 := by timed flipCongrArg lean_s1280 [Eq]
        have lean_s1282 : let238 := by timed rfl
        have lean_s1283 : (Eq let318 let41) := by timed congr lean_s1281 lean_s1282
        have lean_s1284 : (Eq let42 let543) := by timed flipCongrArg lean_r4 [Not]
        have lean_s1285 : (Eq let42 True) := by timed Eq.trans lean_s1284 lean_r164
        have lean_s1286 : (Eq let43 True) := by timed Eq.trans lean_r3 lean_s1285
        have lean_s1287 : let43 := by timed trueElim lean_s1286
        have lean_s1288 : let869 := by timed Eq.trans lean_s1283 lean_s1287
        have lean_s1289 : let866 := by timed falseElim lean_s1288
        show let866 from lean_s1289
      ))
    have lean_s1280 : let885 := by liftOrNToImp lean_s1279, 1
    have lean_s1281 : let866 := by timed modusPonens lean_a262 lean_s1280
    show let866 from lean_s1281
  ))
have lean_s1280 : let885 := by liftOrNToImp lean_s1279, 1
have lean_s1281 : let884 := by timed impliesElim lean_s1280
have lean_s1282 : (Or let866 let880) := by permutateOr lean_s1281, [1, 0], (- 1)
let lean_s1283 := by R1 lean_s1278, lean_s1282, let318, [(- 1), (- 1)]
let lean_s1284 := by R1 lean_s1283, lean_s1204, let258, [(- 1), (- 1)]
have lean_s1285 : (Or let879 let22) := by timed iteElim1 lean_s1197
have lean_s1286 : (Or let22 let879) := by permutateOr lean_s1285, [1, 0], (- 1)
have lean_s1287 : (Or let757 (Or let880 let881)) := by R2 lean_s1284, lean_s1286, let22, [(- 1), (- 1)]
have lean_s1288 : (Or let757 let881) := by factor lean_s1287, (- 1)
have lean_s1289 : (Or let757 (Or let879 let879)) := by R2 lean_s1288, lean_s1201, let252, [(- 1), (- 1)]
have lean_s1290 : (Or let757 let879) := by factor lean_s1289, (- 1)
let lean_s1291 := by R2 lean_s1290, lean_s1199, let337, [(- 1), (- 1)]
have lean_s1292 : (Or let758 (Or let762 (Or let834 let845))) :=
  (scope (fun lean_a262 : let16 =>
    (scope (fun lean_a263 : let20 =>
      (scope (fun lean_a264 : let78 =>
        (scope (fun lean_a265 : let30 =>
          (scope (fun lean_a266 : let9 =>
            (scope (fun lean_a267 : let27 =>
              have lean_s1292 : let828 := by timed Eq.symm lean_r109
              have lean_s1293 : let371 := by timed eqResolve lean_a267 lean_s1292
              let lean_s1294 := by timed And.intro lean_a265 lean_a263
              have lean_s1295 : let829 := by timed And.intro lean_s1293 lean_s1294
              have lean_s1296 : let831 :=
                (scope (fun lean_a263 : let371 =>
                  (scope (fun lean_a264 : let30 =>
                    (scope (fun lean_a265 : let20 =>
                      have lean_s1296 : let806 := by timed Eq.symm lean_a265
                      have lean_s1297 : let443 := by timed Eq.symm lean_a264
                      have lean_s1298 : let30 := by timed Eq.symm lean_s1297
                      let lean_s1299 := by timed Eq.trans lean_s1296 lean_s1298
                      have lean_s1300 : let827 := by timed Eq.symm lean_a263
                      have lean_s1301 : let371 := by timed Eq.symm lean_s1300
                      have lean_s1302 : let832 := by timed flipCongrArg lean_s1301 [xx5fcount]
                      have lean_s1303 : let769 := by timed Eq.trans lean_s1299 lean_s1302
                      show let769 from lean_s1303
                ))))))
              have lean_s1297 : let830 := by liftOrNToImp lean_s1296, 3
              have lean_s1298 : let769 := by timed modusPonens lean_s1295 lean_s1297
              have lean_s1299 : let848 := by timed And.intro lean_a264 lean_a262
              have lean_s1300 : (Or let834 (Or let758 let164)) :=
                (scope (fun lean_a263 : let78 =>
                  (scope (fun lean_a264 : let16 =>
                    have lean_s1300 : let799 := by timed Eq.symm lean_a264
                    have lean_s1301 : (Eq let77 let15) := by timed Eq.symm lean_a263
                    have lean_s1302 : let78 := by timed Eq.symm lean_s1301
                    have lean_s1303 : let164 := by timed Eq.trans lean_s1300 lean_s1302
                    show let164 from lean_s1303
                ))))
              have lean_s1301 : (Implies let848 let164) := by liftOrNToImp lean_s1300, 2
              have lean_s1302 : let164 := by timed modusPonens lean_s1299 lean_s1301
              have lean_s1303 : (Or (Not let164) let846) :=
                (scope (fun lean_a263 : let164 =>
                  have lean_s1303 : let163 := by timed eqResolve lean_a263 lean_r50
                  have lean_s1304 : let846 := by timed Eq.symm lean_s1303
                  show let846 from lean_s1304
                ))
              have lean_s1304 : (Implies let164 let846) := by liftOrNToImp lean_s1303, 1
              have lean_s1305 : let846 := by timed modusPonens lean_s1302 lean_s1304
              have lean_s1306 : let847 := by timed And.intro lean_s1293 lean_s1305
              have lean_s1307 : (Or let824 (Or (Not let846) let835)) :=
                (scope (fun lean_a264 : let371 =>
                  (scope (fun lean_a265 : let846 =>
                    have lean_s1307 : let163 := by timed Eq.symm lean_a265
                    have lean_s1308 : let846 := by timed Eq.symm lean_s1307
                    have lean_s1309 : let827 := by timed Eq.symm lean_a264
                    have lean_s1310 : let371 := by timed Eq.symm lean_s1309
                    have lean_s1311 : let826 := by timed flipCongrArg lean_s1310 [sx5fcount]
                    have lean_s1312 : let835 := by timed Eq.trans lean_s1308 lean_s1311
                    show let835 from lean_s1312
                ))))
              have lean_s1308 : (Implies let847 let835) := by liftOrNToImp lean_s1307, 2
              have lean_s1309 : let835 := by timed modusPonens lean_s1306 lean_s1308
              let lean_s1310 := by timed And.intro lean_s1298 lean_s1309
              have lean_s1311 : let836 := by timed And.intro lean_a266 lean_s1310
              show let836 from lean_s1311
  ))))))))))))
have lean_s1293 : let837 := by liftOrNToImp lean_s1292, 6
have lean_s1294 : (Eq let79 let79) := by timed rfl
let lean_s1295 := by timed flipCongrArg lean_s1294 [Implies]
have lean_s1296 : let838 := by timed falseIntro lean_s1215
have lean_s1297 : (Eq let837 let81) := by timed congr lean_s1295 lean_s1296
have lean_s1298 : (Eq let837 let80) := by timed Eq.trans lean_s1297 lean_r18
have lean_s1299 : let80 := by timed eqResolve lean_s1293 lean_s1298
have lean_s1300 : (Or let758 (Or let762 (Or let834 let818))) := by timed flipNotAnd lean_s1299 [let16, let20, let78, let30, let9, let27]
have lean_s1301 : (Or let363 (Or let758 (Or let834 let814))) := by permutateOr lean_s1300, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1302 := by R2 lean_s1301, lean_s1260, let9, [(- 1), 0]
have lean_s1303 : (Or let833 let78) := by timed iteElim1 lean_s1266
have lean_s1304 : (Or let78 let833) := by permutateOr lean_s1303, [1, 0], (- 1)
let lean_s1305 := by R2 lean_s1302, lean_s1304, let78, [(- 1), (- 1)]
let lean_s1306 := by R2 lean_s1305, lean_s1268, let335, [(- 1), (- 1)]
have lean_s1307 : (Or let758 (Or let762 (Or let760 (Or let764 (Or let363 (Or let757 let770)))))) :=
  (scope (fun lean_a265 : let16 =>
    (scope (fun lean_a266 : let20 =>
      (scope (fun lean_a267 : let33 =>
        (scope (fun lean_a268 : let30 =>
          (scope (fun lean_a269 : let9 =>
            (scope (fun lean_a270 : let27 =>
              have lean_s1307 : let828 := by timed Eq.symm lean_r109
              have lean_s1308 : let371 := by timed eqResolve lean_a270 lean_s1307
              let lean_s1309 := by timed And.intro lean_a268 lean_a266
              have lean_s1310 : let829 := by timed And.intro lean_s1308 lean_s1309
              have lean_s1311 : let831 :=
                (scope (fun lean_a265 : let371 =>
                  (scope (fun lean_a266 : let30 =>
                    (scope (fun lean_a267 : let20 =>
                      have lean_s1311 : let806 := by timed Eq.symm lean_a267
                      have lean_s1312 : let443 := by timed Eq.symm lean_a266
                      have lean_s1313 : let30 := by timed Eq.symm lean_s1312
                      let lean_s1314 := by timed Eq.trans lean_s1311 lean_s1313
                      have lean_s1315 : let827 := by timed Eq.symm lean_a265
                      have lean_s1316 : let371 := by timed Eq.symm lean_s1315
                      have lean_s1317 : let832 := by timed flipCongrArg lean_s1316 [xx5fcount]
                      have lean_s1318 : let769 := by timed Eq.trans lean_s1314 lean_s1317
                      show let769 from lean_s1318
                ))))))
              have lean_s1312 : let830 := by liftOrNToImp lean_s1311, 3
              have lean_s1313 : let769 := by timed modusPonens lean_s1310 lean_s1312
              let lean_s1314 := by timed And.intro lean_a267 lean_a265
              have lean_s1315 : let822 := by timed And.intro lean_s1308 lean_s1314
              have lean_s1316 : let825 :=
                (scope (fun lean_a265 : let371 =>
                  (scope (fun lean_a266 : let33 =>
                    (scope (fun lean_a267 : let16 =>
                      have lean_s1316 : let799 := by timed Eq.symm lean_a267
                      have lean_s1317 : let179 := by timed Eq.symm lean_a266
                      have lean_s1318 : let33 := by timed Eq.symm lean_s1317
                      let lean_s1319 := by timed Eq.trans lean_s1316 lean_s1318
                      have lean_s1320 : let827 := by timed Eq.symm lean_a265
                      have lean_s1321 : let371 := by timed Eq.symm lean_s1320
                      have lean_s1322 : let826 := by timed flipCongrArg lean_s1321 [sx5fcount]
                      have lean_s1323 : let768 := by timed Eq.trans lean_s1319 lean_s1322
                      show let768 from lean_s1323
                ))))))
              have lean_s1317 : let823 := by liftOrNToImp lean_s1316, 3
              have lean_s1318 : let768 := by timed modusPonens lean_s1315 lean_s1317
              let lean_s1319 := by timed And.intro lean_s1313 lean_s1318
              have lean_s1320 : let770 := by timed And.intro lean_a269 lean_s1319
              show let770 from lean_s1320
  ))))))))))))
have lean_s1308 : let821 := by liftOrNToImp lean_s1307, 6
have lean_s1309 : (Eq let557 let557) := by timed rfl
let lean_s1310 := by timed flipCongrArg lean_s1309 [Implies]
have lean_s1311 : (Or let363 (Or let774 let773)) :=
  (scope (fun lean_a265 : let9 =>
    (scope (fun lean_a266 : let769 =>
      (scope (fun lean_a267 : let768 =>
        have lean_s1311 : let775 := by timed Eq.symm lean_a267
        have lean_s1312 : let777 :=
          (scope (fun lean_a265 : let775 =>
            have lean_s1312 : let70 := by timed trueElim lean_r14
            have lean_s1313 : let790 := by timed And.intro lean_s1312 lean_a265
            have lean_s1314 : let791 := by arithMulPos [let7, let12, let61], 4
            have lean_s1315 : let789 := by timed modusPonens lean_s1313 lean_s1314
            have lean_s1316 : let786 := by timed Eq.symm lean_a266
            have lean_s1317 : let787 := by timed And.intro lean_s1312 lean_s1316
            have lean_s1318 : let788 := by arithMulPos [let6, let12, let61], 4
            have lean_s1319 : let785 := by timed modusPonens lean_s1317 lean_s1318
            have lean_s1320 : let72 := by timed trueElim lean_r15
            have lean_s1321 : let783 := by timed And.intro lean_s1320 lean_a265
            have lean_s1322 : let784 := by arithMulNeg [let8, let3, let71], 3
            have lean_s1323 : let782 := by timed modusPonens lean_s1321 lean_s1322
            have lean_s1324 : let781 := by sumBounds [lean_s1315, lean_s1319, lean_s1323]
            let lean_s1325 := by timed congrHAdd lean_r17 lean_r26
            have lean_s1326 : (Eq let780 let84) := by timed congrHAdd lean_r16 lean_s1325
            have lean_s1327 : (Eq let780 let59) := by timed Eq.trans lean_s1326 lean_r19
            let lean_s1328 := by timed flipCongrArg lean_s1327 [LE.le]
            let lean_s1329 := by timed congrHAdd lean_r20 lean_r29
            have lean_s1330 : (Eq let779 let265) := by timed congrHAdd lean_r20 lean_s1329
            have lean_s1331 : (Eq let779 let58) := by timed Eq.trans lean_s1330 lean_r100
            have lean_s1332 : (Eq let781 let86) := by timed congr lean_s1328 lean_s1331
            have lean_s1333 : (Eq let781 False) := by timed Eq.trans lean_s1332 lean_r21
            show False from by timed eqResolve lean_s1324 lean_s1333
          ))
        have lean_s1313 : let776 := by liftOrNToNeg lean_s1312
        show False from by timed contradiction lean_s1311 lean_s1313
  ))))))
have lean_s1312 : (Not let770) := by liftOrNToNeg lean_s1311
have lean_s1313 : let772 := by timed falseIntro lean_s1312
have lean_s1314 : (Eq let821 let559) := by timed congr lean_s1310 lean_s1313
have lean_s1315 : (Eq let821 let558) := by timed Eq.trans lean_s1314 lean_r181
have lean_s1316 : let558 := by timed eqResolve lean_s1308 lean_s1315
have lean_s1317 : (Or let758 let820) := by timed flipNotAnd lean_s1316 [let16, let20, let33, let30, let9, let27]
have lean_s1318 : (Or let363 (Or let758 let816)) := by permutateOr lean_s1317, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1319 := by R1 lean_s1306, lean_s1318, let33, [(- 1), (- 1)]
have lean_s1320 : (Or let758 (Or let762 (Or let764 (Or let757 let815)))) := by R2 lean_s1319, lean_s1260, let9, [(- 1), 0]
have lean_s1321 : let815 := by factor lean_s1320, (- 1)
let lean_s1322 := by R2 lean_s1321, lean_s1249, let27, [(- 1), (- 1)]
have lean_s1323 : let64 := by andElim lean_s1196, 1
let lean_s1324 := by R1 lean_s1322, lean_s1323, let63, [(- 1), 0]
have lean_s1325 : let360 := by andElim lean_s1196, 2
let lean_s1326 := by R2 lean_s1324, lean_s1325, let360, [(- 1), 0]
have lean_s1327 : (Or let758 (Or let762 (Or let363 (Or let139 let770)))) :=
  (scope (fun lean_a265 : let16 =>
    (scope (fun lean_a266 : let20 =>
      (scope (fun lean_a267 : let9 =>
        (scope (fun lean_a268 : let2 =>
          have lean_s1327 : let800 := by timed Eq.symm lean_r51
          have lean_s1328 : let165 := by timed eqResolve lean_a268 lean_s1327
          have lean_s1329 : let801 := by timed And.intro lean_s1328 lean_a266
          have lean_s1330 : let804 :=
            (scope (fun lean_a265 : let165 =>
              (scope (fun lean_a266 : let20 =>
                have lean_s1330 : let806 := by timed Eq.symm lean_a266
                have lean_s1331 : let798 := by timed Eq.symm lean_a265
                have lean_s1332 : let165 := by timed Eq.symm lean_s1331
                have lean_s1333 : let805 := by timed flipCongrArg lean_s1332 [xx5fcount]
                have lean_s1334 : let769 := by timed Eq.trans lean_s1330 lean_s1333
                show let769 from lean_s1334
            ))))
          have lean_s1331 : let802 := by liftOrNToImp lean_s1330, 2
          have lean_s1332 : let769 := by timed modusPonens lean_s1329 lean_s1331
          have lean_s1333 : let792 := by timed And.intro lean_s1328 lean_a265
          have lean_s1334 : let796 :=
            (scope (fun lean_a265 : let165 =>
              (scope (fun lean_a266 : let16 =>
                have lean_s1334 : let799 := by timed Eq.symm lean_a266
                have lean_s1335 : let798 := by timed Eq.symm lean_a265
                have lean_s1336 : let165 := by timed Eq.symm lean_s1335
                have lean_s1337 : let797 := by timed flipCongrArg lean_s1336 [sx5fcount]
                have lean_s1338 : let768 := by timed Eq.trans lean_s1334 lean_s1337
                show let768 from lean_s1338
            ))))
          have lean_s1335 : let793 := by liftOrNToImp lean_s1334, 2
          have lean_s1336 : let768 := by timed modusPonens lean_s1333 lean_s1335
          let lean_s1337 := by timed And.intro lean_s1332 lean_s1336
          have lean_s1338 : let770 := by timed And.intro lean_a267 lean_s1337
          show let770 from lean_s1338
  ))))))))
have lean_s1328 : let771 := by liftOrNToImp lean_s1327, 4
have lean_s1329 : (Eq let87 let87) := by timed rfl
let lean_s1330 := by timed flipCongrArg lean_s1329 [Implies]
have lean_s1331 : let772 := by timed falseIntro lean_s1312
have lean_s1332 : (Eq let771 let89) := by timed congr lean_s1330 lean_s1331
have lean_s1333 : (Eq let771 let88) := by timed Eq.trans lean_s1332 lean_r22
have lean_s1334 : let88 := by timed eqResolve lean_s1328 lean_s1333
have lean_s1335 : (Or let758 let767) := by timed flipNotAnd lean_s1334 [let16, let20, let9, let2]
have lean_s1336 : (Or let363 (Or let758 let765)) := by permutateOr lean_s1335, [2, 0, 1, 3], (- 1)
let lean_s1337 := by R1 lean_s1326, lean_s1336, let2, [(- 1), (- 1)]
have lean_s1338 : (Or let758 (Or let762 (Or let764 let763))) := by R2 lean_s1337, lean_s1260, let9, [(- 1), 0]
have lean_s1339 : (Or let758 (Or let762 let764)) := by factor lean_s1338, 4
let lean_s1340 := by R2 lean_s1339, lean_s1264, let30, [(- 1), (- 1)]
let lean_s1341 := by R2 lean_s1340, lean_s1209, let20, [(- 1), (- 1)]
have lean_s1342 : (Or let863 let317) := by timed @cnfAndPos [let318, let317] 1
have lean_s1343 : (Or let317 let863) := by permutateOr lean_s1342, [1, 0], (- 1)
let lean_s1344 := by R1 lean_s1341, lean_s1343, let319, [(- 1), (- 1)]
let lean_s1345 := by R1 lean_s1344, lean_s1206, let322, [(- 1), (- 1)]
have lean_s1346 : let877 :=
  (scope (fun lean_a265 : let317 =>
    have lean_s1346 : let877 :=
      (scope (fun lean_a266 : let317 =>
        have lean_s1346 : let370 := by timed Eq.symm lean_a266
        have lean_s1347 : let317 := by timed Eq.symm lean_s1346
        let lean_s1348 := by timed flipCongrArg lean_s1347 [Eq]
        have lean_s1349 : let373 := by timed rfl
        have lean_s1350 : (Eq let334 let45) := by timed congr lean_s1348 lean_s1349
        have lean_s1351 : (Eq let46 let543) := by timed flipCongrArg lean_r6 [Not]
        have lean_s1352 : (Eq let46 True) := by timed Eq.trans lean_s1351 lean_r164
        have lean_s1353 : (Eq let47 True) := by timed Eq.trans lean_r5 lean_s1352
        have lean_s1354 : let47 := by timed trueElim lean_s1353
        have lean_s1355 : (Eq let334 False) := by timed Eq.trans lean_s1350 lean_s1354
        have lean_s1356 : let876 := by timed falseElim lean_s1355
        show let876 from lean_s1356
      ))
    have lean_s1347 : let878 := by liftOrNToImp lean_s1346, 1
    have lean_s1348 : let876 := by timed modusPonens lean_a265 lean_s1347
    show let876 from lean_s1348
  ))
have lean_s1347 : let878 := by liftOrNToImp lean_s1346, 1
have lean_s1348 : let877 := by timed impliesElim lean_s1347
have lean_s1349 : (Or let876 let875) := by permutateOr lean_s1348, [1, 0], (- 1)
let lean_s1350 := by R1 lean_s1345, lean_s1349, let317, [(- 1), (- 1)]
have lean_s1351 : let867 :=
  (scope (fun lean_a266 : let258 =>
    have lean_s1351 : let867 :=
      (scope (fun lean_a267 : let258 =>
        have lean_s1351 : let259 := by timed Eq.symm lean_a267
        have lean_s1352 : let258 := by timed Eq.symm lean_s1351
        let lean_s1353 := by timed flipCongrArg lean_s1352 [Eq]
        have lean_s1354 : let238 := by timed rfl
        have lean_s1355 : (Eq let318 let48) := by timed congr lean_s1353 lean_s1354
        have lean_s1356 : (Eq let49 let543) := by timed flipCongrArg lean_r167 [Not]
        have lean_s1357 : (Eq let49 True) := by timed Eq.trans lean_s1356 lean_r164
        have lean_s1358 : (Eq let50 True) := by timed Eq.trans lean_r7 lean_s1357
        have lean_s1359 : let50 := by timed trueElim lean_s1358
        have lean_s1360 : let869 := by timed Eq.trans lean_s1355 lean_s1359
        have lean_s1361 : let866 := by timed falseElim lean_s1360
        show let866 from lean_s1361
      ))
    have lean_s1352 : let868 := by liftOrNToImp lean_s1351, 1
    have lean_s1353 : let866 := by timed modusPonens lean_a266 lean_s1352
    show let866 from lean_s1353
  ))
have lean_s1352 : let868 := by liftOrNToImp lean_s1351, 1
have lean_s1353 : let867 := by timed impliesElim lean_s1352
have lean_s1354 : (Or let866 let865) := by permutateOr lean_s1353, [1, 0], (- 1)
let lean_s1355 := by R1 lean_s1350, lean_s1354, let258, [(- 1), (- 1)]
have lean_s1356 : (Or let833 let334) := by timed @cnfAndPos [let318, let334] 1
have lean_s1357 : (Or let334 let833) := by permutateOr lean_s1356, [1, 0], (- 1)
let lean_s1358 := by R2 lean_s1355, lean_s1357, let334, [(- 1), (- 1)]
have lean_s1359 : (Or let758 (Or let833 let833)) := by R2 lean_s1358, lean_s1275, let318, [(- 1), (- 1)]
have lean_s1360 : (Or let758 let833) := by factor lean_s1359, (- 1)
let lean_s1361 := by R2 lean_s1360, lean_s1268, let335, [(- 1), (- 1)]
have lean_s1362 : (Or let758 (Or let870 (Or let760 (Or let764 let859)))) :=
  (scope (fun lean_a267 : let16 =>
    (scope (fun lean_a268 : let14 =>
      (scope (fun lean_a269 : let33 =>
        (scope (fun lean_a270 : let30 =>
          (scope (fun lean_a271 : let9 =>
            (scope (fun lean_a272 : let27 =>
              have lean_s1362 : let828 := by timed Eq.symm lean_r109
              have lean_s1363 : let371 := by timed eqResolve lean_a272 lean_s1362
              let lean_s1364 := by timed And.intro lean_a270 lean_a268
              have lean_s1365 : let872 := by timed And.intro lean_s1363 lean_s1364
              have lean_s1366 : (Or let824 (Or let764 let873)) :=
                (scope (fun lean_a267 : let371 =>
                  (scope (fun lean_a268 : let30 =>
                    (scope (fun lean_a269 : let14 =>
                      have lean_s1366 : let874 := by timed Eq.symm lean_a269
                      have lean_s1367 : let443 := by timed Eq.symm lean_a268
                      have lean_s1368 : let30 := by timed Eq.symm lean_s1367
                      let lean_s1369 := by timed Eq.trans lean_s1366 lean_s1368
                      have lean_s1370 : let827 := by timed Eq.symm lean_a267
                      have lean_s1371 : let371 := by timed Eq.symm lean_s1370
                      have lean_s1372 : let832 := by timed flipCongrArg lean_s1371 [xx5fcount]
                      have lean_s1373 : let850 := by timed Eq.trans lean_s1369 lean_s1372
                      show let850 from lean_s1373
                ))))))
              have lean_s1367 : (Implies let872 let850) := by liftOrNToImp lean_s1366, 3
              have lean_s1368 : let850 := by timed modusPonens lean_s1365 lean_s1367
              let lean_s1369 := by timed And.intro lean_a269 lean_a267
              have lean_s1370 : let822 := by timed And.intro lean_s1363 lean_s1369
              have lean_s1371 : let825 :=
                (scope (fun lean_a267 : let371 =>
                  (scope (fun lean_a268 : let33 =>
                    (scope (fun lean_a269 : let16 =>
                      have lean_s1371 : let799 := by timed Eq.symm lean_a269
                      have lean_s1372 : let179 := by timed Eq.symm lean_a268
                      have lean_s1373 : let33 := by timed Eq.symm lean_s1372
                      let lean_s1374 := by timed Eq.trans lean_s1371 lean_s1373
                      have lean_s1375 : let827 := by timed Eq.symm lean_a267
                      have lean_s1376 : let371 := by timed Eq.symm lean_s1375
                      have lean_s1377 : let826 := by timed flipCongrArg lean_s1376 [sx5fcount]
                      have lean_s1378 : let768 := by timed Eq.trans lean_s1374 lean_s1377
                      show let768 from lean_s1378
                ))))))
              have lean_s1372 : let823 := by liftOrNToImp lean_s1371, 3
              have lean_s1373 : let768 := by timed modusPonens lean_s1370 lean_s1372
              let lean_s1374 := by timed And.intro lean_s1368 lean_s1373
              have lean_s1375 : let851 := by timed And.intro lean_a271 lean_s1374
              show let851 from lean_s1375
  ))))))))))))
have lean_s1363 : let871 := by liftOrNToImp lean_s1362, 6
have lean_s1364 : (Eq let376 let376) := by timed rfl
let lean_s1365 := by timed flipCongrArg lean_s1364 [Implies]
have lean_s1366 : let853 := by timed falseIntro lean_s5
have lean_s1367 : (Eq let871 let378) := by timed congr lean_s1365 lean_s1366
have lean_s1368 : (Eq let871 let377) := by timed Eq.trans lean_s1367 lean_r114
have lean_s1369 : let377 := by timed eqResolve lean_s1363 lean_s1368
have lean_s1370 : (Or let758 (Or let870 let819)) := by timed flipNotAnd lean_s1369 [let16, let14, let33, let30, let9, let27]
have lean_s1371 : (Or let363 (Or let758 (Or let760 (Or let870 let813)))) := by permutateOr lean_s1370, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1372 := by R2 lean_s1371, lean_s1260, let9, [(- 1), 0]
let lean_s1373 := by R2 lean_s1372, lean_s1264, let30, [(- 1), (- 1)]
let lean_s1374 := by R1 lean_s1373, lean_s1272, let319, [(- 1), (- 1)]
let lean_s1375 := by R1 lean_s1374, lean_s1354, let318, [(- 1), (- 1)]
have lean_s1376 : (Or let864 let14) := by timed iteElim1 lean_s1207
have lean_s1377 : (Or let14 let864) := by permutateOr lean_s1376, [1, 0], (- 1)
let lean_s1378 := by R2 lean_s1375, lean_s1377, let14, [(- 1), (- 1)]
have lean_s1379 : (Or let758 (Or let760 (Or let757 (Or let864 let864)))) := by R2 lean_s1378, lean_s1206, let258, [(- 1), (- 1)]
have lean_s1380 : (Or let758 (Or let760 (Or let757 let864))) := by factor lean_s1379, (- 1)
let lean_s1381 := by R2 lean_s1380, lean_s1209, let322, [(- 1), (- 1)]
have lean_s1382 : (Or let863 let53) := by timed iteElim1 lean_s1262
have lean_s1383 : (Or let53 let863) := by permutateOr lean_s1382, [1, 0], (- 1)
let lean_s1384 := by R2 lean_s1383, lean_s1264, let319, [(- 1), (- 1)]
have lean_s1385 : (Or let758 (Or let762 (Or let760 (Or let849 let859)))) :=
  (scope (fun lean_a267 : let16 =>
    (scope (fun lean_a268 : let20 =>
      (scope (fun lean_a269 : let33 =>
        (scope (fun lean_a270 : let53 =>
          (scope (fun lean_a271 : let9 =>
            (scope (fun lean_a272 : let27 =>
              have lean_s1385 : let828 := by timed Eq.symm lean_r109
              have lean_s1386 : let371 := by timed eqResolve lean_a272 lean_s1385
              have lean_s1387 : let862 := by timed And.intro lean_a270 lean_a268
              have lean_s1388 : (Or let849 (Or let762 let607)) :=
                (scope (fun lean_a268 : let53 =>
                  (scope (fun lean_a269 : let20 =>
                    have lean_s1388 : let806 := by timed Eq.symm lean_a269
                    have lean_s1389 : (Eq let52 let13) := by timed Eq.symm lean_a268
                    have lean_s1390 : let53 := by timed Eq.symm lean_s1389
                    have lean_s1391 : let607 := by timed Eq.trans lean_s1388 lean_s1390
                    show let607 from lean_s1391
                ))))
              have lean_s1389 : (Implies let862 let607) := by liftOrNToImp lean_s1388, 2
              have lean_s1390 : let607 := by timed modusPonens lean_s1387 lean_s1389
              have lean_s1391 : (Or (Not let607) let860) :=
                (scope (fun lean_a268 : let607 =>
                  have lean_s1391 : let606 := by timed eqResolve lean_a268 lean_r226
                  have lean_s1392 : let860 := by timed Eq.symm lean_s1391
                  show let860 from lean_s1392
                ))
              have lean_s1392 : (Implies let607 let860) := by liftOrNToImp lean_s1391, 1
              have lean_s1393 : let860 := by timed modusPonens lean_s1390 lean_s1392
              have lean_s1394 : let861 := by timed And.intro lean_s1386 lean_s1393
              have lean_s1395 : (Or let824 (Or (Not let860) let850)) :=
                (scope (fun lean_a269 : let371 =>
                  (scope (fun lean_a270 : let860 =>
                    have lean_s1395 : let606 := by timed Eq.symm lean_a270
                    have lean_s1396 : let860 := by timed Eq.symm lean_s1395
                    have lean_s1397 : let827 := by timed Eq.symm lean_a269
                    have lean_s1398 : let371 := by timed Eq.symm lean_s1397
                    have lean_s1399 : let832 := by timed flipCongrArg lean_s1398 [xx5fcount]
                    have lean_s1400 : let850 := by timed Eq.trans lean_s1396 lean_s1399
                    show let850 from lean_s1400
                ))))
              have lean_s1396 : (Implies let861 let850) := by liftOrNToImp lean_s1395, 2
              have lean_s1397 : let850 := by timed modusPonens lean_s1394 lean_s1396
              let lean_s1398 := by timed And.intro lean_a269 lean_a267
              have lean_s1399 : let822 := by timed And.intro lean_s1386 lean_s1398
              have lean_s1400 : let825 :=
                (scope (fun lean_a270 : let371 =>
                  (scope (fun lean_a271 : let33 =>
                    (scope (fun lean_a272 : let16 =>
                      have lean_s1400 : let799 := by timed Eq.symm lean_a272
                      have lean_s1401 : let179 := by timed Eq.symm lean_a271
                      have lean_s1402 : let33 := by timed Eq.symm lean_s1401
                      let lean_s1403 := by timed Eq.trans lean_s1400 lean_s1402
                      have lean_s1404 : let827 := by timed Eq.symm lean_a270
                      have lean_s1405 : let371 := by timed Eq.symm lean_s1404
                      have lean_s1406 : let826 := by timed flipCongrArg lean_s1405 [sx5fcount]
                      have lean_s1407 : let768 := by timed Eq.trans lean_s1403 lean_s1406
                      show let768 from lean_s1407
                ))))))
              have lean_s1401 : let823 := by liftOrNToImp lean_s1400, 3
              have lean_s1402 : let768 := by timed modusPonens lean_s1399 lean_s1401
              let lean_s1403 := by timed And.intro lean_s1397 lean_s1402
              have lean_s1404 : let851 := by timed And.intro lean_a271 lean_s1403
              show let851 from lean_s1404
  ))))))))))))
have lean_s1386 : let852 := by liftOrNToImp lean_s1385, 6
have lean_s1387 : (Eq let54 let54) := by timed rfl
let lean_s1388 := by timed flipCongrArg lean_s1387 [Implies]
have lean_s1389 : let853 := by timed falseIntro lean_s5
have lean_s1390 : (Eq let852 let56) := by timed congr lean_s1388 lean_s1389
have lean_s1391 : (Eq let852 let55) := by timed Eq.trans lean_s1390 lean_r8
have lean_s1392 : let55 := by timed eqResolve lean_s1386 lean_s1391
have lean_s1393 : (Or let758 (Or let762 (Or let760 (Or let849 let817)))) := by timed flipNotAnd lean_s1392 [let16, let20, let33, let53, let9, let27]
have lean_s1394 : (Or let363 (Or let758 (Or let760 (Or let762 (Or let849 let757))))) := by permutateOr lean_s1393, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1395 := by R1 lean_s1384, lean_s1394, let53, [(- 1), (- 1)]
let lean_s1396 := by R2 lean_s1395, lean_s1260, let9, [(- 1), 0]
have lean_s1397 : (Or let758 (Or let760 (Or let762 (Or let757 let763)))) := by R1 lean_s1396, lean_s1339, let30, [(- 1), (- 1)]
have lean_s1398 : (Or let758 (Or let760 (Or let762 let757))) := by factor lean_s1397, 5
have lean_s1399 : (Or let758 (Or let760 (Or let757 let761))) := by R1 lean_s1381, lean_s1398, let20, [(- 1), (- 1)]
have lean_s1400 : let761 := by factor lean_s1399, (- 1)
have lean_s1401 : (Or let758 let759) := by R1 lean_s1361, lean_s1400, let33, [(- 1), (- 1)]
have lean_s1402 : let759 := by factor lean_s1401, (- 1)
have lean_s1403 : (Or let757 let757) := by R1 lean_s1291, lean_s1402, let16, [(- 1), (- 1)]
have lean_s1404 : let757 := by factor lean_s1403, 1
let lean_s1405 := by R1 lean_s1249, lean_s1404, let27, [(- 1), 0]
let lean_s1406 := by R2 lean_s1405, lean_s1325, let360, [(- 1), 0]
have lean_s1407 : let2 := by R1 lean_s1406, lean_s1323, let63, [(- 1), 0]
let lean_s1408 := by R2 lean_s1221, lean_s1407, let2, [(- 1), 0]
let lean_s1409 := by R2 lean_s1408, lean_s1260, let9, [(- 1), 0]
let lean_s1410 := by R2 lean_s1409, lean_s1286, let22, [(- 1), (- 1)]
let lean_s1411 := by R2 lean_s1410, lean_s1199, let337, [(- 1), (- 1)]
let lean_s1412 := by R1 lean_s1411, lean_s1336, let16, [(- 1), (- 1)]
let lean_s1413 := by R2 lean_s1412, lean_s1407, let2, [(- 1), 0]
have lean_s1414 : (Or let762 let762) := by R2 lean_s1413, lean_s1260, let9, [(- 1), 0]
have lean_s1415 : let762 := by factor lean_s1414, 1
have lean_s1416 : let322 := by R1 lean_s1209, lean_s1415, let20, [(- 1), 0]
have lean_s1417 : let258 := by R2 lean_s1206, lean_s1416, let322, [(- 1), 0]
have lean_s1418 : let880 := by R2 lean_s1204, lean_s1417, let258, [(- 1), 0]
have lean_s1419 : let879 := by R1 lean_s1201, lean_s1418, let252, [(- 1), 0]
have lean_s1420 : let16 := by R1 lean_s1199, lean_s1419, let337, [(- 1), 0]
let lean_s1421 := by R2 lean_s11, lean_s1420, let16, [(- 1), 0]
have lean_s1422 : let14 := by R2 lean_s1377, lean_s1416, let322, [(- 1), 0]
let lean_s1423 := by R2 lean_s1421, lean_s1422, let14, [(- 1), 0]
let lean_s1424 := by R2 lean_s1423, lean_s1407, let2, [(- 1), 0]
exact (show False from by R2 lean_s1424, lean_s1260, let9, [0, 0])


