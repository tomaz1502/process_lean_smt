open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {fmt0 : Int}
variable {arg1 : Int}
variable {distance : Int}
variable {percent : Int}
variable {fmt1 : Int}
variable {s : Int}
variable {adrx5fmedlo : Int}
variable {arg0 : Int}
variable {adrx5fmedhi : Int}
variable {fmtx5flength : Int}
variable {selectx5fformat : (Int -> Int)}
variable {adrx5fmedhi : Int}
variable {x : Int}
variable {adrx5flo : Int}
variable {fmt0 : Int}
variable {arg1 : Int}
variable {percent : Int}
variable {adrx5fhi : Int}
variable {selectx5fformat : (Int -> Int)}
variable {arg0 : Int}
variable {fmtx5flength : Int}
variable {distance : Int}
variable {adrx5fhi : Int}
variable {s : Int}
variable {adrx5fmedlo : Int}
variable {xx5fcount : (Int -> Int)}
variable {adrx5flo : Int}
variable {x : Int}
variable {fmt1 : Int}
variable {sx5fcount : (Int -> Int)}

theorem th0 :
  let let1 := (Int.ofNat 2)
  let let2 := (sx5fcount let1)
  let let3 := (Eq let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 let2)
  let let7 := (Eq let4 let6)
  let let8 := (Int.ofNat 4)
  let let9 := (Eq fmt1 let8)
  let let10 := (Int.ofNat 3)
  let let11 := (Neg.neg let1)
  let let12 := (binrel% HAdd.hAdd let11 fmt1)
  let let13 := (xx5fcount let12)
  let let14 := (sx5fcount let12)
  let let15 := (binrel% HAdd.hAdd let14 let13)
  let let16 := (binrel% GE.ge let15 let10)
  let let17 := (And let16 let9)
  let let18 := (xx5fcount let1)
  let let19 := (xx5fcount let4)
  let let20 := (Eq let19 let18)
  let let21 := (And let20 let17)
  let let22 := (Int.ofNat 0)
  let let23 := (xx5fcount let22)
  let let24 := (Eq let23 let19)
  let let25 := (And let24 let21)
  let let26 := (sx5fcount let4)
  let let27 := (Eq let26 let6)
  let let28 := (sx5fcount let22)
  let let29 := (Eq let28 let26)
  let let30 := (And let29 (And let27 let25))
  let let31 := (Eq let23 let22)
  let let32 := (And let31 let30)
  let let33 := (Eq let28 let4)
  let let34 := (And let33 let32)
  let let35 := (Not let34)
  let let36 := (Implies let34 False)
  let let37 := (Eq let26 let2)
  let let38 := (And let37 let25)
  let let39 := (And let29 let38)
  let let40 := (And let31 let39)
  let let41 := (And let33 let40)
  let let42 := (Not let41)
  let let43 := (Implies let41 False)
  let let44 := (Eq fmt1 let10)
  let let45 := (And let16 let44)
  let let46 := (And let24 let45)
  let let47 := (And let29 let46)
  let let48 := (And let31 let47)
  let let49 := (And let33 let48)
  let let50 := (Not let49)
  let let51 := (Implies let49 False)
  let let52 := (Rat.ofInt 2)
  let let53 := (Rat.ofInt 1)
  let let54 := (binrel% HMul.hMul let53 let1)
  let let55 := (Neg.neg let53)
  let let56 := (Rat.ofInt 0)
  let let57 := (binrel% LE.le let56 let55)
  let let58 := (Eq let23 let4)
  let let59 := (Eq let28 let22)
  let let60 := (And let59 (And let58 let30))
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (And let59 (And let58 let39))
  let let64 := (Not let63)
  let let65 := (Implies let63 False)
  let let66 := (And let59 (And let58 let47))
  let let67 := (Not let66)
  let let68 := (Implies let66 False)
  let let69 := (Int.ofNat 120)
  let let70 := (Int.ofNat 37)
  let let71 := (Eq let70 let69)
  let let72 := (Not let71)
  let let73 := (Eq let71 False)
  let let74 := (binrel% HAdd.hAdd let5 let26)
  let let75 := (Eq let28 let74)
  let let76 := (And let59 (And let31 (And let75 let38)))
  let let77 := (Not let76)
  let let78 := (Implies let76 False)
  let let79 := (binrel% HAdd.hAdd let5 let18)
  let let80 := (Eq let19 let79)
  let let81 := (And let29 (And let37 (And let24 (And let80 let17))))
  let let82 := (And let31 let81)
  let let83 := (And let59 let82)
  let let84 := (Not let83)
  let let85 := (Implies let83 False)
  let let86 := (Eq let2 let4)
  let let87 := (Eq let22 let6)
  let let88 := (xx5fcount let10)
  let let89 := (Eq let18 let88)
  let let90 := (Eq let88 let18)
  let let91 := (Int.ofNat 5)
  let let92 := (binrel% HAdd.hAdd let91 let22)
  let let93 := (selectx5fformat let10)
  let let94 := (Eq adrx5fmedlo let93)
  let let95 := (Eq let93 adrx5fmedlo)
  let let96 := (binrel% HAdd.hAdd let4 let88)
  let let97 := (binrel% HAdd.hAdd let88 let4)
  let let98 := (Eq let18 let1)
  let let99 := (Eq let4 let79)
  let let100 := (selectx5fformat let8)
  let let101 := (Eq adrx5fmedlo let100)
  let let102 := (Eq let100 adrx5fmedlo)
  let let103 := (selectx5fformat let91)
  let let104 := (Eq percent let103)
  let let105 := (Eq let103 percent)
  let let106 := (xx5fcount let91)
  let let107 := (xx5fcount let8)
  let let108 := (Eq let107 (binrel% HAdd.hAdd let5 let106))
  let let109 := (binrel% HAdd.hAdd let4 let107)
  let let110 := (Eq let106 let109)
  let let111 := (Eq let69 let70)
  let let112 := (Eq let111 False)
  let let113 := (binrel% HMul.hMul let8 let13)
  let let114 := (binrel% HMul.hMul let8 let14)
  let let115 := (binrel% HAdd.hAdd let114 let113)
  let let116 := (Int.ofNat 12)
  let let117 := (Neg.neg let116)
  let let118 := (binrel% HAdd.hAdd let117 let115)
  let let119 := (binrel% HAdd.hAdd let5 let118)
  let let120 := (binrel% HAdd.hAdd let5 arg1)
  let let121 := (Eq fmt0 let120)
  let let122 := (binrel% HAdd.hAdd let4 fmt0)
  let let123 := (Eq arg1 let122)
  let let124 := (binrel% HAdd.hAdd let4 let26)
  let let125 := (binrel% HAdd.hAdd let26 let4)
  let let126 := (selectx5fformat fmt1)
  let let127 := (Eq percent let126)
  let let128 := (Eq let126 percent)
  let let129 := (binrel% HAdd.hAdd let4 fmt1)
  let let130 := (binrel% HAdd.hAdd fmt1 let4)
  let let131 := (binrel% HAdd.hAdd fmt0 let91)
  let let132 := (Eq fmt1 let131)
  let let133 := (binrel% HAdd.hAdd fmt0 let8)
  let let134 := (Eq fmt1 let133)
  let let135 := (binrel% HAdd.hAdd fmt0 let10)
  let let136 := (Eq fmt1 let135)
  let let137 := (binrel% HAdd.hAdd fmt0 let1)
  let let138 := (Eq fmt1 let137)
  let let139 := (binrel% HAdd.hAdd fmt0 let4)
  let let140 := (Eq fmt1 let139)
  let let141 := (binrel% HAdd.hAdd fmt0 let22)
  let let142 := (Eq fmt1 let141)
  let let143 := (Or let142 (Or let140 (Or let138 (Or let136 (Or let134 let132)))))
  let let144 := (Or (Or (Or (Or (Or let142 let140) let138) let136) let134) let132)
  let let145 := (Eq fmt1 let1)
  let let146 := (And let16 let145)
  let let147 := (And let59 (And let58 let146))
  let let148 := (Not let147)
  let let149 := (Implies let147 False)
  let let150 := (Eq let118 let118)
  let let151 := (And let59 let32)
  let let152 := (Not let151)
  let let153 := (Implies let151 False)
  let let154 := (binrel% HAdd.hAdd let10 fmt0)
  let let155 := (binrel% HAdd.hAdd let11 let118)
  let let156 := (binrel% HAdd.hAdd let1 arg1)
  let let157 := (selectx5fformat let156)
  let let158 := (Eq adrx5fmedhi let157)
  let let159 := (Eq let157 adrx5fmedhi)
  let let160 := (binrel% HAdd.hAdd let10 arg1)
  let let161 := (binrel% HAdd.hAdd arg1 let10)
  let let162 := (binrel% HAdd.hAdd let11 arg1)
  let let163 := (Eq fmt0 let162)
  let let164 := (binrel% HAdd.hAdd let1 fmt0)
  let let165 := (Eq arg1 let164)
  let let166 := (binrel% HAdd.hAdd let117 let116)
  let let167 := (Eq let2 let26)
  let let168 := (Int.ofNat 115)
  let let169 := (Eq let168 let168)
  let let170 := (Eq let2 let124)
  let let171 := (Not False)
  let let172 := (selectx5fformat let161)
  let let173 := (Eq let172 adrx5fhi)
  let let174 := (binrel% HAdd.hAdd arg1 let1)
  let let175 := (selectx5fformat let174)
  let let176 := (Eq let175 adrx5fmedhi)
  let let177 := (binrel% HAdd.hAdd arg1 let4)
  let let178 := (selectx5fformat let177)
  let let179 := (Eq let178 adrx5fmedlo)
  let let180 := (selectx5fformat arg1)
  let let181 := (Eq let180 adrx5flo)
  let let182 := (selectx5fformat let130)
  let let183 := (Eq let182 s)
  let let184 := (And let128 (And let183 (And let181 (And let179 (And let176 let173)))))
  let let185 := (And (And (And (And (And let128 let183) let181) let179) let176) let173)
  let let186 := (Eq let70 let70)
  let let187 := (selectx5fformat let1)
  let let188 := (Eq let187 let168)
  let let189 := (Eq let168 let187)
  let let190 := (sx5fcount let10)
  let let191 := (Eq let2 let190)
  let let192 := (Eq let190 let2)
  let let193 := (Eq adrx5fmedhi let93)
  let let194 := (Eq let93 adrx5fmedhi)
  let let195 := (binrel% HAdd.hAdd let107 let4)
  let let196 := (Eq adrx5fhi let103)
  let let197 := (Eq let103 adrx5fhi)
  let let198 := (Eq adrx5flo let180)
  let let199 := (Eq let22 let4)
  let let200 := (Eq let199 False)
  let let201 := (Eq let107 let106)
  let let202 := (Eq let106 let107)
  let let203 := (Neg.neg let8)
  let let204 := (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd (binrel% HMul.hMul let203 let14) (binrel% HMul.hMul let203 let13)))
  let let205 := (binrel% HAdd.hAdd let22 let204)
  let let206 := (Eq let103 let168)
  let let207 := (Eq let168 let103)
  let let208 := (Rat.ofInt let14)
  let let209 := (binrel% HMul.hMul let53 let14)
  let let210 := (binrel% GE.ge fmt1 let91)
  let let211 := (Int.ofNat 6)
  let let212 := (Neg.neg let211)
  let let213 := (binrel% HAdd.hAdd let212 fmt1)
  let let214 := (binrel% GE.ge let213 let5)
  let let215 := (sx5fcount let8)
  let let216 := (binrel% HAdd.hAdd let4 let215)
  let let217 := (binrel% HAdd.hAdd let215 let4)
  let let218 := (binrel% HAdd.hAdd fmt1 let22)
  let let219 := (binrel% GE.ge let118 let22)
  let let220 := (binrel% HAdd.hAdd let5 let19)
  let let221 := (Eq let23 let220)
  let let222 := (And let59 (And let31 (And let29 (And let37 (And let221 let21)))))
  let let223 := (Not let222)
  let let224 := (Implies let222 False)
  let let225 := (binrel% HMul.hMul let5 let116)
  let let226 := (binrel% HMul.hMul let5 let211)
  let let227 := (binrel% HMul.hMul let5 let117)
  let let228 := (binrel% HAdd.hAdd let227 (binrel% HAdd.hAdd let226 let225))
  let let229 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 let228)))
  let let230 := (binrel% HAdd.hAdd let118 let228)
  let let231 := (selectx5fformat let22)
  let let232 := (Eq s let231)
  let let233 := (Eq let231 s)
  let let234 := (Eq arg1 let137)
  let let235 := (Eq arg1 let139)
  let let236 := (Eq arg1 let141)
  let let237 := (Or let236 (Or let235 let234))
  let let238 := (Or (Or let236 let235) let234)
  let let239 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) let115)
  let let240 := (binrel% HAdd.hAdd let4 let118)
  let let241 := (Eq let240 let239)
  let let242 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 18)) let115)
  let let243 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let212 let117)))))
  let let244 := (selectx5fformat let4)
  let let245 := (Eq adrx5fhi let244)
  let let246 := (Eq let244 adrx5fhi)
  let let247 := (binrel% HMul.hMul let5 let22)
  let let248 := (binrel% HAdd.hAdd let4 arg1)
  let let249 := (Eq let190 let215)
  let let250 := (Eq let215 let190)
  let let251 := (binrel% HAdd.hAdd let11 let218)
  let let252 := (Eq adrx5fmedlo let103)
  let let253 := (Eq let103 adrx5fmedlo)
  let let254 := (binrel% HAdd.hAdd let91 fmt0)
  let let255 := (Eq let231 let1)
  let let256 := (Eq let1 let231)
  let let257 := (binrel% HMul.hMul let5 let4)
  let let258 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let257))
  let let259 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let260 := (binrel% HAdd.hAdd let259 let257)
  let let261 := (Eq let231 let168)
  let let262 := (Eq let168 let231)
  let let263 := (selectx5fformat let160)
  let let264 := (Eq adrx5fhi let263)
  let let265 := (Eq let263 adrx5fhi)
  let let266 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let22 let212))
  let let267 := (Eq let187 let69)
  let let268 := (Eq let69 let187)
  let let269 := (Eq let231 let69)
  let let270 := (Eq let69 let231)
  let let271 := (Eq let244 let70)
  let let272 := (Eq let70 let244)
  let let273 := (Eq let231 let8)
  let let274 := (Eq let8 let231)
  let let275 := (binrel% HSub.hSub let259 let4)
  let let276 := (Eq let231 let91)
  let let277 := (Eq let91 let231)
  let let278 := (Eq let93 let1)
  let let279 := (Eq let1 let93)
  let let280 := (Eq s let187)
  let let281 := (Eq let187 s)
  let let282 := (selectx5fformat let118)
  let let283 := (Eq let282 let91)
  let let284 := (Eq let91 let282)
  let let285 := (Neg.neg let52)
  let let286 := (Neg.neg (Rat.ofInt 3))
  let let287 := (binrel% HAdd.hAdd let53 let286)
  let let288 := (binrel% HAdd.hAdd let56 let287)
  let let289 := (Eq let9 let9)
  let let290 := (binrel% HAdd.hAdd let4 let28)
  let let291 := (binrel% HAdd.hAdd let28 let4)
  let let292 := (And let59 let40)
  let let293 := (Not let292)
  let let294 := (Implies let292 False)
  let let295 := (Eq let69 let69)
  let let296 := (binrel% HAdd.hAdd let10 let118)
  let let297 := (binrel% HAdd.hAdd let4 let22)
  let let298 := (Eq let91 let91)
  let let299 := (selectx5fformat let239)
  let let300 := (Eq let299 let8)
  let let301 := (Eq let8 let299)
  let let302 := (Eq let211 let211)
  let let303 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let115)
  let let304 := (Eq let22 let303)
  let let305 := (binrel% HAdd.hAdd let10 let22)
  let let306 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) let115)
  let let307 := (binrel% HAdd.hAdd let1 let118)
  let let308 := (Eq let307 let306)
  let let309 := (Eq let18 let4)
  let let310 := (Eq let22 let79)
  let let311 := (And let59 (And let31 (And let29 (And let221 let45))))
  let let312 := (Not let311)
  let let313 := (Implies let311 False)
  let let314 := (Eq adrx5fhi let100)
  let let315 := (Eq let100 adrx5fhi)
  let let316 := (Eq let244 let168)
  let let317 := (Eq let168 let244)
  let let318 := (Eq let116 let116)
  let let319 := (Eq arg0 let117)
  let let320 := (binrel% HAdd.hAdd let116 arg0)
  let let321 := (Eq let22 let320)
  let let322 := (Eq let100 let1)
  let let323 := (Eq let1 let100)
  let let324 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) let115)
  let let325 := (Eq let296 let324)
  let let326 := (Eq let100 let8)
  let let327 := (Eq let8 let100)
  let let328 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let115)
  let let329 := (Eq let22 let328)
  let let330 := (Eq let119 let303)
  let let331 := (binrel% HMul.hMul let5 let118)
  let let332 := (Eq fmt0 arg1)
  let let333 := (Eq arg1 fmt0)
  let let334 := (binrel% HAdd.hAdd let56 let286)
  let let335 := (binrel% HAdd.hAdd let52 let334)
  let let336 := (Eq let26 let28)
  let let337 := (Eq let103 let69)
  let let338 := (Eq let69 let103)
  let let339 := (Eq adrx5flo let231)
  let let340 := (Eq let231 adrx5flo)
  let let341 := (Eq let103 let1)
  let let342 := (Eq let1 let103)
  let let343 := (selectx5fformat let324)
  let let344 := (Eq let343 let91)
  let let345 := (Eq let91 let343)
  let let346 := (Eq let19 let4)
  let let347 := (Eq let22 let220)
  let let348 := (Eq let2 (binrel% HAdd.hAdd let5 let190))
  let let349 := (binrel% HAdd.hAdd let4 let2)
  let let350 := (Eq let190 let349)
  let let351 := (binrel% GE.ge let15 let8)
  let let352 := (binrel% GE.ge let242 let203)
  let let353 := (binrel% HAdd.hAdd let8 let22)
  let let354 := (binrel% HMul.hMul let5 arg1)
  let let355 := (binrel% HAdd.hAdd fmt0 let354)
  let let356 := (binrel% GE.ge let355 let4)
  let let357 := (Not let356)
  let let358 := (binrel% GE.ge arg1 fmt0)
  let let359 := (Not let210)
  let let360 := (Not let359)
  let let361 := (Eq let360 let210)
  let let362 := (Eq let103 let8)
  let let363 := (Eq let8 let103)
  let let364 := (binrel% HMul.hMul let5 fmt0)
  let let365 := (binrel% HAdd.hAdd fmt1 let364)
  let let366 := (binrel% GE.ge let365 let1)
  let let367 := (Not let366)
  let let368 := (Not let367)
  let let369 := (Eq let168 let70)
  let let370 := (Eq let369 False)
  let let371 := (binrel% HAdd.hAdd let1 let22)
  let let372 := (selectx5fformat let306)
  let let373 := (Eq let372 let1)
  let let374 := (Eq let1 let372)
  let let375 := (selectx5fformat let211)
  let let376 := (Eq x let375)
  let let377 := (Eq let375 x)
  let let378 := (selectx5fformat let129)
  let let379 := (Eq s let378)
  let let380 := (Eq let378 s)
  let let381 := (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let52 let286))
  let let382 := (Eq let1 let1)
  let let383 := (Eq s let93)
  let let384 := (Eq let93 s)
  let let385 := (Eq let375 let69)
  let let386 := (Eq let69 let375)
  let let387 := (binrel% HAdd.hAdd let53 let287)
  let let388 := (Eq let93 let69)
  let let389 := (Eq let69 let93)
  let let390 := (Eq let100 let91)
  let let391 := (Eq let91 let100)
  let let392 := (binrel% LT.lt fmt1 let91)
  let let393 := (Eq let378 let168)
  let let394 := (Eq let168 let378)
  let let395 := (Eq let8 let8)
  let let396 := (Eq let103 let70)
  let let397 := (Eq let70 let103)
  let let398 := (binrel% HAdd.hAdd let4 let19)
  let let399 := (Eq let18 let398)
  let let400 := (Eq let22 let22)
  let let401 := (Eq let168 let69)
  let let402 := (Eq let401 False)
  let let403 := (Eq adrx5fmedhi let187)
  let let404 := (Eq let187 adrx5fmedhi)
  let let405 := (Eq let88 let107)
  let let406 := (Eq let107 let88)
  let let407 := (Eq let126 let70)
  let let408 := (And let407 (And let393 (And let283 (And let300 (And let373 let344)))))
  let let409 := (Not let408)
  let let410 := (binrel% HMul.hMul let5 let13)
  let let411 := (Eq let14 (binrel% HAdd.hAdd let10 let410))
  let let412 := (Eq fmt1 let91)
  let let413 := (Eq fmt1 let4)
  let let414 := (Eq fmt1 let22)
  let let415 := (Or let414 (Or let413 (Or let145 (Or let44 (Or let9 let412)))))
  let let416 := (And let396 let385)
  let let417 := (smtIte let416 let108 let201 Prop)
  let let418 := (Eq let88 (binrel% HAdd.hAdd let5 let107))
  let let419 := (Eq let100 let70)
  let let420 := (And let419 let337)
  let let421 := (smtIte let420 let418 let405 Prop)
  let let422 := (Eq let18 (binrel% HAdd.hAdd let5 let88))
  let let423 := (Eq let100 let69)
  let let424 := (Eq let93 let70)
  let let425 := (And let424 let423)
  let let426 := (smtIte let425 let422 let89 Prop)
  let let427 := (Eq let187 let70)
  let let428 := (And let427 let388)
  let let429 := (smtIte let428 let80 let20 Prop)
  let let430 := (And let271 let267)
  let let431 := (smtIte let430 let221 let24 Prop)
  let let432 := (Eq let244 let69)
  let let433 := (Eq let231 let70)
  let let434 := (And let433 let432)
  let let435 := (smtIte let434 let58 let31 Prop)
  let let436 := (sx5fcount let91)
  let let437 := (Eq let215 let436)
  let let438 := (Eq let215 (binrel% HAdd.hAdd let5 let436))
  let let439 := (Eq let375 let168)
  let let440 := (And let396 let439)
  let let441 := (smtIte let440 let438 let437 Prop)
  let let442 := (Eq let190 (binrel% HAdd.hAdd let5 let215))
  let let443 := (And let419 let206)
  let let444 := (smtIte let443 let442 let249 Prop)
  let let445 := (Eq let100 let168)
  let let446 := (And let424 let445)
  let let447 := (smtIte let446 let348 let191 Prop)
  let let448 := (Eq let93 let168)
  let let449 := (And let427 let448)
  let let450 := (smtIte let449 let27 let37 Prop)
  let let451 := (And let271 let188)
  let let452 := (smtIte let451 let75 let29 Prop)
  let let453 := (And let433 let316)
  let let454 := (smtIte let453 let33 let59 Prop)
  let let455 := (Int.ofNat 255)
  let let456 := (Eq let103 let455)
  let let457 := (Eq let103 let91)
  let let458 := (Eq let100 let455)
  let let459 := (Eq let93 let455)
  let let460 := (Eq let93 let91)
  let let461 := (Eq let93 let8)
  let let462 := (Eq let187 let455)
  let let463 := (Eq let187 let91)
  let let464 := (Eq let187 let1)
  let let465 := (Eq let187 let8)
  let let466 := (Eq let244 let455)
  let let467 := (Eq let244 let91)
  let let468 := (Eq let244 let1)
  let let469 := (Eq let244 let8)
  let let470 := (Eq let231 let455)
  let let471 := (Or let433 (Or let261 (Or let269 (Or let276 (Or let273 (Or let255 (Or let276 (Or let470 (Or let271 (Or let316 (Or let432 (Or let467 (Or let469 (Or let468 (Or let467 (Or let466 (Or let427 (Or let188 (Or let267 (Or let463 (Or let465 (Or let464 (Or let463 (Or let462 (Or let424 (Or let448 (Or let388 (Or let460 (Or let461 (Or let278 (Or let460 (Or let459 (Or let419 (Or let445 (Or let423 (Or let390 (Or let326 (Or let322 (Or let390 (Or let458 (Or let396 (Or let206 (Or let337 (Or let457 (Or let362 (Or let341 (Or let457 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let472 := (And let471 (And let454 (And let452 (And let450 (And let447 (And let444 (And let441 (And let435 (And let431 (And let429 (And let426 (And let421 (And let417 (And let415 (And let411 let409)))))))))))))))
  let let473 := (Not let351)
  let let474 := (binrel% GE.ge fmt1 let1)
  let let475 := (And let16 (And let359 (And let474 (And let473 let472))))
  let let476 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let16 (And let359 (And let474 (And let16 (And let473 (And True let472)))))))))))))))))
  let let477 := (Eq s let100)
  let let478 := (Eq let100 s)
  let let479 := (binrel% LE.le fmt1 let122)
  let let480 := (Eq let22 let12)
  let let481 := (Eq let70 let126)
  let let482 := (Or let411 (Or False False))
  let let483 := (Eq let1 let187)
  let let484 := (Eq let69 let100)
  let let485 := (binrel% LE.le let56 let286)
  let let486 := (Eq let91 let103)
  let let487 := (And let31 let146)
  let let488 := (And let33 let487)
  let let489 := (Not let488)
  let let490 := (Implies let488 False)
  let let491 := (binrel% HAdd.hAdd let4 let18)
  let let492 := (Eq let88 let491)
  let let493 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let116 let117))))
  let let494 := (Eq x let187)
  let let495 := (Eq let187 x)
  let let496 := (Eq x let231)
  let let497 := (Eq let231 x)
  let let498 := (Eq let91 let93)
  let let499 := (Not let16)
  let let500 := (Not let499)
  let let501 := (Eq let69 let244)
  let let502 := (binrel% HMul.hMul let5 let1)
  let let503 := (Eq let70 let93)
  let let504 := (Eq let91 let187)
  let let505 := (Eq let70 let231)
  let let506 := (binrel% HAdd.hAdd fmt1 let502)
  let let507 := (binrel% HSub.hSub fmt1 let1)
  let let508 := (binrel% GE.ge let204 let4)
  let let509 := (Eq let168 let375)
  let let510 := (Eq let70 let187)
  let let511 := (Eq let91 let244)
  let let512 := (Not let111)
  let let513 := (Eq let22 let118)
  let let514 := (selectx5fformat let248)
  let let515 := (Eq adrx5fmedlo let514)
  let let516 := (Eq let514 adrx5fmedlo)
  let let517 := (binrel% HSub.hSub let507 fmt0)
  let let518 := (xx5fcount let517)
  let let519 := (binrel% HMul.hMul let8 let518)
  let let520 := (sx5fcount let517)
  let let521 := (binrel% HMul.hMul let8 let520)
  let let522 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let521 let519))
  let let523 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let521) let519)
  let let524 := (binrel% HAdd.hAdd let4 let190)
  let let525 := (Eq let215 let524)
  let let526 := (And let33 let82)
  let let527 := (Not let526)
  let let528 := (Implies let526 False)
  let let529 := (binrel% HMul.hMul let5 distance)
  let let530 := (binrel% HMul.hMul let5 fmtx5flength)
  let let531 := (binrel% HMul.hMul let5 arg0)
  let let532 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let531 (binrel% HAdd.hAdd let530 let529)))
  let let533 := (binrel% GE.ge let532 let203)
  let let534 := (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let535 := (binrel% GE.ge arg1 let534)
  let let536 := (Eq let168 let93)
  let let537 := (Eq let8 let93)
  let let538 := (Eq let8 let187)
  let let539 := (Eq let1 let244)
  let let540 := (Eq let8 let244)
  let let541 := (binrel% HAdd.hAdd let18 let4)
  let let542 := (Eq x let100)
  let let543 := (Eq let100 x)
  let let544 := (Eq percent let93)
  let let545 := (Eq let93 percent)
  let let546 := (Eq let18 let19)
  let let547 := (binrel% HAdd.hAdd let19 let4)
  let let548 := (Eq adrx5fmedlo let231)
  let let549 := (Eq let231 adrx5fmedlo)
  let let550 := (Eq x let93)
  let let551 := (Eq let93 x)
  let let552 := (Eq percent let187)
  let let553 := (Eq let187 percent)
  let let554 := (binrel% HAdd.hAdd fmt1 let11)
  let let555 := (Eq let19 let23)
  let let556 := (binrel% HAdd.hAdd let4 let23)
  let let557 := (Eq let19 let556)
  let let558 := (Eq percent let244)
  let let559 := (Eq let244 percent)
  let let560 := (Eq x let244)
  let let561 := (Eq let244 x)
  let let562 := (binrel% HMul.hMul let53 let4)
  let let563 := (Eq percent let231)
  let let564 := (Eq let231 percent)
  let let565 := (Eq let436 let215)
  let let566 := (Eq let436 let216)
  let let567 := (Eq s let375)
  let let568 := (Eq let375 s)
  let let569 := (Rat.ofInt let13)
  let let570 := (binrel% HMul.hMul let53 let13)
  let let571 := (binrel% HAdd.hAdd let190 let4)
  let let572 := (binrel% HAdd.hAdd arg0 distance)
  let let573 := (binrel% HAdd.hAdd let572 fmtx5flength)
  let let574 := (binrel% HSub.hSub let573 let8)
  let let575 := (binrel% GE.ge arg1 let574)
  let let576 := (Not let575)
  let let577 := (binrel% LT.lt arg1 let574)
  let let578 := (Eq s let103)
  let let579 := (Eq let103 s)
  let let580 := (binrel% HAdd.hAdd let2 let4)
  let let581 := (Eq let26 let290)
  let let582 := (Eq s let244)
  let let583 := (Eq let244 s)
  let let584 := (binrel% HAdd.hAdd let8 fmt0)
  let let585 := (Eq adrx5fmedhi let103)
  let let586 := (Eq let103 adrx5fmedhi)
  let let587 := (Eq adrx5flo let103)
  let let588 := (Eq let103 adrx5flo)
  let let589 := (Eq adrx5fmedhi let100)
  let let590 := (Eq let100 adrx5fmedhi)
  let let591 := (Eq adrx5flo let100)
  let let592 := (Eq let100 adrx5flo)
  let let593 := (Not let9)
  let let594 := (Not let593)
  let let595 := (Eq let594 let9)
  let let596 := (Eq adrx5fhi let93)
  let let597 := (Eq let93 adrx5fhi)
  let let598 := (Eq let9 let594)
  let let599 := (Eq adrx5flo let93)
  let let600 := (Eq let93 adrx5flo)
  let let601 := (Eq adrx5fhi let187)
  let let602 := (Eq let187 adrx5fhi)
  let let603 := (Eq let4 let12)
  let let604 := (Not let401)
  let let605 := (Eq adrx5fmedlo let187)
  let let606 := (Eq let187 adrx5fmedlo)
  let let607 := (Eq let107 let96)
  let let608 := (Eq adrx5flo let187)
  let let609 := (Eq let187 adrx5flo)
  let let610 := (Eq adrx5fmedhi let244)
  let let611 := (Eq let244 adrx5fmedhi)
  let let612 := (Eq x let103)
  let let613 := (Eq let103 x)
  let let614 := (Eq adrx5fmedlo let244)
  let let615 := (Eq let244 adrx5fmedlo)
  let let616 := (Eq percent let100)
  let let617 := (Eq let100 percent)
  let let618 := (Eq adrx5flo let244)
  let let619 := (Eq let244 adrx5flo)
  let let620 := (Eq adrx5fhi let231)
  let let621 := (Eq let231 adrx5fhi)
  let let622 := (Eq adrx5fmedhi let231)
  let let623 := (Eq let231 adrx5fmedhi)
  let let624 := (binrel% HAdd.hAdd let11 let365)
  let let625 := (binrel% HAdd.hAdd let12 let364)
  let let626 := (binrel% HAdd.hAdd let23 let4)
  let let627 := (binrel% HAdd.hAdd let507 let364)
  let let628 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let203)))
  let let629 := (binrel% HMul.hMul let5 let8)
  let let630 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let629)))
  let let631 := (binrel% HAdd.hAdd let573 let629)
  let let632 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let531 let529))
  let let633 := (binrel% GE.ge let632 let22)
  let let634 := (binrel% GE.ge arg1 let572)
  let let635 := (binrel% LE.le fmt1 let139)
  let let636 := (Not let635)
  let let637 := (binrel% GT.gt fmt1 let139)
  let let638 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let364 let530))
  let let639 := (binrel% GE.ge let638 let5)
  let let640 := (binrel% HAdd.hAdd let5 let259)
  let let641 := (binrel% GE.ge fmt1 let640)
  let let642 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let5))
  let let643 := (Eq fmt0 let572)
  let let644 := (binrel% HAdd.hAdd fmt0 let529)
  let let645 := (Eq arg0 let644)
  let let646 := (binrel% HSub.hSub fmt0 distance)
  let let647 := (Not let185)
  let let648 := (Eq let106 let195)
  let let649 := (And let105 let377)
  let let650 := (smtIte let649 let648 let202 Prop)
  let let651 := (Eq let107 let97)
  let let652 := (And let617 let613)
  let let653 := (smtIte let652 let651 let406 Prop)
  let let654 := (Eq let88 let541)
  let let655 := (And let545 let543)
  let let656 := (smtIte let655 let654 let90 Prop)
  let let657 := (Eq let18 let547)
  let let658 := (And let553 let551)
  let let659 := (smtIte let658 let657 let546 Prop)
  let let660 := (Eq let19 let626)
  let let661 := (And let559 let495)
  let let662 := (smtIte let661 let660 let555 Prop)
  let let663 := (And let564 let561)
  let let664 := (smtIte let663 let58 let31 Prop)
  let let665 := (Eq let436 let217)
  let let666 := (And let105 let568)
  let let667 := (smtIte let666 let665 let565 Prop)
  let let668 := (Eq let215 let571)
  let let669 := (And let617 let579)
  let let670 := (smtIte let669 let668 let250 Prop)
  let let671 := (Eq let190 let580)
  let let672 := (And let545 let478)
  let let673 := (smtIte let672 let671 let192 Prop)
  let let674 := (Eq let2 let125)
  let let675 := (And let553 let384)
  let let676 := (smtIte let675 let674 let167 Prop)
  let let677 := (Eq let26 let291)
  let let678 := (And let559 let281)
  let let679 := (smtIte let678 let677 let336 Prop)
  let let680 := (And let564 let583)
  let let681 := (smtIte let680 let33 let59 Prop)
  let let682 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let564 let233) let497) let340) let549) let623) let621) let470) let559) let583) let561) let619) let615) let611) let246) let466) let553) let281) let495) let609) let606) let404) let602) let462) let545) let384) let551) let600) let95) let194) let597) let459) let617) let478) let543) let592) let102) let590) let315) let458) let105) let579) let613) let588) let253) let586) let197) let456)
  let let683 := (Eq arg1 let523)
  let let684 := (binrel% LT.lt fmt1 let275)
  let let685 := (Eq arg0 let646)
  let let686 := (Eq fmt0 let22)
  let let687 := (Eq x let69)
  let let688 := (Eq s let168)
  let let689 := (Eq percent let70)
  let let690 := (Eq adrx5fhi let91)
  let let691 := (Eq adrx5fmedhi let1)
  let let692 := (Eq adrx5fmedlo let8)
  let let693 := (Eq adrx5flo let91)
  let let694 := (Eq fmtx5flength let211)
  let let695 := (Eq distance let116)
  let let696 := (And let695 (And let694 (And let693 (And let692 (And let691 (And let690 (And let689 (And let688 (And let687 (And let686 (And let685 (And let358 (And let684 (And let637 (And let634 (And let577 (And let683 (And let682 (And let681 (And let679 (And let676 (And let673 (And let670 (And let667 (And let664 (And let662 (And let659 (And let656 (And let653 (And let650 (And let144 (And let238 let647))))))))))))))))))))))))))))))))
  let let697 := (And (And (And (And (And (And (And (And (And (And (And (And (And let695 let694) let693) let692) let691) let690) let689) let688) let687) (And (And (And (And (And (And (And let686 let685) let358) let684) let637) let634) let577) let683)) let682) (And (And (And (And (And (And (And (And (And (And (And let681 let679) let676) let673) let670) let667) let664) let662) let659) let656) let653) let650)) (And let144 let238)) let647)
  let let698 := (binrel% HAdd.hAdd arg0 let116)
  let let699 := (Eq let69 let168)
  let let700 := (Eq let699 False)
  let let701 := (Not let699)
  let let702 := (Not let369)
  let let703 := (And let59 let487)
  let let704 := (Not let703)
  let let705 := (Implies let703 False)
  let let706 := (binrel% HAdd.hAdd let56 let334)
  let let707 := (binrel% HMul.hMul let55 let10)
  let let708 := (binrel% HAdd.hAdd let53 let334)
  let let709 := (binrel% HMul.hMul let53 let22)
  let let710 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let5 let14) let410))
  let let711 := (binrel% HAdd.hAdd let208 (binrel% HAdd.hAdd let569 let710))
  let let712 := (binrel% HMul.hMul let55 let15)
  let let713 := (binrel% LT.lt let55 let22)
  let let714 := (binrel% GT.gt let53 let22)
  let let715 := (Eq let70 let100)
  let let716 := (Eq let145 let145)
  let let717 := (Eq let1 let12)
  let let718 := (binrel% HAdd.hAdd let227 let225)
  let let719 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 let718)))
  let let720 := (binrel% HAdd.hAdd let118 let718)
  let let721 := (Not let145)
  let let722 := (Not let721)
  let let723 := (Eq let722 let145)
  let let724 := (Eq let145 let722)
  let let725 := (And let59 (And let58 let81))
  let let726 := (Not let725)
  let let727 := (Implies let725 False)
  let let728 := (Eq let168 let100)
  let let729 := (And let59 let48)
  let let730 := (Not let729)
  let let731 := (Implies let729 False)
  let let732 := (And let59 (And let31 (And let75 let46)))
  let let733 := (Not let732)
  let let734 := (Implies let732 False)
  let let735 := (binrel% LE.le let56 let285)
  let let736 := (Or let564 (Or let233 (Or let497 (Or let340 (Or let549 (Or let623 (Or let621 (Or let470 (Or let559 (Or let583 (Or let561 (Or let619 (Or let615 (Or let611 (Or let246 (Or let466 (Or let553 (Or let281 (Or let495 (Or let609 (Or let606 (Or let404 (Or let602 (Or let462 (Or let545 (Or let384 (Or let551 (Or let600 (Or let95 (Or let194 (Or let597 (Or let459 (Or let617 (Or let478 (Or let543 (Or let592 (Or let102 (Or let590 (Or let315 (Or let458 (Or let105 (Or let579 (Or let613 (Or let588 (Or let253 (Or let586 (Or let197 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let737 := (Eq let26 let4)
  let let738 := (Eq let22 let74)
  let let739 := (binrel% GE.ge fmt1 let275)
  let let740 := (Not let739)
  let let741 := (Eq let210 let210)
  let let742 := (Eq let210 let360)
  let let743 := (Eq let155 let328)
  let let744 := (Not let199)
  let let745 := (And let127 (And let379 (And let198 (And let515 (And let158 let264)))))
  let let746 := (Not let745)
  let let747 := (Or let332 (Or let121 let163))
  let let748 := (Eq fmt1 let254)
  let let749 := (Eq fmt1 let584)
  let let750 := (Eq fmt1 let154)
  let let751 := (Eq fmt1 let164)
  let let752 := (Eq fmt1 let122)
  let let753 := (Eq fmt1 fmt0)
  let let754 := (Or let753 (Or let752 (Or let751 (Or let750 (Or let749 let748)))))
  let let755 := (And let104 let376)
  let let756 := (smtIte let755 let108 let201 Prop)
  let let757 := (And let616 let612)
  let let758 := (smtIte let757 let418 let405 Prop)
  let let759 := (And let544 let542)
  let let760 := (smtIte let759 let422 let89 Prop)
  let let761 := (And let552 let550)
  let let762 := (smtIte let761 let80 let20 Prop)
  let let763 := (And let558 let494)
  let let764 := (smtIte let763 let221 let24 Prop)
  let let765 := (And let563 let560)
  let let766 := (smtIte let765 let58 let31 Prop)
  let let767 := (And let104 let567)
  let let768 := (smtIte let767 let438 let437 Prop)
  let let769 := (And let616 let578)
  let let770 := (smtIte let769 let442 let249 Prop)
  let let771 := (And let544 let477)
  let let772 := (smtIte let771 let348 let191 Prop)
  let let773 := (And let552 let383)
  let let774 := (smtIte let773 let27 let37 Prop)
  let let775 := (And let558 let280)
  let let776 := (smtIte let775 let75 let29 Prop)
  let let777 := (And let563 let582)
  let let778 := (smtIte let777 let33 let59 Prop)
  let let779 := (Or let563 (Or let232 (Or let496 (Or let339 (Or let548 (Or let622 (Or let620 (Or let470 (Or let558 (Or let582 (Or let560 (Or let618 (Or let614 (Or let610 (Or let245 (Or let466 (Or let552 (Or let280 (Or let494 (Or let608 (Or let605 (Or let403 (Or let601 (Or let462 (Or let544 (Or let383 (Or let550 (Or let599 (Or let94 (Or let193 (Or let596 (Or let459 (Or let616 (Or let477 (Or let542 (Or let591 (Or let101 (Or let589 (Or let314 (Or let458 (Or let104 (Or let578 (Or let612 (Or let587 (Or let252 (Or let585 (Or let196 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let780 := (xx5fcount let624)
  let let781 := (binrel% HMul.hMul let8 let780)
  let let782 := (sx5fcount let624)
  let let783 := (binrel% HMul.hMul let8 let782)
  let let784 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let783 let781))
  let let785 := (Eq arg1 let784)
  let let786 := (Not let533)
  let let787 := (Not let639)
  let let788 := (And let695 (And let694 (And let693 (And let692 (And let691 (And let690 (And let689 (And let688 (And let687 (And let686 (And let643 (And let357 (And let787 (And let366 (And let633 (And let786 (And let785 (And let779 (And let778 (And let776 (And let774 (And let772 (And let770 (And let768 (And let766 (And let764 (And let762 (And let760 (And let758 (And let756 (And let754 (And let747 let746))))))))))))))))))))))))))))))))
  let let789 := (selectx5fformat let296)
  let let790 := (Eq let91 let789)
  let let791 := (selectx5fformat let307)
  let let792 := (Eq let1 let791)
  let let793 := (selectx5fformat let240)
  let let794 := (Eq let8 let793)
  let let795 := (And let481 (And let394 (And let284 (And let794 (And let792 let790)))))
  let let796 := (Not let795)
  let let797 := (Eq let22 let155)
  let let798 := (Eq let22 let119)
  let let799 := (Or let513 (Or let798 let797))
  let let800 := (Eq fmt1 let92)
  let let801 := (Eq fmt1 let353)
  let let802 := (Eq fmt1 let305)
  let let803 := (Eq fmt1 let371)
  let let804 := (Eq fmt1 let297)
  let let805 := (Or let414 (Or let804 (Or let803 (Or let802 (Or let801 let800)))))
  let let806 := (And let397 let386)
  let let807 := (smtIte let806 let108 let201 Prop)
  let let808 := (And let715 let338)
  let let809 := (smtIte let808 let418 let405 Prop)
  let let810 := (And let503 let484)
  let let811 := (smtIte let810 let422 let89 Prop)
  let let812 := (And let510 let389)
  let let813 := (smtIte let812 let80 let20 Prop)
  let let814 := (And let272 let268)
  let let815 := (smtIte let814 let221 let24 Prop)
  let let816 := (And let505 let501)
  let let817 := (smtIte let816 let58 let31 Prop)
  let let818 := (And let397 let509)
  let let819 := (smtIte let818 let438 let437 Prop)
  let let820 := (And let715 let207)
  let let821 := (smtIte let820 let442 let249 Prop)
  let let822 := (And let503 let728)
  let let823 := (smtIte let822 let348 let191 Prop)
  let let824 := (And let510 let536)
  let let825 := (smtIte let824 let27 let37 Prop)
  let let826 := (And let272 let189)
  let let827 := (smtIte let826 let75 let29 Prop)
  let let828 := (And let505 let317)
  let let829 := (smtIte let828 let33 let59 Prop)
  let let830 := (Or let505 (Or let262 (Or let270 (Or let277 (Or let274 (Or let256 (Or let277 (Or let470 (Or let272 (Or let317 (Or let501 (Or let511 (Or let540 (Or let539 (Or let511 (Or let466 (Or let510 (Or let189 (Or let268 (Or let504 (Or let538 (Or let483 (Or let504 (Or let462 (Or let503 (Or let536 (Or let389 (Or let498 (Or let537 (Or let279 (Or let498 (Or let459 (Or let715 (Or let728 (Or let484 (Or let391 (Or let327 (Or let323 (Or let391 (Or let458 (Or let397 (Or let207 (Or let338 (Or let486 (Or let363 (Or let342 (Or let486 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let831 := (binrel% HAdd.hAdd fmt1 let247)
  let let832 := (binrel% HAdd.hAdd let11 let831)
  let let833 := (xx5fcount let832)
  let let834 := (binrel% HMul.hMul let8 let833)
  let let835 := (sx5fcount let832)
  let let836 := (binrel% HMul.hMul let8 let835)
  let let837 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let836 let834))
  let let838 := (Eq let118 let837)
  let let839 := (binrel% GE.ge let230 let203)
  let let840 := (Not let839)
  let let841 := (binrel% GE.ge let720 let22)
  let let842 := (binrel% GE.ge let831 let1)
  let let843 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let247 let226))
  let let844 := (binrel% GE.ge let843 let5)
  let let845 := (Not let844)
  let let846 := (binrel% HAdd.hAdd let22 let331)
  let let847 := (binrel% GE.ge let846 let4)
  let let848 := (Not let847)
  let let849 := (Eq let22 let166)
  let let850 := (And let318 (And let302 (And let298 (And let395 (And let382 (And let298 (And let186 (And let169 (And let295 (And let400 (And let849 (And let848 (And let845 (And let842 (And let841 (And let840 (And let838 (And let830 (And let829 (And let827 (And let825 (And let823 (And let821 (And let819 (And let817 (And let815 (And let813 (And let811 (And let809 (And let807 (And let805 (And let799 let796))))))))))))))))))))))))))))))))
  let let851 := (Eq And And)
  let let852 := (Eq Or Or)
  let let853 := (Eq fmt1 fmt1)
  let let854 := (Eq let201 let201)
  let let855 := (Eq let108 let108)
  let let856 := (Eq let405 let405)
  let let857 := (Eq let418 let418)
  let let858 := (Eq let89 let89)
  let let859 := (Eq let422 let422)
  let let860 := (Eq let20 let20)
  let let861 := (Eq let80 let80)
  let let862 := (Eq let24 let24)
  let let863 := (Eq let221 let221)
  let let864 := (Eq let31 let31)
  let let865 := (Eq let58 let58)
  let let866 := (Eq let437 let437)
  let let867 := (Eq let438 let438)
  let let868 := (Eq let249 let249)
  let let869 := (Eq let442 let442)
  let let870 := (Eq let191 let191)
  let let871 := (Eq let348 let348)
  let let872 := (Eq let37 let37)
  let let873 := (Eq let27 let27)
  let let874 := (Eq let29 let29)
  let let875 := (Eq let75 let75)
  let let876 := (Eq let59 let59)
  let let877 := (Eq let33 let33)
  let let878 := (Eq let456 let456)
  let let879 := (Eq let458 let458)
  let let880 := (Eq let459 let459)
  let let881 := (Eq let462 let462)
  let let882 := (Eq let466 let466)
  let let883 := (Eq let470 let470)
  let let884 := (Eq let11 let11)
  let let885 := (Eq let203 let203)
  let let886 := (Eq let5 let5)
  let let887 := (Eq let4 let4)
  let let888 := (Eq arg1 let118)
  let let889 := (And let686 (And let687 (And let688 (And let689 (And let690 (And let691 (And let692 (And let693 (And let694 let695)))))))))
  let let890 := (And let319 let889)
  let let891 := (Eq arg1 arg1)
  let let892 := (Eq arg0 arg0)
  let let893 := (Eq let22 let698)
  let let894 := (Eq arg1 let837)
  let let895 := (Eq let784 let837)
  let let896 := (Eq let781 let834)
  let let897 := (Eq let780 let833)
  let let898 := (Eq let624 let832)
  let let899 := (Eq let364 let247)
  let let900 := (Eq let783 let836)
  let let901 := (Eq let782 let835)
  let let902 := (Not let59)
  let let903 := (Not let451)
  let let904 := (Or let903 let903)
  let let905 := (Not let188)
  let let906 := (Or let905 let903)
  let let907 := (Not let267)
  let let908 := (Or let907 let905)
  let let909 := (Implies let267 let905)
  let let910 := (Not let427)
  let let911 := (Or let905 let910)
  let let912 := (Implies let188 let910)
  let let913 := (Eq let427 False)
  let let914 := (Or let427 let267)
  let let915 := (Not let271)
  let let916 := (Not let75)
  let let917 := (Or let427 let914)
  let let918 := (Not let430)
  let let919 := (Not let449)
  let let920 := (Not let428)
  let let921 := (Not let453)
  let let922 := (Not let434)
  let let923 := (Not let31)
  let let924 := (Or let902 let923)
  let let925 := (Or let902 (Or let923 let924))
  let let926 := (Or let923 let925)
  let let927 := (Or let923 let721)
  let let928 := (Or let499 let721)
  let let929 := (Or let923 let928)
  let let930 := (Eq let22 let14)
  let let931 := (Eq let22 let13)
  let let932 := (And let16 (And let931 let930))
  let let933 := (Implies let703 let932)
  let let934 := (Eq let932 False)
  let let935 := (Or (Not let930) False)
  let let936 := (Not let931)
  let let937 := (Eq let14 let22)
  let let938 := (Not let937)
  let let939 := (Or let938 False)
  let let940 := (binrel% HAdd.hAdd let709 let707)
  let let941 := (binrel% HAdd.hAdd let709 let940)
  let let942 := (binrel% HAdd.hAdd let209 (binrel% HAdd.hAdd let570 let712))
  let let943 := (binrel% LE.le let942 let941)
  let let944 := (binrel% LE.le let712 let707)
  let let945 := (And let713 let16)
  let let946 := (Implies let945 let944)
  let let947 := (Eq let570 let709)
  let let948 := (Eq let13 let22)
  let let949 := (And let714 let948)
  let let950 := (Implies let949 let947)
  let let951 := (Eq let209 let709)
  let let952 := (And let714 let937)
  let let953 := (Implies let952 let951)
  let let954 := (And let480 let59)
  let let955 := (Implies let954 let930)
  let let956 := (Or let902 let930)
  let let957 := (Not let480)
  let let958 := (Or let957 let956)
  let let959 := (Eq let28 let14)
  let let960 := (Eq let12 let22)
  let let961 := (Eq let22 let28)
  let let962 := (Eq let145 let480)
  let let963 := (And let480 let31)
  let let964 := (Implies let963 let931)
  let let965 := (Or let923 let931)
  let let966 := (Or let957 let965)
  let let967 := (Eq let23 let13)
  let let968 := (Eq let22 let23)
  let let969 := (binrel% GE.ge fmt1 let10)
  let let970 := (Not let474)
  let let971 := (Or let970 (Or let145 let969))
  let let972 := (Or let970 (Or let722 let969))
  let let973 := (And let474 let721)
  let let974 := (Implies let973 let969)
  let let975 := (Not let44)
  let let976 := (Or let902 (Or let923 let975))
  let let977 := (Not let24)
  let let978 := (Or let977 let975)
  let let979 := (Or let923 let978)
  let let980 := (Or let902 let979)
  let let981 := (Not let29)
  let let982 := (Or let981 let979)
  let let983 := (Or let499 let975)
  let let984 := (Or let977 let983)
  let let985 := (Or let981 let984)
  let let986 := (Or let923 let985)
  let let987 := (Implies let729 let932)
  let let988 := (And let29 let59)
  let let989 := (And let603 let988)
  let let990 := (Implies let989 let930)
  let let991 := (Or let981 let956)
  let let992 := (Not let603)
  let let993 := (Or let992 let991)
  let let994 := (Eq let26 let14)
  let let995 := (Eq let12 let4)
  let let996 := (Eq let44 let603)
  let let997 := (And let24 let31)
  let let998 := (And let603 let997)
  let let999 := (Implies let998 let931)
  let let1000 := (Or let977 let965)
  let let1001 := (Or let992 let1000)
  let let1002 := (Eq let19 let13)
  let let1003 := (Eq let4 let14)
  let let1004 := (And let16 (And let931 let1003))
  let let1005 := (Implies let732 let1004)
  let let1006 := (Eq let1004 False)
  let let1007 := (Or (Not let1003) False)
  let let1008 := (Eq let14 let4)
  let let1009 := (Not let1008)
  let let1010 := (Or let1009 False)
  let let1011 := (binrel% HAdd.hAdd let562 let940)
  let let1012 := (binrel% LE.le let942 let1011)
  let let1013 := (Eq let209 let562)
  let let1014 := (And let714 let1008)
  let let1015 := (Implies let1014 let1013)
  let let1016 := (Or let977 (Or let499 (Or let975 let1004)))
  let let1017 := (Eq let4 let26)
  let let1018 := (And let603 let1017)
  let let1019 := (Or (Not let1017) let1003)
  let let1020 := (Implies let738 let1017)
  let let1021 := (Or (Not let738) let1017)
  let let1022 := (And let75 let59)
  let let1023 := (Implies let1022 let738)
  let let1024 := (Or let916 (Or let902 let738))
  let let1025 := (Not let221)
  let let1026 := (Eq let4 let13)
  let let1027 := (And let16 (And let1026 let930))
  let let1028 := (Implies let311 let1027)
  let let1029 := (Eq let1027 False)
  let let1030 := (Not let1026)
  let let1031 := (binrel% HAdd.hAdd let562 let707)
  let let1032 := (binrel% HAdd.hAdd let709 let1031)
  let let1033 := (binrel% LE.le let942 let1032)
  let let1034 := (Eq let570 let562)
  let let1035 := (Eq let13 let4)
  let let1036 := (And let714 let1035)
  let let1037 := (Implies let1036 let1034)
  let let1038 := (Or let499 (Or let975 let1027))
  let let1039 := (Eq let4 let19)
  let let1040 := (And let603 let1039)
  let let1041 := (Not let1039)
  let let1042 := (Or let1041 let1026)
  let let1043 := (Implies let347 let1039)
  let let1044 := (Or (Not let347) let1039)
  let let1045 := (And let221 let31)
  let let1046 := (Implies let1045 let347)
  let let1047 := (Or let1025 (Or let923 let347))
  let let1048 := (Not let969)
  let let1049 := (Or let1048 let44)
  let let1050 := (Or let210 (Or let9 let1049))
  let let1051 := (Or let360 (Or let594 let1049))
  let let1052 := (And let359 (And let593 let969))
  let let1053 := (Eq let10 fmt1)
  let let1054 := (And let969 (And let359 let593))
  let let1055 := (Or let902 (Or let981 let923))
  let let1056 := (Or let923 let1025)
  let let1057 := (Or let902 (Or let923 (Or let1025 let977)))
  let let1058 := (And let59 (And let31 let221))
  let let1059 := (And let59 (And let31 let1039))
  let let1060 := (Or let907 let910)
  let let1061 := (Implies let267 let910)
  let let1062 := (Not let20)
  let let1063 := (Or let1062 let593)
  let let1064 := (Not let37)
  let let1065 := (Or let499 let593)
  let let1066 := (Or let1062 let1065)
  let let1067 := (Implies let222 let1027)
  let let1068 := (Or let499 (Or let593 let1027))
  let let1069 := (Or let1062 let1068)
  let let1070 := (And let717 (And let37 let988))
  let let1071 := (Implies let1070 let930)
  let let1072 := (Not let717)
  let let1073 := (Or let1072 (Or let1064 let991))
  let let1074 := (Eq let2 let14)
  let let1075 := (Eq let12 let1)
  let let1076 := (Eq let9 let717)
  let let1077 := (And let717 (And let20 let1039))
  let let1078 := (Eq let18 let13)
  let let1079 := (Or let977 let1063)
  let let1080 := (Or let923 let1079)
  let let1081 := (Or let902 (Or let981 let1080))
  let let1082 := (Or let1064 let1080)
  let let1083 := (Or let981 let1082)
  let let1084 := (Or let977 let1066)
  let let1085 := (Or let1064 let1084)
  let let1086 := (Or let981 let1085)
  let let1087 := (Or let923 let1086)
  let let1088 := (Implies let292 let932)
  let let1089 := (And let717 (And let20 let997))
  let let1090 := (Implies let1089 let931)
  let let1091 := (Or let1072 (Or let1062 let1000))
  let let1092 := (Not let27)
  let let1093 := (Or let981 (Or let1092 let1080))
  let let1094 := (Or let981 (Or let1092 let1084))
  let let1095 := (Or let923 let1094)
  let let1096 := (Implies let151 let1004)
  let let1097 := (Or let977 (Or let1062 (Or let499 (Or let593 let1004))))
  let let1098 := (Eq let4 let2)
  let let1099 := (And let717 let1098)
  let let1100 := (Implies let1099 let1003)
  let let1101 := (Or let1072 (Or (Not let1098) let1003))
  let let1102 := (Implies let87 let1098)
  let let1103 := (Or (Not let87) let1098)
  let let1104 := (And let27 let988)
  let let1105 := (Implies let1104 let87)
  let let1106 := (Or let1092 (Or let981 (Or let902 let87)))
  let let1107 := (Eq let6 let26)
  let let1108 := (Or let977 (Or let593 let920))
  let let1109 := (Or let920 let920)
  let let1110 := (Or let977 (Or let593 let1109))
  let let1111 := (Not let388)
  let let1112 := (Not let448)
  let let1113 := (Or let1111 let1112)
  let let1114 := (Implies let388 let1112)
  let let1115 := (Not let80)
  let let1116 := (Or let977 (Or let1115 let593))
  let let1117 := (Or let981 (Or let1064 (Or let923 let1116)))
  let let1118 := (Or let981 (Or let1064 (Or let977 (Or let1115 let1065))))
  let let1119 := (Or let923 let1118)
  let let1120 := (Implies let83 let1027)
  let let1121 := (Eq let4 let18)
  let let1122 := (And let717 let1121)
  let let1123 := (Implies let1122 let1026)
  let let1124 := (Or let1072 (Or (Not let1121) let1026))
  let let1125 := (Implies let310 let1121)
  let let1126 := (Or (Not let310) let1121)
  let let1127 := (And let80 let997)
  let let1128 := (Implies let1127 let310)
  let let1129 := (Or let1115 (Or let977 (Or let923 let310)))
  let let1130 := (Eq let79 let19)
  let let1131 := (Implies let76 let1004)
  let let1132 := (Or let1064 let1097)
  let let1133 := (And let717 (And let37 let1017))
  let let1134 := (Not let432)
  let let1135 := (Not let433)
  let let1136 := (Or let1135 (Or let915 let1134))
  let let1137 := (And let433 let271)
  let let1138 := (Implies let1137 let1134)
  let let1139 := (Eq let432 False)
  let let1140 := (Or let902 let981)
  let let1141 := (Or let922 let922)
  let let1142 := (Not let58)
  let let1143 := (Or let902 (Or let981 (Or let1142 let977)))
  let let1144 := (Implies let66 let1027)
  let let1145 := (And let24 let58)
  let let1146 := (And let603 let1145)
  let let1147 := (Or let1142 let1026)
  let let1148 := (Or let977 let1147)
  let let1149 := (Eq let4 let23)
  let let1150 := (Implies let147 let1027)
  let let1151 := (And let480 let58)
  let let1152 := (Or let1142 let1079)
  let let1153 := (Or let902 (Or let981 let1152))
  let let1154 := (Implies let63 let1027)
  let let1155 := (And let717 (And let20 let1145))
  let let1156 := (Implies let1155 let1026)
  let let1157 := (Or let1072 (Or let1062 let1148))
  let let1158 := (And let16 (And let1026 let1003))
  let let1159 := (Implies let60 let1158)
  let let1160 := (Eq let1158 False)
  let let1161 := (binrel% HAdd.hAdd let562 let1031)
  let let1162 := (binrel% LE.le let942 let1161)
  let let1163 := (Or let499 (Or let593 let1158))
  let let1164 := (Eq let1 let13)
  let let1165 := (And let16 (And let1164 let930))
  let let1166 := (Implies let725 let1165)
  let let1167 := (binrel% HAdd.hAdd let709 (binrel% HAdd.hAdd let54 let707))
  let let1168 := (binrel% LE.le let942 let1167)
  let let1169 := (Eq let570 let54)
  let let1170 := (Eq let13 let1)
  let let1171 := (And let714 let1170)
  let let1172 := (Eq let1 let18)
  let let1173 := (And let717 let1172)
  let let1174 := (And let80 let1145)
  let let1175 := (Not let316)
  let let1176 := (Or let1175 let1134)
  let let1177 := (Implies let316 let1134)
  let let1178 := (Or let1175 let915)
  let let1179 := (Implies let316 let915)
  let let1180 := (Not let33)
  let let1181 := (Implies let488 let1004)
  let let1182 := (And let480 let33)
  let let1183 := (Or let1180 let1003)
  let let1184 := (Eq let4 let28)
  let let1185 := (Implies let49 let1004)
  let let1186 := (And let29 let33)
  let let1187 := (And let603 let1186)
  let let1188 := (Or let981 let1183)
  let let1189 := (Implies let526 let1158)
  let let1190 := (And let717 (And let37 let1186))
  let let1191 := (Implies let1190 let1003)
  let let1192 := (Or let1072 (Or let1064 let1188))
  let let1193 := (Implies let41 let1004)
  let let1194 := (Eq let1 let14)
  let let1195 := (And let16 (And let931 let1194))
  let let1196 := (Implies let34 let1195)
  let let1197 := (Eq let14 let1)
  let let1198 := (Not let1197)
  let let1199 := (binrel% HAdd.hAdd let54 let940)
  let let1200 := (binrel% LE.le let942 let1199)
  let let1201 := (Eq let209 let54)
  let let1202 := (And let714 let1197)
  let let1203 := (Eq let1 let2)
  let let1204 := (And let717 let1203)
  let let1205 := (And let27 let1186)
(Eq let7 let3) → (Eq let36 let35) → (Eq let43 let42) → (Eq let51 let50) → (Eq let54 let52) → (Eq let57 False) → (Eq let62 let61) → (Eq let65 let64) → (Eq let68 let67) → (Eq let73 let72) → let73 → (Eq let78 let77) → (Eq let85 let84) → (Eq let87 let86) → (Eq let90 let89) → (Eq let92 let91) → (Eq let95 let94) → (Eq let97 let96) → (Eq let99 let98) → (Eq let102 let101) → (Eq let105 let104) → (Eq let110 let108) → let112 → (Eq let119 let119) → (Eq let123 let121) → (Eq let125 let124) → (Eq let128 let127) → (Eq let130 let129) → (Eq let144 let143) → (Eq let149 let148) → (Eq let150 True) → (Eq let153 let152) → (Eq let135 let154) → (Eq let155 let155) → (Eq let159 let158) → (Eq let161 let160) → (Eq let165 let163) → (Eq let166 let22) → (Eq let167 let37) → (Eq let169 True) → (Eq let170 let27) → (Eq let171 True) → (Eq let185 let184) → (Eq let186 True) → (Eq let189 let188) → (Eq let192 let191) → (Eq let194 let193) → (Eq let195 let109) → (Eq let197 let196) → (Eq let181 let198) → let200 → (Eq let202 let201) → (Eq let205 let204) → (Eq let207 let206) → (Eq let209 let208) → (Eq let214 let210) → (Eq let217 let216) → (Eq let218 fmt1) → (Eq let219 let16) → (Eq let224 let223) → (Eq let230 let229) → (Eq let233 let232) → (Eq let238 let237) → let241 → (Eq let137 let164) → (Eq let243 let242) → (Eq let246 let245) → (Eq let247 let22) → (Eq let177 let248) → (Eq let250 let249) → (Eq let251 let12) → (Eq let253 let252) → (Eq let131 let254) → (Eq let256 let255) → (Eq let260 let258) → (Eq let262 let261) → (Eq let265 let264) → (Eq let266 let213) → (Eq let268 let267) → (Eq let270 let269) → (Eq let272 let271) → (Eq let274 let273) → (Eq let275 let260) → (Eq let277 let276) → (Eq let279 let278) → (Eq let281 let280) → (Eq let284 let283) → (Eq let288 let285) → (Eq let139 let122) → (Eq let240 let240) → (Eq let289 True) → (Eq let291 let290) → (Eq let294 let293) → (Eq let295 True) → (Eq let296 let296) → (Eq let297 let4) → (Eq let298 True) → (Eq let301 let300) → (Eq let302 True) → (Eq let304 False) → (Eq let305 let10) → let308 → (Eq let310 let309) → (Eq let313 let312) → (Eq let315 let314) → (Eq let317 let316) → (Eq let318 True) → (Eq let321 let319) → (Eq let323 let322) → let325 → (Eq let327 let326) → (Eq let329 False) → let330 → (Eq let331 let204) → (Eq let333 let332) → (Eq let335 let55) → (Eq let336 let29) → (Eq let338 let337) → (Eq let340 let339) → (Eq let342 let341) → (Eq let345 let344) → (Eq let347 let346) → (Eq let350 let348) → (Eq let307 let307) → (Eq let352 let351) → (Eq let353 let8) → (Eq let358 let357) → let361 → (Eq let363 let362) → (Eq let368 let366) → let370 → (Eq let227 let116) → (Eq let371 let1) → (Eq let374 let373) → (Eq let377 let376) → (Eq let380 let379) → (Eq let381 let55) → (Eq let382 True) → (Eq let384 let383) → (Eq let386 let385) → (Eq let387 let55) → (Eq let389 let388) → (Eq let225 let117) → (Eq let391 let390) → (Eq let392 let359) → (Eq let394 let393) → (Eq let395 True) → (Eq let174 let156) → (Eq let397 let396) → (Eq let399 let80) → (Eq let400 True) → (Eq let141 fmt0) → let402 → (Eq let404 let403) → (Eq let406 let405) → (Eq let476 let475) → (Eq let478 let477) → (Eq let479 let367) → (Eq let480 let145) → (Eq let226 let212) → (Eq let481 let407) → (Eq let482 let411) → (Eq let483 let464) → (Eq let484 let423) → (Eq let485 False) → (Eq let486 let457) → (Eq let490 let489) → (Eq let492 let422) → (Eq let493 let118) → (Eq let495 let494) → (Eq let497 let496) → (Eq let498 let460) → (Eq let500 let16) → (Eq let501 let432) → (Eq let502 let11) → (Eq let503 let424) → (Eq let504 let463) → (Eq let505 let433) → (Eq let507 let506) → (Eq let508 let499) → (Eq let509 let439) → (Eq let510 let427) → (Eq let511 let467) → (Eq let112 let512) → (Eq let513 let411) → (Eq let516 let515) → (Eq let523 let522) → (Eq let525 let442) → (Eq let528 let527) → (Eq let535 let533) → (Eq let536 let448) → (Eq let537 let461) → (Eq let538 let465) → (Eq let539 let468) → (Eq let540 let469) → (Eq let541 let491) → (Eq let543 let542) → (Eq let545 let544) → (Eq let546 let20) → (Eq let547 let398) → (Eq let549 let548) → (Eq let551 let550) → (Eq let553 let552) → (Eq let554 let12) → (Eq let555 let24) → (Eq let557 let221) → (Eq let559 let558) → (Eq let561 let560) → (Eq let562 let53) → (Eq let564 let563) → (Eq let565 let437) → (Eq let566 let438) → (Eq let568 let567) → (Eq let570 let569) → (Eq let571 let524) → (Eq let577 let576) → (Eq let579 let578) → (Eq let580 let349) → (Eq let581 let75) → (Eq let583 let582) → (Eq let133 let584) → (Eq let586 let585) → (Eq let588 let587) → (Eq let590 let589) → (Eq let592 let591) → let595 → (Eq let597 let596) → (Eq let595 let598) → (Eq let600 let599) → (Eq let602 let601) → (Eq let603 let44) → (Eq let402 let604) → (Eq let606 let605) → (Eq let607 let418) → (Eq let609 let608) → (Eq let611 let610) → (Eq let613 let612) → (Eq let615 let614) → (Eq let617 let616) → (Eq let619 let618) → (Eq let621 let620) → (Eq let623 let622) → (Eq let625 let624) → (Eq let626 let556) → (Eq let517 let627) → (Eq let628 let534) → (Eq let631 let630) → (Eq let574 let631) → (Eq let634 let633) → (Eq let637 let636) → (Eq let641 let639) → (Eq let642 let640) → (Eq let257 let5) → (Eq let645 let643) → (Eq let646 let644) → (Eq let697 let696) → (Eq let698 let320) → let700 → (Eq let700 let701) → (Eq let629 let203) → (Eq let370 let702) → (Eq let705 let704) → (Eq let706 let286) → (Eq let707 let286) → (Eq let708 let285) → (Eq let709 let56) → (Eq let711 let56) → (Eq let712 let710) → (Eq let713 True) → (Eq let714 True) → (Eq let715 let419) → (Eq let716 True) → (Eq let717 let9) → (Eq let720 let719) → let723 → (Eq let723 let724) → (Eq let727 let726) → (Eq let728 let445) → (Eq let731 let730) → (Eq let734 let733) → (Eq let735 False) → (Eq let682 let736) → (Eq let738 let737) → (Eq let684 let740) → (Eq let741 True) → (Eq let361 let742) → let743 → (Eq let200 let744) → let697 → False :=
  let let1 := (Int.ofNat 2)
  let let2 := (sx5fcount let1)
  let let3 := (Eq let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 let2)
  let let7 := (Eq let4 let6)
  let let8 := (Int.ofNat 4)
  let let9 := (Eq fmt1 let8)
  let let10 := (Int.ofNat 3)
  let let11 := (Neg.neg let1)
  let let12 := (binrel% HAdd.hAdd let11 fmt1)
  let let13 := (xx5fcount let12)
  let let14 := (sx5fcount let12)
  let let15 := (binrel% HAdd.hAdd let14 let13)
  let let16 := (binrel% GE.ge let15 let10)
  let let17 := (And let16 let9)
  let let18 := (xx5fcount let1)
  let let19 := (xx5fcount let4)
  let let20 := (Eq let19 let18)
  let let21 := (And let20 let17)
  let let22 := (Int.ofNat 0)
  let let23 := (xx5fcount let22)
  let let24 := (Eq let23 let19)
  let let25 := (And let24 let21)
  let let26 := (sx5fcount let4)
  let let27 := (Eq let26 let6)
  let let28 := (sx5fcount let22)
  let let29 := (Eq let28 let26)
  let let30 := (And let29 (And let27 let25))
  let let31 := (Eq let23 let22)
  let let32 := (And let31 let30)
  let let33 := (Eq let28 let4)
  let let34 := (And let33 let32)
  let let35 := (Not let34)
  let let36 := (Implies let34 False)
  let let37 := (Eq let26 let2)
  let let38 := (And let37 let25)
  let let39 := (And let29 let38)
  let let40 := (And let31 let39)
  let let41 := (And let33 let40)
  let let42 := (Not let41)
  let let43 := (Implies let41 False)
  let let44 := (Eq fmt1 let10)
  let let45 := (And let16 let44)
  let let46 := (And let24 let45)
  let let47 := (And let29 let46)
  let let48 := (And let31 let47)
  let let49 := (And let33 let48)
  let let50 := (Not let49)
  let let51 := (Implies let49 False)
  let let52 := (Rat.ofInt 2)
  let let53 := (Rat.ofInt 1)
  let let54 := (binrel% HMul.hMul let53 let1)
  let let55 := (Neg.neg let53)
  let let56 := (Rat.ofInt 0)
  let let57 := (binrel% LE.le let56 let55)
  let let58 := (Eq let23 let4)
  let let59 := (Eq let28 let22)
  let let60 := (And let59 (And let58 let30))
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (And let59 (And let58 let39))
  let let64 := (Not let63)
  let let65 := (Implies let63 False)
  let let66 := (And let59 (And let58 let47))
  let let67 := (Not let66)
  let let68 := (Implies let66 False)
  let let69 := (Int.ofNat 120)
  let let70 := (Int.ofNat 37)
  let let71 := (Eq let70 let69)
  let let72 := (Not let71)
  let let73 := (Eq let71 False)
  let let74 := (binrel% HAdd.hAdd let5 let26)
  let let75 := (Eq let28 let74)
  let let76 := (And let59 (And let31 (And let75 let38)))
  let let77 := (Not let76)
  let let78 := (Implies let76 False)
  let let79 := (binrel% HAdd.hAdd let5 let18)
  let let80 := (Eq let19 let79)
  let let81 := (And let29 (And let37 (And let24 (And let80 let17))))
  let let82 := (And let31 let81)
  let let83 := (And let59 let82)
  let let84 := (Not let83)
  let let85 := (Implies let83 False)
  let let86 := (Eq let2 let4)
  let let87 := (Eq let22 let6)
  let let88 := (xx5fcount let10)
  let let89 := (Eq let18 let88)
  let let90 := (Eq let88 let18)
  let let91 := (Int.ofNat 5)
  let let92 := (binrel% HAdd.hAdd let91 let22)
  let let93 := (selectx5fformat let10)
  let let94 := (Eq adrx5fmedlo let93)
  let let95 := (Eq let93 adrx5fmedlo)
  let let96 := (binrel% HAdd.hAdd let4 let88)
  let let97 := (binrel% HAdd.hAdd let88 let4)
  let let98 := (Eq let18 let1)
  let let99 := (Eq let4 let79)
  let let100 := (selectx5fformat let8)
  let let101 := (Eq adrx5fmedlo let100)
  let let102 := (Eq let100 adrx5fmedlo)
  let let103 := (selectx5fformat let91)
  let let104 := (Eq percent let103)
  let let105 := (Eq let103 percent)
  let let106 := (xx5fcount let91)
  let let107 := (xx5fcount let8)
  let let108 := (Eq let107 (binrel% HAdd.hAdd let5 let106))
  let let109 := (binrel% HAdd.hAdd let4 let107)
  let let110 := (Eq let106 let109)
  let let111 := (Eq let69 let70)
  let let112 := (Eq let111 False)
  let let113 := (binrel% HMul.hMul let8 let13)
  let let114 := (binrel% HMul.hMul let8 let14)
  let let115 := (binrel% HAdd.hAdd let114 let113)
  let let116 := (Int.ofNat 12)
  let let117 := (Neg.neg let116)
  let let118 := (binrel% HAdd.hAdd let117 let115)
  let let119 := (binrel% HAdd.hAdd let5 let118)
  let let120 := (binrel% HAdd.hAdd let5 arg1)
  let let121 := (Eq fmt0 let120)
  let let122 := (binrel% HAdd.hAdd let4 fmt0)
  let let123 := (Eq arg1 let122)
  let let124 := (binrel% HAdd.hAdd let4 let26)
  let let125 := (binrel% HAdd.hAdd let26 let4)
  let let126 := (selectx5fformat fmt1)
  let let127 := (Eq percent let126)
  let let128 := (Eq let126 percent)
  let let129 := (binrel% HAdd.hAdd let4 fmt1)
  let let130 := (binrel% HAdd.hAdd fmt1 let4)
  let let131 := (binrel% HAdd.hAdd fmt0 let91)
  let let132 := (Eq fmt1 let131)
  let let133 := (binrel% HAdd.hAdd fmt0 let8)
  let let134 := (Eq fmt1 let133)
  let let135 := (binrel% HAdd.hAdd fmt0 let10)
  let let136 := (Eq fmt1 let135)
  let let137 := (binrel% HAdd.hAdd fmt0 let1)
  let let138 := (Eq fmt1 let137)
  let let139 := (binrel% HAdd.hAdd fmt0 let4)
  let let140 := (Eq fmt1 let139)
  let let141 := (binrel% HAdd.hAdd fmt0 let22)
  let let142 := (Eq fmt1 let141)
  let let143 := (Or let142 (Or let140 (Or let138 (Or let136 (Or let134 let132)))))
  let let144 := (Or (Or (Or (Or (Or let142 let140) let138) let136) let134) let132)
  let let145 := (Eq fmt1 let1)
  let let146 := (And let16 let145)
  let let147 := (And let59 (And let58 let146))
  let let148 := (Not let147)
  let let149 := (Implies let147 False)
  let let150 := (Eq let118 let118)
  let let151 := (And let59 let32)
  let let152 := (Not let151)
  let let153 := (Implies let151 False)
  let let154 := (binrel% HAdd.hAdd let10 fmt0)
  let let155 := (binrel% HAdd.hAdd let11 let118)
  let let156 := (binrel% HAdd.hAdd let1 arg1)
  let let157 := (selectx5fformat let156)
  let let158 := (Eq adrx5fmedhi let157)
  let let159 := (Eq let157 adrx5fmedhi)
  let let160 := (binrel% HAdd.hAdd let10 arg1)
  let let161 := (binrel% HAdd.hAdd arg1 let10)
  let let162 := (binrel% HAdd.hAdd let11 arg1)
  let let163 := (Eq fmt0 let162)
  let let164 := (binrel% HAdd.hAdd let1 fmt0)
  let let165 := (Eq arg1 let164)
  let let166 := (binrel% HAdd.hAdd let117 let116)
  let let167 := (Eq let2 let26)
  let let168 := (Int.ofNat 115)
  let let169 := (Eq let168 let168)
  let let170 := (Eq let2 let124)
  let let171 := (Not False)
  let let172 := (selectx5fformat let161)
  let let173 := (Eq let172 adrx5fhi)
  let let174 := (binrel% HAdd.hAdd arg1 let1)
  let let175 := (selectx5fformat let174)
  let let176 := (Eq let175 adrx5fmedhi)
  let let177 := (binrel% HAdd.hAdd arg1 let4)
  let let178 := (selectx5fformat let177)
  let let179 := (Eq let178 adrx5fmedlo)
  let let180 := (selectx5fformat arg1)
  let let181 := (Eq let180 adrx5flo)
  let let182 := (selectx5fformat let130)
  let let183 := (Eq let182 s)
  let let184 := (And let128 (And let183 (And let181 (And let179 (And let176 let173)))))
  let let185 := (And (And (And (And (And let128 let183) let181) let179) let176) let173)
  let let186 := (Eq let70 let70)
  let let187 := (selectx5fformat let1)
  let let188 := (Eq let187 let168)
  let let189 := (Eq let168 let187)
  let let190 := (sx5fcount let10)
  let let191 := (Eq let2 let190)
  let let192 := (Eq let190 let2)
  let let193 := (Eq adrx5fmedhi let93)
  let let194 := (Eq let93 adrx5fmedhi)
  let let195 := (binrel% HAdd.hAdd let107 let4)
  let let196 := (Eq adrx5fhi let103)
  let let197 := (Eq let103 adrx5fhi)
  let let198 := (Eq adrx5flo let180)
  let let199 := (Eq let22 let4)
  let let200 := (Eq let199 False)
  let let201 := (Eq let107 let106)
  let let202 := (Eq let106 let107)
  let let203 := (Neg.neg let8)
  let let204 := (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd (binrel% HMul.hMul let203 let14) (binrel% HMul.hMul let203 let13)))
  let let205 := (binrel% HAdd.hAdd let22 let204)
  let let206 := (Eq let103 let168)
  let let207 := (Eq let168 let103)
  let let208 := (Rat.ofInt let14)
  let let209 := (binrel% HMul.hMul let53 let14)
  let let210 := (binrel% GE.ge fmt1 let91)
  let let211 := (Int.ofNat 6)
  let let212 := (Neg.neg let211)
  let let213 := (binrel% HAdd.hAdd let212 fmt1)
  let let214 := (binrel% GE.ge let213 let5)
  let let215 := (sx5fcount let8)
  let let216 := (binrel% HAdd.hAdd let4 let215)
  let let217 := (binrel% HAdd.hAdd let215 let4)
  let let218 := (binrel% HAdd.hAdd fmt1 let22)
  let let219 := (binrel% GE.ge let118 let22)
  let let220 := (binrel% HAdd.hAdd let5 let19)
  let let221 := (Eq let23 let220)
  let let222 := (And let59 (And let31 (And let29 (And let37 (And let221 let21)))))
  let let223 := (Not let222)
  let let224 := (Implies let222 False)
  let let225 := (binrel% HMul.hMul let5 let116)
  let let226 := (binrel% HMul.hMul let5 let211)
  let let227 := (binrel% HMul.hMul let5 let117)
  let let228 := (binrel% HAdd.hAdd let227 (binrel% HAdd.hAdd let226 let225))
  let let229 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 let228)))
  let let230 := (binrel% HAdd.hAdd let118 let228)
  let let231 := (selectx5fformat let22)
  let let232 := (Eq s let231)
  let let233 := (Eq let231 s)
  let let234 := (Eq arg1 let137)
  let let235 := (Eq arg1 let139)
  let let236 := (Eq arg1 let141)
  let let237 := (Or let236 (Or let235 let234))
  let let238 := (Or (Or let236 let235) let234)
  let let239 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) let115)
  let let240 := (binrel% HAdd.hAdd let4 let118)
  let let241 := (Eq let240 let239)
  let let242 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 18)) let115)
  let let243 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let116 (binrel% HAdd.hAdd let212 let117)))))
  let let244 := (selectx5fformat let4)
  let let245 := (Eq adrx5fhi let244)
  let let246 := (Eq let244 adrx5fhi)
  let let247 := (binrel% HMul.hMul let5 let22)
  let let248 := (binrel% HAdd.hAdd let4 arg1)
  let let249 := (Eq let190 let215)
  let let250 := (Eq let215 let190)
  let let251 := (binrel% HAdd.hAdd let11 let218)
  let let252 := (Eq adrx5fmedlo let103)
  let let253 := (Eq let103 adrx5fmedlo)
  let let254 := (binrel% HAdd.hAdd let91 fmt0)
  let let255 := (Eq let231 let1)
  let let256 := (Eq let1 let231)
  let let257 := (binrel% HMul.hMul let5 let4)
  let let258 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let257))
  let let259 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let260 := (binrel% HAdd.hAdd let259 let257)
  let let261 := (Eq let231 let168)
  let let262 := (Eq let168 let231)
  let let263 := (selectx5fformat let160)
  let let264 := (Eq adrx5fhi let263)
  let let265 := (Eq let263 adrx5fhi)
  let let266 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let22 let212))
  let let267 := (Eq let187 let69)
  let let268 := (Eq let69 let187)
  let let269 := (Eq let231 let69)
  let let270 := (Eq let69 let231)
  let let271 := (Eq let244 let70)
  let let272 := (Eq let70 let244)
  let let273 := (Eq let231 let8)
  let let274 := (Eq let8 let231)
  let let275 := (binrel% HSub.hSub let259 let4)
  let let276 := (Eq let231 let91)
  let let277 := (Eq let91 let231)
  let let278 := (Eq let93 let1)
  let let279 := (Eq let1 let93)
  let let280 := (Eq s let187)
  let let281 := (Eq let187 s)
  let let282 := (selectx5fformat let118)
  let let283 := (Eq let282 let91)
  let let284 := (Eq let91 let282)
  let let285 := (Neg.neg let52)
  let let286 := (Neg.neg (Rat.ofInt 3))
  let let287 := (binrel% HAdd.hAdd let53 let286)
  let let288 := (binrel% HAdd.hAdd let56 let287)
  let let289 := (Eq let9 let9)
  let let290 := (binrel% HAdd.hAdd let4 let28)
  let let291 := (binrel% HAdd.hAdd let28 let4)
  let let292 := (And let59 let40)
  let let293 := (Not let292)
  let let294 := (Implies let292 False)
  let let295 := (Eq let69 let69)
  let let296 := (binrel% HAdd.hAdd let10 let118)
  let let297 := (binrel% HAdd.hAdd let4 let22)
  let let298 := (Eq let91 let91)
  let let299 := (selectx5fformat let239)
  let let300 := (Eq let299 let8)
  let let301 := (Eq let8 let299)
  let let302 := (Eq let211 let211)
  let let303 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let115)
  let let304 := (Eq let22 let303)
  let let305 := (binrel% HAdd.hAdd let10 let22)
  let let306 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) let115)
  let let307 := (binrel% HAdd.hAdd let1 let118)
  let let308 := (Eq let307 let306)
  let let309 := (Eq let18 let4)
  let let310 := (Eq let22 let79)
  let let311 := (And let59 (And let31 (And let29 (And let221 let45))))
  let let312 := (Not let311)
  let let313 := (Implies let311 False)
  let let314 := (Eq adrx5fhi let100)
  let let315 := (Eq let100 adrx5fhi)
  let let316 := (Eq let244 let168)
  let let317 := (Eq let168 let244)
  let let318 := (Eq let116 let116)
  let let319 := (Eq arg0 let117)
  let let320 := (binrel% HAdd.hAdd let116 arg0)
  let let321 := (Eq let22 let320)
  let let322 := (Eq let100 let1)
  let let323 := (Eq let1 let100)
  let let324 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) let115)
  let let325 := (Eq let296 let324)
  let let326 := (Eq let100 let8)
  let let327 := (Eq let8 let100)
  let let328 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let115)
  let let329 := (Eq let22 let328)
  let let330 := (Eq let119 let303)
  let let331 := (binrel% HMul.hMul let5 let118)
  let let332 := (Eq fmt0 arg1)
  let let333 := (Eq arg1 fmt0)
  let let334 := (binrel% HAdd.hAdd let56 let286)
  let let335 := (binrel% HAdd.hAdd let52 let334)
  let let336 := (Eq let26 let28)
  let let337 := (Eq let103 let69)
  let let338 := (Eq let69 let103)
  let let339 := (Eq adrx5flo let231)
  let let340 := (Eq let231 adrx5flo)
  let let341 := (Eq let103 let1)
  let let342 := (Eq let1 let103)
  let let343 := (selectx5fformat let324)
  let let344 := (Eq let343 let91)
  let let345 := (Eq let91 let343)
  let let346 := (Eq let19 let4)
  let let347 := (Eq let22 let220)
  let let348 := (Eq let2 (binrel% HAdd.hAdd let5 let190))
  let let349 := (binrel% HAdd.hAdd let4 let2)
  let let350 := (Eq let190 let349)
  let let351 := (binrel% GE.ge let15 let8)
  let let352 := (binrel% GE.ge let242 let203)
  let let353 := (binrel% HAdd.hAdd let8 let22)
  let let354 := (binrel% HMul.hMul let5 arg1)
  let let355 := (binrel% HAdd.hAdd fmt0 let354)
  let let356 := (binrel% GE.ge let355 let4)
  let let357 := (Not let356)
  let let358 := (binrel% GE.ge arg1 fmt0)
  let let359 := (Not let210)
  let let360 := (Not let359)
  let let361 := (Eq let360 let210)
  let let362 := (Eq let103 let8)
  let let363 := (Eq let8 let103)
  let let364 := (binrel% HMul.hMul let5 fmt0)
  let let365 := (binrel% HAdd.hAdd fmt1 let364)
  let let366 := (binrel% GE.ge let365 let1)
  let let367 := (Not let366)
  let let368 := (Not let367)
  let let369 := (Eq let168 let70)
  let let370 := (Eq let369 False)
  let let371 := (binrel% HAdd.hAdd let1 let22)
  let let372 := (selectx5fformat let306)
  let let373 := (Eq let372 let1)
  let let374 := (Eq let1 let372)
  let let375 := (selectx5fformat let211)
  let let376 := (Eq x let375)
  let let377 := (Eq let375 x)
  let let378 := (selectx5fformat let129)
  let let379 := (Eq s let378)
  let let380 := (Eq let378 s)
  let let381 := (binrel% HAdd.hAdd let56 (binrel% HAdd.hAdd let52 let286))
  let let382 := (Eq let1 let1)
  let let383 := (Eq s let93)
  let let384 := (Eq let93 s)
  let let385 := (Eq let375 let69)
  let let386 := (Eq let69 let375)
  let let387 := (binrel% HAdd.hAdd let53 let287)
  let let388 := (Eq let93 let69)
  let let389 := (Eq let69 let93)
  let let390 := (Eq let100 let91)
  let let391 := (Eq let91 let100)
  let let392 := (binrel% LT.lt fmt1 let91)
  let let393 := (Eq let378 let168)
  let let394 := (Eq let168 let378)
  let let395 := (Eq let8 let8)
  let let396 := (Eq let103 let70)
  let let397 := (Eq let70 let103)
  let let398 := (binrel% HAdd.hAdd let4 let19)
  let let399 := (Eq let18 let398)
  let let400 := (Eq let22 let22)
  let let401 := (Eq let168 let69)
  let let402 := (Eq let401 False)
  let let403 := (Eq adrx5fmedhi let187)
  let let404 := (Eq let187 adrx5fmedhi)
  let let405 := (Eq let88 let107)
  let let406 := (Eq let107 let88)
  let let407 := (Eq let126 let70)
  let let408 := (And let407 (And let393 (And let283 (And let300 (And let373 let344)))))
  let let409 := (Not let408)
  let let410 := (binrel% HMul.hMul let5 let13)
  let let411 := (Eq let14 (binrel% HAdd.hAdd let10 let410))
  let let412 := (Eq fmt1 let91)
  let let413 := (Eq fmt1 let4)
  let let414 := (Eq fmt1 let22)
  let let415 := (Or let414 (Or let413 (Or let145 (Or let44 (Or let9 let412)))))
  let let416 := (And let396 let385)
  let let417 := (smtIte let416 let108 let201 Prop)
  let let418 := (Eq let88 (binrel% HAdd.hAdd let5 let107))
  let let419 := (Eq let100 let70)
  let let420 := (And let419 let337)
  let let421 := (smtIte let420 let418 let405 Prop)
  let let422 := (Eq let18 (binrel% HAdd.hAdd let5 let88))
  let let423 := (Eq let100 let69)
  let let424 := (Eq let93 let70)
  let let425 := (And let424 let423)
  let let426 := (smtIte let425 let422 let89 Prop)
  let let427 := (Eq let187 let70)
  let let428 := (And let427 let388)
  let let429 := (smtIte let428 let80 let20 Prop)
  let let430 := (And let271 let267)
  let let431 := (smtIte let430 let221 let24 Prop)
  let let432 := (Eq let244 let69)
  let let433 := (Eq let231 let70)
  let let434 := (And let433 let432)
  let let435 := (smtIte let434 let58 let31 Prop)
  let let436 := (sx5fcount let91)
  let let437 := (Eq let215 let436)
  let let438 := (Eq let215 (binrel% HAdd.hAdd let5 let436))
  let let439 := (Eq let375 let168)
  let let440 := (And let396 let439)
  let let441 := (smtIte let440 let438 let437 Prop)
  let let442 := (Eq let190 (binrel% HAdd.hAdd let5 let215))
  let let443 := (And let419 let206)
  let let444 := (smtIte let443 let442 let249 Prop)
  let let445 := (Eq let100 let168)
  let let446 := (And let424 let445)
  let let447 := (smtIte let446 let348 let191 Prop)
  let let448 := (Eq let93 let168)
  let let449 := (And let427 let448)
  let let450 := (smtIte let449 let27 let37 Prop)
  let let451 := (And let271 let188)
  let let452 := (smtIte let451 let75 let29 Prop)
  let let453 := (And let433 let316)
  let let454 := (smtIte let453 let33 let59 Prop)
  let let455 := (Int.ofNat 255)
  let let456 := (Eq let103 let455)
  let let457 := (Eq let103 let91)
  let let458 := (Eq let100 let455)
  let let459 := (Eq let93 let455)
  let let460 := (Eq let93 let91)
  let let461 := (Eq let93 let8)
  let let462 := (Eq let187 let455)
  let let463 := (Eq let187 let91)
  let let464 := (Eq let187 let1)
  let let465 := (Eq let187 let8)
  let let466 := (Eq let244 let455)
  let let467 := (Eq let244 let91)
  let let468 := (Eq let244 let1)
  let let469 := (Eq let244 let8)
  let let470 := (Eq let231 let455)
  let let471 := (Or let433 (Or let261 (Or let269 (Or let276 (Or let273 (Or let255 (Or let276 (Or let470 (Or let271 (Or let316 (Or let432 (Or let467 (Or let469 (Or let468 (Or let467 (Or let466 (Or let427 (Or let188 (Or let267 (Or let463 (Or let465 (Or let464 (Or let463 (Or let462 (Or let424 (Or let448 (Or let388 (Or let460 (Or let461 (Or let278 (Or let460 (Or let459 (Or let419 (Or let445 (Or let423 (Or let390 (Or let326 (Or let322 (Or let390 (Or let458 (Or let396 (Or let206 (Or let337 (Or let457 (Or let362 (Or let341 (Or let457 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let472 := (And let471 (And let454 (And let452 (And let450 (And let447 (And let444 (And let441 (And let435 (And let431 (And let429 (And let426 (And let421 (And let417 (And let415 (And let411 let409)))))))))))))))
  let let473 := (Not let351)
  let let474 := (binrel% GE.ge fmt1 let1)
  let let475 := (And let16 (And let359 (And let474 (And let473 let472))))
  let let476 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let16 (And let359 (And let474 (And let16 (And let473 (And True let472)))))))))))))))))
  let let477 := (Eq s let100)
  let let478 := (Eq let100 s)
  let let479 := (binrel% LE.le fmt1 let122)
  let let480 := (Eq let22 let12)
  let let481 := (Eq let70 let126)
  let let482 := (Or let411 (Or False False))
  let let483 := (Eq let1 let187)
  let let484 := (Eq let69 let100)
  let let485 := (binrel% LE.le let56 let286)
  let let486 := (Eq let91 let103)
  let let487 := (And let31 let146)
  let let488 := (And let33 let487)
  let let489 := (Not let488)
  let let490 := (Implies let488 False)
  let let491 := (binrel% HAdd.hAdd let4 let18)
  let let492 := (Eq let88 let491)
  let let493 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 (binrel% HAdd.hAdd let116 let117))))
  let let494 := (Eq x let187)
  let let495 := (Eq let187 x)
  let let496 := (Eq x let231)
  let let497 := (Eq let231 x)
  let let498 := (Eq let91 let93)
  let let499 := (Not let16)
  let let500 := (Not let499)
  let let501 := (Eq let69 let244)
  let let502 := (binrel% HMul.hMul let5 let1)
  let let503 := (Eq let70 let93)
  let let504 := (Eq let91 let187)
  let let505 := (Eq let70 let231)
  let let506 := (binrel% HAdd.hAdd fmt1 let502)
  let let507 := (binrel% HSub.hSub fmt1 let1)
  let let508 := (binrel% GE.ge let204 let4)
  let let509 := (Eq let168 let375)
  let let510 := (Eq let70 let187)
  let let511 := (Eq let91 let244)
  let let512 := (Not let111)
  let let513 := (Eq let22 let118)
  let let514 := (selectx5fformat let248)
  let let515 := (Eq adrx5fmedlo let514)
  let let516 := (Eq let514 adrx5fmedlo)
  let let517 := (binrel% HSub.hSub let507 fmt0)
  let let518 := (xx5fcount let517)
  let let519 := (binrel% HMul.hMul let8 let518)
  let let520 := (sx5fcount let517)
  let let521 := (binrel% HMul.hMul let8 let520)
  let let522 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let521 let519))
  let let523 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let521) let519)
  let let524 := (binrel% HAdd.hAdd let4 let190)
  let let525 := (Eq let215 let524)
  let let526 := (And let33 let82)
  let let527 := (Not let526)
  let let528 := (Implies let526 False)
  let let529 := (binrel% HMul.hMul let5 distance)
  let let530 := (binrel% HMul.hMul let5 fmtx5flength)
  let let531 := (binrel% HMul.hMul let5 arg0)
  let let532 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let531 (binrel% HAdd.hAdd let530 let529)))
  let let533 := (binrel% GE.ge let532 let203)
  let let534 := (binrel% HAdd.hAdd let203 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let535 := (binrel% GE.ge arg1 let534)
  let let536 := (Eq let168 let93)
  let let537 := (Eq let8 let93)
  let let538 := (Eq let8 let187)
  let let539 := (Eq let1 let244)
  let let540 := (Eq let8 let244)
  let let541 := (binrel% HAdd.hAdd let18 let4)
  let let542 := (Eq x let100)
  let let543 := (Eq let100 x)
  let let544 := (Eq percent let93)
  let let545 := (Eq let93 percent)
  let let546 := (Eq let18 let19)
  let let547 := (binrel% HAdd.hAdd let19 let4)
  let let548 := (Eq adrx5fmedlo let231)
  let let549 := (Eq let231 adrx5fmedlo)
  let let550 := (Eq x let93)
  let let551 := (Eq let93 x)
  let let552 := (Eq percent let187)
  let let553 := (Eq let187 percent)
  let let554 := (binrel% HAdd.hAdd fmt1 let11)
  let let555 := (Eq let19 let23)
  let let556 := (binrel% HAdd.hAdd let4 let23)
  let let557 := (Eq let19 let556)
  let let558 := (Eq percent let244)
  let let559 := (Eq let244 percent)
  let let560 := (Eq x let244)
  let let561 := (Eq let244 x)
  let let562 := (binrel% HMul.hMul let53 let4)
  let let563 := (Eq percent let231)
  let let564 := (Eq let231 percent)
  let let565 := (Eq let436 let215)
  let let566 := (Eq let436 let216)
  let let567 := (Eq s let375)
  let let568 := (Eq let375 s)
  let let569 := (Rat.ofInt let13)
  let let570 := (binrel% HMul.hMul let53 let13)
  let let571 := (binrel% HAdd.hAdd let190 let4)
  let let572 := (binrel% HAdd.hAdd arg0 distance)
  let let573 := (binrel% HAdd.hAdd let572 fmtx5flength)
  let let574 := (binrel% HSub.hSub let573 let8)
  let let575 := (binrel% GE.ge arg1 let574)
  let let576 := (Not let575)
  let let577 := (binrel% LT.lt arg1 let574)
  let let578 := (Eq s let103)
  let let579 := (Eq let103 s)
  let let580 := (binrel% HAdd.hAdd let2 let4)
  let let581 := (Eq let26 let290)
  let let582 := (Eq s let244)
  let let583 := (Eq let244 s)
  let let584 := (binrel% HAdd.hAdd let8 fmt0)
  let let585 := (Eq adrx5fmedhi let103)
  let let586 := (Eq let103 adrx5fmedhi)
  let let587 := (Eq adrx5flo let103)
  let let588 := (Eq let103 adrx5flo)
  let let589 := (Eq adrx5fmedhi let100)
  let let590 := (Eq let100 adrx5fmedhi)
  let let591 := (Eq adrx5flo let100)
  let let592 := (Eq let100 adrx5flo)
  let let593 := (Not let9)
  let let594 := (Not let593)
  let let595 := (Eq let594 let9)
  let let596 := (Eq adrx5fhi let93)
  let let597 := (Eq let93 adrx5fhi)
  let let598 := (Eq let9 let594)
  let let599 := (Eq adrx5flo let93)
  let let600 := (Eq let93 adrx5flo)
  let let601 := (Eq adrx5fhi let187)
  let let602 := (Eq let187 adrx5fhi)
  let let603 := (Eq let4 let12)
  let let604 := (Not let401)
  let let605 := (Eq adrx5fmedlo let187)
  let let606 := (Eq let187 adrx5fmedlo)
  let let607 := (Eq let107 let96)
  let let608 := (Eq adrx5flo let187)
  let let609 := (Eq let187 adrx5flo)
  let let610 := (Eq adrx5fmedhi let244)
  let let611 := (Eq let244 adrx5fmedhi)
  let let612 := (Eq x let103)
  let let613 := (Eq let103 x)
  let let614 := (Eq adrx5fmedlo let244)
  let let615 := (Eq let244 adrx5fmedlo)
  let let616 := (Eq percent let100)
  let let617 := (Eq let100 percent)
  let let618 := (Eq adrx5flo let244)
  let let619 := (Eq let244 adrx5flo)
  let let620 := (Eq adrx5fhi let231)
  let let621 := (Eq let231 adrx5fhi)
  let let622 := (Eq adrx5fmedhi let231)
  let let623 := (Eq let231 adrx5fmedhi)
  let let624 := (binrel% HAdd.hAdd let11 let365)
  let let625 := (binrel% HAdd.hAdd let12 let364)
  let let626 := (binrel% HAdd.hAdd let23 let4)
  let let627 := (binrel% HAdd.hAdd let507 let364)
  let let628 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let203)))
  let let629 := (binrel% HMul.hMul let5 let8)
  let let630 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let629)))
  let let631 := (binrel% HAdd.hAdd let573 let629)
  let let632 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let531 let529))
  let let633 := (binrel% GE.ge let632 let22)
  let let634 := (binrel% GE.ge arg1 let572)
  let let635 := (binrel% LE.le fmt1 let139)
  let let636 := (Not let635)
  let let637 := (binrel% GT.gt fmt1 let139)
  let let638 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let364 let530))
  let let639 := (binrel% GE.ge let638 let5)
  let let640 := (binrel% HAdd.hAdd let5 let259)
  let let641 := (binrel% GE.ge fmt1 let640)
  let let642 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let5))
  let let643 := (Eq fmt0 let572)
  let let644 := (binrel% HAdd.hAdd fmt0 let529)
  let let645 := (Eq arg0 let644)
  let let646 := (binrel% HSub.hSub fmt0 distance)
  let let647 := (Not let185)
  let let648 := (Eq let106 let195)
  let let649 := (And let105 let377)
  let let650 := (smtIte let649 let648 let202 Prop)
  let let651 := (Eq let107 let97)
  let let652 := (And let617 let613)
  let let653 := (smtIte let652 let651 let406 Prop)
  let let654 := (Eq let88 let541)
  let let655 := (And let545 let543)
  let let656 := (smtIte let655 let654 let90 Prop)
  let let657 := (Eq let18 let547)
  let let658 := (And let553 let551)
  let let659 := (smtIte let658 let657 let546 Prop)
  let let660 := (Eq let19 let626)
  let let661 := (And let559 let495)
  let let662 := (smtIte let661 let660 let555 Prop)
  let let663 := (And let564 let561)
  let let664 := (smtIte let663 let58 let31 Prop)
  let let665 := (Eq let436 let217)
  let let666 := (And let105 let568)
  let let667 := (smtIte let666 let665 let565 Prop)
  let let668 := (Eq let215 let571)
  let let669 := (And let617 let579)
  let let670 := (smtIte let669 let668 let250 Prop)
  let let671 := (Eq let190 let580)
  let let672 := (And let545 let478)
  let let673 := (smtIte let672 let671 let192 Prop)
  let let674 := (Eq let2 let125)
  let let675 := (And let553 let384)
  let let676 := (smtIte let675 let674 let167 Prop)
  let let677 := (Eq let26 let291)
  let let678 := (And let559 let281)
  let let679 := (smtIte let678 let677 let336 Prop)
  let let680 := (And let564 let583)
  let let681 := (smtIte let680 let33 let59 Prop)
  let let682 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let564 let233) let497) let340) let549) let623) let621) let470) let559) let583) let561) let619) let615) let611) let246) let466) let553) let281) let495) let609) let606) let404) let602) let462) let545) let384) let551) let600) let95) let194) let597) let459) let617) let478) let543) let592) let102) let590) let315) let458) let105) let579) let613) let588) let253) let586) let197) let456)
  let let683 := (Eq arg1 let523)
  let let684 := (binrel% LT.lt fmt1 let275)
  let let685 := (Eq arg0 let646)
  let let686 := (Eq fmt0 let22)
  let let687 := (Eq x let69)
  let let688 := (Eq s let168)
  let let689 := (Eq percent let70)
  let let690 := (Eq adrx5fhi let91)
  let let691 := (Eq adrx5fmedhi let1)
  let let692 := (Eq adrx5fmedlo let8)
  let let693 := (Eq adrx5flo let91)
  let let694 := (Eq fmtx5flength let211)
  let let695 := (Eq distance let116)
  let let696 := (And let695 (And let694 (And let693 (And let692 (And let691 (And let690 (And let689 (And let688 (And let687 (And let686 (And let685 (And let358 (And let684 (And let637 (And let634 (And let577 (And let683 (And let682 (And let681 (And let679 (And let676 (And let673 (And let670 (And let667 (And let664 (And let662 (And let659 (And let656 (And let653 (And let650 (And let144 (And let238 let647))))))))))))))))))))))))))))))))
  let let697 := (And (And (And (And (And (And (And (And (And (And (And (And (And let695 let694) let693) let692) let691) let690) let689) let688) let687) (And (And (And (And (And (And (And let686 let685) let358) let684) let637) let634) let577) let683)) let682) (And (And (And (And (And (And (And (And (And (And (And let681 let679) let676) let673) let670) let667) let664) let662) let659) let656) let653) let650)) (And let144 let238)) let647)
  let let698 := (binrel% HAdd.hAdd arg0 let116)
  let let699 := (Eq let69 let168)
  let let700 := (Eq let699 False)
  let let701 := (Not let699)
  let let702 := (Not let369)
  let let703 := (And let59 let487)
  let let704 := (Not let703)
  let let705 := (Implies let703 False)
  let let706 := (binrel% HAdd.hAdd let56 let334)
  let let707 := (binrel% HMul.hMul let55 let10)
  let let708 := (binrel% HAdd.hAdd let53 let334)
  let let709 := (binrel% HMul.hMul let53 let22)
  let let710 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let5 let14) let410))
  let let711 := (binrel% HAdd.hAdd let208 (binrel% HAdd.hAdd let569 let710))
  let let712 := (binrel% HMul.hMul let55 let15)
  let let713 := (binrel% LT.lt let55 let22)
  let let714 := (binrel% GT.gt let53 let22)
  let let715 := (Eq let70 let100)
  let let716 := (Eq let145 let145)
  let let717 := (Eq let1 let12)
  let let718 := (binrel% HAdd.hAdd let227 let225)
  let let719 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let114 (binrel% HAdd.hAdd let113 let718)))
  let let720 := (binrel% HAdd.hAdd let118 let718)
  let let721 := (Not let145)
  let let722 := (Not let721)
  let let723 := (Eq let722 let145)
  let let724 := (Eq let145 let722)
  let let725 := (And let59 (And let58 let81))
  let let726 := (Not let725)
  let let727 := (Implies let725 False)
  let let728 := (Eq let168 let100)
  let let729 := (And let59 let48)
  let let730 := (Not let729)
  let let731 := (Implies let729 False)
  let let732 := (And let59 (And let31 (And let75 let46)))
  let let733 := (Not let732)
  let let734 := (Implies let732 False)
  let let735 := (binrel% LE.le let56 let285)
  let let736 := (Or let564 (Or let233 (Or let497 (Or let340 (Or let549 (Or let623 (Or let621 (Or let470 (Or let559 (Or let583 (Or let561 (Or let619 (Or let615 (Or let611 (Or let246 (Or let466 (Or let553 (Or let281 (Or let495 (Or let609 (Or let606 (Or let404 (Or let602 (Or let462 (Or let545 (Or let384 (Or let551 (Or let600 (Or let95 (Or let194 (Or let597 (Or let459 (Or let617 (Or let478 (Or let543 (Or let592 (Or let102 (Or let590 (Or let315 (Or let458 (Or let105 (Or let579 (Or let613 (Or let588 (Or let253 (Or let586 (Or let197 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let737 := (Eq let26 let4)
  let let738 := (Eq let22 let74)
  let let739 := (binrel% GE.ge fmt1 let275)
  let let740 := (Not let739)
  let let741 := (Eq let210 let210)
  let let742 := (Eq let210 let360)
  let let743 := (Eq let155 let328)
  let let744 := (Not let199)
  let let745 := (And let127 (And let379 (And let198 (And let515 (And let158 let264)))))
  let let746 := (Not let745)
  let let747 := (Or let332 (Or let121 let163))
  let let748 := (Eq fmt1 let254)
  let let749 := (Eq fmt1 let584)
  let let750 := (Eq fmt1 let154)
  let let751 := (Eq fmt1 let164)
  let let752 := (Eq fmt1 let122)
  let let753 := (Eq fmt1 fmt0)
  let let754 := (Or let753 (Or let752 (Or let751 (Or let750 (Or let749 let748)))))
  let let755 := (And let104 let376)
  let let756 := (smtIte let755 let108 let201 Prop)
  let let757 := (And let616 let612)
  let let758 := (smtIte let757 let418 let405 Prop)
  let let759 := (And let544 let542)
  let let760 := (smtIte let759 let422 let89 Prop)
  let let761 := (And let552 let550)
  let let762 := (smtIte let761 let80 let20 Prop)
  let let763 := (And let558 let494)
  let let764 := (smtIte let763 let221 let24 Prop)
  let let765 := (And let563 let560)
  let let766 := (smtIte let765 let58 let31 Prop)
  let let767 := (And let104 let567)
  let let768 := (smtIte let767 let438 let437 Prop)
  let let769 := (And let616 let578)
  let let770 := (smtIte let769 let442 let249 Prop)
  let let771 := (And let544 let477)
  let let772 := (smtIte let771 let348 let191 Prop)
  let let773 := (And let552 let383)
  let let774 := (smtIte let773 let27 let37 Prop)
  let let775 := (And let558 let280)
  let let776 := (smtIte let775 let75 let29 Prop)
  let let777 := (And let563 let582)
  let let778 := (smtIte let777 let33 let59 Prop)
  let let779 := (Or let563 (Or let232 (Or let496 (Or let339 (Or let548 (Or let622 (Or let620 (Or let470 (Or let558 (Or let582 (Or let560 (Or let618 (Or let614 (Or let610 (Or let245 (Or let466 (Or let552 (Or let280 (Or let494 (Or let608 (Or let605 (Or let403 (Or let601 (Or let462 (Or let544 (Or let383 (Or let550 (Or let599 (Or let94 (Or let193 (Or let596 (Or let459 (Or let616 (Or let477 (Or let542 (Or let591 (Or let101 (Or let589 (Or let314 (Or let458 (Or let104 (Or let578 (Or let612 (Or let587 (Or let252 (Or let585 (Or let196 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let780 := (xx5fcount let624)
  let let781 := (binrel% HMul.hMul let8 let780)
  let let782 := (sx5fcount let624)
  let let783 := (binrel% HMul.hMul let8 let782)
  let let784 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let783 let781))
  let let785 := (Eq arg1 let784)
  let let786 := (Not let533)
  let let787 := (Not let639)
  let let788 := (And let695 (And let694 (And let693 (And let692 (And let691 (And let690 (And let689 (And let688 (And let687 (And let686 (And let643 (And let357 (And let787 (And let366 (And let633 (And let786 (And let785 (And let779 (And let778 (And let776 (And let774 (And let772 (And let770 (And let768 (And let766 (And let764 (And let762 (And let760 (And let758 (And let756 (And let754 (And let747 let746))))))))))))))))))))))))))))))))
  let let789 := (selectx5fformat let296)
  let let790 := (Eq let91 let789)
  let let791 := (selectx5fformat let307)
  let let792 := (Eq let1 let791)
  let let793 := (selectx5fformat let240)
  let let794 := (Eq let8 let793)
  let let795 := (And let481 (And let394 (And let284 (And let794 (And let792 let790)))))
  let let796 := (Not let795)
  let let797 := (Eq let22 let155)
  let let798 := (Eq let22 let119)
  let let799 := (Or let513 (Or let798 let797))
  let let800 := (Eq fmt1 let92)
  let let801 := (Eq fmt1 let353)
  let let802 := (Eq fmt1 let305)
  let let803 := (Eq fmt1 let371)
  let let804 := (Eq fmt1 let297)
  let let805 := (Or let414 (Or let804 (Or let803 (Or let802 (Or let801 let800)))))
  let let806 := (And let397 let386)
  let let807 := (smtIte let806 let108 let201 Prop)
  let let808 := (And let715 let338)
  let let809 := (smtIte let808 let418 let405 Prop)
  let let810 := (And let503 let484)
  let let811 := (smtIte let810 let422 let89 Prop)
  let let812 := (And let510 let389)
  let let813 := (smtIte let812 let80 let20 Prop)
  let let814 := (And let272 let268)
  let let815 := (smtIte let814 let221 let24 Prop)
  let let816 := (And let505 let501)
  let let817 := (smtIte let816 let58 let31 Prop)
  let let818 := (And let397 let509)
  let let819 := (smtIte let818 let438 let437 Prop)
  let let820 := (And let715 let207)
  let let821 := (smtIte let820 let442 let249 Prop)
  let let822 := (And let503 let728)
  let let823 := (smtIte let822 let348 let191 Prop)
  let let824 := (And let510 let536)
  let let825 := (smtIte let824 let27 let37 Prop)
  let let826 := (And let272 let189)
  let let827 := (smtIte let826 let75 let29 Prop)
  let let828 := (And let505 let317)
  let let829 := (smtIte let828 let33 let59 Prop)
  let let830 := (Or let505 (Or let262 (Or let270 (Or let277 (Or let274 (Or let256 (Or let277 (Or let470 (Or let272 (Or let317 (Or let501 (Or let511 (Or let540 (Or let539 (Or let511 (Or let466 (Or let510 (Or let189 (Or let268 (Or let504 (Or let538 (Or let483 (Or let504 (Or let462 (Or let503 (Or let536 (Or let389 (Or let498 (Or let537 (Or let279 (Or let498 (Or let459 (Or let715 (Or let728 (Or let484 (Or let391 (Or let327 (Or let323 (Or let391 (Or let458 (Or let397 (Or let207 (Or let338 (Or let486 (Or let363 (Or let342 (Or let486 let456)))))))))))))))))))))))))))))))))))))))))))))))
  let let831 := (binrel% HAdd.hAdd fmt1 let247)
  let let832 := (binrel% HAdd.hAdd let11 let831)
  let let833 := (xx5fcount let832)
  let let834 := (binrel% HMul.hMul let8 let833)
  let let835 := (sx5fcount let832)
  let let836 := (binrel% HMul.hMul let8 let835)
  let let837 := (binrel% HAdd.hAdd let117 (binrel% HAdd.hAdd let836 let834))
  let let838 := (Eq let118 let837)
  let let839 := (binrel% GE.ge let230 let203)
  let let840 := (Not let839)
  let let841 := (binrel% GE.ge let720 let22)
  let let842 := (binrel% GE.ge let831 let1)
  let let843 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let247 let226))
  let let844 := (binrel% GE.ge let843 let5)
  let let845 := (Not let844)
  let let846 := (binrel% HAdd.hAdd let22 let331)
  let let847 := (binrel% GE.ge let846 let4)
  let let848 := (Not let847)
  let let849 := (Eq let22 let166)
  let let850 := (And let318 (And let302 (And let298 (And let395 (And let382 (And let298 (And let186 (And let169 (And let295 (And let400 (And let849 (And let848 (And let845 (And let842 (And let841 (And let840 (And let838 (And let830 (And let829 (And let827 (And let825 (And let823 (And let821 (And let819 (And let817 (And let815 (And let813 (And let811 (And let809 (And let807 (And let805 (And let799 let796))))))))))))))))))))))))))))))))
  let let851 := (Eq And And)
  let let852 := (Eq Or Or)
  let let853 := (Eq fmt1 fmt1)
  let let854 := (Eq let201 let201)
  let let855 := (Eq let108 let108)
  let let856 := (Eq let405 let405)
  let let857 := (Eq let418 let418)
  let let858 := (Eq let89 let89)
  let let859 := (Eq let422 let422)
  let let860 := (Eq let20 let20)
  let let861 := (Eq let80 let80)
  let let862 := (Eq let24 let24)
  let let863 := (Eq let221 let221)
  let let864 := (Eq let31 let31)
  let let865 := (Eq let58 let58)
  let let866 := (Eq let437 let437)
  let let867 := (Eq let438 let438)
  let let868 := (Eq let249 let249)
  let let869 := (Eq let442 let442)
  let let870 := (Eq let191 let191)
  let let871 := (Eq let348 let348)
  let let872 := (Eq let37 let37)
  let let873 := (Eq let27 let27)
  let let874 := (Eq let29 let29)
  let let875 := (Eq let75 let75)
  let let876 := (Eq let59 let59)
  let let877 := (Eq let33 let33)
  let let878 := (Eq let456 let456)
  let let879 := (Eq let458 let458)
  let let880 := (Eq let459 let459)
  let let881 := (Eq let462 let462)
  let let882 := (Eq let466 let466)
  let let883 := (Eq let470 let470)
  let let884 := (Eq let11 let11)
  let let885 := (Eq let203 let203)
  let let886 := (Eq let5 let5)
  let let887 := (Eq let4 let4)
  let let888 := (Eq arg1 let118)
  let let889 := (And let686 (And let687 (And let688 (And let689 (And let690 (And let691 (And let692 (And let693 (And let694 let695)))))))))
  let let890 := (And let319 let889)
  let let891 := (Eq arg1 arg1)
  let let892 := (Eq arg0 arg0)
  let let893 := (Eq let22 let698)
  let let894 := (Eq arg1 let837)
  let let895 := (Eq let784 let837)
  let let896 := (Eq let781 let834)
  let let897 := (Eq let780 let833)
  let let898 := (Eq let624 let832)
  let let899 := (Eq let364 let247)
  let let900 := (Eq let783 let836)
  let let901 := (Eq let782 let835)
  let let902 := (Not let59)
  let let903 := (Not let451)
  let let904 := (Or let903 let903)
  let let905 := (Not let188)
  let let906 := (Or let905 let903)
  let let907 := (Not let267)
  let let908 := (Or let907 let905)
  let let909 := (Implies let267 let905)
  let let910 := (Not let427)
  let let911 := (Or let905 let910)
  let let912 := (Implies let188 let910)
  let let913 := (Eq let427 False)
  let let914 := (Or let427 let267)
  let let915 := (Not let271)
  let let916 := (Not let75)
  let let917 := (Or let427 let914)
  let let918 := (Not let430)
  let let919 := (Not let449)
  let let920 := (Not let428)
  let let921 := (Not let453)
  let let922 := (Not let434)
  let let923 := (Not let31)
  let let924 := (Or let902 let923)
  let let925 := (Or let902 (Or let923 let924))
  let let926 := (Or let923 let925)
  let let927 := (Or let923 let721)
  let let928 := (Or let499 let721)
  let let929 := (Or let923 let928)
  let let930 := (Eq let22 let14)
  let let931 := (Eq let22 let13)
  let let932 := (And let16 (And let931 let930))
  let let933 := (Implies let703 let932)
  let let934 := (Eq let932 False)
  let let935 := (Or (Not let930) False)
  let let936 := (Not let931)
  let let937 := (Eq let14 let22)
  let let938 := (Not let937)
  let let939 := (Or let938 False)
  let let940 := (binrel% HAdd.hAdd let709 let707)
  let let941 := (binrel% HAdd.hAdd let709 let940)
  let let942 := (binrel% HAdd.hAdd let209 (binrel% HAdd.hAdd let570 let712))
  let let943 := (binrel% LE.le let942 let941)
  let let944 := (binrel% LE.le let712 let707)
  let let945 := (And let713 let16)
  let let946 := (Implies let945 let944)
  let let947 := (Eq let570 let709)
  let let948 := (Eq let13 let22)
  let let949 := (And let714 let948)
  let let950 := (Implies let949 let947)
  let let951 := (Eq let209 let709)
  let let952 := (And let714 let937)
  let let953 := (Implies let952 let951)
  let let954 := (And let480 let59)
  let let955 := (Implies let954 let930)
  let let956 := (Or let902 let930)
  let let957 := (Not let480)
  let let958 := (Or let957 let956)
  let let959 := (Eq let28 let14)
  let let960 := (Eq let12 let22)
  let let961 := (Eq let22 let28)
  let let962 := (Eq let145 let480)
  let let963 := (And let480 let31)
  let let964 := (Implies let963 let931)
  let let965 := (Or let923 let931)
  let let966 := (Or let957 let965)
  let let967 := (Eq let23 let13)
  let let968 := (Eq let22 let23)
  let let969 := (binrel% GE.ge fmt1 let10)
  let let970 := (Not let474)
  let let971 := (Or let970 (Or let145 let969))
  let let972 := (Or let970 (Or let722 let969))
  let let973 := (And let474 let721)
  let let974 := (Implies let973 let969)
  let let975 := (Not let44)
  let let976 := (Or let902 (Or let923 let975))
  let let977 := (Not let24)
  let let978 := (Or let977 let975)
  let let979 := (Or let923 let978)
  let let980 := (Or let902 let979)
  let let981 := (Not let29)
  let let982 := (Or let981 let979)
  let let983 := (Or let499 let975)
  let let984 := (Or let977 let983)
  let let985 := (Or let981 let984)
  let let986 := (Or let923 let985)
  let let987 := (Implies let729 let932)
  let let988 := (And let29 let59)
  let let989 := (And let603 let988)
  let let990 := (Implies let989 let930)
  let let991 := (Or let981 let956)
  let let992 := (Not let603)
  let let993 := (Or let992 let991)
  let let994 := (Eq let26 let14)
  let let995 := (Eq let12 let4)
  let let996 := (Eq let44 let603)
  let let997 := (And let24 let31)
  let let998 := (And let603 let997)
  let let999 := (Implies let998 let931)
  let let1000 := (Or let977 let965)
  let let1001 := (Or let992 let1000)
  let let1002 := (Eq let19 let13)
  let let1003 := (Eq let4 let14)
  let let1004 := (And let16 (And let931 let1003))
  let let1005 := (Implies let732 let1004)
  let let1006 := (Eq let1004 False)
  let let1007 := (Or (Not let1003) False)
  let let1008 := (Eq let14 let4)
  let let1009 := (Not let1008)
  let let1010 := (Or let1009 False)
  let let1011 := (binrel% HAdd.hAdd let562 let940)
  let let1012 := (binrel% LE.le let942 let1011)
  let let1013 := (Eq let209 let562)
  let let1014 := (And let714 let1008)
  let let1015 := (Implies let1014 let1013)
  let let1016 := (Or let977 (Or let499 (Or let975 let1004)))
  let let1017 := (Eq let4 let26)
  let let1018 := (And let603 let1017)
  let let1019 := (Or (Not let1017) let1003)
  let let1020 := (Implies let738 let1017)
  let let1021 := (Or (Not let738) let1017)
  let let1022 := (And let75 let59)
  let let1023 := (Implies let1022 let738)
  let let1024 := (Or let916 (Or let902 let738))
  let let1025 := (Not let221)
  let let1026 := (Eq let4 let13)
  let let1027 := (And let16 (And let1026 let930))
  let let1028 := (Implies let311 let1027)
  let let1029 := (Eq let1027 False)
  let let1030 := (Not let1026)
  let let1031 := (binrel% HAdd.hAdd let562 let707)
  let let1032 := (binrel% HAdd.hAdd let709 let1031)
  let let1033 := (binrel% LE.le let942 let1032)
  let let1034 := (Eq let570 let562)
  let let1035 := (Eq let13 let4)
  let let1036 := (And let714 let1035)
  let let1037 := (Implies let1036 let1034)
  let let1038 := (Or let499 (Or let975 let1027))
  let let1039 := (Eq let4 let19)
  let let1040 := (And let603 let1039)
  let let1041 := (Not let1039)
  let let1042 := (Or let1041 let1026)
  let let1043 := (Implies let347 let1039)
  let let1044 := (Or (Not let347) let1039)
  let let1045 := (And let221 let31)
  let let1046 := (Implies let1045 let347)
  let let1047 := (Or let1025 (Or let923 let347))
  let let1048 := (Not let969)
  let let1049 := (Or let1048 let44)
  let let1050 := (Or let210 (Or let9 let1049))
  let let1051 := (Or let360 (Or let594 let1049))
  let let1052 := (And let359 (And let593 let969))
  let let1053 := (Eq let10 fmt1)
  let let1054 := (And let969 (And let359 let593))
  let let1055 := (Or let902 (Or let981 let923))
  let let1056 := (Or let923 let1025)
  let let1057 := (Or let902 (Or let923 (Or let1025 let977)))
  let let1058 := (And let59 (And let31 let221))
  let let1059 := (And let59 (And let31 let1039))
  let let1060 := (Or let907 let910)
  let let1061 := (Implies let267 let910)
  let let1062 := (Not let20)
  let let1063 := (Or let1062 let593)
  let let1064 := (Not let37)
  let let1065 := (Or let499 let593)
  let let1066 := (Or let1062 let1065)
  let let1067 := (Implies let222 let1027)
  let let1068 := (Or let499 (Or let593 let1027))
  let let1069 := (Or let1062 let1068)
  let let1070 := (And let717 (And let37 let988))
  let let1071 := (Implies let1070 let930)
  let let1072 := (Not let717)
  let let1073 := (Or let1072 (Or let1064 let991))
  let let1074 := (Eq let2 let14)
  let let1075 := (Eq let12 let1)
  let let1076 := (Eq let9 let717)
  let let1077 := (And let717 (And let20 let1039))
  let let1078 := (Eq let18 let13)
  let let1079 := (Or let977 let1063)
  let let1080 := (Or let923 let1079)
  let let1081 := (Or let902 (Or let981 let1080))
  let let1082 := (Or let1064 let1080)
  let let1083 := (Or let981 let1082)
  let let1084 := (Or let977 let1066)
  let let1085 := (Or let1064 let1084)
  let let1086 := (Or let981 let1085)
  let let1087 := (Or let923 let1086)
  let let1088 := (Implies let292 let932)
  let let1089 := (And let717 (And let20 let997))
  let let1090 := (Implies let1089 let931)
  let let1091 := (Or let1072 (Or let1062 let1000))
  let let1092 := (Not let27)
  let let1093 := (Or let981 (Or let1092 let1080))
  let let1094 := (Or let981 (Or let1092 let1084))
  let let1095 := (Or let923 let1094)
  let let1096 := (Implies let151 let1004)
  let let1097 := (Or let977 (Or let1062 (Or let499 (Or let593 let1004))))
  let let1098 := (Eq let4 let2)
  let let1099 := (And let717 let1098)
  let let1100 := (Implies let1099 let1003)
  let let1101 := (Or let1072 (Or (Not let1098) let1003))
  let let1102 := (Implies let87 let1098)
  let let1103 := (Or (Not let87) let1098)
  let let1104 := (And let27 let988)
  let let1105 := (Implies let1104 let87)
  let let1106 := (Or let1092 (Or let981 (Or let902 let87)))
  let let1107 := (Eq let6 let26)
  let let1108 := (Or let977 (Or let593 let920))
  let let1109 := (Or let920 let920)
  let let1110 := (Or let977 (Or let593 let1109))
  let let1111 := (Not let388)
  let let1112 := (Not let448)
  let let1113 := (Or let1111 let1112)
  let let1114 := (Implies let388 let1112)
  let let1115 := (Not let80)
  let let1116 := (Or let977 (Or let1115 let593))
  let let1117 := (Or let981 (Or let1064 (Or let923 let1116)))
  let let1118 := (Or let981 (Or let1064 (Or let977 (Or let1115 let1065))))
  let let1119 := (Or let923 let1118)
  let let1120 := (Implies let83 let1027)
  let let1121 := (Eq let4 let18)
  let let1122 := (And let717 let1121)
  let let1123 := (Implies let1122 let1026)
  let let1124 := (Or let1072 (Or (Not let1121) let1026))
  let let1125 := (Implies let310 let1121)
  let let1126 := (Or (Not let310) let1121)
  let let1127 := (And let80 let997)
  let let1128 := (Implies let1127 let310)
  let let1129 := (Or let1115 (Or let977 (Or let923 let310)))
  let let1130 := (Eq let79 let19)
  let let1131 := (Implies let76 let1004)
  let let1132 := (Or let1064 let1097)
  let let1133 := (And let717 (And let37 let1017))
  let let1134 := (Not let432)
  let let1135 := (Not let433)
  let let1136 := (Or let1135 (Or let915 let1134))
  let let1137 := (And let433 let271)
  let let1138 := (Implies let1137 let1134)
  let let1139 := (Eq let432 False)
  let let1140 := (Or let902 let981)
  let let1141 := (Or let922 let922)
  let let1142 := (Not let58)
  let let1143 := (Or let902 (Or let981 (Or let1142 let977)))
  let let1144 := (Implies let66 let1027)
  let let1145 := (And let24 let58)
  let let1146 := (And let603 let1145)
  let let1147 := (Or let1142 let1026)
  let let1148 := (Or let977 let1147)
  let let1149 := (Eq let4 let23)
  let let1150 := (Implies let147 let1027)
  let let1151 := (And let480 let58)
  let let1152 := (Or let1142 let1079)
  let let1153 := (Or let902 (Or let981 let1152))
  let let1154 := (Implies let63 let1027)
  let let1155 := (And let717 (And let20 let1145))
  let let1156 := (Implies let1155 let1026)
  let let1157 := (Or let1072 (Or let1062 let1148))
  let let1158 := (And let16 (And let1026 let1003))
  let let1159 := (Implies let60 let1158)
  let let1160 := (Eq let1158 False)
  let let1161 := (binrel% HAdd.hAdd let562 let1031)
  let let1162 := (binrel% LE.le let942 let1161)
  let let1163 := (Or let499 (Or let593 let1158))
  let let1164 := (Eq let1 let13)
  let let1165 := (And let16 (And let1164 let930))
  let let1166 := (Implies let725 let1165)
  let let1167 := (binrel% HAdd.hAdd let709 (binrel% HAdd.hAdd let54 let707))
  let let1168 := (binrel% LE.le let942 let1167)
  let let1169 := (Eq let570 let54)
  let let1170 := (Eq let13 let1)
  let let1171 := (And let714 let1170)
  let let1172 := (Eq let1 let18)
  let let1173 := (And let717 let1172)
  let let1174 := (And let80 let1145)
  let let1175 := (Not let316)
  let let1176 := (Or let1175 let1134)
  let let1177 := (Implies let316 let1134)
  let let1178 := (Or let1175 let915)
  let let1179 := (Implies let316 let915)
  let let1180 := (Not let33)
  let let1181 := (Implies let488 let1004)
  let let1182 := (And let480 let33)
  let let1183 := (Or let1180 let1003)
  let let1184 := (Eq let4 let28)
  let let1185 := (Implies let49 let1004)
  let let1186 := (And let29 let33)
  let let1187 := (And let603 let1186)
  let let1188 := (Or let981 let1183)
  let let1189 := (Implies let526 let1158)
  let let1190 := (And let717 (And let37 let1186))
  let let1191 := (Implies let1190 let1003)
  let let1192 := (Or let1072 (Or let1064 let1188))
  let let1193 := (Implies let41 let1004)
  let let1194 := (Eq let1 let14)
  let let1195 := (And let16 (And let931 let1194))
  let let1196 := (Implies let34 let1195)
  let let1197 := (Eq let14 let1)
  let let1198 := (Not let1197)
  let let1199 := (binrel% HAdd.hAdd let54 let940)
  let let1200 := (binrel% LE.le let942 let1199)
  let let1201 := (Eq let209 let54)
  let let1202 := (And let714 let1197)
  let let1203 := (Eq let1 let2)
  let let1204 := (And let717 let1203)
  let let1205 := (And let27 let1186)
fun lean_r0 : (Eq let7 let3) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let36 let35) => -- THEORY_REWRITE_BOOL
fun lean_r2 : (Eq let43 let42) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let51 let50) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq let54 let52) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let57 False) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let62 let61) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let65 let64) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let68 let67) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let73 let72) => -- THEORY_REWRITE_BOOL
fun lean_r10 : let73 => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let78 let77) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let85 let84) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let87 let86) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let90 let89) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let92 let91) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let95 let94) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let97 let96) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let99 let98) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let102 let101) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let105 let104) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let110 let108) => -- THEORY_REWRITE_ARITH
fun lean_r22 : let112 => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let119 let119) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let123 let121) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let125 let124) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let128 let127) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let130 let129) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let144 let143) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let149 let148) => -- THEORY_REWRITE_BOOL
fun lean_r30 : (Eq let150 True) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let153 let152) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let135 let154) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let155 let155) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let159 let158) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let161 let160) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let165 let163) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let166 let22) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let167 let37) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let169 True) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let170 let27) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let171 True) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let185 let184) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let186 True) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let189 let188) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let192 let191) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let194 let193) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let195 let109) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let197 let196) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let181 let198) => -- THEORY_REWRITE_ARITH
fun lean_r50 : let200 => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let202 let201) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let205 let204) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let207 let206) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let209 let208) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let214 let210) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let217 let216) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let218 fmt1) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let219 let16) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let224 let223) => -- THEORY_REWRITE_BOOL
fun lean_r60 : (Eq let230 let229) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let233 let232) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let238 let237) => -- THEORY_REWRITE_BOOL
fun lean_r63 : let241 => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let137 let164) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let243 let242) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let246 let245) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let247 let22) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let177 let248) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let250 let249) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let251 let12) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let253 let252) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let131 let254) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let256 let255) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let260 let258) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let262 let261) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let265 let264) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let266 let213) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let268 let267) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let270 let269) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let272 let271) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let274 let273) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let275 let260) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let277 let276) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let279 let278) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let281 let280) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let284 let283) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let288 let285) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let139 let122) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let240 let240) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let289 True) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let291 let290) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let294 let293) => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let295 True) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let296 let296) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let297 let4) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let298 True) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let301 let300) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let302 True) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let304 False) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let305 let10) => -- THEORY_REWRITE_ARITH
fun lean_r101 : let308 => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let310 let309) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let313 let312) => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq let315 let314) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let317 let316) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let318 True) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let321 let319) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let323 let322) => -- THEORY_REWRITE_ARITH
fun lean_r109 : let325 => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let327 let326) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let329 False) => -- THEORY_REWRITE_ARITH
fun lean_r112 : let330 => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let331 let204) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let333 let332) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let335 let55) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let336 let29) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let338 let337) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let340 let339) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let342 let341) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let345 let344) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let347 let346) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let350 let348) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let307 let307) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let352 let351) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let353 let8) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let358 let357) => -- THEORY_REWRITE_ARITH
fun lean_r127 : let361 => -- THEORY_REWRITE_BOOL
fun lean_r128 : (Eq let363 let362) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let368 let366) => -- THEORY_REWRITE_BOOL
fun lean_r130 : let370 => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let227 let116) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let371 let1) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let374 let373) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let377 let376) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let380 let379) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let381 let55) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let382 True) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let384 let383) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let386 let385) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let387 let55) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let389 let388) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let225 let117) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let391 let390) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let392 let359) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let394 let393) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let395 True) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let174 let156) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let397 let396) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let399 let80) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let400 True) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let141 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r152 : let402 => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let404 let403) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let406 let405) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let476 let475) => -- THEORY_REWRITE_BOOL
fun lean_r156 : (Eq let478 let477) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let479 let367) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let480 let145) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let226 let212) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let481 let407) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let482 let411) => -- THEORY_REWRITE_BOOL
fun lean_r162 : (Eq let483 let464) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let484 let423) => -- THEORY_REWRITE_ARITH
fun lean_r164 : (Eq let485 False) => -- THEORY_REWRITE_ARITH
fun lean_r165 : (Eq let486 let457) => -- THEORY_REWRITE_ARITH
fun lean_r166 : (Eq let490 let489) => -- THEORY_REWRITE_BOOL
fun lean_r167 : (Eq let492 let422) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let493 let118) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let495 let494) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let497 let496) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let498 let460) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let500 let16) => -- THEORY_REWRITE_BOOL
fun lean_r173 : (Eq let501 let432) => -- THEORY_REWRITE_ARITH
fun lean_r174 : (Eq let502 let11) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let503 let424) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let504 let463) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq let505 let433) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let507 let506) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let508 let499) => -- THEORY_REWRITE_ARITH
fun lean_r180 : (Eq let509 let439) => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq let510 let427) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq let511 let467) => -- THEORY_REWRITE_ARITH
fun lean_r183 : (Eq let112 let512) => -- THEORY_REWRITE_BOOL
fun lean_r184 : (Eq let513 let411) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq let516 let515) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let523 let522) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let525 let442) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq let528 let527) => -- THEORY_REWRITE_BOOL
fun lean_r189 : (Eq let535 let533) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq let536 let448) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let537 let461) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let538 let465) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq let539 let468) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let540 let469) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq let541 let491) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let543 let542) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq let545 let544) => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq let546 let20) => -- THEORY_REWRITE_ARITH
fun lean_r199 : (Eq let547 let398) => -- THEORY_REWRITE_ARITH
fun lean_r200 : (Eq let549 let548) => -- THEORY_REWRITE_ARITH
fun lean_r201 : (Eq let551 let550) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let553 let552) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq let554 let12) => -- THEORY_REWRITE_ARITH
fun lean_r204 : (Eq let555 let24) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq let557 let221) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq let559 let558) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let561 let560) => -- THEORY_REWRITE_ARITH
fun lean_r208 : (Eq let562 let53) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let564 let563) => -- THEORY_REWRITE_ARITH
fun lean_r210 : (Eq let565 let437) => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let566 let438) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq let568 let567) => -- THEORY_REWRITE_ARITH
fun lean_r213 : (Eq let570 let569) => -- THEORY_REWRITE_ARITH
fun lean_r214 : (Eq let571 let524) => -- THEORY_REWRITE_ARITH
fun lean_r215 : (Eq let577 let576) => -- THEORY_REWRITE_ARITH
fun lean_r216 : (Eq let579 let578) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq let580 let349) => -- THEORY_REWRITE_ARITH
fun lean_r218 : (Eq let581 let75) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq let583 let582) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let133 let584) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq let586 let585) => -- THEORY_REWRITE_ARITH
fun lean_r222 : (Eq let588 let587) => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let590 let589) => -- THEORY_REWRITE_ARITH
fun lean_r224 : (Eq let592 let591) => -- THEORY_REWRITE_ARITH
fun lean_r225 : let595 => -- THEORY_REWRITE_BOOL
fun lean_r226 : (Eq let597 let596) => -- THEORY_REWRITE_ARITH
fun lean_r227 : (Eq let595 let598) => -- THEORY_REWRITE_BOOL
fun lean_r228 : (Eq let600 let599) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq let602 let601) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq let603 let44) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq let402 let604) => -- THEORY_REWRITE_BOOL
fun lean_r232 : (Eq let606 let605) => -- THEORY_REWRITE_ARITH
fun lean_r233 : (Eq let607 let418) => -- THEORY_REWRITE_ARITH
fun lean_r234 : (Eq let609 let608) => -- THEORY_REWRITE_ARITH
fun lean_r235 : (Eq let611 let610) => -- THEORY_REWRITE_ARITH
fun lean_r236 : (Eq let613 let612) => -- THEORY_REWRITE_ARITH
fun lean_r237 : (Eq let615 let614) => -- THEORY_REWRITE_ARITH
fun lean_r238 : (Eq let617 let616) => -- THEORY_REWRITE_ARITH
fun lean_r239 : (Eq let619 let618) => -- THEORY_REWRITE_ARITH
fun lean_r240 : (Eq let621 let620) => -- THEORY_REWRITE_ARITH
fun lean_r241 : (Eq let623 let622) => -- THEORY_REWRITE_ARITH
fun lean_r242 : (Eq let625 let624) => -- THEORY_REWRITE_ARITH
fun lean_r243 : (Eq let626 let556) => -- THEORY_REWRITE_ARITH
fun lean_r244 : (Eq let517 let627) => -- THEORY_REWRITE_ARITH
fun lean_r245 : (Eq let628 let534) => -- THEORY_REWRITE_ARITH
fun lean_r246 : (Eq let631 let630) => -- THEORY_REWRITE_ARITH
fun lean_r247 : (Eq let574 let631) => -- THEORY_REWRITE_ARITH
fun lean_r248 : (Eq let634 let633) => -- THEORY_REWRITE_ARITH
fun lean_r249 : (Eq let637 let636) => -- THEORY_REWRITE_ARITH
fun lean_r250 : (Eq let641 let639) => -- THEORY_REWRITE_ARITH
fun lean_r251 : (Eq let642 let640) => -- THEORY_REWRITE_ARITH
fun lean_r252 : (Eq let257 let5) => -- THEORY_REWRITE_ARITH
fun lean_r253 : (Eq let645 let643) => -- THEORY_REWRITE_ARITH
fun lean_r254 : (Eq let646 let644) => -- THEORY_REWRITE_ARITH
fun lean_r255 : (Eq let697 let696) => -- THEORY_REWRITE_BOOL
fun lean_r256 : (Eq let698 let320) => -- THEORY_REWRITE_ARITH
fun lean_r257 : let700 => -- THEORY_REWRITE_ARITH
fun lean_r258 : (Eq let700 let701) => -- THEORY_REWRITE_BOOL
fun lean_r259 : (Eq let629 let203) => -- THEORY_REWRITE_ARITH
fun lean_r260 : (Eq let370 let702) => -- THEORY_REWRITE_BOOL
fun lean_r261 : (Eq let705 let704) => -- THEORY_REWRITE_BOOL
fun lean_r262 : (Eq let706 let286) => -- THEORY_REWRITE_ARITH
fun lean_r263 : (Eq let707 let286) => -- THEORY_REWRITE_ARITH
fun lean_r264 : (Eq let708 let285) => -- THEORY_REWRITE_ARITH
fun lean_r265 : (Eq let709 let56) => -- THEORY_REWRITE_ARITH
fun lean_r266 : (Eq let711 let56) => -- THEORY_REWRITE_ARITH
fun lean_r267 : (Eq let712 let710) => -- THEORY_REWRITE_ARITH
fun lean_r268 : (Eq let713 True) => -- EVALUATE
fun lean_r269 : (Eq let714 True) => -- EVALUATE
fun lean_r270 : (Eq let715 let419) => -- THEORY_REWRITE_ARITH
fun lean_r271 : (Eq let716 True) => -- THEORY_REWRITE_BOOL
fun lean_r272 : (Eq let717 let9) => -- THEORY_REWRITE_ARITH
fun lean_r273 : (Eq let720 let719) => -- THEORY_REWRITE_ARITH
fun lean_r274 : let723 => -- THEORY_REWRITE_BOOL
fun lean_r275 : (Eq let723 let724) => -- THEORY_REWRITE_BOOL
fun lean_r276 : (Eq let727 let726) => -- THEORY_REWRITE_BOOL
fun lean_r277 : (Eq let728 let445) => -- THEORY_REWRITE_ARITH
fun lean_r278 : (Eq let731 let730) => -- THEORY_REWRITE_BOOL
fun lean_r279 : (Eq let734 let733) => -- THEORY_REWRITE_BOOL
fun lean_r280 : (Eq let735 False) => -- THEORY_REWRITE_ARITH
fun lean_r281 : (Eq let682 let736) => -- THEORY_REWRITE_BOOL
fun lean_r282 : (Eq let738 let737) => -- THEORY_REWRITE_ARITH
fun lean_r283 : (Eq let684 let740) => -- THEORY_REWRITE_ARITH
fun lean_r284 : (Eq let741 True) => -- THEORY_REWRITE_BOOL
fun lean_r285 : (Eq let361 let742) => -- THEORY_REWRITE_BOOL
fun lean_r286 : let743 => -- THEORY_REWRITE_ARITH
fun lean_r287 : (Eq let200 let744) => -- THEORY_REWRITE_BOOL
fun lean_a288 : let697 => by
have lean_s0 : (Or let1180 (Or let923 (Or let981 (Or let1092 (Or let977 (Or let1062 (Or let499 (Or let593 let1195)))))))) :=
  (scope (fun lean_a289 : let33 =>
    (scope (fun lean_a290 : let31 =>
      (scope (fun lean_a291 : let29 =>
        (scope (fun lean_a292 : let27 =>
          (scope (fun lean_a293 : let24 =>
            (scope (fun lean_a294 : let20 =>
              (scope (fun lean_a295 : let16 =>
                (scope (fun lean_a296 : let9 =>
                  have lean_s0 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1 : let717 := by timed eqResolve lean_a296 lean_s0
                  let lean_s2 := by timed And.intro lean_a293 lean_a290
                  let lean_s3 := by timed And.intro lean_a294 lean_s2
                  have lean_s4 : let1089 := by timed And.intro lean_s1 lean_s3
                  have lean_s5 : let1091 :=
                    (scope (fun lean_a297 : let717 =>
                      (scope (fun lean_a298 : let20 =>
                        (scope (fun lean_a299 : let24 =>
                          (scope (fun lean_a300 : let31 =>
                            have lean_s5 : let968 := by timed Eq.symm lean_a300
                            have lean_s6 : let555 := by timed Eq.symm lean_a299
                            have lean_s7 : let24 := by timed Eq.symm lean_s6
                            let lean_s8 := by timed Eq.trans lean_s5 lean_s7
                            have lean_s9 : let546 := by timed Eq.symm lean_a298
                            have lean_s10 : let20 := by timed Eq.symm lean_s9
                            let lean_s11 := by timed Eq.trans lean_s8 lean_s10
                            have lean_s12 : let1075 := by timed Eq.symm lean_a297
                            have lean_s13 : let717 := by timed Eq.symm lean_s12
                            have lean_s14 : let1078 := by timed flipCongrArg lean_s13 [xx5fcount]
                            have lean_s15 : let931 := by timed Eq.trans lean_s11 lean_s14
                            show let931 from lean_s15
                    ))))))))
                  have lean_s6 : let1090 := by liftOrNToImp lean_s5, 4
                  have lean_s7 : let931 := by timed modusPonens lean_s4 lean_s6
                  let lean_s8 := by timed And.intro lean_a291 lean_a289
                  have lean_s9 : let1205 := by timed And.intro lean_a292 lean_s8
                  have lean_s10 : (Or let1092 (Or let981 (Or let1180 let7))) :=
                    (scope (fun lean_a298 : let27 =>
                      (scope (fun lean_a299 : let29 =>
                        (scope (fun lean_a300 : let33 =>
                          have lean_s10 : let1184 := by timed Eq.symm lean_a300
                          have lean_s11 : let336 := by timed Eq.symm lean_a299
                          have lean_s12 : let29 := by timed Eq.symm lean_s11
                          let lean_s13 := by timed Eq.trans lean_s10 lean_s12
                          have lean_s14 : let1107 := by timed Eq.symm lean_a298
                          have lean_s15 : let27 := by timed Eq.symm lean_s14
                          have lean_s16 : let7 := by timed Eq.trans lean_s13 lean_s15
                          show let7 from lean_s16
                    ))))))
                  have lean_s11 : (Implies let1205 let7) := by liftOrNToImp lean_s10, 3
                  have lean_s12 : let7 := by timed modusPonens lean_s9 lean_s11
                  have lean_s13 : (Or (Not let7) let1203) :=
                    (scope (fun lean_a298 : let7 =>
                      have lean_s13 : let3 := by timed eqResolve lean_a298 lean_r0
                      have lean_s14 : let1203 := by timed Eq.symm lean_s13
                      show let1203 from lean_s14
                    ))
                  have lean_s14 : (Implies let7 let1203) := by liftOrNToImp lean_s13, 1
                  have lean_s15 : let1203 := by timed modusPonens lean_s12 lean_s14
                  have lean_s16 : let1204 := by timed And.intro lean_s1 lean_s15
                  have lean_s17 : (Or let1072 (Or (Not let1203) let1194)) :=
                    (scope (fun lean_a299 : let717 =>
                      (scope (fun lean_a300 : let1203 =>
                        have lean_s17 : let3 := by timed Eq.symm lean_a300
                        have lean_s18 : let1203 := by timed Eq.symm lean_s17
                        have lean_s19 : let1075 := by timed Eq.symm lean_a299
                        have lean_s20 : let717 := by timed Eq.symm lean_s19
                        have lean_s21 : let1074 := by timed flipCongrArg lean_s20 [sx5fcount]
                        have lean_s22 : let1194 := by timed Eq.trans lean_s18 lean_s21
                        show let1194 from lean_s22
                    ))))
                  have lean_s18 : (Implies let1204 let1194) := by liftOrNToImp lean_s17, 2
                  have lean_s19 : let1194 := by timed modusPonens lean_s16 lean_s18
                  let lean_s20 := by timed And.intro lean_s7 lean_s19
                  have lean_s21 : let1195 := by timed And.intro lean_a295 lean_s20
                  show let1195 from lean_s21
  ))))))))))))))))
have lean_s1 : let1196 := by liftOrNToImp lean_s0, 8
have lean_s2 : (Eq let34 let34) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or let499 (Or let936 (Or (Not let1194) False))) :=
  (scope (fun lean_a300 : let16 =>
    (scope (fun lean_a301 : let931 =>
      (scope (fun lean_a302 : let1194 =>
        have lean_s4 : let1197 := by timed Eq.symm lean_a302
        have lean_s5 : (Or let1198 False) :=
          (scope (fun lean_a302 : let1197 =>
            have lean_s5 : let714 := by timed trueElim lean_r269
            have lean_s6 : let1202 := by timed And.intro lean_s5 lean_a302
            have lean_s7 : (Implies let1202 let1201) := by arithMulPos [let14, let1, let53], 4
            have lean_s8 : let1201 := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : let948 := by timed Eq.symm lean_a301
            have lean_s10 : let949 := by timed And.intro lean_s5 lean_s9
            have lean_s11 : let950 := by arithMulPos [let13, let22, let53], 4
            have lean_s12 : let947 := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : let713 := by timed trueElim lean_r268
            have lean_s14 : let945 := by timed And.intro lean_s13 lean_a300
            have lean_s15 : let946 := by arithMulNeg [let15, let10, let55], 3
            have lean_s16 : let944 := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : let1200 := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r213 lean_r267
            have lean_s19 : (Eq let942 let711) := by timed congrHAdd lean_r54 lean_s18
            have lean_s20 : (Eq let942 let56) := by timed Eq.trans lean_s19 lean_r266
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r265 lean_r263
            have lean_s23 : (Eq let1199 let335) := by timed congrHAdd lean_r4 lean_s22
            have lean_s24 : (Eq let1199 let55) := by timed Eq.trans lean_s23 lean_r115
            have lean_s25 : (Eq let1200 let57) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let1200 False) := by timed Eq.trans lean_s25 lean_r5
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : let1198 := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not let1195) := by liftOrNToNeg lean_s4
have lean_s6 : (Eq let1195 False) := by timed falseIntro lean_s5
have lean_s7 : (Eq let1196 let36) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let1196 let35) := by timed Eq.trans lean_s7 lean_r1
have lean_s9 : let35 := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or let1180 let1095) := by timed flipNotAnd lean_s9 [let33, let31, let29, let27, let24, let20, let16, let9]
have lean_s11 : (Or let499 (Or let1180 let1093)) := by permutateOr lean_s10, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
have lean_s12 : let851 := by timed rfl
have lean_s13 : (Eq let695 let695) := by timed rfl
let lean_s14 := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq let694 let694) := by timed rfl
let lean_s16 := by timed congr lean_s12 lean_s15
have lean_s17 : (Eq let693 let693) := by timed rfl
let lean_s18 := by timed congr lean_s12 lean_s17
have lean_s19 : (Eq let692 let692) := by timed rfl
let lean_s20 := by timed congr lean_s12 lean_s19
have lean_s21 : (Eq let691 let691) := by timed rfl
let lean_s22 := by timed congr lean_s12 lean_s21
have lean_s23 : (Eq let690 let690) := by timed rfl
let lean_s24 := by timed congr lean_s12 lean_s23
have lean_s25 : (Eq let689 let689) := by timed rfl
let lean_s26 := by timed congr lean_s12 lean_s25
have lean_s27 : (Eq let688 let688) := by timed rfl
let lean_s28 := by timed congr lean_s12 lean_s27
have lean_s29 : (Eq let687 let687) := by timed rfl
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq let686 let686) := by timed rfl
let lean_s32 := by timed congr lean_s12 lean_s31
have lean_s33 : let892 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let685 let645) := by timed congr lean_s34 lean_r254
have lean_s36 : (Eq let685 let643) := by timed Eq.trans lean_s35 lean_r253
let lean_s37 := by timed congr lean_s12 lean_s36
let lean_s38 := by timed congr lean_s12 lean_r126
have lean_s39 : let853 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [GE.ge]
have lean_s41 : (Eq fmt0 fmt0) := by timed rfl
have lean_s42 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s43 := by timed congrHAdd lean_s42 lean_r252
have lean_s44 : (Eq let258 let642) := by timed congrHAdd lean_s41 lean_s43
have lean_s45 : (Eq let258 let640) := by timed Eq.trans lean_s44 lean_r251
have lean_s46 : (Eq let260 let640) := by timed Eq.trans lean_r74 lean_s45
have lean_s47 : (Eq let275 let640) := by timed Eq.trans lean_r82 lean_s46
have lean_s48 : (Eq let739 let641) := by timed congr lean_s40 lean_s47
have lean_s49 : (Eq let739 let639) := by timed Eq.trans lean_s48 lean_r250
have lean_s50 : (Eq let740 let787) := by timed flipCongrArg lean_s49 [Not]
have lean_s51 : (Eq let684 let787) := by timed Eq.trans lean_r283 lean_s50
let lean_s52 := by timed congr lean_s12 lean_s51
let lean_s53 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s54 : (Eq let635 let479) := by timed congr lean_s53 lean_r88
have lean_s55 : (Eq let635 let367) := by timed Eq.trans lean_s54 lean_r157
have lean_s56 : (Eq let636 let368) := by timed flipCongrArg lean_s55 [Not]
have lean_s57 : (Eq let636 let366) := by timed Eq.trans lean_s56 lean_r129
have lean_s58 : (Eq let637 let366) := by timed Eq.trans lean_r249 lean_s57
let lean_s59 := by timed congr lean_s12 lean_s58
let lean_s60 := by timed congr lean_s12 lean_r248
have lean_s61 : let891 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq distance distance) := by timed rfl
let lean_s64 := by timed congrHAdd lean_s42 lean_r259
let lean_s65 := by timed congrHAdd lean_s63 lean_s64
have lean_s66 : (Eq let630 let628) := by timed congrHAdd lean_s33 lean_s65
have lean_s67 : (Eq let630 let534) := by timed Eq.trans lean_s66 lean_r245
have lean_s68 : (Eq let631 let534) := by timed Eq.trans lean_r246 lean_s67
have lean_s69 : (Eq let574 let534) := by timed Eq.trans lean_r247 lean_s68
have lean_s70 : (Eq let575 let535) := by timed congr lean_s62 lean_s69
have lean_s71 : (Eq let575 let533) := by timed Eq.trans lean_s70 lean_r189
have lean_s72 : (Eq let576 let786) := by timed flipCongrArg lean_s71 [Not]
have lean_s73 : (Eq let577 let786) := by timed Eq.trans lean_r215 lean_s72
let lean_s74 := by timed congr lean_s12 lean_s73
let lean_s75 := by timed flipCongrArg lean_s61 [Eq]
have lean_s76 : let395 := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [HMul.hMul]
let lean_s78 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s79 : (Eq let506 let554) := by timed congr lean_s78 lean_r174
have lean_s80 : (Eq let506 let12) := by timed Eq.trans lean_s79 lean_r203
have lean_s81 : (Eq let507 let12) := by timed Eq.trans lean_r178 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let364 let364) := by timed rfl
have lean_s84 : (Eq let627 let625) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let627 let624) := by timed Eq.trans lean_s84 lean_r242
have lean_s86 : (Eq let517 let624) := by timed Eq.trans lean_r244 lean_s85
have lean_s87 : (Eq let520 let782) := by timed flipCongrArg lean_s86 [sx5fcount]
have lean_s88 : (Eq let521 let783) := by timed congr lean_s77 lean_s87
let lean_s89 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s90 : (Eq let518 let780) := by timed flipCongrArg lean_s86 [xx5fcount]
have lean_s91 : (Eq let519 let781) := by timed congr lean_s89 lean_s90
let lean_s92 := by timed congrHAdd lean_s88 lean_s91
have lean_s93 : (Eq let522 let784) := by timed congrHAdd lean_s33 lean_s92
have lean_s94 : (Eq let523 let784) := by timed Eq.trans lean_r186 lean_s93
have lean_s95 : (Eq let683 let785) := by timed congr lean_s75 lean_s94
let lean_s96 := by timed congr lean_s12 lean_s95
have lean_s97 : let852 := by timed rfl
let lean_s98 := by timed congr lean_s97 lean_r209
let lean_s99 := by timed congr lean_s97 lean_r61
let lean_s100 := by timed congr lean_s97 lean_r170
let lean_s101 := by timed congr lean_s97 lean_r118
let lean_s102 := by timed congr lean_s97 lean_r200
let lean_s103 := by timed congr lean_s97 lean_r241
let lean_s104 := by timed congr lean_s97 lean_r240
have lean_s105 : let883 := by timed rfl
let lean_s106 := by timed congr lean_s97 lean_s105
let lean_s107 := by timed congr lean_s97 lean_r206
let lean_s108 := by timed congr lean_s97 lean_r219
let lean_s109 := by timed congr lean_s97 lean_r207
let lean_s110 := by timed congr lean_s97 lean_r239
let lean_s111 := by timed congr lean_s97 lean_r237
let lean_s112 := by timed congr lean_s97 lean_r235
let lean_s113 := by timed congr lean_s97 lean_r66
have lean_s114 : let882 := by timed rfl
let lean_s115 := by timed congr lean_s97 lean_s114
let lean_s116 := by timed congr lean_s97 lean_r202
let lean_s117 := by timed congr lean_s97 lean_r85
let lean_s118 := by timed congr lean_s97 lean_r169
let lean_s119 := by timed congr lean_s97 lean_r234
let lean_s120 := by timed congr lean_s97 lean_r232
let lean_s121 := by timed congr lean_s97 lean_r153
let lean_s122 := by timed congr lean_s97 lean_r229
have lean_s123 : let881 := by timed rfl
let lean_s124 := by timed congr lean_s97 lean_s123
let lean_s125 := by timed congr lean_s97 lean_r197
let lean_s126 := by timed congr lean_s97 lean_r138
let lean_s127 := by timed congr lean_s97 lean_r201
let lean_s128 := by timed congr lean_s97 lean_r228
let lean_s129 := by timed congr lean_s97 lean_r16
let lean_s130 := by timed congr lean_s97 lean_r46
let lean_s131 := by timed congr lean_s97 lean_r226
have lean_s132 : let880 := by timed rfl
let lean_s133 := by timed congr lean_s97 lean_s132
let lean_s134 := by timed congr lean_s97 lean_r238
let lean_s135 := by timed congr lean_s97 lean_r156
let lean_s136 := by timed congr lean_s97 lean_r196
let lean_s137 := by timed congr lean_s97 lean_r224
let lean_s138 := by timed congr lean_s97 lean_r19
let lean_s139 := by timed congr lean_s97 lean_r223
let lean_s140 := by timed congr lean_s97 lean_r104
have lean_s141 : let879 := by timed rfl
let lean_s142 := by timed congr lean_s97 lean_s141
let lean_s143 := by timed congr lean_s97 lean_r20
let lean_s144 := by timed congr lean_s97 lean_r216
let lean_s145 := by timed congr lean_s97 lean_r236
let lean_s146 := by timed congr lean_s97 lean_r222
let lean_s147 := by timed congr lean_s97 lean_r71
let lean_s148 := by timed congr lean_s97 lean_r221
let lean_s149 := by timed congr lean_s97 lean_r48
have lean_s150 : let878 := by timed rfl
let lean_s151 := by timed congr lean_s149 lean_s150
let lean_s152 := by timed congr lean_s148 lean_s151
let lean_s153 := by timed congr lean_s147 lean_s152
let lean_s154 := by timed congr lean_s146 lean_s153
let lean_s155 := by timed congr lean_s145 lean_s154
let lean_s156 := by timed congr lean_s144 lean_s155
let lean_s157 := by timed congr lean_s143 lean_s156
let lean_s158 := by timed congr lean_s142 lean_s157
let lean_s159 := by timed congr lean_s140 lean_s158
let lean_s160 := by timed congr lean_s139 lean_s159
let lean_s161 := by timed congr lean_s138 lean_s160
let lean_s162 := by timed congr lean_s137 lean_s161
let lean_s163 := by timed congr lean_s136 lean_s162
let lean_s164 := by timed congr lean_s135 lean_s163
let lean_s165 := by timed congr lean_s134 lean_s164
let lean_s166 := by timed congr lean_s133 lean_s165
let lean_s167 := by timed congr lean_s131 lean_s166
let lean_s168 := by timed congr lean_s130 lean_s167
let lean_s169 := by timed congr lean_s129 lean_s168
let lean_s170 := by timed congr lean_s128 lean_s169
let lean_s171 := by timed congr lean_s127 lean_s170
let lean_s172 := by timed congr lean_s126 lean_s171
let lean_s173 := by timed congr lean_s125 lean_s172
let lean_s174 := by timed congr lean_s124 lean_s173
let lean_s175 := by timed congr lean_s122 lean_s174
let lean_s176 := by timed congr lean_s121 lean_s175
let lean_s177 := by timed congr lean_s120 lean_s176
let lean_s178 := by timed congr lean_s119 lean_s177
let lean_s179 := by timed congr lean_s118 lean_s178
let lean_s180 := by timed congr lean_s117 lean_s179
let lean_s181 := by timed congr lean_s116 lean_s180
let lean_s182 := by timed congr lean_s115 lean_s181
let lean_s183 := by timed congr lean_s113 lean_s182
let lean_s184 := by timed congr lean_s112 lean_s183
let lean_s185 := by timed congr lean_s111 lean_s184
let lean_s186 := by timed congr lean_s110 lean_s185
let lean_s187 := by timed congr lean_s109 lean_s186
let lean_s188 := by timed congr lean_s108 lean_s187
let lean_s189 := by timed congr lean_s107 lean_s188
let lean_s190 := by timed congr lean_s106 lean_s189
let lean_s191 := by timed congr lean_s104 lean_s190
let lean_s192 := by timed congr lean_s103 lean_s191
let lean_s193 := by timed congr lean_s102 lean_s192
let lean_s194 := by timed congr lean_s101 lean_s193
let lean_s195 := by timed congr lean_s100 lean_s194
let lean_s196 := by timed congr lean_s99 lean_s195
have lean_s197 : (Eq let736 let779) := by timed congr lean_s98 lean_s196
have lean_s198 : (Eq let682 let779) := by timed Eq.trans lean_r281 lean_s197
let lean_s199 := by timed congr lean_s12 lean_s198
let lean_s200 := by timed flipCongrArg lean_r209 [And]
have lean_s201 : (Eq let680 let777) := by timed congr lean_s200 lean_r219
have lean_s202 : let877 := by timed rfl
have lean_s203 : let876 := by timed rfl
have lean_s204 : (Eq let681 let778) := by timed congrIte lean_s201 lean_s202 lean_s203
let lean_s205 := by timed congr lean_s12 lean_s204
let lean_s206 := by timed flipCongrArg lean_r206 [And]
have lean_s207 : (Eq let678 let775) := by timed congr lean_s206 lean_r85
have lean_s208 : (Eq let26 let26) := by timed rfl
let lean_s209 := by timed flipCongrArg lean_s208 [Eq]
have lean_s210 : (Eq let677 let581) := by timed congr lean_s209 lean_r91
have lean_s211 : (Eq let677 let75) := by timed Eq.trans lean_s210 lean_r218
have lean_s212 : (Eq let679 let776) := by timed congrIte lean_s207 lean_s211 lean_r116
let lean_s213 := by timed congr lean_s12 lean_s212
let lean_s214 := by timed flipCongrArg lean_r202 [And]
have lean_s215 : (Eq let675 let773) := by timed congr lean_s214 lean_r138
have lean_s216 : (Eq let2 let2) := by timed rfl
let lean_s217 := by timed flipCongrArg lean_s216 [Eq]
have lean_s218 : (Eq let674 let170) := by timed congr lean_s217 lean_r25
have lean_s219 : (Eq let674 let27) := by timed Eq.trans lean_s218 lean_r40
have lean_s220 : (Eq let676 let774) := by timed congrIte lean_s215 lean_s219 lean_r38
let lean_s221 := by timed congr lean_s12 lean_s220
let lean_s222 := by timed flipCongrArg lean_r197 [And]
have lean_s223 : (Eq let672 let771) := by timed congr lean_s222 lean_r156
have lean_s224 : (Eq let190 let190) := by timed rfl
let lean_s225 := by timed flipCongrArg lean_s224 [Eq]
have lean_s226 : (Eq let671 let350) := by timed congr lean_s225 lean_r217
have lean_s227 : (Eq let671 let348) := by timed Eq.trans lean_s226 lean_r122
have lean_s228 : (Eq let673 let772) := by timed congrIte lean_s223 lean_s227 lean_r45
let lean_s229 := by timed congr lean_s12 lean_s228
let lean_s230 := by timed flipCongrArg lean_r238 [And]
have lean_s231 : (Eq let669 let769) := by timed congr lean_s230 lean_r216
have lean_s232 : (Eq let215 let215) := by timed rfl
let lean_s233 := by timed flipCongrArg lean_s232 [Eq]
have lean_s234 : (Eq let668 let525) := by timed congr lean_s233 lean_r214
have lean_s235 : (Eq let668 let442) := by timed Eq.trans lean_s234 lean_r187
have lean_s236 : (Eq let670 let770) := by timed congrIte lean_s231 lean_s235 lean_r69
let lean_s237 := by timed congr lean_s12 lean_s236
let lean_s238 := by timed flipCongrArg lean_r20 [And]
have lean_s239 : (Eq let666 let767) := by timed congr lean_s238 lean_r212
have lean_s240 : (Eq let436 let436) := by timed rfl
let lean_s241 := by timed flipCongrArg lean_s240 [Eq]
have lean_s242 : (Eq let665 let566) := by timed congr lean_s241 lean_r56
have lean_s243 : (Eq let665 let438) := by timed Eq.trans lean_s242 lean_r211
have lean_s244 : (Eq let667 let768) := by timed congrIte lean_s239 lean_s243 lean_r210
let lean_s245 := by timed congr lean_s12 lean_s244
let lean_s246 := by timed flipCongrArg lean_r209 [And]
have lean_s247 : (Eq let663 let765) := by timed congr lean_s246 lean_r207
have lean_s248 : let865 := by timed rfl
have lean_s249 : let864 := by timed rfl
have lean_s250 : (Eq let664 let766) := by timed congrIte lean_s247 lean_s248 lean_s249
let lean_s251 := by timed congr lean_s12 lean_s250
let lean_s252 := by timed flipCongrArg lean_r206 [And]
have lean_s253 : (Eq let661 let763) := by timed congr lean_s252 lean_r169
have lean_s254 : (Eq let19 let19) := by timed rfl
let lean_s255 := by timed flipCongrArg lean_s254 [Eq]
have lean_s256 : (Eq let660 let557) := by timed congr lean_s255 lean_r243
have lean_s257 : (Eq let660 let221) := by timed Eq.trans lean_s256 lean_r205
have lean_s258 : (Eq let662 let764) := by timed congrIte lean_s253 lean_s257 lean_r204
let lean_s259 := by timed congr lean_s12 lean_s258
let lean_s260 := by timed flipCongrArg lean_r202 [And]
have lean_s261 : (Eq let658 let761) := by timed congr lean_s260 lean_r201
have lean_s262 : (Eq let18 let18) := by timed rfl
let lean_s263 := by timed flipCongrArg lean_s262 [Eq]
have lean_s264 : (Eq let657 let399) := by timed congr lean_s263 lean_r199
have lean_s265 : (Eq let657 let80) := by timed Eq.trans lean_s264 lean_r149
have lean_s266 : (Eq let659 let762) := by timed congrIte lean_s261 lean_s265 lean_r198
let lean_s267 := by timed congr lean_s12 lean_s266
let lean_s268 := by timed flipCongrArg lean_r197 [And]
have lean_s269 : (Eq let655 let759) := by timed congr lean_s268 lean_r196
have lean_s270 : (Eq let88 let88) := by timed rfl
let lean_s271 := by timed flipCongrArg lean_s270 [Eq]
have lean_s272 : (Eq let654 let492) := by timed congr lean_s271 lean_r195
have lean_s273 : (Eq let654 let422) := by timed Eq.trans lean_s272 lean_r167
have lean_s274 : (Eq let656 let760) := by timed congrIte lean_s269 lean_s273 lean_r14
let lean_s275 := by timed congr lean_s12 lean_s274
let lean_s276 := by timed flipCongrArg lean_r238 [And]
have lean_s277 : (Eq let652 let757) := by timed congr lean_s276 lean_r236
have lean_s278 : (Eq let107 let107) := by timed rfl
let lean_s279 := by timed flipCongrArg lean_s278 [Eq]
have lean_s280 : (Eq let651 let607) := by timed congr lean_s279 lean_r17
have lean_s281 : (Eq let651 let418) := by timed Eq.trans lean_s280 lean_r233
have lean_s282 : (Eq let653 let758) := by timed congrIte lean_s277 lean_s281 lean_r154
let lean_s283 := by timed congr lean_s12 lean_s282
let lean_s284 := by timed flipCongrArg lean_r20 [And]
have lean_s285 : (Eq let649 let755) := by timed congr lean_s284 lean_r134
have lean_s286 : (Eq let106 let106) := by timed rfl
let lean_s287 := by timed flipCongrArg lean_s286 [Eq]
have lean_s288 : (Eq let648 let110) := by timed congr lean_s287 lean_r47
have lean_s289 : (Eq let648 let108) := by timed Eq.trans lean_s288 lean_r21
have lean_s290 : (Eq let650 let756) := by timed congrIte lean_s285 lean_s289 lean_r51
let lean_s291 := by timed congr lean_s12 lean_s290
have lean_s292 : let852 := by timed rfl
let lean_s293 := by timed flipCongrArg lean_s39 [Eq]
have lean_s294 : (Eq let142 let753) := by timed congr lean_s293 lean_r151
let lean_s295 := by timed congr lean_s292 lean_s294
let lean_s296 := by timed flipCongrArg lean_s39 [Eq]
have lean_s297 : (Eq let140 let752) := by timed congr lean_s296 lean_r88
let lean_s298 := by timed congr lean_s292 lean_s297
let lean_s299 := by timed flipCongrArg lean_s39 [Eq]
have lean_s300 : (Eq let138 let751) := by timed congr lean_s299 lean_r64
let lean_s301 := by timed congr lean_s292 lean_s300
let lean_s302 := by timed flipCongrArg lean_s39 [Eq]
have lean_s303 : (Eq let136 let750) := by timed congr lean_s302 lean_r32
let lean_s304 := by timed congr lean_s292 lean_s303
let lean_s305 := by timed flipCongrArg lean_s39 [Eq]
have lean_s306 : (Eq let134 let749) := by timed congr lean_s305 lean_r220
let lean_s307 := by timed congr lean_s292 lean_s306
let lean_s308 := by timed flipCongrArg lean_s39 [Eq]
have lean_s309 : (Eq let132 let748) := by timed congr lean_s308 lean_r72
let lean_s310 := by timed congr lean_s307 lean_s309
let lean_s311 := by timed congr lean_s304 lean_s310
let lean_s312 := by timed congr lean_s301 lean_s311
let lean_s313 := by timed congr lean_s298 lean_s312
have lean_s314 : (Eq let143 let754) := by timed congr lean_s295 lean_s313
have lean_s315 : (Eq let144 let754) := by timed Eq.trans lean_r28 lean_s314
let lean_s316 := by timed congr lean_s12 lean_s315
have lean_s317 : let852 := by timed rfl
let lean_s318 := by timed flipCongrArg lean_s61 [Eq]
have lean_s319 : (Eq let236 let333) := by timed congr lean_s318 lean_r151
have lean_s320 : (Eq let236 let332) := by timed Eq.trans lean_s319 lean_r114
let lean_s321 := by timed congr lean_s317 lean_s320
let lean_s322 := by timed flipCongrArg lean_s61 [Eq]
have lean_s323 : (Eq let235 let123) := by timed congr lean_s322 lean_r88
have lean_s324 : (Eq let235 let121) := by timed Eq.trans lean_s323 lean_r24
let lean_s325 := by timed congr lean_s317 lean_s324
let lean_s326 := by timed flipCongrArg lean_s61 [Eq]
have lean_s327 : (Eq let234 let165) := by timed congr lean_s326 lean_r64
have lean_s328 : (Eq let234 let163) := by timed Eq.trans lean_s327 lean_r36
let lean_s329 := by timed congr lean_s325 lean_s328
have lean_s330 : (Eq let237 let747) := by timed congr lean_s321 lean_s329
have lean_s331 : (Eq let238 let747) := by timed Eq.trans lean_r62 lean_s330
let lean_s332 := by timed congr lean_s12 lean_s331
have lean_s333 : let851 := by timed rfl
let lean_s334 := by timed congr lean_s333 lean_r26
have lean_s335 : (Eq let182 let378) := by timed flipCongrArg lean_r27 [selectx5fformat]
let lean_s336 := by timed flipCongrArg lean_s335 [Eq]
have lean_s337 : (Eq s s) := by timed rfl
have lean_s338 : (Eq let183 let380) := by timed congr lean_s336 lean_s337
have lean_s339 : (Eq let183 let379) := by timed Eq.trans lean_s338 lean_r135
let lean_s340 := by timed congr lean_s333 lean_s339
let lean_s341 := by timed congr lean_s333 lean_r49
have lean_s342 : (Eq let178 let514) := by timed flipCongrArg lean_r68 [selectx5fformat]
let lean_s343 := by timed flipCongrArg lean_s342 [Eq]
have lean_s344 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s345 : (Eq let179 let516) := by timed congr lean_s343 lean_s344
have lean_s346 : (Eq let179 let515) := by timed Eq.trans lean_s345 lean_r185
let lean_s347 := by timed congr lean_s333 lean_s346
have lean_s348 : (Eq let175 let157) := by timed flipCongrArg lean_r147 [selectx5fformat]
let lean_s349 := by timed flipCongrArg lean_s348 [Eq]
have lean_s350 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s351 : (Eq let176 let159) := by timed congr lean_s349 lean_s350
have lean_s352 : (Eq let176 let158) := by timed Eq.trans lean_s351 lean_r34
let lean_s353 := by timed congr lean_s333 lean_s352
have lean_s354 : (Eq let172 let263) := by timed flipCongrArg lean_r35 [selectx5fformat]
let lean_s355 := by timed flipCongrArg lean_s354 [Eq]
have lean_s356 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s357 : (Eq let173 let265) := by timed congr lean_s355 lean_s356
have lean_s358 : (Eq let173 let264) := by timed Eq.trans lean_s357 lean_r76
let lean_s359 := by timed congr lean_s353 lean_s358
let lean_s360 := by timed congr lean_s347 lean_s359
let lean_s361 := by timed congr lean_s341 lean_s360
let lean_s362 := by timed congr lean_s340 lean_s361
have lean_s363 : (Eq let184 let745) := by timed congr lean_s334 lean_s362
have lean_s364 : (Eq let185 let745) := by timed Eq.trans lean_r42 lean_s363
have lean_s365 : (Eq let647 let746) := by timed flipCongrArg lean_s364 [Not]
let lean_s366 := by timed congr lean_s332 lean_s365
let lean_s367 := by timed congr lean_s316 lean_s366
let lean_s368 := by timed congr lean_s291 lean_s367
let lean_s369 := by timed congr lean_s283 lean_s368
let lean_s370 := by timed congr lean_s275 lean_s369
let lean_s371 := by timed congr lean_s267 lean_s370
let lean_s372 := by timed congr lean_s259 lean_s371
let lean_s373 := by timed congr lean_s251 lean_s372
let lean_s374 := by timed congr lean_s245 lean_s373
let lean_s375 := by timed congr lean_s237 lean_s374
let lean_s376 := by timed congr lean_s229 lean_s375
let lean_s377 := by timed congr lean_s221 lean_s376
let lean_s378 := by timed congr lean_s213 lean_s377
let lean_s379 := by timed congr lean_s205 lean_s378
let lean_s380 := by timed congr lean_s199 lean_s379
let lean_s381 := by timed congr lean_s96 lean_s380
let lean_s382 := by timed congr lean_s74 lean_s381
let lean_s383 := by timed congr lean_s60 lean_s382
let lean_s384 := by timed congr lean_s59 lean_s383
let lean_s385 := by timed congr lean_s52 lean_s384
let lean_s386 := by timed congr lean_s38 lean_s385
let lean_s387 := by timed congr lean_s37 lean_s386
let lean_s388 := by timed congr lean_s32 lean_s387
let lean_s389 := by timed congr lean_s30 lean_s388
let lean_s390 := by timed congr lean_s28 lean_s389
let lean_s391 := by timed congr lean_s26 lean_s390
let lean_s392 := by timed congr lean_s24 lean_s391
let lean_s393 := by timed congr lean_s22 lean_s392
let lean_s394 := by timed congr lean_s20 lean_s393
let lean_s395 := by timed congr lean_s18 lean_s394
let lean_s396 := by timed congr lean_s16 lean_s395
have lean_s397 : (Eq let696 let788) := by timed congr lean_s14 lean_s396
have lean_s398 : (Eq let697 let788) := by timed Eq.trans lean_r255 lean_s397
have lean_s399 : let851 := by timed rfl
have lean_s400 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s401 : let785 := by andElim lean_s400, 16
have lean_s402 : let891 := by timed rfl
let lean_s403 := by timed flipCongrArg lean_s402 [Eq]
have lean_s404 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s405 : let643 := by andElim lean_s404, 10
have lean_s406 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s407 : let686 := by andElim lean_s406, 9
have lean_s408 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s409 : let687 := by andElim lean_s408, 8
have lean_s410 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s411 : let688 := by andElim lean_s410, 7
have lean_s412 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s413 : let689 := by andElim lean_s412, 6
have lean_s414 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s415 : let690 := by andElim lean_s414, 5
have lean_s416 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s417 : let691 := by andElim lean_s416, 4
have lean_s418 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s419 : let692 := by andElim lean_s418, 3
have lean_s420 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s421 : let693 := by andElim lean_s420, 2
have lean_s422 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s423 : let694 := by andElim lean_s422, 1
have lean_s424 : let788 := by timed eqResolve lean_a288 lean_s398
have lean_s425 : let695 := by andElim lean_s424, 0
let lean_s426 := by timed And.intro lean_s423 lean_s425
let lean_s427 := by timed And.intro lean_s421 lean_s426
let lean_s428 := by timed And.intro lean_s419 lean_s427
let lean_s429 := by timed And.intro lean_s417 lean_s428
let lean_s430 := by timed And.intro lean_s415 lean_s429
let lean_s431 := by timed And.intro lean_s413 lean_s430
let lean_s432 := by timed And.intro lean_s411 lean_s431
let lean_s433 := by timed And.intro lean_s409 lean_s432
have lean_s434 : let889 := by timed And.intro lean_s407 lean_s433
have lean_s435 : let686 := by andElim lean_s434, 0
let lean_s436 := by timed flipCongrArg lean_s435 [Eq]
have lean_s437 : let892 := by timed rfl
let lean_s438 := by timed flipCongrArg lean_s437 [HAdd.hAdd]
have lean_s439 : let695 := by andElim lean_s434, 9
have lean_s440 : (Eq let572 let698) := by timed congr lean_s438 lean_s439
have lean_s441 : (Eq let643 let893) := by timed congr lean_s436 lean_s440
have lean_s442 : let400 := by timed rfl
let lean_s443 := by timed flipCongrArg lean_s442 [Eq]
have lean_s444 : (Eq let893 let321) := by timed congr lean_s443 lean_r256
have lean_s445 : (Eq let893 let319) := by timed Eq.trans lean_s444 lean_r107
have lean_s446 : (Eq let643 let319) := by timed Eq.trans lean_s441 lean_s445
have lean_s447 : let319 := by timed eqResolve lean_s405 lean_s446
let lean_s448 := by timed And.intro lean_s423 lean_s425
let lean_s449 := by timed And.intro lean_s421 lean_s448
let lean_s450 := by timed And.intro lean_s419 lean_s449
let lean_s451 := by timed And.intro lean_s417 lean_s450
let lean_s452 := by timed And.intro lean_s415 lean_s451
let lean_s453 := by timed And.intro lean_s413 lean_s452
let lean_s454 := by timed And.intro lean_s411 lean_s453
let lean_s455 := by timed And.intro lean_s409 lean_s454
let lean_s456 := by timed And.intro lean_s407 lean_s455
have lean_s457 : let890 := by timed And.intro lean_s447 lean_s456
have lean_s458 : let319 := by andElim lean_s457, 0
have lean_s459 : let395 := by timed rfl
let lean_s460 := by timed flipCongrArg lean_s459 [HMul.hMul]
have lean_s461 : let884 := by timed rfl
have lean_s462 : let853 := by timed rfl
have lean_s463 : let886 := by timed rfl
let lean_s464 := by timed flipCongrArg lean_s463 [HMul.hMul]
have lean_s465 : let686 := by andElim lean_s457, 1
have lean_s466 : let899 := by timed congr lean_s464 lean_s465
let lean_s467 := by timed congrHAdd lean_s462 lean_s466
have lean_s468 : let898 := by timed congrHAdd lean_s461 lean_s467
have lean_s469 : let901 := by timed flipCongrArg lean_s468 [sx5fcount]
have lean_s470 : let900 := by timed congr lean_s460 lean_s469
let lean_s471 := by timed flipCongrArg lean_s459 [HMul.hMul]
have lean_s472 : let897 := by timed flipCongrArg lean_s468 [xx5fcount]
have lean_s473 : let896 := by timed congr lean_s471 lean_s472
let lean_s474 := by timed congrHAdd lean_s470 lean_s473
have lean_s475 : let895 := by timed congrHAdd lean_s458 lean_s474
have lean_s476 : (Eq let785 let894) := by timed congr lean_s403 lean_s475
let lean_s477 := by timed flipCongrArg lean_s61 [Eq]
have lean_s478 : (Eq let117 let117) := by timed rfl
let lean_s479 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s480 : let884 := by timed rfl
let lean_s481 := by timed congrHAdd lean_s39 lean_r67
have lean_s482 : (Eq let832 let251) := by timed congrHAdd lean_s480 lean_s481
have lean_s483 : (Eq let832 let12) := by timed Eq.trans lean_s482 lean_r70
have lean_s484 : (Eq let835 let14) := by timed flipCongrArg lean_s483 [sx5fcount]
have lean_s485 : (Eq let836 let114) := by timed congr lean_s479 lean_s484
let lean_s486 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s487 : (Eq let833 let13) := by timed flipCongrArg lean_s483 [xx5fcount]
have lean_s488 : (Eq let834 let113) := by timed congr lean_s486 lean_s487
let lean_s489 := by timed congrHAdd lean_s485 lean_s488
have lean_s490 : (Eq let837 let118) := by timed congrHAdd lean_s478 lean_s489
have lean_s491 : (Eq let894 let888) := by timed congr lean_s477 lean_s490
have lean_s492 : (Eq let785 let888) := by timed Eq.trans lean_s476 lean_s491
have lean_s493 : let888 := by timed eqResolve lean_s401 lean_s492
let lean_s494 := by timed And.intro lean_s423 lean_s425
let lean_s495 := by timed And.intro lean_s421 lean_s494
let lean_s496 := by timed And.intro lean_s419 lean_s495
let lean_s497 := by timed And.intro lean_s417 lean_s496
let lean_s498 := by timed And.intro lean_s415 lean_s497
let lean_s499 := by timed And.intro lean_s413 lean_s498
let lean_s500 := by timed And.intro lean_s411 lean_s499
let lean_s501 := by timed And.intro lean_s409 lean_s500
let lean_s502 := by timed And.intro lean_s407 lean_s501
let lean_s503 := by timed And.intro lean_s447 lean_s502
have lean_s504 : (And let888 let890) := by timed And.intro lean_s493 lean_s503
have lean_s505 : let695 := by andElim lean_s504, 11
let lean_s506 := by timed flipCongrArg lean_s505 [Eq]
have lean_s507 : let318 := by timed rfl
have lean_s508 : (Eq let695 let318) := by timed congr lean_s506 lean_s507
let lean_s509 := by timed congr lean_s399 lean_s508
have lean_s510 : let694 := by andElim lean_s504, 10
let lean_s511 := by timed flipCongrArg lean_s510 [Eq]
have lean_s512 : let302 := by timed rfl
have lean_s513 : (Eq let694 let302) := by timed congr lean_s511 lean_s512
let lean_s514 := by timed congr lean_s399 lean_s513
have lean_s515 : let693 := by andElim lean_s504, 9
let lean_s516 := by timed flipCongrArg lean_s515 [Eq]
have lean_s517 : let298 := by timed rfl
have lean_s518 : (Eq let693 let298) := by timed congr lean_s516 lean_s517
let lean_s519 := by timed congr lean_s399 lean_s518
have lean_s520 : let692 := by andElim lean_s504, 8
let lean_s521 := by timed flipCongrArg lean_s520 [Eq]
have lean_s522 : let395 := by timed rfl
have lean_s523 : (Eq let692 let395) := by timed congr lean_s521 lean_s522
let lean_s524 := by timed congr lean_s399 lean_s523
have lean_s525 : let691 := by andElim lean_s504, 7
let lean_s526 := by timed flipCongrArg lean_s525 [Eq]
have lean_s527 : let382 := by timed rfl
have lean_s528 : (Eq let691 let382) := by timed congr lean_s526 lean_s527
let lean_s529 := by timed congr lean_s399 lean_s528
have lean_s530 : let690 := by andElim lean_s504, 6
let lean_s531 := by timed flipCongrArg lean_s530 [Eq]
have lean_s532 : (Eq let690 let298) := by timed congr lean_s531 lean_s517
let lean_s533 := by timed congr lean_s399 lean_s532
have lean_s534 : let689 := by andElim lean_s504, 5
let lean_s535 := by timed flipCongrArg lean_s534 [Eq]
have lean_s536 : let186 := by timed rfl
have lean_s537 : (Eq let689 let186) := by timed congr lean_s535 lean_s536
let lean_s538 := by timed congr lean_s399 lean_s537
have lean_s539 : let688 := by andElim lean_s504, 4
let lean_s540 := by timed flipCongrArg lean_s539 [Eq]
have lean_s541 : let169 := by timed rfl
have lean_s542 : (Eq let688 let169) := by timed congr lean_s540 lean_s541
let lean_s543 := by timed congr lean_s399 lean_s542
have lean_s544 : let687 := by andElim lean_s504, 3
let lean_s545 := by timed flipCongrArg lean_s544 [Eq]
have lean_s546 : let295 := by timed rfl
have lean_s547 : (Eq let687 let295) := by timed congr lean_s545 lean_s546
let lean_s548 := by timed congr lean_s399 lean_s547
have lean_s549 : let686 := by andElim lean_s504, 2
let lean_s550 := by timed flipCongrArg lean_s549 [Eq]
have lean_s551 : let400 := by timed rfl
have lean_s552 : (Eq let686 let400) := by timed congr lean_s550 lean_s551
let lean_s553 := by timed congr lean_s399 lean_s552
let lean_s554 := by timed flipCongrArg lean_s549 [Eq]
have lean_s555 : let319 := by andElim lean_s504, 1
let lean_s556 := by timed flipCongrArg lean_s555 [HAdd.hAdd]
have lean_s557 : (Eq let572 let166) := by timed congr lean_s556 lean_s505
have lean_s558 : (Eq let643 let849) := by timed congr lean_s554 lean_s557
let lean_s559 := by timed congr lean_s399 lean_s558
let lean_s560 := by timed flipCongrArg lean_s549 [HAdd.hAdd]
have lean_s561 : let886 := by timed rfl
let lean_s562 := by timed flipCongrArg lean_s561 [HMul.hMul]
have lean_s563 : let888 := by andElim lean_s504, 0
have lean_s564 : (Eq let354 let331) := by timed congr lean_s562 lean_s563
have lean_s565 : (Eq let355 let846) := by timed congr lean_s560 lean_s564
let lean_s566 := by timed flipCongrArg lean_s565 [GE.ge]
have lean_s567 : let887 := by timed rfl
have lean_s568 : (Eq let356 let847) := by timed congr lean_s566 lean_s567
have lean_s569 : (Eq let357 let848) := by timed flipCongrArg lean_s568 [Not]
let lean_s570 := by timed congr lean_s399 lean_s569
have lean_s571 : let853 := by timed rfl
let lean_s572 := by timed flipCongrArg lean_s561 [HMul.hMul]
have lean_s573 : let899 := by timed congr lean_s572 lean_s549
let lean_s574 := by timed flipCongrArg lean_s561 [HMul.hMul]
have lean_s575 : (Eq let530 let226) := by timed congr lean_s574 lean_s510
let lean_s576 := by timed congrHAdd lean_s573 lean_s575
have lean_s577 : (Eq let638 let843) := by timed congrHAdd lean_s571 lean_s576
let lean_s578 := by timed flipCongrArg lean_s577 [GE.ge]
have lean_s579 : (Eq let639 let844) := by timed congr lean_s578 lean_s561
have lean_s580 : (Eq let787 let845) := by timed flipCongrArg lean_s579 [Not]
let lean_s581 := by timed congr lean_s399 lean_s580
let lean_s582 := by timed flipCongrArg lean_s571 [HAdd.hAdd]
have lean_s583 : (Eq let365 let831) := by timed congr lean_s582 lean_s573
let lean_s584 := by timed flipCongrArg lean_s583 [GE.ge]
have lean_s585 : (Eq let366 let842) := by timed congr lean_s584 lean_s527
let lean_s586 := by timed congr lean_s399 lean_s585
let lean_s587 := by timed flipCongrArg lean_s561 [HMul.hMul]
have lean_s588 : (Eq let531 let227) := by timed congr lean_s587 lean_s555
let lean_s589 := by timed flipCongrArg lean_s561 [HMul.hMul]
have lean_s590 : (Eq let529 let225) := by timed congr lean_s589 lean_s505
let lean_s591 := by timed congrHAdd lean_s588 lean_s590
have lean_s592 : (Eq let632 let720) := by timed congrHAdd lean_s563 lean_s591
let lean_s593 := by timed flipCongrArg lean_s592 [GE.ge]
have lean_s594 : (Eq let633 let841) := by timed congr lean_s593 lean_s551
let lean_s595 := by timed congr lean_s399 lean_s594
let lean_s596 := by timed congrHAdd lean_s575 lean_s590
let lean_s597 := by timed congrHAdd lean_s588 lean_s596
have lean_s598 : (Eq let532 let230) := by timed congrHAdd lean_s563 lean_s597
let lean_s599 := by timed flipCongrArg lean_s598 [GE.ge]
have lean_s600 : let885 := by timed rfl
have lean_s601 : (Eq let533 let839) := by timed congr lean_s599 lean_s600
have lean_s602 : (Eq let786 let840) := by timed flipCongrArg lean_s601 [Not]
let lean_s603 := by timed congr lean_s399 lean_s602
let lean_s604 := by timed flipCongrArg lean_s563 [Eq]
let lean_s605 := by timed flipCongrArg lean_s522 [HMul.hMul]
have lean_s606 : let884 := by timed rfl
let lean_s607 := by timed congrHAdd lean_s571 lean_s573
have lean_s608 : let898 := by timed congrHAdd lean_s606 lean_s607
have lean_s609 : let901 := by timed flipCongrArg lean_s608 [sx5fcount]
have lean_s610 : let900 := by timed congr lean_s605 lean_s609
let lean_s611 := by timed flipCongrArg lean_s522 [HMul.hMul]
have lean_s612 : let897 := by timed flipCongrArg lean_s608 [xx5fcount]
have lean_s613 : let896 := by timed congr lean_s611 lean_s612
let lean_s614 := by timed congrHAdd lean_s610 lean_s613
have lean_s615 : let895 := by timed congrHAdd lean_s555 lean_s614
have lean_s616 : (Eq let785 let838) := by timed congr lean_s604 lean_s615
let lean_s617 := by timed congr lean_s399 lean_s616
have lean_s618 : let852 := by timed rfl
let lean_s619 := by timed flipCongrArg lean_s534 [Eq]
have lean_s620 : (Eq let231 let231) := by timed rfl
have lean_s621 : (Eq let563 let505) := by timed congr lean_s619 lean_s620
let lean_s622 := by timed congr lean_s618 lean_s621
let lean_s623 := by timed flipCongrArg lean_s539 [Eq]
have lean_s624 : (Eq let232 let262) := by timed congr lean_s623 lean_s620
let lean_s625 := by timed congr lean_s618 lean_s624
let lean_s626 := by timed flipCongrArg lean_s544 [Eq]
have lean_s627 : (Eq let496 let270) := by timed congr lean_s626 lean_s620
let lean_s628 := by timed congr lean_s618 lean_s627
let lean_s629 := by timed flipCongrArg lean_s515 [Eq]
have lean_s630 : (Eq let339 let277) := by timed congr lean_s629 lean_s620
let lean_s631 := by timed congr lean_s618 lean_s630
let lean_s632 := by timed flipCongrArg lean_s520 [Eq]
have lean_s633 : (Eq let548 let274) := by timed congr lean_s632 lean_s620
let lean_s634 := by timed congr lean_s618 lean_s633
let lean_s635 := by timed flipCongrArg lean_s525 [Eq]
have lean_s636 : (Eq let622 let256) := by timed congr lean_s635 lean_s620
let lean_s637 := by timed congr lean_s618 lean_s636
let lean_s638 := by timed flipCongrArg lean_s530 [Eq]
have lean_s639 : (Eq let620 let277) := by timed congr lean_s638 lean_s620
let lean_s640 := by timed congr lean_s618 lean_s639
have lean_s641 : let883 := by timed rfl
let lean_s642 := by timed congr lean_s618 lean_s641
let lean_s643 := by timed flipCongrArg lean_s534 [Eq]
have lean_s644 : (Eq let244 let244) := by timed rfl
have lean_s645 : (Eq let558 let272) := by timed congr lean_s643 lean_s644
let lean_s646 := by timed congr lean_s618 lean_s645
let lean_s647 := by timed flipCongrArg lean_s539 [Eq]
have lean_s648 : (Eq let582 let317) := by timed congr lean_s647 lean_s644
let lean_s649 := by timed congr lean_s618 lean_s648
let lean_s650 := by timed flipCongrArg lean_s544 [Eq]
have lean_s651 : (Eq let560 let501) := by timed congr lean_s650 lean_s644
let lean_s652 := by timed congr lean_s618 lean_s651
let lean_s653 := by timed flipCongrArg lean_s515 [Eq]
have lean_s654 : (Eq let618 let511) := by timed congr lean_s653 lean_s644
let lean_s655 := by timed congr lean_s618 lean_s654
let lean_s656 := by timed flipCongrArg lean_s520 [Eq]
have lean_s657 : (Eq let614 let540) := by timed congr lean_s656 lean_s644
let lean_s658 := by timed congr lean_s618 lean_s657
let lean_s659 := by timed flipCongrArg lean_s525 [Eq]
have lean_s660 : (Eq let610 let539) := by timed congr lean_s659 lean_s644
let lean_s661 := by timed congr lean_s618 lean_s660
let lean_s662 := by timed flipCongrArg lean_s530 [Eq]
have lean_s663 : (Eq let245 let511) := by timed congr lean_s662 lean_s644
let lean_s664 := by timed congr lean_s618 lean_s663
have lean_s665 : let882 := by timed rfl
let lean_s666 := by timed congr lean_s618 lean_s665
let lean_s667 := by timed flipCongrArg lean_s534 [Eq]
have lean_s668 : (Eq let187 let187) := by timed rfl
have lean_s669 : (Eq let552 let510) := by timed congr lean_s667 lean_s668
let lean_s670 := by timed congr lean_s618 lean_s669
let lean_s671 := by timed flipCongrArg lean_s539 [Eq]
have lean_s672 : (Eq let280 let189) := by timed congr lean_s671 lean_s668
let lean_s673 := by timed congr lean_s618 lean_s672
let lean_s674 := by timed flipCongrArg lean_s544 [Eq]
have lean_s675 : (Eq let494 let268) := by timed congr lean_s674 lean_s668
let lean_s676 := by timed congr lean_s618 lean_s675
let lean_s677 := by timed flipCongrArg lean_s515 [Eq]
have lean_s678 : (Eq let608 let504) := by timed congr lean_s677 lean_s668
let lean_s679 := by timed congr lean_s618 lean_s678
let lean_s680 := by timed flipCongrArg lean_s520 [Eq]
have lean_s681 : (Eq let605 let538) := by timed congr lean_s680 lean_s668
let lean_s682 := by timed congr lean_s618 lean_s681
let lean_s683 := by timed flipCongrArg lean_s525 [Eq]
have lean_s684 : (Eq let403 let483) := by timed congr lean_s683 lean_s668
let lean_s685 := by timed congr lean_s618 lean_s684
let lean_s686 := by timed flipCongrArg lean_s530 [Eq]
have lean_s687 : (Eq let601 let504) := by timed congr lean_s686 lean_s668
let lean_s688 := by timed congr lean_s618 lean_s687
have lean_s689 : let881 := by timed rfl
let lean_s690 := by timed congr lean_s618 lean_s689
let lean_s691 := by timed flipCongrArg lean_s534 [Eq]
have lean_s692 : (Eq let93 let93) := by timed rfl
have lean_s693 : (Eq let544 let503) := by timed congr lean_s691 lean_s692
let lean_s694 := by timed congr lean_s618 lean_s693
let lean_s695 := by timed flipCongrArg lean_s539 [Eq]
have lean_s696 : (Eq let383 let536) := by timed congr lean_s695 lean_s692
let lean_s697 := by timed congr lean_s618 lean_s696
let lean_s698 := by timed flipCongrArg lean_s544 [Eq]
have lean_s699 : (Eq let550 let389) := by timed congr lean_s698 lean_s692
let lean_s700 := by timed congr lean_s618 lean_s699
let lean_s701 := by timed flipCongrArg lean_s515 [Eq]
have lean_s702 : (Eq let599 let498) := by timed congr lean_s701 lean_s692
let lean_s703 := by timed congr lean_s618 lean_s702
let lean_s704 := by timed flipCongrArg lean_s520 [Eq]
have lean_s705 : (Eq let94 let537) := by timed congr lean_s704 lean_s692
let lean_s706 := by timed congr lean_s618 lean_s705
let lean_s707 := by timed flipCongrArg lean_s525 [Eq]
have lean_s708 : (Eq let193 let279) := by timed congr lean_s707 lean_s692
let lean_s709 := by timed congr lean_s618 lean_s708
let lean_s710 := by timed flipCongrArg lean_s530 [Eq]
have lean_s711 : (Eq let596 let498) := by timed congr lean_s710 lean_s692
let lean_s712 := by timed congr lean_s618 lean_s711
have lean_s713 : let880 := by timed rfl
let lean_s714 := by timed congr lean_s618 lean_s713
let lean_s715 := by timed flipCongrArg lean_s534 [Eq]
have lean_s716 : (Eq let100 let100) := by timed rfl
have lean_s717 : (Eq let616 let715) := by timed congr lean_s715 lean_s716
let lean_s718 := by timed congr lean_s618 lean_s717
let lean_s719 := by timed flipCongrArg lean_s539 [Eq]
have lean_s720 : (Eq let477 let728) := by timed congr lean_s719 lean_s716
let lean_s721 := by timed congr lean_s618 lean_s720
let lean_s722 := by timed flipCongrArg lean_s544 [Eq]
have lean_s723 : (Eq let542 let484) := by timed congr lean_s722 lean_s716
let lean_s724 := by timed congr lean_s618 lean_s723
let lean_s725 := by timed flipCongrArg lean_s515 [Eq]
have lean_s726 : (Eq let591 let391) := by timed congr lean_s725 lean_s716
let lean_s727 := by timed congr lean_s618 lean_s726
let lean_s728 := by timed flipCongrArg lean_s520 [Eq]
have lean_s729 : (Eq let101 let327) := by timed congr lean_s728 lean_s716
let lean_s730 := by timed congr lean_s618 lean_s729
let lean_s731 := by timed flipCongrArg lean_s525 [Eq]
have lean_s732 : (Eq let589 let323) := by timed congr lean_s731 lean_s716
let lean_s733 := by timed congr lean_s618 lean_s732
let lean_s734 := by timed flipCongrArg lean_s530 [Eq]
have lean_s735 : (Eq let314 let391) := by timed congr lean_s734 lean_s716
let lean_s736 := by timed congr lean_s618 lean_s735
have lean_s737 : let879 := by timed rfl
let lean_s738 := by timed congr lean_s618 lean_s737
let lean_s739 := by timed flipCongrArg lean_s534 [Eq]
have lean_s740 : (Eq let103 let103) := by timed rfl
have lean_s741 : (Eq let104 let397) := by timed congr lean_s739 lean_s740
let lean_s742 := by timed congr lean_s618 lean_s741
let lean_s743 := by timed flipCongrArg lean_s539 [Eq]
have lean_s744 : (Eq let578 let207) := by timed congr lean_s743 lean_s740
let lean_s745 := by timed congr lean_s618 lean_s744
let lean_s746 := by timed flipCongrArg lean_s544 [Eq]
have lean_s747 : (Eq let612 let338) := by timed congr lean_s746 lean_s740
let lean_s748 := by timed congr lean_s618 lean_s747
let lean_s749 := by timed flipCongrArg lean_s515 [Eq]
have lean_s750 : (Eq let587 let486) := by timed congr lean_s749 lean_s740
let lean_s751 := by timed congr lean_s618 lean_s750
let lean_s752 := by timed flipCongrArg lean_s520 [Eq]
have lean_s753 : (Eq let252 let363) := by timed congr lean_s752 lean_s740
let lean_s754 := by timed congr lean_s618 lean_s753
let lean_s755 := by timed flipCongrArg lean_s525 [Eq]
have lean_s756 : (Eq let585 let342) := by timed congr lean_s755 lean_s740
let lean_s757 := by timed congr lean_s618 lean_s756
let lean_s758 := by timed flipCongrArg lean_s530 [Eq]
have lean_s759 : (Eq let196 let486) := by timed congr lean_s758 lean_s740
let lean_s760 := by timed congr lean_s618 lean_s759
have lean_s761 : let878 := by timed rfl
let lean_s762 := by timed congr lean_s760 lean_s761
let lean_s763 := by timed congr lean_s757 lean_s762
let lean_s764 := by timed congr lean_s754 lean_s763
let lean_s765 := by timed congr lean_s751 lean_s764
let lean_s766 := by timed congr lean_s748 lean_s765
let lean_s767 := by timed congr lean_s745 lean_s766
let lean_s768 := by timed congr lean_s742 lean_s767
let lean_s769 := by timed congr lean_s738 lean_s768
let lean_s770 := by timed congr lean_s736 lean_s769
let lean_s771 := by timed congr lean_s733 lean_s770
let lean_s772 := by timed congr lean_s730 lean_s771
let lean_s773 := by timed congr lean_s727 lean_s772
let lean_s774 := by timed congr lean_s724 lean_s773
let lean_s775 := by timed congr lean_s721 lean_s774
let lean_s776 := by timed congr lean_s718 lean_s775
let lean_s777 := by timed congr lean_s714 lean_s776
let lean_s778 := by timed congr lean_s712 lean_s777
let lean_s779 := by timed congr lean_s709 lean_s778
let lean_s780 := by timed congr lean_s706 lean_s779
let lean_s781 := by timed congr lean_s703 lean_s780
let lean_s782 := by timed congr lean_s700 lean_s781
let lean_s783 := by timed congr lean_s697 lean_s782
let lean_s784 := by timed congr lean_s694 lean_s783
let lean_s785 := by timed congr lean_s690 lean_s784
let lean_s786 := by timed congr lean_s688 lean_s785
let lean_s787 := by timed congr lean_s685 lean_s786
let lean_s788 := by timed congr lean_s682 lean_s787
let lean_s789 := by timed congr lean_s679 lean_s788
let lean_s790 := by timed congr lean_s676 lean_s789
let lean_s791 := by timed congr lean_s673 lean_s790
let lean_s792 := by timed congr lean_s670 lean_s791
let lean_s793 := by timed congr lean_s666 lean_s792
let lean_s794 := by timed congr lean_s664 lean_s793
let lean_s795 := by timed congr lean_s661 lean_s794
let lean_s796 := by timed congr lean_s658 lean_s795
let lean_s797 := by timed congr lean_s655 lean_s796
let lean_s798 := by timed congr lean_s652 lean_s797
let lean_s799 := by timed congr lean_s649 lean_s798
let lean_s800 := by timed congr lean_s646 lean_s799
let lean_s801 := by timed congr lean_s642 lean_s800
let lean_s802 := by timed congr lean_s640 lean_s801
let lean_s803 := by timed congr lean_s637 lean_s802
let lean_s804 := by timed congr lean_s634 lean_s803
let lean_s805 := by timed congr lean_s631 lean_s804
let lean_s806 := by timed congr lean_s628 lean_s805
let lean_s807 := by timed congr lean_s625 lean_s806
have lean_s808 : (Eq let779 let830) := by timed congr lean_s622 lean_s807
let lean_s809 := by timed congr lean_s399 lean_s808
let lean_s810 := by timed flipCongrArg lean_s621 [And]
have lean_s811 : (Eq let777 let828) := by timed congr lean_s810 lean_s648
have lean_s812 : let877 := by timed rfl
have lean_s813 : let876 := by timed rfl
have lean_s814 : (Eq let778 let829) := by timed congrIte lean_s811 lean_s812 lean_s813
let lean_s815 := by timed congr lean_s399 lean_s814
let lean_s816 := by timed flipCongrArg lean_s645 [And]
have lean_s817 : (Eq let775 let826) := by timed congr lean_s816 lean_s672
have lean_s818 : let875 := by timed rfl
have lean_s819 : let874 := by timed rfl
have lean_s820 : (Eq let776 let827) := by timed congrIte lean_s817 lean_s818 lean_s819
let lean_s821 := by timed congr lean_s399 lean_s820
let lean_s822 := by timed flipCongrArg lean_s669 [And]
have lean_s823 : (Eq let773 let824) := by timed congr lean_s822 lean_s696
have lean_s824 : let873 := by timed rfl
have lean_s825 : let872 := by timed rfl
have lean_s826 : (Eq let774 let825) := by timed congrIte lean_s823 lean_s824 lean_s825
let lean_s827 := by timed congr lean_s399 lean_s826
let lean_s828 := by timed flipCongrArg lean_s693 [And]
have lean_s829 : (Eq let771 let822) := by timed congr lean_s828 lean_s720
have lean_s830 : let871 := by timed rfl
have lean_s831 : let870 := by timed rfl
have lean_s832 : (Eq let772 let823) := by timed congrIte lean_s829 lean_s830 lean_s831
let lean_s833 := by timed congr lean_s399 lean_s832
let lean_s834 := by timed flipCongrArg lean_s717 [And]
have lean_s835 : (Eq let769 let820) := by timed congr lean_s834 lean_s744
have lean_s836 : let869 := by timed rfl
have lean_s837 : let868 := by timed rfl
have lean_s838 : (Eq let770 let821) := by timed congrIte lean_s835 lean_s836 lean_s837
let lean_s839 := by timed congr lean_s399 lean_s838
let lean_s840 := by timed flipCongrArg lean_s741 [And]
let lean_s841 := by timed flipCongrArg lean_s539 [Eq]
have lean_s842 : (Eq let375 let375) := by timed rfl
have lean_s843 : (Eq let567 let509) := by timed congr lean_s841 lean_s842
have lean_s844 : (Eq let767 let818) := by timed congr lean_s840 lean_s843
have lean_s845 : let867 := by timed rfl
have lean_s846 : let866 := by timed rfl
have lean_s847 : (Eq let768 let819) := by timed congrIte lean_s844 lean_s845 lean_s846
let lean_s848 := by timed congr lean_s399 lean_s847
let lean_s849 := by timed flipCongrArg lean_s621 [And]
have lean_s850 : (Eq let765 let816) := by timed congr lean_s849 lean_s651
have lean_s851 : let865 := by timed rfl
have lean_s852 : let864 := by timed rfl
have lean_s853 : (Eq let766 let817) := by timed congrIte lean_s850 lean_s851 lean_s852
let lean_s854 := by timed congr lean_s399 lean_s853
let lean_s855 := by timed flipCongrArg lean_s645 [And]
have lean_s856 : (Eq let763 let814) := by timed congr lean_s855 lean_s675
have lean_s857 : let863 := by timed rfl
have lean_s858 : let862 := by timed rfl
have lean_s859 : (Eq let764 let815) := by timed congrIte lean_s856 lean_s857 lean_s858
let lean_s860 := by timed congr lean_s399 lean_s859
let lean_s861 := by timed flipCongrArg lean_s669 [And]
have lean_s862 : (Eq let761 let812) := by timed congr lean_s861 lean_s699
have lean_s863 : let861 := by timed rfl
have lean_s864 : let860 := by timed rfl
have lean_s865 : (Eq let762 let813) := by timed congrIte lean_s862 lean_s863 lean_s864
let lean_s866 := by timed congr lean_s399 lean_s865
let lean_s867 := by timed flipCongrArg lean_s693 [And]
have lean_s868 : (Eq let759 let810) := by timed congr lean_s867 lean_s723
have lean_s869 : let859 := by timed rfl
have lean_s870 : let858 := by timed rfl
have lean_s871 : (Eq let760 let811) := by timed congrIte lean_s868 lean_s869 lean_s870
let lean_s872 := by timed congr lean_s399 lean_s871
let lean_s873 := by timed flipCongrArg lean_s717 [And]
have lean_s874 : (Eq let757 let808) := by timed congr lean_s873 lean_s747
have lean_s875 : let857 := by timed rfl
have lean_s876 : let856 := by timed rfl
have lean_s877 : (Eq let758 let809) := by timed congrIte lean_s874 lean_s875 lean_s876
let lean_s878 := by timed congr lean_s399 lean_s877
let lean_s879 := by timed flipCongrArg lean_s741 [And]
let lean_s880 := by timed flipCongrArg lean_s544 [Eq]
have lean_s881 : (Eq let376 let386) := by timed congr lean_s880 lean_s842
have lean_s882 : (Eq let755 let806) := by timed congr lean_s879 lean_s881
have lean_s883 : let855 := by timed rfl
have lean_s884 : let854 := by timed rfl
have lean_s885 : (Eq let756 let807) := by timed congrIte lean_s882 lean_s883 lean_s884
let lean_s886 := by timed congr lean_s399 lean_s885
have lean_s887 : let852 := by timed rfl
let lean_s888 := by timed flipCongrArg lean_s571 [Eq]
have lean_s889 : (Eq let753 let414) := by timed congr lean_s888 lean_s549
let lean_s890 := by timed congr lean_s887 lean_s889
let lean_s891 := by timed flipCongrArg lean_s571 [Eq]
let lean_s892 := by timed flipCongrArg lean_s567 [HAdd.hAdd]
have lean_s893 : (Eq let122 let297) := by timed congr lean_s892 lean_s549
have lean_s894 : (Eq let752 let804) := by timed congr lean_s891 lean_s893
let lean_s895 := by timed congr lean_s887 lean_s894
let lean_s896 := by timed flipCongrArg lean_s571 [Eq]
let lean_s897 := by timed flipCongrArg lean_s527 [HAdd.hAdd]
have lean_s898 : (Eq let164 let371) := by timed congr lean_s897 lean_s549
have lean_s899 : (Eq let751 let803) := by timed congr lean_s896 lean_s898
let lean_s900 := by timed congr lean_s887 lean_s899
let lean_s901 := by timed flipCongrArg lean_s571 [Eq]
have lean_s902 : (Eq let10 let10) := by timed rfl
let lean_s903 := by timed flipCongrArg lean_s902 [HAdd.hAdd]
have lean_s904 : (Eq let154 let305) := by timed congr lean_s903 lean_s549
have lean_s905 : (Eq let750 let802) := by timed congr lean_s901 lean_s904
let lean_s906 := by timed congr lean_s887 lean_s905
let lean_s907 := by timed flipCongrArg lean_s571 [Eq]
let lean_s908 := by timed flipCongrArg lean_s522 [HAdd.hAdd]
have lean_s909 : (Eq let584 let353) := by timed congr lean_s908 lean_s549
have lean_s910 : (Eq let749 let801) := by timed congr lean_s907 lean_s909
let lean_s911 := by timed congr lean_s887 lean_s910
let lean_s912 := by timed flipCongrArg lean_s571 [Eq]
let lean_s913 := by timed flipCongrArg lean_s517 [HAdd.hAdd]
have lean_s914 : (Eq let254 let92) := by timed congr lean_s913 lean_s549
have lean_s915 : (Eq let748 let800) := by timed congr lean_s912 lean_s914
let lean_s916 := by timed congr lean_s911 lean_s915
let lean_s917 := by timed congr lean_s906 lean_s916
let lean_s918 := by timed congr lean_s900 lean_s917
let lean_s919 := by timed congr lean_s895 lean_s918
have lean_s920 : (Eq let754 let805) := by timed congr lean_s890 lean_s919
let lean_s921 := by timed congr lean_s399 lean_s920
have lean_s922 : let852 := by timed rfl
let lean_s923 := by timed flipCongrArg lean_s549 [Eq]
have lean_s924 : (Eq let332 let513) := by timed congr lean_s923 lean_s563
let lean_s925 := by timed congr lean_s922 lean_s924
let lean_s926 := by timed flipCongrArg lean_s549 [Eq]
let lean_s927 := by timed flipCongrArg lean_s561 [HAdd.hAdd]
have lean_s928 : (Eq let120 let119) := by timed congr lean_s927 lean_s563
have lean_s929 : (Eq let121 let798) := by timed congr lean_s926 lean_s928
let lean_s930 := by timed congr lean_s922 lean_s929
let lean_s931 := by timed flipCongrArg lean_s549 [Eq]
let lean_s932 := by timed flipCongrArg lean_s606 [HAdd.hAdd]
have lean_s933 : (Eq let162 let155) := by timed congr lean_s932 lean_s563
have lean_s934 : (Eq let163 let797) := by timed congr lean_s931 lean_s933
let lean_s935 := by timed congr lean_s930 lean_s934
have lean_s936 : (Eq let747 let799) := by timed congr lean_s925 lean_s935
let lean_s937 := by timed congr lean_s399 lean_s936
have lean_s938 : let851 := by timed rfl
let lean_s939 := by timed flipCongrArg lean_s534 [Eq]
have lean_s940 : (Eq let126 let126) := by timed rfl
have lean_s941 : (Eq let127 let481) := by timed congr lean_s939 lean_s940
let lean_s942 := by timed congr lean_s938 lean_s941
let lean_s943 := by timed flipCongrArg lean_s539 [Eq]
have lean_s944 : (Eq let378 let378) := by timed rfl
have lean_s945 : (Eq let379 let394) := by timed congr lean_s943 lean_s944
let lean_s946 := by timed congr lean_s938 lean_s945
let lean_s947 := by timed flipCongrArg lean_s515 [Eq]
have lean_s948 : (Eq let180 let282) := by timed flipCongrArg lean_s563 [selectx5fformat]
have lean_s949 : (Eq let198 let284) := by timed congr lean_s947 lean_s948
let lean_s950 := by timed congr lean_s938 lean_s949
let lean_s951 := by timed flipCongrArg lean_s520 [Eq]
let lean_s952 := by timed flipCongrArg lean_s567 [HAdd.hAdd]
have lean_s953 : (Eq let248 let240) := by timed congr lean_s952 lean_s563
have lean_s954 : (Eq let514 let793) := by timed flipCongrArg lean_s953 [selectx5fformat]
have lean_s955 : (Eq let515 let794) := by timed congr lean_s951 lean_s954
let lean_s956 := by timed congr lean_s938 lean_s955
let lean_s957 := by timed flipCongrArg lean_s525 [Eq]
let lean_s958 := by timed flipCongrArg lean_s527 [HAdd.hAdd]
have lean_s959 : (Eq let156 let307) := by timed congr lean_s958 lean_s563
have lean_s960 : (Eq let157 let791) := by timed flipCongrArg lean_s959 [selectx5fformat]
have lean_s961 : (Eq let158 let792) := by timed congr lean_s957 lean_s960
let lean_s962 := by timed congr lean_s938 lean_s961
let lean_s963 := by timed flipCongrArg lean_s530 [Eq]
let lean_s964 := by timed flipCongrArg lean_s902 [HAdd.hAdd]
have lean_s965 : (Eq let160 let296) := by timed congr lean_s964 lean_s563
have lean_s966 : (Eq let263 let789) := by timed flipCongrArg lean_s965 [selectx5fformat]
have lean_s967 : (Eq let264 let790) := by timed congr lean_s963 lean_s966
let lean_s968 := by timed congr lean_s962 lean_s967
let lean_s969 := by timed congr lean_s956 lean_s968
let lean_s970 := by timed congr lean_s950 lean_s969
let lean_s971 := by timed congr lean_s946 lean_s970
have lean_s972 : (Eq let745 let795) := by timed congr lean_s942 lean_s971
have lean_s973 : (Eq let746 let796) := by timed flipCongrArg lean_s972 [Not]
let lean_s974 := by timed congr lean_s937 lean_s973
let lean_s975 := by timed congr lean_s921 lean_s974
let lean_s976 := by timed congr lean_s886 lean_s975
let lean_s977 := by timed congr lean_s878 lean_s976
let lean_s978 := by timed congr lean_s872 lean_s977
let lean_s979 := by timed congr lean_s866 lean_s978
let lean_s980 := by timed congr lean_s860 lean_s979
let lean_s981 := by timed congr lean_s854 lean_s980
let lean_s982 := by timed congr lean_s848 lean_s981
let lean_s983 := by timed congr lean_s839 lean_s982
let lean_s984 := by timed congr lean_s833 lean_s983
let lean_s985 := by timed congr lean_s827 lean_s984
let lean_s986 := by timed congr lean_s821 lean_s985
let lean_s987 := by timed congr lean_s815 lean_s986
let lean_s988 := by timed congr lean_s809 lean_s987
let lean_s989 := by timed congr lean_s617 lean_s988
let lean_s990 := by timed congr lean_s603 lean_s989
let lean_s991 := by timed congr lean_s595 lean_s990
let lean_s992 := by timed congr lean_s586 lean_s991
let lean_s993 := by timed congr lean_s581 lean_s992
let lean_s994 := by timed congr lean_s570 lean_s993
let lean_s995 := by timed congr lean_s559 lean_s994
let lean_s996 := by timed congr lean_s553 lean_s995
let lean_s997 := by timed congr lean_s548 lean_s996
let lean_s998 := by timed congr lean_s543 lean_s997
let lean_s999 := by timed congr lean_s538 lean_s998
let lean_s1000 := by timed congr lean_s533 lean_s999
let lean_s1001 := by timed congr lean_s529 lean_s1000
let lean_s1002 := by timed congr lean_s524 lean_s1001
let lean_s1003 := by timed congr lean_s519 lean_s1002
let lean_s1004 := by timed congr lean_s514 lean_s1003
have lean_s1005 : (Eq let788 let850) := by timed congr lean_s509 lean_s1004
have lean_s1006 : let851 := by timed rfl
let lean_s1007 := by timed congr lean_s1006 lean_r106
let lean_s1008 := by timed congr lean_s1006 lean_r98
let lean_s1009 := by timed congr lean_s1006 lean_r96
let lean_s1010 := by timed congr lean_s1006 lean_r146
let lean_s1011 := by timed congr lean_s1006 lean_r137
let lean_s1012 := by timed congr lean_s1006 lean_r96
let lean_s1013 := by timed congr lean_s1006 lean_r43
let lean_s1014 := by timed congr lean_s1006 lean_r39
let lean_s1015 := by timed congr lean_s1006 lean_r93
let lean_s1016 := by timed congr lean_s1006 lean_r150
let lean_s1017 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1018 : (Eq let849 let400) := by timed congr lean_s1017 lean_r37
have lean_s1019 : (Eq let849 True) := by timed Eq.trans lean_s1018 lean_r150
let lean_s1020 := by timed congr lean_s1006 lean_s1019
let lean_s1021 := by timed flipCongrArg lean_s442 [HAdd.hAdd]
have lean_s1022 : (Eq let846 let205) := by timed congr lean_s1021 lean_r113
have lean_s1023 : (Eq let846 let204) := by timed Eq.trans lean_s1022 lean_r52
let lean_s1024 := by timed flipCongrArg lean_s1023 [GE.ge]
have lean_s1025 : let887 := by timed rfl
have lean_s1026 : (Eq let847 let508) := by timed congr lean_s1024 lean_s1025
have lean_s1027 : (Eq let847 let499) := by timed Eq.trans lean_s1026 lean_r179
have lean_s1028 : (Eq let848 let500) := by timed flipCongrArg lean_s1027 [Not]
have lean_s1029 : (Eq let848 let16) := by timed Eq.trans lean_s1028 lean_r172
let lean_s1030 := by timed congr lean_s1006 lean_s1029
let lean_s1031 := by timed congrHAdd lean_r67 lean_r159
have lean_s1032 : (Eq let843 let266) := by timed congrHAdd lean_s39 lean_s1031
have lean_s1033 : (Eq let843 let213) := by timed Eq.trans lean_s1032 lean_r77
let lean_s1034 := by timed flipCongrArg lean_s1033 [GE.ge]
have lean_s1035 : let886 := by timed rfl
have lean_s1036 : (Eq let844 let214) := by timed congr lean_s1034 lean_s1035
have lean_s1037 : (Eq let844 let210) := by timed Eq.trans lean_s1036 lean_r55
have lean_s1038 : (Eq let845 let359) := by timed flipCongrArg lean_s1037 [Not]
let lean_s1039 := by timed congr lean_s1006 lean_s1038
let lean_s1040 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s1041 : (Eq let831 let218) := by timed congr lean_s1040 lean_r67
have lean_s1042 : (Eq let831 fmt1) := by timed Eq.trans lean_s1041 lean_r57
let lean_s1043 := by timed flipCongrArg lean_s1042 [GE.ge]
have lean_s1044 : let382 := by timed rfl
have lean_s1045 : (Eq let842 let474) := by timed congr lean_s1043 lean_s1044
let lean_s1046 := by timed congr lean_s1006 lean_s1045
have lean_s1047 : (Eq let114 let114) := by timed rfl
have lean_s1048 : (Eq let113 let113) := by timed rfl
let lean_s1049 := by timed congrHAdd lean_r131 lean_r142
let lean_s1050 := by timed congrHAdd lean_s1048 lean_s1049
let lean_s1051 := by timed congrHAdd lean_s1047 lean_s1050
have lean_s1052 : (Eq let719 let493) := by timed congrHAdd lean_s478 lean_s1051
have lean_s1053 : (Eq let719 let118) := by timed Eq.trans lean_s1052 lean_r168
have lean_s1054 : (Eq let720 let118) := by timed Eq.trans lean_r273 lean_s1053
let lean_s1055 := by timed flipCongrArg lean_s1054 [GE.ge]
have lean_s1056 : (Eq let841 let219) := by timed congr lean_s1055 lean_s442
have lean_s1057 : (Eq let841 let16) := by timed Eq.trans lean_s1056 lean_r58
let lean_s1058 := by timed congr lean_s1006 lean_s1057
let lean_s1059 := by timed congrHAdd lean_r159 lean_r142
let lean_s1060 := by timed congrHAdd lean_r131 lean_s1059
let lean_s1061 := by timed congrHAdd lean_s1048 lean_s1060
let lean_s1062 := by timed congrHAdd lean_s1047 lean_s1061
have lean_s1063 : (Eq let229 let243) := by timed congrHAdd lean_s478 lean_s1062
have lean_s1064 : (Eq let229 let242) := by timed Eq.trans lean_s1063 lean_r65
have lean_s1065 : (Eq let230 let242) := by timed Eq.trans lean_r60 lean_s1064
let lean_s1066 := by timed flipCongrArg lean_s1065 [GE.ge]
have lean_s1067 : let885 := by timed rfl
have lean_s1068 : (Eq let839 let352) := by timed congr lean_s1066 lean_s1067
have lean_s1069 : (Eq let839 let351) := by timed Eq.trans lean_s1068 lean_r124
have lean_s1070 : (Eq let840 let473) := by timed flipCongrArg lean_s1069 [Not]
let lean_s1071 := by timed congr lean_s1006 lean_s1070
have lean_s1072 : let150 := by timed rfl
let lean_s1073 := by timed flipCongrArg lean_s1072 [Eq]
have lean_s1074 : (Eq let838 let150) := by timed congr lean_s1073 lean_s490
have lean_s1075 : (Eq let838 True) := by timed Eq.trans lean_s1074 lean_r30
let lean_s1076 := by timed congr lean_s1006 lean_s1075
have lean_s1077 : let852 := by timed rfl
let lean_s1078 := by timed congr lean_s1077 lean_r177
let lean_s1079 := by timed congr lean_s1077 lean_r75
let lean_s1080 := by timed congr lean_s1077 lean_r79
let lean_s1081 := by timed congr lean_s1077 lean_r83
let lean_s1082 := by timed congr lean_s1077 lean_r81
let lean_s1083 := by timed congr lean_s1077 lean_r73
let lean_s1084 := by timed congr lean_s1077 lean_r83
let lean_s1085 := by timed congr lean_s1077 lean_s105
let lean_s1086 := by timed congr lean_s1077 lean_r80
let lean_s1087 := by timed congr lean_s1077 lean_r105
let lean_s1088 := by timed congr lean_s1077 lean_r173
let lean_s1089 := by timed congr lean_s1077 lean_r182
let lean_s1090 := by timed congr lean_s1077 lean_r194
let lean_s1091 := by timed congr lean_s1077 lean_r193
let lean_s1092 := by timed congr lean_s1077 lean_r182
let lean_s1093 := by timed congr lean_s1077 lean_s114
let lean_s1094 := by timed congr lean_s1077 lean_r181
let lean_s1095 := by timed congr lean_s1077 lean_r44
let lean_s1096 := by timed congr lean_s1077 lean_r78
let lean_s1097 := by timed congr lean_s1077 lean_r176
let lean_s1098 := by timed congr lean_s1077 lean_r192
let lean_s1099 := by timed congr lean_s1077 lean_r162
let lean_s1100 := by timed congr lean_s1077 lean_r176
let lean_s1101 := by timed congr lean_s1077 lean_s123
let lean_s1102 := by timed congr lean_s1077 lean_r175
let lean_s1103 := by timed congr lean_s1077 lean_r190
let lean_s1104 := by timed congr lean_s1077 lean_r141
let lean_s1105 := by timed congr lean_s1077 lean_r171
let lean_s1106 := by timed congr lean_s1077 lean_r191
let lean_s1107 := by timed congr lean_s1077 lean_r84
let lean_s1108 := by timed congr lean_s1077 lean_r171
let lean_s1109 := by timed congr lean_s1077 lean_s132
let lean_s1110 := by timed congr lean_s1077 lean_r270
let lean_s1111 := by timed congr lean_s1077 lean_r277
let lean_s1112 := by timed congr lean_s1077 lean_r163
let lean_s1113 := by timed congr lean_s1077 lean_r143
let lean_s1114 := by timed congr lean_s1077 lean_r110
let lean_s1115 := by timed congr lean_s1077 lean_r108
let lean_s1116 := by timed congr lean_s1077 lean_r143
let lean_s1117 := by timed congr lean_s1077 lean_s141
let lean_s1118 := by timed congr lean_s1077 lean_r148
let lean_s1119 := by timed congr lean_s1077 lean_r53
let lean_s1120 := by timed congr lean_s1077 lean_r117
let lean_s1121 := by timed congr lean_s1077 lean_r165
let lean_s1122 := by timed congr lean_s1077 lean_r128
let lean_s1123 := by timed congr lean_s1077 lean_r119
let lean_s1124 := by timed congr lean_s1077 lean_r165
let lean_s1125 := by timed congr lean_s1124 lean_s150
let lean_s1126 := by timed congr lean_s1123 lean_s1125
let lean_s1127 := by timed congr lean_s1122 lean_s1126
let lean_s1128 := by timed congr lean_s1121 lean_s1127
let lean_s1129 := by timed congr lean_s1120 lean_s1128
let lean_s1130 := by timed congr lean_s1119 lean_s1129
let lean_s1131 := by timed congr lean_s1118 lean_s1130
let lean_s1132 := by timed congr lean_s1117 lean_s1131
let lean_s1133 := by timed congr lean_s1116 lean_s1132
let lean_s1134 := by timed congr lean_s1115 lean_s1133
let lean_s1135 := by timed congr lean_s1114 lean_s1134
let lean_s1136 := by timed congr lean_s1113 lean_s1135
let lean_s1137 := by timed congr lean_s1112 lean_s1136
let lean_s1138 := by timed congr lean_s1111 lean_s1137
let lean_s1139 := by timed congr lean_s1110 lean_s1138
let lean_s1140 := by timed congr lean_s1109 lean_s1139
let lean_s1141 := by timed congr lean_s1108 lean_s1140
let lean_s1142 := by timed congr lean_s1107 lean_s1141
let lean_s1143 := by timed congr lean_s1106 lean_s1142
let lean_s1144 := by timed congr lean_s1105 lean_s1143
let lean_s1145 := by timed congr lean_s1104 lean_s1144
let lean_s1146 := by timed congr lean_s1103 lean_s1145
let lean_s1147 := by timed congr lean_s1102 lean_s1146
let lean_s1148 := by timed congr lean_s1101 lean_s1147
let lean_s1149 := by timed congr lean_s1100 lean_s1148
let lean_s1150 := by timed congr lean_s1099 lean_s1149
let lean_s1151 := by timed congr lean_s1098 lean_s1150
let lean_s1152 := by timed congr lean_s1097 lean_s1151
let lean_s1153 := by timed congr lean_s1096 lean_s1152
let lean_s1154 := by timed congr lean_s1095 lean_s1153
let lean_s1155 := by timed congr lean_s1094 lean_s1154
let lean_s1156 := by timed congr lean_s1093 lean_s1155
let lean_s1157 := by timed congr lean_s1092 lean_s1156
let lean_s1158 := by timed congr lean_s1091 lean_s1157
let lean_s1159 := by timed congr lean_s1090 lean_s1158
let lean_s1160 := by timed congr lean_s1089 lean_s1159
let lean_s1161 := by timed congr lean_s1088 lean_s1160
let lean_s1162 := by timed congr lean_s1087 lean_s1161
let lean_s1163 := by timed congr lean_s1086 lean_s1162
let lean_s1164 := by timed congr lean_s1085 lean_s1163
let lean_s1165 := by timed congr lean_s1084 lean_s1164
let lean_s1166 := by timed congr lean_s1083 lean_s1165
let lean_s1167 := by timed congr lean_s1082 lean_s1166
let lean_s1168 := by timed congr lean_s1081 lean_s1167
let lean_s1169 := by timed congr lean_s1080 lean_s1168
let lean_s1170 := by timed congr lean_s1079 lean_s1169
have lean_s1171 : (Eq let830 let471) := by timed congr lean_s1078 lean_s1170
let lean_s1172 := by timed congr lean_s1006 lean_s1171
let lean_s1173 := by timed flipCongrArg lean_r177 [And]
have lean_s1174 : (Eq let828 let453) := by timed congr lean_s1173 lean_r105
have lean_s1175 : (Eq let829 let454) := by timed congrIte lean_s1174 lean_s202 lean_s203
let lean_s1176 := by timed congr lean_s1006 lean_s1175
let lean_s1177 := by timed flipCongrArg lean_r80 [And]
have lean_s1178 : (Eq let826 let451) := by timed congr lean_s1177 lean_r44
have lean_s1179 : let875 := by timed rfl
have lean_s1180 : let874 := by timed rfl
have lean_s1181 : (Eq let827 let452) := by timed congrIte lean_s1178 lean_s1179 lean_s1180
let lean_s1182 := by timed congr lean_s1006 lean_s1181
let lean_s1183 := by timed flipCongrArg lean_r181 [And]
have lean_s1184 : (Eq let824 let449) := by timed congr lean_s1183 lean_r190
have lean_s1185 : let873 := by timed rfl
have lean_s1186 : let872 := by timed rfl
have lean_s1187 : (Eq let825 let450) := by timed congrIte lean_s1184 lean_s1185 lean_s1186
let lean_s1188 := by timed congr lean_s1006 lean_s1187
let lean_s1189 := by timed flipCongrArg lean_r175 [And]
have lean_s1190 : (Eq let822 let446) := by timed congr lean_s1189 lean_r277
have lean_s1191 : let871 := by timed rfl
have lean_s1192 : let870 := by timed rfl
have lean_s1193 : (Eq let823 let447) := by timed congrIte lean_s1190 lean_s1191 lean_s1192
let lean_s1194 := by timed congr lean_s1006 lean_s1193
let lean_s1195 := by timed flipCongrArg lean_r270 [And]
have lean_s1196 : (Eq let820 let443) := by timed congr lean_s1195 lean_r53
have lean_s1197 : let869 := by timed rfl
have lean_s1198 : let868 := by timed rfl
have lean_s1199 : (Eq let821 let444) := by timed congrIte lean_s1196 lean_s1197 lean_s1198
let lean_s1200 := by timed congr lean_s1006 lean_s1199
let lean_s1201 := by timed flipCongrArg lean_r148 [And]
have lean_s1202 : (Eq let818 let440) := by timed congr lean_s1201 lean_r180
have lean_s1203 : let867 := by timed rfl
have lean_s1204 : let866 := by timed rfl
have lean_s1205 : (Eq let819 let441) := by timed congrIte lean_s1202 lean_s1203 lean_s1204
let lean_s1206 := by timed congr lean_s1006 lean_s1205
let lean_s1207 := by timed flipCongrArg lean_r177 [And]
have lean_s1208 : (Eq let816 let434) := by timed congr lean_s1207 lean_r173
have lean_s1209 : (Eq let817 let435) := by timed congrIte lean_s1208 lean_s248 lean_s249
let lean_s1210 := by timed congr lean_s1006 lean_s1209
let lean_s1211 := by timed flipCongrArg lean_r80 [And]
have lean_s1212 : (Eq let814 let430) := by timed congr lean_s1211 lean_r78
have lean_s1213 : let863 := by timed rfl
have lean_s1214 : let862 := by timed rfl
have lean_s1215 : (Eq let815 let431) := by timed congrIte lean_s1212 lean_s1213 lean_s1214
let lean_s1216 := by timed congr lean_s1006 lean_s1215
let lean_s1217 := by timed flipCongrArg lean_r181 [And]
have lean_s1218 : (Eq let812 let428) := by timed congr lean_s1217 lean_r141
have lean_s1219 : let861 := by timed rfl
have lean_s1220 : let860 := by timed rfl
have lean_s1221 : (Eq let813 let429) := by timed congrIte lean_s1218 lean_s1219 lean_s1220
let lean_s1222 := by timed congr lean_s1006 lean_s1221
let lean_s1223 := by timed flipCongrArg lean_r175 [And]
have lean_s1224 : (Eq let810 let425) := by timed congr lean_s1223 lean_r163
have lean_s1225 : let859 := by timed rfl
have lean_s1226 : let858 := by timed rfl
have lean_s1227 : (Eq let811 let426) := by timed congrIte lean_s1224 lean_s1225 lean_s1226
let lean_s1228 := by timed congr lean_s1006 lean_s1227
let lean_s1229 := by timed flipCongrArg lean_r270 [And]
have lean_s1230 : (Eq let808 let420) := by timed congr lean_s1229 lean_r117
have lean_s1231 : let857 := by timed rfl
have lean_s1232 : let856 := by timed rfl
have lean_s1233 : (Eq let809 let421) := by timed congrIte lean_s1230 lean_s1231 lean_s1232
let lean_s1234 := by timed congr lean_s1006 lean_s1233
let lean_s1235 := by timed flipCongrArg lean_r148 [And]
have lean_s1236 : (Eq let806 let416) := by timed congr lean_s1235 lean_r139
have lean_s1237 : let855 := by timed rfl
have lean_s1238 : let854 := by timed rfl
have lean_s1239 : (Eq let807 let417) := by timed congrIte lean_s1236 lean_s1237 lean_s1238
let lean_s1240 := by timed congr lean_s1006 lean_s1239
have lean_s1241 : let852 := by timed rfl
have lean_s1242 : (Eq let414 let414) := by timed rfl
let lean_s1243 := by timed congr lean_s1241 lean_s1242
let lean_s1244 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1245 : (Eq let804 let413) := by timed congr lean_s1244 lean_r95
let lean_s1246 := by timed congr lean_s1241 lean_s1245
let lean_s1247 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1248 : (Eq let803 let145) := by timed congr lean_s1247 lean_r132
let lean_s1249 := by timed congr lean_s1241 lean_s1248
let lean_s1250 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1251 : (Eq let802 let44) := by timed congr lean_s1250 lean_r100
let lean_s1252 := by timed congr lean_s1241 lean_s1251
let lean_s1253 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1254 : (Eq let801 let9) := by timed congr lean_s1253 lean_r125
let lean_s1255 := by timed congr lean_s1241 lean_s1254
let lean_s1256 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1257 : (Eq let800 let412) := by timed congr lean_s1256 lean_r15
let lean_s1258 := by timed congr lean_s1255 lean_s1257
let lean_s1259 := by timed congr lean_s1252 lean_s1258
let lean_s1260 := by timed congr lean_s1249 lean_s1259
let lean_s1261 := by timed congr lean_s1246 lean_s1260
have lean_s1262 : (Eq let805 let415) := by timed congr lean_s1243 lean_s1261
let lean_s1263 := by timed congr lean_s1006 lean_s1262
have lean_s1264 : let852 := by timed rfl
let lean_s1265 := by timed congr lean_s1264 lean_r184
let lean_s1266 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1267 : let330 := by timed Eq.trans lean_r23 lean_r112
have lean_s1268 : (Eq let798 let304) := by timed congr lean_s1266 lean_s1267
have lean_s1269 : (Eq let798 False) := by timed Eq.trans lean_s1268 lean_r99
let lean_s1270 := by timed congr lean_s1264 lean_s1269
let lean_s1271 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1272 : let743 := by timed Eq.trans lean_r33 lean_r286
have lean_s1273 : (Eq let797 let329) := by timed congr lean_s1271 lean_s1272
have lean_s1274 : (Eq let797 False) := by timed Eq.trans lean_s1273 lean_r111
let lean_s1275 := by timed congr lean_s1270 lean_s1274
have lean_s1276 : (Eq let799 let482) := by timed congr lean_s1265 lean_s1275
have lean_s1277 : (Eq let799 let411) := by timed Eq.trans lean_s1276 lean_r161
let lean_s1278 := by timed congr lean_s1006 lean_s1277
have lean_s1279 : let851 := by timed rfl
let lean_s1280 := by timed congr lean_s1279 lean_r160
let lean_s1281 := by timed congr lean_s1279 lean_r145
let lean_s1282 := by timed congr lean_s1279 lean_r86
let lean_s1283 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1284 : let241 := by timed Eq.trans lean_r89 lean_r63
have lean_s1285 : (Eq let793 let299) := by timed flipCongrArg lean_s1284 [selectx5fformat]
have lean_s1286 : (Eq let794 let301) := by timed congr lean_s1283 lean_s1285
have lean_s1287 : (Eq let794 let300) := by timed Eq.trans lean_s1286 lean_r97
let lean_s1288 := by timed congr lean_s1279 lean_s1287
let lean_s1289 := by timed flipCongrArg lean_s1044 [Eq]
have lean_s1290 : let308 := by timed Eq.trans lean_r123 lean_r101
have lean_s1291 : (Eq let791 let372) := by timed flipCongrArg lean_s1290 [selectx5fformat]
have lean_s1292 : (Eq let792 let374) := by timed congr lean_s1289 lean_s1291
have lean_s1293 : (Eq let792 let373) := by timed Eq.trans lean_s1292 lean_r133
let lean_s1294 := by timed congr lean_s1279 lean_s1293
have lean_s1295 : let298 := by timed rfl
let lean_s1296 := by timed flipCongrArg lean_s1295 [Eq]
have lean_s1297 : let325 := by timed Eq.trans lean_r94 lean_r109
have lean_s1298 : (Eq let789 let343) := by timed flipCongrArg lean_s1297 [selectx5fformat]
have lean_s1299 : (Eq let790 let345) := by timed congr lean_s1296 lean_s1298
have lean_s1300 : (Eq let790 let344) := by timed Eq.trans lean_s1299 lean_r120
let lean_s1301 := by timed congr lean_s1294 lean_s1300
let lean_s1302 := by timed congr lean_s1288 lean_s1301
let lean_s1303 := by timed congr lean_s1282 lean_s1302
let lean_s1304 := by timed congr lean_s1281 lean_s1303
have lean_s1305 : (Eq let795 let408) := by timed congr lean_s1280 lean_s1304
have lean_s1306 : (Eq let796 let409) := by timed flipCongrArg lean_s1305 [Not]
let lean_s1307 := by timed congr lean_s1278 lean_s1306
let lean_s1308 := by timed congr lean_s1263 lean_s1307
let lean_s1309 := by timed congr lean_s1240 lean_s1308
let lean_s1310 := by timed congr lean_s1234 lean_s1309
let lean_s1311 := by timed congr lean_s1228 lean_s1310
let lean_s1312 := by timed congr lean_s1222 lean_s1311
let lean_s1313 := by timed congr lean_s1216 lean_s1312
let lean_s1314 := by timed congr lean_s1210 lean_s1313
let lean_s1315 := by timed congr lean_s1206 lean_s1314
let lean_s1316 := by timed congr lean_s1200 lean_s1315
let lean_s1317 := by timed congr lean_s1194 lean_s1316
let lean_s1318 := by timed congr lean_s1188 lean_s1317
let lean_s1319 := by timed congr lean_s1182 lean_s1318
let lean_s1320 := by timed congr lean_s1176 lean_s1319
let lean_s1321 := by timed congr lean_s1172 lean_s1320
let lean_s1322 := by timed congr lean_s1076 lean_s1321
let lean_s1323 := by timed congr lean_s1071 lean_s1322
let lean_s1324 := by timed congr lean_s1058 lean_s1323
let lean_s1325 := by timed congr lean_s1046 lean_s1324
let lean_s1326 := by timed congr lean_s1039 lean_s1325
let lean_s1327 := by timed congr lean_s1030 lean_s1326
let lean_s1328 := by timed congr lean_s1020 lean_s1327
let lean_s1329 := by timed congr lean_s1016 lean_s1328
let lean_s1330 := by timed congr lean_s1015 lean_s1329
let lean_s1331 := by timed congr lean_s1014 lean_s1330
let lean_s1332 := by timed congr lean_s1013 lean_s1331
let lean_s1333 := by timed congr lean_s1012 lean_s1332
let lean_s1334 := by timed congr lean_s1011 lean_s1333
let lean_s1335 := by timed congr lean_s1010 lean_s1334
let lean_s1336 := by timed congr lean_s1009 lean_s1335
let lean_s1337 := by timed congr lean_s1008 lean_s1336
have lean_s1338 : (Eq let850 let476) := by timed congr lean_s1007 lean_s1337
have lean_s1339 : (Eq let850 let475) := by timed Eq.trans lean_s1338 lean_r155
have lean_s1340 : (Eq let788 let475) := by timed Eq.trans lean_s1005 lean_s1339
have lean_s1341 : (Eq let697 let475) := by timed Eq.trans lean_s398 lean_s1340
have lean_s1342 : let475 := by timed eqResolve lean_a288 lean_s1341
have lean_s1343 : let450 := by andElim lean_s1342, 7
have lean_s1344 : (Or let919 let27) := by timed iteElim1 lean_s1343
have lean_s1345 : (Or let27 let919) := by permutateOr lean_s1344, [1, 0], (- 1)
have lean_s1346 : (Or let449 let37) := by timed iteElim2 lean_s1343
have lean_s1347 : (Or let37 let449) := by permutateOr lean_s1346, [1, 0], (- 1)
have lean_s1348 : (Or let1180 (Or let923 (Or let981 let1132))) :=
  (scope (fun lean_a303 : let33 =>
    (scope (fun lean_a304 : let31 =>
      (scope (fun lean_a305 : let29 =>
        (scope (fun lean_a306 : let37 =>
          (scope (fun lean_a307 : let24 =>
            (scope (fun lean_a308 : let20 =>
              (scope (fun lean_a309 : let16 =>
                (scope (fun lean_a310 : let9 =>
                  have lean_s1348 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1349 : let717 := by timed eqResolve lean_a310 lean_s1348
                  let lean_s1350 := by timed And.intro lean_a307 lean_a304
                  let lean_s1351 := by timed And.intro lean_a308 lean_s1350
                  have lean_s1352 : let1089 := by timed And.intro lean_s1349 lean_s1351
                  have lean_s1353 : let1091 :=
                    (scope (fun lean_a304 : let717 =>
                      (scope (fun lean_a305 : let20 =>
                        (scope (fun lean_a306 : let24 =>
                          (scope (fun lean_a307 : let31 =>
                            have lean_s1353 : let968 := by timed Eq.symm lean_a307
                            have lean_s1354 : let555 := by timed Eq.symm lean_a306
                            have lean_s1355 : let24 := by timed Eq.symm lean_s1354
                            let lean_s1356 := by timed Eq.trans lean_s1353 lean_s1355
                            have lean_s1357 : let546 := by timed Eq.symm lean_a305
                            have lean_s1358 : let20 := by timed Eq.symm lean_s1357
                            let lean_s1359 := by timed Eq.trans lean_s1356 lean_s1358
                            have lean_s1360 : let1075 := by timed Eq.symm lean_a304
                            have lean_s1361 : let717 := by timed Eq.symm lean_s1360
                            have lean_s1362 : let1078 := by timed flipCongrArg lean_s1361 [xx5fcount]
                            have lean_s1363 : let931 := by timed Eq.trans lean_s1359 lean_s1362
                            show let931 from lean_s1363
                    ))))))))
                  have lean_s1354 : let1090 := by liftOrNToImp lean_s1353, 4
                  have lean_s1355 : let931 := by timed modusPonens lean_s1352 lean_s1354
                  let lean_s1356 := by timed And.intro lean_a305 lean_a303
                  let lean_s1357 := by timed And.intro lean_a306 lean_s1356
                  have lean_s1358 : let1190 := by timed And.intro lean_s1349 lean_s1357
                  have lean_s1359 : let1192 :=
                    (scope (fun lean_a304 : let717 =>
                      (scope (fun lean_a305 : let37 =>
                        (scope (fun lean_a306 : let29 =>
                          (scope (fun lean_a307 : let33 =>
                            have lean_s1359 : let1184 := by timed Eq.symm lean_a307
                            have lean_s1360 : let336 := by timed Eq.symm lean_a306
                            have lean_s1361 : let29 := by timed Eq.symm lean_s1360
                            let lean_s1362 := by timed Eq.trans lean_s1359 lean_s1361
                            have lean_s1363 : let167 := by timed Eq.symm lean_a305
                            have lean_s1364 : let37 := by timed Eq.symm lean_s1363
                            let lean_s1365 := by timed Eq.trans lean_s1362 lean_s1364
                            have lean_s1366 : let1075 := by timed Eq.symm lean_a304
                            have lean_s1367 : let717 := by timed Eq.symm lean_s1366
                            have lean_s1368 : let1074 := by timed flipCongrArg lean_s1367 [sx5fcount]
                            have lean_s1369 : let1003 := by timed Eq.trans lean_s1365 lean_s1368
                            show let1003 from lean_s1369
                    ))))))))
                  have lean_s1360 : let1191 := by liftOrNToImp lean_s1359, 4
                  have lean_s1361 : let1003 := by timed modusPonens lean_s1358 lean_s1360
                  let lean_s1362 := by timed And.intro lean_s1355 lean_s1361
                  have lean_s1363 : let1004 := by timed And.intro lean_a309 lean_s1362
                  show let1004 from lean_s1363
  ))))))))))))))))
have lean_s1349 : let1193 := by liftOrNToImp lean_s1348, 8
have lean_s1350 : (Eq let41 let41) := by timed rfl
let lean_s1351 := by timed flipCongrArg lean_s1350 [Implies]
have lean_s1352 : (Or let499 (Or let936 let1007)) :=
  (scope (fun lean_a304 : let16 =>
    (scope (fun lean_a305 : let931 =>
      (scope (fun lean_a306 : let1003 =>
        have lean_s1352 : let1008 := by timed Eq.symm lean_a306
        have lean_s1353 : let1010 :=
          (scope (fun lean_a305 : let1008 =>
            have lean_s1353 : let714 := by timed trueElim lean_r269
            have lean_s1354 : let1014 := by timed And.intro lean_s1353 lean_a305
            have lean_s1355 : let1015 := by arithMulPos [let14, let4, let53], 4
            have lean_s1356 : let1013 := by timed modusPonens lean_s1354 lean_s1355
            have lean_s1357 : let948 := by timed Eq.symm lean_a305
            have lean_s1358 : let949 := by timed And.intro lean_s1353 lean_s1357
            have lean_s1359 : let950 := by arithMulPos [let13, let22, let53], 4
            have lean_s1360 : let947 := by timed modusPonens lean_s1358 lean_s1359
            have lean_s1361 : let713 := by timed trueElim lean_r268
            have lean_s1362 : let945 := by timed And.intro lean_s1361 lean_a304
            have lean_s1363 : let946 := by arithMulNeg [let15, let10, let55], 3
            have lean_s1364 : let944 := by timed modusPonens lean_s1362 lean_s1363
            have lean_s1365 : let1012 := by sumBounds [lean_s1356, lean_s1360, lean_s1364]
            let lean_s1366 := by timed congrHAdd lean_r213 lean_r267
            have lean_s1367 : (Eq let942 let711) := by timed congrHAdd lean_r54 lean_s1366
            have lean_s1368 : (Eq let942 let56) := by timed Eq.trans lean_s1367 lean_r266
            let lean_s1369 := by timed flipCongrArg lean_s1368 [LE.le]
            let lean_s1370 := by timed congrHAdd lean_r265 lean_r263
            have lean_s1371 : (Eq let1011 let708) := by timed congrHAdd lean_r208 lean_s1370
            have lean_s1372 : (Eq let1011 let285) := by timed Eq.trans lean_s1371 lean_r264
            have lean_s1373 : (Eq let1012 let735) := by timed congr lean_s1369 lean_s1372
            have lean_s1374 : (Eq let1012 False) := by timed Eq.trans lean_s1373 lean_r280
            show False from by timed eqResolve lean_s1365 lean_s1374
          ))
        have lean_s1354 : let1009 := by liftOrNToNeg lean_s1353
        show False from by timed contradiction lean_s1352 lean_s1354
  ))))))
have lean_s1353 : (Not let1004) := by liftOrNToNeg lean_s1352
have lean_s1354 : let1006 := by timed falseIntro lean_s1353
have lean_s1355 : (Eq let1193 let43) := by timed congr lean_s1351 lean_s1354
have lean_s1356 : (Eq let1193 let42) := by timed Eq.trans lean_s1355 lean_r2
have lean_s1357 : let42 := by timed eqResolve lean_s1349 lean_s1356
have lean_s1358 : (Or let1180 let1087) := by timed flipNotAnd lean_s1357 [let33, let31, let29, let37, let24, let20, let16, let9]
have lean_s1359 : (Or let499 (Or let1180 let1083)) := by permutateOr lean_s1358, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
have lean_s1360 : let16 := by andElim lean_s1342, 0
let lean_s1361 := by R2 lean_s1359, lean_s1360, let16, [(- 1), 0]
have lean_s1362 : let454 := by andElim lean_s1342, 5
have lean_s1363 : (Or let921 let33) := by timed iteElim1 lean_s1362
have lean_s1364 : (Or let33 let921) := by permutateOr lean_s1363, [1, 0], (- 1)
have lean_s1365 : (Or let453 let59) := by timed iteElim2 lean_s1362
have lean_s1366 : (Or let59 let453) := by permutateOr lean_s1365, [1, 0], (- 1)
have lean_s1367 : (Or let902 (Or let1142 (Or let981 (Or let1064 (Or let977 (Or let1115 (Or let499 (Or let593 let1165)))))))) :=
  (scope (fun lean_a306 : let59 =>
    (scope (fun lean_a307 : let58 =>
      (scope (fun lean_a308 : let29 =>
        (scope (fun lean_a309 : let37 =>
          (scope (fun lean_a310 : let24 =>
            (scope (fun lean_a311 : let80 =>
              (scope (fun lean_a312 : let16 =>
                (scope (fun lean_a313 : let9 =>
                  have lean_s1367 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1368 : let717 := by timed eqResolve lean_a313 lean_s1367
                  let lean_s1369 := by timed And.intro lean_a310 lean_a307
                  have lean_s1370 : let1174 := by timed And.intro lean_a311 lean_s1369
                  have lean_s1371 : (Or let1115 (Or let977 (Or let1142 let99))) :=
                    (scope (fun lean_a309 : let80 =>
                      (scope (fun lean_a310 : let24 =>
                        (scope (fun lean_a311 : let58 =>
                          have lean_s1371 : let1149 := by timed Eq.symm lean_a311
                          have lean_s1372 : let555 := by timed Eq.symm lean_a310
                          have lean_s1373 : let24 := by timed Eq.symm lean_s1372
                          let lean_s1374 := by timed Eq.trans lean_s1371 lean_s1373
                          have lean_s1375 : let1130 := by timed Eq.symm lean_a309
                          have lean_s1376 : let80 := by timed Eq.symm lean_s1375
                          have lean_s1377 : let99 := by timed Eq.trans lean_s1374 lean_s1376
                          show let99 from lean_s1377
                    ))))))
                  have lean_s1372 : (Implies let1174 let99) := by liftOrNToImp lean_s1371, 3
                  have lean_s1373 : let99 := by timed modusPonens lean_s1370 lean_s1372
                  have lean_s1374 : (Or (Not let99) let1172) :=
                    (scope (fun lean_a309 : let99 =>
                      have lean_s1374 : let98 := by timed eqResolve lean_a309 lean_r18
                      have lean_s1375 : let1172 := by timed Eq.symm lean_s1374
                      show let1172 from lean_s1375
                    ))
                  have lean_s1375 : (Implies let99 let1172) := by liftOrNToImp lean_s1374, 1
                  have lean_s1376 : let1172 := by timed modusPonens lean_s1373 lean_s1375
                  have lean_s1377 : let1173 := by timed And.intro lean_s1368 lean_s1376
                  have lean_s1378 : (Or let1072 (Or (Not let1172) let1164)) :=
                    (scope (fun lean_a310 : let717 =>
                      (scope (fun lean_a311 : let1172 =>
                        have lean_s1378 : let98 := by timed Eq.symm lean_a311
                        have lean_s1379 : let1172 := by timed Eq.symm lean_s1378
                        have lean_s1380 : let1075 := by timed Eq.symm lean_a310
                        have lean_s1381 : let717 := by timed Eq.symm lean_s1380
                        have lean_s1382 : let1078 := by timed flipCongrArg lean_s1381 [xx5fcount]
                        have lean_s1383 : let1164 := by timed Eq.trans lean_s1379 lean_s1382
                        show let1164 from lean_s1383
                    ))))
                  have lean_s1379 : (Implies let1173 let1164) := by liftOrNToImp lean_s1378, 2
                  have lean_s1380 : let1164 := by timed modusPonens lean_s1377 lean_s1379
                  let lean_s1381 := by timed And.intro lean_a308 lean_a306
                  let lean_s1382 := by timed And.intro lean_a309 lean_s1381
                  have lean_s1383 : let1070 := by timed And.intro lean_s1368 lean_s1382
                  have lean_s1384 : let1073 :=
                    (scope (fun lean_a311 : let717 =>
                      (scope (fun lean_a312 : let37 =>
                        (scope (fun lean_a313 : let29 =>
                          (scope (fun lean_a314 : let59 =>
                            have lean_s1384 : let961 := by timed Eq.symm lean_a314
                            have lean_s1385 : let336 := by timed Eq.symm lean_a313
                            have lean_s1386 : let29 := by timed Eq.symm lean_s1385
                            let lean_s1387 := by timed Eq.trans lean_s1384 lean_s1386
                            have lean_s1388 : let167 := by timed Eq.symm lean_a312
                            have lean_s1389 : let37 := by timed Eq.symm lean_s1388
                            let lean_s1390 := by timed Eq.trans lean_s1387 lean_s1389
                            have lean_s1391 : let1075 := by timed Eq.symm lean_a311
                            have lean_s1392 : let717 := by timed Eq.symm lean_s1391
                            have lean_s1393 : let1074 := by timed flipCongrArg lean_s1392 [sx5fcount]
                            have lean_s1394 : let930 := by timed Eq.trans lean_s1390 lean_s1393
                            show let930 from lean_s1394
                    ))))))))
                  have lean_s1385 : let1071 := by liftOrNToImp lean_s1384, 4
                  have lean_s1386 : let930 := by timed modusPonens lean_s1383 lean_s1385
                  let lean_s1387 := by timed And.intro lean_s1380 lean_s1386
                  have lean_s1388 : let1165 := by timed And.intro lean_a312 lean_s1387
                  show let1165 from lean_s1388
  ))))))))))))))))
have lean_s1368 : let1166 := by liftOrNToImp lean_s1367, 8
have lean_s1369 : (Eq let725 let725) := by timed rfl
let lean_s1370 := by timed flipCongrArg lean_s1369 [Implies]
have lean_s1371 : (Or let499 (Or (Not let1164) let935)) :=
  (scope (fun lean_a311 : let16 =>
    (scope (fun lean_a312 : let1164 =>
      (scope (fun lean_a313 : let930 =>
        have lean_s1371 : let937 := by timed Eq.symm lean_a313
        have lean_s1372 : let939 :=
          (scope (fun lean_a313 : let937 =>
            have lean_s1372 : let714 := by timed trueElim lean_r269
            have lean_s1373 : let952 := by timed And.intro lean_s1372 lean_a313
            have lean_s1374 : let953 := by arithMulPos [let14, let22, let53], 4
            have lean_s1375 : let951 := by timed modusPonens lean_s1373 lean_s1374
            have lean_s1376 : let1170 := by timed Eq.symm lean_a312
            have lean_s1377 : let1171 := by timed And.intro lean_s1372 lean_s1376
            have lean_s1378 : (Implies let1171 let1169) := by arithMulPos [let13, let1, let53], 4
            have lean_s1379 : let1169 := by timed modusPonens lean_s1377 lean_s1378
            have lean_s1380 : let713 := by timed trueElim lean_r268
            have lean_s1381 : let945 := by timed And.intro lean_s1380 lean_a311
            have lean_s1382 : let946 := by arithMulNeg [let15, let10, let55], 3
            have lean_s1383 : let944 := by timed modusPonens lean_s1381 lean_s1382
            have lean_s1384 : let1168 := by sumBounds [lean_s1375, lean_s1379, lean_s1383]
            let lean_s1385 := by timed congrHAdd lean_r213 lean_r267
            have lean_s1386 : (Eq let942 let711) := by timed congrHAdd lean_r54 lean_s1385
            have lean_s1387 : (Eq let942 let56) := by timed Eq.trans lean_s1386 lean_r266
            let lean_s1388 := by timed flipCongrArg lean_s1387 [LE.le]
            let lean_s1389 := by timed congrHAdd lean_r4 lean_r263
            have lean_s1390 : (Eq let1167 let381) := by timed congrHAdd lean_r265 lean_s1389
            have lean_s1391 : (Eq let1167 let55) := by timed Eq.trans lean_s1390 lean_r136
            have lean_s1392 : (Eq let1168 let57) := by timed congr lean_s1388 lean_s1391
            have lean_s1393 : (Eq let1168 False) := by timed Eq.trans lean_s1392 lean_r5
            show False from by timed eqResolve lean_s1384 lean_s1393
          ))
        have lean_s1373 : let938 := by liftOrNToNeg lean_s1372
        show False from by timed contradiction lean_s1371 lean_s1373
  ))))))
have lean_s1372 : (Not let1165) := by liftOrNToNeg lean_s1371
have lean_s1373 : (Eq let1165 False) := by timed falseIntro lean_s1372
have lean_s1374 : (Eq let1166 let727) := by timed congr lean_s1370 lean_s1373
have lean_s1375 : (Eq let1166 let726) := by timed Eq.trans lean_s1374 lean_r276
have lean_s1376 : let726 := by timed eqResolve lean_s1368 lean_s1375
have lean_s1377 : (Or let902 (Or let1142 let1118)) := by timed flipNotAnd lean_s1376 [let59, let58, let29, let37, let24, let80, let16, let9]
have lean_s1378 : (Or let499 (Or let902 (Or let981 (Or let1064 (Or let1142 let1116))))) := by permutateOr lean_s1377, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1379 := by R2 lean_s1378, lean_s1360, let16, [(- 1), 0]
let lean_s1380 := by R2 lean_s1379, lean_s1347, let37, [(- 1), (- 1)]
have lean_s1381 : (Or let919 let448) := by timed @cnfAndPos [let427, let448] 1
have lean_s1382 : (Or let448 let919) := by permutateOr lean_s1381, [1, 0], (- 1)
let lean_s1383 := by R1 lean_s1380, lean_s1382, let449, [(- 1), (- 1)]
have lean_s1384 : let1113 :=
  (scope (fun lean_a314 : let388 =>
    have lean_s1384 : let1113 :=
      (scope (fun lean_a315 : let388 =>
        have lean_s1384 : let389 := by timed Eq.symm lean_a315
        have lean_s1385 : let388 := by timed Eq.symm lean_s1384
        let lean_s1386 := by timed flipCongrArg lean_s1385 [Eq]
        have lean_s1387 : let169 := by timed rfl
        have lean_s1388 : (Eq let448 let699) := by timed congr lean_s1386 lean_s1387
        have lean_s1389 : (Eq let701 let171) := by timed flipCongrArg lean_r257 [Not]
        have lean_s1390 : (Eq let701 True) := by timed Eq.trans lean_s1389 lean_r41
        have lean_s1391 : (Eq let700 True) := by timed Eq.trans lean_r258 lean_s1390
        have lean_s1392 : let700 := by timed trueElim lean_s1391
        have lean_s1393 : (Eq let448 False) := by timed Eq.trans lean_s1388 lean_s1392
        have lean_s1394 : let1112 := by timed falseElim lean_s1393
        show let1112 from lean_s1394
      ))
    have lean_s1385 : let1114 := by liftOrNToImp lean_s1384, 1
    have lean_s1386 : let1112 := by timed modusPonens lean_a314 lean_s1385
    show let1112 from lean_s1386
  ))
have lean_s1385 : let1114 := by liftOrNToImp lean_s1384, 1
have lean_s1386 : let1113 := by timed impliesElim lean_s1385
have lean_s1387 : (Or let1112 let1111) := by permutateOr lean_s1386, [1, 0], (- 1)
let lean_s1388 := by R1 lean_s1383, lean_s1387, let448, [(- 1), (- 1)]
have lean_s1389 : let429 := by andElim lean_s1342, 13
have lean_s1390 : (Or let920 let80) := by timed iteElim1 lean_s1389
have lean_s1391 : (Or let80 let920) := by permutateOr lean_s1390, [1, 0], (- 1)
let lean_s1392 := by R2 lean_s1388, lean_s1391, let80, [(- 1), (- 1)]
have lean_s1393 : (Or let920 let388) := by timed @cnfAndPos [let427, let388] 1
have lean_s1394 : (Or let388 let920) := by permutateOr lean_s1393, [1, 0], (- 1)
have lean_s1395 : (Or let902 (Or let981 (Or let1142 let1110))) := by R2 lean_s1392, lean_s1394, let388, [(- 1), (- 1)]
have lean_s1396 : (Or let902 (Or let981 (Or let1142 let1108))) := by factor lean_s1395, (- 1)
have lean_s1397 : (Or let428 let20) := by timed iteElim2 lean_s1389
have lean_s1398 : (Or let20 let428) := by permutateOr lean_s1397, [1, 0], (- 1)
let lean_s1399 := by R2 lean_s1396, lean_s1398, let428, [(- 1), (- 1)]
have lean_s1400 : (Or let902 (Or let1142 (Or let981 (Or let1092 (Or let977 (Or let1062 let1163)))))) :=
  (scope (fun lean_a315 : let59 =>
    (scope (fun lean_a316 : let58 =>
      (scope (fun lean_a317 : let29 =>
        (scope (fun lean_a318 : let27 =>
          (scope (fun lean_a319 : let24 =>
            (scope (fun lean_a320 : let20 =>
              (scope (fun lean_a321 : let16 =>
                (scope (fun lean_a322 : let9 =>
                  have lean_s1400 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1401 : let717 := by timed eqResolve lean_a322 lean_s1400
                  let lean_s1402 := by timed And.intro lean_a319 lean_a316
                  let lean_s1403 := by timed And.intro lean_a320 lean_s1402
                  have lean_s1404 : let1155 := by timed And.intro lean_s1401 lean_s1403
                  have lean_s1405 : let1157 :=
                    (scope (fun lean_a315 : let717 =>
                      (scope (fun lean_a316 : let20 =>
                        (scope (fun lean_a317 : let24 =>
                          (scope (fun lean_a318 : let58 =>
                            have lean_s1405 : let1149 := by timed Eq.symm lean_a318
                            have lean_s1406 : let555 := by timed Eq.symm lean_a317
                            have lean_s1407 : let24 := by timed Eq.symm lean_s1406
                            let lean_s1408 := by timed Eq.trans lean_s1405 lean_s1407
                            have lean_s1409 : let546 := by timed Eq.symm lean_a316
                            have lean_s1410 : let20 := by timed Eq.symm lean_s1409
                            let lean_s1411 := by timed Eq.trans lean_s1408 lean_s1410
                            have lean_s1412 : let1075 := by timed Eq.symm lean_a315
                            have lean_s1413 : let717 := by timed Eq.symm lean_s1412
                            have lean_s1414 : let1078 := by timed flipCongrArg lean_s1413 [xx5fcount]
                            have lean_s1415 : let1026 := by timed Eq.trans lean_s1411 lean_s1414
                            show let1026 from lean_s1415
                    ))))))))
                  have lean_s1406 : let1156 := by liftOrNToImp lean_s1405, 4
                  have lean_s1407 : let1026 := by timed modusPonens lean_s1404 lean_s1406
                  let lean_s1408 := by timed And.intro lean_a317 lean_a315
                  have lean_s1409 : let1104 := by timed And.intro lean_a318 lean_s1408
                  have lean_s1410 : let1106 :=
                    (scope (fun lean_a315 : let27 =>
                      (scope (fun lean_a316 : let29 =>
                        (scope (fun lean_a317 : let59 =>
                          have lean_s1410 : let961 := by timed Eq.symm lean_a317
                          have lean_s1411 : let336 := by timed Eq.symm lean_a316
                          have lean_s1412 : let29 := by timed Eq.symm lean_s1411
                          let lean_s1413 := by timed Eq.trans lean_s1410 lean_s1412
                          have lean_s1414 : let1107 := by timed Eq.symm lean_a315
                          have lean_s1415 : let27 := by timed Eq.symm lean_s1414
                          have lean_s1416 : let87 := by timed Eq.trans lean_s1413 lean_s1415
                          show let87 from lean_s1416
                    ))))))
                  have lean_s1411 : let1105 := by liftOrNToImp lean_s1410, 3
                  have lean_s1412 : let87 := by timed modusPonens lean_s1409 lean_s1411
                  have lean_s1413 : let1103 :=
                    (scope (fun lean_a315 : let87 =>
                      have lean_s1413 : let86 := by timed eqResolve lean_a315 lean_r13
                      have lean_s1414 : let1098 := by timed Eq.symm lean_s1413
                      show let1098 from lean_s1414
                    ))
                  have lean_s1414 : let1102 := by liftOrNToImp lean_s1413, 1
                  have lean_s1415 : let1098 := by timed modusPonens lean_s1412 lean_s1414
                  have lean_s1416 : let1099 := by timed And.intro lean_s1401 lean_s1415
                  have lean_s1417 : let1101 :=
                    (scope (fun lean_a316 : let717 =>
                      (scope (fun lean_a317 : let1098 =>
                        have lean_s1417 : let86 := by timed Eq.symm lean_a317
                        have lean_s1418 : let1098 := by timed Eq.symm lean_s1417
                        have lean_s1419 : let1075 := by timed Eq.symm lean_a316
                        have lean_s1420 : let717 := by timed Eq.symm lean_s1419
                        have lean_s1421 : let1074 := by timed flipCongrArg lean_s1420 [sx5fcount]
                        have lean_s1422 : let1003 := by timed Eq.trans lean_s1418 lean_s1421
                        show let1003 from lean_s1422
                    ))))
                  have lean_s1418 : let1100 := by liftOrNToImp lean_s1417, 2
                  have lean_s1419 : let1003 := by timed modusPonens lean_s1416 lean_s1418
                  let lean_s1420 := by timed And.intro lean_s1407 lean_s1419
                  have lean_s1421 : let1158 := by timed And.intro lean_a321 lean_s1420
                  show let1158 from lean_s1421
  ))))))))))))))))
have lean_s1401 : let1159 := by liftOrNToImp lean_s1400, 8
have lean_s1402 : (Eq let60 let60) := by timed rfl
let lean_s1403 := by timed flipCongrArg lean_s1402 [Implies]
have lean_s1404 : (Or let499 (Or let1030 let1007)) :=
  (scope (fun lean_a317 : let16 =>
    (scope (fun lean_a318 : let1026 =>
      (scope (fun lean_a319 : let1003 =>
        have lean_s1404 : let1008 := by timed Eq.symm lean_a319
        have lean_s1405 : let1010 :=
          (scope (fun lean_a318 : let1008 =>
            have lean_s1405 : let714 := by timed trueElim lean_r269
            have lean_s1406 : let1014 := by timed And.intro lean_s1405 lean_a318
            have lean_s1407 : let1015 := by arithMulPos [let14, let4, let53], 4
            have lean_s1408 : let1013 := by timed modusPonens lean_s1406 lean_s1407
            have lean_s1409 : let1035 := by timed Eq.symm lean_a318
            have lean_s1410 : let1036 := by timed And.intro lean_s1405 lean_s1409
            have lean_s1411 : let1037 := by arithMulPos [let13, let4, let53], 4
            have lean_s1412 : let1034 := by timed modusPonens lean_s1410 lean_s1411
            have lean_s1413 : let713 := by timed trueElim lean_r268
            have lean_s1414 : let945 := by timed And.intro lean_s1413 lean_a317
            have lean_s1415 : let946 := by arithMulNeg [let15, let10, let55], 3
            have lean_s1416 : let944 := by timed modusPonens lean_s1414 lean_s1415
            have lean_s1417 : let1162 := by sumBounds [lean_s1408, lean_s1412, lean_s1416]
            let lean_s1418 := by timed congrHAdd lean_r213 lean_r267
            have lean_s1419 : (Eq let942 let711) := by timed congrHAdd lean_r54 lean_s1418
            have lean_s1420 : (Eq let942 let56) := by timed Eq.trans lean_s1419 lean_r266
            let lean_s1421 := by timed flipCongrArg lean_s1420 [LE.le]
            let lean_s1422 := by timed congrHAdd lean_r208 lean_r263
            have lean_s1423 : (Eq let1161 let387) := by timed congrHAdd lean_r208 lean_s1422
            have lean_s1424 : (Eq let1161 let55) := by timed Eq.trans lean_s1423 lean_r140
            have lean_s1425 : (Eq let1162 let57) := by timed congr lean_s1421 lean_s1424
            have lean_s1426 : (Eq let1162 False) := by timed Eq.trans lean_s1425 lean_r5
            show False from by timed eqResolve lean_s1417 lean_s1426
          ))
        have lean_s1406 : let1009 := by liftOrNToNeg lean_s1405
        show False from by timed contradiction lean_s1404 lean_s1406
  ))))))
have lean_s1405 : (Not let1158) := by liftOrNToNeg lean_s1404
have lean_s1406 : let1160 := by timed falseIntro lean_s1405
have lean_s1407 : (Eq let1159 let62) := by timed congr lean_s1403 lean_s1406
have lean_s1408 : (Eq let1159 let61) := by timed Eq.trans lean_s1407 lean_r6
have lean_s1409 : let61 := by timed eqResolve lean_s1401 lean_s1408
have lean_s1410 : (Or let902 (Or let1142 let1094)) := by timed flipNotAnd lean_s1409 [let59, let58, let29, let27, let24, let20, let16, let9]
have lean_s1411 : (Or let499 (Or let902 (Or let981 (Or let1092 let1152)))) := by permutateOr lean_s1410, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1412 := by R2 lean_s1411, lean_s1360, let16, [(- 1), 0]
let lean_s1413 := by R2 lean_s1412, lean_s1345, let27, [(- 1), (- 1)]
let lean_s1414 := by R2 lean_s1413, lean_s1347, let449, [(- 1), (- 1)]
have lean_s1415 : (Or let902 (Or let1142 (Or let981 (Or let1064 (Or let977 let1069))))) :=
  (scope (fun lean_a318 : let59 =>
    (scope (fun lean_a319 : let58 =>
      (scope (fun lean_a320 : let29 =>
        (scope (fun lean_a321 : let37 =>
          (scope (fun lean_a322 : let24 =>
            (scope (fun lean_a323 : let20 =>
              (scope (fun lean_a324 : let16 =>
                (scope (fun lean_a325 : let9 =>
                  have lean_s1415 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1416 : let717 := by timed eqResolve lean_a325 lean_s1415
                  let lean_s1417 := by timed And.intro lean_a322 lean_a319
                  let lean_s1418 := by timed And.intro lean_a323 lean_s1417
                  have lean_s1419 : let1155 := by timed And.intro lean_s1416 lean_s1418
                  have lean_s1420 : let1157 :=
                    (scope (fun lean_a318 : let717 =>
                      (scope (fun lean_a319 : let20 =>
                        (scope (fun lean_a320 : let24 =>
                          (scope (fun lean_a321 : let58 =>
                            have lean_s1420 : let1149 := by timed Eq.symm lean_a321
                            have lean_s1421 : let555 := by timed Eq.symm lean_a320
                            have lean_s1422 : let24 := by timed Eq.symm lean_s1421
                            let lean_s1423 := by timed Eq.trans lean_s1420 lean_s1422
                            have lean_s1424 : let546 := by timed Eq.symm lean_a319
                            have lean_s1425 : let20 := by timed Eq.symm lean_s1424
                            let lean_s1426 := by timed Eq.trans lean_s1423 lean_s1425
                            have lean_s1427 : let1075 := by timed Eq.symm lean_a318
                            have lean_s1428 : let717 := by timed Eq.symm lean_s1427
                            have lean_s1429 : let1078 := by timed flipCongrArg lean_s1428 [xx5fcount]
                            have lean_s1430 : let1026 := by timed Eq.trans lean_s1426 lean_s1429
                            show let1026 from lean_s1430
                    ))))))))
                  have lean_s1421 : let1156 := by liftOrNToImp lean_s1420, 4
                  have lean_s1422 : let1026 := by timed modusPonens lean_s1419 lean_s1421
                  let lean_s1423 := by timed And.intro lean_a320 lean_a318
                  let lean_s1424 := by timed And.intro lean_a321 lean_s1423
                  have lean_s1425 : let1070 := by timed And.intro lean_s1416 lean_s1424
                  have lean_s1426 : let1073 :=
                    (scope (fun lean_a318 : let717 =>
                      (scope (fun lean_a319 : let37 =>
                        (scope (fun lean_a320 : let29 =>
                          (scope (fun lean_a321 : let59 =>
                            have lean_s1426 : let961 := by timed Eq.symm lean_a321
                            have lean_s1427 : let336 := by timed Eq.symm lean_a320
                            have lean_s1428 : let29 := by timed Eq.symm lean_s1427
                            let lean_s1429 := by timed Eq.trans lean_s1426 lean_s1428
                            have lean_s1430 : let167 := by timed Eq.symm lean_a319
                            have lean_s1431 : let37 := by timed Eq.symm lean_s1430
                            let lean_s1432 := by timed Eq.trans lean_s1429 lean_s1431
                            have lean_s1433 : let1075 := by timed Eq.symm lean_a318
                            have lean_s1434 : let717 := by timed Eq.symm lean_s1433
                            have lean_s1435 : let1074 := by timed flipCongrArg lean_s1434 [sx5fcount]
                            have lean_s1436 : let930 := by timed Eq.trans lean_s1432 lean_s1435
                            show let930 from lean_s1436
                    ))))))))
                  have lean_s1427 : let1071 := by liftOrNToImp lean_s1426, 4
                  have lean_s1428 : let930 := by timed modusPonens lean_s1425 lean_s1427
                  let lean_s1429 := by timed And.intro lean_s1422 lean_s1428
                  have lean_s1430 : let1027 := by timed And.intro lean_a324 lean_s1429
                  show let1027 from lean_s1430
  ))))))))))))))))
have lean_s1416 : let1154 := by liftOrNToImp lean_s1415, 8
have lean_s1417 : (Eq let63 let63) := by timed rfl
let lean_s1418 := by timed flipCongrArg lean_s1417 [Implies]
have lean_s1419 : (Or let499 (Or let1030 let935)) :=
  (scope (fun lean_a318 : let16 =>
    (scope (fun lean_a319 : let1026 =>
      (scope (fun lean_a320 : let930 =>
        have lean_s1419 : let937 := by timed Eq.symm lean_a320
        have lean_s1420 : let939 :=
          (scope (fun lean_a318 : let937 =>
            have lean_s1420 : let714 := by timed trueElim lean_r269
            have lean_s1421 : let952 := by timed And.intro lean_s1420 lean_a318
            have lean_s1422 : let953 := by arithMulPos [let14, let22, let53], 4
            have lean_s1423 : let951 := by timed modusPonens lean_s1421 lean_s1422
            have lean_s1424 : let1035 := by timed Eq.symm lean_a319
            have lean_s1425 : let1036 := by timed And.intro lean_s1420 lean_s1424
            have lean_s1426 : let1037 := by arithMulPos [let13, let4, let53], 4
            have lean_s1427 : let1034 := by timed modusPonens lean_s1425 lean_s1426
            have lean_s1428 : let713 := by timed trueElim lean_r268
            have lean_s1429 : let945 := by timed And.intro lean_s1428 lean_a318
            have lean_s1430 : let946 := by arithMulNeg [let15, let10, let55], 3
            have lean_s1431 : let944 := by timed modusPonens lean_s1429 lean_s1430
            have lean_s1432 : let1033 := by sumBounds [lean_s1423, lean_s1427, lean_s1431]
            let lean_s1433 := by timed congrHAdd lean_r213 lean_r267
            have lean_s1434 : (Eq let942 let711) := by timed congrHAdd lean_r54 lean_s1433
            have lean_s1435 : (Eq let942 let56) := by timed Eq.trans lean_s1434 lean_r266
            let lean_s1436 := by timed flipCongrArg lean_s1435 [LE.le]
            let lean_s1437 := by timed congrHAdd lean_r208 lean_r263
            have lean_s1438 : (Eq let1032 let288) := by timed congrHAdd lean_r265 lean_s1437
            have lean_s1439 : (Eq let1032 let285) := by timed Eq.trans lean_s1438 lean_r87
            have lean_s1440 : (Eq let1033 let735) := by timed congr lean_s1436 lean_s1439
            have lean_s1441 : (Eq let1033 False) := by timed Eq.trans lean_s1440 lean_r280
            show False from by timed eqResolve lean_s1432 lean_s1441
          ))
        have lean_s1421 : let938 := by liftOrNToNeg lean_s1420
        show False from by timed contradiction lean_s1419 lean_s1421
  ))))))
have lean_s1420 : (Not let1027) := by liftOrNToNeg lean_s1419
have lean_s1421 : let1029 := by timed falseIntro lean_s1420
have lean_s1422 : (Eq let1154 let65) := by timed congr lean_s1418 lean_s1421
have lean_s1423 : (Eq let1154 let64) := by timed Eq.trans lean_s1422 lean_r7
have lean_s1424 : let64 := by timed eqResolve lean_s1416 lean_s1423
have lean_s1425 : (Or let902 (Or let1142 let1086)) := by timed flipNotAnd lean_s1424 [let59, let58, let29, let37, let24, let20, let16, let9]
have lean_s1426 : (Or let499 (Or let902 (Or let981 (Or let1064 let1152)))) := by permutateOr lean_s1425, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1427 := by R1 lean_s1414, lean_s1426, let37, [(- 1), (- 1)]
have lean_s1428 : (Or let902 (Or let981 (Or let1142 (Or let977 (Or let1062 (Or let593 let1153)))))) := by R2 lean_s1427, lean_s1360, let16, [(- 1), 0]
have lean_s1429 : let1153 := by factor lean_s1428, (- 1)
have lean_s1430 : let431 := by andElim lean_s1342, 12
have lean_s1431 : (Or let430 let24) := by timed iteElim2 lean_s1430
have lean_s1432 : (Or let24 let430) := by permutateOr lean_s1431, [1, 0], (- 1)
let lean_s1433 := by R2 lean_s1429, lean_s1432, let24, [(- 1), (- 1)]
have lean_s1434 : (Or let918 let271) := by timed @cnfAndPos [let271, let267] 0
have lean_s1435 : (Or let271 let918) := by permutateOr lean_s1434, [1, 0], (- 1)
let lean_s1436 := by R1 lean_s1433, lean_s1435, let430, [(- 1), (- 1)]
have lean_s1437 : (Or let1137 (Or let1135 let915)) := by timed cnfAndNeg [let433, let271]
have lean_s1438 : let1136 :=
  (scope (fun lean_a318 : let433 =>
    (scope (fun lean_a319 : let271 =>
      have lean_s1438 : let1137 := by timed And.intro lean_a318 lean_a319
      have lean_s1439 : let1136 :=
        (scope (fun lean_a320 : let433 =>
          (scope (fun lean_a321 : let271 =>
            have lean_s1439 : let272 := by timed Eq.symm lean_a321
            have lean_s1440 : let271 := by timed Eq.symm lean_s1439
            have lean_s1441 : let505 := by timed Eq.symm lean_a320
            have lean_s1442 : (Eq let244 let231) := by timed Eq.trans lean_s1440 lean_s1441
            let lean_s1443 := by timed flipCongrArg lean_s1442 [Eq]
            have lean_s1444 : let295 := by timed rfl
            have lean_s1445 : (Eq let432 let269) := by timed congr lean_s1443 lean_s1444
            let lean_s1446 := by timed flipCongrArg lean_a320 [Eq]
            have lean_s1447 : (Eq let269 let71) := by timed congr lean_s1446 lean_s1444
            have lean_s1448 : (Eq let72 let171) := by timed flipCongrArg lean_r10 [Not]
            have lean_s1449 : (Eq let72 True) := by timed Eq.trans lean_s1448 lean_r41
            have lean_s1450 : (Eq let73 True) := by timed Eq.trans lean_r9 lean_s1449
            have lean_s1451 : let73 := by timed trueElim lean_s1450
            have lean_s1452 : (Eq let269 False) := by timed Eq.trans lean_s1447 lean_s1451
            have lean_s1453 : let1139 := by timed Eq.trans lean_s1445 lean_s1452
            have lean_s1454 : let1134 := by timed falseElim lean_s1453
            show let1134 from lean_s1454
        ))))
      have lean_s1440 : let1138 := by liftOrNToImp lean_s1439, 2
      have lean_s1441 : let1134 := by timed modusPonens lean_s1438 lean_s1440
      show let1134 from lean_s1441
  ))))
have lean_s1439 : let1138 := by liftOrNToImp lean_s1438, 2
have lean_s1440 : (Or (Not let1137) let1134) := by timed impliesElim lean_s1439
have lean_s1441 : let1136 := by R1 lean_s1437, lean_s1440, let1137, [(- 1), (- 1)]
let lean_s1442 := by R1 lean_s1436, lean_s1441, let271, [(- 1), (- 1)]
have lean_s1443 : (Or let902 (Or let923 (Or let916 let1132))) :=
  (scope (fun lean_a320 : let59 =>
    (scope (fun lean_a321 : let31 =>
      (scope (fun lean_a322 : let75 =>
        (scope (fun lean_a323 : let37 =>
          (scope (fun lean_a324 : let24 =>
            (scope (fun lean_a325 : let20 =>
              (scope (fun lean_a326 : let16 =>
                (scope (fun lean_a327 : let9 =>
                  have lean_s1443 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1444 : let717 := by timed eqResolve lean_a327 lean_s1443
                  let lean_s1445 := by timed And.intro lean_a324 lean_a321
                  let lean_s1446 := by timed And.intro lean_a325 lean_s1445
                  have lean_s1447 : let1089 := by timed And.intro lean_s1444 lean_s1446
                  have lean_s1448 : let1091 :=
                    (scope (fun lean_a321 : let717 =>
                      (scope (fun lean_a322 : let20 =>
                        (scope (fun lean_a323 : let24 =>
                          (scope (fun lean_a324 : let31 =>
                            have lean_s1448 : let968 := by timed Eq.symm lean_a324
                            have lean_s1449 : let555 := by timed Eq.symm lean_a323
                            have lean_s1450 : let24 := by timed Eq.symm lean_s1449
                            let lean_s1451 := by timed Eq.trans lean_s1448 lean_s1450
                            have lean_s1452 : let546 := by timed Eq.symm lean_a322
                            have lean_s1453 : let20 := by timed Eq.symm lean_s1452
                            let lean_s1454 := by timed Eq.trans lean_s1451 lean_s1453
                            have lean_s1455 : let1075 := by timed Eq.symm lean_a321
                            have lean_s1456 : let717 := by timed Eq.symm lean_s1455
                            have lean_s1457 : let1078 := by timed flipCongrArg lean_s1456 [xx5fcount]
                            have lean_s1458 : let931 := by timed Eq.trans lean_s1454 lean_s1457
                            show let931 from lean_s1458
                    ))))))))
                  have lean_s1449 : let1090 := by liftOrNToImp lean_s1448, 4
                  have lean_s1450 : let931 := by timed modusPonens lean_s1447 lean_s1449
                  have lean_s1451 : let1022 := by timed And.intro lean_a322 lean_a320
                  have lean_s1452 : let1024 :=
                    (scope (fun lean_a321 : let75 =>
                      (scope (fun lean_a322 : let59 =>
                        have lean_s1452 : let961 := by timed Eq.symm lean_a322
                        have lean_s1453 : (Eq let74 let28) := by timed Eq.symm lean_a321
                        have lean_s1454 : let75 := by timed Eq.symm lean_s1453
                        have lean_s1455 : let738 := by timed Eq.trans lean_s1452 lean_s1454
                        show let738 from lean_s1455
                    ))))
                  have lean_s1453 : let1023 := by liftOrNToImp lean_s1452, 2
                  have lean_s1454 : let738 := by timed modusPonens lean_s1451 lean_s1453
                  have lean_s1455 : let1021 :=
                    (scope (fun lean_a321 : let738 =>
                      have lean_s1455 : let737 := by timed eqResolve lean_a321 lean_r282
                      have lean_s1456 : let1017 := by timed Eq.symm lean_s1455
                      show let1017 from lean_s1456
                    ))
                  have lean_s1456 : let1020 := by liftOrNToImp lean_s1455, 1
                  have lean_s1457 : let1017 := by timed modusPonens lean_s1454 lean_s1456
                  let lean_s1458 := by timed And.intro lean_a323 lean_s1457
                  have lean_s1459 : let1133 := by timed And.intro lean_s1444 lean_s1458
                  have lean_s1460 : (Or let1072 (Or let1064 let1019)) :=
                    (scope (fun lean_a322 : let717 =>
                      (scope (fun lean_a323 : let37 =>
                        (scope (fun lean_a324 : let1017 =>
                          have lean_s1460 : let737 := by timed Eq.symm lean_a324
                          have lean_s1461 : let1017 := by timed Eq.symm lean_s1460
                          have lean_s1462 : let167 := by timed Eq.symm lean_a323
                          have lean_s1463 : let37 := by timed Eq.symm lean_s1462
                          let lean_s1464 := by timed Eq.trans lean_s1461 lean_s1463
                          have lean_s1465 : let1075 := by timed Eq.symm lean_a322
                          have lean_s1466 : let717 := by timed Eq.symm lean_s1465
                          have lean_s1467 : let1074 := by timed flipCongrArg lean_s1466 [sx5fcount]
                          have lean_s1468 : let1003 := by timed Eq.trans lean_s1464 lean_s1467
                          show let1003 from lean_s1468
                    ))))))
                  have lean_s1461 : (Implies let1133 let1003) := by liftOrNToImp lean_s1460, 3
                  have lean_s1462 : let1003 := by timed modusPonens lean_s1459 lean_s1461
                  let lean_s1463 := by timed And.intro lean_s1450 lean_s1462
                  have lean_s1464 : let1004 := by timed And.intro lean_a326 lean_s1463
                  show let1004 from lean_s1464
  ))))))))))))))))
have lean_s1444 : let1131 := by liftOrNToImp lean_s1443, 8
have lean_s1445 : (Eq let76 let76) := by timed rfl
let lean_s1446 := by timed flipCongrArg lean_s1445 [Implies]
have lean_s1447 : let1006 := by timed falseIntro lean_s1353
have lean_s1448 : (Eq let1131 let78) := by timed congr lean_s1446 lean_s1447
have lean_s1449 : (Eq let1131 let77) := by timed Eq.trans lean_s1448 lean_r11
have lean_s1450 : let77 := by timed eqResolve lean_s1444 lean_s1449
have lean_s1451 : (Or let902 (Or let923 (Or let916 let1085))) := by timed flipNotAnd lean_s1450 [let59, let31, let75, let37, let24, let20, let16, let9]
have lean_s1452 : (Or let499 (Or let902 (Or let916 let1082))) := by permutateOr lean_s1451, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1453 := by R2 lean_s1452, lean_s1360, let16, [(- 1), 0]
let lean_s1454 := by R2 lean_s1453, lean_s1398, let20, [(- 1), (- 1)]
let lean_s1455 := by R2 lean_s1454, lean_s1347, let37, [(- 1), (- 1)]
have lean_s1456 : (Or let920 let427) := by timed @cnfAndPos [let427, let388] 0
have lean_s1457 : (Or let427 let920) := by permutateOr lean_s1456, [1, 0], (- 1)
let lean_s1458 := by R1 lean_s1455, lean_s1457, let428, [(- 1), (- 1)]
have lean_s1459 : (Or let919 let427) := by timed @cnfAndPos [let427, let448] 0
have lean_s1460 : (Or let427 let919) := by permutateOr lean_s1459, [1, 0], (- 1)
let lean_s1461 := by R1 lean_s1458, lean_s1460, let449, [(- 1), (- 1)]
let lean_s1462 := by R2 lean_s1461, lean_s1432, let24, [(- 1), (- 1)]
have lean_s1463 : (Or let918 let267) := by timed @cnfAndPos [let271, let267] 1
have lean_s1464 : (Or let267 let918) := by permutateOr lean_s1463, [1, 0], (- 1)
have lean_s1465 : (Or let902 (Or let916 (Or let923 (Or let593 let917)))) := by R1 lean_s1462, lean_s1464, let430, [(- 1), (- 1)]
have lean_s1466 : (Or let902 (Or let916 (Or let923 (Or let593 let914)))) := by factor lean_s1465, (- 1)
have lean_s1467 : let911 :=
  (scope (fun lean_a323 : let188 =>
    have lean_s1467 : let911 :=
      (scope (fun lean_a324 : let188 =>
        have lean_s1467 : let189 := by timed Eq.symm lean_a324
        have lean_s1468 : let188 := by timed Eq.symm lean_s1467
        let lean_s1469 := by timed flipCongrArg lean_s1468 [Eq]
        have lean_s1470 : let186 := by timed rfl
        have lean_s1471 : (Eq let427 let369) := by timed congr lean_s1469 lean_s1470
        have lean_s1472 : (Eq let702 let171) := by timed flipCongrArg lean_r130 [Not]
        have lean_s1473 : (Eq let702 True) := by timed Eq.trans lean_s1472 lean_r41
        have lean_s1474 : (Eq let370 True) := by timed Eq.trans lean_r260 lean_s1473
        have lean_s1475 : let370 := by timed trueElim lean_s1474
        have lean_s1476 : let913 := by timed Eq.trans lean_s1471 lean_s1475
        have lean_s1477 : let910 := by timed falseElim lean_s1476
        show let910 from lean_s1477
      ))
    have lean_s1468 : let912 := by liftOrNToImp lean_s1467, 1
    have lean_s1469 : let910 := by timed modusPonens lean_a323 lean_s1468
    show let910 from lean_s1469
  ))
have lean_s1468 : let912 := by liftOrNToImp lean_s1467, 1
have lean_s1469 : let911 := by timed impliesElim lean_s1468
have lean_s1470 : (Or let910 let905) := by permutateOr lean_s1469, [1, 0], (- 1)
let lean_s1471 := by R1 lean_s1466, lean_s1470, let427, [(- 1), (- 1)]
have lean_s1472 : let908 :=
  (scope (fun lean_a324 : let267 =>
    have lean_s1472 : let908 :=
      (scope (fun lean_a325 : let267 =>
        have lean_s1472 : let268 := by timed Eq.symm lean_a325
        have lean_s1473 : let267 := by timed Eq.symm lean_s1472
        let lean_s1474 := by timed flipCongrArg lean_s1473 [Eq]
        have lean_s1475 : let169 := by timed rfl
        have lean_s1476 : (Eq let188 let699) := by timed congr lean_s1474 lean_s1475
        have lean_s1477 : (Eq let701 let171) := by timed flipCongrArg lean_r257 [Not]
        have lean_s1478 : (Eq let701 True) := by timed Eq.trans lean_s1477 lean_r41
        have lean_s1479 : (Eq let700 True) := by timed Eq.trans lean_r258 lean_s1478
        have lean_s1480 : let700 := by timed trueElim lean_s1479
        have lean_s1481 : (Eq let188 False) := by timed Eq.trans lean_s1476 lean_s1480
        have lean_s1482 : let905 := by timed falseElim lean_s1481
        show let905 from lean_s1482
      ))
    have lean_s1473 : let909 := by liftOrNToImp lean_s1472, 1
    have lean_s1474 : let905 := by timed modusPonens lean_a324 lean_s1473
    show let905 from lean_s1474
  ))
have lean_s1473 : let909 := by liftOrNToImp lean_s1472, 1
have lean_s1474 : let908 := by timed impliesElim lean_s1473
have lean_s1475 : (Or let905 let907) := by permutateOr lean_s1474, [1, 0], (- 1)
let lean_s1476 := by R1 lean_s1471, lean_s1475, let267, [(- 1), (- 1)]
have lean_s1477 : let452 := by andElim lean_s1342, 6
have lean_s1478 : (Or let903 let75) := by timed iteElim1 lean_s1477
have lean_s1479 : (Or let75 let903) := by permutateOr lean_s1478, [1, 0], (- 1)
have lean_s1480 : (Or let902 (Or let923 (Or let593 (Or let905 let906)))) := by R2 lean_s1476, lean_s1479, let75, [(- 1), (- 1)]
have lean_s1481 : (Or let902 (Or let923 (Or let593 let906))) := by factor lean_s1480, (- 1)
have lean_s1482 : (Or let903 let188) := by timed @cnfAndPos [let271, let188] 1
have lean_s1483 : (Or let188 let903) := by permutateOr lean_s1482, [1, 0], (- 1)
have lean_s1484 : (Or let902 (Or let923 (Or let593 let904))) := by R2 lean_s1481, lean_s1483, let188, [(- 1), (- 1)]
have lean_s1485 : (Or let902 (Or let923 (Or let593 let903))) := by factor lean_s1484, (- 1)
have lean_s1486 : (Or let451 let29) := by timed iteElim2 lean_s1477
have lean_s1487 : (Or let29 let451) := by permutateOr lean_s1486, [1, 0], (- 1)
let lean_s1488 := by R2 lean_s1485, lean_s1487, let451, [(- 1), (- 1)]
have lean_s1489 : (Or let902 (Or let923 (Or let981 (Or let1064 (Or let977 (Or let1115 let1068)))))) :=
  (scope (fun lean_a325 : let59 =>
    (scope (fun lean_a326 : let31 =>
      (scope (fun lean_a327 : let29 =>
        (scope (fun lean_a328 : let37 =>
          (scope (fun lean_a329 : let24 =>
            (scope (fun lean_a330 : let80 =>
              (scope (fun lean_a331 : let16 =>
                (scope (fun lean_a332 : let9 =>
                  have lean_s1489 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1490 : let717 := by timed eqResolve lean_a332 lean_s1489
                  let lean_s1491 := by timed And.intro lean_a329 lean_a326
                  have lean_s1492 : let1127 := by timed And.intro lean_a330 lean_s1491
                  have lean_s1493 : let1129 :=
                    (scope (fun lean_a325 : let80 =>
                      (scope (fun lean_a326 : let24 =>
                        (scope (fun lean_a327 : let31 =>
                          have lean_s1493 : let968 := by timed Eq.symm lean_a327
                          have lean_s1494 : let555 := by timed Eq.symm lean_a326
                          have lean_s1495 : let24 := by timed Eq.symm lean_s1494
                          let lean_s1496 := by timed Eq.trans lean_s1493 lean_s1495
                          have lean_s1497 : let1130 := by timed Eq.symm lean_a325
                          have lean_s1498 : let80 := by timed Eq.symm lean_s1497
                          have lean_s1499 : let310 := by timed Eq.trans lean_s1496 lean_s1498
                          show let310 from lean_s1499
                    ))))))
                  have lean_s1494 : let1128 := by liftOrNToImp lean_s1493, 3
                  have lean_s1495 : let310 := by timed modusPonens lean_s1492 lean_s1494
                  have lean_s1496 : let1126 :=
                    (scope (fun lean_a325 : let310 =>
                      have lean_s1496 : let309 := by timed eqResolve lean_a325 lean_r102
                      have lean_s1497 : let1121 := by timed Eq.symm lean_s1496
                      show let1121 from lean_s1497
                    ))
                  have lean_s1497 : let1125 := by liftOrNToImp lean_s1496, 1
                  have lean_s1498 : let1121 := by timed modusPonens lean_s1495 lean_s1497
                  have lean_s1499 : let1122 := by timed And.intro lean_s1490 lean_s1498
                  have lean_s1500 : let1124 :=
                    (scope (fun lean_a326 : let717 =>
                      (scope (fun lean_a327 : let1121 =>
                        have lean_s1500 : let309 := by timed Eq.symm lean_a327
                        have lean_s1501 : let1121 := by timed Eq.symm lean_s1500
                        have lean_s1502 : let1075 := by timed Eq.symm lean_a326
                        have lean_s1503 : let717 := by timed Eq.symm lean_s1502
                        have lean_s1504 : let1078 := by timed flipCongrArg lean_s1503 [xx5fcount]
                        have lean_s1505 : let1026 := by timed Eq.trans lean_s1501 lean_s1504
                        show let1026 from lean_s1505
                    ))))
                  have lean_s1501 : let1123 := by liftOrNToImp lean_s1500, 2
                  have lean_s1502 : let1026 := by timed modusPonens lean_s1499 lean_s1501
                  let lean_s1503 := by timed And.intro lean_a327 lean_a325
                  let lean_s1504 := by timed And.intro lean_a328 lean_s1503
                  have lean_s1505 : let1070 := by timed And.intro lean_s1490 lean_s1504
                  have lean_s1506 : let1073 :=
                    (scope (fun lean_a327 : let717 =>
                      (scope (fun lean_a328 : let37 =>
                        (scope (fun lean_a329 : let29 =>
                          (scope (fun lean_a330 : let59 =>
                            have lean_s1506 : let961 := by timed Eq.symm lean_a330
                            have lean_s1507 : let336 := by timed Eq.symm lean_a329
                            have lean_s1508 : let29 := by timed Eq.symm lean_s1507
                            let lean_s1509 := by timed Eq.trans lean_s1506 lean_s1508
                            have lean_s1510 : let167 := by timed Eq.symm lean_a328
                            have lean_s1511 : let37 := by timed Eq.symm lean_s1510
                            let lean_s1512 := by timed Eq.trans lean_s1509 lean_s1511
                            have lean_s1513 : let1075 := by timed Eq.symm lean_a327
                            have lean_s1514 : let717 := by timed Eq.symm lean_s1513
                            have lean_s1515 : let1074 := by timed flipCongrArg lean_s1514 [sx5fcount]
                            have lean_s1516 : let930 := by timed Eq.trans lean_s1512 lean_s1515
                            show let930 from lean_s1516
                    ))))))))
                  have lean_s1507 : let1071 := by liftOrNToImp lean_s1506, 4
                  have lean_s1508 : let930 := by timed modusPonens lean_s1505 lean_s1507
                  let lean_s1509 := by timed And.intro lean_s1502 lean_s1508
                  have lean_s1510 : let1027 := by timed And.intro lean_a331 lean_s1509
                  show let1027 from lean_s1510
  ))))))))))))))))
have lean_s1490 : let1120 := by liftOrNToImp lean_s1489, 8
have lean_s1491 : (Eq let83 let83) := by timed rfl
let lean_s1492 := by timed flipCongrArg lean_s1491 [Implies]
have lean_s1493 : let1029 := by timed falseIntro lean_s1420
have lean_s1494 : (Eq let1120 let85) := by timed congr lean_s1492 lean_s1493
have lean_s1495 : (Eq let1120 let84) := by timed Eq.trans lean_s1494 lean_r12
have lean_s1496 : let84 := by timed eqResolve lean_s1490 lean_s1495
have lean_s1497 : (Or let902 let1119) := by timed flipNotAnd lean_s1496 [let59, let31, let29, let37, let24, let80, let16, let9]
have lean_s1498 : (Or let499 (Or let902 let1117)) := by permutateOr lean_s1497, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1499 := by R2 lean_s1498, lean_s1360, let16, [(- 1), 0]
let lean_s1500 := by R2 lean_s1499, lean_s1347, let37, [(- 1), (- 1)]
let lean_s1501 := by R1 lean_s1500, lean_s1382, let449, [(- 1), (- 1)]
let lean_s1502 := by R1 lean_s1501, lean_s1387, let448, [(- 1), (- 1)]
let lean_s1503 := by R2 lean_s1502, lean_s1391, let80, [(- 1), (- 1)]
have lean_s1504 : (Or let902 (Or let981 (Or let923 let1110))) := by R2 lean_s1503, lean_s1394, let388, [(- 1), (- 1)]
have lean_s1505 : (Or let902 (Or let981 (Or let923 let1108))) := by factor lean_s1504, (- 1)
let lean_s1506 := by R2 lean_s1505, lean_s1398, let428, [(- 1), (- 1)]
have lean_s1507 : (Or let902 (Or let923 (Or let981 (Or let1092 let1097)))) :=
  (scope (fun lean_a327 : let59 =>
    (scope (fun lean_a328 : let31 =>
      (scope (fun lean_a329 : let29 =>
        (scope (fun lean_a330 : let27 =>
          (scope (fun lean_a331 : let24 =>
            (scope (fun lean_a332 : let20 =>
              (scope (fun lean_a333 : let16 =>
                (scope (fun lean_a334 : let9 =>
                  have lean_s1507 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1508 : let717 := by timed eqResolve lean_a334 lean_s1507
                  let lean_s1509 := by timed And.intro lean_a331 lean_a328
                  let lean_s1510 := by timed And.intro lean_a332 lean_s1509
                  have lean_s1511 : let1089 := by timed And.intro lean_s1508 lean_s1510
                  have lean_s1512 : let1091 :=
                    (scope (fun lean_a327 : let717 =>
                      (scope (fun lean_a328 : let20 =>
                        (scope (fun lean_a329 : let24 =>
                          (scope (fun lean_a330 : let31 =>
                            have lean_s1512 : let968 := by timed Eq.symm lean_a330
                            have lean_s1513 : let555 := by timed Eq.symm lean_a329
                            have lean_s1514 : let24 := by timed Eq.symm lean_s1513
                            let lean_s1515 := by timed Eq.trans lean_s1512 lean_s1514
                            have lean_s1516 : let546 := by timed Eq.symm lean_a328
                            have lean_s1517 : let20 := by timed Eq.symm lean_s1516
                            let lean_s1518 := by timed Eq.trans lean_s1515 lean_s1517
                            have lean_s1519 : let1075 := by timed Eq.symm lean_a327
                            have lean_s1520 : let717 := by timed Eq.symm lean_s1519
                            have lean_s1521 : let1078 := by timed flipCongrArg lean_s1520 [xx5fcount]
                            have lean_s1522 : let931 := by timed Eq.trans lean_s1518 lean_s1521
                            show let931 from lean_s1522
                    ))))))))
                  have lean_s1513 : let1090 := by liftOrNToImp lean_s1512, 4
                  have lean_s1514 : let931 := by timed modusPonens lean_s1511 lean_s1513
                  let lean_s1515 := by timed And.intro lean_a329 lean_a327
                  have lean_s1516 : let1104 := by timed And.intro lean_a330 lean_s1515
                  have lean_s1517 : let1106 :=
                    (scope (fun lean_a327 : let27 =>
                      (scope (fun lean_a328 : let29 =>
                        (scope (fun lean_a329 : let59 =>
                          have lean_s1517 : let961 := by timed Eq.symm lean_a329
                          have lean_s1518 : let336 := by timed Eq.symm lean_a328
                          have lean_s1519 : let29 := by timed Eq.symm lean_s1518
                          let lean_s1520 := by timed Eq.trans lean_s1517 lean_s1519
                          have lean_s1521 : let1107 := by timed Eq.symm lean_a327
                          have lean_s1522 : let27 := by timed Eq.symm lean_s1521
                          have lean_s1523 : let87 := by timed Eq.trans lean_s1520 lean_s1522
                          show let87 from lean_s1523
                    ))))))
                  have lean_s1518 : let1105 := by liftOrNToImp lean_s1517, 3
                  have lean_s1519 : let87 := by timed modusPonens lean_s1516 lean_s1518
                  have lean_s1520 : let1103 :=
                    (scope (fun lean_a327 : let87 =>
                      have lean_s1520 : let86 := by timed eqResolve lean_a327 lean_r13
                      have lean_s1521 : let1098 := by timed Eq.symm lean_s1520
                      show let1098 from lean_s1521
                    ))
                  have lean_s1521 : let1102 := by liftOrNToImp lean_s1520, 1
                  have lean_s1522 : let1098 := by timed modusPonens lean_s1519 lean_s1521
                  have lean_s1523 : let1099 := by timed And.intro lean_s1508 lean_s1522
                  have lean_s1524 : let1101 :=
                    (scope (fun lean_a327 : let717 =>
                      (scope (fun lean_a328 : let1098 =>
                        have lean_s1524 : let86 := by timed Eq.symm lean_a328
                        have lean_s1525 : let1098 := by timed Eq.symm lean_s1524
                        have lean_s1526 : let1075 := by timed Eq.symm lean_a327
                        have lean_s1527 : let717 := by timed Eq.symm lean_s1526
                        have lean_s1528 : let1074 := by timed flipCongrArg lean_s1527 [sx5fcount]
                        have lean_s1529 : let1003 := by timed Eq.trans lean_s1525 lean_s1528
                        show let1003 from lean_s1529
                    ))))
                  have lean_s1525 : let1100 := by liftOrNToImp lean_s1524, 2
                  have lean_s1526 : let1003 := by timed modusPonens lean_s1523 lean_s1525
                  let lean_s1527 := by timed And.intro lean_s1514 lean_s1526
                  have lean_s1528 : let1004 := by timed And.intro lean_a333 lean_s1527
                  show let1004 from lean_s1528
  ))))))))))))))))
have lean_s1508 : let1096 := by liftOrNToImp lean_s1507, 8
have lean_s1509 : (Eq let151 let151) := by timed rfl
let lean_s1510 := by timed flipCongrArg lean_s1509 [Implies]
have lean_s1511 : let1006 := by timed falseIntro lean_s1353
have lean_s1512 : (Eq let1096 let153) := by timed congr lean_s1510 lean_s1511
have lean_s1513 : (Eq let1096 let152) := by timed Eq.trans lean_s1512 lean_r31
have lean_s1514 : let152 := by timed eqResolve lean_s1508 lean_s1513
have lean_s1515 : (Or let902 let1095) := by timed flipNotAnd lean_s1514 [let59, let31, let29, let27, let24, let20, let16, let9]
have lean_s1516 : (Or let499 (Or let902 let1093)) := by permutateOr lean_s1515, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1517 := by R2 lean_s1516, lean_s1360, let16, [(- 1), 0]
let lean_s1518 := by R2 lean_s1517, lean_s1345, let27, [(- 1), (- 1)]
let lean_s1519 := by R2 lean_s1518, lean_s1347, let449, [(- 1), (- 1)]
have lean_s1520 : (Or let902 (Or let923 (Or let981 (Or let1064 (Or let977 (Or let1062 (Or let499 (Or let593 let932)))))))) :=
  (scope (fun lean_a327 : let59 =>
    (scope (fun lean_a328 : let31 =>
      (scope (fun lean_a329 : let29 =>
        (scope (fun lean_a330 : let37 =>
          (scope (fun lean_a331 : let24 =>
            (scope (fun lean_a332 : let20 =>
              (scope (fun lean_a333 : let16 =>
                (scope (fun lean_a334 : let9 =>
                  have lean_s1520 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1521 : let717 := by timed eqResolve lean_a334 lean_s1520
                  let lean_s1522 := by timed And.intro lean_a331 lean_a328
                  let lean_s1523 := by timed And.intro lean_a332 lean_s1522
                  have lean_s1524 : let1089 := by timed And.intro lean_s1521 lean_s1523
                  have lean_s1525 : let1091 :=
                    (scope (fun lean_a327 : let717 =>
                      (scope (fun lean_a328 : let20 =>
                        (scope (fun lean_a329 : let24 =>
                          (scope (fun lean_a330 : let31 =>
                            have lean_s1525 : let968 := by timed Eq.symm lean_a330
                            have lean_s1526 : let555 := by timed Eq.symm lean_a329
                            have lean_s1527 : let24 := by timed Eq.symm lean_s1526
                            let lean_s1528 := by timed Eq.trans lean_s1525 lean_s1527
                            have lean_s1529 : let546 := by timed Eq.symm lean_a328
                            have lean_s1530 : let20 := by timed Eq.symm lean_s1529
                            let lean_s1531 := by timed Eq.trans lean_s1528 lean_s1530
                            have lean_s1532 : let1075 := by timed Eq.symm lean_a327
                            have lean_s1533 : let717 := by timed Eq.symm lean_s1532
                            have lean_s1534 : let1078 := by timed flipCongrArg lean_s1533 [xx5fcount]
                            have lean_s1535 : let931 := by timed Eq.trans lean_s1531 lean_s1534
                            show let931 from lean_s1535
                    ))))))))
                  have lean_s1526 : let1090 := by liftOrNToImp lean_s1525, 4
                  have lean_s1527 : let931 := by timed modusPonens lean_s1524 lean_s1526
                  let lean_s1528 := by timed And.intro lean_a329 lean_a327
                  let lean_s1529 := by timed And.intro lean_a330 lean_s1528
                  have lean_s1530 : let1070 := by timed And.intro lean_s1521 lean_s1529
                  have lean_s1531 : let1073 :=
                    (scope (fun lean_a327 : let717 =>
                      (scope (fun lean_a328 : let37 =>
                        (scope (fun lean_a329 : let29 =>
                          (scope (fun lean_a330 : let59 =>
                            have lean_s1531 : let961 := by timed Eq.symm lean_a330
                            have lean_s1532 : let336 := by timed Eq.symm lean_a329
                            have lean_s1533 : let29 := by timed Eq.symm lean_s1532
                            let lean_s1534 := by timed Eq.trans lean_s1531 lean_s1533
                            have lean_s1535 : let167 := by timed Eq.symm lean_a328
                            have lean_s1536 : let37 := by timed Eq.symm lean_s1535
                            let lean_s1537 := by timed Eq.trans lean_s1534 lean_s1536
                            have lean_s1538 : let1075 := by timed Eq.symm lean_a327
                            have lean_s1539 : let717 := by timed Eq.symm lean_s1538
                            have lean_s1540 : let1074 := by timed flipCongrArg lean_s1539 [sx5fcount]
                            have lean_s1541 : let930 := by timed Eq.trans lean_s1537 lean_s1540
                            show let930 from lean_s1541
                    ))))))))
                  have lean_s1532 : let1071 := by liftOrNToImp lean_s1531, 4
                  have lean_s1533 : let930 := by timed modusPonens lean_s1530 lean_s1532
                  let lean_s1534 := by timed And.intro lean_s1527 lean_s1533
                  have lean_s1535 : let932 := by timed And.intro lean_a333 lean_s1534
                  show let932 from lean_s1535
  ))))))))))))))))
have lean_s1521 : let1088 := by liftOrNToImp lean_s1520, 8
have lean_s1522 : (Eq let292 let292) := by timed rfl
let lean_s1523 := by timed flipCongrArg lean_s1522 [Implies]
have lean_s1524 : (Or let499 (Or let936 let935)) :=
  (scope (fun lean_a327 : let16 =>
    (scope (fun lean_a328 : let931 =>
      (scope (fun lean_a329 : let930 =>
        have lean_s1524 : let937 := by timed Eq.symm lean_a329
        have lean_s1525 : let939 :=
          (scope (fun lean_a327 : let937 =>
            have lean_s1525 : let714 := by timed trueElim lean_r269
            have lean_s1526 : let952 := by timed And.intro lean_s1525 lean_a327
            have lean_s1527 : let953 := by arithMulPos [let14, let22, let53], 4
            have lean_s1528 : let951 := by timed modusPonens lean_s1526 lean_s1527
            have lean_s1529 : let948 := by timed Eq.symm lean_a328
            have lean_s1530 : let949 := by timed And.intro lean_s1525 lean_s1529
            have lean_s1531 : let950 := by arithMulPos [let13, let22, let53], 4
            have lean_s1532 : let947 := by timed modusPonens lean_s1530 lean_s1531
            have lean_s1533 : let713 := by timed trueElim lean_r268
            have lean_s1534 : let945 := by timed And.intro lean_s1533 lean_a327
            have lean_s1535 : let946 := by arithMulNeg [let15, let10, let55], 3
            have lean_s1536 : let944 := by timed modusPonens lean_s1534 lean_s1535
            have lean_s1537 : let943 := by sumBounds [lean_s1528, lean_s1532, lean_s1536]
            let lean_s1538 := by timed congrHAdd lean_r213 lean_r267
            have lean_s1539 : (Eq let942 let711) := by timed congrHAdd lean_r54 lean_s1538
            have lean_s1540 : (Eq let942 let56) := by timed Eq.trans lean_s1539 lean_r266
            let lean_s1541 := by timed flipCongrArg lean_s1540 [LE.le]
            let lean_s1542 := by timed congrHAdd lean_r265 lean_r263
            have lean_s1543 : (Eq let941 let706) := by timed congrHAdd lean_r265 lean_s1542
            have lean_s1544 : (Eq let941 let286) := by timed Eq.trans lean_s1543 lean_r262
            have lean_s1545 : (Eq let943 let485) := by timed congr lean_s1541 lean_s1544
            have lean_s1546 : (Eq let943 False) := by timed Eq.trans lean_s1545 lean_r164
            show False from by timed eqResolve lean_s1537 lean_s1546
          ))
        have lean_s1526 : let938 := by liftOrNToNeg lean_s1525
        show False from by timed contradiction lean_s1524 lean_s1526
  ))))))
have lean_s1525 : (Not let932) := by liftOrNToNeg lean_s1524
have lean_s1526 : let934 := by timed falseIntro lean_s1525
have lean_s1527 : (Eq let1088 let294) := by timed congr lean_s1523 lean_s1526
have lean_s1528 : (Eq let1088 let293) := by timed Eq.trans lean_s1527 lean_r92
have lean_s1529 : let293 := by timed eqResolve lean_s1521 lean_s1528
have lean_s1530 : (Or let902 let1087) := by timed flipNotAnd lean_s1529 [let59, let31, let29, let37, let24, let20, let16, let9]
have lean_s1531 : (Or let499 (Or let902 let1083)) := by permutateOr lean_s1530, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1532 := by R1 lean_s1519, lean_s1531, let37, [(- 1), (- 1)]
have lean_s1533 : (Or let902 (Or let981 (Or let923 (Or let977 (Or let1062 (Or let593 let1081)))))) := by R2 lean_s1532, lean_s1360, let16, [(- 1), 0]
have lean_s1534 : let1081 := by factor lean_s1533, (- 1)
have lean_s1535 : (Or let1052 (Or let360 (Or let594 let1048))) := by timed cnfAndNeg [let359, let593, let969]
have lean_s1536 : let1051 :=
  (scope (fun lean_a327 : let359 =>
    (scope (fun lean_a328 : let593 =>
      (scope (fun lean_a329 : let969 =>
        let lean_s1536 := by timed And.intro lean_a327 lean_a328
        have lean_s1537 : let1054 := by timed And.intro lean_a329 lean_s1536
        have lean_s1538 : (Or let1048 (Or let360 (Or let594 let1053))) :=
          (scope (fun lean_a330 : let969 =>
            (scope (fun lean_a331 : let359 =>
              (scope (fun lean_a332 : let593 =>
                have lean_s1538 : (Eq let359 let392) := by timed Eq.symm lean_r144
                have lean_s1539 : let392 := by timed eqResolve lean_a331 lean_s1538
                have lean_s1540 : (binrel% LE.le fmt1 let8) := by intTightUb lean_s1539
                have lean_s1541 : (binrel% LT.lt fmt1 let8) := by trichotomy lean_s1540, lean_a332
                have lean_s1542 : (binrel% LE.le fmt1 let10) := by intTightUb lean_s1541
                have lean_s1543 : let44 := by trichotomy lean_a330, lean_s1542
                have lean_s1544 : let1053 := by timed Eq.symm lean_s1543
                show let1053 from lean_s1544
          ))))))
        have lean_s1539 : (Implies let1054 let1053) := by liftOrNToImp lean_s1538, 3
        have lean_s1540 : let1053 := by timed modusPonens lean_s1537 lean_s1539
        have lean_s1541 : (Or (Not let1053) let44) :=
          (scope (fun lean_a330 : let1053 =>
            have lean_s1541 : let44 := by timed Eq.symm lean_a330
            show let44 from lean_s1541
          ))
        have lean_s1542 : (Implies let1053 let44) := by liftOrNToImp lean_s1541, 1
        have lean_s1543 : let44 := by timed modusPonens lean_s1540 lean_s1542
        show let44 from lean_s1543
  ))))))
have lean_s1537 : (Implies let1052 let44) := by liftOrNToImp lean_s1536, 3
have lean_s1538 : (Or (Not let1052) let44) := by timed impliesElim lean_s1537
have lean_s1539 : let1051 := by R1 lean_s1535, lean_s1538, let1052, [(- 1), (- 1)]
have lean_s1540 : let852 := by timed rfl
have lean_s1541 : let741 := by timed rfl
let lean_s1542 := by timed flipCongrArg lean_s1541 [Eq]
have lean_s1543 : (Eq let742 let741) := by timed congr lean_s1542 lean_r127
have lean_s1544 : (Eq let742 True) := by timed Eq.trans lean_s1543 lean_r284
have lean_s1545 : (Eq let361 True) := by timed Eq.trans lean_r285 lean_s1544
have lean_s1546 : let361 := by timed trueElim lean_s1545
let lean_s1547 := by timed congr lean_s1540 lean_s1546
have lean_s1548 : let289 := by timed rfl
let lean_s1549 := by timed flipCongrArg lean_s1548 [Eq]
have lean_s1550 : (Eq let598 let289) := by timed congr lean_s1549 lean_r225
have lean_s1551 : (Eq let598 True) := by timed Eq.trans lean_s1550 lean_r90
have lean_s1552 : (Eq let595 True) := by timed Eq.trans lean_r227 lean_s1551
have lean_s1553 : let595 := by timed trueElim lean_s1552
let lean_s1554 := by timed congr lean_s1540 lean_s1553
have lean_s1555 : (Eq let1048 let1048) := by timed rfl
let lean_s1556 := by timed congr lean_s1540 lean_s1555
have lean_s1557 : (Eq let44 let44) := by timed rfl
let lean_s1558 := by timed congr lean_s1556 lean_s1557
let lean_s1559 := by timed congr lean_s1554 lean_s1558
have lean_s1560 : (Eq let1051 let1050) := by timed congr lean_s1547 lean_s1559
have lean_s1561 : let1050 := by timed eqResolve lean_s1539 lean_s1560
have lean_s1562 : (Or let210 (Or let44 (Or let9 let1048))) := by permutateOr lean_s1561, [0, 3, 1, 2], (- 1)
let lean_s1563 := by R2 lean_s1534, lean_s1562, let9, [(- 1), (- 1)]
have lean_s1564 : let359 := by andElim lean_s1342, 1
let lean_s1565 := by R1 lean_s1563, lean_s1564, let210, [(- 1), 0]
have lean_s1566 : (Or let973 (Or let970 let722)) := by timed cnfAndNeg [let474, let721]
have lean_s1567 : let972 :=
  (scope (fun lean_a331 : let474 =>
    (scope (fun lean_a332 : let721 =>
      have lean_s1567 : let973 := by timed And.intro lean_a331 lean_a332
      have lean_s1568 : let972 :=
        (scope (fun lean_a333 : let474 =>
          (scope (fun lean_a334 : let721 =>
            have lean_s1568 : (binrel% GT.gt fmt1 let1) := by trichotomy lean_a333, lean_a334
            have lean_s1569 : let969 := by intTightLb lean_s1568
            show let969 from lean_s1569
        ))))
      have lean_s1569 : let974 := by liftOrNToImp lean_s1568, 2
      have lean_s1570 : let969 := by timed modusPonens lean_s1567 lean_s1569
      show let969 from lean_s1570
  ))))
have lean_s1568 : let974 := by liftOrNToImp lean_s1567, 2
have lean_s1569 : (Or (Not let973) let969) := by timed impliesElim lean_s1568
have lean_s1570 : let972 := by R1 lean_s1566, lean_s1569, let973, [(- 1), (- 1)]
have lean_s1571 : let852 := by timed rfl
have lean_s1572 : (Eq let970 let970) := by timed rfl
let lean_s1573 := by timed congr lean_s1571 lean_s1572
have lean_s1574 : let716 := by timed rfl
let lean_s1575 := by timed flipCongrArg lean_s1574 [Eq]
have lean_s1576 : (Eq let724 let716) := by timed congr lean_s1575 lean_r274
have lean_s1577 : (Eq let724 True) := by timed Eq.trans lean_s1576 lean_r271
have lean_s1578 : (Eq let723 True) := by timed Eq.trans lean_r275 lean_s1577
have lean_s1579 : let723 := by timed trueElim lean_s1578
let lean_s1580 := by timed congr lean_s1571 lean_s1579
have lean_s1581 : (Eq let969 let969) := by timed rfl
let lean_s1582 := by timed congr lean_s1580 lean_s1581
have lean_s1583 : (Eq let972 let971) := by timed congr lean_s1573 lean_s1582
have lean_s1584 : let971 := by timed eqResolve lean_s1570 lean_s1583
have lean_s1585 : (Or let145 (Or let970 let969)) := by permutateOr lean_s1584, [1, 0, 2], (- 1)
let lean_s1586 := by R2 lean_s1565, lean_s1585, let969, [(- 1), (- 1)]
have lean_s1587 : let474 := by andElim lean_s1342, 2
let lean_s1588 := by R2 lean_s1586, lean_s1587, let474, [(- 1), 0]
have lean_s1589 : (Or let902 (Or let923 (Or let499 (Or let721 let932)))) :=
  (scope (fun lean_a333 : let59 =>
    (scope (fun lean_a334 : let31 =>
      (scope (fun lean_a335 : let16 =>
        (scope (fun lean_a336 : let145 =>
          have lean_s1589 : let962 := by timed Eq.symm lean_r158
          have lean_s1590 : let480 := by timed eqResolve lean_a336 lean_s1589
          have lean_s1591 : let963 := by timed And.intro lean_s1590 lean_a334
          have lean_s1592 : let966 :=
            (scope (fun lean_a334 : let480 =>
              (scope (fun lean_a335 : let31 =>
                have lean_s1592 : let968 := by timed Eq.symm lean_a335
                have lean_s1593 : let960 := by timed Eq.symm lean_a334
                have lean_s1594 : let480 := by timed Eq.symm lean_s1593
                have lean_s1595 : let967 := by timed flipCongrArg lean_s1594 [xx5fcount]
                have lean_s1596 : let931 := by timed Eq.trans lean_s1592 lean_s1595
                show let931 from lean_s1596
            ))))
          have lean_s1593 : let964 := by liftOrNToImp lean_s1592, 2
          have lean_s1594 : let931 := by timed modusPonens lean_s1591 lean_s1593
          have lean_s1595 : let954 := by timed And.intro lean_s1590 lean_a333
          have lean_s1596 : let958 :=
            (scope (fun lean_a335 : let480 =>
              (scope (fun lean_a336 : let59 =>
                have lean_s1596 : let961 := by timed Eq.symm lean_a336
                have lean_s1597 : let960 := by timed Eq.symm lean_a335
                have lean_s1598 : let480 := by timed Eq.symm lean_s1597
                have lean_s1599 : let959 := by timed flipCongrArg lean_s1598 [sx5fcount]
                have lean_s1600 : let930 := by timed Eq.trans lean_s1596 lean_s1599
                show let930 from lean_s1600
            ))))
          have lean_s1597 : let955 := by liftOrNToImp lean_s1596, 2
          have lean_s1598 : let930 := by timed modusPonens lean_s1595 lean_s1597
          let lean_s1599 := by timed And.intro lean_s1594 lean_s1598
          have lean_s1600 : let932 := by timed And.intro lean_a335 lean_s1599
          show let932 from lean_s1600
  ))))))))
have lean_s1590 : let933 := by liftOrNToImp lean_s1589, 4
have lean_s1591 : (Eq let703 let703) := by timed rfl
let lean_s1592 := by timed flipCongrArg lean_s1591 [Implies]
have lean_s1593 : let934 := by timed falseIntro lean_s1525
have lean_s1594 : (Eq let933 let705) := by timed congr lean_s1592 lean_s1593
have lean_s1595 : (Eq let933 let704) := by timed Eq.trans lean_s1594 lean_r261
have lean_s1596 : let704 := by timed eqResolve lean_s1590 lean_s1595
have lean_s1597 : (Or let902 let929) := by timed flipNotAnd lean_s1596 [let59, let31, let16, let145]
have lean_s1598 : (Or let499 (Or let902 let927)) := by permutateOr lean_s1597, [2, 0, 1, 3], (- 1)
let lean_s1599 := by R1 lean_s1588, lean_s1598, let145, [(- 1), (- 1)]
let lean_s1600 := by R2 lean_s1599, lean_s1360, let16, [(- 1), 0]
have lean_s1601 : (Or let902 (Or let923 (Or let981 (Or let1025 let1038)))) :=
  (scope (fun lean_a335 : let59 =>
    (scope (fun lean_a336 : let31 =>
      (scope (fun lean_a337 : let29 =>
        (scope (fun lean_a338 : let221 =>
          (scope (fun lean_a339 : let16 =>
            (scope (fun lean_a340 : let44 =>
              have lean_s1601 : let996 := by timed Eq.symm lean_r230
              have lean_s1602 : let603 := by timed eqResolve lean_a340 lean_s1601
              have lean_s1603 : let1045 := by timed And.intro lean_a338 lean_a336
              have lean_s1604 : let1047 :=
                (scope (fun lean_a337 : let221 =>
                  (scope (fun lean_a338 : let31 =>
                    have lean_s1604 : let968 := by timed Eq.symm lean_a338
                    have lean_s1605 : let31 := by timed Eq.symm lean_s1604
                    have lean_s1606 : let968 := by timed Eq.symm lean_s1605
                    have lean_s1607 : (Eq let220 let23) := by timed Eq.symm lean_a337
                    have lean_s1608 : let221 := by timed Eq.symm lean_s1607
                    have lean_s1609 : let347 := by timed Eq.trans lean_s1606 lean_s1608
                    show let347 from lean_s1609
                ))))
              have lean_s1605 : let1046 := by liftOrNToImp lean_s1604, 2
              have lean_s1606 : let347 := by timed modusPonens lean_s1603 lean_s1605
              have lean_s1607 : let1044 :=
                (scope (fun lean_a337 : let347 =>
                  have lean_s1607 : let346 := by timed eqResolve lean_a337 lean_r121
                  have lean_s1608 : let1039 := by timed Eq.symm lean_s1607
                  show let1039 from lean_s1608
                ))
              have lean_s1608 : let1043 := by liftOrNToImp lean_s1607, 1
              have lean_s1609 : let1039 := by timed modusPonens lean_s1606 lean_s1608
              have lean_s1610 : let1040 := by timed And.intro lean_s1602 lean_s1609
              have lean_s1611 : (Or let992 let1042) :=
                (scope (fun lean_a338 : let603 =>
                  (scope (fun lean_a339 : let1039 =>
                    have lean_s1611 : let346 := by timed Eq.symm lean_a339
                    have lean_s1612 : let1039 := by timed Eq.symm lean_s1611
                    have lean_s1613 : let995 := by timed Eq.symm lean_a338
                    have lean_s1614 : let603 := by timed Eq.symm lean_s1613
                    have lean_s1615 : let1002 := by timed flipCongrArg lean_s1614 [xx5fcount]
                    have lean_s1616 : let1026 := by timed Eq.trans lean_s1612 lean_s1615
                    show let1026 from lean_s1616
                ))))
              have lean_s1612 : (Implies let1040 let1026) := by liftOrNToImp lean_s1611, 2
              have lean_s1613 : let1026 := by timed modusPonens lean_s1610 lean_s1612
              let lean_s1614 := by timed And.intro lean_a337 lean_a335
              have lean_s1615 : let989 := by timed And.intro lean_s1602 lean_s1614
              have lean_s1616 : let993 :=
                (scope (fun lean_a340 : let603 =>
                  (scope (fun lean_a341 : let29 =>
                    (scope (fun lean_a342 : let59 =>
                      have lean_s1616 : let961 := by timed Eq.symm lean_a342
                      have lean_s1617 : let336 := by timed Eq.symm lean_a341
                      have lean_s1618 : let29 := by timed Eq.symm lean_s1617
                      let lean_s1619 := by timed Eq.trans lean_s1616 lean_s1618
                      have lean_s1620 : let995 := by timed Eq.symm lean_a340
                      have lean_s1621 : let603 := by timed Eq.symm lean_s1620
                      have lean_s1622 : let994 := by timed flipCongrArg lean_s1621 [sx5fcount]
                      have lean_s1623 : let930 := by timed Eq.trans lean_s1619 lean_s1622
                      show let930 from lean_s1623
                ))))))
              have lean_s1617 : let990 := by liftOrNToImp lean_s1616, 3
              have lean_s1618 : let930 := by timed modusPonens lean_s1615 lean_s1617
              let lean_s1619 := by timed And.intro lean_s1613 lean_s1618
              have lean_s1620 : let1027 := by timed And.intro lean_a339 lean_s1619
              show let1027 from lean_s1620
  ))))))))))))
have lean_s1602 : let1028 := by liftOrNToImp lean_s1601, 6
have lean_s1603 : (Eq let311 let311) := by timed rfl
let lean_s1604 := by timed flipCongrArg lean_s1603 [Implies]
have lean_s1605 : let1029 := by timed falseIntro lean_s1420
have lean_s1606 : (Eq let1028 let313) := by timed congr lean_s1604 lean_s1605
have lean_s1607 : (Eq let1028 let312) := by timed Eq.trans lean_s1606 lean_r103
have lean_s1608 : let312 := by timed eqResolve lean_s1602 lean_s1607
have lean_s1609 : (Or let902 (Or let923 (Or let981 (Or let1025 let983)))) := by timed flipNotAnd lean_s1608 [let59, let31, let29, let221, let16, let44]
have lean_s1610 : (Or let499 (Or let902 (Or let981 (Or let923 (Or let1025 let975))))) := by permutateOr lean_s1609, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1611 := by R2 lean_s1610, lean_s1360, let16, [(- 1), 0]
let lean_s1612 := by R2 lean_s1611, lean_s1487, let29, [(- 1), (- 1)]
let lean_s1613 := by R1 lean_s1612, lean_s1483, let451, [(- 1), (- 1)]
let lean_s1614 := by R1 lean_s1613, lean_s1475, let188, [(- 1), (- 1)]
have lean_s1615 : (Or let918 let221) := by timed iteElim1 lean_s1430
have lean_s1616 : (Or let221 let918) := by permutateOr lean_s1615, [1, 0], (- 1)
let lean_s1617 := by R2 lean_s1614, lean_s1616, let221, [(- 1), (- 1)]
have lean_s1618 : (Or let902 (Or let923 (Or let975 (Or let918 let918)))) := by R2 lean_s1617, lean_s1464, let267, [(- 1), (- 1)]
have lean_s1619 : (Or let902 (Or let923 (Or let975 let918))) := by factor lean_s1618, (- 1)
let lean_s1620 := by R2 lean_s1619, lean_s1432, let430, [(- 1), (- 1)]
have lean_s1621 : (Or let902 (Or let923 (Or let916 let1016))) :=
  (scope (fun lean_a340 : let59 =>
    (scope (fun lean_a341 : let31 =>
      (scope (fun lean_a342 : let75 =>
        (scope (fun lean_a343 : let24 =>
          (scope (fun lean_a344 : let16 =>
            (scope (fun lean_a345 : let44 =>
              have lean_s1621 : let996 := by timed Eq.symm lean_r230
              have lean_s1622 : let603 := by timed eqResolve lean_a345 lean_s1621
              let lean_s1623 := by timed And.intro lean_a343 lean_a341
              have lean_s1624 : let998 := by timed And.intro lean_s1622 lean_s1623
              have lean_s1625 : let1001 :=
                (scope (fun lean_a340 : let603 =>
                  (scope (fun lean_a341 : let24 =>
                    (scope (fun lean_a342 : let31 =>
                      have lean_s1625 : let968 := by timed Eq.symm lean_a342
                      have lean_s1626 : let555 := by timed Eq.symm lean_a341
                      have lean_s1627 : let24 := by timed Eq.symm lean_s1626
                      let lean_s1628 := by timed Eq.trans lean_s1625 lean_s1627
                      have lean_s1629 : let995 := by timed Eq.symm lean_a340
                      have lean_s1630 : let603 := by timed Eq.symm lean_s1629
                      have lean_s1631 : let1002 := by timed flipCongrArg lean_s1630 [xx5fcount]
                      have lean_s1632 : let931 := by timed Eq.trans lean_s1628 lean_s1631
                      show let931 from lean_s1632
                ))))))
              have lean_s1626 : let999 := by liftOrNToImp lean_s1625, 3
              have lean_s1627 : let931 := by timed modusPonens lean_s1624 lean_s1626
              have lean_s1628 : let1022 := by timed And.intro lean_a342 lean_a340
              have lean_s1629 : let1024 :=
                (scope (fun lean_a340 : let75 =>
                  (scope (fun lean_a341 : let59 =>
                    have lean_s1629 : let961 := by timed Eq.symm lean_a341
                    have lean_s1630 : (Eq let74 let28) := by timed Eq.symm lean_a340
                    have lean_s1631 : let75 := by timed Eq.symm lean_s1630
                    have lean_s1632 : let738 := by timed Eq.trans lean_s1629 lean_s1631
                    show let738 from lean_s1632
                ))))
              have lean_s1630 : let1023 := by liftOrNToImp lean_s1629, 2
              have lean_s1631 : let738 := by timed modusPonens lean_s1628 lean_s1630
              have lean_s1632 : let1021 :=
                (scope (fun lean_a340 : let738 =>
                  have lean_s1632 : let737 := by timed eqResolve lean_a340 lean_r282
                  have lean_s1633 : let1017 := by timed Eq.symm lean_s1632
                  show let1017 from lean_s1633
                ))
              have lean_s1633 : let1020 := by liftOrNToImp lean_s1632, 1
              have lean_s1634 : let1017 := by timed modusPonens lean_s1631 lean_s1633
              have lean_s1635 : let1018 := by timed And.intro lean_s1622 lean_s1634
              have lean_s1636 : (Or let992 let1019) :=
                (scope (fun lean_a340 : let603 =>
                  (scope (fun lean_a341 : let1017 =>
                    have lean_s1636 : let737 := by timed Eq.symm lean_a341
                    have lean_s1637 : let1017 := by timed Eq.symm lean_s1636
                    have lean_s1638 : let995 := by timed Eq.symm lean_a340
                    have lean_s1639 : let603 := by timed Eq.symm lean_s1638
                    have lean_s1640 : let994 := by timed flipCongrArg lean_s1639 [sx5fcount]
                    have lean_s1641 : let1003 := by timed Eq.trans lean_s1637 lean_s1640
                    show let1003 from lean_s1641
                ))))
              have lean_s1637 : (Implies let1018 let1003) := by liftOrNToImp lean_s1636, 2
              have lean_s1638 : let1003 := by timed modusPonens lean_s1635 lean_s1637
              let lean_s1639 := by timed And.intro lean_s1627 lean_s1638
              have lean_s1640 : let1004 := by timed And.intro lean_a344 lean_s1639
              show let1004 from lean_s1640
  ))))))))))))
have lean_s1622 : let1005 := by liftOrNToImp lean_s1621, 6
have lean_s1623 : (Eq let732 let732) := by timed rfl
let lean_s1624 := by timed flipCongrArg lean_s1623 [Implies]
have lean_s1625 : let1006 := by timed falseIntro lean_s1353
have lean_s1626 : (Eq let1005 let734) := by timed congr lean_s1624 lean_s1625
have lean_s1627 : (Eq let1005 let733) := by timed Eq.trans lean_s1626 lean_r279
have lean_s1628 : let733 := by timed eqResolve lean_s1622 lean_s1627
have lean_s1629 : (Or let902 (Or let923 (Or let916 let984))) := by timed flipNotAnd lean_s1628 [let59, let31, let75, let24, let16, let44]
have lean_s1630 : (Or let499 (Or let902 (Or let916 let979))) := by permutateOr lean_s1629, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1631 := by R2 lean_s1630, lean_s1360, let16, [(- 1), 0]
let lean_s1632 := by R2 lean_s1631, lean_s1479, let75, [(- 1), (- 1)]
let lean_s1633 := by R2 lean_s1632, lean_s1487, let451, [(- 1), (- 1)]
have lean_s1634 : (Or let902 (Or let923 (Or let981 (Or let977 (Or let499 (Or let975 let932)))))) :=
  (scope (fun lean_a340 : let59 =>
    (scope (fun lean_a341 : let31 =>
      (scope (fun lean_a342 : let29 =>
        (scope (fun lean_a343 : let24 =>
          (scope (fun lean_a344 : let16 =>
            (scope (fun lean_a345 : let44 =>
              have lean_s1634 : let996 := by timed Eq.symm lean_r230
              have lean_s1635 : let603 := by timed eqResolve lean_a345 lean_s1634
              let lean_s1636 := by timed And.intro lean_a343 lean_a341
              have lean_s1637 : let998 := by timed And.intro lean_s1635 lean_s1636
              have lean_s1638 : let1001 :=
                (scope (fun lean_a340 : let603 =>
                  (scope (fun lean_a341 : let24 =>
                    (scope (fun lean_a342 : let31 =>
                      have lean_s1638 : let968 := by timed Eq.symm lean_a342
                      have lean_s1639 : let555 := by timed Eq.symm lean_a341
                      have lean_s1640 : let24 := by timed Eq.symm lean_s1639
                      let lean_s1641 := by timed Eq.trans lean_s1638 lean_s1640
                      have lean_s1642 : let995 := by timed Eq.symm lean_a340
                      have lean_s1643 : let603 := by timed Eq.symm lean_s1642
                      have lean_s1644 : let1002 := by timed flipCongrArg lean_s1643 [xx5fcount]
                      have lean_s1645 : let931 := by timed Eq.trans lean_s1641 lean_s1644
                      show let931 from lean_s1645
                ))))))
              have lean_s1639 : let999 := by liftOrNToImp lean_s1638, 3
              have lean_s1640 : let931 := by timed modusPonens lean_s1637 lean_s1639
              let lean_s1641 := by timed And.intro lean_a342 lean_a340
              have lean_s1642 : let989 := by timed And.intro lean_s1635 lean_s1641
              have lean_s1643 : let993 :=
                (scope (fun lean_a340 : let603 =>
                  (scope (fun lean_a341 : let29 =>
                    (scope (fun lean_a342 : let59 =>
                      have lean_s1643 : let961 := by timed Eq.symm lean_a342
                      have lean_s1644 : let336 := by timed Eq.symm lean_a341
                      have lean_s1645 : let29 := by timed Eq.symm lean_s1644
                      let lean_s1646 := by timed Eq.trans lean_s1643 lean_s1645
                      have lean_s1647 : let995 := by timed Eq.symm lean_a340
                      have lean_s1648 : let603 := by timed Eq.symm lean_s1647
                      have lean_s1649 : let994 := by timed flipCongrArg lean_s1648 [sx5fcount]
                      have lean_s1650 : let930 := by timed Eq.trans lean_s1646 lean_s1649
                      show let930 from lean_s1650
                ))))))
              have lean_s1644 : let990 := by liftOrNToImp lean_s1643, 3
              have lean_s1645 : let930 := by timed modusPonens lean_s1642 lean_s1644
              let lean_s1646 := by timed And.intro lean_s1640 lean_s1645
              have lean_s1647 : let932 := by timed And.intro lean_a344 lean_s1646
              show let932 from lean_s1647
  ))))))))))))
have lean_s1635 : let987 := by liftOrNToImp lean_s1634, 6
have lean_s1636 : (Eq let729 let729) := by timed rfl
let lean_s1637 := by timed flipCongrArg lean_s1636 [Implies]
have lean_s1638 : let934 := by timed falseIntro lean_s1525
have lean_s1639 : (Eq let987 let731) := by timed congr lean_s1637 lean_s1638
have lean_s1640 : (Eq let987 let730) := by timed Eq.trans lean_s1639 lean_r278
have lean_s1641 : let730 := by timed eqResolve lean_s1635 lean_s1640
have lean_s1642 : (Or let902 let986) := by timed flipNotAnd lean_s1641 [let59, let31, let29, let24, let16, let44]
have lean_s1643 : (Or let499 (Or let902 let982)) := by permutateOr lean_s1642, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1644 := by R1 lean_s1633, lean_s1643, let29, [(- 1), (- 1)]
have lean_s1645 : (Or let902 (Or let923 (Or let977 (Or let975 let980)))) := by R2 lean_s1644, lean_s1360, let16, [(- 1), 0]
have lean_s1646 : let980 := by factor lean_s1645, (- 1)
have lean_s1647 : (Or let902 (Or let923 (Or let975 let976))) := by R1 lean_s1620, lean_s1646, let24, [(- 1), (- 1)]
have lean_s1648 : let976 := by factor lean_s1647, (- 1)
let lean_s1649 := by R1 lean_s1600, lean_s1648, let44, [(- 1), (- 1)]
let lean_s1650 := by R2 lean_s1649, lean_s1432, let24, [(- 1), (- 1)]
let lean_s1651 := by R1 lean_s1650, lean_s1616, let430, [(- 1), (- 1)]
have lean_s1652 : (Or let902 (Or let923 (Or let981 (Or let1064 (Or let1025 let1069))))) :=
  (scope (fun lean_a340 : let59 =>
    (scope (fun lean_a341 : let31 =>
      (scope (fun lean_a342 : let29 =>
        (scope (fun lean_a343 : let37 =>
          (scope (fun lean_a344 : let221 =>
            (scope (fun lean_a345 : let20 =>
              (scope (fun lean_a346 : let16 =>
                (scope (fun lean_a347 : let9 =>
                  have lean_s1652 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1653 : let717 := by timed eqResolve lean_a347 lean_s1652
                  have lean_s1654 : let1045 := by timed And.intro lean_a344 lean_a341
                  have lean_s1655 : let1047 :=
                    (scope (fun lean_a340 : let221 =>
                      (scope (fun lean_a341 : let31 =>
                        have lean_s1655 : let968 := by timed Eq.symm lean_a341
                        have lean_s1656 : let31 := by timed Eq.symm lean_s1655
                        have lean_s1657 : let968 := by timed Eq.symm lean_s1656
                        have lean_s1658 : (Eq let220 let23) := by timed Eq.symm lean_a340
                        have lean_s1659 : let221 := by timed Eq.symm lean_s1658
                        have lean_s1660 : let347 := by timed Eq.trans lean_s1657 lean_s1659
                        show let347 from lean_s1660
                    ))))
                  have lean_s1656 : let1046 := by liftOrNToImp lean_s1655, 2
                  have lean_s1657 : let347 := by timed modusPonens lean_s1654 lean_s1656
                  have lean_s1658 : let1044 :=
                    (scope (fun lean_a340 : let347 =>
                      have lean_s1658 : let346 := by timed eqResolve lean_a340 lean_r121
                      have lean_s1659 : let1039 := by timed Eq.symm lean_s1658
                      show let1039 from lean_s1659
                    ))
                  have lean_s1659 : let1043 := by liftOrNToImp lean_s1658, 1
                  have lean_s1660 : let1039 := by timed modusPonens lean_s1657 lean_s1659
                  let lean_s1661 := by timed And.intro lean_a345 lean_s1660
                  have lean_s1662 : let1077 := by timed And.intro lean_s1653 lean_s1661
                  have lean_s1663 : (Or let1072 (Or let1062 let1042)) :=
                    (scope (fun lean_a340 : let717 =>
                      (scope (fun lean_a341 : let20 =>
                        (scope (fun lean_a342 : let1039 =>
                          have lean_s1663 : let346 := by timed Eq.symm lean_a342
                          have lean_s1664 : let1039 := by timed Eq.symm lean_s1663
                          have lean_s1665 : let546 := by timed Eq.symm lean_a341
                          have lean_s1666 : let20 := by timed Eq.symm lean_s1665
                          let lean_s1667 := by timed Eq.trans lean_s1664 lean_s1666
                          have lean_s1668 : let1075 := by timed Eq.symm lean_a340
                          have lean_s1669 : let717 := by timed Eq.symm lean_s1668
                          have lean_s1670 : let1078 := by timed flipCongrArg lean_s1669 [xx5fcount]
                          have lean_s1671 : let1026 := by timed Eq.trans lean_s1667 lean_s1670
                          show let1026 from lean_s1671
                    ))))))
                  have lean_s1664 : (Implies let1077 let1026) := by liftOrNToImp lean_s1663, 3
                  have lean_s1665 : let1026 := by timed modusPonens lean_s1662 lean_s1664
                  let lean_s1666 := by timed And.intro lean_a342 lean_a340
                  let lean_s1667 := by timed And.intro lean_a343 lean_s1666
                  have lean_s1668 : let1070 := by timed And.intro lean_s1653 lean_s1667
                  have lean_s1669 : let1073 :=
                    (scope (fun lean_a340 : let717 =>
                      (scope (fun lean_a341 : let37 =>
                        (scope (fun lean_a342 : let29 =>
                          (scope (fun lean_a343 : let59 =>
                            have lean_s1669 : let961 := by timed Eq.symm lean_a343
                            have lean_s1670 : let336 := by timed Eq.symm lean_a342
                            have lean_s1671 : let29 := by timed Eq.symm lean_s1670
                            let lean_s1672 := by timed Eq.trans lean_s1669 lean_s1671
                            have lean_s1673 : let167 := by timed Eq.symm lean_a341
                            have lean_s1674 : let37 := by timed Eq.symm lean_s1673
                            let lean_s1675 := by timed Eq.trans lean_s1672 lean_s1674
                            have lean_s1676 : let1075 := by timed Eq.symm lean_a340
                            have lean_s1677 : let717 := by timed Eq.symm lean_s1676
                            have lean_s1678 : let1074 := by timed flipCongrArg lean_s1677 [sx5fcount]
                            have lean_s1679 : let930 := by timed Eq.trans lean_s1675 lean_s1678
                            show let930 from lean_s1679
                    ))))))))
                  have lean_s1670 : let1071 := by liftOrNToImp lean_s1669, 4
                  have lean_s1671 : let930 := by timed modusPonens lean_s1668 lean_s1670
                  let lean_s1672 := by timed And.intro lean_s1665 lean_s1671
                  have lean_s1673 : let1027 := by timed And.intro lean_a346 lean_s1672
                  show let1027 from lean_s1673
  ))))))))))))))))
have lean_s1653 : let1067 := by liftOrNToImp lean_s1652, 8
have lean_s1654 : (Eq let222 let222) := by timed rfl
let lean_s1655 := by timed flipCongrArg lean_s1654 [Implies]
have lean_s1656 : let1029 := by timed falseIntro lean_s1420
have lean_s1657 : (Eq let1067 let224) := by timed congr lean_s1655 lean_s1656
have lean_s1658 : (Eq let1067 let223) := by timed Eq.trans lean_s1657 lean_r59
have lean_s1659 : let223 := by timed eqResolve lean_s1653 lean_s1658
have lean_s1660 : (Or let902 (Or let923 (Or let981 (Or let1064 (Or let1025 let1066))))) := by timed flipNotAnd lean_s1659 [let59, let31, let29, let37, let221, let20, let16, let9]
have lean_s1661 : (Or let499 (Or let902 (Or let981 (Or let1064 (Or let923 (Or let1025 let1063)))))) := by permutateOr lean_s1660, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1662 := by R2 lean_s1661, lean_s1360, let16, [(- 1), 0]
let lean_s1663 := by R2 lean_s1662, lean_s1398, let20, [(- 1), (- 1)]
let lean_s1664 := by R2 lean_s1663, lean_s1347, let37, [(- 1), (- 1)]
let lean_s1665 := by R1 lean_s1664, lean_s1457, let428, [(- 1), (- 1)]
have lean_s1666 : (Or let902 (Or let981 (Or let923 (Or let1025 (Or let593 (Or let427 let427)))))) := by R1 lean_s1665, lean_s1460, let449, [(- 1), (- 1)]
have lean_s1667 : (Or let902 (Or let981 (Or let923 (Or let1025 (Or let593 let427))))) := by factor lean_s1666, (- 1)
have lean_s1668 : let1060 :=
  (scope (fun lean_a340 : let267 =>
    have lean_s1668 : let1060 :=
      (scope (fun lean_a340 : let267 =>
        have lean_s1668 : let268 := by timed Eq.symm lean_a340
        have lean_s1669 : let267 := by timed Eq.symm lean_s1668
        let lean_s1670 := by timed flipCongrArg lean_s1669 [Eq]
        have lean_s1671 : let186 := by timed rfl
        have lean_s1672 : (Eq let427 let111) := by timed congr lean_s1670 lean_s1671
        have lean_s1673 : (Eq let512 let171) := by timed flipCongrArg lean_r22 [Not]
        have lean_s1674 : (Eq let512 True) := by timed Eq.trans lean_s1673 lean_r41
        have lean_s1675 : (Eq let112 True) := by timed Eq.trans lean_r183 lean_s1674
        have lean_s1676 : let112 := by timed trueElim lean_s1675
        have lean_s1677 : let913 := by timed Eq.trans lean_s1672 lean_s1676
        have lean_s1678 : let910 := by timed falseElim lean_s1677
        show let910 from lean_s1678
      ))
    have lean_s1669 : let1061 := by liftOrNToImp lean_s1668, 1
    have lean_s1670 : let910 := by timed modusPonens lean_a340 lean_s1669
    show let910 from lean_s1670
  ))
have lean_s1669 : let1061 := by liftOrNToImp lean_s1668, 1
have lean_s1670 : let1060 := by timed impliesElim lean_s1669
have lean_s1671 : (Or let910 let907) := by permutateOr lean_s1670, [1, 0], (- 1)
let lean_s1672 := by R1 lean_s1667, lean_s1671, let427, [(- 1), (- 1)]
let lean_s1673 := by R2 lean_s1672, lean_s1464, let267, [(- 1), (- 1)]
let lean_s1674 := by R2 lean_s1673, lean_s1432, let430, [(- 1), (- 1)]
have lean_s1675 : (Or let1058 (Or let902 let1056)) := by timed cnfAndNeg [let59, let31, let221]
have lean_s1676 : let1057 :=
  (scope (fun lean_a340 : let59 =>
    (scope (fun lean_a341 : let31 =>
      (scope (fun lean_a342 : let221 =>
        have lean_s1676 : let1045 := by timed And.intro lean_a342 lean_a341
        have lean_s1677 : let1047 :=
          (scope (fun lean_a340 : let221 =>
            (scope (fun lean_a341 : let31 =>
              have lean_s1677 : let968 := by timed Eq.symm lean_a341
              have lean_s1678 : let31 := by timed Eq.symm lean_s1677
              have lean_s1679 : let968 := by timed Eq.symm lean_s1678
              have lean_s1680 : (Eq let220 let23) := by timed Eq.symm lean_a340
              have lean_s1681 : let221 := by timed Eq.symm lean_s1680
              have lean_s1682 : let347 := by timed Eq.trans lean_s1679 lean_s1681
              show let347 from lean_s1682
          ))))
        have lean_s1678 : let1046 := by liftOrNToImp lean_s1677, 2
        have lean_s1679 : let347 := by timed modusPonens lean_s1676 lean_s1678
        have lean_s1680 : let1044 :=
          (scope (fun lean_a340 : let347 =>
            have lean_s1680 : let346 := by timed eqResolve lean_a340 lean_r121
            have lean_s1681 : let1039 := by timed Eq.symm lean_s1680
            show let1039 from lean_s1681
          ))
        have lean_s1681 : let1043 := by liftOrNToImp lean_s1680, 1
        have lean_s1682 : let1039 := by timed modusPonens lean_s1679 lean_s1681
        let lean_s1683 := by timed And.intro lean_a341 lean_s1682
        have lean_s1684 : let1059 := by timed And.intro lean_a340 lean_s1683
        have lean_s1685 : (Or let902 (Or let923 (Or let1041 let977))) :=
          (scope (fun lean_a340 : let59 =>
            (scope (fun lean_a341 : let31 =>
              (scope (fun lean_a342 : let1039 =>
                have lean_s1685 : let968 := by timed Eq.symm lean_a341
                have lean_s1686 : let31 := by timed Eq.symm lean_s1685
                have lean_s1687 : let961 := by timed Eq.symm lean_a340
                have lean_s1688 : (Eq let23 let28) := by timed Eq.trans lean_s1686 lean_s1687
                let lean_s1689 := by timed flipCongrArg lean_s1688 [Eq]
                have lean_s1690 : let346 := by timed Eq.symm lean_a342
                have lean_s1691 : (Eq let24 let33) := by timed congr lean_s1689 lean_s1690
                let lean_s1692 := by timed flipCongrArg lean_a340 [Eq]
                have lean_s1693 : let887 := by timed rfl
                have lean_s1694 : (Eq let33 let199) := by timed congr lean_s1692 lean_s1693
                have lean_s1695 : (Eq let744 let171) := by timed flipCongrArg lean_r50 [Not]
                have lean_s1696 : (Eq let744 True) := by timed Eq.trans lean_s1695 lean_r41
                have lean_s1697 : (Eq let200 True) := by timed Eq.trans lean_r287 lean_s1696
                have lean_s1698 : let200 := by timed trueElim lean_s1697
                have lean_s1699 : (Eq let33 False) := by timed Eq.trans lean_s1694 lean_s1698
                have lean_s1700 : (Eq let24 False) := by timed Eq.trans lean_s1691 lean_s1699
                have lean_s1701 : let977 := by timed falseElim lean_s1700
                show let977 from lean_s1701
          ))))))
        have lean_s1686 : (Implies let1059 let977) := by liftOrNToImp lean_s1685, 3
        have lean_s1687 : let977 := by timed modusPonens lean_s1684 lean_s1686
        show let977 from lean_s1687
  ))))))
have lean_s1677 : (Implies let1058 let977) := by liftOrNToImp lean_s1676, 3
have lean_s1678 : (Or (Not let1058) let977) := by timed impliesElim lean_s1677
have lean_s1679 : let1057 := by R1 lean_s1675, lean_s1678, let1058, [(- 1), (- 1)]
let lean_s1680 := by R1 lean_s1674, lean_s1679, let24, [(- 1), (- 1)]
let lean_s1681 := by R2 lean_s1680, lean_s1562, let9, [(- 1), (- 1)]
let lean_s1682 := by R1 lean_s1681, lean_s1564, let210, [(- 1), 0]
let lean_s1683 := by R2 lean_s1682, lean_s1585, let969, [(- 1), (- 1)]
let lean_s1684 := by R2 lean_s1683, lean_s1587, let474, [(- 1), 0]
let lean_s1685 := by R1 lean_s1684, lean_s1598, let145, [(- 1), (- 1)]
let lean_s1686 := by R2 lean_s1685, lean_s1360, let16, [(- 1), 0]
have lean_s1687 : (Or let902 (Or let981 (Or let923 (Or let1025 (Or let902 (Or let923 (Or let1025 let925))))))) := by R1 lean_s1686, lean_s1648, let44, [(- 1), (- 1)]
have lean_s1688 : (Or let902 (Or let981 let1056)) := by factor lean_s1687, 10
have lean_s1689 : (Or let902 (Or let981 (Or let923 (Or let1062 (Or let902 (Or let923 (Or let902 (Or let923 let1055)))))))) := by R1 lean_s1651, lean_s1688, let221, [(- 1), (- 1)]
have lean_s1690 : (Or let902 (Or let981 (Or let923 let1062))) := by factor lean_s1689, 10
let lean_s1691 := by R1 lean_s1506, lean_s1690, let20, [(- 1), (- 1)]
let lean_s1692 := by R2 lean_s1691, lean_s1432, let24, [(- 1), (- 1)]
let lean_s1693 := by R1 lean_s1692, lean_s1616, let430, [(- 1), (- 1)]
let lean_s1694 := by R1 lean_s1693, lean_s1688, let221, [(- 1), (- 1)]
let lean_s1695 := by R2 lean_s1694, lean_s1562, let9, [(- 1), (- 1)]
let lean_s1696 := by R1 lean_s1695, lean_s1564, let210, [(- 1), 0]
let lean_s1697 := by R2 lean_s1696, lean_s1585, let969, [(- 1), (- 1)]
let lean_s1698 := by R2 lean_s1697, lean_s1587, let474, [(- 1), 0]
let lean_s1699 := by R1 lean_s1698, lean_s1598, let145, [(- 1), (- 1)]
let lean_s1700 := by R2 lean_s1699, lean_s1360, let16, [(- 1), 0]
have lean_s1701 : (Or let902 (Or let981 (Or let923 (Or let902 (Or let981 (Or let923 (Or let902 (Or let981 let926)))))))) := by R1 lean_s1700, lean_s1648, let44, [(- 1), (- 1)]
have lean_s1702 : let1055 := by factor lean_s1701, (- 1)
let lean_s1703 := by R1 lean_s1488, lean_s1702, let29, [(- 1), (- 1)]
let lean_s1704 := by R2 lean_s1703, lean_s1562, let9, [(- 1), (- 1)]
let lean_s1705 := by R1 lean_s1704, lean_s1564, let210, [(- 1), 0]
let lean_s1706 := by R1 lean_s1705, lean_s1648, let44, [(- 1), (- 1)]
let lean_s1707 := by R2 lean_s1706, lean_s1585, let969, [(- 1), (- 1)]
let lean_s1708 := by R2 lean_s1707, lean_s1587, let474, [(- 1), 0]
let lean_s1709 := by R1 lean_s1708, lean_s1598, let145, [(- 1), (- 1)]
have lean_s1710 : (Or let902 (Or let923 (Or let902 let926))) := by R2 lean_s1709, lean_s1360, let16, [(- 1), 0]
have lean_s1711 : let924 := by factor lean_s1710, (- 1)
have lean_s1712 : let435 := by andElim lean_s1342, 11
have lean_s1713 : (Or let434 let31) := by timed iteElim2 lean_s1712
have lean_s1714 : (Or let31 let434) := by permutateOr lean_s1713, [1, 0], (- 1)
let lean_s1715 := by R2 lean_s1711, lean_s1714, let31, [(- 1), (- 1)]
let lean_s1716 := by R2 lean_s1715, lean_s1366, let59, [(- 1), (- 1)]
have lean_s1717 : (Or let922 let433) := by timed @cnfAndPos [let433, let432] 0
have lean_s1718 : (Or let433 let922) := by permutateOr lean_s1717, [1, 0], (- 1)
let lean_s1719 := by R1 lean_s1716, lean_s1718, let434, [(- 1), (- 1)]
have lean_s1720 : (Or let921 let433) := by timed @cnfAndPos [let433, let316] 0
have lean_s1721 : (Or let433 let921) := by permutateOr lean_s1720, [1, 0], (- 1)
have lean_s1722 : (Or let433 let433) := by R1 lean_s1719, lean_s1721, let453, [(- 1), (- 1)]
have lean_s1723 : let433 := by factor lean_s1722, 1
let lean_s1724 := by R2 lean_s1442, lean_s1723, let433, [(- 1), 0]
have lean_s1725 : (Or let922 let58) := by timed iteElim1 lean_s1712
have lean_s1726 : (Or let58 let922) := by permutateOr lean_s1725, [1, 0], (- 1)
let lean_s1727 := by R2 lean_s1724, lean_s1726, let58, [(- 1), (- 1)]
have lean_s1728 : (Or let922 let432) := by timed @cnfAndPos [let433, let432] 1
have lean_s1729 : (Or let432 let922) := by permutateOr lean_s1728, [1, 0], (- 1)
have lean_s1730 : (Or let902 (Or let981 (Or let1062 (Or let593 let1141)))) := by R2 lean_s1727, lean_s1729, let432, [(- 1), (- 1)]
have lean_s1731 : (Or let902 (Or let981 (Or let1062 (Or let593 let922)))) := by factor lean_s1730, (- 1)
let lean_s1732 := by R2 lean_s1731, lean_s1714, let434, [(- 1), (- 1)]
have lean_s1733 : (Or let902 (Or let981 (Or let1062 (Or let593 let1140)))) := by R1 lean_s1732, lean_s1702, let31, [(- 1), (- 1)]
have lean_s1734 : (Or let902 (Or let981 let1063)) := by factor lean_s1733, 5
let lean_s1735 := by R2 lean_s1734, lean_s1487, let29, [(- 1), (- 1)]
let lean_s1736 := by R1 lean_s1562, lean_s1564, let210, [(- 1), 0]
let lean_s1737 := by R2 lean_s1736, lean_s1585, let969, [(- 1), (- 1)]
let lean_s1738 := by R2 lean_s1737, lean_s1587, let474, [(- 1), 0]
let lean_s1739 := by R1 lean_s1738, lean_s1452, let9, [(- 1), (- 1)]
let lean_s1740 := by R2 lean_s1739, lean_s1360, let16, [(- 1), 0]
let lean_s1741 := by R1 lean_s1740, lean_s1648, let44, [(- 1), (- 1)]
let lean_s1742 := by R1 lean_s1741, lean_s1598, let145, [(- 1), (- 1)]
have lean_s1743 : (Or let902 (Or let916 (Or let1064 (Or let923 (Or let977 (Or let1062 let925)))))) := by R2 lean_s1742, lean_s1360, let16, [(- 1), 0]
have lean_s1744 : (Or let902 (Or let916 (Or let1064 (Or let923 (Or let977 let1062))))) := by factor lean_s1743, 9
let lean_s1745 := by R2 lean_s1744, lean_s1714, let31, [(- 1), (- 1)]
let lean_s1746 := by R1 lean_s1745, lean_s1729, let434, [(- 1), (- 1)]
let lean_s1747 := by R1 lean_s1746, lean_s1441, let432, [(- 1), (- 1)]
let lean_s1748 := by R2 lean_s1747, lean_s1723, let433, [(- 1), 0]
let lean_s1749 := by R2 lean_s1748, lean_s1398, let20, [(- 1), (- 1)]
let lean_s1750 := by R2 lean_s1749, lean_s1347, let37, [(- 1), (- 1)]
let lean_s1751 := by R2 lean_s1750, lean_s1432, let24, [(- 1), (- 1)]
let lean_s1752 := by R1 lean_s1751, lean_s1457, let428, [(- 1), (- 1)]
let lean_s1753 := by R1 lean_s1752, lean_s1460, let449, [(- 1), (- 1)]
have lean_s1754 : (Or let902 (Or let916 (Or let915 let917))) := by R1 lean_s1753, lean_s1464, let430, [(- 1), (- 1)]
have lean_s1755 : (Or let902 (Or let916 (Or let915 let914))) := by factor lean_s1754, (- 1)
let lean_s1756 := by R1 lean_s1755, lean_s1470, let427, [(- 1), (- 1)]
let lean_s1757 := by R1 lean_s1756, lean_s1475, let267, [(- 1), (- 1)]
let lean_s1758 := by R2 lean_s1757, lean_s1479, let75, [(- 1), (- 1)]
have lean_s1759 : (Or let903 let271) := by timed @cnfAndPos [let271, let188] 0
have lean_s1760 : (Or let271 let903) := by permutateOr lean_s1759, [1, 0], (- 1)
have lean_s1761 : (Or let902 (Or let905 (Or let905 let904))) := by R2 lean_s1758, lean_s1760, let271, [(- 1), (- 1)]
have lean_s1762 : (Or let902 let906) := by factor lean_s1761, (- 1)
have lean_s1763 : (Or let902 let904) := by R2 lean_s1762, lean_s1483, let188, [(- 1), (- 1)]
have lean_s1764 : (Or let902 let903) := by factor lean_s1763, (- 1)
have lean_s1765 : (Or let902 (Or let1062 (Or let593 let902))) := by R1 lean_s1735, lean_s1764, let451, [(- 1), (- 1)]
have lean_s1766 : (Or let902 let1063) := by factor lean_s1765, 3
have lean_s1767 : (Or let902 (Or let981 (Or let1142 (Or let977 (Or let593 (Or let902 let593)))))) := by R1 lean_s1399, lean_s1766, let20, [(- 1), (- 1)]
have lean_s1768 : (Or let902 (Or let981 (Or let1142 (Or let977 let593)))) := by factor lean_s1767, (- 1)
let lean_s1769 := by R2 lean_s1768, lean_s1562, let9, [(- 1), (- 1)]
let lean_s1770 := by R1 lean_s1769, lean_s1564, let210, [(- 1), 0]
let lean_s1771 := by R2 lean_s1770, lean_s1585, let969, [(- 1), (- 1)]
let lean_s1772 := by R2 lean_s1771, lean_s1587, let474, [(- 1), 0]
have lean_s1773 : (Or let902 (Or let1142 (Or let499 (Or let721 let1027)))) :=
  (scope (fun lean_a340 : let59 =>
    (scope (fun lean_a341 : let58 =>
      (scope (fun lean_a342 : let16 =>
        (scope (fun lean_a343 : let145 =>
          have lean_s1773 : let962 := by timed Eq.symm lean_r158
          have lean_s1774 : let480 := by timed eqResolve lean_a343 lean_s1773
          have lean_s1775 : let1151 := by timed And.intro lean_s1774 lean_a341
          have lean_s1776 : (Or let957 let1147) :=
            (scope (fun lean_a340 : let480 =>
              (scope (fun lean_a341 : let58 =>
                have lean_s1776 : let1149 := by timed Eq.symm lean_a341
                have lean_s1777 : let960 := by timed Eq.symm lean_a340
                have lean_s1778 : let480 := by timed Eq.symm lean_s1777
                have lean_s1779 : let967 := by timed flipCongrArg lean_s1778 [xx5fcount]
                have lean_s1780 : let1026 := by timed Eq.trans lean_s1776 lean_s1779
                show let1026 from lean_s1780
            ))))
          have lean_s1777 : (Implies let1151 let1026) := by liftOrNToImp lean_s1776, 2
          have lean_s1778 : let1026 := by timed modusPonens lean_s1775 lean_s1777
          have lean_s1779 : let954 := by timed And.intro lean_s1774 lean_a340
          have lean_s1780 : let958 :=
            (scope (fun lean_a340 : let480 =>
              (scope (fun lean_a341 : let59 =>
                have lean_s1780 : let961 := by timed Eq.symm lean_a341
                have lean_s1781 : let960 := by timed Eq.symm lean_a340
                have lean_s1782 : let480 := by timed Eq.symm lean_s1781
                have lean_s1783 : let959 := by timed flipCongrArg lean_s1782 [sx5fcount]
                have lean_s1784 : let930 := by timed Eq.trans lean_s1780 lean_s1783
                show let930 from lean_s1784
            ))))
          have lean_s1781 : let955 := by liftOrNToImp lean_s1780, 2
          have lean_s1782 : let930 := by timed modusPonens lean_s1779 lean_s1781
          let lean_s1783 := by timed And.intro lean_s1778 lean_s1782
          have lean_s1784 : let1027 := by timed And.intro lean_a342 lean_s1783
          show let1027 from lean_s1784
  ))))))))
have lean_s1774 : let1150 := by liftOrNToImp lean_s1773, 4
have lean_s1775 : (Eq let147 let147) := by timed rfl
let lean_s1776 := by timed flipCongrArg lean_s1775 [Implies]
have lean_s1777 : let1029 := by timed falseIntro lean_s1420
have lean_s1778 : (Eq let1150 let149) := by timed congr lean_s1776 lean_s1777
have lean_s1779 : (Eq let1150 let148) := by timed Eq.trans lean_s1778 lean_r29
have lean_s1780 : let148 := by timed eqResolve lean_s1774 lean_s1779
have lean_s1781 : (Or let902 (Or let1142 let928)) := by timed flipNotAnd lean_s1780 [let59, let58, let16, let145]
have lean_s1782 : (Or let499 (Or let902 (Or let1142 let721))) := by permutateOr lean_s1781, [2, 0, 1, 3], (- 1)
let lean_s1783 := by R1 lean_s1772, lean_s1782, let145, [(- 1), (- 1)]
let lean_s1784 := by R2 lean_s1783, lean_s1360, let16, [(- 1), 0]
have lean_s1785 : (Or let902 (Or let1142 (Or let981 (Or let977 let1038)))) :=
  (scope (fun lean_a340 : let59 =>
    (scope (fun lean_a341 : let58 =>
      (scope (fun lean_a342 : let29 =>
        (scope (fun lean_a343 : let24 =>
          (scope (fun lean_a344 : let16 =>
            (scope (fun lean_a345 : let44 =>
              have lean_s1785 : let996 := by timed Eq.symm lean_r230
              have lean_s1786 : let603 := by timed eqResolve lean_a345 lean_s1785
              let lean_s1787 := by timed And.intro lean_a343 lean_a341
              have lean_s1788 : let1146 := by timed And.intro lean_s1786 lean_s1787
              have lean_s1789 : (Or let992 let1148) :=
                (scope (fun lean_a340 : let603 =>
                  (scope (fun lean_a341 : let24 =>
                    (scope (fun lean_a342 : let58 =>
                      have lean_s1789 : let1149 := by timed Eq.symm lean_a342
                      have lean_s1790 : let555 := by timed Eq.symm lean_a341
                      have lean_s1791 : let24 := by timed Eq.symm lean_s1790
                      let lean_s1792 := by timed Eq.trans lean_s1789 lean_s1791
                      have lean_s1793 : let995 := by timed Eq.symm lean_a340
                      have lean_s1794 : let603 := by timed Eq.symm lean_s1793
                      have lean_s1795 : let1002 := by timed flipCongrArg lean_s1794 [xx5fcount]
                      have lean_s1796 : let1026 := by timed Eq.trans lean_s1792 lean_s1795
                      show let1026 from lean_s1796
                ))))))
              have lean_s1790 : (Implies let1146 let1026) := by liftOrNToImp lean_s1789, 3
              have lean_s1791 : let1026 := by timed modusPonens lean_s1788 lean_s1790
              let lean_s1792 := by timed And.intro lean_a342 lean_a340
              have lean_s1793 : let989 := by timed And.intro lean_s1786 lean_s1792
              have lean_s1794 : let993 :=
                (scope (fun lean_a340 : let603 =>
                  (scope (fun lean_a341 : let29 =>
                    (scope (fun lean_a342 : let59 =>
                      have lean_s1794 : let961 := by timed Eq.symm lean_a342
                      have lean_s1795 : let336 := by timed Eq.symm lean_a341
                      have lean_s1796 : let29 := by timed Eq.symm lean_s1795
                      let lean_s1797 := by timed Eq.trans lean_s1794 lean_s1796
                      have lean_s1798 : let995 := by timed Eq.symm lean_a340
                      have lean_s1799 : let603 := by timed Eq.symm lean_s1798
                      have lean_s1800 : let994 := by timed flipCongrArg lean_s1799 [sx5fcount]
                      have lean_s1801 : let930 := by timed Eq.trans lean_s1797 lean_s1800
                      show let930 from lean_s1801
                ))))))
              have lean_s1795 : let990 := by liftOrNToImp lean_s1794, 3
              have lean_s1796 : let930 := by timed modusPonens lean_s1793 lean_s1795
              let lean_s1797 := by timed And.intro lean_s1791 lean_s1796
              have lean_s1798 : let1027 := by timed And.intro lean_a344 lean_s1797
              show let1027 from lean_s1798
  ))))))))))))
have lean_s1786 : let1144 := by liftOrNToImp lean_s1785, 6
have lean_s1787 : (Eq let66 let66) := by timed rfl
let lean_s1788 := by timed flipCongrArg lean_s1787 [Implies]
have lean_s1789 : let1029 := by timed falseIntro lean_s1420
have lean_s1790 : (Eq let1144 let68) := by timed congr lean_s1788 lean_s1789
have lean_s1791 : (Eq let1144 let67) := by timed Eq.trans lean_s1790 lean_r8
have lean_s1792 : let67 := by timed eqResolve lean_s1786 lean_s1791
have lean_s1793 : (Or let902 (Or let1142 let985)) := by timed flipNotAnd lean_s1792 [let59, let58, let29, let24, let16, let44]
have lean_s1794 : (Or let499 (Or let902 (Or let981 (Or let1142 let978)))) := by permutateOr lean_s1793, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1795 := by R1 lean_s1784, lean_s1794, let44, [(- 1), (- 1)]
have lean_s1796 : (Or let902 (Or let981 (Or let1142 (Or let977 (Or let902 (Or let1142 let1143)))))) := by R2 lean_s1795, lean_s1360, let16, [(- 1), 0]
have lean_s1797 : let1143 := by factor lean_s1796, (- 1)
let lean_s1798 := by R2 lean_s1797, lean_s1432, let24, [(- 1), (- 1)]
let lean_s1799 := by R1 lean_s1798, lean_s1435, let430, [(- 1), (- 1)]
let lean_s1800 := by R1 lean_s1799, lean_s1441, let271, [(- 1), (- 1)]
let lean_s1801 := by R2 lean_s1800, lean_s1723, let433, [(- 1), 0]
let lean_s1802 := by R2 lean_s1801, lean_s1726, let58, [(- 1), (- 1)]
have lean_s1803 : (Or let902 (Or let981 let1141)) := by R2 lean_s1802, lean_s1729, let432, [(- 1), (- 1)]
have lean_s1804 : (Or let902 (Or let981 let922)) := by factor lean_s1803, (- 1)
let lean_s1805 := by R2 lean_s1804, lean_s1714, let434, [(- 1), (- 1)]
have lean_s1806 : (Or let902 (Or let981 let1140)) := by R1 lean_s1805, lean_s1702, let31, [(- 1), (- 1)]
have lean_s1807 : let1140 := by factor lean_s1806, (- 1)
let lean_s1808 := by R2 lean_s1807, lean_s1487, let29, [(- 1), (- 1)]
have lean_s1809 : (Or let902 let902) := by R1 lean_s1808, lean_s1764, let451, [(- 1), (- 1)]
have lean_s1810 : let902 := by factor lean_s1809, 1
have lean_s1811 : let453 := by R1 lean_s1366, lean_s1810, let59, [(- 1), 0]
have lean_s1812 : let33 := by R2 lean_s1364, lean_s1811, let453, [(- 1), 0]
let lean_s1813 := by R2 lean_s1361, lean_s1812, let33, [(- 1), 0]
have lean_s1814 : let1178 :=
  (scope (fun lean_a340 : let316 =>
    have lean_s1814 : let1178 :=
      (scope (fun lean_a341 : let316 =>
        have lean_s1814 : let317 := by timed Eq.symm lean_a341
        have lean_s1815 : let316 := by timed Eq.symm lean_s1814
        let lean_s1816 := by timed flipCongrArg lean_s1815 [Eq]
        have lean_s1817 : let186 := by timed rfl
        have lean_s1818 : (Eq let271 let369) := by timed congr lean_s1816 lean_s1817
        have lean_s1819 : (Eq let702 let171) := by timed flipCongrArg lean_r130 [Not]
        have lean_s1820 : (Eq let702 True) := by timed Eq.trans lean_s1819 lean_r41
        have lean_s1821 : (Eq let370 True) := by timed Eq.trans lean_r260 lean_s1820
        have lean_s1822 : let370 := by timed trueElim lean_s1821
        have lean_s1823 : (Eq let271 False) := by timed Eq.trans lean_s1818 lean_s1822
        have lean_s1824 : let915 := by timed falseElim lean_s1823
        show let915 from lean_s1824
      ))
    have lean_s1815 : let1179 := by liftOrNToImp lean_s1814, 1
    have lean_s1816 : let915 := by timed modusPonens lean_a340 lean_s1815
    show let915 from lean_s1816
  ))
have lean_s1815 : let1179 := by liftOrNToImp lean_s1814, 1
have lean_s1816 : let1178 := by timed impliesElim lean_s1815
have lean_s1817 : (Or let915 let1175) := by permutateOr lean_s1816, [1, 0], (- 1)
have lean_s1818 : (Or let921 let316) := by timed @cnfAndPos [let433, let316] 1
have lean_s1819 : (Or let316 let921) := by permutateOr lean_s1818, [1, 0], (- 1)
have lean_s1820 : let316 := by R2 lean_s1819, lean_s1811, let453, [(- 1), 0]
have lean_s1821 : let915 := by R2 lean_s1817, lean_s1820, let316, [(- 1), 0]
have lean_s1822 : let903 := by R1 lean_s1760, lean_s1821, let271, [(- 1), 0]
have lean_s1823 : let29 := by R1 lean_s1487, lean_s1822, let451, [(- 1), 0]
let lean_s1824 := by R2 lean_s1813, lean_s1823, let29, [(- 1), 0]
have lean_s1825 : let1176 :=
  (scope (fun lean_a341 : let316 =>
    have lean_s1825 : let1176 :=
      (scope (fun lean_a341 : let316 =>
        have lean_s1825 : let317 := by timed Eq.symm lean_a341
        have lean_s1826 : let316 := by timed Eq.symm lean_s1825
        let lean_s1827 := by timed flipCongrArg lean_s1826 [Eq]
        have lean_s1828 : let295 := by timed rfl
        have lean_s1829 : (Eq let432 let401) := by timed congr lean_s1827 lean_s1828
        have lean_s1830 : (Eq let604 let171) := by timed flipCongrArg lean_r152 [Not]
        have lean_s1831 : (Eq let604 True) := by timed Eq.trans lean_s1830 lean_r41
        have lean_s1832 : (Eq let402 True) := by timed Eq.trans lean_r231 lean_s1831
        have lean_s1833 : let402 := by timed trueElim lean_s1832
        have lean_s1834 : let1139 := by timed Eq.trans lean_s1829 lean_s1833
        have lean_s1835 : let1134 := by timed falseElim lean_s1834
        show let1134 from lean_s1835
      ))
    have lean_s1826 : let1177 := by liftOrNToImp lean_s1825, 1
    have lean_s1827 : let1134 := by timed modusPonens lean_a341 lean_s1826
    show let1134 from lean_s1827
  ))
have lean_s1826 : let1177 := by liftOrNToImp lean_s1825, 1
have lean_s1827 : let1176 := by timed impliesElim lean_s1826
have lean_s1828 : let1134 := by R2 lean_s1827, lean_s1820, let316, [(- 1), 0]
have lean_s1829 : let922 := by R1 lean_s1729, lean_s1828, let432, [(- 1), 0]
have lean_s1830 : let31 := by R1 lean_s1714, lean_s1829, let434, [(- 1), 0]
let lean_s1831 := by R2 lean_s1824, lean_s1830, let31, [(- 1), 0]
have lean_s1832 : let918 := by R1 lean_s1435, lean_s1821, let271, [(- 1), 0]
have lean_s1833 : let24 := by R1 lean_s1432, lean_s1832, let430, [(- 1), 0]
let lean_s1834 := by R2 lean_s1831, lean_s1833, let24, [(- 1), 0]
let lean_s1835 := by R1 lean_s1347, lean_s1382, let449, [(- 1), (- 1)]
have lean_s1836 : (Or let1180 (Or let923 (Or let981 (Or let1064 (Or let977 (Or let1115 let1163)))))) :=
  (scope (fun lean_a341 : let33 =>
    (scope (fun lean_a342 : let31 =>
      (scope (fun lean_a343 : let29 =>
        (scope (fun lean_a344 : let37 =>
          (scope (fun lean_a345 : let24 =>
            (scope (fun lean_a346 : let80 =>
              (scope (fun lean_a347 : let16 =>
                (scope (fun lean_a348 : let9 =>
                  have lean_s1836 : let1076 := by timed Eq.symm lean_r272
                  have lean_s1837 : let717 := by timed eqResolve lean_a348 lean_s1836
                  let lean_s1838 := by timed And.intro lean_a345 lean_a342
                  have lean_s1839 : let1127 := by timed And.intro lean_a346 lean_s1838
                  have lean_s1840 : let1129 :=
                    (scope (fun lean_a341 : let80 =>
                      (scope (fun lean_a342 : let24 =>
                        (scope (fun lean_a343 : let31 =>
                          have lean_s1840 : let968 := by timed Eq.symm lean_a343
                          have lean_s1841 : let555 := by timed Eq.symm lean_a342
                          have lean_s1842 : let24 := by timed Eq.symm lean_s1841
                          let lean_s1843 := by timed Eq.trans lean_s1840 lean_s1842
                          have lean_s1844 : let1130 := by timed Eq.symm lean_a341
                          have lean_s1845 : let80 := by timed Eq.symm lean_s1844
                          have lean_s1846 : let310 := by timed Eq.trans lean_s1843 lean_s1845
                          show let310 from lean_s1846
                    ))))))
                  have lean_s1841 : let1128 := by liftOrNToImp lean_s1840, 3
                  have lean_s1842 : let310 := by timed modusPonens lean_s1839 lean_s1841
                  have lean_s1843 : let1126 :=
                    (scope (fun lean_a341 : let310 =>
                      have lean_s1843 : let309 := by timed eqResolve lean_a341 lean_r102
                      have lean_s1844 : let1121 := by timed Eq.symm lean_s1843
                      show let1121 from lean_s1844
                    ))
                  have lean_s1844 : let1125 := by liftOrNToImp lean_s1843, 1
                  have lean_s1845 : let1121 := by timed modusPonens lean_s1842 lean_s1844
                  have lean_s1846 : let1122 := by timed And.intro lean_s1837 lean_s1845
                  have lean_s1847 : let1124 :=
                    (scope (fun lean_a341 : let717 =>
                      (scope (fun lean_a342 : let1121 =>
                        have lean_s1847 : let309 := by timed Eq.symm lean_a342
                        have lean_s1848 : let1121 := by timed Eq.symm lean_s1847
                        have lean_s1849 : let1075 := by timed Eq.symm lean_a341
                        have lean_s1850 : let717 := by timed Eq.symm lean_s1849
                        have lean_s1851 : let1078 := by timed flipCongrArg lean_s1850 [xx5fcount]
                        have lean_s1852 : let1026 := by timed Eq.trans lean_s1848 lean_s1851
                        show let1026 from lean_s1852
                    ))))
                  have lean_s1848 : let1123 := by liftOrNToImp lean_s1847, 2
                  have lean_s1849 : let1026 := by timed modusPonens lean_s1846 lean_s1848
                  let lean_s1850 := by timed And.intro lean_a343 lean_a341
                  let lean_s1851 := by timed And.intro lean_a344 lean_s1850
                  have lean_s1852 : let1190 := by timed And.intro lean_s1837 lean_s1851
                  have lean_s1853 : let1192 :=
                    (scope (fun lean_a341 : let717 =>
                      (scope (fun lean_a342 : let37 =>
                        (scope (fun lean_a343 : let29 =>
                          (scope (fun lean_a344 : let33 =>
                            have lean_s1853 : let1184 := by timed Eq.symm lean_a344
                            have lean_s1854 : let336 := by timed Eq.symm lean_a343
                            have lean_s1855 : let29 := by timed Eq.symm lean_s1854
                            let lean_s1856 := by timed Eq.trans lean_s1853 lean_s1855
                            have lean_s1857 : let167 := by timed Eq.symm lean_a342
                            have lean_s1858 : let37 := by timed Eq.symm lean_s1857
                            let lean_s1859 := by timed Eq.trans lean_s1856 lean_s1858
                            have lean_s1860 : let1075 := by timed Eq.symm lean_a341
                            have lean_s1861 : let717 := by timed Eq.symm lean_s1860
                            have lean_s1862 : let1074 := by timed flipCongrArg lean_s1861 [sx5fcount]
                            have lean_s1863 : let1003 := by timed Eq.trans lean_s1859 lean_s1862
                            show let1003 from lean_s1863
                    ))))))))
                  have lean_s1854 : let1191 := by liftOrNToImp lean_s1853, 4
                  have lean_s1855 : let1003 := by timed modusPonens lean_s1852 lean_s1854
                  let lean_s1856 := by timed And.intro lean_s1849 lean_s1855
                  have lean_s1857 : let1158 := by timed And.intro lean_a347 lean_s1856
                  show let1158 from lean_s1857
  ))))))))))))))))
have lean_s1837 : let1189 := by liftOrNToImp lean_s1836, 8
have lean_s1838 : (Eq let526 let526) := by timed rfl
let lean_s1839 := by timed flipCongrArg lean_s1838 [Implies]
have lean_s1840 : let1160 := by timed falseIntro lean_s1405
have lean_s1841 : (Eq let1189 let528) := by timed congr lean_s1839 lean_s1840
have lean_s1842 : (Eq let1189 let527) := by timed Eq.trans lean_s1841 lean_r188
have lean_s1843 : let527 := by timed eqResolve lean_s1837 lean_s1842
have lean_s1844 : (Or let1180 let1119) := by timed flipNotAnd lean_s1843 [let33, let31, let29, let37, let24, let80, let16, let9]
have lean_s1845 : (Or let499 (Or let1180 let1117)) := by permutateOr lean_s1844, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1846 := by R1 lean_s1835, lean_s1845, let37, [(- 1), (- 1)]
let lean_s1847 := by R1 lean_s1562, lean_s1564, let210, [(- 1), 0]
have lean_s1848 : (Or let1180 (Or let923 (Or let981 let1016))) :=
  (scope (fun lean_a341 : let33 =>
    (scope (fun lean_a342 : let31 =>
      (scope (fun lean_a343 : let29 =>
        (scope (fun lean_a344 : let24 =>
          (scope (fun lean_a345 : let16 =>
            (scope (fun lean_a346 : let44 =>
              have lean_s1848 : let996 := by timed Eq.symm lean_r230
              have lean_s1849 : let603 := by timed eqResolve lean_a346 lean_s1848
              let lean_s1850 := by timed And.intro lean_a344 lean_a342
              have lean_s1851 : let998 := by timed And.intro lean_s1849 lean_s1850
              have lean_s1852 : let1001 :=
                (scope (fun lean_a341 : let603 =>
                  (scope (fun lean_a342 : let24 =>
                    (scope (fun lean_a343 : let31 =>
                      have lean_s1852 : let968 := by timed Eq.symm lean_a343
                      have lean_s1853 : let555 := by timed Eq.symm lean_a342
                      have lean_s1854 : let24 := by timed Eq.symm lean_s1853
                      let lean_s1855 := by timed Eq.trans lean_s1852 lean_s1854
                      have lean_s1856 : let995 := by timed Eq.symm lean_a341
                      have lean_s1857 : let603 := by timed Eq.symm lean_s1856
                      have lean_s1858 : let1002 := by timed flipCongrArg lean_s1857 [xx5fcount]
                      have lean_s1859 : let931 := by timed Eq.trans lean_s1855 lean_s1858
                      show let931 from lean_s1859
                ))))))
              have lean_s1853 : let999 := by liftOrNToImp lean_s1852, 3
              have lean_s1854 : let931 := by timed modusPonens lean_s1851 lean_s1853
              let lean_s1855 := by timed And.intro lean_a343 lean_a341
              have lean_s1856 : let1187 := by timed And.intro lean_s1849 lean_s1855
              have lean_s1857 : (Or let992 let1188) :=
                (scope (fun lean_a341 : let603 =>
                  (scope (fun lean_a342 : let29 =>
                    (scope (fun lean_a343 : let33 =>
                      have lean_s1857 : let1184 := by timed Eq.symm lean_a343
                      have lean_s1858 : let336 := by timed Eq.symm lean_a342
                      have lean_s1859 : let29 := by timed Eq.symm lean_s1858
                      let lean_s1860 := by timed Eq.trans lean_s1857 lean_s1859
                      have lean_s1861 : let995 := by timed Eq.symm lean_a341
                      have lean_s1862 : let603 := by timed Eq.symm lean_s1861
                      have lean_s1863 : let994 := by timed flipCongrArg lean_s1862 [sx5fcount]
                      have lean_s1864 : let1003 := by timed Eq.trans lean_s1860 lean_s1863
                      show let1003 from lean_s1864
                ))))))
              have lean_s1858 : (Implies let1187 let1003) := by liftOrNToImp lean_s1857, 3
              have lean_s1859 : let1003 := by timed modusPonens lean_s1856 lean_s1858
              let lean_s1860 := by timed And.intro lean_s1854 lean_s1859
              have lean_s1861 : let1004 := by timed And.intro lean_a345 lean_s1860
              show let1004 from lean_s1861
  ))))))))))))
have lean_s1849 : let1185 := by liftOrNToImp lean_s1848, 6
have lean_s1850 : (Eq let49 let49) := by timed rfl
let lean_s1851 := by timed flipCongrArg lean_s1850 [Implies]
have lean_s1852 : let1006 := by timed falseIntro lean_s1353
have lean_s1853 : (Eq let1185 let51) := by timed congr lean_s1851 lean_s1852
have lean_s1854 : (Eq let1185 let50) := by timed Eq.trans lean_s1853 lean_r3
have lean_s1855 : let50 := by timed eqResolve lean_s1849 lean_s1854
have lean_s1856 : (Or let1180 let986) := by timed flipNotAnd lean_s1855 [let33, let31, let29, let24, let16, let44]
have lean_s1857 : (Or let499 (Or let1180 let982)) := by permutateOr lean_s1856, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1858 := by R2 lean_s1857, lean_s1833, let24, [(- 1), 0]
let lean_s1859 := by R2 lean_s1858, lean_s1823, let29, [(- 1), 0]
let lean_s1860 := by R2 lean_s1859, lean_s1830, let31, [(- 1), 0]
let lean_s1861 := by R2 lean_s1860, lean_s1812, let33, [(- 1), 0]
have lean_s1862 : let975 := by R2 lean_s1861, lean_s1360, let16, [(- 1), 0]
let lean_s1863 := by R1 lean_s1847, lean_s1862, let44, [(- 1), 0]
have lean_s1864 : (Or let1180 (Or let923 (Or let499 (Or let721 let1004)))) :=
  (scope (fun lean_a341 : let33 =>
    (scope (fun lean_a342 : let31 =>
      (scope (fun lean_a343 : let16 =>
        (scope (fun lean_a344 : let145 =>
          have lean_s1864 : let962 := by timed Eq.symm lean_r158
          have lean_s1865 : let480 := by timed eqResolve lean_a344 lean_s1864
          have lean_s1866 : let963 := by timed And.intro lean_s1865 lean_a342
          have lean_s1867 : let966 :=
            (scope (fun lean_a341 : let480 =>
              (scope (fun lean_a342 : let31 =>
                have lean_s1867 : let968 := by timed Eq.symm lean_a342
                have lean_s1868 : let960 := by timed Eq.symm lean_a341
                have lean_s1869 : let480 := by timed Eq.symm lean_s1868
                have lean_s1870 : let967 := by timed flipCongrArg lean_s1869 [xx5fcount]
                have lean_s1871 : let931 := by timed Eq.trans lean_s1867 lean_s1870
                show let931 from lean_s1871
            ))))
          have lean_s1868 : let964 := by liftOrNToImp lean_s1867, 2
          have lean_s1869 : let931 := by timed modusPonens lean_s1866 lean_s1868
          have lean_s1870 : let1182 := by timed And.intro lean_s1865 lean_a341
          have lean_s1871 : (Or let957 let1183) :=
            (scope (fun lean_a341 : let480 =>
              (scope (fun lean_a342 : let33 =>
                have lean_s1871 : let1184 := by timed Eq.symm lean_a342
                have lean_s1872 : let960 := by timed Eq.symm lean_a341
                have lean_s1873 : let480 := by timed Eq.symm lean_s1872
                have lean_s1874 : let959 := by timed flipCongrArg lean_s1873 [sx5fcount]
                have lean_s1875 : let1003 := by timed Eq.trans lean_s1871 lean_s1874
                show let1003 from lean_s1875
            ))))
          have lean_s1872 : (Implies let1182 let1003) := by liftOrNToImp lean_s1871, 2
          have lean_s1873 : let1003 := by timed modusPonens lean_s1870 lean_s1872
          let lean_s1874 := by timed And.intro lean_s1869 lean_s1873
          have lean_s1875 : let1004 := by timed And.intro lean_a343 lean_s1874
          show let1004 from lean_s1875
  ))))))))
have lean_s1865 : let1181 := by liftOrNToImp lean_s1864, 4
have lean_s1866 : (Eq let488 let488) := by timed rfl
let lean_s1867 := by timed flipCongrArg lean_s1866 [Implies]
have lean_s1868 : let1006 := by timed falseIntro lean_s1353
have lean_s1869 : (Eq let1181 let490) := by timed congr lean_s1867 lean_s1868
have lean_s1870 : (Eq let1181 let489) := by timed Eq.trans lean_s1869 lean_r166
have lean_s1871 : let489 := by timed eqResolve lean_s1865 lean_s1870
have lean_s1872 : (Or let1180 let929) := by timed flipNotAnd lean_s1871 [let33, let31, let16, let145]
have lean_s1873 : (Or let499 (Or let1180 let927)) := by permutateOr lean_s1872, [2, 0, 1, 3], (- 1)
let lean_s1874 := by R2 lean_s1873, lean_s1360, let16, [(- 1), 0]
let lean_s1875 := by R2 lean_s1874, lean_s1812, let33, [(- 1), 0]
have lean_s1876 : let721 := by R2 lean_s1875, lean_s1830, let31, [(- 1), 0]
let lean_s1877 := by R1 lean_s1585, lean_s1876, let145, [(- 1), 0]
have lean_s1878 : let969 := by R2 lean_s1877, lean_s1587, let474, [(- 1), 0]
have lean_s1879 : let9 := by R2 lean_s1863, lean_s1878, let969, [(- 1), 0]
let lean_s1880 := by R2 lean_s1846, lean_s1879, let9, [(- 1), 0]
let lean_s1881 := by R2 lean_s1880, lean_s1833, let24, [(- 1), 0]
let lean_s1882 := by R2 lean_s1881, lean_s1823, let29, [(- 1), 0]
let lean_s1883 := by R2 lean_s1882, lean_s1830, let31, [(- 1), 0]
let lean_s1884 := by R2 lean_s1883, lean_s1812, let33, [(- 1), 0]
let lean_s1885 := by R2 lean_s1884, lean_s1360, let16, [(- 1), 0]
let lean_s1886 := by R1 lean_s1885, lean_s1387, let448, [(- 1), (- 1)]
let lean_s1887 := by R2 lean_s1886, lean_s1391, let80, [(- 1), (- 1)]
have lean_s1888 : let1109 := by R2 lean_s1887, lean_s1394, let388, [(- 1), (- 1)]
have lean_s1889 : let920 := by factor lean_s1888, 1
have lean_s1890 : let20 := by R1 lean_s1398, lean_s1889, let428, [(- 1), 0]
let lean_s1891 := by R2 lean_s1834, lean_s1890, let20, [(- 1), 0]
have lean_s1892 : let1064 := by R2 lean_s1891, lean_s1879, let9, [(- 1), 0]
have lean_s1893 : let449 := by R1 lean_s1347, lean_s1892, let37, [(- 1), 0]
have lean_s1894 : let27 := by R2 lean_s1345, lean_s1893, let449, [(- 1), 0]
let lean_s1895 := by R2 lean_s11, lean_s1894, let27, [(- 1), 0]
let lean_s1896 := by R2 lean_s1895, lean_s1890, let20, [(- 1), 0]
let lean_s1897 := by R2 lean_s1896, lean_s1879, let9, [(- 1), 0]
let lean_s1898 := by R2 lean_s1897, lean_s1833, let24, [(- 1), 0]
let lean_s1899 := by R2 lean_s1898, lean_s1823, let29, [(- 1), 0]
let lean_s1900 := by R2 lean_s1899, lean_s1830, let31, [(- 1), 0]
let lean_s1901 := by R2 lean_s1900, lean_s1812, let33, [(- 1), 0]
exact (show False from by R2 lean_s1901, lean_s1360, let16, [0, 0])


