open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {fmtx5flength : Int}
variable {xx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {percent : Int}
variable {fmt0 : Int}
variable {arg0 : Int}
variable {percent : Int}
variable {fmt1 : Int}
variable {adrx5fmedlo : Int}
variable {s : Int}
variable {arg1 : Int}
variable {adrx5flo : Int}
variable {s : Int}
variable {adrx5fmedlo : Int}
variable {adrx5fmedhi : Int}
variable {selectx5fformat : (Int -> Int)}
variable {x : Int}
variable {arg1 : Int}
variable {adrx5fhi : Int}
variable {adrx5flo : Int}
variable {arg0 : Int}
variable {fmtx5flength : Int}
variable {adrx5fhi : Int}
variable {distance : Int}
variable {sx5fcount : (Int -> Int)}
variable {selectx5fformat : (Int -> Int)}
variable {adrx5fmedhi : Int}
variable {fmt1 : Int}
variable {fmt0 : Int}
variable {distance : Int}
variable {xx5fcount : (Int -> Int)}
variable {x : Int}

theorem th0 :
  let let1 := (Int.ofNat 37)
  let let2 := (Int.ofNat 120)
  let let3 := (Eq let2 let1)
  let let4 := (Eq let3 False)
  let let5 := (Int.ofNat 3)
  let let6 := (Eq fmt1 let5)
  let let7 := (Int.ofNat 2)
  let let8 := (Neg.neg let7)
  let let9 := (binrel% HAdd.hAdd let8 fmt1)
  let let10 := (xx5fcount let9)
  let let11 := (sx5fcount let9)
  let let12 := (binrel% HAdd.hAdd let11 let10)
  let let13 := (binrel% GE.ge let12 let5)
  let let14 := (And let13 let6)
  let let15 := (Int.ofNat 1)
  let let16 := (xx5fcount let15)
  let let17 := (Int.ofNat 0)
  let let18 := (xx5fcount let17)
  let let19 := (Eq let18 let16)
  let let20 := (And let19 let14)
  let let21 := (sx5fcount let15)
  let let22 := (sx5fcount let17)
  let let23 := (Eq let22 let21)
  let let24 := (And let23 let20)
  let let25 := (Eq let18 let17)
  let let26 := (And let25 let24)
  let let27 := (Eq let22 let15)
  let let28 := (And let27 let26)
  let let29 := (Not let28)
  let let30 := (Implies let28 False)
  let let31 := (Int.ofNat 115)
  let let32 := (Eq let31 let1)
  let let33 := (Eq let32 False)
  let let34 := (Eq let16 let15)
  let let35 := (Neg.neg let15)
  let let36 := (binrel% HAdd.hAdd let35 let16)
  let let37 := (Eq let17 let36)
  let let38 := (binrel% HAdd.hAdd let35 let21)
  let let39 := (Eq let22 let38)
  let let40 := (Eq let22 let17)
  let let41 := (And let40 (And let25 (And let39 let20)))
  let let42 := (Not let41)
  let let43 := (Implies let41 False)
  let let44 := (Eq let15 let9)
  let let45 := (Int.ofNat 4)
  let let46 := (binrel% GE.ge fmt1 let45)
  let let47 := (Not let46)
  let let48 := (binrel% LT.lt fmt1 let45)
  let let49 := (Eq let46 let46)
  let let50 := (Eq fmt1 let7)
  let let51 := (Eq let50 let50)
  let let52 := (Neg.neg (Rat.ofInt 2))
  let let53 := (Neg.neg (Rat.ofInt 3))
  let let54 := (Rat.ofInt 0)
  let let55 := (binrel% HAdd.hAdd let54 let53)
  let let56 := (Rat.ofInt 1)
  let let57 := (binrel% HAdd.hAdd let56 let55)
  let let58 := (And let13 let50)
  let let59 := (And let25 let58)
  let let60 := (And let27 let59)
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (Not False)
  let let64 := (Not let3)
  let let65 := (binrel% HMul.hMul let56 let15)
  let let66 := (binrel% GT.gt let56 let17)
  let let67 := (Rat.ofInt let11)
  let let68 := (binrel% HMul.hMul let56 let11)
  let let69 := (binrel% HMul.hMul let35 let10)
  let let70 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let35 let11) let69))
  let let71 := (Rat.ofInt let10)
  let let72 := (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let71 let70))
  let let73 := (binrel% HMul.hMul let56 let17)
  let let74 := (Neg.neg let56)
  let let75 := (binrel% HMul.hMul let74 let5)
  let let76 := (binrel% LE.le let54 let53)
  let let77 := (Int.ofNat 12)
  let let78 := (binrel% HAdd.hAdd let77 arg0)
  let let79 := (binrel% HAdd.hAdd arg0 let77)
  let let80 := (Neg.neg let77)
  let let81 := (Eq arg0 let80)
  let let82 := (Eq let17 let78)
  let let83 := (binrel% HAdd.hAdd arg1 let5)
  let let84 := (selectx5fformat let83)
  let let85 := (Eq let84 adrx5fhi)
  let let86 := (binrel% HAdd.hAdd arg1 let7)
  let let87 := (selectx5fformat let86)
  let let88 := (Eq let87 adrx5fmedhi)
  let let89 := (binrel% HAdd.hAdd arg1 let15)
  let let90 := (selectx5fformat let89)
  let let91 := (Eq let90 adrx5fmedlo)
  let let92 := (selectx5fformat arg1)
  let let93 := (Eq let92 adrx5flo)
  let let94 := (binrel% HAdd.hAdd fmt1 let15)
  let let95 := (selectx5fformat let94)
  let let96 := (Eq let95 s)
  let let97 := (selectx5fformat fmt1)
  let let98 := (Eq let97 percent)
  let let99 := (And (And (And (And (And let98 let96) let93) let91) let88) let85)
  let let100 := (Not let99)
  let let101 := (binrel% HAdd.hAdd fmt0 let15)
  let let102 := (Eq arg1 let101)
  let let103 := (binrel% HAdd.hAdd fmt0 let17)
  let let104 := (Eq arg1 let103)
  let let105 := (Or let104 let102)
  let let106 := (binrel% HAdd.hAdd fmt0 let45)
  let let107 := (Eq fmt1 let106)
  let let108 := (binrel% HAdd.hAdd fmt0 let5)
  let let109 := (Eq fmt1 let108)
  let let110 := (binrel% HAdd.hAdd fmt0 let7)
  let let111 := (Eq fmt1 let110)
  let let112 := (Eq fmt1 let101)
  let let113 := (Eq fmt1 let103)
  let let114 := (Or (Or (Or (Or let113 let112) let111) let109) let107)
  let let115 := (xx5fcount let5)
  let let116 := (xx5fcount let45)
  let let117 := (Eq let116 let115)
  let let118 := (binrel% HAdd.hAdd let115 let15)
  let let119 := (Eq let116 let118)
  let let120 := (Int.ofNat 5)
  let let121 := (selectx5fformat let120)
  let let122 := (Eq let121 x)
  let let123 := (selectx5fformat let45)
  let let124 := (Eq let123 percent)
  let let125 := (And let124 let122)
  let let126 := (smtIte let125 let119 let117 Prop)
  let let127 := (xx5fcount let7)
  let let128 := (Eq let115 let127)
  let let129 := (binrel% HAdd.hAdd let127 let15)
  let let130 := (Eq let115 let129)
  let let131 := (Eq let123 x)
  let let132 := (selectx5fformat let5)
  let let133 := (Eq let132 percent)
  let let134 := (And let133 let131)
  let let135 := (smtIte let134 let130 let128 Prop)
  let let136 := (Eq let127 let16)
  let let137 := (binrel% HAdd.hAdd let16 let15)
  let let138 := (Eq let127 let137)
  let let139 := (Eq let132 x)
  let let140 := (selectx5fformat let7)
  let let141 := (Eq let140 percent)
  let let142 := (And let141 let139)
  let let143 := (smtIte let142 let138 let136 Prop)
  let let144 := (Eq let16 let18)
  let let145 := (binrel% HAdd.hAdd let18 let15)
  let let146 := (Eq let16 let145)
  let let147 := (Eq let140 x)
  let let148 := (selectx5fformat let15)
  let let149 := (Eq let148 percent)
  let let150 := (And let149 let147)
  let let151 := (smtIte let150 let146 let144 Prop)
  let let152 := (Eq let18 let15)
  let let153 := (Eq let148 x)
  let let154 := (selectx5fformat let17)
  let let155 := (Eq let154 percent)
  let let156 := (And let155 let153)
  let let157 := (smtIte let156 let152 let25 Prop)
  let let158 := (sx5fcount let5)
  let let159 := (sx5fcount let45)
  let let160 := (Eq let159 let158)
  let let161 := (binrel% HAdd.hAdd let158 let15)
  let let162 := (Eq let159 let161)
  let let163 := (Eq let121 s)
  let let164 := (And let124 let163)
  let let165 := (smtIte let164 let162 let160 Prop)
  let let166 := (sx5fcount let7)
  let let167 := (Eq let158 let166)
  let let168 := (binrel% HAdd.hAdd let166 let15)
  let let169 := (Eq let158 let168)
  let let170 := (Eq let123 s)
  let let171 := (And let133 let170)
  let let172 := (smtIte let171 let169 let167 Prop)
  let let173 := (Eq let166 let21)
  let let174 := (binrel% HAdd.hAdd let21 let15)
  let let175 := (Eq let166 let174)
  let let176 := (Eq let132 s)
  let let177 := (And let141 let176)
  let let178 := (smtIte let177 let175 let173 Prop)
  let let179 := (Eq let21 let22)
  let let180 := (binrel% HAdd.hAdd let22 let15)
  let let181 := (Eq let21 let180)
  let let182 := (Eq let140 s)
  let let183 := (And let149 let182)
  let let184 := (smtIte let183 let181 let179 Prop)
  let let185 := (Eq let148 s)
  let let186 := (And let155 let185)
  let let187 := (smtIte let186 let27 let40 Prop)
  let let188 := (Int.ofNat 255)
  let let189 := (Eq let123 let188)
  let let190 := (Eq let123 adrx5fhi)
  let let191 := (Eq let123 adrx5fmedhi)
  let let192 := (Eq let123 adrx5fmedlo)
  let let193 := (Eq let123 adrx5flo)
  let let194 := (Eq let132 let188)
  let let195 := (Eq let132 adrx5fhi)
  let let196 := (Eq let132 adrx5fmedhi)
  let let197 := (Eq let132 adrx5fmedlo)
  let let198 := (Eq let132 adrx5flo)
  let let199 := (Eq let140 let188)
  let let200 := (Eq let140 adrx5fhi)
  let let201 := (Eq let140 adrx5fmedhi)
  let let202 := (Eq let140 adrx5fmedlo)
  let let203 := (Eq let140 adrx5flo)
  let let204 := (Eq let148 let188)
  let let205 := (Eq let148 adrx5fhi)
  let let206 := (Eq let148 adrx5fmedhi)
  let let207 := (Eq let148 adrx5fmedlo)
  let let208 := (Eq let148 adrx5flo)
  let let209 := (Eq let154 let188)
  let let210 := (Eq let154 adrx5fhi)
  let let211 := (Eq let154 adrx5fmedhi)
  let let212 := (Eq let154 adrx5fmedlo)
  let let213 := (Eq let154 adrx5flo)
  let let214 := (Eq let154 x)
  let let215 := (Eq let154 s)
  let let216 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let155 let215) let214) let213) let212) let211) let210) let209) let149) let185) let153) let208) let207) let206) let205) let204) let141) let182) let147) let203) let202) let201) let200) let199) let133) let176) let139) let198) let197) let196) let195) let194) let124) let170) let131) let193) let192) let191) let190) let189)
  let let217 := (binrel% HSub.hSub fmt1 let7)
  let let218 := (binrel% HSub.hSub let217 fmt0)
  let let219 := (xx5fcount let218)
  let let220 := (binrel% HMul.hMul let45 let219)
  let let221 := (sx5fcount let218)
  let let222 := (binrel% HMul.hMul let45 let221)
  let let223 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let222) let220)
  let let224 := (Eq arg1 let223)
  let let225 := (binrel% HAdd.hAdd arg0 distance)
  let let226 := (binrel% HAdd.hAdd let225 fmtx5flength)
  let let227 := (binrel% HSub.hSub let226 let45)
  let let228 := (binrel% LT.lt arg1 let227)
  let let229 := (binrel% GE.ge arg1 let225)
  let let230 := (binrel% GT.gt fmt1 let101)
  let let231 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let232 := (binrel% HSub.hSub let231 let15)
  let let233 := (binrel% LT.lt fmt1 let232)
  let let234 := (binrel% GE.ge arg1 fmt0)
  let let235 := (binrel% HSub.hSub fmt0 distance)
  let let236 := (Eq arg0 let235)
  let let237 := (Eq fmt0 let17)
  let let238 := (Eq x let2)
  let let239 := (Eq s let31)
  let let240 := (Eq percent let1)
  let let241 := (Eq adrx5fhi let15)
  let let242 := (Eq adrx5fmedhi let7)
  let let243 := (Eq adrx5fmedlo let45)
  let let244 := (Eq adrx5flo let15)
  let let245 := (Eq fmtx5flength let120)
  let let246 := (Eq distance let77)
  let let247 := (And let246 (And let245 (And let244 (And let243 (And let242 (And let241 (And let240 (And let239 (And let238 (And let237 (And let236 (And let234 (And let233 (And let230 (And let229 (And let228 (And let224 (And let216 (And let187 (And let184 (And let178 (And let172 (And let165 (And let157 (And let151 (And let143 (And let135 (And let126 (And let114 (And let105 let100))))))))))))))))))))))))))))))
  let let248 := (And (And (And (And (And (And (And (And (And (And (And (And (And let246 let245) let244) let243) let242) let241) let240) let239) let238) (And (And (And (And (And (And (And let237 let236) let234) let233) let230) let229) let228) let224)) let216) (And (And (And (And (And (And (And (And (And let187 let184) let178) let172) let165) let157) let151) let143) let135) let126)) (And let114 let105)) let100)
  let let249 := (binrel% HMul.hMul let35 arg1)
  let let250 := (binrel% HAdd.hAdd fmt0 let249)
  let let251 := (binrel% GE.ge let250 let15)
  let let252 := (Not let251)
  let let253 := (binrel% HMul.hMul let35 let15)
  let let254 := (binrel% HAdd.hAdd let231 let253)
  let let255 := (binrel% HAdd.hAdd let35 let231)
  let let256 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let35))
  let let257 := (binrel% HMul.hMul let35 fmt0)
  let let258 := (binrel% HAdd.hAdd fmt1 let257)
  let let259 := (binrel% GE.ge let258 let7)
  let let260 := (Not let259)
  let let261 := (binrel% HAdd.hAdd let15 fmt0)
  let let262 := (binrel% LE.le fmt1 let261)
  let let263 := (binrel% HMul.hMul let35 distance)
  let let264 := (binrel% HMul.hMul let35 arg0)
  let let265 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let264 let263))
  let let266 := (binrel% GE.ge let265 let17)
  let let267 := (binrel% GE.ge arg1 let227)
  let let268 := (Not let267)
  let let269 := (binrel% HMul.hMul let35 let45)
  let let270 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let269)))
  let let271 := (binrel% HAdd.hAdd let226 let269)
  let let272 := (Neg.neg let45)
  let let273 := (binrel% HAdd.hAdd let272 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let274 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let272)))
  let let275 := (binrel% HMul.hMul let35 fmtx5flength)
  let let276 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let264 (binrel% HAdd.hAdd let275 let263)))
  let let277 := (binrel% GE.ge let276 let272)
  let let278 := (binrel% GE.ge arg1 let273)
  let let279 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let222 let220))
  let let280 := (Eq s let154)
  let let281 := (Eq x let154)
  let let282 := (Eq adrx5flo let154)
  let let283 := (Eq adrx5fmedlo let154)
  let let284 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let56 let53))
  let let285 := (Eq adrx5flo let148)
  let let286 := (Eq adrx5fmedlo let148)
  let let287 := (Eq adrx5fmedhi let148)
  let let288 := (Eq adrx5fhi let148)
  let let289 := (Eq adrx5flo let140)
  let let290 := (Eq adrx5fmedlo let140)
  let let291 := (Eq adrx5fhi let140)
  let let292 := (And let40 (And let152 let58))
  let let293 := (Not let292)
  let let294 := (Implies let292 False)
  let let295 := (Eq adrx5fmedlo let132)
  let let296 := (Eq adrx5fmedlo let123)
  let let297 := (Eq adrx5fhi let123)
  let let298 := (Eq s let148)
  let let299 := (Eq s let140)
  let let300 := (Eq let17 let9)
  let let301 := (binrel% HAdd.hAdd let15 let22)
  let let302 := (Eq let21 let301)
  let let303 := (binrel% HAdd.hAdd fmt0 let263)
  let let304 := (Eq fmt0 let225)
  let let305 := (Eq arg0 let303)
  let let306 := (Eq s let132)
  let let307 := (Not let47)
  let let308 := (Eq let46 let307)
  let let309 := (Eq let307 let46)
  let let310 := (binrel% HAdd.hAdd let15 let21)
  let let311 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let253))
  let let312 := (Eq let21 let166)
  let let313 := (Not let50)
  let let314 := (Not let313)
  let let315 := (Eq let50 let314)
  let let316 := (Eq let314 let50)
  let let317 := (Eq s let123)
  let let318 := (binrel% HAdd.hAdd let15 let166)
  let let319 := (binrel% LT.lt let74 let17)
  let let320 := (Eq let166 (binrel% HAdd.hAdd let35 let158))
  let let321 := (Eq let158 let318)
  let let322 := (Eq let166 let158)
  let let323 := (Eq s let121)
  let let324 := (binrel% GE.ge let12 let45)
  let let325 := (binrel% HMul.hMul let45 let10)
  let let326 := (binrel% HMul.hMul let45 let11)
  let let327 := (binrel% HAdd.hAdd let326 let325)
  let let328 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let327)
  let let329 := (binrel% GE.ge let328 let272)
  let let330 := (Eq let18 let36)
  let let331 := (And let40 (And let25 (And let23 (And let330 let14))))
  let let332 := (Not let331)
  let let333 := (Implies let331 False)
  let let334 := (binrel% LE.le fmt1 let101)
  let let335 := (Not let334)
  let let336 := (binrel% HAdd.hAdd let80 let327)
  let let337 := (binrel% HAdd.hAdd let7 let336)
  let let338 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd (binrel% HMul.hMul let272 let11) (binrel% HMul.hMul let272 let10)))
  let let339 := (binrel% HMul.hMul let35 let336)
  let let340 := (binrel% HMul.hMul let35 let17)
  let let341 := (Eq let336 let336)
  let let342 := (Eq let154 let31)
  let let343 := (Eq let31 let154)
  let let344 := (Eq let154 let2)
  let let345 := (Eq let2 let154)
  let let346 := (Eq x let123)
  let let347 := (Eq let154 let7)
  let let348 := (Eq let7 let154)
  let let349 := (Eq let127 (binrel% HAdd.hAdd let35 let115))
  let let350 := (binrel% HAdd.hAdd let15 let127)
  let let351 := (Eq let115 let350)
  let let352 := (Eq let154 let15)
  let let353 := (Eq let15 let154)
  let let354 := (Eq let2 let31)
  let let355 := (Not let354)
  let let356 := (Eq let354 False)
  let let357 := (Eq let148 let7)
  let let358 := (Eq let7 let148)
  let let359 := (Eq percent let123)
  let let360 := (Eq let148 let15)
  let let361 := (Eq let15 let148)
  let let362 := (Eq x let121)
  let let363 := (binrel% HAdd.hAdd let217 let257)
  let let364 := (Eq let140 let45)
  let let365 := (Eq let45 let140)
  let let366 := (Eq let148 let31)
  let let367 := (Eq let31 let148)
  let let368 := (binrel% HMul.hMul let35 let7)
  let let369 := (Eq let140 let15)
  let let370 := (Eq let15 let140)
  let let371 := (Eq let132 let7)
  let let372 := (Eq let7 let132)
  let let373 := (binrel% HAdd.hAdd let7 fmt0)
  let let374 := (Eq let123 let15)
  let let375 := (Eq let15 let123)
  let let376 := (Eq let11 (binrel% HAdd.hAdd let5 let69))
  let let377 := (Or let376 False)
  let let378 := (Eq let140 let31)
  let let379 := (Eq let31 let140)
  let let380 := (binrel% GE.ge fmt1 let232)
  let let381 := (Not let380)
  let let382 := (Eq let21 (binrel% HAdd.hAdd let35 let166))
  let let383 := (Eq let166 let310)
  let let384 := (binrel% HMul.hMul let35 let77)
  let let385 := (binrel% HMul.hMul let35 let120)
  let let386 := (binrel% HMul.hMul let35 let80)
  let let387 := (binrel% HAdd.hAdd let386 (binrel% HAdd.hAdd let385 let384))
  let let388 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 let387)))
  let let389 := (binrel% HAdd.hAdd let336 let387)
  let let390 := (Eq let121 let31)
  let let391 := (Eq let31 let121)
  let let392 := (Or let155 (Or let215 (Or let214 (Or let213 (Or let212 (Or let211 (Or let210 (Or let209 (Or let149 (Or let185 (Or let153 (Or let208 (Or let207 (Or let206 (Or let205 (Or let204 (Or let141 (Or let182 (Or let147 (Or let203 (Or let202 (Or let201 (Or let200 (Or let199 (Or let133 (Or let176 (Or let139 (Or let198 (Or let197 (Or let196 (Or let195 (Or let194 (Or let124 (Or let170 (Or let131 (Or let193 (Or let192 (Or let191 (Or let190 let189)))))))))))))))))))))))))))))))))))))))
  let let393 := (binrel% HAdd.hAdd let45 fmt0)
  let let394 := (Eq let148 let2)
  let let395 := (Eq let2 let148)
  let let396 := (binrel% HAdd.hAdd let80 let77)
  let let397 := (Eq let132 let31)
  let let398 := (Eq let31 let132)
  let let399 := (binrel% HAdd.hAdd let35 let336)
  let let400 := (Eq let115 (binrel% HAdd.hAdd let35 let116))
  let let401 := (binrel% HAdd.hAdd let15 let115)
  let let402 := (Eq let116 let401)
  let let403 := (binrel% HAdd.hAdd fmt1 let368)
  let let404 := (Eq let140 let7)
  let let405 := (Eq let7 let140)
  let let406 := (selectx5fformat let336)
  let let407 := (Eq let406 let15)
  let let408 := (Eq let15 let406)
  let let409 := (binrel% HAdd.hAdd let15 fmt1)
  let let410 := (selectx5fformat let409)
  let let411 := (Eq let410 let31)
  let let412 := (Eq let31 let410)
  let let413 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) let327)
  let let414 := (selectx5fformat let413)
  let let415 := (Eq let414 let15)
  let let416 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) let327)
  let let417 := (selectx5fformat let416)
  let let418 := (Eq let417 let7)
  let let419 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) let327)
  let let420 := (selectx5fformat let419)
  let let421 := (Eq let420 let45)
  let let422 := (Eq let97 let1)
  let let423 := (And let422 (And let411 (And let407 (And let421 (And let418 let415)))))
  let let424 := (Not let423)
  let let425 := (Eq fmt1 let45)
  let let426 := (Eq fmt1 let15)
  let let427 := (Eq fmt1 let17)
  let let428 := (Or let427 (Or let426 (Or let50 (Or let6 let425))))
  let let429 := (Eq let115 let116)
  let let430 := (Eq let121 let2)
  let let431 := (Eq let123 let1)
  let let432 := (And let431 let430)
  let let433 := (smtIte let432 let400 let429 Prop)
  let let434 := (Eq let127 let115)
  let let435 := (Eq let123 let2)
  let let436 := (Eq let132 let1)
  let let437 := (And let436 let435)
  let let438 := (smtIte let437 let349 let434 Prop)
  let let439 := (Eq let16 let127)
  let let440 := (Eq let16 (binrel% HAdd.hAdd let35 let127))
  let let441 := (Eq let132 let2)
  let let442 := (Eq let140 let1)
  let let443 := (And let442 let441)
  let let444 := (smtIte let443 let440 let439 Prop)
  let let445 := (Eq let140 let2)
  let let446 := (Eq let148 let1)
  let let447 := (And let446 let445)
  let let448 := (smtIte let447 let330 let19 Prop)
  let let449 := (Eq let154 let1)
  let let450 := (And let449 let394)
  let let451 := (smtIte let450 let152 let25 Prop)
  let let452 := (Eq let158 let159)
  let let453 := (Eq let158 (binrel% HAdd.hAdd let35 let159))
  let let454 := (And let431 let390)
  let let455 := (smtIte let454 let453 let452 Prop)
  let let456 := (Eq let123 let31)
  let let457 := (And let436 let456)
  let let458 := (smtIte let457 let320 let322 Prop)
  let let459 := (And let442 let397)
  let let460 := (smtIte let459 let382 let312 Prop)
  let let461 := (And let446 let378)
  let let462 := (smtIte let461 let39 let23 Prop)
  let let463 := (And let449 let366)
  let let464 := (smtIte let463 let27 let40 Prop)
  let let465 := (Eq let123 let7)
  let let466 := (Eq let123 let45)
  let let467 := (Eq let132 let15)
  let let468 := (Eq let132 let45)
  let let469 := (Eq let148 let45)
  let let470 := (Eq let154 let45)
  let let471 := (Or let449 (Or let342 (Or let344 (Or let352 (Or let470 (Or let347 (Or let352 (Or let209 (Or let446 (Or let366 (Or let394 (Or let360 (Or let469 (Or let357 (Or let360 (Or let204 (Or let442 (Or let378 (Or let445 (Or let369 (Or let364 (Or let404 (Or let369 (Or let199 (Or let436 (Or let397 (Or let441 (Or let467 (Or let468 (Or let371 (Or let467 (Or let194 (Or let431 (Or let456 (Or let435 (Or let374 (Or let466 (Or let465 (Or let374 let189)))))))))))))))))))))))))))))))))))))))
  let let472 := (And let471 (And let464 (And let462 (And let460 (And let458 (And let455 (And let451 (And let448 (And let444 (And let438 (And let433 (And let428 (And let376 let424)))))))))))))
  let let473 := (Not let324)
  let let474 := (binrel% GE.ge fmt1 let7)
  let let475 := (And let13 (And let47 (And let474 (And let473 let472))))
  let let476 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let13 (And let47 (And let474 (And let13 (And let473 (And True let472)))))))))))))))))
  let let477 := (binrel% HMul.hMul let56 let10)
  let let478 := (Eq let45 let420)
  let let479 := (Eq let15 let132)
  let let480 := (Eq percent let140)
  let let481 := (Neg.neg let120)
  let let482 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let481 let80)))))
  let let483 := (binrel% HAdd.hAdd let15 let336)
  let let484 := (Eq let21 let15)
  let let485 := (Eq let17 let38)
  let let486 := (binrel% HAdd.hAdd fmt1 let17)
  let let487 := (binrel% HAdd.hAdd let8 let486)
  let let488 := (Eq let15 let414)
  let let489 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let257 let275))
  let let490 := (binrel% GE.ge let489 let35)
  let let491 := (binrel% GE.ge fmt1 let255)
  let let492 := (Eq let483 let419)
  let let493 := (Eq let1 let97)
  let let494 := (Eq let17 let336)
  let let495 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let327)
  let let496 := (Eq let399 let495)
  let let497 := (binrel% GE.ge let336 let17)
  let let498 := (Eq let7 let123)
  let let499 := (binrel% HAdd.hAdd let386 let384)
  let let500 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 let499)))
  let let501 := (binrel% HAdd.hAdd let336 let499)
  let let502 := (Eq let31 let123)
  let let503 := (binrel% HAdd.hAdd let5 arg1)
  let let504 := (selectx5fformat let503)
  let let505 := (Eq adrx5fhi let504)
  let let506 := (Eq let504 adrx5fhi)
  let let507 := (Eq let17 let495)
  let let508 := (binrel% HAdd.hAdd let5 let17)
  let let509 := (Eq let45 let154)
  let let510 := (Eq percent let132)
  let let511 := (Eq let1 let154)
  let let512 := (Eq adrx5fhi let132)
  let let513 := (Eq percent let97)
  let let514 := (binrel% HAdd.hAdd let7 let17)
  let let515 := (Eq let337 let416)
  let let516 := (Eq let1 let132)
  let let517 := (Eq let45 let148)
  let let518 := (binrel% HAdd.hAdd let15 let17)
  let let519 := (Eq let2 let121)
  let let520 := (Not let260)
  let let521 := (binrel% HAdd.hAdd let5 let336)
  let let522 := (binrel% HAdd.hAdd let54 let55)
  let let523 := (binrel% HAdd.hAdd let15 let18)
  let let524 := (Eq let16 let523)
  let let525 := (binrel% LE.le let54 let52)
  let let526 := (Eq let2 let123)
  let let527 := (Eq adrx5fhi let154)
  let let528 := (Eq let2 let132)
  let let529 := (Eq let77 let77)
  let let530 := (Or let113 (Or let112 (Or let111 (Or let109 let107))))
  let let531 := (binrel% HAdd.hAdd let7 arg1)
  let let532 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 (binrel% HAdd.hAdd let77 let80))))
  let let533 := (selectx5fformat let531)
  let let534 := (Eq adrx5fmedhi let533)
  let let535 := (Eq let533 adrx5fmedhi)
  let let536 := (Eq adrx5flo let92)
  let let537 := (Eq adrx5fmedhi let123)
  let let538 := (binrel% HAdd.hAdd let45 let17)
  let let539 := (Eq s let410)
  let let540 := (Eq let410 s)
  let let541 := (binrel% HAdd.hAdd let481 fmt1)
  let let542 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let17 let481))
  let let543 := (Eq adrx5fmedhi let140)
  let let544 := (Not let13)
  let let545 := (Not let544)
  let let546 := (Eq adrx5flo let132)
  let let547 := (binrel% HAdd.hAdd let35 arg1)
  let let548 := (Eq fmt0 let547)
  let let549 := (Eq arg1 let261)
  let let550 := (binrel% GE.ge let338 let15)
  let let551 := (Eq let1 let123)
  let let552 := (Eq fmt0 arg1)
  let let553 := (Eq arg1 fmt0)
  let let554 := (binrel% HAdd.hAdd let17 let338)
  let let555 := (Eq x let140)
  let let556 := (Eq adrx5fmedhi let154)
  let let557 := (Eq let1 let140)
  let let558 := (Eq let17 let17)
  let let559 := (Eq x let148)
  let let560 := (Eq let2 let140)
  let let561 := (Eq let2 let2)
  let let562 := (Eq let1 let148)
  let let563 := (Eq let31 let31)
  let let564 := (Eq let1 let1)
  let let565 := (binrel% HMul.hMul let74 let12)
  let let566 := (binrel% HAdd.hAdd let15 let158)
  let let567 := (Eq let159 let566)
  let let568 := (Eq let15 let15)
  let let569 := (Eq let45 let45)
  let let570 := (Eq let120 let120)
  let let571 := (And let40 (And let152 let24))
  let let572 := (Not let571)
  let let573 := (Implies let571 False)
  let let574 := (And let40 let26)
  let let575 := (Not let574)
  let let576 := (Implies let574 False)
  let let577 := (Eq let7 let7)
  let let578 := (binrel% HAdd.hAdd let5 fmt0)
  let let579 := (Not let32)
  let let580 := (binrel% HAdd.hAdd let15 arg1)
  let let581 := (selectx5fformat let580)
  let let582 := (Eq adrx5fmedlo let581)
  let let583 := (Eq let581 adrx5fmedlo)
  let let584 := (Eq adrx5flo let123)
  let let585 := (binrel% GE.ge let541 let35)
  let let586 := (Eq adrx5fmedhi let132)
  let let587 := (And let98 (And let96 (And let93 (And let91 (And let88 let85)))))
  let let588 := (Eq x let132)
  let let589 := (binrel% HAdd.hAdd let8 let258)
  let let590 := (binrel% HAdd.hAdd let9 let257)
  let let591 := (Eq let45 let123)
  let let592 := (And let40 let59)
  let let593 := (Not let592)
  let let594 := (Implies let592 False)
  let let595 := (binrel% HAdd.hAdd fmt1 let8)
  let let596 := (Eq let45 let132)
  let let597 := (binrel% HAdd.hAdd let15 let16)
  let let598 := (Eq let127 let597)
  let let599 := (Eq let521 let413)
  let let600 := (Eq percent let148)
  let let601 := (Eq let7 let417)
  let let602 := (Eq percent let154)
  let let603 := (And let513 (And let539 (And let536 (And let582 (And let534 let505)))))
  let let604 := (Not let603)
  let let605 := (Or let552 let548)
  let let606 := (Eq fmt1 let393)
  let let607 := (Eq fmt1 let578)
  let let608 := (Eq fmt1 let373)
  let let609 := (Eq fmt1 let261)
  let let610 := (Eq fmt1 fmt0)
  let let611 := (Or let610 (Or let609 (Or let608 (Or let607 let606))))
  let let612 := (And let359 let362)
  let let613 := (smtIte let612 let400 let429 Prop)
  let let614 := (And let510 let346)
  let let615 := (smtIte let614 let349 let434 Prop)
  let let616 := (And let480 let588)
  let let617 := (smtIte let616 let440 let439 Prop)
  let let618 := (And let600 let555)
  let let619 := (smtIte let618 let330 let19 Prop)
  let let620 := (And let602 let559)
  let let621 := (smtIte let620 let152 let25 Prop)
  let let622 := (And let359 let323)
  let let623 := (smtIte let622 let453 let452 Prop)
  let let624 := (And let510 let317)
  let let625 := (smtIte let624 let320 let322 Prop)
  let let626 := (And let480 let306)
  let let627 := (smtIte let626 let382 let312 Prop)
  let let628 := (And let600 let299)
  let let629 := (smtIte let628 let39 let23 Prop)
  let let630 := (And let602 let298)
  let let631 := (smtIte let630 let27 let40 Prop)
  let let632 := (Or let602 (Or let280 (Or let281 (Or let282 (Or let283 (Or let556 (Or let527 (Or let209 (Or let600 (Or let298 (Or let559 (Or let285 (Or let286 (Or let287 (Or let288 (Or let204 (Or let480 (Or let299 (Or let555 (Or let289 (Or let290 (Or let543 (Or let291 (Or let199 (Or let510 (Or let306 (Or let588 (Or let546 (Or let295 (Or let586 (Or let512 (Or let194 (Or let359 (Or let317 (Or let346 (Or let584 (Or let296 (Or let537 (Or let297 let189)))))))))))))))))))))))))))))))))))))))
  let let633 := (xx5fcount let589)
  let let634 := (binrel% HMul.hMul let45 let633)
  let let635 := (sx5fcount let589)
  let let636 := (binrel% HMul.hMul let45 let635)
  let let637 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let636 let634))
  let let638 := (Eq arg1 let637)
  let let639 := (Not let277)
  let let640 := (Not let490)
  let let641 := (And let246 (And let245 (And let244 (And let243 (And let242 (And let241 (And let240 (And let239 (And let238 (And let237 (And let304 (And let252 (And let640 (And let259 (And let266 (And let639 (And let638 (And let632 (And let631 (And let629 (And let627 (And let625 (And let623 (And let621 (And let619 (And let617 (And let615 (And let613 (And let611 (And let605 let604))))))))))))))))))))))))))))))
  let let642 := (selectx5fformat let521)
  let let643 := (Eq let15 let642)
  let let644 := (selectx5fformat let337)
  let let645 := (Eq let7 let644)
  let let646 := (selectx5fformat let483)
  let let647 := (Eq let45 let646)
  let let648 := (And let493 (And let412 (And let408 (And let647 (And let645 let643)))))
  let let649 := (Not let648)
  let let650 := (Eq let17 let399)
  let let651 := (Or let494 let650)
  let let652 := (Eq fmt1 let538)
  let let653 := (Eq fmt1 let508)
  let let654 := (Eq fmt1 let514)
  let let655 := (Eq fmt1 let518)
  let let656 := (Or let427 (Or let655 (Or let654 (Or let653 let652))))
  let let657 := (And let551 let519)
  let let658 := (smtIte let657 let400 let429 Prop)
  let let659 := (And let516 let526)
  let let660 := (smtIte let659 let349 let434 Prop)
  let let661 := (And let557 let528)
  let let662 := (smtIte let661 let440 let439 Prop)
  let let663 := (And let562 let560)
  let let664 := (smtIte let663 let330 let19 Prop)
  let let665 := (And let511 let395)
  let let666 := (smtIte let665 let152 let25 Prop)
  let let667 := (And let551 let391)
  let let668 := (smtIte let667 let453 let452 Prop)
  let let669 := (And let516 let502)
  let let670 := (smtIte let669 let320 let322 Prop)
  let let671 := (And let557 let398)
  let let672 := (smtIte let671 let382 let312 Prop)
  let let673 := (And let562 let379)
  let let674 := (smtIte let673 let39 let23 Prop)
  let let675 := (And let511 let367)
  let let676 := (smtIte let675 let27 let40 Prop)
  let let677 := (Or let511 (Or let343 (Or let345 (Or let353 (Or let509 (Or let348 (Or let353 (Or let209 (Or let562 (Or let367 (Or let395 (Or let361 (Or let517 (Or let358 (Or let361 (Or let204 (Or let557 (Or let379 (Or let560 (Or let370 (Or let365 (Or let405 (Or let370 (Or let199 (Or let516 (Or let398 (Or let528 (Or let479 (Or let596 (Or let372 (Or let479 (Or let194 (Or let551 (Or let502 (Or let526 (Or let375 (Or let591 (Or let498 (Or let375 let189)))))))))))))))))))))))))))))))))))))))
  let let678 := (binrel% HAdd.hAdd fmt1 let340)
  let let679 := (binrel% HAdd.hAdd let8 let678)
  let let680 := (xx5fcount let679)
  let let681 := (binrel% HMul.hMul let45 let680)
  let let682 := (sx5fcount let679)
  let let683 := (binrel% HMul.hMul let45 let682)
  let let684 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let683 let681))
  let let685 := (Eq let336 let684)
  let let686 := (binrel% GE.ge let389 let272)
  let let687 := (Not let686)
  let let688 := (binrel% GE.ge let501 let17)
  let let689 := (binrel% GE.ge let678 let7)
  let let690 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let340 let385))
  let let691 := (binrel% GE.ge let690 let35)
  let let692 := (Not let691)
  let let693 := (binrel% HAdd.hAdd let17 let339)
  let let694 := (binrel% GE.ge let693 let15)
  let let695 := (Not let694)
  let let696 := (Eq let17 let396)
  let let697 := (And let529 (And let570 (And let568 (And let569 (And let577 (And let568 (And let564 (And let563 (And let561 (And let558 (And let696 (And let695 (And let692 (And let689 (And let688 (And let687 (And let685 (And let677 (And let676 (And let674 (And let672 (And let670 (And let668 (And let666 (And let664 (And let662 (And let660 (And let658 (And let656 (And let651 let649))))))))))))))))))))))))))))))
  let let698 := (Eq And And)
  let let699 := (Eq fmt1 fmt1)
  let let700 := (Eq Or Or)
  let let701 := (Eq let429 let429)
  let let702 := (Eq let400 let400)
  let let703 := (Eq let434 let434)
  let let704 := (Eq let349 let349)
  let let705 := (Eq let439 let439)
  let let706 := (Eq let440 let440)
  let let707 := (Eq let19 let19)
  let let708 := (Eq let330 let330)
  let let709 := (Eq let25 let25)
  let let710 := (Eq let152 let152)
  let let711 := (Eq let452 let452)
  let let712 := (Eq let453 let453)
  let let713 := (Eq let322 let322)
  let let714 := (Eq let320 let320)
  let let715 := (Eq let312 let312)
  let let716 := (Eq let382 let382)
  let let717 := (Eq let23 let23)
  let let718 := (Eq let39 let39)
  let let719 := (Eq let40 let40)
  let let720 := (Eq let27 let27)
  let let721 := (Eq let189 let189)
  let let722 := (Eq let194 let194)
  let let723 := (Eq let199 let199)
  let let724 := (Eq let204 let204)
  let let725 := (Eq let209 let209)
  let let726 := (Eq let8 let8)
  let let727 := (Eq let272 let272)
  let let728 := (Eq let35 let35)
  let let729 := (Eq arg1 let336)
  let let730 := (And let237 (And let238 (And let239 (And let240 (And let241 (And let242 (And let243 (And let244 (And let245 let246)))))))))
  let let731 := (And let81 let730)
  let let732 := (Eq arg1 arg1)
  let let733 := (Eq arg0 arg0)
  let let734 := (Eq let17 let79)
  let let735 := (Eq arg1 let684)
  let let736 := (Eq let637 let684)
  let let737 := (Eq let634 let681)
  let let738 := (Eq let633 let680)
  let let739 := (Eq let589 let679)
  let let740 := (Eq let257 let340)
  let let741 := (Eq let636 let683)
  let let742 := (Eq let635 let682)
  let let743 := (Not let447)
  let let744 := (Not let445)
  let let745 := (Not let23)
  let let746 := (Not let40)
  let let747 := (Or let746 let313)
  let let748 := (Not let25)
  let let749 := (Or let748 let313)
  let let750 := (Or let544 let313)
  let let751 := (Or let748 let750)
  let let752 := (Eq let17 let11)
  let let753 := (Eq let17 let10)
  let let754 := (And let13 (And let753 let752))
  let let755 := (Implies let592 let754)
  let let756 := (Eq let754 False)
  let let757 := (Or (Not let752) False)
  let let758 := (Not let753)
  let let759 := (Eq let11 let17)
  let let760 := (Not let759)
  let let761 := (Or let760 False)
  let let762 := (binrel% HAdd.hAdd let73 let75)
  let let763 := (binrel% HAdd.hAdd let73 let762)
  let let764 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let477 let565))
  let let765 := (binrel% LE.le let764 let763)
  let let766 := (binrel% LE.le let565 let75)
  let let767 := (And let319 let13)
  let let768 := (Implies let767 let766)
  let let769 := (Eq let477 let73)
  let let770 := (Eq let10 let17)
  let let771 := (And let66 let770)
  let let772 := (Implies let771 let769)
  let let773 := (Eq let68 let73)
  let let774 := (And let66 let759)
  let let775 := (Implies let774 let773)
  let let776 := (And let300 let40)
  let let777 := (Implies let776 let752)
  let let778 := (Or let746 let752)
  let let779 := (Not let300)
  let let780 := (Or let779 let778)
  let let781 := (Eq let22 let11)
  let let782 := (Eq let9 let17)
  let let783 := (Eq let17 let22)
  let let784 := (Eq let50 let300)
  let let785 := (And let300 let25)
  let let786 := (Implies let785 let753)
  let let787 := (Or let748 let753)
  let let788 := (Or let779 let787)
  let let789 := (Eq let18 let10)
  let let790 := (Eq let17 let18)
  let let791 := (Not let450)
  let let792 := (Not let152)
  let let793 := (Eq let15 let10)
  let let794 := (And let13 (And let793 let752))
  let let795 := (Implies let292 let794)
  let let796 := (Eq let794 False)
  let let797 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let65 let75))
  let let798 := (binrel% LE.le let764 let797)
  let let799 := (Eq let477 let65)
  let let800 := (Eq let10 let15)
  let let801 := (And let66 let800)
  let let802 := (And let300 let152)
  let let803 := (Or let792 let793)
  let let804 := (Eq let15 let18)
  let let805 := (Not let463)
  let let806 := (Or let805 let805)
  let let807 := (Not let394)
  let let808 := (Not let366)
  let let809 := (Or let807 let808)
  let let810 := (Implies let394 let808)
  let let811 := (Not let27)
  let let812 := (Eq let15 let11)
  let let813 := (And let13 (And let753 let812))
  let let814 := (Implies let60 let813)
  let let815 := (Eq let813 False)
  let let816 := (Eq let11 let15)
  let let817 := (Not let816)
  let let818 := (binrel% HAdd.hAdd let65 let762)
  let let819 := (binrel% LE.le let764 let818)
  let let820 := (Eq let68 let65)
  let let821 := (And let66 let816)
  let let822 := (And let300 let27)
  let let823 := (Or let811 let812)
  let let824 := (Eq let15 let22)
  let let825 := (Not let474)
  let let826 := (Or let825 (Or let46 (Or let50 let6)))
  let let827 := (Or let825 (Or let307 (Or let314 let6)))
  let let828 := (And let474 (And let47 let313))
  let let829 := (Eq let5 fmt1)
  let let830 := (And let474 (And let313 let47))
  let let831 := (Not let6)
  let let832 := (Or let745 let831)
  let let833 := (Or let745 (Or let748 let831))
  let let834 := (Or let746 let748)
  let let835 := (Not let19)
  let let836 := (Or let835 let831)
  let let837 := (Or let748 let836)
  let let838 := (Or let746 let837)
  let let839 := (Or let745 let837)
  let let840 := (Or let544 let831)
  let let841 := (Or let835 let840)
  let let842 := (Or let745 let841)
  let let843 := (Or let748 let842)
  let let844 := (Implies let574 let754)
  let let845 := (And let44 (And let23 let40))
  let let846 := (Implies let845 let752)
  let let847 := (Not let44)
  let let848 := (Or let847 (Or let745 let778))
  let let849 := (Eq let21 let11)
  let let850 := (Eq let9 let15)
  let let851 := (Eq let6 let44)
  let let852 := (And let44 (And let19 let25))
  let let853 := (Implies let852 let753)
  let let854 := (Or let847 (Or let835 let787))
  let let855 := (Eq let16 let10)
  let let856 := (Not let461)
  let let857 := (Not let39)
  let let858 := (Implies let41 let813)
  let let859 := (Or let835 (Or let544 (Or let831 let813)))
  let let860 := (Eq let15 let21)
  let let861 := (And let44 let860)
  let let862 := (And let39 let40)
  let let863 := (Not let330)
  let let864 := (Implies let331 let794)
  let let865 := (Or let544 (Or let831 let794))
  let let866 := (Eq let15 let16)
  let let867 := (And let44 let866)
  let let868 := (And let330 let25)
  let let869 := (Not let446)
  let let870 := (Or let808 let869)
  let let871 := (Implies let366 let869)
  let let872 := (Eq let446 False)
  let let873 := (Implies let28 let813)
  let let874 := (And let44 (And let23 let27))
  let let875 := (Or let807 let791)
  let let876 := (Or let807 let869)
  let let877 := (Implies let394 let869)
  let let878 := (Implies let571 let794)
  let let879 := (And let44 (And let19 let152))
  let let880 := (Not let378)
  let let881 := (Or let744 let880)
  let let882 := (Implies let445 let880)
let4 → (Eq let30 let29) → let33 → (Eq let37 let34) → (Eq let43 let42) → (Eq let44 let6) → (Eq let48 let47) → (Eq let49 True) → (Eq let51 True) → (Eq let57 let52) → (Eq let62 let61) → (Eq let63 True) → (Eq let4 let64) → (Eq let65 let56) → (Eq let66 True) → (Eq let68 let67) → (Eq let72 let54) → (Eq let73 let54) → (Eq let75 let53) → (Eq let76 False) → (Eq let79 let78) → (Eq let82 let81) → (Eq let248 let247) → (Eq let234 let252) → (Eq let232 let254) → (Eq let256 let255) → (Eq let262 let260) → (Eq let229 let266) → (Eq let228 let268) → (Eq let271 let270) → (Eq let269 let272) → (Eq let274 let273) → (Eq let278 let277) → (Eq let223 let279) → (Eq let215 let280) → (Eq let214 let281) → (Eq let213 let282) → (Eq let212 let283) → (Eq let284 let52) → (Eq let208 let285) → (Eq let207 let286) → (Eq let206 let287) → (Eq let205 let288) → (Eq let203 let289) → (Eq let202 let290) → (Eq let200 let291) → (Eq let294 let293) → (Eq let197 let295) → (Eq let192 let296) → (Eq let190 let297) → (Eq let185 let298) → (Eq let182 let299) → (Eq let300 let50) → (Eq let302 let39) → (Eq let235 let303) → (Eq let179 let23) → (Eq let305 let304) → (Eq let176 let306) → (Eq let309 let308) → (Eq let174 let310) → (Eq let254 let311) → (Eq let173 let312) → (Eq let316 let315) → (Eq let253 let35) → (Eq let170 let317) → (Eq let168 let318) → (Eq let319 True) → (Eq let321 let320) → (Eq let167 let322) → (Eq let163 let323) → (Eq let329 let324) → (Eq let333 let332) → (Eq let230 let335) → (Eq let337 let337) → (Eq let339 let338) → (Eq let340 let17) → (Eq let101 let261) → (Eq let341 True) → (Eq let343 let342) → (Eq let345 let344) → (Eq let131 let346) → (Eq let348 let347) → (Eq let351 let349) → (Eq let353 let352) → (Eq let356 let355) → (Eq let358 let357) → (Eq let124 let359) → let356 → (Eq let361 let360) → (Eq let122 let362) → (Eq let218 let363) → (Eq let365 let364) → (Eq let367 let366) → (Eq let368 let8) → (Eq let370 let369) → (Eq let372 let371) → (Eq let110 let373) → (Eq let375 let374) → let316 → (Eq let377 let376) → (Eq let379 let378) → (Eq let233 let381) → (Eq let383 let382) → (Eq let389 let388) → (Eq let391 let390) → (Eq let216 let392) → (Eq let106 let393) → (Eq let395 let394) → (Eq let396 let17) → (Eq let398 let397) → (Eq let399 let399) → (Eq let402 let400) → (Eq let217 let403) → (Eq let405 let404) → (Eq let408 let407) → (Eq let412 let411) → (Eq let476 let475) → (Eq let477 let71) → (Eq let478 let421) → (Eq let479 let467) → (Eq let141 let480) → (Eq let482 let328) → (Eq let483 let483) → (Eq let485 let484) → (Eq let227 let271) → (Eq let487 let9) → (Eq let488 let415) → (Eq let491 let490) → let492 → (Eq let493 let422) → (Eq let494 let376) → let496 → (Eq let497 let13) → (Eq let498 let465) → (Eq let501 let500) → (Eq let502 let456) → let309 → (Eq let506 let505) → (Eq let507 False) → (Eq let386 let77) → (Eq let508 let5) → (Eq let509 let470) → (Eq let133 let510) → (Eq let511 let449) → (Eq let195 let512) → (Eq let98 let513) → (Eq let514 let7) → (Eq let136 let439) → let515 → (Eq let516 let436) → (Eq let517 let469) → (Eq let518 let15) → (Eq let519 let430) → (Eq let520 let259) → (Eq let521 let521) → (Eq let522 let53) → (Eq let524 let330) → (Eq let525 False) → (Eq let526 let435) → (Eq let210 let527) → (Eq let528 let441) → (Eq let384 let80) → (Eq let385 let481) → (Eq let529 True) → (Eq let114 let530) → (Eq let86 let531) → (Eq let532 let336) → (Eq let535 let534) → (Eq let128 let434) → (Eq let93 let536) → (Eq let486 fmt1) → (Eq let191 let537) → (Eq let538 let45) → (Eq let540 let539) → (Eq let542 let541) → (Eq let201 let543) → (Eq let545 let13) → (Eq let198 let546) → (Eq let549 let548) → (Eq let550 let544) → (Eq let551 let431) → (Eq let553 let552) → (Eq let554 let338) → (Eq let147 let555) → (Eq let211 let556) → (Eq let557 let442) → (Eq let558 True) → (Eq let153 let559) → (Eq let560 let445) → (Eq let561 True) → (Eq let160 let452) → (Eq let562 let446) → (Eq let563 True) → (Eq let564 True) → (Eq let565 let70) → (Eq let567 let453) → (Eq let568 True) → (Eq let569 True) → (Eq let570 True) → (Eq let573 let572) → (Eq let576 let575) → (Eq let577 True) → (Eq let108 let578) → (Eq let83 let503) → (Eq let33 let579) → (Eq let180 let301) → (Eq let583 let582) → (Eq let89 let580) → (Eq let193 let584) → (Eq let585 let46) → (Eq let94 let409) → (Eq let196 let586) → (Eq let99 let587) → (Eq let139 let588) → (Eq let103 fmt0) → (Eq let590 let589) → (Eq let591 let466) → (Eq let117 let429) → (Eq let594 let593) → (Eq let595 let9) → (Eq let596 let468) → (Eq let118 let401) → (Eq let129 let350) → (Eq let598 let440) → (Eq let137 let597) → (Eq let144 let19) → (Eq let145 let523) → let599 → (Eq let149 let600) → (Eq let601 let418) → (Eq let155 let602) → (Eq let161 let566) → let248 → False :=
  let let1 := (Int.ofNat 37)
  let let2 := (Int.ofNat 120)
  let let3 := (Eq let2 let1)
  let let4 := (Eq let3 False)
  let let5 := (Int.ofNat 3)
  let let6 := (Eq fmt1 let5)
  let let7 := (Int.ofNat 2)
  let let8 := (Neg.neg let7)
  let let9 := (binrel% HAdd.hAdd let8 fmt1)
  let let10 := (xx5fcount let9)
  let let11 := (sx5fcount let9)
  let let12 := (binrel% HAdd.hAdd let11 let10)
  let let13 := (binrel% GE.ge let12 let5)
  let let14 := (And let13 let6)
  let let15 := (Int.ofNat 1)
  let let16 := (xx5fcount let15)
  let let17 := (Int.ofNat 0)
  let let18 := (xx5fcount let17)
  let let19 := (Eq let18 let16)
  let let20 := (And let19 let14)
  let let21 := (sx5fcount let15)
  let let22 := (sx5fcount let17)
  let let23 := (Eq let22 let21)
  let let24 := (And let23 let20)
  let let25 := (Eq let18 let17)
  let let26 := (And let25 let24)
  let let27 := (Eq let22 let15)
  let let28 := (And let27 let26)
  let let29 := (Not let28)
  let let30 := (Implies let28 False)
  let let31 := (Int.ofNat 115)
  let let32 := (Eq let31 let1)
  let let33 := (Eq let32 False)
  let let34 := (Eq let16 let15)
  let let35 := (Neg.neg let15)
  let let36 := (binrel% HAdd.hAdd let35 let16)
  let let37 := (Eq let17 let36)
  let let38 := (binrel% HAdd.hAdd let35 let21)
  let let39 := (Eq let22 let38)
  let let40 := (Eq let22 let17)
  let let41 := (And let40 (And let25 (And let39 let20)))
  let let42 := (Not let41)
  let let43 := (Implies let41 False)
  let let44 := (Eq let15 let9)
  let let45 := (Int.ofNat 4)
  let let46 := (binrel% GE.ge fmt1 let45)
  let let47 := (Not let46)
  let let48 := (binrel% LT.lt fmt1 let45)
  let let49 := (Eq let46 let46)
  let let50 := (Eq fmt1 let7)
  let let51 := (Eq let50 let50)
  let let52 := (Neg.neg (Rat.ofInt 2))
  let let53 := (Neg.neg (Rat.ofInt 3))
  let let54 := (Rat.ofInt 0)
  let let55 := (binrel% HAdd.hAdd let54 let53)
  let let56 := (Rat.ofInt 1)
  let let57 := (binrel% HAdd.hAdd let56 let55)
  let let58 := (And let13 let50)
  let let59 := (And let25 let58)
  let let60 := (And let27 let59)
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (Not False)
  let let64 := (Not let3)
  let let65 := (binrel% HMul.hMul let56 let15)
  let let66 := (binrel% GT.gt let56 let17)
  let let67 := (Rat.ofInt let11)
  let let68 := (binrel% HMul.hMul let56 let11)
  let let69 := (binrel% HMul.hMul let35 let10)
  let let70 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let35 let11) let69))
  let let71 := (Rat.ofInt let10)
  let let72 := (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let71 let70))
  let let73 := (binrel% HMul.hMul let56 let17)
  let let74 := (Neg.neg let56)
  let let75 := (binrel% HMul.hMul let74 let5)
  let let76 := (binrel% LE.le let54 let53)
  let let77 := (Int.ofNat 12)
  let let78 := (binrel% HAdd.hAdd let77 arg0)
  let let79 := (binrel% HAdd.hAdd arg0 let77)
  let let80 := (Neg.neg let77)
  let let81 := (Eq arg0 let80)
  let let82 := (Eq let17 let78)
  let let83 := (binrel% HAdd.hAdd arg1 let5)
  let let84 := (selectx5fformat let83)
  let let85 := (Eq let84 adrx5fhi)
  let let86 := (binrel% HAdd.hAdd arg1 let7)
  let let87 := (selectx5fformat let86)
  let let88 := (Eq let87 adrx5fmedhi)
  let let89 := (binrel% HAdd.hAdd arg1 let15)
  let let90 := (selectx5fformat let89)
  let let91 := (Eq let90 adrx5fmedlo)
  let let92 := (selectx5fformat arg1)
  let let93 := (Eq let92 adrx5flo)
  let let94 := (binrel% HAdd.hAdd fmt1 let15)
  let let95 := (selectx5fformat let94)
  let let96 := (Eq let95 s)
  let let97 := (selectx5fformat fmt1)
  let let98 := (Eq let97 percent)
  let let99 := (And (And (And (And (And let98 let96) let93) let91) let88) let85)
  let let100 := (Not let99)
  let let101 := (binrel% HAdd.hAdd fmt0 let15)
  let let102 := (Eq arg1 let101)
  let let103 := (binrel% HAdd.hAdd fmt0 let17)
  let let104 := (Eq arg1 let103)
  let let105 := (Or let104 let102)
  let let106 := (binrel% HAdd.hAdd fmt0 let45)
  let let107 := (Eq fmt1 let106)
  let let108 := (binrel% HAdd.hAdd fmt0 let5)
  let let109 := (Eq fmt1 let108)
  let let110 := (binrel% HAdd.hAdd fmt0 let7)
  let let111 := (Eq fmt1 let110)
  let let112 := (Eq fmt1 let101)
  let let113 := (Eq fmt1 let103)
  let let114 := (Or (Or (Or (Or let113 let112) let111) let109) let107)
  let let115 := (xx5fcount let5)
  let let116 := (xx5fcount let45)
  let let117 := (Eq let116 let115)
  let let118 := (binrel% HAdd.hAdd let115 let15)
  let let119 := (Eq let116 let118)
  let let120 := (Int.ofNat 5)
  let let121 := (selectx5fformat let120)
  let let122 := (Eq let121 x)
  let let123 := (selectx5fformat let45)
  let let124 := (Eq let123 percent)
  let let125 := (And let124 let122)
  let let126 := (smtIte let125 let119 let117 Prop)
  let let127 := (xx5fcount let7)
  let let128 := (Eq let115 let127)
  let let129 := (binrel% HAdd.hAdd let127 let15)
  let let130 := (Eq let115 let129)
  let let131 := (Eq let123 x)
  let let132 := (selectx5fformat let5)
  let let133 := (Eq let132 percent)
  let let134 := (And let133 let131)
  let let135 := (smtIte let134 let130 let128 Prop)
  let let136 := (Eq let127 let16)
  let let137 := (binrel% HAdd.hAdd let16 let15)
  let let138 := (Eq let127 let137)
  let let139 := (Eq let132 x)
  let let140 := (selectx5fformat let7)
  let let141 := (Eq let140 percent)
  let let142 := (And let141 let139)
  let let143 := (smtIte let142 let138 let136 Prop)
  let let144 := (Eq let16 let18)
  let let145 := (binrel% HAdd.hAdd let18 let15)
  let let146 := (Eq let16 let145)
  let let147 := (Eq let140 x)
  let let148 := (selectx5fformat let15)
  let let149 := (Eq let148 percent)
  let let150 := (And let149 let147)
  let let151 := (smtIte let150 let146 let144 Prop)
  let let152 := (Eq let18 let15)
  let let153 := (Eq let148 x)
  let let154 := (selectx5fformat let17)
  let let155 := (Eq let154 percent)
  let let156 := (And let155 let153)
  let let157 := (smtIte let156 let152 let25 Prop)
  let let158 := (sx5fcount let5)
  let let159 := (sx5fcount let45)
  let let160 := (Eq let159 let158)
  let let161 := (binrel% HAdd.hAdd let158 let15)
  let let162 := (Eq let159 let161)
  let let163 := (Eq let121 s)
  let let164 := (And let124 let163)
  let let165 := (smtIte let164 let162 let160 Prop)
  let let166 := (sx5fcount let7)
  let let167 := (Eq let158 let166)
  let let168 := (binrel% HAdd.hAdd let166 let15)
  let let169 := (Eq let158 let168)
  let let170 := (Eq let123 s)
  let let171 := (And let133 let170)
  let let172 := (smtIte let171 let169 let167 Prop)
  let let173 := (Eq let166 let21)
  let let174 := (binrel% HAdd.hAdd let21 let15)
  let let175 := (Eq let166 let174)
  let let176 := (Eq let132 s)
  let let177 := (And let141 let176)
  let let178 := (smtIte let177 let175 let173 Prop)
  let let179 := (Eq let21 let22)
  let let180 := (binrel% HAdd.hAdd let22 let15)
  let let181 := (Eq let21 let180)
  let let182 := (Eq let140 s)
  let let183 := (And let149 let182)
  let let184 := (smtIte let183 let181 let179 Prop)
  let let185 := (Eq let148 s)
  let let186 := (And let155 let185)
  let let187 := (smtIte let186 let27 let40 Prop)
  let let188 := (Int.ofNat 255)
  let let189 := (Eq let123 let188)
  let let190 := (Eq let123 adrx5fhi)
  let let191 := (Eq let123 adrx5fmedhi)
  let let192 := (Eq let123 adrx5fmedlo)
  let let193 := (Eq let123 adrx5flo)
  let let194 := (Eq let132 let188)
  let let195 := (Eq let132 adrx5fhi)
  let let196 := (Eq let132 adrx5fmedhi)
  let let197 := (Eq let132 adrx5fmedlo)
  let let198 := (Eq let132 adrx5flo)
  let let199 := (Eq let140 let188)
  let let200 := (Eq let140 adrx5fhi)
  let let201 := (Eq let140 adrx5fmedhi)
  let let202 := (Eq let140 adrx5fmedlo)
  let let203 := (Eq let140 adrx5flo)
  let let204 := (Eq let148 let188)
  let let205 := (Eq let148 adrx5fhi)
  let let206 := (Eq let148 adrx5fmedhi)
  let let207 := (Eq let148 adrx5fmedlo)
  let let208 := (Eq let148 adrx5flo)
  let let209 := (Eq let154 let188)
  let let210 := (Eq let154 adrx5fhi)
  let let211 := (Eq let154 adrx5fmedhi)
  let let212 := (Eq let154 adrx5fmedlo)
  let let213 := (Eq let154 adrx5flo)
  let let214 := (Eq let154 x)
  let let215 := (Eq let154 s)
  let let216 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let155 let215) let214) let213) let212) let211) let210) let209) let149) let185) let153) let208) let207) let206) let205) let204) let141) let182) let147) let203) let202) let201) let200) let199) let133) let176) let139) let198) let197) let196) let195) let194) let124) let170) let131) let193) let192) let191) let190) let189)
  let let217 := (binrel% HSub.hSub fmt1 let7)
  let let218 := (binrel% HSub.hSub let217 fmt0)
  let let219 := (xx5fcount let218)
  let let220 := (binrel% HMul.hMul let45 let219)
  let let221 := (sx5fcount let218)
  let let222 := (binrel% HMul.hMul let45 let221)
  let let223 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let222) let220)
  let let224 := (Eq arg1 let223)
  let let225 := (binrel% HAdd.hAdd arg0 distance)
  let let226 := (binrel% HAdd.hAdd let225 fmtx5flength)
  let let227 := (binrel% HSub.hSub let226 let45)
  let let228 := (binrel% LT.lt arg1 let227)
  let let229 := (binrel% GE.ge arg1 let225)
  let let230 := (binrel% GT.gt fmt1 let101)
  let let231 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let232 := (binrel% HSub.hSub let231 let15)
  let let233 := (binrel% LT.lt fmt1 let232)
  let let234 := (binrel% GE.ge arg1 fmt0)
  let let235 := (binrel% HSub.hSub fmt0 distance)
  let let236 := (Eq arg0 let235)
  let let237 := (Eq fmt0 let17)
  let let238 := (Eq x let2)
  let let239 := (Eq s let31)
  let let240 := (Eq percent let1)
  let let241 := (Eq adrx5fhi let15)
  let let242 := (Eq adrx5fmedhi let7)
  let let243 := (Eq adrx5fmedlo let45)
  let let244 := (Eq adrx5flo let15)
  let let245 := (Eq fmtx5flength let120)
  let let246 := (Eq distance let77)
  let let247 := (And let246 (And let245 (And let244 (And let243 (And let242 (And let241 (And let240 (And let239 (And let238 (And let237 (And let236 (And let234 (And let233 (And let230 (And let229 (And let228 (And let224 (And let216 (And let187 (And let184 (And let178 (And let172 (And let165 (And let157 (And let151 (And let143 (And let135 (And let126 (And let114 (And let105 let100))))))))))))))))))))))))))))))
  let let248 := (And (And (And (And (And (And (And (And (And (And (And (And (And let246 let245) let244) let243) let242) let241) let240) let239) let238) (And (And (And (And (And (And (And let237 let236) let234) let233) let230) let229) let228) let224)) let216) (And (And (And (And (And (And (And (And (And let187 let184) let178) let172) let165) let157) let151) let143) let135) let126)) (And let114 let105)) let100)
  let let249 := (binrel% HMul.hMul let35 arg1)
  let let250 := (binrel% HAdd.hAdd fmt0 let249)
  let let251 := (binrel% GE.ge let250 let15)
  let let252 := (Not let251)
  let let253 := (binrel% HMul.hMul let35 let15)
  let let254 := (binrel% HAdd.hAdd let231 let253)
  let let255 := (binrel% HAdd.hAdd let35 let231)
  let let256 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let35))
  let let257 := (binrel% HMul.hMul let35 fmt0)
  let let258 := (binrel% HAdd.hAdd fmt1 let257)
  let let259 := (binrel% GE.ge let258 let7)
  let let260 := (Not let259)
  let let261 := (binrel% HAdd.hAdd let15 fmt0)
  let let262 := (binrel% LE.le fmt1 let261)
  let let263 := (binrel% HMul.hMul let35 distance)
  let let264 := (binrel% HMul.hMul let35 arg0)
  let let265 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let264 let263))
  let let266 := (binrel% GE.ge let265 let17)
  let let267 := (binrel% GE.ge arg1 let227)
  let let268 := (Not let267)
  let let269 := (binrel% HMul.hMul let35 let45)
  let let270 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let269)))
  let let271 := (binrel% HAdd.hAdd let226 let269)
  let let272 := (Neg.neg let45)
  let let273 := (binrel% HAdd.hAdd let272 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let274 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let272)))
  let let275 := (binrel% HMul.hMul let35 fmtx5flength)
  let let276 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let264 (binrel% HAdd.hAdd let275 let263)))
  let let277 := (binrel% GE.ge let276 let272)
  let let278 := (binrel% GE.ge arg1 let273)
  let let279 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let222 let220))
  let let280 := (Eq s let154)
  let let281 := (Eq x let154)
  let let282 := (Eq adrx5flo let154)
  let let283 := (Eq adrx5fmedlo let154)
  let let284 := (binrel% HAdd.hAdd let54 (binrel% HAdd.hAdd let56 let53))
  let let285 := (Eq adrx5flo let148)
  let let286 := (Eq adrx5fmedlo let148)
  let let287 := (Eq adrx5fmedhi let148)
  let let288 := (Eq adrx5fhi let148)
  let let289 := (Eq adrx5flo let140)
  let let290 := (Eq adrx5fmedlo let140)
  let let291 := (Eq adrx5fhi let140)
  let let292 := (And let40 (And let152 let58))
  let let293 := (Not let292)
  let let294 := (Implies let292 False)
  let let295 := (Eq adrx5fmedlo let132)
  let let296 := (Eq adrx5fmedlo let123)
  let let297 := (Eq adrx5fhi let123)
  let let298 := (Eq s let148)
  let let299 := (Eq s let140)
  let let300 := (Eq let17 let9)
  let let301 := (binrel% HAdd.hAdd let15 let22)
  let let302 := (Eq let21 let301)
  let let303 := (binrel% HAdd.hAdd fmt0 let263)
  let let304 := (Eq fmt0 let225)
  let let305 := (Eq arg0 let303)
  let let306 := (Eq s let132)
  let let307 := (Not let47)
  let let308 := (Eq let46 let307)
  let let309 := (Eq let307 let46)
  let let310 := (binrel% HAdd.hAdd let15 let21)
  let let311 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let253))
  let let312 := (Eq let21 let166)
  let let313 := (Not let50)
  let let314 := (Not let313)
  let let315 := (Eq let50 let314)
  let let316 := (Eq let314 let50)
  let let317 := (Eq s let123)
  let let318 := (binrel% HAdd.hAdd let15 let166)
  let let319 := (binrel% LT.lt let74 let17)
  let let320 := (Eq let166 (binrel% HAdd.hAdd let35 let158))
  let let321 := (Eq let158 let318)
  let let322 := (Eq let166 let158)
  let let323 := (Eq s let121)
  let let324 := (binrel% GE.ge let12 let45)
  let let325 := (binrel% HMul.hMul let45 let10)
  let let326 := (binrel% HMul.hMul let45 let11)
  let let327 := (binrel% HAdd.hAdd let326 let325)
  let let328 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let327)
  let let329 := (binrel% GE.ge let328 let272)
  let let330 := (Eq let18 let36)
  let let331 := (And let40 (And let25 (And let23 (And let330 let14))))
  let let332 := (Not let331)
  let let333 := (Implies let331 False)
  let let334 := (binrel% LE.le fmt1 let101)
  let let335 := (Not let334)
  let let336 := (binrel% HAdd.hAdd let80 let327)
  let let337 := (binrel% HAdd.hAdd let7 let336)
  let let338 := (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd (binrel% HMul.hMul let272 let11) (binrel% HMul.hMul let272 let10)))
  let let339 := (binrel% HMul.hMul let35 let336)
  let let340 := (binrel% HMul.hMul let35 let17)
  let let341 := (Eq let336 let336)
  let let342 := (Eq let154 let31)
  let let343 := (Eq let31 let154)
  let let344 := (Eq let154 let2)
  let let345 := (Eq let2 let154)
  let let346 := (Eq x let123)
  let let347 := (Eq let154 let7)
  let let348 := (Eq let7 let154)
  let let349 := (Eq let127 (binrel% HAdd.hAdd let35 let115))
  let let350 := (binrel% HAdd.hAdd let15 let127)
  let let351 := (Eq let115 let350)
  let let352 := (Eq let154 let15)
  let let353 := (Eq let15 let154)
  let let354 := (Eq let2 let31)
  let let355 := (Not let354)
  let let356 := (Eq let354 False)
  let let357 := (Eq let148 let7)
  let let358 := (Eq let7 let148)
  let let359 := (Eq percent let123)
  let let360 := (Eq let148 let15)
  let let361 := (Eq let15 let148)
  let let362 := (Eq x let121)
  let let363 := (binrel% HAdd.hAdd let217 let257)
  let let364 := (Eq let140 let45)
  let let365 := (Eq let45 let140)
  let let366 := (Eq let148 let31)
  let let367 := (Eq let31 let148)
  let let368 := (binrel% HMul.hMul let35 let7)
  let let369 := (Eq let140 let15)
  let let370 := (Eq let15 let140)
  let let371 := (Eq let132 let7)
  let let372 := (Eq let7 let132)
  let let373 := (binrel% HAdd.hAdd let7 fmt0)
  let let374 := (Eq let123 let15)
  let let375 := (Eq let15 let123)
  let let376 := (Eq let11 (binrel% HAdd.hAdd let5 let69))
  let let377 := (Or let376 False)
  let let378 := (Eq let140 let31)
  let let379 := (Eq let31 let140)
  let let380 := (binrel% GE.ge fmt1 let232)
  let let381 := (Not let380)
  let let382 := (Eq let21 (binrel% HAdd.hAdd let35 let166))
  let let383 := (Eq let166 let310)
  let let384 := (binrel% HMul.hMul let35 let77)
  let let385 := (binrel% HMul.hMul let35 let120)
  let let386 := (binrel% HMul.hMul let35 let80)
  let let387 := (binrel% HAdd.hAdd let386 (binrel% HAdd.hAdd let385 let384))
  let let388 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 let387)))
  let let389 := (binrel% HAdd.hAdd let336 let387)
  let let390 := (Eq let121 let31)
  let let391 := (Eq let31 let121)
  let let392 := (Or let155 (Or let215 (Or let214 (Or let213 (Or let212 (Or let211 (Or let210 (Or let209 (Or let149 (Or let185 (Or let153 (Or let208 (Or let207 (Or let206 (Or let205 (Or let204 (Or let141 (Or let182 (Or let147 (Or let203 (Or let202 (Or let201 (Or let200 (Or let199 (Or let133 (Or let176 (Or let139 (Or let198 (Or let197 (Or let196 (Or let195 (Or let194 (Or let124 (Or let170 (Or let131 (Or let193 (Or let192 (Or let191 (Or let190 let189)))))))))))))))))))))))))))))))))))))))
  let let393 := (binrel% HAdd.hAdd let45 fmt0)
  let let394 := (Eq let148 let2)
  let let395 := (Eq let2 let148)
  let let396 := (binrel% HAdd.hAdd let80 let77)
  let let397 := (Eq let132 let31)
  let let398 := (Eq let31 let132)
  let let399 := (binrel% HAdd.hAdd let35 let336)
  let let400 := (Eq let115 (binrel% HAdd.hAdd let35 let116))
  let let401 := (binrel% HAdd.hAdd let15 let115)
  let let402 := (Eq let116 let401)
  let let403 := (binrel% HAdd.hAdd fmt1 let368)
  let let404 := (Eq let140 let7)
  let let405 := (Eq let7 let140)
  let let406 := (selectx5fformat let336)
  let let407 := (Eq let406 let15)
  let let408 := (Eq let15 let406)
  let let409 := (binrel% HAdd.hAdd let15 fmt1)
  let let410 := (selectx5fformat let409)
  let let411 := (Eq let410 let31)
  let let412 := (Eq let31 let410)
  let let413 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) let327)
  let let414 := (selectx5fformat let413)
  let let415 := (Eq let414 let15)
  let let416 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 10)) let327)
  let let417 := (selectx5fformat let416)
  let let418 := (Eq let417 let7)
  let let419 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 11)) let327)
  let let420 := (selectx5fformat let419)
  let let421 := (Eq let420 let45)
  let let422 := (Eq let97 let1)
  let let423 := (And let422 (And let411 (And let407 (And let421 (And let418 let415)))))
  let let424 := (Not let423)
  let let425 := (Eq fmt1 let45)
  let let426 := (Eq fmt1 let15)
  let let427 := (Eq fmt1 let17)
  let let428 := (Or let427 (Or let426 (Or let50 (Or let6 let425))))
  let let429 := (Eq let115 let116)
  let let430 := (Eq let121 let2)
  let let431 := (Eq let123 let1)
  let let432 := (And let431 let430)
  let let433 := (smtIte let432 let400 let429 Prop)
  let let434 := (Eq let127 let115)
  let let435 := (Eq let123 let2)
  let let436 := (Eq let132 let1)
  let let437 := (And let436 let435)
  let let438 := (smtIte let437 let349 let434 Prop)
  let let439 := (Eq let16 let127)
  let let440 := (Eq let16 (binrel% HAdd.hAdd let35 let127))
  let let441 := (Eq let132 let2)
  let let442 := (Eq let140 let1)
  let let443 := (And let442 let441)
  let let444 := (smtIte let443 let440 let439 Prop)
  let let445 := (Eq let140 let2)
  let let446 := (Eq let148 let1)
  let let447 := (And let446 let445)
  let let448 := (smtIte let447 let330 let19 Prop)
  let let449 := (Eq let154 let1)
  let let450 := (And let449 let394)
  let let451 := (smtIte let450 let152 let25 Prop)
  let let452 := (Eq let158 let159)
  let let453 := (Eq let158 (binrel% HAdd.hAdd let35 let159))
  let let454 := (And let431 let390)
  let let455 := (smtIte let454 let453 let452 Prop)
  let let456 := (Eq let123 let31)
  let let457 := (And let436 let456)
  let let458 := (smtIte let457 let320 let322 Prop)
  let let459 := (And let442 let397)
  let let460 := (smtIte let459 let382 let312 Prop)
  let let461 := (And let446 let378)
  let let462 := (smtIte let461 let39 let23 Prop)
  let let463 := (And let449 let366)
  let let464 := (smtIte let463 let27 let40 Prop)
  let let465 := (Eq let123 let7)
  let let466 := (Eq let123 let45)
  let let467 := (Eq let132 let15)
  let let468 := (Eq let132 let45)
  let let469 := (Eq let148 let45)
  let let470 := (Eq let154 let45)
  let let471 := (Or let449 (Or let342 (Or let344 (Or let352 (Or let470 (Or let347 (Or let352 (Or let209 (Or let446 (Or let366 (Or let394 (Or let360 (Or let469 (Or let357 (Or let360 (Or let204 (Or let442 (Or let378 (Or let445 (Or let369 (Or let364 (Or let404 (Or let369 (Or let199 (Or let436 (Or let397 (Or let441 (Or let467 (Or let468 (Or let371 (Or let467 (Or let194 (Or let431 (Or let456 (Or let435 (Or let374 (Or let466 (Or let465 (Or let374 let189)))))))))))))))))))))))))))))))))))))))
  let let472 := (And let471 (And let464 (And let462 (And let460 (And let458 (And let455 (And let451 (And let448 (And let444 (And let438 (And let433 (And let428 (And let376 let424)))))))))))))
  let let473 := (Not let324)
  let let474 := (binrel% GE.ge fmt1 let7)
  let let475 := (And let13 (And let47 (And let474 (And let473 let472))))
  let let476 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let13 (And let47 (And let474 (And let13 (And let473 (And True let472)))))))))))))))))
  let let477 := (binrel% HMul.hMul let56 let10)
  let let478 := (Eq let45 let420)
  let let479 := (Eq let15 let132)
  let let480 := (Eq percent let140)
  let let481 := (Neg.neg let120)
  let let482 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 (binrel% HAdd.hAdd let77 (binrel% HAdd.hAdd let481 let80)))))
  let let483 := (binrel% HAdd.hAdd let15 let336)
  let let484 := (Eq let21 let15)
  let let485 := (Eq let17 let38)
  let let486 := (binrel% HAdd.hAdd fmt1 let17)
  let let487 := (binrel% HAdd.hAdd let8 let486)
  let let488 := (Eq let15 let414)
  let let489 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let257 let275))
  let let490 := (binrel% GE.ge let489 let35)
  let let491 := (binrel% GE.ge fmt1 let255)
  let let492 := (Eq let483 let419)
  let let493 := (Eq let1 let97)
  let let494 := (Eq let17 let336)
  let let495 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let327)
  let let496 := (Eq let399 let495)
  let let497 := (binrel% GE.ge let336 let17)
  let let498 := (Eq let7 let123)
  let let499 := (binrel% HAdd.hAdd let386 let384)
  let let500 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 let499)))
  let let501 := (binrel% HAdd.hAdd let336 let499)
  let let502 := (Eq let31 let123)
  let let503 := (binrel% HAdd.hAdd let5 arg1)
  let let504 := (selectx5fformat let503)
  let let505 := (Eq adrx5fhi let504)
  let let506 := (Eq let504 adrx5fhi)
  let let507 := (Eq let17 let495)
  let let508 := (binrel% HAdd.hAdd let5 let17)
  let let509 := (Eq let45 let154)
  let let510 := (Eq percent let132)
  let let511 := (Eq let1 let154)
  let let512 := (Eq adrx5fhi let132)
  let let513 := (Eq percent let97)
  let let514 := (binrel% HAdd.hAdd let7 let17)
  let let515 := (Eq let337 let416)
  let let516 := (Eq let1 let132)
  let let517 := (Eq let45 let148)
  let let518 := (binrel% HAdd.hAdd let15 let17)
  let let519 := (Eq let2 let121)
  let let520 := (Not let260)
  let let521 := (binrel% HAdd.hAdd let5 let336)
  let let522 := (binrel% HAdd.hAdd let54 let55)
  let let523 := (binrel% HAdd.hAdd let15 let18)
  let let524 := (Eq let16 let523)
  let let525 := (binrel% LE.le let54 let52)
  let let526 := (Eq let2 let123)
  let let527 := (Eq adrx5fhi let154)
  let let528 := (Eq let2 let132)
  let let529 := (Eq let77 let77)
  let let530 := (Or let113 (Or let112 (Or let111 (Or let109 let107))))
  let let531 := (binrel% HAdd.hAdd let7 arg1)
  let let532 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let326 (binrel% HAdd.hAdd let325 (binrel% HAdd.hAdd let77 let80))))
  let let533 := (selectx5fformat let531)
  let let534 := (Eq adrx5fmedhi let533)
  let let535 := (Eq let533 adrx5fmedhi)
  let let536 := (Eq adrx5flo let92)
  let let537 := (Eq adrx5fmedhi let123)
  let let538 := (binrel% HAdd.hAdd let45 let17)
  let let539 := (Eq s let410)
  let let540 := (Eq let410 s)
  let let541 := (binrel% HAdd.hAdd let481 fmt1)
  let let542 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let17 let481))
  let let543 := (Eq adrx5fmedhi let140)
  let let544 := (Not let13)
  let let545 := (Not let544)
  let let546 := (Eq adrx5flo let132)
  let let547 := (binrel% HAdd.hAdd let35 arg1)
  let let548 := (Eq fmt0 let547)
  let let549 := (Eq arg1 let261)
  let let550 := (binrel% GE.ge let338 let15)
  let let551 := (Eq let1 let123)
  let let552 := (Eq fmt0 arg1)
  let let553 := (Eq arg1 fmt0)
  let let554 := (binrel% HAdd.hAdd let17 let338)
  let let555 := (Eq x let140)
  let let556 := (Eq adrx5fmedhi let154)
  let let557 := (Eq let1 let140)
  let let558 := (Eq let17 let17)
  let let559 := (Eq x let148)
  let let560 := (Eq let2 let140)
  let let561 := (Eq let2 let2)
  let let562 := (Eq let1 let148)
  let let563 := (Eq let31 let31)
  let let564 := (Eq let1 let1)
  let let565 := (binrel% HMul.hMul let74 let12)
  let let566 := (binrel% HAdd.hAdd let15 let158)
  let let567 := (Eq let159 let566)
  let let568 := (Eq let15 let15)
  let let569 := (Eq let45 let45)
  let let570 := (Eq let120 let120)
  let let571 := (And let40 (And let152 let24))
  let let572 := (Not let571)
  let let573 := (Implies let571 False)
  let let574 := (And let40 let26)
  let let575 := (Not let574)
  let let576 := (Implies let574 False)
  let let577 := (Eq let7 let7)
  let let578 := (binrel% HAdd.hAdd let5 fmt0)
  let let579 := (Not let32)
  let let580 := (binrel% HAdd.hAdd let15 arg1)
  let let581 := (selectx5fformat let580)
  let let582 := (Eq adrx5fmedlo let581)
  let let583 := (Eq let581 adrx5fmedlo)
  let let584 := (Eq adrx5flo let123)
  let let585 := (binrel% GE.ge let541 let35)
  let let586 := (Eq adrx5fmedhi let132)
  let let587 := (And let98 (And let96 (And let93 (And let91 (And let88 let85)))))
  let let588 := (Eq x let132)
  let let589 := (binrel% HAdd.hAdd let8 let258)
  let let590 := (binrel% HAdd.hAdd let9 let257)
  let let591 := (Eq let45 let123)
  let let592 := (And let40 let59)
  let let593 := (Not let592)
  let let594 := (Implies let592 False)
  let let595 := (binrel% HAdd.hAdd fmt1 let8)
  let let596 := (Eq let45 let132)
  let let597 := (binrel% HAdd.hAdd let15 let16)
  let let598 := (Eq let127 let597)
  let let599 := (Eq let521 let413)
  let let600 := (Eq percent let148)
  let let601 := (Eq let7 let417)
  let let602 := (Eq percent let154)
  let let603 := (And let513 (And let539 (And let536 (And let582 (And let534 let505)))))
  let let604 := (Not let603)
  let let605 := (Or let552 let548)
  let let606 := (Eq fmt1 let393)
  let let607 := (Eq fmt1 let578)
  let let608 := (Eq fmt1 let373)
  let let609 := (Eq fmt1 let261)
  let let610 := (Eq fmt1 fmt0)
  let let611 := (Or let610 (Or let609 (Or let608 (Or let607 let606))))
  let let612 := (And let359 let362)
  let let613 := (smtIte let612 let400 let429 Prop)
  let let614 := (And let510 let346)
  let let615 := (smtIte let614 let349 let434 Prop)
  let let616 := (And let480 let588)
  let let617 := (smtIte let616 let440 let439 Prop)
  let let618 := (And let600 let555)
  let let619 := (smtIte let618 let330 let19 Prop)
  let let620 := (And let602 let559)
  let let621 := (smtIte let620 let152 let25 Prop)
  let let622 := (And let359 let323)
  let let623 := (smtIte let622 let453 let452 Prop)
  let let624 := (And let510 let317)
  let let625 := (smtIte let624 let320 let322 Prop)
  let let626 := (And let480 let306)
  let let627 := (smtIte let626 let382 let312 Prop)
  let let628 := (And let600 let299)
  let let629 := (smtIte let628 let39 let23 Prop)
  let let630 := (And let602 let298)
  let let631 := (smtIte let630 let27 let40 Prop)
  let let632 := (Or let602 (Or let280 (Or let281 (Or let282 (Or let283 (Or let556 (Or let527 (Or let209 (Or let600 (Or let298 (Or let559 (Or let285 (Or let286 (Or let287 (Or let288 (Or let204 (Or let480 (Or let299 (Or let555 (Or let289 (Or let290 (Or let543 (Or let291 (Or let199 (Or let510 (Or let306 (Or let588 (Or let546 (Or let295 (Or let586 (Or let512 (Or let194 (Or let359 (Or let317 (Or let346 (Or let584 (Or let296 (Or let537 (Or let297 let189)))))))))))))))))))))))))))))))))))))))
  let let633 := (xx5fcount let589)
  let let634 := (binrel% HMul.hMul let45 let633)
  let let635 := (sx5fcount let589)
  let let636 := (binrel% HMul.hMul let45 let635)
  let let637 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let636 let634))
  let let638 := (Eq arg1 let637)
  let let639 := (Not let277)
  let let640 := (Not let490)
  let let641 := (And let246 (And let245 (And let244 (And let243 (And let242 (And let241 (And let240 (And let239 (And let238 (And let237 (And let304 (And let252 (And let640 (And let259 (And let266 (And let639 (And let638 (And let632 (And let631 (And let629 (And let627 (And let625 (And let623 (And let621 (And let619 (And let617 (And let615 (And let613 (And let611 (And let605 let604))))))))))))))))))))))))))))))
  let let642 := (selectx5fformat let521)
  let let643 := (Eq let15 let642)
  let let644 := (selectx5fformat let337)
  let let645 := (Eq let7 let644)
  let let646 := (selectx5fformat let483)
  let let647 := (Eq let45 let646)
  let let648 := (And let493 (And let412 (And let408 (And let647 (And let645 let643)))))
  let let649 := (Not let648)
  let let650 := (Eq let17 let399)
  let let651 := (Or let494 let650)
  let let652 := (Eq fmt1 let538)
  let let653 := (Eq fmt1 let508)
  let let654 := (Eq fmt1 let514)
  let let655 := (Eq fmt1 let518)
  let let656 := (Or let427 (Or let655 (Or let654 (Or let653 let652))))
  let let657 := (And let551 let519)
  let let658 := (smtIte let657 let400 let429 Prop)
  let let659 := (And let516 let526)
  let let660 := (smtIte let659 let349 let434 Prop)
  let let661 := (And let557 let528)
  let let662 := (smtIte let661 let440 let439 Prop)
  let let663 := (And let562 let560)
  let let664 := (smtIte let663 let330 let19 Prop)
  let let665 := (And let511 let395)
  let let666 := (smtIte let665 let152 let25 Prop)
  let let667 := (And let551 let391)
  let let668 := (smtIte let667 let453 let452 Prop)
  let let669 := (And let516 let502)
  let let670 := (smtIte let669 let320 let322 Prop)
  let let671 := (And let557 let398)
  let let672 := (smtIte let671 let382 let312 Prop)
  let let673 := (And let562 let379)
  let let674 := (smtIte let673 let39 let23 Prop)
  let let675 := (And let511 let367)
  let let676 := (smtIte let675 let27 let40 Prop)
  let let677 := (Or let511 (Or let343 (Or let345 (Or let353 (Or let509 (Or let348 (Or let353 (Or let209 (Or let562 (Or let367 (Or let395 (Or let361 (Or let517 (Or let358 (Or let361 (Or let204 (Or let557 (Or let379 (Or let560 (Or let370 (Or let365 (Or let405 (Or let370 (Or let199 (Or let516 (Or let398 (Or let528 (Or let479 (Or let596 (Or let372 (Or let479 (Or let194 (Or let551 (Or let502 (Or let526 (Or let375 (Or let591 (Or let498 (Or let375 let189)))))))))))))))))))))))))))))))))))))))
  let let678 := (binrel% HAdd.hAdd fmt1 let340)
  let let679 := (binrel% HAdd.hAdd let8 let678)
  let let680 := (xx5fcount let679)
  let let681 := (binrel% HMul.hMul let45 let680)
  let let682 := (sx5fcount let679)
  let let683 := (binrel% HMul.hMul let45 let682)
  let let684 := (binrel% HAdd.hAdd let80 (binrel% HAdd.hAdd let683 let681))
  let let685 := (Eq let336 let684)
  let let686 := (binrel% GE.ge let389 let272)
  let let687 := (Not let686)
  let let688 := (binrel% GE.ge let501 let17)
  let let689 := (binrel% GE.ge let678 let7)
  let let690 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let340 let385))
  let let691 := (binrel% GE.ge let690 let35)
  let let692 := (Not let691)
  let let693 := (binrel% HAdd.hAdd let17 let339)
  let let694 := (binrel% GE.ge let693 let15)
  let let695 := (Not let694)
  let let696 := (Eq let17 let396)
  let let697 := (And let529 (And let570 (And let568 (And let569 (And let577 (And let568 (And let564 (And let563 (And let561 (And let558 (And let696 (And let695 (And let692 (And let689 (And let688 (And let687 (And let685 (And let677 (And let676 (And let674 (And let672 (And let670 (And let668 (And let666 (And let664 (And let662 (And let660 (And let658 (And let656 (And let651 let649))))))))))))))))))))))))))))))
  let let698 := (Eq And And)
  let let699 := (Eq fmt1 fmt1)
  let let700 := (Eq Or Or)
  let let701 := (Eq let429 let429)
  let let702 := (Eq let400 let400)
  let let703 := (Eq let434 let434)
  let let704 := (Eq let349 let349)
  let let705 := (Eq let439 let439)
  let let706 := (Eq let440 let440)
  let let707 := (Eq let19 let19)
  let let708 := (Eq let330 let330)
  let let709 := (Eq let25 let25)
  let let710 := (Eq let152 let152)
  let let711 := (Eq let452 let452)
  let let712 := (Eq let453 let453)
  let let713 := (Eq let322 let322)
  let let714 := (Eq let320 let320)
  let let715 := (Eq let312 let312)
  let let716 := (Eq let382 let382)
  let let717 := (Eq let23 let23)
  let let718 := (Eq let39 let39)
  let let719 := (Eq let40 let40)
  let let720 := (Eq let27 let27)
  let let721 := (Eq let189 let189)
  let let722 := (Eq let194 let194)
  let let723 := (Eq let199 let199)
  let let724 := (Eq let204 let204)
  let let725 := (Eq let209 let209)
  let let726 := (Eq let8 let8)
  let let727 := (Eq let272 let272)
  let let728 := (Eq let35 let35)
  let let729 := (Eq arg1 let336)
  let let730 := (And let237 (And let238 (And let239 (And let240 (And let241 (And let242 (And let243 (And let244 (And let245 let246)))))))))
  let let731 := (And let81 let730)
  let let732 := (Eq arg1 arg1)
  let let733 := (Eq arg0 arg0)
  let let734 := (Eq let17 let79)
  let let735 := (Eq arg1 let684)
  let let736 := (Eq let637 let684)
  let let737 := (Eq let634 let681)
  let let738 := (Eq let633 let680)
  let let739 := (Eq let589 let679)
  let let740 := (Eq let257 let340)
  let let741 := (Eq let636 let683)
  let let742 := (Eq let635 let682)
  let let743 := (Not let447)
  let let744 := (Not let445)
  let let745 := (Not let23)
  let let746 := (Not let40)
  let let747 := (Or let746 let313)
  let let748 := (Not let25)
  let let749 := (Or let748 let313)
  let let750 := (Or let544 let313)
  let let751 := (Or let748 let750)
  let let752 := (Eq let17 let11)
  let let753 := (Eq let17 let10)
  let let754 := (And let13 (And let753 let752))
  let let755 := (Implies let592 let754)
  let let756 := (Eq let754 False)
  let let757 := (Or (Not let752) False)
  let let758 := (Not let753)
  let let759 := (Eq let11 let17)
  let let760 := (Not let759)
  let let761 := (Or let760 False)
  let let762 := (binrel% HAdd.hAdd let73 let75)
  let let763 := (binrel% HAdd.hAdd let73 let762)
  let let764 := (binrel% HAdd.hAdd let68 (binrel% HAdd.hAdd let477 let565))
  let let765 := (binrel% LE.le let764 let763)
  let let766 := (binrel% LE.le let565 let75)
  let let767 := (And let319 let13)
  let let768 := (Implies let767 let766)
  let let769 := (Eq let477 let73)
  let let770 := (Eq let10 let17)
  let let771 := (And let66 let770)
  let let772 := (Implies let771 let769)
  let let773 := (Eq let68 let73)
  let let774 := (And let66 let759)
  let let775 := (Implies let774 let773)
  let let776 := (And let300 let40)
  let let777 := (Implies let776 let752)
  let let778 := (Or let746 let752)
  let let779 := (Not let300)
  let let780 := (Or let779 let778)
  let let781 := (Eq let22 let11)
  let let782 := (Eq let9 let17)
  let let783 := (Eq let17 let22)
  let let784 := (Eq let50 let300)
  let let785 := (And let300 let25)
  let let786 := (Implies let785 let753)
  let let787 := (Or let748 let753)
  let let788 := (Or let779 let787)
  let let789 := (Eq let18 let10)
  let let790 := (Eq let17 let18)
  let let791 := (Not let450)
  let let792 := (Not let152)
  let let793 := (Eq let15 let10)
  let let794 := (And let13 (And let793 let752))
  let let795 := (Implies let292 let794)
  let let796 := (Eq let794 False)
  let let797 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let65 let75))
  let let798 := (binrel% LE.le let764 let797)
  let let799 := (Eq let477 let65)
  let let800 := (Eq let10 let15)
  let let801 := (And let66 let800)
  let let802 := (And let300 let152)
  let let803 := (Or let792 let793)
  let let804 := (Eq let15 let18)
  let let805 := (Not let463)
  let let806 := (Or let805 let805)
  let let807 := (Not let394)
  let let808 := (Not let366)
  let let809 := (Or let807 let808)
  let let810 := (Implies let394 let808)
  let let811 := (Not let27)
  let let812 := (Eq let15 let11)
  let let813 := (And let13 (And let753 let812))
  let let814 := (Implies let60 let813)
  let let815 := (Eq let813 False)
  let let816 := (Eq let11 let15)
  let let817 := (Not let816)
  let let818 := (binrel% HAdd.hAdd let65 let762)
  let let819 := (binrel% LE.le let764 let818)
  let let820 := (Eq let68 let65)
  let let821 := (And let66 let816)
  let let822 := (And let300 let27)
  let let823 := (Or let811 let812)
  let let824 := (Eq let15 let22)
  let let825 := (Not let474)
  let let826 := (Or let825 (Or let46 (Or let50 let6)))
  let let827 := (Or let825 (Or let307 (Or let314 let6)))
  let let828 := (And let474 (And let47 let313))
  let let829 := (Eq let5 fmt1)
  let let830 := (And let474 (And let313 let47))
  let let831 := (Not let6)
  let let832 := (Or let745 let831)
  let let833 := (Or let745 (Or let748 let831))
  let let834 := (Or let746 let748)
  let let835 := (Not let19)
  let let836 := (Or let835 let831)
  let let837 := (Or let748 let836)
  let let838 := (Or let746 let837)
  let let839 := (Or let745 let837)
  let let840 := (Or let544 let831)
  let let841 := (Or let835 let840)
  let let842 := (Or let745 let841)
  let let843 := (Or let748 let842)
  let let844 := (Implies let574 let754)
  let let845 := (And let44 (And let23 let40))
  let let846 := (Implies let845 let752)
  let let847 := (Not let44)
  let let848 := (Or let847 (Or let745 let778))
  let let849 := (Eq let21 let11)
  let let850 := (Eq let9 let15)
  let let851 := (Eq let6 let44)
  let let852 := (And let44 (And let19 let25))
  let let853 := (Implies let852 let753)
  let let854 := (Or let847 (Or let835 let787))
  let let855 := (Eq let16 let10)
  let let856 := (Not let461)
  let let857 := (Not let39)
  let let858 := (Implies let41 let813)
  let let859 := (Or let835 (Or let544 (Or let831 let813)))
  let let860 := (Eq let15 let21)
  let let861 := (And let44 let860)
  let let862 := (And let39 let40)
  let let863 := (Not let330)
  let let864 := (Implies let331 let794)
  let let865 := (Or let544 (Or let831 let794))
  let let866 := (Eq let15 let16)
  let let867 := (And let44 let866)
  let let868 := (And let330 let25)
  let let869 := (Not let446)
  let let870 := (Or let808 let869)
  let let871 := (Implies let366 let869)
  let let872 := (Eq let446 False)
  let let873 := (Implies let28 let813)
  let let874 := (And let44 (And let23 let27))
  let let875 := (Or let807 let791)
  let let876 := (Or let807 let869)
  let let877 := (Implies let394 let869)
  let let878 := (Implies let571 let794)
  let let879 := (And let44 (And let19 let152))
  let let880 := (Not let378)
  let let881 := (Or let744 let880)
  let let882 := (Implies let445 let880)
fun lean_r0 : let4 => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let30 let29) => -- THEORY_REWRITE_BOOL
fun lean_r2 : let33 => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let37 let34) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let43 let42) => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq let44 let6) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let49 True) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let51 True) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let57 let52) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let62 let61) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let63 True) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let4 let64) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let65 let56) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let66 True) => -- EVALUATE
fun lean_r15 : (Eq let68 let67) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let72 let54) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let73 let54) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let75 let53) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let76 False) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let79 let78) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let82 let81) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let248 let247) => -- THEORY_REWRITE_BOOL
fun lean_r23 : (Eq let234 let252) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let232 let254) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let256 let255) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let262 let260) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let229 let266) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let228 let268) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let271 let270) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let269 let272) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let274 let273) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let278 let277) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let223 let279) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let215 let280) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let214 let281) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let213 let282) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let212 let283) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let284 let52) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let208 let285) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let207 let286) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let206 let287) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let205 let288) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let203 let289) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let202 let290) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let200 let291) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let294 let293) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let197 let295) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let192 let296) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let190 let297) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let185 let298) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let182 let299) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let300 let50) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let302 let39) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let235 let303) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let179 let23) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let305 let304) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let176 let306) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let309 let308) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let174 let310) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let254 let311) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let173 let312) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let316 let315) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let253 let35) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let170 let317) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let168 let318) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let319 True) => -- EVALUATE
fun lean_r67 : (Eq let321 let320) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let167 let322) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let163 let323) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let329 let324) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let333 let332) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let230 let335) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let337 let337) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let339 let338) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let340 let17) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let101 let261) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let341 True) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let343 let342) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let345 let344) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let131 let346) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let348 let347) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let351 let349) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let353 let352) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let356 let355) => -- THEORY_REWRITE_BOOL
fun lean_r85 : (Eq let358 let357) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let124 let359) => -- THEORY_REWRITE_ARITH
fun lean_r87 : let356 => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let361 let360) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let122 let362) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let218 let363) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let365 let364) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let367 let366) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let368 let8) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let370 let369) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let372 let371) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let110 let373) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let375 let374) => -- THEORY_REWRITE_ARITH
fun lean_r98 : let316 => -- THEORY_REWRITE_BOOL
fun lean_r99 : (Eq let377 let376) => -- THEORY_REWRITE_BOOL
fun lean_r100 : (Eq let379 let378) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let233 let381) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let383 let382) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let389 let388) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let391 let390) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let216 let392) => -- THEORY_REWRITE_BOOL
fun lean_r106 : (Eq let106 let393) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let395 let394) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let396 let17) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let398 let397) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let399 let399) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let402 let400) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let217 let403) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let405 let404) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let408 let407) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let412 let411) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let476 let475) => -- THEORY_REWRITE_BOOL
fun lean_r117 : (Eq let477 let71) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let478 let421) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let479 let467) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let141 let480) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let482 let328) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let483 let483) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let485 let484) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let227 let271) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let487 let9) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let488 let415) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let491 let490) => -- THEORY_REWRITE_ARITH
fun lean_r128 : let492 => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let493 let422) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let494 let376) => -- THEORY_REWRITE_ARITH
fun lean_r131 : let496 => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let497 let13) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let498 let465) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let501 let500) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let502 let456) => -- THEORY_REWRITE_ARITH
fun lean_r136 : let309 => -- THEORY_REWRITE_BOOL
fun lean_r137 : (Eq let506 let505) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let507 False) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let386 let77) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let508 let5) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let509 let470) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let133 let510) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let511 let449) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let195 let512) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let98 let513) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let514 let7) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let136 let439) => -- THEORY_REWRITE_ARITH
fun lean_r148 : let515 => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let516 let436) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let517 let469) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let518 let15) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let519 let430) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let520 let259) => -- THEORY_REWRITE_BOOL
fun lean_r154 : (Eq let521 let521) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let522 let53) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let524 let330) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let525 False) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let526 let435) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let210 let527) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let528 let441) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let384 let80) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq let385 let481) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let529 True) => -- THEORY_REWRITE_ARITH
fun lean_r164 : (Eq let114 let530) => -- THEORY_REWRITE_BOOL
fun lean_r165 : (Eq let86 let531) => -- THEORY_REWRITE_ARITH
fun lean_r166 : (Eq let532 let336) => -- THEORY_REWRITE_ARITH
fun lean_r167 : (Eq let535 let534) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let128 let434) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let93 let536) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let486 fmt1) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let191 let537) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let538 let45) => -- THEORY_REWRITE_ARITH
fun lean_r173 : (Eq let540 let539) => -- THEORY_REWRITE_ARITH
fun lean_r174 : (Eq let542 let541) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let201 let543) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let545 let13) => -- THEORY_REWRITE_BOOL
fun lean_r177 : (Eq let198 let546) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let549 let548) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let550 let544) => -- THEORY_REWRITE_ARITH
fun lean_r180 : (Eq let551 let431) => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq let553 let552) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq let554 let338) => -- THEORY_REWRITE_ARITH
fun lean_r183 : (Eq let147 let555) => -- THEORY_REWRITE_ARITH
fun lean_r184 : (Eq let211 let556) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq let557 let442) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let558 True) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let153 let559) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq let560 let445) => -- THEORY_REWRITE_ARITH
fun lean_r189 : (Eq let561 True) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq let160 let452) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let562 let446) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let563 True) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq let564 True) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let565 let70) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq let567 let453) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let568 True) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq let569 True) => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq let570 True) => -- THEORY_REWRITE_ARITH
fun lean_r199 : (Eq let573 let572) => -- THEORY_REWRITE_BOOL
fun lean_r200 : (Eq let576 let575) => -- THEORY_REWRITE_BOOL
fun lean_r201 : (Eq let577 True) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let108 let578) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq let83 let503) => -- THEORY_REWRITE_ARITH
fun lean_r204 : (Eq let33 let579) => -- THEORY_REWRITE_BOOL
fun lean_r205 : (Eq let180 let301) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq let583 let582) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let89 let580) => -- THEORY_REWRITE_ARITH
fun lean_r208 : (Eq let193 let584) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let585 let46) => -- THEORY_REWRITE_ARITH
fun lean_r210 : (Eq let94 let409) => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let196 let586) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq let99 let587) => -- THEORY_REWRITE_BOOL
fun lean_r213 : (Eq let139 let588) => -- THEORY_REWRITE_ARITH
fun lean_r214 : (Eq let103 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r215 : (Eq let590 let589) => -- THEORY_REWRITE_ARITH
fun lean_r216 : (Eq let591 let466) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq let117 let429) => -- THEORY_REWRITE_ARITH
fun lean_r218 : (Eq let594 let593) => -- THEORY_REWRITE_BOOL
fun lean_r219 : (Eq let595 let9) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let596 let468) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq let118 let401) => -- THEORY_REWRITE_ARITH
fun lean_r222 : (Eq let129 let350) => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let598 let440) => -- THEORY_REWRITE_ARITH
fun lean_r224 : (Eq let137 let597) => -- THEORY_REWRITE_ARITH
fun lean_r225 : (Eq let144 let19) => -- THEORY_REWRITE_ARITH
fun lean_r226 : (Eq let145 let523) => -- THEORY_REWRITE_ARITH
fun lean_r227 : let599 => -- THEORY_REWRITE_ARITH
fun lean_r228 : (Eq let149 let600) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq let601 let418) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq let155 let602) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq let161 let566) => -- THEORY_REWRITE_ARITH
fun lean_a232 : let248 => by
have lean_s0 : (Or let746 (Or let748 (Or let857 let859))) :=
  (scope (fun lean_a233 : let40 =>
    (scope (fun lean_a234 : let25 =>
      (scope (fun lean_a235 : let39 =>
        (scope (fun lean_a236 : let19 =>
          (scope (fun lean_a237 : let13 =>
            (scope (fun lean_a238 : let6 =>
              have lean_s0 : let851 := by timed Eq.symm lean_r5
              have lean_s1 : let44 := by timed eqResolve lean_a238 lean_s0
              let lean_s2 := by timed And.intro lean_a236 lean_a234
              have lean_s3 : let852 := by timed And.intro lean_s1 lean_s2
              have lean_s4 : let854 :=
                (scope (fun lean_a239 : let44 =>
                  (scope (fun lean_a240 : let19 =>
                    (scope (fun lean_a241 : let25 =>
                      have lean_s4 : let790 := by timed Eq.symm lean_a241
                      have lean_s5 : let144 := by timed Eq.symm lean_a240
                      have lean_s6 : let19 := by timed Eq.symm lean_s5
                      let lean_s7 := by timed Eq.trans lean_s4 lean_s6
                      have lean_s8 : let850 := by timed Eq.symm lean_a239
                      have lean_s9 : let44 := by timed Eq.symm lean_s8
                      have lean_s10 : let855 := by timed flipCongrArg lean_s9 [xx5fcount]
                      have lean_s11 : let753 := by timed Eq.trans lean_s7 lean_s10
                      show let753 from lean_s11
                ))))))
              have lean_s5 : let853 := by liftOrNToImp lean_s4, 3
              have lean_s6 : let753 := by timed modusPonens lean_s3 lean_s5
              have lean_s7 : let862 := by timed And.intro lean_a235 lean_a233
              have lean_s8 : (Or let857 (Or let746 let485)) :=
                (scope (fun lean_a240 : let39 =>
                  (scope (fun lean_a241 : let40 =>
                    have lean_s8 : let783 := by timed Eq.symm lean_a241
                    have lean_s9 : (Eq let38 let22) := by timed Eq.symm lean_a240
                    have lean_s10 : let39 := by timed Eq.symm lean_s9
                    have lean_s11 : let485 := by timed Eq.trans lean_s8 lean_s10
                    show let485 from lean_s11
                ))))
              have lean_s9 : (Implies let862 let485) := by liftOrNToImp lean_s8, 2
              have lean_s10 : let485 := by timed modusPonens lean_s7 lean_s9
              have lean_s11 : (Or (Not let485) let860) :=
                (scope (fun lean_a240 : let485 =>
                  have lean_s11 : let484 := by timed eqResolve lean_a240 lean_r123
                  have lean_s12 : let860 := by timed Eq.symm lean_s11
                  show let860 from lean_s12
                ))
              have lean_s12 : (Implies let485 let860) := by liftOrNToImp lean_s11, 1
              have lean_s13 : let860 := by timed modusPonens lean_s10 lean_s12
              have lean_s14 : let861 := by timed And.intro lean_s1 lean_s13
              have lean_s15 : (Or let847 (Or (Not let860) let812)) :=
                (scope (fun lean_a241 : let44 =>
                  (scope (fun lean_a242 : let860 =>
                    have lean_s15 : let484 := by timed Eq.symm lean_a242
                    have lean_s16 : let860 := by timed Eq.symm lean_s15
                    have lean_s17 : let850 := by timed Eq.symm lean_a241
                    have lean_s18 : let44 := by timed Eq.symm lean_s17
                    have lean_s19 : let849 := by timed flipCongrArg lean_s18 [sx5fcount]
                    have lean_s20 : let812 := by timed Eq.trans lean_s16 lean_s19
                    show let812 from lean_s20
                ))))
              have lean_s16 : (Implies let861 let812) := by liftOrNToImp lean_s15, 2
              have lean_s17 : let812 := by timed modusPonens lean_s14 lean_s16
              let lean_s18 := by timed And.intro lean_s6 lean_s17
              have lean_s19 : let813 := by timed And.intro lean_a237 lean_s18
              show let813 from lean_s19
  ))))))))))))
have lean_s1 : let858 := by liftOrNToImp lean_s0, 6
have lean_s2 : (Eq let41 let41) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or let544 (Or let758 (Or (Not let812) False))) :=
  (scope (fun lean_a242 : let13 =>
    (scope (fun lean_a243 : let753 =>
      (scope (fun lean_a244 : let812 =>
        have lean_s4 : let816 := by timed Eq.symm lean_a244
        have lean_s5 : (Or let817 False) :=
          (scope (fun lean_a244 : let816 =>
            have lean_s5 : let66 := by timed trueElim lean_r14
            have lean_s6 : let821 := by timed And.intro lean_s5 lean_a244
            have lean_s7 : (Implies let821 let820) := by arithMulPos [let11, let15, let56], 4
            have lean_s8 : let820 := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : let770 := by timed Eq.symm lean_a243
            have lean_s10 : let771 := by timed And.intro lean_s5 lean_s9
            have lean_s11 : let772 := by arithMulPos [let10, let17, let56], 4
            have lean_s12 : let769 := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : let319 := by timed trueElim lean_r66
            have lean_s14 : let767 := by timed And.intro lean_s13 lean_a242
            have lean_s15 : let768 := by arithMulNeg [let12, let5, let74], 3
            have lean_s16 : let766 := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : let819 := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r117 lean_r194
            have lean_s19 : (Eq let764 let72) := by timed congrHAdd lean_r15 lean_s18
            have lean_s20 : (Eq let764 let54) := by timed Eq.trans lean_s19 lean_r16
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r17 lean_r18
            have lean_s23 : (Eq let818 let57) := by timed congrHAdd lean_r13 lean_s22
            have lean_s24 : (Eq let818 let52) := by timed Eq.trans lean_s23 lean_r9
            have lean_s25 : (Eq let819 let525) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let819 False) := by timed Eq.trans lean_s25 lean_r157
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : let817 := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not let813) := by liftOrNToNeg lean_s4
have lean_s6 : let815 := by timed falseIntro lean_s5
have lean_s7 : (Eq let858 let43) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let858 let42) := by timed Eq.trans lean_s7 lean_r4
have lean_s9 : let42 := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or let746 (Or let748 (Or let857 let841))) := by timed flipNotAnd lean_s9 [let40, let25, let39, let19, let13, let6]
have lean_s11 : (Or let544 (Or let746 (Or let857 let837))) := by permutateOr lean_s10, [4, 0, 2, 1, 3, 5], (- 1)
have lean_s12 : let698 := by timed rfl
have lean_s13 : (Eq let246 let246) := by timed rfl
let lean_s14 := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq let245 let245) := by timed rfl
let lean_s16 := by timed congr lean_s12 lean_s15
have lean_s17 : (Eq let244 let244) := by timed rfl
let lean_s18 := by timed congr lean_s12 lean_s17
have lean_s19 : (Eq let243 let243) := by timed rfl
let lean_s20 := by timed congr lean_s12 lean_s19
have lean_s21 : (Eq let242 let242) := by timed rfl
let lean_s22 := by timed congr lean_s12 lean_s21
have lean_s23 : (Eq let241 let241) := by timed rfl
let lean_s24 := by timed congr lean_s12 lean_s23
have lean_s25 : (Eq let240 let240) := by timed rfl
let lean_s26 := by timed congr lean_s12 lean_s25
have lean_s27 : (Eq let239 let239) := by timed rfl
let lean_s28 := by timed congr lean_s12 lean_s27
have lean_s29 : (Eq let238 let238) := by timed rfl
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq let237 let237) := by timed rfl
let lean_s32 := by timed congr lean_s12 lean_s31
have lean_s33 : let733 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let236 let305) := by timed congr lean_s34 lean_r54
have lean_s36 : (Eq let236 let304) := by timed Eq.trans lean_s35 lean_r56
let lean_s37 := by timed congr lean_s12 lean_s36
let lean_s38 := by timed congr lean_s12 lean_r23
have lean_s39 : let699 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [GE.ge]
have lean_s41 : (Eq fmt0 fmt0) := by timed rfl
have lean_s42 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s43 := by timed congrHAdd lean_s42 lean_r63
have lean_s44 : (Eq let311 let256) := by timed congrHAdd lean_s41 lean_s43
have lean_s45 : (Eq let311 let255) := by timed Eq.trans lean_s44 lean_r25
have lean_s46 : (Eq let254 let255) := by timed Eq.trans lean_r60 lean_s45
have lean_s47 : (Eq let232 let255) := by timed Eq.trans lean_r24 lean_s46
have lean_s48 : (Eq let380 let491) := by timed congr lean_s40 lean_s47
have lean_s49 : (Eq let380 let490) := by timed Eq.trans lean_s48 lean_r127
have lean_s50 : (Eq let381 let640) := by timed flipCongrArg lean_s49 [Not]
have lean_s51 : (Eq let233 let640) := by timed Eq.trans lean_r101 lean_s50
let lean_s52 := by timed congr lean_s12 lean_s51
let lean_s53 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s54 : (Eq let334 let262) := by timed congr lean_s53 lean_r76
have lean_s55 : (Eq let334 let260) := by timed Eq.trans lean_s54 lean_r26
have lean_s56 : (Eq let335 let520) := by timed flipCongrArg lean_s55 [Not]
have lean_s57 : (Eq let335 let259) := by timed Eq.trans lean_s56 lean_r153
have lean_s58 : (Eq let230 let259) := by timed Eq.trans lean_r72 lean_s57
let lean_s59 := by timed congr lean_s12 lean_s58
let lean_s60 := by timed congr lean_s12 lean_r27
have lean_s61 : let732 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq distance distance) := by timed rfl
let lean_s64 := by timed congrHAdd lean_s42 lean_r30
let lean_s65 := by timed congrHAdd lean_s63 lean_s64
have lean_s66 : (Eq let270 let274) := by timed congrHAdd lean_s33 lean_s65
have lean_s67 : (Eq let270 let273) := by timed Eq.trans lean_s66 lean_r31
have lean_s68 : (Eq let271 let273) := by timed Eq.trans lean_r29 lean_s67
have lean_s69 : (Eq let227 let273) := by timed Eq.trans lean_r124 lean_s68
have lean_s70 : (Eq let267 let278) := by timed congr lean_s62 lean_s69
have lean_s71 : (Eq let267 let277) := by timed Eq.trans lean_s70 lean_r32
have lean_s72 : (Eq let268 let639) := by timed flipCongrArg lean_s71 [Not]
have lean_s73 : (Eq let228 let639) := by timed Eq.trans lean_r28 lean_s72
let lean_s74 := by timed congr lean_s12 lean_s73
let lean_s75 := by timed flipCongrArg lean_s61 [Eq]
have lean_s76 : let569 := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [HMul.hMul]
let lean_s78 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s79 : (Eq let403 let595) := by timed congr lean_s78 lean_r93
have lean_s80 : (Eq let403 let9) := by timed Eq.trans lean_s79 lean_r219
have lean_s81 : (Eq let217 let9) := by timed Eq.trans lean_r112 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let257 let257) := by timed rfl
have lean_s84 : (Eq let363 let590) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let363 let589) := by timed Eq.trans lean_s84 lean_r215
have lean_s86 : (Eq let218 let589) := by timed Eq.trans lean_r90 lean_s85
have lean_s87 : (Eq let221 let635) := by timed flipCongrArg lean_s86 [sx5fcount]
have lean_s88 : (Eq let222 let636) := by timed congr lean_s77 lean_s87
let lean_s89 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s90 : (Eq let219 let633) := by timed flipCongrArg lean_s86 [xx5fcount]
have lean_s91 : (Eq let220 let634) := by timed congr lean_s89 lean_s90
let lean_s92 := by timed congrHAdd lean_s88 lean_s91
have lean_s93 : (Eq let279 let637) := by timed congrHAdd lean_s33 lean_s92
have lean_s94 : (Eq let223 let637) := by timed Eq.trans lean_r33 lean_s93
have lean_s95 : (Eq let224 let638) := by timed congr lean_s75 lean_s94
let lean_s96 := by timed congr lean_s12 lean_s95
have lean_s97 : let700 := by timed rfl
let lean_s98 := by timed congr lean_s97 lean_r230
let lean_s99 := by timed congr lean_s97 lean_r34
let lean_s100 := by timed congr lean_s97 lean_r35
let lean_s101 := by timed congr lean_s97 lean_r36
let lean_s102 := by timed congr lean_s97 lean_r37
let lean_s103 := by timed congr lean_s97 lean_r184
let lean_s104 := by timed congr lean_s97 lean_r159
have lean_s105 : let725 := by timed rfl
let lean_s106 := by timed congr lean_s97 lean_s105
let lean_s107 := by timed congr lean_s97 lean_r228
let lean_s108 := by timed congr lean_s97 lean_r50
let lean_s109 := by timed congr lean_s97 lean_r187
let lean_s110 := by timed congr lean_s97 lean_r39
let lean_s111 := by timed congr lean_s97 lean_r40
let lean_s112 := by timed congr lean_s97 lean_r41
let lean_s113 := by timed congr lean_s97 lean_r42
have lean_s114 : let724 := by timed rfl
let lean_s115 := by timed congr lean_s97 lean_s114
let lean_s116 := by timed congr lean_s97 lean_r120
let lean_s117 := by timed congr lean_s97 lean_r51
let lean_s118 := by timed congr lean_s97 lean_r183
let lean_s119 := by timed congr lean_s97 lean_r43
let lean_s120 := by timed congr lean_s97 lean_r44
let lean_s121 := by timed congr lean_s97 lean_r175
let lean_s122 := by timed congr lean_s97 lean_r45
have lean_s123 : let723 := by timed rfl
let lean_s124 := by timed congr lean_s97 lean_s123
let lean_s125 := by timed congr lean_s97 lean_r142
let lean_s126 := by timed congr lean_s97 lean_r57
let lean_s127 := by timed congr lean_s97 lean_r213
let lean_s128 := by timed congr lean_s97 lean_r177
let lean_s129 := by timed congr lean_s97 lean_r47
let lean_s130 := by timed congr lean_s97 lean_r211
let lean_s131 := by timed congr lean_s97 lean_r144
have lean_s132 : let722 := by timed rfl
let lean_s133 := by timed congr lean_s97 lean_s132
let lean_s134 := by timed congr lean_s97 lean_r86
let lean_s135 := by timed congr lean_s97 lean_r64
let lean_s136 := by timed congr lean_s97 lean_r80
let lean_s137 := by timed congr lean_s97 lean_r208
let lean_s138 := by timed congr lean_s97 lean_r48
let lean_s139 := by timed congr lean_s97 lean_r171
let lean_s140 := by timed congr lean_s97 lean_r49
have lean_s141 : let721 := by timed rfl
let lean_s142 := by timed congr lean_s140 lean_s141
let lean_s143 := by timed congr lean_s139 lean_s142
let lean_s144 := by timed congr lean_s138 lean_s143
let lean_s145 := by timed congr lean_s137 lean_s144
let lean_s146 := by timed congr lean_s136 lean_s145
let lean_s147 := by timed congr lean_s135 lean_s146
let lean_s148 := by timed congr lean_s134 lean_s147
let lean_s149 := by timed congr lean_s133 lean_s148
let lean_s150 := by timed congr lean_s131 lean_s149
let lean_s151 := by timed congr lean_s130 lean_s150
let lean_s152 := by timed congr lean_s129 lean_s151
let lean_s153 := by timed congr lean_s128 lean_s152
let lean_s154 := by timed congr lean_s127 lean_s153
let lean_s155 := by timed congr lean_s126 lean_s154
let lean_s156 := by timed congr lean_s125 lean_s155
let lean_s157 := by timed congr lean_s124 lean_s156
let lean_s158 := by timed congr lean_s122 lean_s157
let lean_s159 := by timed congr lean_s121 lean_s158
let lean_s160 := by timed congr lean_s120 lean_s159
let lean_s161 := by timed congr lean_s119 lean_s160
let lean_s162 := by timed congr lean_s118 lean_s161
let lean_s163 := by timed congr lean_s117 lean_s162
let lean_s164 := by timed congr lean_s116 lean_s163
let lean_s165 := by timed congr lean_s115 lean_s164
let lean_s166 := by timed congr lean_s113 lean_s165
let lean_s167 := by timed congr lean_s112 lean_s166
let lean_s168 := by timed congr lean_s111 lean_s167
let lean_s169 := by timed congr lean_s110 lean_s168
let lean_s170 := by timed congr lean_s109 lean_s169
let lean_s171 := by timed congr lean_s108 lean_s170
let lean_s172 := by timed congr lean_s107 lean_s171
let lean_s173 := by timed congr lean_s106 lean_s172
let lean_s174 := by timed congr lean_s104 lean_s173
let lean_s175 := by timed congr lean_s103 lean_s174
let lean_s176 := by timed congr lean_s102 lean_s175
let lean_s177 := by timed congr lean_s101 lean_s176
let lean_s178 := by timed congr lean_s100 lean_s177
let lean_s179 := by timed congr lean_s99 lean_s178
have lean_s180 : (Eq let392 let632) := by timed congr lean_s98 lean_s179
have lean_s181 : (Eq let216 let632) := by timed Eq.trans lean_r105 lean_s180
let lean_s182 := by timed congr lean_s12 lean_s181
let lean_s183 := by timed flipCongrArg lean_r230 [And]
have lean_s184 : (Eq let186 let630) := by timed congr lean_s183 lean_r50
have lean_s185 : let720 := by timed rfl
have lean_s186 : let719 := by timed rfl
have lean_s187 : (Eq let187 let631) := by timed congrIte lean_s184 lean_s185 lean_s186
let lean_s188 := by timed congr lean_s12 lean_s187
let lean_s189 := by timed flipCongrArg lean_r228 [And]
have lean_s190 : (Eq let183 let628) := by timed congr lean_s189 lean_r51
have lean_s191 : (Eq let21 let21) := by timed rfl
let lean_s192 := by timed flipCongrArg lean_s191 [Eq]
have lean_s193 : (Eq let181 let302) := by timed congr lean_s192 lean_r205
have lean_s194 : (Eq let181 let39) := by timed Eq.trans lean_s193 lean_r53
have lean_s195 : (Eq let184 let629) := by timed congrIte lean_s190 lean_s194 lean_r55
let lean_s196 := by timed congr lean_s12 lean_s195
let lean_s197 := by timed flipCongrArg lean_r120 [And]
have lean_s198 : (Eq let177 let626) := by timed congr lean_s197 lean_r57
have lean_s199 : (Eq let166 let166) := by timed rfl
let lean_s200 := by timed flipCongrArg lean_s199 [Eq]
have lean_s201 : (Eq let175 let383) := by timed congr lean_s200 lean_r59
have lean_s202 : (Eq let175 let382) := by timed Eq.trans lean_s201 lean_r102
have lean_s203 : (Eq let178 let627) := by timed congrIte lean_s198 lean_s202 lean_r61
let lean_s204 := by timed congr lean_s12 lean_s203
let lean_s205 := by timed flipCongrArg lean_r142 [And]
have lean_s206 : (Eq let171 let624) := by timed congr lean_s205 lean_r64
have lean_s207 : (Eq let158 let158) := by timed rfl
let lean_s208 := by timed flipCongrArg lean_s207 [Eq]
have lean_s209 : (Eq let169 let321) := by timed congr lean_s208 lean_r65
have lean_s210 : (Eq let169 let320) := by timed Eq.trans lean_s209 lean_r67
have lean_s211 : (Eq let172 let625) := by timed congrIte lean_s206 lean_s210 lean_r68
let lean_s212 := by timed congr lean_s12 lean_s211
let lean_s213 := by timed flipCongrArg lean_r86 [And]
have lean_s214 : (Eq let164 let622) := by timed congr lean_s213 lean_r69
have lean_s215 : (Eq let159 let159) := by timed rfl
let lean_s216 := by timed flipCongrArg lean_s215 [Eq]
have lean_s217 : (Eq let162 let567) := by timed congr lean_s216 lean_r231
have lean_s218 : (Eq let162 let453) := by timed Eq.trans lean_s217 lean_r195
have lean_s219 : (Eq let165 let623) := by timed congrIte lean_s214 lean_s218 lean_r190
let lean_s220 := by timed congr lean_s12 lean_s219
let lean_s221 := by timed flipCongrArg lean_r230 [And]
have lean_s222 : (Eq let156 let620) := by timed congr lean_s221 lean_r187
have lean_s223 : let710 := by timed rfl
have lean_s224 : let709 := by timed rfl
have lean_s225 : (Eq let157 let621) := by timed congrIte lean_s222 lean_s223 lean_s224
let lean_s226 := by timed congr lean_s12 lean_s225
let lean_s227 := by timed flipCongrArg lean_r228 [And]
have lean_s228 : (Eq let150 let618) := by timed congr lean_s227 lean_r183
have lean_s229 : (Eq let16 let16) := by timed rfl
let lean_s230 := by timed flipCongrArg lean_s229 [Eq]
have lean_s231 : (Eq let146 let524) := by timed congr lean_s230 lean_r226
have lean_s232 : (Eq let146 let330) := by timed Eq.trans lean_s231 lean_r156
have lean_s233 : (Eq let151 let619) := by timed congrIte lean_s228 lean_s232 lean_r225
let lean_s234 := by timed congr lean_s12 lean_s233
let lean_s235 := by timed flipCongrArg lean_r120 [And]
have lean_s236 : (Eq let142 let616) := by timed congr lean_s235 lean_r213
have lean_s237 : (Eq let127 let127) := by timed rfl
let lean_s238 := by timed flipCongrArg lean_s237 [Eq]
have lean_s239 : (Eq let138 let598) := by timed congr lean_s238 lean_r224
have lean_s240 : (Eq let138 let440) := by timed Eq.trans lean_s239 lean_r223
have lean_s241 : (Eq let143 let617) := by timed congrIte lean_s236 lean_s240 lean_r147
let lean_s242 := by timed congr lean_s12 lean_s241
let lean_s243 := by timed flipCongrArg lean_r142 [And]
have lean_s244 : (Eq let134 let614) := by timed congr lean_s243 lean_r80
have lean_s245 : (Eq let115 let115) := by timed rfl
let lean_s246 := by timed flipCongrArg lean_s245 [Eq]
have lean_s247 : (Eq let130 let351) := by timed congr lean_s246 lean_r222
have lean_s248 : (Eq let130 let349) := by timed Eq.trans lean_s247 lean_r82
have lean_s249 : (Eq let135 let615) := by timed congrIte lean_s244 lean_s248 lean_r168
let lean_s250 := by timed congr lean_s12 lean_s249
let lean_s251 := by timed flipCongrArg lean_r86 [And]
have lean_s252 : (Eq let125 let612) := by timed congr lean_s251 lean_r89
have lean_s253 : (Eq let116 let116) := by timed rfl
let lean_s254 := by timed flipCongrArg lean_s253 [Eq]
have lean_s255 : (Eq let119 let402) := by timed congr lean_s254 lean_r221
have lean_s256 : (Eq let119 let400) := by timed Eq.trans lean_s255 lean_r111
have lean_s257 : (Eq let126 let613) := by timed congrIte lean_s252 lean_s256 lean_r217
let lean_s258 := by timed congr lean_s12 lean_s257
have lean_s259 : let700 := by timed rfl
let lean_s260 := by timed flipCongrArg lean_s39 [Eq]
have lean_s261 : (Eq let113 let610) := by timed congr lean_s260 lean_r214
let lean_s262 := by timed congr lean_s259 lean_s261
let lean_s263 := by timed flipCongrArg lean_s39 [Eq]
have lean_s264 : (Eq let112 let609) := by timed congr lean_s263 lean_r76
let lean_s265 := by timed congr lean_s259 lean_s264
let lean_s266 := by timed flipCongrArg lean_s39 [Eq]
have lean_s267 : (Eq let111 let608) := by timed congr lean_s266 lean_r96
let lean_s268 := by timed congr lean_s259 lean_s267
let lean_s269 := by timed flipCongrArg lean_s39 [Eq]
have lean_s270 : (Eq let109 let607) := by timed congr lean_s269 lean_r202
let lean_s271 := by timed congr lean_s259 lean_s270
let lean_s272 := by timed flipCongrArg lean_s39 [Eq]
have lean_s273 : (Eq let107 let606) := by timed congr lean_s272 lean_r106
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s268 lean_s274
let lean_s276 := by timed congr lean_s265 lean_s275
have lean_s277 : (Eq let530 let611) := by timed congr lean_s262 lean_s276
have lean_s278 : (Eq let114 let611) := by timed Eq.trans lean_r164 lean_s277
let lean_s279 := by timed congr lean_s12 lean_s278
let lean_s280 := by timed flipCongrArg lean_s61 [Eq]
have lean_s281 : (Eq let104 let553) := by timed congr lean_s280 lean_r214
have lean_s282 : (Eq let104 let552) := by timed Eq.trans lean_s281 lean_r181
let lean_s283 := by timed flipCongrArg lean_s282 [Or]
let lean_s284 := by timed flipCongrArg lean_s61 [Eq]
have lean_s285 : (Eq let102 let549) := by timed congr lean_s284 lean_r76
have lean_s286 : (Eq let102 let548) := by timed Eq.trans lean_s285 lean_r178
have lean_s287 : (Eq let105 let605) := by timed congr lean_s283 lean_s286
let lean_s288 := by timed congr lean_s12 lean_s287
have lean_s289 : let698 := by timed rfl
let lean_s290 := by timed congr lean_s289 lean_r145
have lean_s291 : (Eq let95 let410) := by timed flipCongrArg lean_r210 [selectx5fformat]
let lean_s292 := by timed flipCongrArg lean_s291 [Eq]
have lean_s293 : (Eq s s) := by timed rfl
have lean_s294 : (Eq let96 let540) := by timed congr lean_s292 lean_s293
have lean_s295 : (Eq let96 let539) := by timed Eq.trans lean_s294 lean_r173
let lean_s296 := by timed congr lean_s289 lean_s295
let lean_s297 := by timed congr lean_s289 lean_r169
have lean_s298 : (Eq let90 let581) := by timed flipCongrArg lean_r207 [selectx5fformat]
let lean_s299 := by timed flipCongrArg lean_s298 [Eq]
have lean_s300 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s301 : (Eq let91 let583) := by timed congr lean_s299 lean_s300
have lean_s302 : (Eq let91 let582) := by timed Eq.trans lean_s301 lean_r206
let lean_s303 := by timed congr lean_s289 lean_s302
have lean_s304 : (Eq let87 let533) := by timed flipCongrArg lean_r165 [selectx5fformat]
let lean_s305 := by timed flipCongrArg lean_s304 [Eq]
have lean_s306 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s307 : (Eq let88 let535) := by timed congr lean_s305 lean_s306
have lean_s308 : (Eq let88 let534) := by timed Eq.trans lean_s307 lean_r167
let lean_s309 := by timed congr lean_s289 lean_s308
have lean_s310 : (Eq let84 let504) := by timed flipCongrArg lean_r203 [selectx5fformat]
let lean_s311 := by timed flipCongrArg lean_s310 [Eq]
have lean_s312 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s313 : (Eq let85 let506) := by timed congr lean_s311 lean_s312
have lean_s314 : (Eq let85 let505) := by timed Eq.trans lean_s313 lean_r137
let lean_s315 := by timed congr lean_s309 lean_s314
let lean_s316 := by timed congr lean_s303 lean_s315
let lean_s317 := by timed congr lean_s297 lean_s316
let lean_s318 := by timed congr lean_s296 lean_s317
have lean_s319 : (Eq let587 let603) := by timed congr lean_s290 lean_s318
have lean_s320 : (Eq let99 let603) := by timed Eq.trans lean_r212 lean_s319
have lean_s321 : (Eq let100 let604) := by timed flipCongrArg lean_s320 [Not]
let lean_s322 := by timed congr lean_s288 lean_s321
let lean_s323 := by timed congr lean_s279 lean_s322
let lean_s324 := by timed congr lean_s258 lean_s323
let lean_s325 := by timed congr lean_s250 lean_s324
let lean_s326 := by timed congr lean_s242 lean_s325
let lean_s327 := by timed congr lean_s234 lean_s326
let lean_s328 := by timed congr lean_s226 lean_s327
let lean_s329 := by timed congr lean_s220 lean_s328
let lean_s330 := by timed congr lean_s212 lean_s329
let lean_s331 := by timed congr lean_s204 lean_s330
let lean_s332 := by timed congr lean_s196 lean_s331
let lean_s333 := by timed congr lean_s188 lean_s332
let lean_s334 := by timed congr lean_s182 lean_s333
let lean_s335 := by timed congr lean_s96 lean_s334
let lean_s336 := by timed congr lean_s74 lean_s335
let lean_s337 := by timed congr lean_s60 lean_s336
let lean_s338 := by timed congr lean_s59 lean_s337
let lean_s339 := by timed congr lean_s52 lean_s338
let lean_s340 := by timed congr lean_s38 lean_s339
let lean_s341 := by timed congr lean_s37 lean_s340
let lean_s342 := by timed congr lean_s32 lean_s341
let lean_s343 := by timed congr lean_s30 lean_s342
let lean_s344 := by timed congr lean_s28 lean_s343
let lean_s345 := by timed congr lean_s26 lean_s344
let lean_s346 := by timed congr lean_s24 lean_s345
let lean_s347 := by timed congr lean_s22 lean_s346
let lean_s348 := by timed congr lean_s20 lean_s347
let lean_s349 := by timed congr lean_s18 lean_s348
let lean_s350 := by timed congr lean_s16 lean_s349
have lean_s351 : (Eq let247 let641) := by timed congr lean_s14 lean_s350
have lean_s352 : (Eq let248 let641) := by timed Eq.trans lean_r22 lean_s351
have lean_s353 : let698 := by timed rfl
have lean_s354 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s355 : let638 := by andElim lean_s354, 16
have lean_s356 : let732 := by timed rfl
let lean_s357 := by timed flipCongrArg lean_s356 [Eq]
have lean_s358 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s359 : let304 := by andElim lean_s358, 10
have lean_s360 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s361 : let237 := by andElim lean_s360, 9
have lean_s362 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s363 : let238 := by andElim lean_s362, 8
have lean_s364 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s365 : let239 := by andElim lean_s364, 7
have lean_s366 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s367 : let240 := by andElim lean_s366, 6
have lean_s368 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s369 : let241 := by andElim lean_s368, 5
have lean_s370 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s371 : let242 := by andElim lean_s370, 4
have lean_s372 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s373 : let243 := by andElim lean_s372, 3
have lean_s374 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s375 : let244 := by andElim lean_s374, 2
have lean_s376 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s377 : let245 := by andElim lean_s376, 1
have lean_s378 : let641 := by timed eqResolve lean_a232 lean_s352
have lean_s379 : let246 := by andElim lean_s378, 0
let lean_s380 := by timed And.intro lean_s377 lean_s379
let lean_s381 := by timed And.intro lean_s375 lean_s380
let lean_s382 := by timed And.intro lean_s373 lean_s381
let lean_s383 := by timed And.intro lean_s371 lean_s382
let lean_s384 := by timed And.intro lean_s369 lean_s383
let lean_s385 := by timed And.intro lean_s367 lean_s384
let lean_s386 := by timed And.intro lean_s365 lean_s385
let lean_s387 := by timed And.intro lean_s363 lean_s386
have lean_s388 : let730 := by timed And.intro lean_s361 lean_s387
have lean_s389 : let237 := by andElim lean_s388, 0
let lean_s390 := by timed flipCongrArg lean_s389 [Eq]
have lean_s391 : let733 := by timed rfl
let lean_s392 := by timed flipCongrArg lean_s391 [HAdd.hAdd]
have lean_s393 : let246 := by andElim lean_s388, 9
have lean_s394 : (Eq let225 let79) := by timed congr lean_s392 lean_s393
have lean_s395 : (Eq let304 let734) := by timed congr lean_s390 lean_s394
have lean_s396 : let558 := by timed rfl
let lean_s397 := by timed flipCongrArg lean_s396 [Eq]
have lean_s398 : (Eq let734 let82) := by timed congr lean_s397 lean_r20
have lean_s399 : (Eq let734 let81) := by timed Eq.trans lean_s398 lean_r21
have lean_s400 : (Eq let304 let81) := by timed Eq.trans lean_s395 lean_s399
have lean_s401 : let81 := by timed eqResolve lean_s359 lean_s400
let lean_s402 := by timed And.intro lean_s377 lean_s379
let lean_s403 := by timed And.intro lean_s375 lean_s402
let lean_s404 := by timed And.intro lean_s373 lean_s403
let lean_s405 := by timed And.intro lean_s371 lean_s404
let lean_s406 := by timed And.intro lean_s369 lean_s405
let lean_s407 := by timed And.intro lean_s367 lean_s406
let lean_s408 := by timed And.intro lean_s365 lean_s407
let lean_s409 := by timed And.intro lean_s363 lean_s408
let lean_s410 := by timed And.intro lean_s361 lean_s409
have lean_s411 : let731 := by timed And.intro lean_s401 lean_s410
have lean_s412 : let81 := by andElim lean_s411, 0
have lean_s413 : let569 := by timed rfl
let lean_s414 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s415 : let726 := by timed rfl
have lean_s416 : let699 := by timed rfl
have lean_s417 : let728 := by timed rfl
let lean_s418 := by timed flipCongrArg lean_s417 [HMul.hMul]
have lean_s419 : let237 := by andElim lean_s411, 1
have lean_s420 : let740 := by timed congr lean_s418 lean_s419
let lean_s421 := by timed congrHAdd lean_s416 lean_s420
have lean_s422 : let739 := by timed congrHAdd lean_s415 lean_s421
have lean_s423 : let742 := by timed flipCongrArg lean_s422 [sx5fcount]
have lean_s424 : let741 := by timed congr lean_s414 lean_s423
let lean_s425 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s426 : let738 := by timed flipCongrArg lean_s422 [xx5fcount]
have lean_s427 : let737 := by timed congr lean_s425 lean_s426
let lean_s428 := by timed congrHAdd lean_s424 lean_s427
have lean_s429 : let736 := by timed congrHAdd lean_s412 lean_s428
have lean_s430 : (Eq let638 let735) := by timed congr lean_s357 lean_s429
let lean_s431 := by timed flipCongrArg lean_s61 [Eq]
have lean_s432 : (Eq let80 let80) := by timed rfl
let lean_s433 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s434 : let726 := by timed rfl
let lean_s435 := by timed congrHAdd lean_s39 lean_r75
have lean_s436 : (Eq let679 let487) := by timed congrHAdd lean_s434 lean_s435
have lean_s437 : (Eq let679 let9) := by timed Eq.trans lean_s436 lean_r125
have lean_s438 : (Eq let682 let11) := by timed flipCongrArg lean_s437 [sx5fcount]
have lean_s439 : (Eq let683 let326) := by timed congr lean_s433 lean_s438
let lean_s440 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s441 : (Eq let680 let10) := by timed flipCongrArg lean_s437 [xx5fcount]
have lean_s442 : (Eq let681 let325) := by timed congr lean_s440 lean_s441
let lean_s443 := by timed congrHAdd lean_s439 lean_s442
have lean_s444 : (Eq let684 let336) := by timed congrHAdd lean_s432 lean_s443
have lean_s445 : (Eq let735 let729) := by timed congr lean_s431 lean_s444
have lean_s446 : (Eq let638 let729) := by timed Eq.trans lean_s430 lean_s445
have lean_s447 : let729 := by timed eqResolve lean_s355 lean_s446
let lean_s448 := by timed And.intro lean_s377 lean_s379
let lean_s449 := by timed And.intro lean_s375 lean_s448
let lean_s450 := by timed And.intro lean_s373 lean_s449
let lean_s451 := by timed And.intro lean_s371 lean_s450
let lean_s452 := by timed And.intro lean_s369 lean_s451
let lean_s453 := by timed And.intro lean_s367 lean_s452
let lean_s454 := by timed And.intro lean_s365 lean_s453
let lean_s455 := by timed And.intro lean_s363 lean_s454
let lean_s456 := by timed And.intro lean_s361 lean_s455
let lean_s457 := by timed And.intro lean_s401 lean_s456
have lean_s458 : (And let729 let731) := by timed And.intro lean_s447 lean_s457
have lean_s459 : let246 := by andElim lean_s458, 11
let lean_s460 := by timed flipCongrArg lean_s459 [Eq]
have lean_s461 : let529 := by timed rfl
have lean_s462 : (Eq let246 let529) := by timed congr lean_s460 lean_s461
let lean_s463 := by timed congr lean_s353 lean_s462
have lean_s464 : let245 := by andElim lean_s458, 10
let lean_s465 := by timed flipCongrArg lean_s464 [Eq]
have lean_s466 : let570 := by timed rfl
have lean_s467 : (Eq let245 let570) := by timed congr lean_s465 lean_s466
let lean_s468 := by timed congr lean_s353 lean_s467
have lean_s469 : let244 := by andElim lean_s458, 9
let lean_s470 := by timed flipCongrArg lean_s469 [Eq]
have lean_s471 : let568 := by timed rfl
have lean_s472 : (Eq let244 let568) := by timed congr lean_s470 lean_s471
let lean_s473 := by timed congr lean_s353 lean_s472
have lean_s474 : let243 := by andElim lean_s458, 8
let lean_s475 := by timed flipCongrArg lean_s474 [Eq]
have lean_s476 : let569 := by timed rfl
have lean_s477 : (Eq let243 let569) := by timed congr lean_s475 lean_s476
let lean_s478 := by timed congr lean_s353 lean_s477
have lean_s479 : let242 := by andElim lean_s458, 7
let lean_s480 := by timed flipCongrArg lean_s479 [Eq]
have lean_s481 : let577 := by timed rfl
have lean_s482 : (Eq let242 let577) := by timed congr lean_s480 lean_s481
let lean_s483 := by timed congr lean_s353 lean_s482
have lean_s484 : let241 := by andElim lean_s458, 6
let lean_s485 := by timed flipCongrArg lean_s484 [Eq]
have lean_s486 : (Eq let241 let568) := by timed congr lean_s485 lean_s471
let lean_s487 := by timed congr lean_s353 lean_s486
have lean_s488 : let240 := by andElim lean_s458, 5
let lean_s489 := by timed flipCongrArg lean_s488 [Eq]
have lean_s490 : let564 := by timed rfl
have lean_s491 : (Eq let240 let564) := by timed congr lean_s489 lean_s490
let lean_s492 := by timed congr lean_s353 lean_s491
have lean_s493 : let239 := by andElim lean_s458, 4
let lean_s494 := by timed flipCongrArg lean_s493 [Eq]
have lean_s495 : let563 := by timed rfl
have lean_s496 : (Eq let239 let563) := by timed congr lean_s494 lean_s495
let lean_s497 := by timed congr lean_s353 lean_s496
have lean_s498 : let238 := by andElim lean_s458, 3
let lean_s499 := by timed flipCongrArg lean_s498 [Eq]
have lean_s500 : let561 := by timed rfl
have lean_s501 : (Eq let238 let561) := by timed congr lean_s499 lean_s500
let lean_s502 := by timed congr lean_s353 lean_s501
have lean_s503 : let237 := by andElim lean_s458, 2
let lean_s504 := by timed flipCongrArg lean_s503 [Eq]
have lean_s505 : let558 := by timed rfl
have lean_s506 : (Eq let237 let558) := by timed congr lean_s504 lean_s505
let lean_s507 := by timed congr lean_s353 lean_s506
let lean_s508 := by timed flipCongrArg lean_s503 [Eq]
have lean_s509 : let81 := by andElim lean_s458, 1
let lean_s510 := by timed flipCongrArg lean_s509 [HAdd.hAdd]
have lean_s511 : (Eq let225 let396) := by timed congr lean_s510 lean_s459
have lean_s512 : (Eq let304 let696) := by timed congr lean_s508 lean_s511
let lean_s513 := by timed congr lean_s353 lean_s512
let lean_s514 := by timed flipCongrArg lean_s503 [HAdd.hAdd]
have lean_s515 : let728 := by timed rfl
let lean_s516 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s517 : let729 := by andElim lean_s458, 0
have lean_s518 : (Eq let249 let339) := by timed congr lean_s516 lean_s517
have lean_s519 : (Eq let250 let693) := by timed congr lean_s514 lean_s518
let lean_s520 := by timed flipCongrArg lean_s519 [GE.ge]
have lean_s521 : (Eq let251 let694) := by timed congr lean_s520 lean_s471
have lean_s522 : (Eq let252 let695) := by timed flipCongrArg lean_s521 [Not]
let lean_s523 := by timed congr lean_s353 lean_s522
have lean_s524 : let699 := by timed rfl
let lean_s525 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s526 : let740 := by timed congr lean_s525 lean_s503
let lean_s527 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s528 : (Eq let275 let385) := by timed congr lean_s527 lean_s464
let lean_s529 := by timed congrHAdd lean_s526 lean_s528
have lean_s530 : (Eq let489 let690) := by timed congrHAdd lean_s524 lean_s529
let lean_s531 := by timed flipCongrArg lean_s530 [GE.ge]
have lean_s532 : (Eq let490 let691) := by timed congr lean_s531 lean_s515
have lean_s533 : (Eq let640 let692) := by timed flipCongrArg lean_s532 [Not]
let lean_s534 := by timed congr lean_s353 lean_s533
let lean_s535 := by timed flipCongrArg lean_s524 [HAdd.hAdd]
have lean_s536 : (Eq let258 let678) := by timed congr lean_s535 lean_s526
let lean_s537 := by timed flipCongrArg lean_s536 [GE.ge]
have lean_s538 : (Eq let259 let689) := by timed congr lean_s537 lean_s481
let lean_s539 := by timed congr lean_s353 lean_s538
let lean_s540 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s541 : (Eq let264 let386) := by timed congr lean_s540 lean_s509
let lean_s542 := by timed flipCongrArg lean_s515 [HMul.hMul]
have lean_s543 : (Eq let263 let384) := by timed congr lean_s542 lean_s459
let lean_s544 := by timed congrHAdd lean_s541 lean_s543
have lean_s545 : (Eq let265 let501) := by timed congrHAdd lean_s517 lean_s544
let lean_s546 := by timed flipCongrArg lean_s545 [GE.ge]
have lean_s547 : (Eq let266 let688) := by timed congr lean_s546 lean_s505
let lean_s548 := by timed congr lean_s353 lean_s547
let lean_s549 := by timed congrHAdd lean_s528 lean_s543
let lean_s550 := by timed congrHAdd lean_s541 lean_s549
have lean_s551 : (Eq let276 let389) := by timed congrHAdd lean_s517 lean_s550
let lean_s552 := by timed flipCongrArg lean_s551 [GE.ge]
have lean_s553 : let727 := by timed rfl
have lean_s554 : (Eq let277 let686) := by timed congr lean_s552 lean_s553
have lean_s555 : (Eq let639 let687) := by timed flipCongrArg lean_s554 [Not]
let lean_s556 := by timed congr lean_s353 lean_s555
let lean_s557 := by timed flipCongrArg lean_s517 [Eq]
let lean_s558 := by timed flipCongrArg lean_s476 [HMul.hMul]
have lean_s559 : let726 := by timed rfl
let lean_s560 := by timed congrHAdd lean_s524 lean_s526
have lean_s561 : let739 := by timed congrHAdd lean_s559 lean_s560
have lean_s562 : let742 := by timed flipCongrArg lean_s561 [sx5fcount]
have lean_s563 : let741 := by timed congr lean_s558 lean_s562
let lean_s564 := by timed flipCongrArg lean_s476 [HMul.hMul]
have lean_s565 : let738 := by timed flipCongrArg lean_s561 [xx5fcount]
have lean_s566 : let737 := by timed congr lean_s564 lean_s565
let lean_s567 := by timed congrHAdd lean_s563 lean_s566
have lean_s568 : let736 := by timed congrHAdd lean_s509 lean_s567
have lean_s569 : (Eq let638 let685) := by timed congr lean_s557 lean_s568
let lean_s570 := by timed congr lean_s353 lean_s569
have lean_s571 : let700 := by timed rfl
let lean_s572 := by timed flipCongrArg lean_s488 [Eq]
have lean_s573 : (Eq let154 let154) := by timed rfl
have lean_s574 : (Eq let602 let511) := by timed congr lean_s572 lean_s573
let lean_s575 := by timed congr lean_s571 lean_s574
let lean_s576 := by timed flipCongrArg lean_s493 [Eq]
have lean_s577 : (Eq let280 let343) := by timed congr lean_s576 lean_s573
let lean_s578 := by timed congr lean_s571 lean_s577
let lean_s579 := by timed flipCongrArg lean_s498 [Eq]
have lean_s580 : (Eq let281 let345) := by timed congr lean_s579 lean_s573
let lean_s581 := by timed congr lean_s571 lean_s580
let lean_s582 := by timed flipCongrArg lean_s469 [Eq]
have lean_s583 : (Eq let282 let353) := by timed congr lean_s582 lean_s573
let lean_s584 := by timed congr lean_s571 lean_s583
let lean_s585 := by timed flipCongrArg lean_s474 [Eq]
have lean_s586 : (Eq let283 let509) := by timed congr lean_s585 lean_s573
let lean_s587 := by timed congr lean_s571 lean_s586
let lean_s588 := by timed flipCongrArg lean_s479 [Eq]
have lean_s589 : (Eq let556 let348) := by timed congr lean_s588 lean_s573
let lean_s590 := by timed congr lean_s571 lean_s589
let lean_s591 := by timed flipCongrArg lean_s484 [Eq]
have lean_s592 : (Eq let527 let353) := by timed congr lean_s591 lean_s573
let lean_s593 := by timed congr lean_s571 lean_s592
have lean_s594 : let725 := by timed rfl
let lean_s595 := by timed congr lean_s571 lean_s594
let lean_s596 := by timed flipCongrArg lean_s488 [Eq]
have lean_s597 : (Eq let148 let148) := by timed rfl
have lean_s598 : (Eq let600 let562) := by timed congr lean_s596 lean_s597
let lean_s599 := by timed congr lean_s571 lean_s598
let lean_s600 := by timed flipCongrArg lean_s493 [Eq]
have lean_s601 : (Eq let298 let367) := by timed congr lean_s600 lean_s597
let lean_s602 := by timed congr lean_s571 lean_s601
let lean_s603 := by timed flipCongrArg lean_s498 [Eq]
have lean_s604 : (Eq let559 let395) := by timed congr lean_s603 lean_s597
let lean_s605 := by timed congr lean_s571 lean_s604
let lean_s606 := by timed flipCongrArg lean_s469 [Eq]
have lean_s607 : (Eq let285 let361) := by timed congr lean_s606 lean_s597
let lean_s608 := by timed congr lean_s571 lean_s607
let lean_s609 := by timed flipCongrArg lean_s474 [Eq]
have lean_s610 : (Eq let286 let517) := by timed congr lean_s609 lean_s597
let lean_s611 := by timed congr lean_s571 lean_s610
let lean_s612 := by timed flipCongrArg lean_s479 [Eq]
have lean_s613 : (Eq let287 let358) := by timed congr lean_s612 lean_s597
let lean_s614 := by timed congr lean_s571 lean_s613
let lean_s615 := by timed flipCongrArg lean_s484 [Eq]
have lean_s616 : (Eq let288 let361) := by timed congr lean_s615 lean_s597
let lean_s617 := by timed congr lean_s571 lean_s616
have lean_s618 : let724 := by timed rfl
let lean_s619 := by timed congr lean_s571 lean_s618
let lean_s620 := by timed flipCongrArg lean_s488 [Eq]
have lean_s621 : (Eq let140 let140) := by timed rfl
have lean_s622 : (Eq let480 let557) := by timed congr lean_s620 lean_s621
let lean_s623 := by timed congr lean_s571 lean_s622
let lean_s624 := by timed flipCongrArg lean_s493 [Eq]
have lean_s625 : (Eq let299 let379) := by timed congr lean_s624 lean_s621
let lean_s626 := by timed congr lean_s571 lean_s625
let lean_s627 := by timed flipCongrArg lean_s498 [Eq]
have lean_s628 : (Eq let555 let560) := by timed congr lean_s627 lean_s621
let lean_s629 := by timed congr lean_s571 lean_s628
let lean_s630 := by timed flipCongrArg lean_s469 [Eq]
have lean_s631 : (Eq let289 let370) := by timed congr lean_s630 lean_s621
let lean_s632 := by timed congr lean_s571 lean_s631
let lean_s633 := by timed flipCongrArg lean_s474 [Eq]
have lean_s634 : (Eq let290 let365) := by timed congr lean_s633 lean_s621
let lean_s635 := by timed congr lean_s571 lean_s634
let lean_s636 := by timed flipCongrArg lean_s479 [Eq]
have lean_s637 : (Eq let543 let405) := by timed congr lean_s636 lean_s621
let lean_s638 := by timed congr lean_s571 lean_s637
let lean_s639 := by timed flipCongrArg lean_s484 [Eq]
have lean_s640 : (Eq let291 let370) := by timed congr lean_s639 lean_s621
let lean_s641 := by timed congr lean_s571 lean_s640
have lean_s642 : let723 := by timed rfl
let lean_s643 := by timed congr lean_s571 lean_s642
let lean_s644 := by timed flipCongrArg lean_s488 [Eq]
have lean_s645 : (Eq let132 let132) := by timed rfl
have lean_s646 : (Eq let510 let516) := by timed congr lean_s644 lean_s645
let lean_s647 := by timed congr lean_s571 lean_s646
let lean_s648 := by timed flipCongrArg lean_s493 [Eq]
have lean_s649 : (Eq let306 let398) := by timed congr lean_s648 lean_s645
let lean_s650 := by timed congr lean_s571 lean_s649
let lean_s651 := by timed flipCongrArg lean_s498 [Eq]
have lean_s652 : (Eq let588 let528) := by timed congr lean_s651 lean_s645
let lean_s653 := by timed congr lean_s571 lean_s652
let lean_s654 := by timed flipCongrArg lean_s469 [Eq]
have lean_s655 : (Eq let546 let479) := by timed congr lean_s654 lean_s645
let lean_s656 := by timed congr lean_s571 lean_s655
let lean_s657 := by timed flipCongrArg lean_s474 [Eq]
have lean_s658 : (Eq let295 let596) := by timed congr lean_s657 lean_s645
let lean_s659 := by timed congr lean_s571 lean_s658
let lean_s660 := by timed flipCongrArg lean_s479 [Eq]
have lean_s661 : (Eq let586 let372) := by timed congr lean_s660 lean_s645
let lean_s662 := by timed congr lean_s571 lean_s661
let lean_s663 := by timed flipCongrArg lean_s484 [Eq]
have lean_s664 : (Eq let512 let479) := by timed congr lean_s663 lean_s645
let lean_s665 := by timed congr lean_s571 lean_s664
have lean_s666 : let722 := by timed rfl
let lean_s667 := by timed congr lean_s571 lean_s666
let lean_s668 := by timed flipCongrArg lean_s488 [Eq]
have lean_s669 : (Eq let123 let123) := by timed rfl
have lean_s670 : (Eq let359 let551) := by timed congr lean_s668 lean_s669
let lean_s671 := by timed congr lean_s571 lean_s670
let lean_s672 := by timed flipCongrArg lean_s493 [Eq]
have lean_s673 : (Eq let317 let502) := by timed congr lean_s672 lean_s669
let lean_s674 := by timed congr lean_s571 lean_s673
let lean_s675 := by timed flipCongrArg lean_s498 [Eq]
have lean_s676 : (Eq let346 let526) := by timed congr lean_s675 lean_s669
let lean_s677 := by timed congr lean_s571 lean_s676
let lean_s678 := by timed flipCongrArg lean_s469 [Eq]
have lean_s679 : (Eq let584 let375) := by timed congr lean_s678 lean_s669
let lean_s680 := by timed congr lean_s571 lean_s679
let lean_s681 := by timed flipCongrArg lean_s474 [Eq]
have lean_s682 : (Eq let296 let591) := by timed congr lean_s681 lean_s669
let lean_s683 := by timed congr lean_s571 lean_s682
let lean_s684 := by timed flipCongrArg lean_s479 [Eq]
have lean_s685 : (Eq let537 let498) := by timed congr lean_s684 lean_s669
let lean_s686 := by timed congr lean_s571 lean_s685
let lean_s687 := by timed flipCongrArg lean_s484 [Eq]
have lean_s688 : (Eq let297 let375) := by timed congr lean_s687 lean_s669
let lean_s689 := by timed congr lean_s571 lean_s688
have lean_s690 : let721 := by timed rfl
let lean_s691 := by timed congr lean_s689 lean_s690
let lean_s692 := by timed congr lean_s686 lean_s691
let lean_s693 := by timed congr lean_s683 lean_s692
let lean_s694 := by timed congr lean_s680 lean_s693
let lean_s695 := by timed congr lean_s677 lean_s694
let lean_s696 := by timed congr lean_s674 lean_s695
let lean_s697 := by timed congr lean_s671 lean_s696
let lean_s698 := by timed congr lean_s667 lean_s697
let lean_s699 := by timed congr lean_s665 lean_s698
let lean_s700 := by timed congr lean_s662 lean_s699
let lean_s701 := by timed congr lean_s659 lean_s700
let lean_s702 := by timed congr lean_s656 lean_s701
let lean_s703 := by timed congr lean_s653 lean_s702
let lean_s704 := by timed congr lean_s650 lean_s703
let lean_s705 := by timed congr lean_s647 lean_s704
let lean_s706 := by timed congr lean_s643 lean_s705
let lean_s707 := by timed congr lean_s641 lean_s706
let lean_s708 := by timed congr lean_s638 lean_s707
let lean_s709 := by timed congr lean_s635 lean_s708
let lean_s710 := by timed congr lean_s632 lean_s709
let lean_s711 := by timed congr lean_s629 lean_s710
let lean_s712 := by timed congr lean_s626 lean_s711
let lean_s713 := by timed congr lean_s623 lean_s712
let lean_s714 := by timed congr lean_s619 lean_s713
let lean_s715 := by timed congr lean_s617 lean_s714
let lean_s716 := by timed congr lean_s614 lean_s715
let lean_s717 := by timed congr lean_s611 lean_s716
let lean_s718 := by timed congr lean_s608 lean_s717
let lean_s719 := by timed congr lean_s605 lean_s718
let lean_s720 := by timed congr lean_s602 lean_s719
let lean_s721 := by timed congr lean_s599 lean_s720
let lean_s722 := by timed congr lean_s595 lean_s721
let lean_s723 := by timed congr lean_s593 lean_s722
let lean_s724 := by timed congr lean_s590 lean_s723
let lean_s725 := by timed congr lean_s587 lean_s724
let lean_s726 := by timed congr lean_s584 lean_s725
let lean_s727 := by timed congr lean_s581 lean_s726
let lean_s728 := by timed congr lean_s578 lean_s727
have lean_s729 : (Eq let632 let677) := by timed congr lean_s575 lean_s728
let lean_s730 := by timed congr lean_s353 lean_s729
let lean_s731 := by timed flipCongrArg lean_s574 [And]
have lean_s732 : (Eq let630 let675) := by timed congr lean_s731 lean_s601
have lean_s733 : let720 := by timed rfl
have lean_s734 : let719 := by timed rfl
have lean_s735 : (Eq let631 let676) := by timed congrIte lean_s732 lean_s733 lean_s734
let lean_s736 := by timed congr lean_s353 lean_s735
let lean_s737 := by timed flipCongrArg lean_s598 [And]
have lean_s738 : (Eq let628 let673) := by timed congr lean_s737 lean_s625
have lean_s739 : let718 := by timed rfl
have lean_s740 : let717 := by timed rfl
have lean_s741 : (Eq let629 let674) := by timed congrIte lean_s738 lean_s739 lean_s740
let lean_s742 := by timed congr lean_s353 lean_s741
let lean_s743 := by timed flipCongrArg lean_s622 [And]
have lean_s744 : (Eq let626 let671) := by timed congr lean_s743 lean_s649
have lean_s745 : let716 := by timed rfl
have lean_s746 : let715 := by timed rfl
have lean_s747 : (Eq let627 let672) := by timed congrIte lean_s744 lean_s745 lean_s746
let lean_s748 := by timed congr lean_s353 lean_s747
let lean_s749 := by timed flipCongrArg lean_s646 [And]
have lean_s750 : (Eq let624 let669) := by timed congr lean_s749 lean_s673
have lean_s751 : let714 := by timed rfl
have lean_s752 : let713 := by timed rfl
have lean_s753 : (Eq let625 let670) := by timed congrIte lean_s750 lean_s751 lean_s752
let lean_s754 := by timed congr lean_s353 lean_s753
let lean_s755 := by timed flipCongrArg lean_s670 [And]
let lean_s756 := by timed flipCongrArg lean_s493 [Eq]
have lean_s757 : (Eq let121 let121) := by timed rfl
have lean_s758 : (Eq let323 let391) := by timed congr lean_s756 lean_s757
have lean_s759 : (Eq let622 let667) := by timed congr lean_s755 lean_s758
have lean_s760 : let712 := by timed rfl
have lean_s761 : let711 := by timed rfl
have lean_s762 : (Eq let623 let668) := by timed congrIte lean_s759 lean_s760 lean_s761
let lean_s763 := by timed congr lean_s353 lean_s762
let lean_s764 := by timed flipCongrArg lean_s574 [And]
have lean_s765 : (Eq let620 let665) := by timed congr lean_s764 lean_s604
have lean_s766 : let710 := by timed rfl
have lean_s767 : let709 := by timed rfl
have lean_s768 : (Eq let621 let666) := by timed congrIte lean_s765 lean_s766 lean_s767
let lean_s769 := by timed congr lean_s353 lean_s768
let lean_s770 := by timed flipCongrArg lean_s598 [And]
have lean_s771 : (Eq let618 let663) := by timed congr lean_s770 lean_s628
have lean_s772 : let708 := by timed rfl
have lean_s773 : let707 := by timed rfl
have lean_s774 : (Eq let619 let664) := by timed congrIte lean_s771 lean_s772 lean_s773
let lean_s775 := by timed congr lean_s353 lean_s774
let lean_s776 := by timed flipCongrArg lean_s622 [And]
have lean_s777 : (Eq let616 let661) := by timed congr lean_s776 lean_s652
have lean_s778 : let706 := by timed rfl
have lean_s779 : let705 := by timed rfl
have lean_s780 : (Eq let617 let662) := by timed congrIte lean_s777 lean_s778 lean_s779
let lean_s781 := by timed congr lean_s353 lean_s780
let lean_s782 := by timed flipCongrArg lean_s646 [And]
have lean_s783 : (Eq let614 let659) := by timed congr lean_s782 lean_s676
have lean_s784 : let704 := by timed rfl
have lean_s785 : let703 := by timed rfl
have lean_s786 : (Eq let615 let660) := by timed congrIte lean_s783 lean_s784 lean_s785
let lean_s787 := by timed congr lean_s353 lean_s786
let lean_s788 := by timed flipCongrArg lean_s670 [And]
let lean_s789 := by timed flipCongrArg lean_s498 [Eq]
have lean_s790 : (Eq let362 let519) := by timed congr lean_s789 lean_s757
have lean_s791 : (Eq let612 let657) := by timed congr lean_s788 lean_s790
have lean_s792 : let702 := by timed rfl
have lean_s793 : let701 := by timed rfl
have lean_s794 : (Eq let613 let658) := by timed congrIte lean_s791 lean_s792 lean_s793
let lean_s795 := by timed congr lean_s353 lean_s794
have lean_s796 : let700 := by timed rfl
let lean_s797 := by timed flipCongrArg lean_s524 [Eq]
have lean_s798 : (Eq let610 let427) := by timed congr lean_s797 lean_s503
let lean_s799 := by timed congr lean_s796 lean_s798
let lean_s800 := by timed flipCongrArg lean_s524 [Eq]
let lean_s801 := by timed flipCongrArg lean_s471 [HAdd.hAdd]
have lean_s802 : (Eq let261 let518) := by timed congr lean_s801 lean_s503
have lean_s803 : (Eq let609 let655) := by timed congr lean_s800 lean_s802
let lean_s804 := by timed congr lean_s796 lean_s803
let lean_s805 := by timed flipCongrArg lean_s524 [Eq]
let lean_s806 := by timed flipCongrArg lean_s481 [HAdd.hAdd]
have lean_s807 : (Eq let373 let514) := by timed congr lean_s806 lean_s503
have lean_s808 : (Eq let608 let654) := by timed congr lean_s805 lean_s807
let lean_s809 := by timed congr lean_s796 lean_s808
let lean_s810 := by timed flipCongrArg lean_s524 [Eq]
have lean_s811 : (Eq let5 let5) := by timed rfl
let lean_s812 := by timed flipCongrArg lean_s811 [HAdd.hAdd]
have lean_s813 : (Eq let578 let508) := by timed congr lean_s812 lean_s503
have lean_s814 : (Eq let607 let653) := by timed congr lean_s810 lean_s813
let lean_s815 := by timed congr lean_s796 lean_s814
let lean_s816 := by timed flipCongrArg lean_s524 [Eq]
let lean_s817 := by timed flipCongrArg lean_s476 [HAdd.hAdd]
have lean_s818 : (Eq let393 let538) := by timed congr lean_s817 lean_s503
have lean_s819 : (Eq let606 let652) := by timed congr lean_s816 lean_s818
let lean_s820 := by timed congr lean_s815 lean_s819
let lean_s821 := by timed congr lean_s809 lean_s820
let lean_s822 := by timed congr lean_s804 lean_s821
have lean_s823 : (Eq let611 let656) := by timed congr lean_s799 lean_s822
let lean_s824 := by timed congr lean_s353 lean_s823
let lean_s825 := by timed flipCongrArg lean_s503 [Eq]
have lean_s826 : (Eq let552 let494) := by timed congr lean_s825 lean_s517
let lean_s827 := by timed flipCongrArg lean_s826 [Or]
let lean_s828 := by timed flipCongrArg lean_s503 [Eq]
let lean_s829 := by timed flipCongrArg lean_s515 [HAdd.hAdd]
have lean_s830 : (Eq let547 let399) := by timed congr lean_s829 lean_s517
have lean_s831 : (Eq let548 let650) := by timed congr lean_s828 lean_s830
have lean_s832 : (Eq let605 let651) := by timed congr lean_s827 lean_s831
let lean_s833 := by timed congr lean_s353 lean_s832
have lean_s834 : let698 := by timed rfl
let lean_s835 := by timed flipCongrArg lean_s488 [Eq]
have lean_s836 : (Eq let97 let97) := by timed rfl
have lean_s837 : (Eq let513 let493) := by timed congr lean_s835 lean_s836
let lean_s838 := by timed congr lean_s834 lean_s837
let lean_s839 := by timed flipCongrArg lean_s493 [Eq]
have lean_s840 : (Eq let410 let410) := by timed rfl
have lean_s841 : (Eq let539 let412) := by timed congr lean_s839 lean_s840
let lean_s842 := by timed congr lean_s834 lean_s841
let lean_s843 := by timed flipCongrArg lean_s469 [Eq]
have lean_s844 : (Eq let92 let406) := by timed flipCongrArg lean_s517 [selectx5fformat]
have lean_s845 : (Eq let536 let408) := by timed congr lean_s843 lean_s844
let lean_s846 := by timed congr lean_s834 lean_s845
let lean_s847 := by timed flipCongrArg lean_s474 [Eq]
let lean_s848 := by timed flipCongrArg lean_s471 [HAdd.hAdd]
have lean_s849 : (Eq let580 let483) := by timed congr lean_s848 lean_s517
have lean_s850 : (Eq let581 let646) := by timed flipCongrArg lean_s849 [selectx5fformat]
have lean_s851 : (Eq let582 let647) := by timed congr lean_s847 lean_s850
let lean_s852 := by timed congr lean_s834 lean_s851
let lean_s853 := by timed flipCongrArg lean_s479 [Eq]
let lean_s854 := by timed flipCongrArg lean_s481 [HAdd.hAdd]
have lean_s855 : (Eq let531 let337) := by timed congr lean_s854 lean_s517
have lean_s856 : (Eq let533 let644) := by timed flipCongrArg lean_s855 [selectx5fformat]
have lean_s857 : (Eq let534 let645) := by timed congr lean_s853 lean_s856
let lean_s858 := by timed congr lean_s834 lean_s857
let lean_s859 := by timed flipCongrArg lean_s484 [Eq]
let lean_s860 := by timed flipCongrArg lean_s811 [HAdd.hAdd]
have lean_s861 : (Eq let503 let521) := by timed congr lean_s860 lean_s517
have lean_s862 : (Eq let504 let642) := by timed flipCongrArg lean_s861 [selectx5fformat]
have lean_s863 : (Eq let505 let643) := by timed congr lean_s859 lean_s862
let lean_s864 := by timed congr lean_s858 lean_s863
let lean_s865 := by timed congr lean_s852 lean_s864
let lean_s866 := by timed congr lean_s846 lean_s865
let lean_s867 := by timed congr lean_s842 lean_s866
have lean_s868 : (Eq let603 let648) := by timed congr lean_s838 lean_s867
have lean_s869 : (Eq let604 let649) := by timed flipCongrArg lean_s868 [Not]
let lean_s870 := by timed congr lean_s833 lean_s869
let lean_s871 := by timed congr lean_s824 lean_s870
let lean_s872 := by timed congr lean_s795 lean_s871
let lean_s873 := by timed congr lean_s787 lean_s872
let lean_s874 := by timed congr lean_s781 lean_s873
let lean_s875 := by timed congr lean_s775 lean_s874
let lean_s876 := by timed congr lean_s769 lean_s875
let lean_s877 := by timed congr lean_s763 lean_s876
let lean_s878 := by timed congr lean_s754 lean_s877
let lean_s879 := by timed congr lean_s748 lean_s878
let lean_s880 := by timed congr lean_s742 lean_s879
let lean_s881 := by timed congr lean_s736 lean_s880
let lean_s882 := by timed congr lean_s730 lean_s881
let lean_s883 := by timed congr lean_s570 lean_s882
let lean_s884 := by timed congr lean_s556 lean_s883
let lean_s885 := by timed congr lean_s548 lean_s884
let lean_s886 := by timed congr lean_s539 lean_s885
let lean_s887 := by timed congr lean_s534 lean_s886
let lean_s888 := by timed congr lean_s523 lean_s887
let lean_s889 := by timed congr lean_s513 lean_s888
let lean_s890 := by timed congr lean_s507 lean_s889
let lean_s891 := by timed congr lean_s502 lean_s890
let lean_s892 := by timed congr lean_s497 lean_s891
let lean_s893 := by timed congr lean_s492 lean_s892
let lean_s894 := by timed congr lean_s487 lean_s893
let lean_s895 := by timed congr lean_s483 lean_s894
let lean_s896 := by timed congr lean_s478 lean_s895
let lean_s897 := by timed congr lean_s473 lean_s896
let lean_s898 := by timed congr lean_s468 lean_s897
have lean_s899 : (Eq let641 let697) := by timed congr lean_s463 lean_s898
have lean_s900 : let698 := by timed rfl
let lean_s901 := by timed congr lean_s900 lean_r163
let lean_s902 := by timed congr lean_s900 lean_r198
let lean_s903 := by timed congr lean_s900 lean_r196
let lean_s904 := by timed congr lean_s900 lean_r197
let lean_s905 := by timed congr lean_s900 lean_r201
let lean_s906 := by timed congr lean_s900 lean_r196
let lean_s907 := by timed congr lean_s900 lean_r193
let lean_s908 := by timed congr lean_s900 lean_r192
let lean_s909 := by timed congr lean_s900 lean_r189
let lean_s910 := by timed congr lean_s900 lean_r186
let lean_s911 := by timed flipCongrArg lean_s396 [Eq]
have lean_s912 : (Eq let696 let558) := by timed congr lean_s911 lean_r108
have lean_s913 : (Eq let696 True) := by timed Eq.trans lean_s912 lean_r186
let lean_s914 := by timed congr lean_s900 lean_s913
let lean_s915 := by timed flipCongrArg lean_s396 [HAdd.hAdd]
have lean_s916 : (Eq let693 let554) := by timed congr lean_s915 lean_r74
have lean_s917 : (Eq let693 let338) := by timed Eq.trans lean_s916 lean_r182
let lean_s918 := by timed flipCongrArg lean_s917 [GE.ge]
have lean_s919 : let568 := by timed rfl
have lean_s920 : (Eq let694 let550) := by timed congr lean_s918 lean_s919
have lean_s921 : (Eq let694 let544) := by timed Eq.trans lean_s920 lean_r179
have lean_s922 : (Eq let695 let545) := by timed flipCongrArg lean_s921 [Not]
have lean_s923 : (Eq let695 let13) := by timed Eq.trans lean_s922 lean_r176
let lean_s924 := by timed congr lean_s900 lean_s923
let lean_s925 := by timed congrHAdd lean_r75 lean_r162
have lean_s926 : (Eq let690 let542) := by timed congrHAdd lean_s39 lean_s925
have lean_s927 : (Eq let690 let541) := by timed Eq.trans lean_s926 lean_r174
let lean_s928 := by timed flipCongrArg lean_s927 [GE.ge]
have lean_s929 : let728 := by timed rfl
have lean_s930 : (Eq let691 let585) := by timed congr lean_s928 lean_s929
have lean_s931 : (Eq let691 let46) := by timed Eq.trans lean_s930 lean_r209
have lean_s932 : (Eq let692 let47) := by timed flipCongrArg lean_s931 [Not]
let lean_s933 := by timed congr lean_s900 lean_s932
let lean_s934 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s935 : (Eq let678 let486) := by timed congr lean_s934 lean_r75
have lean_s936 : (Eq let678 fmt1) := by timed Eq.trans lean_s935 lean_r170
let lean_s937 := by timed flipCongrArg lean_s936 [GE.ge]
have lean_s938 : let577 := by timed rfl
have lean_s939 : (Eq let689 let474) := by timed congr lean_s937 lean_s938
let lean_s940 := by timed congr lean_s900 lean_s939
have lean_s941 : (Eq let326 let326) := by timed rfl
have lean_s942 : (Eq let325 let325) := by timed rfl
let lean_s943 := by timed congrHAdd lean_r139 lean_r161
let lean_s944 := by timed congrHAdd lean_s942 lean_s943
let lean_s945 := by timed congrHAdd lean_s941 lean_s944
have lean_s946 : (Eq let500 let532) := by timed congrHAdd lean_s432 lean_s945
have lean_s947 : (Eq let500 let336) := by timed Eq.trans lean_s946 lean_r166
have lean_s948 : (Eq let501 let336) := by timed Eq.trans lean_r134 lean_s947
let lean_s949 := by timed flipCongrArg lean_s948 [GE.ge]
have lean_s950 : (Eq let688 let497) := by timed congr lean_s949 lean_s396
have lean_s951 : (Eq let688 let13) := by timed Eq.trans lean_s950 lean_r132
let lean_s952 := by timed congr lean_s900 lean_s951
let lean_s953 := by timed congrHAdd lean_r162 lean_r161
let lean_s954 := by timed congrHAdd lean_r139 lean_s953
let lean_s955 := by timed congrHAdd lean_s942 lean_s954
let lean_s956 := by timed congrHAdd lean_s941 lean_s955
have lean_s957 : (Eq let388 let482) := by timed congrHAdd lean_s432 lean_s956
have lean_s958 : (Eq let388 let328) := by timed Eq.trans lean_s957 lean_r121
have lean_s959 : (Eq let389 let328) := by timed Eq.trans lean_r103 lean_s958
let lean_s960 := by timed flipCongrArg lean_s959 [GE.ge]
have lean_s961 : let727 := by timed rfl
have lean_s962 : (Eq let686 let329) := by timed congr lean_s960 lean_s961
have lean_s963 : (Eq let686 let324) := by timed Eq.trans lean_s962 lean_r70
have lean_s964 : (Eq let687 let473) := by timed flipCongrArg lean_s963 [Not]
let lean_s965 := by timed congr lean_s900 lean_s964
have lean_s966 : let341 := by timed rfl
let lean_s967 := by timed flipCongrArg lean_s966 [Eq]
have lean_s968 : (Eq let685 let341) := by timed congr lean_s967 lean_s444
have lean_s969 : (Eq let685 True) := by timed Eq.trans lean_s968 lean_r77
let lean_s970 := by timed congr lean_s900 lean_s969
have lean_s971 : let700 := by timed rfl
let lean_s972 := by timed congr lean_s971 lean_r143
let lean_s973 := by timed congr lean_s971 lean_r78
let lean_s974 := by timed congr lean_s971 lean_r79
let lean_s975 := by timed congr lean_s971 lean_r83
let lean_s976 := by timed congr lean_s971 lean_r141
let lean_s977 := by timed congr lean_s971 lean_r81
let lean_s978 := by timed congr lean_s971 lean_r83
let lean_s979 := by timed congr lean_s971 lean_s105
let lean_s980 := by timed congr lean_s971 lean_r191
let lean_s981 := by timed congr lean_s971 lean_r92
let lean_s982 := by timed congr lean_s971 lean_r107
let lean_s983 := by timed congr lean_s971 lean_r88
let lean_s984 := by timed congr lean_s971 lean_r150
let lean_s985 := by timed congr lean_s971 lean_r85
let lean_s986 := by timed congr lean_s971 lean_r88
let lean_s987 := by timed congr lean_s971 lean_s114
let lean_s988 := by timed congr lean_s971 lean_r185
let lean_s989 := by timed congr lean_s971 lean_r100
let lean_s990 := by timed congr lean_s971 lean_r188
let lean_s991 := by timed congr lean_s971 lean_r94
let lean_s992 := by timed congr lean_s971 lean_r91
let lean_s993 := by timed congr lean_s971 lean_r113
let lean_s994 := by timed congr lean_s971 lean_r94
let lean_s995 := by timed congr lean_s971 lean_s123
let lean_s996 := by timed congr lean_s971 lean_r149
let lean_s997 := by timed congr lean_s971 lean_r109
let lean_s998 := by timed congr lean_s971 lean_r160
let lean_s999 := by timed congr lean_s971 lean_r119
let lean_s1000 := by timed congr lean_s971 lean_r220
let lean_s1001 := by timed congr lean_s971 lean_r95
let lean_s1002 := by timed congr lean_s971 lean_r119
let lean_s1003 := by timed congr lean_s971 lean_s132
let lean_s1004 := by timed congr lean_s971 lean_r180
let lean_s1005 := by timed congr lean_s971 lean_r135
let lean_s1006 := by timed congr lean_s971 lean_r158
let lean_s1007 := by timed congr lean_s971 lean_r97
let lean_s1008 := by timed congr lean_s971 lean_r216
let lean_s1009 := by timed congr lean_s971 lean_r133
let lean_s1010 := by timed congr lean_s971 lean_r97
let lean_s1011 := by timed congr lean_s1010 lean_s141
let lean_s1012 := by timed congr lean_s1009 lean_s1011
let lean_s1013 := by timed congr lean_s1008 lean_s1012
let lean_s1014 := by timed congr lean_s1007 lean_s1013
let lean_s1015 := by timed congr lean_s1006 lean_s1014
let lean_s1016 := by timed congr lean_s1005 lean_s1015
let lean_s1017 := by timed congr lean_s1004 lean_s1016
let lean_s1018 := by timed congr lean_s1003 lean_s1017
let lean_s1019 := by timed congr lean_s1002 lean_s1018
let lean_s1020 := by timed congr lean_s1001 lean_s1019
let lean_s1021 := by timed congr lean_s1000 lean_s1020
let lean_s1022 := by timed congr lean_s999 lean_s1021
let lean_s1023 := by timed congr lean_s998 lean_s1022
let lean_s1024 := by timed congr lean_s997 lean_s1023
let lean_s1025 := by timed congr lean_s996 lean_s1024
let lean_s1026 := by timed congr lean_s995 lean_s1025
let lean_s1027 := by timed congr lean_s994 lean_s1026
let lean_s1028 := by timed congr lean_s993 lean_s1027
let lean_s1029 := by timed congr lean_s992 lean_s1028
let lean_s1030 := by timed congr lean_s991 lean_s1029
let lean_s1031 := by timed congr lean_s990 lean_s1030
let lean_s1032 := by timed congr lean_s989 lean_s1031
let lean_s1033 := by timed congr lean_s988 lean_s1032
let lean_s1034 := by timed congr lean_s987 lean_s1033
let lean_s1035 := by timed congr lean_s986 lean_s1034
let lean_s1036 := by timed congr lean_s985 lean_s1035
let lean_s1037 := by timed congr lean_s984 lean_s1036
let lean_s1038 := by timed congr lean_s983 lean_s1037
let lean_s1039 := by timed congr lean_s982 lean_s1038
let lean_s1040 := by timed congr lean_s981 lean_s1039
let lean_s1041 := by timed congr lean_s980 lean_s1040
let lean_s1042 := by timed congr lean_s979 lean_s1041
let lean_s1043 := by timed congr lean_s978 lean_s1042
let lean_s1044 := by timed congr lean_s977 lean_s1043
let lean_s1045 := by timed congr lean_s976 lean_s1044
let lean_s1046 := by timed congr lean_s975 lean_s1045
let lean_s1047 := by timed congr lean_s974 lean_s1046
let lean_s1048 := by timed congr lean_s973 lean_s1047
have lean_s1049 : (Eq let677 let471) := by timed congr lean_s972 lean_s1048
let lean_s1050 := by timed congr lean_s900 lean_s1049
let lean_s1051 := by timed flipCongrArg lean_r143 [And]
have lean_s1052 : (Eq let675 let463) := by timed congr lean_s1051 lean_r92
have lean_s1053 : (Eq let676 let464) := by timed congrIte lean_s1052 lean_s185 lean_s186
let lean_s1054 := by timed congr lean_s900 lean_s1053
let lean_s1055 := by timed flipCongrArg lean_r191 [And]
have lean_s1056 : (Eq let673 let461) := by timed congr lean_s1055 lean_r100
have lean_s1057 : let718 := by timed rfl
have lean_s1058 : let717 := by timed rfl
have lean_s1059 : (Eq let674 let462) := by timed congrIte lean_s1056 lean_s1057 lean_s1058
let lean_s1060 := by timed congr lean_s900 lean_s1059
let lean_s1061 := by timed flipCongrArg lean_r185 [And]
have lean_s1062 : (Eq let671 let459) := by timed congr lean_s1061 lean_r109
have lean_s1063 : let716 := by timed rfl
have lean_s1064 : let715 := by timed rfl
have lean_s1065 : (Eq let672 let460) := by timed congrIte lean_s1062 lean_s1063 lean_s1064
let lean_s1066 := by timed congr lean_s900 lean_s1065
let lean_s1067 := by timed flipCongrArg lean_r149 [And]
have lean_s1068 : (Eq let669 let457) := by timed congr lean_s1067 lean_r135
have lean_s1069 : let714 := by timed rfl
have lean_s1070 : let713 := by timed rfl
have lean_s1071 : (Eq let670 let458) := by timed congrIte lean_s1068 lean_s1069 lean_s1070
let lean_s1072 := by timed congr lean_s900 lean_s1071
let lean_s1073 := by timed flipCongrArg lean_r180 [And]
have lean_s1074 : (Eq let667 let454) := by timed congr lean_s1073 lean_r104
have lean_s1075 : let712 := by timed rfl
have lean_s1076 : let711 := by timed rfl
have lean_s1077 : (Eq let668 let455) := by timed congrIte lean_s1074 lean_s1075 lean_s1076
let lean_s1078 := by timed congr lean_s900 lean_s1077
let lean_s1079 := by timed flipCongrArg lean_r143 [And]
have lean_s1080 : (Eq let665 let450) := by timed congr lean_s1079 lean_r107
have lean_s1081 : (Eq let666 let451) := by timed congrIte lean_s1080 lean_s223 lean_s224
let lean_s1082 := by timed congr lean_s900 lean_s1081
let lean_s1083 := by timed flipCongrArg lean_r191 [And]
have lean_s1084 : (Eq let663 let447) := by timed congr lean_s1083 lean_r188
have lean_s1085 : let708 := by timed rfl
have lean_s1086 : let707 := by timed rfl
have lean_s1087 : (Eq let664 let448) := by timed congrIte lean_s1084 lean_s1085 lean_s1086
let lean_s1088 := by timed congr lean_s900 lean_s1087
let lean_s1089 := by timed flipCongrArg lean_r185 [And]
have lean_s1090 : (Eq let661 let443) := by timed congr lean_s1089 lean_r160
have lean_s1091 : let706 := by timed rfl
have lean_s1092 : let705 := by timed rfl
have lean_s1093 : (Eq let662 let444) := by timed congrIte lean_s1090 lean_s1091 lean_s1092
let lean_s1094 := by timed congr lean_s900 lean_s1093
let lean_s1095 := by timed flipCongrArg lean_r149 [And]
have lean_s1096 : (Eq let659 let437) := by timed congr lean_s1095 lean_r158
have lean_s1097 : let704 := by timed rfl
have lean_s1098 : let703 := by timed rfl
have lean_s1099 : (Eq let660 let438) := by timed congrIte lean_s1096 lean_s1097 lean_s1098
let lean_s1100 := by timed congr lean_s900 lean_s1099
let lean_s1101 := by timed flipCongrArg lean_r180 [And]
have lean_s1102 : (Eq let657 let432) := by timed congr lean_s1101 lean_r152
have lean_s1103 : let702 := by timed rfl
have lean_s1104 : let701 := by timed rfl
have lean_s1105 : (Eq let658 let433) := by timed congrIte lean_s1102 lean_s1103 lean_s1104
let lean_s1106 := by timed congr lean_s900 lean_s1105
have lean_s1107 : let700 := by timed rfl
have lean_s1108 : (Eq let427 let427) := by timed rfl
let lean_s1109 := by timed congr lean_s1107 lean_s1108
let lean_s1110 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1111 : (Eq let655 let426) := by timed congr lean_s1110 lean_r151
let lean_s1112 := by timed congr lean_s1107 lean_s1111
let lean_s1113 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1114 : (Eq let654 let50) := by timed congr lean_s1113 lean_r146
let lean_s1115 := by timed congr lean_s1107 lean_s1114
let lean_s1116 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1117 : (Eq let653 let6) := by timed congr lean_s1116 lean_r140
let lean_s1118 := by timed congr lean_s1107 lean_s1117
let lean_s1119 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1120 : (Eq let652 let425) := by timed congr lean_s1119 lean_r172
let lean_s1121 := by timed congr lean_s1118 lean_s1120
let lean_s1122 := by timed congr lean_s1115 lean_s1121
let lean_s1123 := by timed congr lean_s1112 lean_s1122
have lean_s1124 : (Eq let656 let428) := by timed congr lean_s1109 lean_s1123
let lean_s1125 := by timed congr lean_s900 lean_s1124
let lean_s1126 := by timed flipCongrArg lean_r130 [Or]
let lean_s1127 := by timed flipCongrArg lean_s396 [Eq]
have lean_s1128 : let496 := by timed Eq.trans lean_r110 lean_r131
have lean_s1129 : (Eq let650 let507) := by timed congr lean_s1127 lean_s1128
have lean_s1130 : (Eq let650 False) := by timed Eq.trans lean_s1129 lean_r138
have lean_s1131 : (Eq let651 let377) := by timed congr lean_s1126 lean_s1130
have lean_s1132 : (Eq let651 let376) := by timed Eq.trans lean_s1131 lean_r99
let lean_s1133 := by timed congr lean_s900 lean_s1132
have lean_s1134 : let698 := by timed rfl
let lean_s1135 := by timed congr lean_s1134 lean_r129
let lean_s1136 := by timed congr lean_s1134 lean_r115
let lean_s1137 := by timed congr lean_s1134 lean_r114
let lean_s1138 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1139 : let492 := by timed Eq.trans lean_r122 lean_r128
have lean_s1140 : (Eq let646 let420) := by timed flipCongrArg lean_s1139 [selectx5fformat]
have lean_s1141 : (Eq let647 let478) := by timed congr lean_s1138 lean_s1140
have lean_s1142 : (Eq let647 let421) := by timed Eq.trans lean_s1141 lean_r118
let lean_s1143 := by timed congr lean_s1134 lean_s1142
let lean_s1144 := by timed flipCongrArg lean_s938 [Eq]
have lean_s1145 : let515 := by timed Eq.trans lean_r73 lean_r148
have lean_s1146 : (Eq let644 let417) := by timed flipCongrArg lean_s1145 [selectx5fformat]
have lean_s1147 : (Eq let645 let601) := by timed congr lean_s1144 lean_s1146
have lean_s1148 : (Eq let645 let418) := by timed Eq.trans lean_s1147 lean_r229
let lean_s1149 := by timed congr lean_s1134 lean_s1148
let lean_s1150 := by timed flipCongrArg lean_s919 [Eq]
have lean_s1151 : let599 := by timed Eq.trans lean_r154 lean_r227
have lean_s1152 : (Eq let642 let414) := by timed flipCongrArg lean_s1151 [selectx5fformat]
have lean_s1153 : (Eq let643 let488) := by timed congr lean_s1150 lean_s1152
have lean_s1154 : (Eq let643 let415) := by timed Eq.trans lean_s1153 lean_r126
let lean_s1155 := by timed congr lean_s1149 lean_s1154
let lean_s1156 := by timed congr lean_s1143 lean_s1155
let lean_s1157 := by timed congr lean_s1137 lean_s1156
let lean_s1158 := by timed congr lean_s1136 lean_s1157
have lean_s1159 : (Eq let648 let423) := by timed congr lean_s1135 lean_s1158
have lean_s1160 : (Eq let649 let424) := by timed flipCongrArg lean_s1159 [Not]
let lean_s1161 := by timed congr lean_s1133 lean_s1160
let lean_s1162 := by timed congr lean_s1125 lean_s1161
let lean_s1163 := by timed congr lean_s1106 lean_s1162
let lean_s1164 := by timed congr lean_s1100 lean_s1163
let lean_s1165 := by timed congr lean_s1094 lean_s1164
let lean_s1166 := by timed congr lean_s1088 lean_s1165
let lean_s1167 := by timed congr lean_s1082 lean_s1166
let lean_s1168 := by timed congr lean_s1078 lean_s1167
let lean_s1169 := by timed congr lean_s1072 lean_s1168
let lean_s1170 := by timed congr lean_s1066 lean_s1169
let lean_s1171 := by timed congr lean_s1060 lean_s1170
let lean_s1172 := by timed congr lean_s1054 lean_s1171
let lean_s1173 := by timed congr lean_s1050 lean_s1172
let lean_s1174 := by timed congr lean_s970 lean_s1173
let lean_s1175 := by timed congr lean_s965 lean_s1174
let lean_s1176 := by timed congr lean_s952 lean_s1175
let lean_s1177 := by timed congr lean_s940 lean_s1176
let lean_s1178 := by timed congr lean_s933 lean_s1177
let lean_s1179 := by timed congr lean_s924 lean_s1178
let lean_s1180 := by timed congr lean_s914 lean_s1179
let lean_s1181 := by timed congr lean_s910 lean_s1180
let lean_s1182 := by timed congr lean_s909 lean_s1181
let lean_s1183 := by timed congr lean_s908 lean_s1182
let lean_s1184 := by timed congr lean_s907 lean_s1183
let lean_s1185 := by timed congr lean_s906 lean_s1184
let lean_s1186 := by timed congr lean_s905 lean_s1185
let lean_s1187 := by timed congr lean_s904 lean_s1186
let lean_s1188 := by timed congr lean_s903 lean_s1187
let lean_s1189 := by timed congr lean_s902 lean_s1188
have lean_s1190 : (Eq let697 let476) := by timed congr lean_s901 lean_s1189
have lean_s1191 : (Eq let697 let475) := by timed Eq.trans lean_s1190 lean_r116
have lean_s1192 : (Eq let641 let475) := by timed Eq.trans lean_s899 lean_s1191
have lean_s1193 : (Eq let248 let475) := by timed Eq.trans lean_s352 lean_s1192
have lean_s1194 : let475 := by timed eqResolve lean_a232 lean_s1193
have lean_s1195 : let451 := by andElim lean_s1194, 10
have lean_s1196 : (Or let450 let25) := by timed iteElim2 lean_s1195
have lean_s1197 : (Or let25 let450) := by permutateOr lean_s1196, [1, 0], (- 1)
have lean_s1198 : (Or let791 let394) := by timed @cnfAndPos [let449, let394] 1
have lean_s1199 : (Or let394 let791) := by permutateOr lean_s1198, [1, 0], (- 1)
have lean_s1200 : let876 :=
  (scope (fun lean_a245 : let394 =>
    have lean_s1200 : let876 :=
      (scope (fun lean_a246 : let394 =>
        have lean_s1200 : let395 := by timed Eq.symm lean_a246
        have lean_s1201 : let394 := by timed Eq.symm lean_s1200
        let lean_s1202 := by timed flipCongrArg lean_s1201 [Eq]
        have lean_s1203 : let564 := by timed rfl
        have lean_s1204 : (Eq let446 let3) := by timed congr lean_s1202 lean_s1203
        have lean_s1205 : (Eq let64 let63) := by timed flipCongrArg lean_r0 [Not]
        have lean_s1206 : (Eq let64 True) := by timed Eq.trans lean_s1205 lean_r11
        have lean_s1207 : (Eq let4 True) := by timed Eq.trans lean_r12 lean_s1206
        have lean_s1208 : let4 := by timed trueElim lean_s1207
        have lean_s1209 : let872 := by timed Eq.trans lean_s1204 lean_s1208
        have lean_s1210 : let869 := by timed falseElim lean_s1209
        show let869 from lean_s1210
      ))
    have lean_s1201 : let877 := by liftOrNToImp lean_s1200, 1
    have lean_s1202 : let869 := by timed modusPonens lean_a245 lean_s1201
    show let869 from lean_s1202
  ))
have lean_s1201 : let877 := by liftOrNToImp lean_s1200, 1
have lean_s1202 : let876 := by timed impliesElim lean_s1201
have lean_s1203 : (Or let869 let807) := by permutateOr lean_s1202, [1, 0], (- 1)
have lean_s1204 : (Or let856 let446) := by timed @cnfAndPos [let446, let378] 0
have lean_s1205 : (Or let446 let856) := by permutateOr lean_s1204, [1, 0], (- 1)
have lean_s1206 : let462 := by andElim lean_s1194, 6
have lean_s1207 : (Or let461 let23) := by timed iteElim2 lean_s1206
have lean_s1208 : (Or let23 let461) := by permutateOr lean_s1207, [1, 0], (- 1)
have lean_s1209 : (Or let746 (Or let792 (Or let745 (Or let835 let865)))) :=
  (scope (fun lean_a246 : let40 =>
    (scope (fun lean_a247 : let152 =>
      (scope (fun lean_a248 : let23 =>
        (scope (fun lean_a249 : let19 =>
          (scope (fun lean_a250 : let13 =>
            (scope (fun lean_a251 : let6 =>
              have lean_s1209 : let851 := by timed Eq.symm lean_r5
              have lean_s1210 : let44 := by timed eqResolve lean_a251 lean_s1209
              let lean_s1211 := by timed And.intro lean_a249 lean_a247
              have lean_s1212 : let879 := by timed And.intro lean_s1210 lean_s1211
              have lean_s1213 : (Or let847 (Or let835 let803)) :=
                (scope (fun lean_a248 : let44 =>
                  (scope (fun lean_a249 : let19 =>
                    (scope (fun lean_a250 : let152 =>
                      have lean_s1213 : let804 := by timed Eq.symm lean_a250
                      have lean_s1214 : let144 := by timed Eq.symm lean_a249
                      have lean_s1215 : let19 := by timed Eq.symm lean_s1214
                      let lean_s1216 := by timed Eq.trans lean_s1213 lean_s1215
                      have lean_s1217 : let850 := by timed Eq.symm lean_a248
                      have lean_s1218 : let44 := by timed Eq.symm lean_s1217
                      have lean_s1219 : let855 := by timed flipCongrArg lean_s1218 [xx5fcount]
                      have lean_s1220 : let793 := by timed Eq.trans lean_s1216 lean_s1219
                      show let793 from lean_s1220
                ))))))
              have lean_s1214 : (Implies let879 let793) := by liftOrNToImp lean_s1213, 3
              have lean_s1215 : let793 := by timed modusPonens lean_s1212 lean_s1214
              let lean_s1216 := by timed And.intro lean_a248 lean_a246
              have lean_s1217 : let845 := by timed And.intro lean_s1210 lean_s1216
              have lean_s1218 : let848 :=
                (scope (fun lean_a248 : let44 =>
                  (scope (fun lean_a249 : let23 =>
                    (scope (fun lean_a250 : let40 =>
                      have lean_s1218 : let783 := by timed Eq.symm lean_a250
                      have lean_s1219 : let179 := by timed Eq.symm lean_a249
                      have lean_s1220 : let23 := by timed Eq.symm lean_s1219
                      let lean_s1221 := by timed Eq.trans lean_s1218 lean_s1220
                      have lean_s1222 : let850 := by timed Eq.symm lean_a248
                      have lean_s1223 : let44 := by timed Eq.symm lean_s1222
                      have lean_s1224 : let849 := by timed flipCongrArg lean_s1223 [sx5fcount]
                      have lean_s1225 : let752 := by timed Eq.trans lean_s1221 lean_s1224
                      show let752 from lean_s1225
                ))))))
              have lean_s1219 : let846 := by liftOrNToImp lean_s1218, 3
              have lean_s1220 : let752 := by timed modusPonens lean_s1217 lean_s1219
              let lean_s1221 := by timed And.intro lean_s1215 lean_s1220
              have lean_s1222 : let794 := by timed And.intro lean_a250 lean_s1221
              show let794 from lean_s1222
  ))))))))))))
have lean_s1210 : let878 := by liftOrNToImp lean_s1209, 6
have lean_s1211 : (Eq let571 let571) := by timed rfl
let lean_s1212 := by timed flipCongrArg lean_s1211 [Implies]
have lean_s1213 : (Or let544 (Or (Not let793) let757)) :=
  (scope (fun lean_a248 : let13 =>
    (scope (fun lean_a249 : let793 =>
      (scope (fun lean_a250 : let752 =>
        have lean_s1213 : let759 := by timed Eq.symm lean_a250
        have lean_s1214 : let761 :=
          (scope (fun lean_a250 : let759 =>
            have lean_s1214 : let66 := by timed trueElim lean_r14
            have lean_s1215 : let774 := by timed And.intro lean_s1214 lean_a250
            have lean_s1216 : let775 := by arithMulPos [let11, let17, let56], 4
            have lean_s1217 : let773 := by timed modusPonens lean_s1215 lean_s1216
            have lean_s1218 : let800 := by timed Eq.symm lean_a249
            have lean_s1219 : let801 := by timed And.intro lean_s1214 lean_s1218
            have lean_s1220 : (Implies let801 let799) := by arithMulPos [let10, let15, let56], 4
            have lean_s1221 : let799 := by timed modusPonens lean_s1219 lean_s1220
            have lean_s1222 : let319 := by timed trueElim lean_r66
            have lean_s1223 : let767 := by timed And.intro lean_s1222 lean_a248
            have lean_s1224 : let768 := by arithMulNeg [let12, let5, let74], 3
            have lean_s1225 : let766 := by timed modusPonens lean_s1223 lean_s1224
            have lean_s1226 : let798 := by sumBounds [lean_s1217, lean_s1221, lean_s1225]
            let lean_s1227 := by timed congrHAdd lean_r117 lean_r194
            have lean_s1228 : (Eq let764 let72) := by timed congrHAdd lean_r15 lean_s1227
            have lean_s1229 : (Eq let764 let54) := by timed Eq.trans lean_s1228 lean_r16
            let lean_s1230 := by timed flipCongrArg lean_s1229 [LE.le]
            let lean_s1231 := by timed congrHAdd lean_r13 lean_r18
            have lean_s1232 : (Eq let797 let284) := by timed congrHAdd lean_r17 lean_s1231
            have lean_s1233 : (Eq let797 let52) := by timed Eq.trans lean_s1232 lean_r38
            have lean_s1234 : (Eq let798 let525) := by timed congr lean_s1230 lean_s1233
            have lean_s1235 : (Eq let798 False) := by timed Eq.trans lean_s1234 lean_r157
            show False from by timed eqResolve lean_s1226 lean_s1235
          ))
        have lean_s1215 : let760 := by liftOrNToNeg lean_s1214
        show False from by timed contradiction lean_s1213 lean_s1215
  ))))))
have lean_s1214 : (Not let794) := by liftOrNToNeg lean_s1213
have lean_s1215 : let796 := by timed falseIntro lean_s1214
have lean_s1216 : (Eq let878 let573) := by timed congr lean_s1212 lean_s1215
have lean_s1217 : (Eq let878 let572) := by timed Eq.trans lean_s1216 lean_r199
have lean_s1218 : let572 := by timed eqResolve lean_s1210 lean_s1217
have lean_s1219 : (Or let746 (Or let792 let842)) := by timed flipNotAnd lean_s1218 [let40, let152, let23, let19, let13, let6]
have lean_s1220 : (Or let544 (Or let746 (Or let745 (Or let792 let836)))) := by permutateOr lean_s1219, [4, 0, 2, 1, 3, 5], (- 1)
have lean_s1221 : let13 := by andElim lean_s1194, 0
let lean_s1222 := by R2 lean_s1220, lean_s1221, let13, [(- 1), 0]
have lean_s1223 : let448 := by andElim lean_s1194, 11
have lean_s1224 : (Or let447 let19) := by timed iteElim2 lean_s1223
have lean_s1225 : (Or let19 let447) := by permutateOr lean_s1224, [1, 0], (- 1)
let lean_s1226 := by R2 lean_s1222, lean_s1225, let19, [(- 1), (- 1)]
have lean_s1227 : let464 := by andElim lean_s1194, 5
have lean_s1228 : (Or let463 let40) := by timed iteElim2 lean_s1227
have lean_s1229 : (Or let40 let463) := by permutateOr lean_s1228, [1, 0], (- 1)
let lean_s1230 := by R2 lean_s1226, lean_s1229, let40, [(- 1), (- 1)]
have lean_s1231 : (Or let743 let446) := by timed @cnfAndPos [let446, let445] 0
have lean_s1232 : (Or let446 let743) := by permutateOr lean_s1231, [1, 0], (- 1)
let lean_s1233 := by R1 lean_s1230, lean_s1232, let447, [(- 1), (- 1)]
have lean_s1234 : (Or let805 let366) := by timed @cnfAndPos [let449, let366] 1
have lean_s1235 : (Or let366 let805) := by permutateOr lean_s1234, [1, 0], (- 1)
let lean_s1236 := by R1 lean_s1233, lean_s1235, let463, [(- 1), (- 1)]
let lean_s1237 := by R1 lean_s1236, lean_s1203, let446, [(- 1), (- 1)]
have lean_s1238 : let809 :=
  (scope (fun lean_a251 : let394 =>
    have lean_s1238 : let809 :=
      (scope (fun lean_a251 : let394 =>
        have lean_s1238 : let395 := by timed Eq.symm lean_a251
        have lean_s1239 : let394 := by timed Eq.symm lean_s1238
        let lean_s1240 := by timed flipCongrArg lean_s1239 [Eq]
        have lean_s1241 : let563 := by timed rfl
        have lean_s1242 : (Eq let366 let354) := by timed congr lean_s1240 lean_s1241
        have lean_s1243 : (Eq let355 let63) := by timed flipCongrArg lean_r87 [Not]
        have lean_s1244 : (Eq let355 True) := by timed Eq.trans lean_s1243 lean_r11
        have lean_s1245 : (Eq let356 True) := by timed Eq.trans lean_r84 lean_s1244
        have lean_s1246 : let356 := by timed trueElim lean_s1245
        have lean_s1247 : (Eq let366 False) := by timed Eq.trans lean_s1242 lean_s1246
        have lean_s1248 : let808 := by timed falseElim lean_s1247
        show let808 from lean_s1248
      ))
    have lean_s1239 : let810 := by liftOrNToImp lean_s1238, 1
    have lean_s1240 : let808 := by timed modusPonens lean_a251 lean_s1239
    show let808 from lean_s1240
  ))
have lean_s1239 : let810 := by liftOrNToImp lean_s1238, 1
have lean_s1240 : let809 := by timed impliesElim lean_s1239
have lean_s1241 : (Or let808 let807) := by permutateOr lean_s1240, [1, 0], (- 1)
let lean_s1242 := by R1 lean_s1237, lean_s1241, let366, [(- 1), (- 1)]
have lean_s1243 : (Or let791 let152) := by timed iteElim1 lean_s1195
have lean_s1244 : (Or let152 let791) := by permutateOr lean_s1243, [1, 0], (- 1)
have lean_s1245 : (Or let745 (Or let831 (Or let807 let875))) := by R2 lean_s1242, lean_s1244, let152, [(- 1), (- 1)]
have lean_s1246 : (Or let745 (Or let831 let875)) := by factor lean_s1245, (- 1)
have lean_s1247 : (Or let745 (Or let831 (Or let791 let791))) := by R2 lean_s1246, lean_s1199, let394, [(- 1), (- 1)]
have lean_s1248 : (Or let745 (Or let831 let791)) := by factor lean_s1247, (- 1)
let lean_s1249 := by R2 lean_s1248, lean_s1197, let450, [(- 1), (- 1)]
have lean_s1250 : (Or let811 (Or let748 (Or let745 let859))) :=
  (scope (fun lean_a251 : let27 =>
    (scope (fun lean_a252 : let25 =>
      (scope (fun lean_a253 : let23 =>
        (scope (fun lean_a254 : let19 =>
          (scope (fun lean_a255 : let13 =>
            (scope (fun lean_a256 : let6 =>
              have lean_s1250 : let851 := by timed Eq.symm lean_r5
              have lean_s1251 : let44 := by timed eqResolve lean_a256 lean_s1250
              let lean_s1252 := by timed And.intro lean_a254 lean_a252
              have lean_s1253 : let852 := by timed And.intro lean_s1251 lean_s1252
              have lean_s1254 : let854 :=
                (scope (fun lean_a252 : let44 =>
                  (scope (fun lean_a253 : let19 =>
                    (scope (fun lean_a254 : let25 =>
                      have lean_s1254 : let790 := by timed Eq.symm lean_a254
                      have lean_s1255 : let144 := by timed Eq.symm lean_a253
                      have lean_s1256 : let19 := by timed Eq.symm lean_s1255
                      let lean_s1257 := by timed Eq.trans lean_s1254 lean_s1256
                      have lean_s1258 : let850 := by timed Eq.symm lean_a252
                      have lean_s1259 : let44 := by timed Eq.symm lean_s1258
                      have lean_s1260 : let855 := by timed flipCongrArg lean_s1259 [xx5fcount]
                      have lean_s1261 : let753 := by timed Eq.trans lean_s1257 lean_s1260
                      show let753 from lean_s1261
                ))))))
              have lean_s1255 : let853 := by liftOrNToImp lean_s1254, 3
              have lean_s1256 : let753 := by timed modusPonens lean_s1253 lean_s1255
              let lean_s1257 := by timed And.intro lean_a253 lean_a251
              have lean_s1258 : let874 := by timed And.intro lean_s1251 lean_s1257
              have lean_s1259 : (Or let847 (Or let745 let823)) :=
                (scope (fun lean_a252 : let44 =>
                  (scope (fun lean_a253 : let23 =>
                    (scope (fun lean_a254 : let27 =>
                      have lean_s1259 : let824 := by timed Eq.symm lean_a254
                      have lean_s1260 : let179 := by timed Eq.symm lean_a253
                      have lean_s1261 : let23 := by timed Eq.symm lean_s1260
                      let lean_s1262 := by timed Eq.trans lean_s1259 lean_s1261
                      have lean_s1263 : let850 := by timed Eq.symm lean_a252
                      have lean_s1264 : let44 := by timed Eq.symm lean_s1263
                      have lean_s1265 : let849 := by timed flipCongrArg lean_s1264 [sx5fcount]
                      have lean_s1266 : let812 := by timed Eq.trans lean_s1262 lean_s1265
                      show let812 from lean_s1266
                ))))))
              have lean_s1260 : (Implies let874 let812) := by liftOrNToImp lean_s1259, 3
              have lean_s1261 : let812 := by timed modusPonens lean_s1258 lean_s1260
              let lean_s1262 := by timed And.intro lean_s1256 lean_s1261
              have lean_s1263 : let813 := by timed And.intro lean_a255 lean_s1262
              show let813 from lean_s1263
  ))))))))))))
have lean_s1251 : let873 := by liftOrNToImp lean_s1250, 6
have lean_s1252 : (Eq let28 let28) := by timed rfl
let lean_s1253 := by timed flipCongrArg lean_s1252 [Implies]
have lean_s1254 : let815 := by timed falseIntro lean_s5
have lean_s1255 : (Eq let873 let30) := by timed congr lean_s1253 lean_s1254
have lean_s1256 : (Eq let873 let29) := by timed Eq.trans lean_s1255 lean_r1
have lean_s1257 : let29 := by timed eqResolve lean_s1251 lean_s1256
have lean_s1258 : (Or let811 let843) := by timed flipNotAnd lean_s1257 [let27, let25, let23, let19, let13, let6]
have lean_s1259 : (Or let544 (Or let811 let839)) := by permutateOr lean_s1258, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1260 := by R2 lean_s1259, lean_s1221, let13, [(- 1), 0]
let lean_s1261 := by R2 lean_s1260, lean_s1225, let19, [(- 1), (- 1)]
let lean_s1262 := by R1 lean_s1261, lean_s1232, let447, [(- 1), (- 1)]
have lean_s1263 : let870 :=
  (scope (fun lean_a252 : let366 =>
    have lean_s1263 : let870 :=
      (scope (fun lean_a253 : let366 =>
        have lean_s1263 : let367 := by timed Eq.symm lean_a253
        have lean_s1264 : let366 := by timed Eq.symm lean_s1263
        let lean_s1265 := by timed flipCongrArg lean_s1264 [Eq]
        have lean_s1266 : let564 := by timed rfl
        have lean_s1267 : (Eq let446 let32) := by timed congr lean_s1265 lean_s1266
        have lean_s1268 : (Eq let579 let63) := by timed flipCongrArg lean_r2 [Not]
        have lean_s1269 : (Eq let579 True) := by timed Eq.trans lean_s1268 lean_r11
        have lean_s1270 : (Eq let33 True) := by timed Eq.trans lean_r204 lean_s1269
        have lean_s1271 : let33 := by timed trueElim lean_s1270
        have lean_s1272 : let872 := by timed Eq.trans lean_s1267 lean_s1271
        have lean_s1273 : let869 := by timed falseElim lean_s1272
        show let869 from lean_s1273
      ))
    have lean_s1264 : let871 := by liftOrNToImp lean_s1263, 1
    have lean_s1265 : let869 := by timed modusPonens lean_a252 lean_s1264
    show let869 from lean_s1265
  ))
have lean_s1264 : let871 := by liftOrNToImp lean_s1263, 1
have lean_s1265 : let870 := by timed impliesElim lean_s1264
have lean_s1266 : (Or let869 let808) := by permutateOr lean_s1265, [1, 0], (- 1)
let lean_s1267 := by R1 lean_s1262, lean_s1266, let446, [(- 1), (- 1)]
have lean_s1268 : (Or let805 let27) := by timed iteElim1 lean_s1227
have lean_s1269 : (Or let27 let805) := by permutateOr lean_s1268, [1, 0], (- 1)
let lean_s1270 := by R2 lean_s1267, lean_s1269, let27, [(- 1), (- 1)]
have lean_s1271 : (Or let745 (Or let748 (Or let831 let806))) := by R2 lean_s1270, lean_s1235, let366, [(- 1), (- 1)]
have lean_s1272 : (Or let745 (Or let748 (Or let831 let805))) := by factor lean_s1271, (- 1)
let lean_s1273 := by R2 lean_s1272, lean_s1229, let463, [(- 1), (- 1)]
have lean_s1274 : (Or let743 let330) := by timed iteElim1 lean_s1223
have lean_s1275 : (Or let330 let743) := by permutateOr lean_s1274, [1, 0], (- 1)
let lean_s1276 := by R2 lean_s1275, lean_s1225, let447, [(- 1), (- 1)]
have lean_s1277 : (Or let746 (Or let748 (Or let745 (Or let863 let865)))) :=
  (scope (fun lean_a253 : let40 =>
    (scope (fun lean_a254 : let25 =>
      (scope (fun lean_a255 : let23 =>
        (scope (fun lean_a256 : let330 =>
          (scope (fun lean_a257 : let13 =>
            (scope (fun lean_a258 : let6 =>
              have lean_s1277 : let851 := by timed Eq.symm lean_r5
              have lean_s1278 : let44 := by timed eqResolve lean_a258 lean_s1277
              have lean_s1279 : let868 := by timed And.intro lean_a256 lean_a254
              have lean_s1280 : (Or let863 (Or let748 let37)) :=
                (scope (fun lean_a254 : let330 =>
                  (scope (fun lean_a255 : let25 =>
                    have lean_s1280 : let790 := by timed Eq.symm lean_a255
                    have lean_s1281 : (Eq let36 let18) := by timed Eq.symm lean_a254
                    have lean_s1282 : let330 := by timed Eq.symm lean_s1281
                    have lean_s1283 : let37 := by timed Eq.trans lean_s1280 lean_s1282
                    show let37 from lean_s1283
                ))))
              have lean_s1281 : (Implies let868 let37) := by liftOrNToImp lean_s1280, 2
              have lean_s1282 : let37 := by timed modusPonens lean_s1279 lean_s1281
              have lean_s1283 : (Or (Not let37) let866) :=
                (scope (fun lean_a254 : let37 =>
                  have lean_s1283 : let34 := by timed eqResolve lean_a254 lean_r3
                  have lean_s1284 : let866 := by timed Eq.symm lean_s1283
                  show let866 from lean_s1284
                ))
              have lean_s1284 : (Implies let37 let866) := by liftOrNToImp lean_s1283, 1
              have lean_s1285 : let866 := by timed modusPonens lean_s1282 lean_s1284
              have lean_s1286 : let867 := by timed And.intro lean_s1278 lean_s1285
              have lean_s1287 : (Or let847 (Or (Not let866) let793)) :=
                (scope (fun lean_a255 : let44 =>
                  (scope (fun lean_a256 : let866 =>
                    have lean_s1287 : let34 := by timed Eq.symm lean_a256
                    have lean_s1288 : let866 := by timed Eq.symm lean_s1287
                    have lean_s1289 : let850 := by timed Eq.symm lean_a255
                    have lean_s1290 : let44 := by timed Eq.symm lean_s1289
                    have lean_s1291 : let855 := by timed flipCongrArg lean_s1290 [xx5fcount]
                    have lean_s1292 : let793 := by timed Eq.trans lean_s1288 lean_s1291
                    show let793 from lean_s1292
                ))))
              have lean_s1288 : (Implies let867 let793) := by liftOrNToImp lean_s1287, 2
              have lean_s1289 : let793 := by timed modusPonens lean_s1286 lean_s1288
              let lean_s1290 := by timed And.intro lean_a255 lean_a253
              have lean_s1291 : let845 := by timed And.intro lean_s1278 lean_s1290
              have lean_s1292 : let848 :=
                (scope (fun lean_a256 : let44 =>
                  (scope (fun lean_a257 : let23 =>
                    (scope (fun lean_a258 : let40 =>
                      have lean_s1292 : let783 := by timed Eq.symm lean_a258
                      have lean_s1293 : let179 := by timed Eq.symm lean_a257
                      have lean_s1294 : let23 := by timed Eq.symm lean_s1293
                      let lean_s1295 := by timed Eq.trans lean_s1292 lean_s1294
                      have lean_s1296 : let850 := by timed Eq.symm lean_a256
                      have lean_s1297 : let44 := by timed Eq.symm lean_s1296
                      have lean_s1298 : let849 := by timed flipCongrArg lean_s1297 [sx5fcount]
                      have lean_s1299 : let752 := by timed Eq.trans lean_s1295 lean_s1298
                      show let752 from lean_s1299
                ))))))
              have lean_s1293 : let846 := by liftOrNToImp lean_s1292, 3
              have lean_s1294 : let752 := by timed modusPonens lean_s1291 lean_s1293
              let lean_s1295 := by timed And.intro lean_s1289 lean_s1294
              have lean_s1296 : let794 := by timed And.intro lean_a257 lean_s1295
              show let794 from lean_s1296
  ))))))))))))
have lean_s1278 : let864 := by liftOrNToImp lean_s1277, 6
have lean_s1279 : (Eq let331 let331) := by timed rfl
let lean_s1280 := by timed flipCongrArg lean_s1279 [Implies]
have lean_s1281 : let796 := by timed falseIntro lean_s1214
have lean_s1282 : (Eq let864 let333) := by timed congr lean_s1280 lean_s1281
have lean_s1283 : (Eq let864 let332) := by timed Eq.trans lean_s1282 lean_r71
have lean_s1284 : let332 := by timed eqResolve lean_s1278 lean_s1283
have lean_s1285 : (Or let746 (Or let748 (Or let745 (Or let863 let840)))) := by timed flipNotAnd lean_s1284 [let40, let25, let23, let330, let13, let6]
have lean_s1286 : (Or let544 (Or let746 (Or let745 (Or let748 (Or let863 let831))))) := by permutateOr lean_s1285, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1287 := by R1 lean_s1276, lean_s1286, let330, [(- 1), (- 1)]
let lean_s1288 := by R2 lean_s1287, lean_s1221, let13, [(- 1), 0]
let lean_s1289 := by R2 lean_s11, lean_s1221, let13, [(- 1), 0]
have lean_s1290 : (Or let856 let39) := by timed iteElim1 lean_s1206
have lean_s1291 : (Or let39 let856) := by permutateOr lean_s1290, [1, 0], (- 1)
let lean_s1292 := by R2 lean_s1289, lean_s1291, let39, [(- 1), (- 1)]
let lean_s1293 := by R2 lean_s1292, lean_s1208, let461, [(- 1), (- 1)]
have lean_s1294 : (Or let746 (Or let748 (Or let745 (Or let835 (Or let544 (Or let831 let754)))))) :=
  (scope (fun lean_a256 : let40 =>
    (scope (fun lean_a257 : let25 =>
      (scope (fun lean_a258 : let23 =>
        (scope (fun lean_a259 : let19 =>
          (scope (fun lean_a260 : let13 =>
            (scope (fun lean_a261 : let6 =>
              have lean_s1294 : let851 := by timed Eq.symm lean_r5
              have lean_s1295 : let44 := by timed eqResolve lean_a261 lean_s1294
              let lean_s1296 := by timed And.intro lean_a259 lean_a257
              have lean_s1297 : let852 := by timed And.intro lean_s1295 lean_s1296
              have lean_s1298 : let854 :=
                (scope (fun lean_a256 : let44 =>
                  (scope (fun lean_a257 : let19 =>
                    (scope (fun lean_a258 : let25 =>
                      have lean_s1298 : let790 := by timed Eq.symm lean_a258
                      have lean_s1299 : let144 := by timed Eq.symm lean_a257
                      have lean_s1300 : let19 := by timed Eq.symm lean_s1299
                      let lean_s1301 := by timed Eq.trans lean_s1298 lean_s1300
                      have lean_s1302 : let850 := by timed Eq.symm lean_a256
                      have lean_s1303 : let44 := by timed Eq.symm lean_s1302
                      have lean_s1304 : let855 := by timed flipCongrArg lean_s1303 [xx5fcount]
                      have lean_s1305 : let753 := by timed Eq.trans lean_s1301 lean_s1304
                      show let753 from lean_s1305
                ))))))
              have lean_s1299 : let853 := by liftOrNToImp lean_s1298, 3
              have lean_s1300 : let753 := by timed modusPonens lean_s1297 lean_s1299
              let lean_s1301 := by timed And.intro lean_a258 lean_a256
              have lean_s1302 : let845 := by timed And.intro lean_s1295 lean_s1301
              have lean_s1303 : let848 :=
                (scope (fun lean_a256 : let44 =>
                  (scope (fun lean_a257 : let23 =>
                    (scope (fun lean_a258 : let40 =>
                      have lean_s1303 : let783 := by timed Eq.symm lean_a258
                      have lean_s1304 : let179 := by timed Eq.symm lean_a257
                      have lean_s1305 : let23 := by timed Eq.symm lean_s1304
                      let lean_s1306 := by timed Eq.trans lean_s1303 lean_s1305
                      have lean_s1307 : let850 := by timed Eq.symm lean_a256
                      have lean_s1308 : let44 := by timed Eq.symm lean_s1307
                      have lean_s1309 : let849 := by timed flipCongrArg lean_s1308 [sx5fcount]
                      have lean_s1310 : let752 := by timed Eq.trans lean_s1306 lean_s1309
                      show let752 from lean_s1310
                ))))))
              have lean_s1304 : let846 := by liftOrNToImp lean_s1303, 3
              have lean_s1305 : let752 := by timed modusPonens lean_s1302 lean_s1304
              let lean_s1306 := by timed And.intro lean_s1300 lean_s1305
              have lean_s1307 : let754 := by timed And.intro lean_a260 lean_s1306
              show let754 from lean_s1307
  ))))))))))))
have lean_s1295 : let844 := by liftOrNToImp lean_s1294, 6
have lean_s1296 : (Eq let574 let574) := by timed rfl
let lean_s1297 := by timed flipCongrArg lean_s1296 [Implies]
have lean_s1298 : (Or let544 (Or let758 let757)) :=
  (scope (fun lean_a256 : let13 =>
    (scope (fun lean_a257 : let753 =>
      (scope (fun lean_a258 : let752 =>
        have lean_s1298 : let759 := by timed Eq.symm lean_a258
        have lean_s1299 : let761 :=
          (scope (fun lean_a256 : let759 =>
            have lean_s1299 : let66 := by timed trueElim lean_r14
            have lean_s1300 : let774 := by timed And.intro lean_s1299 lean_a256
            have lean_s1301 : let775 := by arithMulPos [let11, let17, let56], 4
            have lean_s1302 : let773 := by timed modusPonens lean_s1300 lean_s1301
            have lean_s1303 : let770 := by timed Eq.symm lean_a257
            have lean_s1304 : let771 := by timed And.intro lean_s1299 lean_s1303
            have lean_s1305 : let772 := by arithMulPos [let10, let17, let56], 4
            have lean_s1306 : let769 := by timed modusPonens lean_s1304 lean_s1305
            have lean_s1307 : let319 := by timed trueElim lean_r66
            have lean_s1308 : let767 := by timed And.intro lean_s1307 lean_a256
            have lean_s1309 : let768 := by arithMulNeg [let12, let5, let74], 3
            have lean_s1310 : let766 := by timed modusPonens lean_s1308 lean_s1309
            have lean_s1311 : let765 := by sumBounds [lean_s1302, lean_s1306, lean_s1310]
            let lean_s1312 := by timed congrHAdd lean_r117 lean_r194
            have lean_s1313 : (Eq let764 let72) := by timed congrHAdd lean_r15 lean_s1312
            have lean_s1314 : (Eq let764 let54) := by timed Eq.trans lean_s1313 lean_r16
            let lean_s1315 := by timed flipCongrArg lean_s1314 [LE.le]
            let lean_s1316 := by timed congrHAdd lean_r17 lean_r18
            have lean_s1317 : (Eq let763 let522) := by timed congrHAdd lean_r17 lean_s1316
            have lean_s1318 : (Eq let763 let53) := by timed Eq.trans lean_s1317 lean_r155
            have lean_s1319 : (Eq let765 let76) := by timed congr lean_s1315 lean_s1318
            have lean_s1320 : (Eq let765 False) := by timed Eq.trans lean_s1319 lean_r19
            show False from by timed eqResolve lean_s1311 lean_s1320
          ))
        have lean_s1300 : let760 := by liftOrNToNeg lean_s1299
        show False from by timed contradiction lean_s1298 lean_s1300
  ))))))
have lean_s1299 : (Not let754) := by liftOrNToNeg lean_s1298
have lean_s1300 : let756 := by timed falseIntro lean_s1299
have lean_s1301 : (Eq let844 let576) := by timed congr lean_s1297 lean_s1300
have lean_s1302 : (Eq let844 let575) := by timed Eq.trans lean_s1301 lean_r200
have lean_s1303 : let575 := by timed eqResolve lean_s1295 lean_s1302
have lean_s1304 : (Or let746 let843) := by timed flipNotAnd lean_s1303 [let40, let25, let23, let19, let13, let6]
have lean_s1305 : (Or let544 (Or let746 let839)) := by permutateOr lean_s1304, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1306 := by R1 lean_s1293, lean_s1305, let23, [(- 1), (- 1)]
have lean_s1307 : (Or let746 (Or let748 (Or let835 (Or let831 let838)))) := by R2 lean_s1306, lean_s1221, let13, [(- 1), 0]
have lean_s1308 : let838 := by factor lean_s1307, (- 1)
have lean_s1309 : (Or let828 (Or let825 (Or let307 let314))) := by timed cnfAndNeg [let474, let47, let313]
have lean_s1310 : let827 :=
  (scope (fun lean_a256 : let474 =>
    (scope (fun lean_a257 : let47 =>
      (scope (fun lean_a258 : let313 =>
        let lean_s1310 := by timed And.intro lean_a258 lean_a257
        have lean_s1311 : let830 := by timed And.intro lean_a256 lean_s1310
        have lean_s1312 : (Or let825 (Or let314 (Or let307 let829))) :=
          (scope (fun lean_a259 : let474 =>
            (scope (fun lean_a260 : let313 =>
              (scope (fun lean_a261 : let47 =>
                have lean_s1312 : (binrel% GT.gt fmt1 let7) := by trichotomy lean_a259, lean_a260
                have lean_s1313 : (binrel% GE.ge fmt1 let5) := by intTightLb lean_s1312
                have lean_s1314 : (Eq let47 let48) := by timed Eq.symm lean_r6
                have lean_s1315 : let48 := by timed eqResolve lean_a261 lean_s1314
                have lean_s1316 : (binrel% LE.le fmt1 let5) := by intTightUb lean_s1315
                have lean_s1317 : let6 := by trichotomy lean_s1313, lean_s1316
                have lean_s1318 : let829 := by timed Eq.symm lean_s1317
                show let829 from lean_s1318
          ))))))
        have lean_s1313 : (Implies let830 let829) := by liftOrNToImp lean_s1312, 3
        have lean_s1314 : let829 := by timed modusPonens lean_s1311 lean_s1313
        have lean_s1315 : (Or (Not let829) let6) :=
          (scope (fun lean_a259 : let829 =>
            have lean_s1315 : let6 := by timed Eq.symm lean_a259
            show let6 from lean_s1315
          ))
        have lean_s1316 : (Implies let829 let6) := by liftOrNToImp lean_s1315, 1
        have lean_s1317 : let6 := by timed modusPonens lean_s1314 lean_s1316
        show let6 from lean_s1317
  ))))))
have lean_s1311 : (Implies let828 let6) := by liftOrNToImp lean_s1310, 3
have lean_s1312 : (Or (Not let828) let6) := by timed impliesElim lean_s1311
have lean_s1313 : let827 := by R1 lean_s1309, lean_s1312, let828, [(- 1), (- 1)]
have lean_s1314 : let700 := by timed rfl
have lean_s1315 : (Eq let825 let825) := by timed rfl
let lean_s1316 := by timed congr lean_s1314 lean_s1315
have lean_s1317 : let49 := by timed rfl
let lean_s1318 := by timed flipCongrArg lean_s1317 [Eq]
have lean_s1319 : (Eq let308 let49) := by timed congr lean_s1318 lean_r136
have lean_s1320 : (Eq let308 True) := by timed Eq.trans lean_s1319 lean_r7
have lean_s1321 : (Eq let309 True) := by timed Eq.trans lean_r58 lean_s1320
have lean_s1322 : let309 := by timed trueElim lean_s1321
let lean_s1323 := by timed congr lean_s1314 lean_s1322
have lean_s1324 : let51 := by timed rfl
let lean_s1325 := by timed flipCongrArg lean_s1324 [Eq]
have lean_s1326 : (Eq let315 let51) := by timed congr lean_s1325 lean_r98
have lean_s1327 : (Eq let315 True) := by timed Eq.trans lean_s1326 lean_r8
have lean_s1328 : (Eq let316 True) := by timed Eq.trans lean_r62 lean_s1327
have lean_s1329 : let316 := by timed trueElim lean_s1328
let lean_s1330 := by timed congr lean_s1314 lean_s1329
have lean_s1331 : (Eq let6 let6) := by timed rfl
let lean_s1332 := by timed congr lean_s1330 lean_s1331
let lean_s1333 := by timed congr lean_s1323 lean_s1332
have lean_s1334 : (Eq let827 let826) := by timed congr lean_s1316 lean_s1333
have lean_s1335 : let826 := by timed eqResolve lean_s1313 lean_s1334
have lean_s1336 : (Or let46 (Or let50 (Or let6 let825))) := by permutateOr lean_s1335, [1, 2, 3, 0], (- 1)
let lean_s1337 := by R2 lean_s1308, lean_s1336, let6, [(- 1), (- 1)]
have lean_s1338 : let47 := by andElim lean_s1194, 1
let lean_s1339 := by R1 lean_s1337, lean_s1338, let46, [(- 1), 0]
have lean_s1340 : let474 := by andElim lean_s1194, 2
let lean_s1341 := by R2 lean_s1339, lean_s1340, let474, [(- 1), 0]
have lean_s1342 : (Or let746 (Or let748 (Or let544 (Or let313 let754)))) :=
  (scope (fun lean_a260 : let40 =>
    (scope (fun lean_a261 : let25 =>
      (scope (fun lean_a262 : let13 =>
        (scope (fun lean_a263 : let50 =>
          have lean_s1342 : let784 := by timed Eq.symm lean_r52
          have lean_s1343 : let300 := by timed eqResolve lean_a263 lean_s1342
          have lean_s1344 : let785 := by timed And.intro lean_s1343 lean_a261
          have lean_s1345 : let788 :=
            (scope (fun lean_a261 : let300 =>
              (scope (fun lean_a262 : let25 =>
                have lean_s1345 : let790 := by timed Eq.symm lean_a262
                have lean_s1346 : let782 := by timed Eq.symm lean_a261
                have lean_s1347 : let300 := by timed Eq.symm lean_s1346
                have lean_s1348 : let789 := by timed flipCongrArg lean_s1347 [xx5fcount]
                have lean_s1349 : let753 := by timed Eq.trans lean_s1345 lean_s1348
                show let753 from lean_s1349
            ))))
          have lean_s1346 : let786 := by liftOrNToImp lean_s1345, 2
          have lean_s1347 : let753 := by timed modusPonens lean_s1344 lean_s1346
          have lean_s1348 : let776 := by timed And.intro lean_s1343 lean_a260
          have lean_s1349 : let780 :=
            (scope (fun lean_a262 : let300 =>
              (scope (fun lean_a263 : let40 =>
                have lean_s1349 : let783 := by timed Eq.symm lean_a263
                have lean_s1350 : let782 := by timed Eq.symm lean_a262
                have lean_s1351 : let300 := by timed Eq.symm lean_s1350
                have lean_s1352 : let781 := by timed flipCongrArg lean_s1351 [sx5fcount]
                have lean_s1353 : let752 := by timed Eq.trans lean_s1349 lean_s1352
                show let752 from lean_s1353
            ))))
          have lean_s1350 : let777 := by liftOrNToImp lean_s1349, 2
          have lean_s1351 : let752 := by timed modusPonens lean_s1348 lean_s1350
          let lean_s1352 := by timed And.intro lean_s1347 lean_s1351
          have lean_s1353 : let754 := by timed And.intro lean_a262 lean_s1352
          show let754 from lean_s1353
  ))))))))
have lean_s1343 : let755 := by liftOrNToImp lean_s1342, 4
have lean_s1344 : (Eq let592 let592) := by timed rfl
let lean_s1345 := by timed flipCongrArg lean_s1344 [Implies]
have lean_s1346 : let756 := by timed falseIntro lean_s1299
have lean_s1347 : (Eq let755 let594) := by timed congr lean_s1345 lean_s1346
have lean_s1348 : (Eq let755 let593) := by timed Eq.trans lean_s1347 lean_r218
have lean_s1349 : let593 := by timed eqResolve lean_s1343 lean_s1348
have lean_s1350 : (Or let746 let751) := by timed flipNotAnd lean_s1349 [let40, let25, let13, let50]
have lean_s1351 : (Or let544 (Or let746 let749)) := by permutateOr lean_s1350, [2, 0, 1, 3], (- 1)
let lean_s1352 := by R1 lean_s1341, lean_s1351, let50, [(- 1), (- 1)]
have lean_s1353 : (Or let746 (Or let748 (Or let835 let834))) := by R2 lean_s1352, lean_s1221, let13, [(- 1), 0]
have lean_s1354 : (Or let746 (Or let748 let835)) := by factor lean_s1353, 4
have lean_s1355 : (Or let746 (Or let745 (Or let748 (Or let831 let834)))) := by R1 lean_s1288, lean_s1354, let19, [(- 1), (- 1)]
have lean_s1356 : (Or let746 let833) := by factor lean_s1355, 5
have lean_s1357 : (Or let745 (Or let748 (Or let831 let833))) := by R1 lean_s1273, lean_s1356, let40, [(- 1), (- 1)]
have lean_s1358 : let833 := by factor lean_s1357, (- 1)
have lean_s1359 : (Or let745 (Or let831 let832)) := by R1 lean_s1249, lean_s1358, let25, [(- 1), (- 1)]
have lean_s1360 : let832 := by factor lean_s1359, (- 1)
let lean_s1361 := by R1 lean_s1336, lean_s1338, let46, [(- 1), 0]
have lean_s1362 : (Or let811 (Or let748 (Or let544 (Or let313 let813)))) :=
  (scope (fun lean_a262 : let27 =>
    (scope (fun lean_a263 : let25 =>
      (scope (fun lean_a264 : let13 =>
        (scope (fun lean_a265 : let50 =>
          have lean_s1362 : let784 := by timed Eq.symm lean_r52
          have lean_s1363 : let300 := by timed eqResolve lean_a265 lean_s1362
          have lean_s1364 : let785 := by timed And.intro lean_s1363 lean_a263
          have lean_s1365 : let788 :=
            (scope (fun lean_a262 : let300 =>
              (scope (fun lean_a263 : let25 =>
                have lean_s1365 : let790 := by timed Eq.symm lean_a263
                have lean_s1366 : let782 := by timed Eq.symm lean_a262
                have lean_s1367 : let300 := by timed Eq.symm lean_s1366
                have lean_s1368 : let789 := by timed flipCongrArg lean_s1367 [xx5fcount]
                have lean_s1369 : let753 := by timed Eq.trans lean_s1365 lean_s1368
                show let753 from lean_s1369
            ))))
          have lean_s1366 : let786 := by liftOrNToImp lean_s1365, 2
          have lean_s1367 : let753 := by timed modusPonens lean_s1364 lean_s1366
          have lean_s1368 : let822 := by timed And.intro lean_s1363 lean_a262
          have lean_s1369 : (Or let779 let823) :=
            (scope (fun lean_a262 : let300 =>
              (scope (fun lean_a263 : let27 =>
                have lean_s1369 : let824 := by timed Eq.symm lean_a263
                have lean_s1370 : let782 := by timed Eq.symm lean_a262
                have lean_s1371 : let300 := by timed Eq.symm lean_s1370
                have lean_s1372 : let781 := by timed flipCongrArg lean_s1371 [sx5fcount]
                have lean_s1373 : let812 := by timed Eq.trans lean_s1369 lean_s1372
                show let812 from lean_s1373
            ))))
          have lean_s1370 : (Implies let822 let812) := by liftOrNToImp lean_s1369, 2
          have lean_s1371 : let812 := by timed modusPonens lean_s1368 lean_s1370
          let lean_s1372 := by timed And.intro lean_s1367 lean_s1371
          have lean_s1373 : let813 := by timed And.intro lean_a264 lean_s1372
          show let813 from lean_s1373
  ))))))))
have lean_s1363 : let814 := by liftOrNToImp lean_s1362, 4
have lean_s1364 : (Eq let60 let60) := by timed rfl
let lean_s1365 := by timed flipCongrArg lean_s1364 [Implies]
have lean_s1366 : let815 := by timed falseIntro lean_s5
have lean_s1367 : (Eq let814 let62) := by timed congr lean_s1365 lean_s1366
have lean_s1368 : (Eq let814 let61) := by timed Eq.trans lean_s1367 lean_r10
have lean_s1369 : let61 := by timed eqResolve lean_s1363 lean_s1368
have lean_s1370 : (Or let811 let751) := by timed flipNotAnd lean_s1369 [let27, let25, let13, let50]
have lean_s1371 : (Or let544 (Or let811 let749)) := by permutateOr lean_s1370, [2, 0, 1, 3], (- 1)
let lean_s1372 := by R2 lean_s1371, lean_s1221, let13, [(- 1), 0]
let lean_s1373 := by R2 lean_s1372, lean_s1197, let25, [(- 1), (- 1)]
let lean_s1374 := by R1 lean_s1373, lean_s1199, let450, [(- 1), (- 1)]
let lean_s1375 := by R1 lean_s1374, lean_s1241, let394, [(- 1), (- 1)]
let lean_s1376 := by R2 lean_s1375, lean_s1269, let27, [(- 1), (- 1)]
have lean_s1377 : (Or let313 let806) := by R2 lean_s1376, lean_s1235, let366, [(- 1), (- 1)]
have lean_s1378 : (Or let313 let805) := by factor lean_s1377, (- 1)
let lean_s1379 := by R2 lean_s1378, lean_s1229, let463, [(- 1), (- 1)]
have lean_s1380 : (Or let746 (Or let792 (Or let544 (Or let313 let794)))) :=
  (scope (fun lean_a262 : let40 =>
    (scope (fun lean_a263 : let152 =>
      (scope (fun lean_a264 : let13 =>
        (scope (fun lean_a265 : let50 =>
          have lean_s1380 : let784 := by timed Eq.symm lean_r52
          have lean_s1381 : let300 := by timed eqResolve lean_a265 lean_s1380
          have lean_s1382 : let802 := by timed And.intro lean_s1381 lean_a263
          have lean_s1383 : (Or let779 let803) :=
            (scope (fun lean_a262 : let300 =>
              (scope (fun lean_a263 : let152 =>
                have lean_s1383 : let804 := by timed Eq.symm lean_a263
                have lean_s1384 : let782 := by timed Eq.symm lean_a262
                have lean_s1385 : let300 := by timed Eq.symm lean_s1384
                have lean_s1386 : let789 := by timed flipCongrArg lean_s1385 [xx5fcount]
                have lean_s1387 : let793 := by timed Eq.trans lean_s1383 lean_s1386
                show let793 from lean_s1387
            ))))
          have lean_s1384 : (Implies let802 let793) := by liftOrNToImp lean_s1383, 2
          have lean_s1385 : let793 := by timed modusPonens lean_s1382 lean_s1384
          have lean_s1386 : let776 := by timed And.intro lean_s1381 lean_a262
          have lean_s1387 : let780 :=
            (scope (fun lean_a262 : let300 =>
              (scope (fun lean_a263 : let40 =>
                have lean_s1387 : let783 := by timed Eq.symm lean_a263
                have lean_s1388 : let782 := by timed Eq.symm lean_a262
                have lean_s1389 : let300 := by timed Eq.symm lean_s1388
                have lean_s1390 : let781 := by timed flipCongrArg lean_s1389 [sx5fcount]
                have lean_s1391 : let752 := by timed Eq.trans lean_s1387 lean_s1390
                show let752 from lean_s1391
            ))))
          have lean_s1388 : let777 := by liftOrNToImp lean_s1387, 2
          have lean_s1389 : let752 := by timed modusPonens lean_s1386 lean_s1388
          let lean_s1390 := by timed And.intro lean_s1385 lean_s1389
          have lean_s1391 : let794 := by timed And.intro lean_a264 lean_s1390
          show let794 from lean_s1391
  ))))))))
have lean_s1381 : let795 := by liftOrNToImp lean_s1380, 4
have lean_s1382 : (Eq let292 let292) := by timed rfl
let lean_s1383 := by timed flipCongrArg lean_s1382 [Implies]
have lean_s1384 : let796 := by timed falseIntro lean_s1214
have lean_s1385 : (Eq let795 let294) := by timed congr lean_s1383 lean_s1384
have lean_s1386 : (Eq let795 let293) := by timed Eq.trans lean_s1385 lean_r46
have lean_s1387 : let293 := by timed eqResolve lean_s1381 lean_s1386
have lean_s1388 : (Or let746 (Or let792 let750)) := by timed flipNotAnd lean_s1387 [let40, let152, let13, let50]
have lean_s1389 : (Or let544 (Or let746 (Or let792 let313))) := by permutateOr lean_s1388, [2, 0, 1, 3], (- 1)
let lean_s1390 := by R2 lean_s1389, lean_s1221, let13, [(- 1), 0]
let lean_s1391 := by R2 lean_s1390, lean_s1244, let152, [(- 1), (- 1)]
let lean_s1392 := by R2 lean_s1391, lean_s1197, let450, [(- 1), (- 1)]
let lean_s1393 := by R1 lean_s1392, lean_s1351, let25, [(- 1), (- 1)]
have lean_s1394 : (Or let746 (Or let313 let747)) := by R2 lean_s1393, lean_s1221, let13, [(- 1), 0]
have lean_s1395 : let747 := by factor lean_s1394, (- 1)
have lean_s1396 : (Or let313 let313) := by R1 lean_s1379, lean_s1395, let40, [(- 1), (- 1)]
have lean_s1397 : let313 := by factor lean_s1396, 1
let lean_s1398 := by R1 lean_s1361, lean_s1397, let50, [(- 1), 0]
have lean_s1399 : let6 := by R2 lean_s1398, lean_s1340, let474, [(- 1), 0]
have lean_s1400 : let745 := by R2 lean_s1360, lean_s1399, let6, [(- 1), 0]
have lean_s1401 : let461 := by R1 lean_s1208, lean_s1400, let23, [(- 1), 0]
have lean_s1402 : let446 := by R2 lean_s1205, lean_s1401, let461, [(- 1), 0]
have lean_s1403 : let807 := by R2 lean_s1203, lean_s1402, let446, [(- 1), 0]
have lean_s1404 : let791 := by R1 lean_s1199, lean_s1403, let394, [(- 1), 0]
have lean_s1405 : let25 := by R1 lean_s1197, lean_s1404, let450, [(- 1), 0]
let lean_s1406 := by R2 lean_s11, lean_s1405, let25, [(- 1), 0]
have lean_s1407 : let808 := by R2 lean_s1266, lean_s1402, let446, [(- 1), 0]
have lean_s1408 : let805 := by R1 lean_s1235, lean_s1407, let366, [(- 1), 0]
have lean_s1409 : let40 := by R1 lean_s1229, lean_s1408, let463, [(- 1), 0]
let lean_s1410 := by R2 lean_s1406, lean_s1409, let40, [(- 1), 0]
let lean_s1411 := by R2 lean_s1410, lean_s1399, let6, [(- 1), 0]
have lean_s1412 : let39 := by R2 lean_s1291, lean_s1401, let461, [(- 1), 0]
let lean_s1413 := by R2 lean_s1411, lean_s1412, let39, [(- 1), 0]
have lean_s1414 : (Or let743 let445) := by timed @cnfAndPos [let446, let445] 1
have lean_s1415 : (Or let445 let743) := by permutateOr lean_s1414, [1, 0], (- 1)
have lean_s1416 : let881 :=
  (scope (fun lean_a262 : let445 =>
    have lean_s1416 : let881 :=
      (scope (fun lean_a263 : let445 =>
        have lean_s1416 : let560 := by timed Eq.symm lean_a263
        have lean_s1417 : let445 := by timed Eq.symm lean_s1416
        let lean_s1418 := by timed flipCongrArg lean_s1417 [Eq]
        have lean_s1419 : let563 := by timed rfl
        have lean_s1420 : (Eq let378 let354) := by timed congr lean_s1418 lean_s1419
        have lean_s1421 : (Eq let355 let63) := by timed flipCongrArg lean_r87 [Not]
        have lean_s1422 : (Eq let355 True) := by timed Eq.trans lean_s1421 lean_r11
        have lean_s1423 : (Eq let356 True) := by timed Eq.trans lean_r84 lean_s1422
        have lean_s1424 : let356 := by timed trueElim lean_s1423
        have lean_s1425 : (Eq let378 False) := by timed Eq.trans lean_s1420 lean_s1424
        have lean_s1426 : let880 := by timed falseElim lean_s1425
        show let880 from lean_s1426
      ))
    have lean_s1417 : let882 := by liftOrNToImp lean_s1416, 1
    have lean_s1418 : let880 := by timed modusPonens lean_a262 lean_s1417
    show let880 from lean_s1418
  ))
have lean_s1417 : let882 := by liftOrNToImp lean_s1416, 1
have lean_s1418 : let881 := by timed impliesElim lean_s1417
have lean_s1419 : (Or let880 let744) := by permutateOr lean_s1418, [1, 0], (- 1)
have lean_s1420 : (Or let856 let378) := by timed @cnfAndPos [let446, let378] 1
have lean_s1421 : (Or let378 let856) := by permutateOr lean_s1420, [1, 0], (- 1)
have lean_s1422 : let378 := by R2 lean_s1421, lean_s1401, let461, [(- 1), 0]
have lean_s1423 : let744 := by R2 lean_s1419, lean_s1422, let378, [(- 1), 0]
have lean_s1424 : let743 := by R1 lean_s1415, lean_s1423, let445, [(- 1), 0]
have lean_s1425 : let19 := by R1 lean_s1225, lean_s1424, let447, [(- 1), 0]
let lean_s1426 := by R2 lean_s1413, lean_s1425, let19, [(- 1), 0]
exact (show False from by R2 lean_s1426, lean_s1221, let13, [0, 0])


