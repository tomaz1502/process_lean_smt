open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {arg0 : Int}
variable {fmt0 : Int}
variable {percent : Int}
variable {fmt1 : Int}
variable {selectx5fformat : (Int -> Int)}
variable {s : Int}
variable {adrx5flo : Int}
variable {adrx5fmedlo : Int}
variable {adrx5fmedhi : Int}
variable {selectx5fformat : (Int -> Int)}
variable {adrx5fmedlo : Int}
variable {xx5fcount : (Int -> Int)}
variable {arg1 : Int}
variable {distance : Int}
variable {adrx5fhi : Int}
variable {fmt0 : Int}
variable {arg0 : Int}
variable {fmtx5flength : Int}
variable {fmtx5flength : Int}
variable {distance : Int}
variable {adrx5fmedhi : Int}
variable {x : Int}
variable {adrx5fhi : Int}
variable {s : Int}
variable {arg1 : Int}
variable {adrx5flo : Int}
variable {x : Int}
variable {fmt1 : Int}
variable {percent : Int}

theorem th0 :
  let let1 := (Int.ofNat 2)
  let let2 := (sx5fcount let1)
  let let3 := (Eq let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 let2)
  let let7 := (Eq let4 let6)
  let let8 := (Rat.ofInt 2)
  let let9 := (Neg.neg let8)
  let let10 := (Neg.neg (Rat.ofInt 4))
  let let11 := (Rat.ofInt 0)
  let let12 := (binrel% HAdd.hAdd let11 let10)
  let let13 := (binrel% HAdd.hAdd let8 let12)
  let let14 := (Int.ofNat 4)
  let let15 := (Eq fmt1 let14)
  let let16 := (Neg.neg let1)
  let let17 := (binrel% HAdd.hAdd let16 fmt1)
  let let18 := (xx5fcount let17)
  let let19 := (sx5fcount let17)
  let let20 := (binrel% HAdd.hAdd let19 let18)
  let let21 := (binrel% GE.ge let20 let14)
  let let22 := (And let21 let15)
  let let23 := (xx5fcount let1)
  let let24 := (xx5fcount let4)
  let let25 := (Eq let24 let23)
  let let26 := (And let25 let22)
  let let27 := (Int.ofNat 0)
  let let28 := (xx5fcount let27)
  let let29 := (Eq let28 let24)
  let let30 := (And let29 let26)
  let let31 := (sx5fcount let4)
  let let32 := (Eq let31 let6)
  let let33 := (sx5fcount let27)
  let let34 := (Eq let33 let31)
  let let35 := (And let34 (And let32 let30))
  let let36 := (Eq let28 let27)
  let let37 := (And let36 let35)
  let let38 := (Eq let33 let4)
  let let39 := (And let38 let37)
  let let40 := (Not let39)
  let let41 := (Implies let39 False)
  let let42 := (binrel% HAdd.hAdd let5 let23)
  let let43 := (Eq let24 let42)
  let let44 := (Eq let31 let2)
  let let45 := (And let34 (And let44 (And let29 (And let43 let22))))
  let let46 := (And let36 let45)
  let let47 := (And let38 let46)
  let let48 := (Not let47)
  let let49 := (Implies let47 False)
  let let50 := (Int.ofNat 120)
  let let51 := (Int.ofNat 115)
  let let52 := (Eq let51 let50)
  let let53 := (Not let52)
  let let54 := (Eq let52 False)
  let let55 := (Eq let23 let1)
  let let56 := (Eq let4 let42)
  let let57 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let8 let10))
  let let58 := (Eq let28 let4)
  let let59 := (Eq let33 let27)
  let let60 := (And let59 (And let58 let45))
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (Rat.ofInt 1)
  let let64 := (binrel% HAdd.hAdd let63 let10)
  let let65 := (binrel% HAdd.hAdd let63 let64)
  let let66 := (And let59 (And let58 let35))
  let let67 := (Not let66)
  let let68 := (Implies let66 False)
  let let69 := (And let44 let30)
  let let70 := (And let34 let69)
  let let71 := (And let59 (And let58 let70))
  let let72 := (Not let71)
  let let73 := (Implies let71 False)
  let let74 := (Eq fmt1 let1)
  let let75 := (And let21 let74)
  let let76 := (And let59 (And let58 let75))
  let let77 := (Not let76)
  let let78 := (Implies let76 False)
  let let79 := (Int.ofNat 3)
  let let80 := (Eq fmt1 let79)
  let let81 := (And let21 let80)
  let let82 := (And let29 let81)
  let let83 := (And let34 let82)
  let let84 := (And let59 (And let58 let83))
  let let85 := (Not let84)
  let let86 := (Implies let84 False)
  let let87 := (Int.ofNat 37)
  let let88 := (Eq let87 let50)
  let let89 := (Eq let88 False)
  let let90 := (selectx5fformat let79)
  let let91 := (Eq x let90)
  let let92 := (Eq let90 x)
  let let93 := (binrel% HAdd.hAdd let4 let24)
  let let94 := (Eq let23 let93)
  let let95 := (xx5fcount let79)
  let let96 := (Eq let23 let95)
  let let97 := (Eq let95 let23)
  let let98 := (And let36 let75)
  let let99 := (And let38 let98)
  let let100 := (Not let99)
  let let101 := (Implies let99 False)
  let let102 := (Eq adrx5fmedlo let90)
  let let103 := (Eq let90 adrx5fmedlo)
  let let104 := (binrel% HAdd.hAdd let4 let95)
  let let105 := (binrel% HAdd.hAdd let95 let4)
  let let106 := (binrel% HMul.hMul let5 let18)
  let let107 := (Eq let19 (binrel% HAdd.hAdd let14 let106))
  let let108 := (binrel% HMul.hMul let14 let18)
  let let109 := (binrel% HMul.hMul let14 let19)
  let let110 := (binrel% HAdd.hAdd let109 let108)
  let let111 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 16)) let110)
  let let112 := (Eq let27 let111)
  let let113 := (selectx5fformat let14)
  let let114 := (Eq adrx5fmedlo let113)
  let let115 := (Eq let113 adrx5fmedlo)
  let let116 := (Eq adrx5fhi let113)
  let let117 := (Eq let113 adrx5fhi)
  let let118 := (Int.ofNat 5)
  let let119 := (selectx5fformat let118)
  let let120 := (Eq percent let119)
  let let121 := (Eq let119 percent)
  let let122 := (xx5fcount let118)
  let let123 := (xx5fcount let14)
  let let124 := (Eq let123 (binrel% HAdd.hAdd let5 let122))
  let let125 := (binrel% HAdd.hAdd let4 let123)
  let let126 := (Eq let122 let125)
  let let127 := (binrel% HAdd.hAdd let4 fmt1)
  let let128 := (selectx5fformat let127)
  let let129 := (Eq let128 let51)
  let let130 := (Eq let51 let128)
  let let131 := (Eq fmt0 arg1)
  let let132 := (Eq arg1 fmt0)
  let let133 := (Eq let31 let33)
  let let134 := (Eq x let113)
  let let135 := (Eq let113 x)
  let let136 := (binrel% HAdd.hAdd let5 let24)
  let let137 := (Eq let28 let136)
  let let138 := (And let59 (And let36 (And let34 (And let137 let81))))
  let let139 := (Not let138)
  let let140 := (Implies let138 False)
  let let141 := (Int.ofNat 6)
  let let142 := (selectx5fformat let141)
  let let143 := (Eq x let142)
  let let144 := (Eq let142 x)
  let let145 := (Eq s let128)
  let let146 := (Eq let128 s)
  let let147 := (selectx5fformat let4)
  let let148 := (Eq let147 let87)
  let let149 := (Eq let87 let147)
  let let150 := (sx5fcount let14)
  let let151 := (sx5fcount let79)
  let let152 := (Eq let151 let150)
  let let153 := (Eq let150 let151)
  let let154 := (Rat.ofInt let19)
  let let155 := (binrel% HMul.hMul let63 let19)
  let let156 := (Eq let51 let87)
  let let157 := (Not let156)
  let let158 := (Eq let156 False)
  let let159 := (Eq let14 let14)
  let let160 := (binrel% HAdd.hAdd let4 let23)
  let let161 := (binrel% HAdd.hAdd let23 let4)
  let let162 := (Eq let4 let4)
  let let163 := (selectx5fformat let1)
  let let164 := (Eq let163 let51)
  let let165 := (Eq let51 let163)
  let let166 := (Eq s let90)
  let let167 := (Eq let90 s)
  let let168 := (Eq let87 let87)
  let let169 := (binrel% HAdd.hAdd let16 arg1)
  let let170 := (Eq fmt0 let169)
  let let171 := (binrel% HAdd.hAdd let1 fmt0)
  let let172 := (Eq arg1 let171)
  let let173 := (Eq let2 let31)
  let let174 := (binrel% HAdd.hAdd let5 let31)
  let let175 := (Eq let33 let174)
  let let176 := (And let59 (And let36 (And let175 let69)))
  let let177 := (Not let176)
  let let178 := (Implies let176 False)
  let let179 := (Eq let50 let51)
  let let180 := (Eq let179 False)
  let let181 := (Eq let23 let4)
  let let182 := (Eq let27 let42)
  let let183 := (Eq let50 let50)
  let let184 := (binrel% HAdd.hAdd let4 let31)
  let let185 := (Eq let2 let184)
  let let186 := (And let59 (And let36 (And let34 (And let44 (And let137 let26)))))
  let let187 := (Not let186)
  let let188 := (Implies let186 False)
  let let189 := (Int.ofNat 15)
  let let190 := (Neg.neg let189)
  let let191 := (binrel% HAdd.hAdd let190 let189)
  let let192 := (Neg.neg let14)
  let let193 := (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd (binrel% HMul.hMul let192 let19) (binrel% HMul.hMul let192 let18)))
  let let194 := (binrel% HAdd.hAdd let27 let193)
  let let195 := (binrel% HAdd.hAdd let4 let2)
  let let196 := (binrel% HAdd.hAdd let2 let4)
  let let197 := (Not let21)
  let let198 := (Not let197)
  let let199 := (And let59 let46)
  let let200 := (Not let199)
  let let201 := (Implies let199 False)
  let let202 := (Neg.neg let141)
  let let203 := (binrel% HAdd.hAdd let202 fmt1)
  let let204 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let27 let202))
  let let205 := (binrel% HAdd.hAdd fmt0 let118)
  let let206 := (Eq fmt1 let205)
  let let207 := (binrel% HAdd.hAdd fmt0 let14)
  let let208 := (Eq fmt1 let207)
  let let209 := (binrel% HAdd.hAdd fmt0 let79)
  let let210 := (Eq fmt1 let209)
  let let211 := (binrel% HAdd.hAdd fmt0 let1)
  let let212 := (Eq fmt1 let211)
  let let213 := (binrel% HAdd.hAdd fmt0 let4)
  let let214 := (Eq fmt1 let213)
  let let215 := (binrel% HAdd.hAdd fmt0 let27)
  let let216 := (Eq fmt1 let215)
  let let217 := (Or let216 (Or let214 (Or let212 (Or let210 (Or let208 let206)))))
  let let218 := (Or (Or (Or (Or (Or let216 let214) let212) let210) let208) let206)
  let let219 := (binrel% HAdd.hAdd let1 arg1)
  let let220 := (binrel% HAdd.hAdd arg1 let1)
  let let221 := (Eq let90 let50)
  let let222 := (Eq let50 let90)
  let let223 := (Eq let50 let87)
  let let224 := (Not let223)
  let let225 := (Eq let223 False)
  let let226 := (binrel% LE.le let11 let9)
  let let227 := (binrel% HMul.hMul let5 let190)
  let let228 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let110)
  let let229 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let202 let190)))))
  let let230 := (Eq adrx5fmedhi let147)
  let let231 := (Eq let147 adrx5fmedhi)
  let let232 := (binrel% GE.ge let20 let118)
  let let233 := (binrel% GE.ge let228 let192)
  let let234 := (binrel% HAdd.hAdd let190 let110)
  let let235 := (Eq let27 let234)
  let let236 := (selectx5fformat let27)
  let let237 := (Eq let236 let4)
  let let238 := (Eq let4 let236)
  let let239 := (binrel% HMul.hMul let5 let4)
  let let240 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let241 := (binrel% HAdd.hAdd let240 let239)
  let let242 := (binrel% HSub.hSub let240 let4)
  let let243 := (selectx5fformat let234)
  let let244 := (Eq let243 let14)
  let let245 := (Eq let14 let243)
  let let246 := (selectx5fformat fmt1)
  let let247 := (Eq percent let246)
  let let248 := (Eq let246 percent)
  let let249 := (binrel% HMul.hMul let63 let1)
  let let250 := (binrel% GE.ge let193 let4)
  let let251 := (binrel% GT.gt let63 let27)
  let let252 := (binrel% HAdd.hAdd let5 let234)
  let let253 := (And let59 let98)
  let let254 := (Not let253)
  let let255 := (Implies let253 False)
  let let256 := (binrel% HAdd.hAdd fmt1 let4)
  let let257 := (Eq let252 let111)
  let let258 := (Eq let113 let87)
  let let259 := (Eq let87 let113)
  let let260 := (binrel% HMul.hMul let5 let189)
  let let261 := (binrel% HAdd.hAdd let227 let260)
  let let262 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 let261)))
  let let263 := (binrel% HAdd.hAdd let234 let261)
  let let264 := (binrel% HAdd.hAdd fmt1 let27)
  let let265 := (binrel% HAdd.hAdd let16 let234)
  let let266 := (Eq arg0 let190)
  let let267 := (binrel% HAdd.hAdd let189 arg0)
  let let268 := (Eq let27 let267)
  let let269 := (binrel% HAdd.hAdd let79 let27)
  let let270 := (Eq x let236)
  let let271 := (Eq let236 x)
  let let272 := (binrel% HAdd.hAdd let24 let4)
  let let273 := (Eq adrx5fmedlo let236)
  let let274 := (Eq let236 adrx5fmedlo)
  let let275 := (Eq let90 let4)
  let let276 := (Eq let4 let90)
  let let277 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let110)
  let let278 := (Eq let265 let277)
  let let279 := (binrel% HAdd.hAdd let5 arg1)
  let let280 := (Eq fmt0 let279)
  let let281 := (binrel% HAdd.hAdd let4 fmt0)
  let let282 := (Eq arg1 let281)
  let let283 := (binrel% HAdd.hAdd let31 let4)
  let let284 := (Eq let147 let51)
  let let285 := (Eq let51 let147)
  let let286 := (Not let15)
  let let287 := (Not let286)
  let let288 := (Eq let287 let15)
  let let289 := (binrel% HAdd.hAdd let4 arg1)
  let let290 := (selectx5fformat let289)
  let let291 := (Eq adrx5fmedlo let290)
  let let292 := (Eq let290 adrx5fmedlo)
  let let293 := (binrel% HSub.hSub fmt1 let1)
  let let294 := (binrel% HSub.hSub let293 fmt0)
  let let295 := (xx5fcount let294)
  let let296 := (binrel% HMul.hMul let14 let295)
  let let297 := (sx5fcount let294)
  let let298 := (binrel% HMul.hMul let14 let297)
  let let299 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let298 let296))
  let let300 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let298) let296)
  let let301 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let5 let19) let106))
  let let302 := (Neg.neg let63)
  let let303 := (binrel% HMul.hMul let302 let20)
  let let304 := (Eq let27 let277)
  let let305 := (Eq adrx5fmedlo let119)
  let let306 := (Eq let119 adrx5fmedlo)
  let let307 := (And let36 let70)
  let let308 := (And let59 let307)
  let let309 := (Not let308)
  let let310 := (Implies let308 False)
  let let311 := (binrel% HAdd.hAdd let4 let234)
  let let312 := (Eq let163 let14)
  let let313 := (Eq let14 let163)
  let let314 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 12)) let110)
  let let315 := (selectx5fformat let314)
  let let316 := (Eq let315 let4)
  let let317 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let110)
  let let318 := (selectx5fformat let317)
  let let319 := (Eq let318 let14)
  let let320 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let110)
  let let321 := (selectx5fformat let320)
  let let322 := (Eq let321 let4)
  let let323 := (Eq let246 let87)
  let let324 := (And let323 (And let129 (And let244 (And let322 (And let319 let316)))))
  let let325 := (Not let324)
  let let326 := (Eq fmt1 let118)
  let let327 := (Eq fmt1 let4)
  let let328 := (Eq fmt1 let27)
  let let329 := (Or let328 (Or let327 (Or let74 (Or let80 (Or let15 let326)))))
  let let330 := (Eq let123 let122)
  let let331 := (Eq let142 let50)
  let let332 := (Eq let119 let87)
  let let333 := (And let332 let331)
  let let334 := (smtIte let333 let124 let330 Prop)
  let let335 := (Eq let95 let123)
  let let336 := (Eq let95 (binrel% HAdd.hAdd let5 let123))
  let let337 := (Eq let119 let50)
  let let338 := (And let258 let337)
  let let339 := (smtIte let338 let336 let335 Prop)
  let let340 := (Eq let23 (binrel% HAdd.hAdd let5 let95))
  let let341 := (Eq let113 let50)
  let let342 := (Eq let90 let87)
  let let343 := (And let342 let341)
  let let344 := (smtIte let343 let340 let96 Prop)
  let let345 := (Eq let163 let87)
  let let346 := (And let345 let221)
  let let347 := (smtIte let346 let43 let25 Prop)
  let let348 := (Eq let163 let50)
  let let349 := (And let148 let348)
  let let350 := (smtIte let349 let137 let29 Prop)
  let let351 := (Eq let147 let50)
  let let352 := (Eq let236 let87)
  let let353 := (And let352 let351)
  let let354 := (smtIte let353 let58 let36 Prop)
  let let355 := (sx5fcount let118)
  let let356 := (Eq let150 let355)
  let let357 := (Eq let150 (binrel% HAdd.hAdd let5 let355))
  let let358 := (Eq let142 let51)
  let let359 := (And let332 let358)
  let let360 := (smtIte let359 let357 let356 Prop)
  let let361 := (Eq let151 (binrel% HAdd.hAdd let5 let150))
  let let362 := (Eq let119 let51)
  let let363 := (And let258 let362)
  let let364 := (smtIte let363 let361 let152 Prop)
  let let365 := (Eq let2 let151)
  let let366 := (Eq let2 (binrel% HAdd.hAdd let5 let151))
  let let367 := (Eq let113 let51)
  let let368 := (And let342 let367)
  let let369 := (smtIte let368 let366 let365 Prop)
  let let370 := (Eq let90 let51)
  let let371 := (And let345 let370)
  let let372 := (smtIte let371 let32 let44 Prop)
  let let373 := (And let148 let164)
  let let374 := (smtIte let373 let175 let34 Prop)
  let let375 := (And let352 let284)
  let let376 := (smtIte let375 let38 let59 Prop)
  let let377 := (Int.ofNat 255)
  let let378 := (Eq let119 let377)
  let let379 := (Eq let119 let4)
  let let380 := (Eq let119 let14)
  let let381 := (Eq let113 let377)
  let let382 := (Eq let113 let4)
  let let383 := (Eq let113 let14)
  let let384 := (Eq let90 let377)
  let let385 := (Eq let90 let14)
  let let386 := (Eq let163 let377)
  let let387 := (Eq let163 let4)
  let let388 := (Eq let147 let377)
  let let389 := (Eq let147 let4)
  let let390 := (Eq let147 let14)
  let let391 := (Eq let236 let377)
  let let392 := (Eq let236 let14)
  let let393 := (Eq let236 let50)
  let let394 := (Eq let236 let51)
  let let395 := (Or let352 (Or let394 (Or let393 (Or let392 (Or let237 (Or let392 (Or let237 (Or let391 (Or let148 (Or let284 (Or let351 (Or let390 (Or let389 (Or let390 (Or let389 (Or let388 (Or let345 (Or let164 (Or let348 (Or let312 (Or let387 (Or let312 (Or let387 (Or let386 (Or let342 (Or let370 (Or let221 (Or let385 (Or let275 (Or let385 (Or let275 (Or let384 (Or let258 (Or let367 (Or let341 (Or let383 (Or let382 (Or let383 (Or let382 (Or let381 (Or let332 (Or let362 (Or let337 (Or let380 (Or let379 (Or let380 (Or let379 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let396 := (And let395 (And let376 (And let374 (And let372 (And let369 (And let364 (And let360 (And let354 (And let350 (And let347 (And let344 (And let339 (And let334 (And let329 (And let107 let325)))))))))))))))
  let let397 := (Not let232)
  let let398 := (binrel% GE.ge fmt1 let1)
  let let399 := (binrel% GE.ge fmt1 let118)
  let let400 := (Not let399)
  let let401 := (And let21 (And let400 (And let398 (And let397 let396))))
  let let402 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let21 (And let400 (And let398 (And let21 (And let397 (And True let396)))))))))))))))))
  let let403 := (Eq let23 let24)
  let let404 := (Eq let14 let147)
  let let405 := (binrel% HAdd.hAdd let79 let234)
  let let406 := (Eq let51 let51)
  let let407 := (Eq let311 let320)
  let let408 := (Eq let4 let163)
  let let409 := (binrel% HAdd.hAdd let5 let240)
  let let410 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let5))
  let let411 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let189 let190))))
  let let412 := (Eq percent let147)
  let let413 := (Eq let147 percent)
  let let414 := (Eq let50 let119)
  let let415 := (Eq let95 let160)
  let let416 := (Eq let4 let315)
  let let417 := (binrel% HAdd.hAdd let79 arg1)
  let let418 := (binrel% HAdd.hAdd arg1 let79)
  let let419 := (binrel% HMul.hMul let5 let141)
  let let420 := (binrel% HAdd.hAdd let227 (binrel% HAdd.hAdd let419 let260))
  let let421 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 let420)))
  let let422 := (binrel% HAdd.hAdd let234 let420)
  let let423 := (binrel% HAdd.hAdd fmt1 let16)
  let let424 := (Eq let24 let28)
  let let425 := (Eq let119 adrx5fhi)
  let let426 := (Eq let119 adrx5fmedhi)
  let let427 := (Eq let119 adrx5flo)
  let let428 := (Eq let119 x)
  let let429 := (Eq let119 s)
  let let430 := (Eq let113 adrx5fmedhi)
  let let431 := (Eq let113 adrx5flo)
  let let432 := (Eq let113 s)
  let let433 := (Eq let113 percent)
  let let434 := (Eq let90 adrx5fhi)
  let let435 := (Eq let90 adrx5fmedhi)
  let let436 := (Eq let90 adrx5flo)
  let let437 := (Eq let90 percent)
  let let438 := (Eq let163 adrx5fhi)
  let let439 := (Eq let163 adrx5fmedhi)
  let let440 := (Eq let163 adrx5fmedlo)
  let let441 := (Eq let163 adrx5flo)
  let let442 := (Eq let163 x)
  let let443 := (Eq let163 s)
  let let444 := (Eq let163 percent)
  let let445 := (Eq let147 adrx5fhi)
  let let446 := (Eq let147 adrx5fmedlo)
  let let447 := (Eq let147 adrx5flo)
  let let448 := (Eq let147 x)
  let let449 := (Eq let147 s)
  let let450 := (Eq let236 adrx5fhi)
  let let451 := (Eq let236 adrx5fmedhi)
  let let452 := (Eq let236 adrx5flo)
  let let453 := (Eq let236 s)
  let let454 := (Eq let236 percent)
  let let455 := (Or let454 (Or let453 (Or let271 (Or let452 (Or let274 (Or let451 (Or let450 (Or let391 (Or let413 (Or let449 (Or let448 (Or let447 (Or let446 (Or let231 (Or let445 (Or let388 (Or let444 (Or let443 (Or let442 (Or let441 (Or let440 (Or let439 (Or let438 (Or let386 (Or let437 (Or let167 (Or let92 (Or let436 (Or let103 (Or let435 (Or let434 (Or let384 (Or let433 (Or let432 (Or let135 (Or let431 (Or let115 (Or let430 (Or let117 (Or let381 (Or let121 (Or let429 (Or let428 (Or let427 (Or let306 (Or let426 (Or let425 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let456 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let454 let453) let271) let452) let274) let451) let450) let391) let413) let449) let448) let447) let446) let231) let445) let388) let444) let443) let442) let441) let440) let439) let438) let386) let437) let167) let92) let436) let103) let435) let434) let384) let433) let432) let135) let431) let115) let430) let117) let381) let121) let429) let428) let427) let306) let426) let425) let378)
  let let457 := (Eq let14 let90)
  let let458 := (Not let74)
  let let459 := (Not let458)
  let let460 := (Eq let74 let459)
  let let461 := (Eq let459 let74)
  let let462 := (Eq let189 let189)
  let let463 := (binrel% HAdd.hAdd let14 let27)
  let let464 := (Eq let4 let147)
  let let465 := (Eq let405 let314)
  let let466 := (Neg.neg (Rat.ofInt 3))
  let let467 := (binrel% HAdd.hAdd let11 let64)
  let let468 := (Eq let1 let17)
  let let469 := (Eq let27 let27)
  let let470 := (Eq arg1 let211)
  let let471 := (Eq arg1 let213)
  let let472 := (Eq arg1 let215)
  let let473 := (Or let472 (Or let471 let470))
  let let474 := (Or (Or let472 let471) let470)
  let let475 := (selectx5fformat arg1)
  let let476 := (Eq adrx5flo let475)
  let let477 := (Eq let475 adrx5flo)
  let let478 := (binrel% HAdd.hAdd let1 let27)
  let let479 := (Eq let14 let119)
  let let480 := (Eq let14 let318)
  let let481 := (Eq let50 let142)
  let let482 := (binrel% LE.le let11 let466)
  let let483 := (binrel% HAdd.hAdd let118 let27)
  let let484 := (Eq adrx5fmedhi let236)
  let let485 := (binrel% GE.ge let203 let5)
  let let486 := (Eq let87 let119)
  let let487 := (binrel% HMul.hMul let5 fmt0)
  let let488 := (binrel% HAdd.hAdd fmt1 let487)
  let let489 := (binrel% HAdd.hAdd let16 let488)
  let let490 := (binrel% HAdd.hAdd let17 let487)
  let let491 := (Or False (Or let107 False))
  let let492 := (Eq let50 let113)
  let let493 := (binrel% HMul.hMul let5 let1)
  let let494 := (binrel% HAdd.hAdd fmt1 let493)
  let let495 := (Eq let87 let90)
  let let496 := (Eq let87 let163)
  let let497 := (Eq let122 let123)
  let let498 := (Eq let50 let163)
  let let499 := (Eq adrx5fmedhi let90)
  let let500 := (binrel% HAdd.hAdd let123 let4)
  let let501 := (Eq adrx5fhi let119)
  let let502 := (binrel% HAdd.hAdd let16 let264)
  let let503 := (Eq adrx5flo let119)
  let let504 := (Eq let50 let147)
  let let505 := (binrel% HAdd.hAdd arg0 distance)
  let let506 := (binrel% HAdd.hAdd let505 fmtx5flength)
  let let507 := (binrel% HSub.hSub let506 let14)
  let let508 := (binrel% GE.ge arg1 let507)
  let let509 := (Not let508)
  let let510 := (binrel% LT.lt arg1 let507)
  let let511 := (Eq s let119)
  let let512 := (Eq let87 let236)
  let let513 := (Eq let51 let142)
  let let514 := (Eq let151 let195)
  let let515 := (selectx5fformat let418)
  let let516 := (Eq let515 adrx5fhi)
  let let517 := (selectx5fformat let220)
  let let518 := (Eq let517 adrx5fmedhi)
  let let519 := (binrel% HAdd.hAdd arg1 let4)
  let let520 := (selectx5fformat let519)
  let let521 := (Eq let520 adrx5fmedlo)
  let let522 := (selectx5fformat let256)
  let let523 := (Eq let522 s)
  let let524 := (And let248 (And let523 (And let477 (And let521 (And let518 let516)))))
  let let525 := (And (And (And (And (And let248 let523) let477) let521) let518) let516)
  let let526 := (And let36 let83)
  let let527 := (And let59 let526)
  let let528 := (Not let527)
  let let529 := (Implies let527 False)
  let let530 := (Eq let4 let119)
  let let531 := (binrel% HMul.hMul let5 let234)
  let let532 := (Eq let51 let113)
  let let533 := (binrel% HMul.hMul let5 let14)
  let let534 := (binrel% HAdd.hAdd let506 let533)
  let let535 := (binrel% HAdd.hAdd let4 let27)
  let let536 := (binrel% LE.le let11 let10)
  let let537 := (Eq let4 let113)
  let let538 := (Eq s let147)
  let let539 := (Eq let51 let90)
  let let540 := (Eq let14 let113)
  let let541 := (selectx5fformat let417)
  let let542 := (Eq adrx5fhi let541)
  let let543 := (Eq let541 adrx5fhi)
  let let544 := (Eq let14 let236)
  let let545 := (binrel% GE.ge fmt1 let242)
  let let546 := (Not let545)
  let let547 := (binrel% LT.lt fmt1 let242)
  let let548 := (binrel% HAdd.hAdd let118 fmt0)
  let let549 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let239))
  let let550 := (binrel% HAdd.hAdd let1 let234)
  let let551 := (Eq let550 let317)
  let let552 := (Eq let50 let236)
  let let553 := (binrel% HMul.hMul let5 arg1)
  let let554 := (binrel% HAdd.hAdd fmt0 let553)
  let let555 := (binrel% GE.ge let554 let4)
  let let556 := (Not let555)
  let let557 := (binrel% GE.ge arg1 fmt0)
  let let558 := (binrel% HAdd.hAdd let79 fmt0)
  let let559 := (binrel% GE.ge let234 let27)
  let let560 := (selectx5fformat let219)
  let let561 := (Eq adrx5fmedhi let560)
  let let562 := (Eq let560 adrx5fmedhi)
  let let563 := (Eq let4 let321)
  let let564 := (Eq let234 let234)
  let let565 := (Eq percent let163)
  let let566 := (binrel% HAdd.hAdd let4 let28)
  let let567 := (Eq let24 let566)
  let let568 := (binrel% HAdd.hAdd let293 let487)
  let let569 := (binrel% HAdd.hAdd let28 let4)
  let let570 := (Eq x let163)
  let let571 := (Eq x let147)
  let let572 := (binrel% HMul.hMul let63 let27)
  let let573 := (And let38 let307)
  let let574 := (Not let573)
  let let575 := (Implies let573 False)
  let let576 := (Eq percent let236)
  let let577 := (Not let179)
  let let578 := (binrel% HAdd.hAdd let4 let150)
  let let579 := (Eq let355 let578)
  let let580 := (Eq let87 let246)
  let let581 := (Rat.ofInt let18)
  let let582 := (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let581 let301))
  let let583 := (binrel% HAdd.hAdd let150 let4)
  let let584 := (Eq s let142)
  let let585 := (Eq let142 s)
  let let586 := (binrel% HAdd.hAdd let4 let151)
  let let587 := (Eq let150 let586)
  let let588 := (binrel% HMul.hMul let5 distance)
  let let589 := (binrel% HMul.hMul let5 fmtx5flength)
  let let590 := (binrel% HMul.hMul let5 arg0)
  let let591 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let590 (binrel% HAdd.hAdd let589 let588)))
  let let592 := (binrel% GE.ge let591 let192)
  let let593 := (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let594 := (binrel% GE.ge arg1 let593)
  let let595 := (Eq percent let90)
  let let596 := (Eq let31 let4)
  let let597 := (Eq let27 let174)
  let let598 := (binrel% HAdd.hAdd let151 let4)
  let let599 := (Not let88)
  let let600 := (Eq let151 let2)
  let let601 := (binrel% GE.ge let488 let1)
  let let602 := (Not let601)
  let let603 := (binrel% LE.le fmt1 let281)
  let let604 := (Eq s let113)
  let let605 := (binrel% HAdd.hAdd let4 let33)
  let let606 := (Eq let31 let605)
  let let607 := (binrel% HAdd.hAdd let33 let4)
  let let608 := (Eq s let163)
  let let609 := (binrel% HAdd.hAdd let14 fmt0)
  let let610 := (Eq adrx5fmedhi let119)
  let let611 := (Eq adrx5flo let113)
  let let612 := (Eq adrx5fhi let90)
  let let613 := (Eq adrx5flo let90)
  let let614 := (Eq let399 let399)
  let let615 := (Eq adrx5fhi let163)
  let let616 := (Not let400)
  let let617 := (Eq let616 let399)
  let let618 := (Eq let123 let95)
  let let619 := (Eq adrx5fmedhi let163)
  let let620 := (Eq let399 let616)
  let let621 := (Eq adrx5fmedlo let163)
  let let622 := (Eq let123 let104)
  let let623 := (Eq adrx5flo let163)
  let let624 := (binrel% HMul.hMul let63 let4)
  let let625 := (Eq adrx5fhi let147)
  let let626 := (And let59 let37)
  let let627 := (Not let626)
  let let628 := (Implies let626 False)
  let let629 := (Eq x let119)
  let let630 := (Eq adrx5fmedlo let147)
  let let631 := (Eq percent let113)
  let let632 := (Eq adrx5flo let147)
  let let633 := (And let38 let526)
  let let634 := (Not let633)
  let let635 := (Implies let633 False)
  let let636 := (Eq adrx5fhi let236)
  let let637 := (Eq adrx5flo let236)
  let let638 := (Eq adrx5fmedhi let113)
  let let639 := (And let59 (And let36 (And let175 let82)))
  let let640 := (Not let639)
  let let641 := (Implies let639 False)
  let let642 := (Eq s let236)
  let let643 := (Eq let2 let4)
  let let644 := (Eq let27 let6)
  let let645 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let192)))
  let let646 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let533)))
  let let647 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let590 let588))
  let let648 := (binrel% GE.ge let647 let27)
  let let649 := (binrel% GE.ge arg1 let505)
  let let650 := (Not let602)
  let let651 := (binrel% LE.le fmt1 let213)
  let let652 := (Not let651)
  let let653 := (binrel% GT.gt fmt1 let213)
  let let654 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let487 let589))
  let let655 := (binrel% GE.ge let654 let5)
  let let656 := (binrel% GE.ge fmt1 let409)
  let let657 := (Eq fmt0 let505)
  let let658 := (binrel% HAdd.hAdd fmt0 let588)
  let let659 := (Eq arg0 let658)
  let let660 := (binrel% HSub.hSub fmt0 distance)
  let let661 := (Not let525)
  let let662 := (Eq let122 let500)
  let let663 := (And let121 let144)
  let let664 := (smtIte let663 let662 let497 Prop)
  let let665 := (Eq let123 let105)
  let let666 := (And let433 let428)
  let let667 := (smtIte let666 let665 let618 Prop)
  let let668 := (Eq let95 let161)
  let let669 := (And let437 let135)
  let let670 := (smtIte let669 let668 let97 Prop)
  let let671 := (Eq let23 let272)
  let let672 := (And let444 let92)
  let let673 := (smtIte let672 let671 let403 Prop)
  let let674 := (Eq let24 let569)
  let let675 := (And let413 let442)
  let let676 := (smtIte let675 let674 let424 Prop)
  let let677 := (And let454 let448)
  let let678 := (smtIte let677 let58 let36 Prop)
  let let679 := (Eq let355 let150)
  let let680 := (Eq let355 let583)
  let let681 := (And let121 let585)
  let let682 := (smtIte let681 let680 let679 Prop)
  let let683 := (Eq let150 let598)
  let let684 := (And let433 let429)
  let let685 := (smtIte let684 let683 let153 Prop)
  let let686 := (Eq let151 let196)
  let let687 := (And let437 let432)
  let let688 := (smtIte let687 let686 let600 Prop)
  let let689 := (Eq let2 let283)
  let let690 := (And let444 let167)
  let let691 := (smtIte let690 let689 let173 Prop)
  let let692 := (Eq let31 let607)
  let let693 := (And let413 let443)
  let let694 := (smtIte let693 let692 let133 Prop)
  let let695 := (And let454 let449)
  let let696 := (smtIte let695 let38 let59 Prop)
  let let697 := (Eq arg1 let300)
  let let698 := (Eq arg0 let660)
  let let699 := (Eq fmt0 let27)
  let let700 := (Eq x let50)
  let let701 := (Eq s let51)
  let let702 := (Eq percent let87)
  let let703 := (Eq adrx5fhi let4)
  let let704 := (Eq adrx5fmedhi let14)
  let let705 := (Eq adrx5fmedlo let4)
  let let706 := (Eq adrx5flo let14)
  let let707 := (Eq fmtx5flength let141)
  let let708 := (Eq distance let189)
  let let709 := (And let708 (And let707 (And let706 (And let705 (And let704 (And let703 (And let702 (And let701 (And let700 (And let699 (And let698 (And let557 (And let547 (And let653 (And let649 (And let510 (And let697 (And let456 (And let696 (And let694 (And let691 (And let688 (And let685 (And let682 (And let678 (And let676 (And let673 (And let670 (And let667 (And let664 (And let218 (And let474 let661))))))))))))))))))))))))))))))))
  let let710 := (And (And (And (And (And (And (And (And (And (And (And (And (And let708 let707) let706) let705) let704) let703) let702) let701) let700) (And (And (And (And (And (And (And let699 let698) let557) let547) let653) let649) let510) let697)) let456) (And (And (And (And (And (And (And (And (And (And (And let696 let694) let691) let688) let685) let682) let678) let676) let673) let670) let667) let664)) (And let218 let474)) let661)
  let let711 := (binrel% HAdd.hAdd arg0 let189)
  let let712 := (Not False)
  let let713 := (binrel% HAdd.hAdd let11 let12)
  let let714 := (binrel% HMul.hMul let302 let14)
  let let715 := (binrel% HAdd.hAdd let63 let12)
  let let716 := (binrel% HMul.hMul let5 let27)
  let let717 := (binrel% HMul.hMul let63 let18)
  let let718 := (binrel% LT.lt let302 let27)
  let let719 := (Eq let27 let17)
  let let720 := (Eq let74 let74)
  let let721 := (Eq let141 let141)
  let let722 := (Eq let51 let119)
  let let723 := (Eq let4 let17)
  let let724 := (Eq let24 let4)
  let let725 := (Eq let27 let136)
  let let726 := (Eq let15 let15)
  let let727 := (Eq let15 let287)
  let let728 := (binrel% LT.lt fmt1 let118)
  let let729 := (Eq let51 let236)
  let let730 := (And let247 (And let145 (And let476 (And let291 (And let561 let542)))))
  let let731 := (Not let730)
  let let732 := (Or let131 (Or let280 let170))
  let let733 := (Eq fmt1 let548)
  let let734 := (Eq fmt1 let609)
  let let735 := (Eq fmt1 let558)
  let let736 := (Eq fmt1 let171)
  let let737 := (Eq fmt1 let281)
  let let738 := (Eq fmt1 fmt0)
  let let739 := (Or let738 (Or let737 (Or let736 (Or let735 (Or let734 let733)))))
  let let740 := (And let120 let143)
  let let741 := (smtIte let740 let124 let330 Prop)
  let let742 := (And let631 let629)
  let let743 := (smtIte let742 let336 let335 Prop)
  let let744 := (And let595 let134)
  let let745 := (smtIte let744 let340 let96 Prop)
  let let746 := (And let565 let91)
  let let747 := (smtIte let746 let43 let25 Prop)
  let let748 := (And let412 let570)
  let let749 := (smtIte let748 let137 let29 Prop)
  let let750 := (And let576 let571)
  let let751 := (smtIte let750 let58 let36 Prop)
  let let752 := (And let120 let584)
  let let753 := (smtIte let752 let357 let356 Prop)
  let let754 := (And let631 let511)
  let let755 := (smtIte let754 let361 let152 Prop)
  let let756 := (And let595 let604)
  let let757 := (smtIte let756 let366 let365 Prop)
  let let758 := (And let565 let166)
  let let759 := (smtIte let758 let32 let44 Prop)
  let let760 := (And let412 let608)
  let let761 := (smtIte let760 let175 let34 Prop)
  let let762 := (And let576 let538)
  let let763 := (smtIte let762 let38 let59 Prop)
  let let764 := (Or let576 (Or let642 (Or let270 (Or let637 (Or let273 (Or let484 (Or let636 (Or let391 (Or let412 (Or let538 (Or let571 (Or let632 (Or let630 (Or let230 (Or let625 (Or let388 (Or let565 (Or let608 (Or let570 (Or let623 (Or let621 (Or let619 (Or let615 (Or let386 (Or let595 (Or let166 (Or let91 (Or let613 (Or let102 (Or let499 (Or let612 (Or let384 (Or let631 (Or let604 (Or let134 (Or let611 (Or let114 (Or let638 (Or let116 (Or let381 (Or let120 (Or let511 (Or let629 (Or let503 (Or let305 (Or let610 (Or let501 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let765 := (xx5fcount let489)
  let let766 := (binrel% HMul.hMul let14 let765)
  let let767 := (sx5fcount let489)
  let let768 := (binrel% HMul.hMul let14 let767)
  let let769 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let768 let766))
  let let770 := (Eq arg1 let769)
  let let771 := (Not let592)
  let let772 := (Not let655)
  let let773 := (And let708 (And let707 (And let706 (And let705 (And let704 (And let703 (And let702 (And let701 (And let700 (And let699 (And let657 (And let556 (And let772 (And let601 (And let648 (And let771 (And let770 (And let764 (And let763 (And let761 (And let759 (And let757 (And let755 (And let753 (And let751 (And let749 (And let747 (And let745 (And let743 (And let741 (And let739 (And let732 let731))))))))))))))))))))))))))))))))
  let let774 := (selectx5fformat let405)
  let let775 := (Eq let4 let774)
  let let776 := (selectx5fformat let550)
  let let777 := (Eq let14 let776)
  let let778 := (selectx5fformat let311)
  let let779 := (Eq let4 let778)
  let let780 := (And let580 (And let130 (And let245 (And let779 (And let777 let775)))))
  let let781 := (Not let780)
  let let782 := (Eq let27 let265)
  let let783 := (Eq let27 let252)
  let let784 := (Or let235 (Or let783 let782))
  let let785 := (Eq fmt1 let483)
  let let786 := (Eq fmt1 let463)
  let let787 := (Eq fmt1 let269)
  let let788 := (Eq fmt1 let478)
  let let789 := (Eq fmt1 let535)
  let let790 := (Or let328 (Or let789 (Or let788 (Or let787 (Or let786 let785)))))
  let let791 := (And let486 let481)
  let let792 := (smtIte let791 let124 let330 Prop)
  let let793 := (And let259 let414)
  let let794 := (smtIte let793 let336 let335 Prop)
  let let795 := (And let495 let492)
  let let796 := (smtIte let795 let340 let96 Prop)
  let let797 := (And let496 let222)
  let let798 := (smtIte let797 let43 let25 Prop)
  let let799 := (And let149 let498)
  let let800 := (smtIte let799 let137 let29 Prop)
  let let801 := (And let512 let504)
  let let802 := (smtIte let801 let58 let36 Prop)
  let let803 := (And let486 let513)
  let let804 := (smtIte let803 let357 let356 Prop)
  let let805 := (And let259 let722)
  let let806 := (smtIte let805 let361 let152 Prop)
  let let807 := (And let495 let532)
  let let808 := (smtIte let807 let366 let365 Prop)
  let let809 := (And let496 let539)
  let let810 := (smtIte let809 let32 let44 Prop)
  let let811 := (And let149 let165)
  let let812 := (smtIte let811 let175 let34 Prop)
  let let813 := (And let512 let285)
  let let814 := (smtIte let813 let38 let59 Prop)
  let let815 := (Or let512 (Or let729 (Or let552 (Or let544 (Or let238 (Or let544 (Or let238 (Or let391 (Or let149 (Or let285 (Or let504 (Or let404 (Or let464 (Or let404 (Or let464 (Or let388 (Or let496 (Or let165 (Or let498 (Or let313 (Or let408 (Or let313 (Or let408 (Or let386 (Or let495 (Or let539 (Or let222 (Or let457 (Or let276 (Or let457 (Or let276 (Or let384 (Or let259 (Or let532 (Or let492 (Or let540 (Or let537 (Or let540 (Or let537 (Or let381 (Or let486 (Or let722 (Or let414 (Or let479 (Or let530 (Or let479 (Or let530 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let816 := (binrel% HAdd.hAdd fmt1 let716)
  let let817 := (binrel% HAdd.hAdd let16 let816)
  let let818 := (xx5fcount let817)
  let let819 := (binrel% HMul.hMul let14 let818)
  let let820 := (sx5fcount let817)
  let let821 := (binrel% HMul.hMul let14 let820)
  let let822 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let821 let819))
  let let823 := (Eq let234 let822)
  let let824 := (binrel% GE.ge let422 let192)
  let let825 := (Not let824)
  let let826 := (binrel% GE.ge let263 let27)
  let let827 := (binrel% GE.ge let816 let1)
  let let828 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let716 let419))
  let let829 := (binrel% GE.ge let828 let5)
  let let830 := (Not let829)
  let let831 := (binrel% HAdd.hAdd let27 let531)
  let let832 := (binrel% GE.ge let831 let4)
  let let833 := (Not let832)
  let let834 := (Eq let27 let191)
  let let835 := (And let462 (And let721 (And let159 (And let162 (And let159 (And let162 (And let168 (And let406 (And let183 (And let469 (And let834 (And let833 (And let830 (And let827 (And let826 (And let825 (And let823 (And let815 (And let814 (And let812 (And let810 (And let808 (And let806 (And let804 (And let802 (And let800 (And let798 (And let796 (And let794 (And let792 (And let790 (And let784 let781))))))))))))))))))))))))))))))))
  let let836 := (Eq And And)
  let let837 := (Eq Or Or)
  let let838 := (Eq fmt1 fmt1)
  let let839 := (Eq let330 let330)
  let let840 := (Eq let124 let124)
  let let841 := (Eq let335 let335)
  let let842 := (Eq let336 let336)
  let let843 := (Eq let96 let96)
  let let844 := (Eq let340 let340)
  let let845 := (Eq let25 let25)
  let let846 := (Eq let43 let43)
  let let847 := (Eq let29 let29)
  let let848 := (Eq let137 let137)
  let let849 := (Eq let36 let36)
  let let850 := (Eq let58 let58)
  let let851 := (Eq let356 let356)
  let let852 := (Eq let357 let357)
  let let853 := (Eq let152 let152)
  let let854 := (Eq let361 let361)
  let let855 := (Eq let365 let365)
  let let856 := (Eq let366 let366)
  let let857 := (Eq let44 let44)
  let let858 := (Eq let32 let32)
  let let859 := (Eq let34 let34)
  let let860 := (Eq let175 let175)
  let let861 := (Eq let59 let59)
  let let862 := (Eq let38 let38)
  let let863 := (Eq let378 let378)
  let let864 := (Eq let381 let381)
  let let865 := (Eq let384 let384)
  let let866 := (Eq let386 let386)
  let let867 := (Eq let388 let388)
  let let868 := (Eq let391 let391)
  let let869 := (Eq let16 let16)
  let let870 := (Eq let192 let192)
  let let871 := (Eq let1 let1)
  let let872 := (Eq let5 let5)
  let let873 := (Eq arg1 let234)
  let let874 := (And let699 (And let700 (And let701 (And let702 (And let703 (And let704 (And let705 (And let706 (And let707 let708)))))))))
  let let875 := (And let266 let874)
  let let876 := (Eq arg1 arg1)
  let let877 := (Eq arg0 arg0)
  let let878 := (Eq let27 let711)
  let let879 := (Eq arg1 let822)
  let let880 := (Eq let769 let822)
  let let881 := (Eq let766 let819)
  let let882 := (Eq let765 let818)
  let let883 := (Eq let489 let817)
  let let884 := (Eq let487 let716)
  let let885 := (Eq let768 let821)
  let let886 := (Eq let767 let820)
  let let887 := (Not let59)
  let let888 := (Not let373)
  let let889 := (Or let888 let888)
  let let890 := (Not let164)
  let let891 := (Or let890 let888)
  let let892 := (Not let348)
  let let893 := (Or let892 let890)
  let let894 := (Implies let348 let890)
  let let895 := (Not let345)
  let let896 := (Or let890 let895)
  let let897 := (Implies let164 let895)
  let let898 := (Eq let345 False)
  let let899 := (Or let345 let348)
  let let900 := (Not let148)
  let let901 := (Not let175)
  let let902 := (Or let345 let899)
  let let903 := (Not let349)
  let let904 := (Not let371)
  let let905 := (Not let346)
  let let906 := (Not let375)
  let let907 := (Not let353)
  let let908 := (Not let36)
  let let909 := (Or let887 let908)
  let let910 := (Or let887 (Or let908 let909))
  let let911 := (Or let908 let910)
  let let912 := (Or let908 let458)
  let let913 := (Or let197 let458)
  let let914 := (Or let908 let913)
  let let915 := (Eq let27 let19)
  let let916 := (Eq let27 let18)
  let let917 := (And let21 (And let916 let915))
  let let918 := (Implies let253 let917)
  let let919 := (Eq let917 False)
  let let920 := (Or (Not let915) False)
  let let921 := (Not let916)
  let let922 := (Eq let19 let27)
  let let923 := (Not let922)
  let let924 := (Or let923 False)
  let let925 := (binrel% HAdd.hAdd let572 let714)
  let let926 := (binrel% HAdd.hAdd let572 let925)
  let let927 := (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let717 let303))
  let let928 := (binrel% LE.le let927 let926)
  let let929 := (binrel% LE.le let303 let714)
  let let930 := (And let718 let21)
  let let931 := (Implies let930 let929)
  let let932 := (Eq let717 let572)
  let let933 := (Eq let18 let27)
  let let934 := (And let251 let933)
  let let935 := (Implies let934 let932)
  let let936 := (Eq let155 let572)
  let let937 := (And let251 let922)
  let let938 := (Implies let937 let936)
  let let939 := (And let719 let59)
  let let940 := (Implies let939 let915)
  let let941 := (Or let887 let915)
  let let942 := (Not let719)
  let let943 := (Or let942 let941)
  let let944 := (Eq let33 let19)
  let let945 := (Eq let17 let27)
  let let946 := (Eq let27 let33)
  let let947 := (Eq let74 let719)
  let let948 := (And let719 let36)
  let let949 := (Implies let948 let916)
  let let950 := (Or let908 let916)
  let let951 := (Or let942 let950)
  let let952 := (Eq let28 let18)
  let let953 := (Eq let27 let28)
  let let954 := (binrel% GE.ge fmt1 let79)
  let let955 := (Not let398)
  let let956 := (Or let955 (Or let74 let954))
  let let957 := (Or let955 (Or let459 let954))
  let let958 := (And let398 let458)
  let let959 := (Implies let958 let954)
  let let960 := (Not let80)
  let let961 := (Or let887 (Or let908 let960))
  let let962 := (Not let29)
  let let963 := (Or let962 let960)
  let let964 := (Or let908 let963)
  let let965 := (Or let887 let964)
  let let966 := (Not let34)
  let let967 := (Or let966 let964)
  let let968 := (Or let197 let960)
  let let969 := (Or let962 let968)
  let let970 := (Or let966 let969)
  let let971 := (Or let908 let970)
  let let972 := (Implies let527 let917)
  let let973 := (And let34 let59)
  let let974 := (And let723 let973)
  let let975 := (Implies let974 let915)
  let let976 := (Or let966 let941)
  let let977 := (Not let723)
  let let978 := (Or let977 let976)
  let let979 := (Eq let31 let19)
  let let980 := (Eq let17 let4)
  let let981 := (Eq let80 let723)
  let let982 := (And let29 let36)
  let let983 := (And let723 let982)
  let let984 := (Implies let983 let916)
  let let985 := (Or let962 let950)
  let let986 := (Or let977 let985)
  let let987 := (Eq let24 let18)
  let let988 := (Eq let4 let19)
  let let989 := (And let21 (And let916 let988))
  let let990 := (Implies let639 let989)
  let let991 := (Eq let989 False)
  let let992 := (Or (Not let988) False)
  let let993 := (Eq let19 let4)
  let let994 := (Not let993)
  let let995 := (Or let994 False)
  let let996 := (binrel% HAdd.hAdd let624 let925)
  let let997 := (binrel% LE.le let927 let996)
  let let998 := (Eq let155 let624)
  let let999 := (And let251 let993)
  let let1000 := (Implies let999 let998)
  let let1001 := (Or let962 (Or let197 (Or let960 let989)))
  let let1002 := (Eq let4 let31)
  let let1003 := (And let723 let1002)
  let let1004 := (Or (Not let1002) let988)
  let let1005 := (Implies let597 let1002)
  let let1006 := (Or (Not let597) let1002)
  let let1007 := (And let175 let59)
  let let1008 := (Implies let1007 let597)
  let let1009 := (Or let901 (Or let887 let597))
  let let1010 := (Not let137)
  let let1011 := (Eq let4 let18)
  let let1012 := (And let21 (And let1011 let915))
  let let1013 := (Implies let138 let1012)
  let let1014 := (Eq let1012 False)
  let let1015 := (Not let1011)
  let let1016 := (binrel% HAdd.hAdd let624 let714)
  let let1017 := (binrel% HAdd.hAdd let572 let1016)
  let let1018 := (binrel% LE.le let927 let1017)
  let let1019 := (Eq let717 let624)
  let let1020 := (Eq let18 let4)
  let let1021 := (And let251 let1020)
  let let1022 := (Implies let1021 let1019)
  let let1023 := (Or let197 (Or let960 let1012))
  let let1024 := (Eq let4 let24)
  let let1025 := (And let723 let1024)
  let let1026 := (Or (Not let1024) let1011)
  let let1027 := (Implies let725 let1024)
  let let1028 := (Or (Not let725) let1024)
  let let1029 := (And let137 let36)
  let let1030 := (Implies let1029 let725)
  let let1031 := (Or let1010 (Or let908 let725))
  let let1032 := (Not let954)
  let let1033 := (Or let1032 let80)
  let let1034 := (Or let399 (Or let15 let1033))
  let let1035 := (Or let616 (Or let287 let1033))
  let let1036 := (And let400 (And let286 let954))
  let let1037 := (Eq let79 fmt1)
  let let1038 := (And let954 (And let400 let286))
  let let1039 := (Or let887 (Or let966 let908))
  let let1040 := (Or let892 let895)
  let let1041 := (Implies let348 let895)
  let let1042 := (Not let25)
  let let1043 := (Or let1042 let286)
  let let1044 := (Not let44)
  let let1045 := (Or let197 let286)
  let let1046 := (Or let1042 let1045)
  let let1047 := (Implies let186 let1012)
  let let1048 := (Or let197 (Or let286 let1012))
  let let1049 := (Or let1042 let1048)
  let let1050 := (And let468 (And let44 let973))
  let let1051 := (Implies let1050 let915)
  let let1052 := (Not let468)
  let let1053 := (Or let1052 (Or let1044 let976))
  let let1054 := (Eq let2 let19)
  let let1055 := (Eq let17 let1)
  let let1056 := (Eq let15 let468)
  let let1057 := (And let468 (And let25 let1024))
  let let1058 := (Eq let23 let18)
  let let1059 := (Or let962 let1043)
  let let1060 := (Or let908 let1059)
  let let1061 := (Or let887 (Or let966 let1060))
  let let1062 := (Or let1044 let1060)
  let let1063 := (Or let966 let1062)
  let let1064 := (Or let962 let1046)
  let let1065 := (Or let1044 let1064)
  let let1066 := (Or let966 let1065)
  let let1067 := (Or let908 let1066)
  let let1068 := (Implies let308 let917)
  let let1069 := (And let468 (And let25 let982))
  let let1070 := (Implies let1069 let916)
  let let1071 := (Or let1052 (Or let1042 let985))
  let let1072 := (Not let32)
  let let1073 := (Or let966 (Or let1072 let1060))
  let let1074 := (Or let966 (Or let1072 let1064))
  let let1075 := (Or let908 let1074)
  let let1076 := (Implies let626 let989)
  let let1077 := (Or let962 (Or let1042 (Or let197 (Or let286 let989))))
  let let1078 := (Eq let4 let2)
  let let1079 := (And let468 let1078)
  let let1080 := (Implies let1079 let988)
  let let1081 := (Or let1052 (Or (Not let1078) let988))
  let let1082 := (Implies let644 let1078)
  let let1083 := (Or (Not let644) let1078)
  let let1084 := (And let32 let973)
  let let1085 := (Implies let1084 let644)
  let let1086 := (Or let1072 (Or let966 (Or let887 let644)))
  let let1087 := (Eq let6 let31)
  let let1088 := (Or let962 (Or let286 let905))
  let let1089 := (Or let905 let905)
  let let1090 := (Or let962 (Or let286 let1089))
  let let1091 := (Not let221)
  let let1092 := (Not let370)
  let let1093 := (Or let1091 let1092)
  let let1094 := (Implies let221 let1092)
  let let1095 := (Not let43)
  let let1096 := (Or let962 (Or let1095 let286))
  let let1097 := (Or let966 (Or let1044 (Or let908 let1096)))
  let let1098 := (Or let966 (Or let1044 (Or let962 (Or let1095 let1045))))
  let let1099 := (Or let908 let1098)
  let let1100 := (Implies let199 let1012)
  let let1101 := (Eq let4 let23)
  let let1102 := (And let468 let1101)
  let let1103 := (Implies let1102 let1011)
  let let1104 := (Or let1052 (Or (Not let1101) let1011))
  let let1105 := (Implies let182 let1101)
  let let1106 := (Or (Not let182) let1101)
  let let1107 := (And let43 let982)
  let let1108 := (Implies let1107 let182)
  let let1109 := (Or let1095 (Or let962 (Or let908 let182)))
  let let1110 := (Eq let42 let24)
  let let1111 := (Implies let176 let989)
  let let1112 := (Or let1044 let1077)
  let let1113 := (And let468 (And let44 let1002))
  let let1114 := (Not let351)
  let let1115 := (Not let352)
  let let1116 := (Or let1115 (Or let900 let1114))
  let let1117 := (And let352 let148)
  let let1118 := (Implies let1117 let1114)
  let let1119 := (Eq let351 False)
  let let1120 := (Or let887 let966)
  let let1121 := (Or let907 let907)
  let let1122 := (Not let58)
  let let1123 := (Or let887 (Or let966 (Or let1122 let962)))
  let let1124 := (Implies let84 let1012)
  let let1125 := (And let29 let58)
  let let1126 := (And let723 let1125)
  let let1127 := (Or let1122 let1011)
  let let1128 := (Or let962 let1127)
  let let1129 := (Eq let4 let28)
  let let1130 := (Implies let76 let1012)
  let let1131 := (And let719 let58)
  let let1132 := (Or let1122 let1059)
  let let1133 := (Or let887 (Or let966 let1132))
  let let1134 := (Implies let71 let1012)
  let let1135 := (And let468 (And let25 let1125))
  let let1136 := (Implies let1135 let1011)
  let let1137 := (Or let1052 (Or let1042 let1128))
  let let1138 := (And let21 (And let1011 let988))
  let let1139 := (Implies let66 let1138)
  let let1140 := (Eq let1138 False)
  let let1141 := (binrel% HAdd.hAdd let624 let1016)
  let let1142 := (binrel% LE.le let927 let1141)
  let let1143 := (Or let197 (Or let286 let1138))
  let let1144 := (Eq let1 let18)
  let let1145 := (And let21 (And let1144 let915))
  let let1146 := (Implies let60 let1145)
  let let1147 := (binrel% HAdd.hAdd let572 (binrel% HAdd.hAdd let249 let714))
  let let1148 := (binrel% LE.le let927 let1147)
  let let1149 := (Eq let717 let249)
  let let1150 := (Eq let18 let1)
  let let1151 := (And let251 let1150)
  let let1152 := (Eq let1 let23)
  let let1153 := (And let468 let1152)
  let let1154 := (And let43 let1125)
  let let1155 := (Not let284)
  let let1156 := (Or let1155 let1114)
  let let1157 := (Implies let284 let1114)
  let let1158 := (Or let1155 let900)
  let let1159 := (Implies let284 let900)
  let let1160 := (Not let38)
  let let1161 := (Implies let99 let989)
  let let1162 := (And let719 let38)
  let let1163 := (Or let1160 let988)
  let let1164 := (Eq let4 let33)
  let let1165 := (Implies let633 let989)
  let let1166 := (And let34 let38)
  let let1167 := (And let723 let1166)
  let let1168 := (Or let966 let1163)
  let let1169 := (Implies let47 let1138)
  let let1170 := (And let468 (And let44 let1166))
  let let1171 := (Implies let1170 let988)
  let let1172 := (Or let1052 (Or let1044 let1168))
  let let1173 := (Implies let573 let989)
  let let1174 := (Eq let1 let19)
  let let1175 := (And let21 (And let916 let1174))
  let let1176 := (Implies let39 let1175)
  let let1177 := (Eq let19 let1)
  let let1178 := (Not let1177)
  let let1179 := (binrel% HAdd.hAdd let249 let925)
  let let1180 := (binrel% LE.le let927 let1179)
  let let1181 := (Eq let155 let249)
  let let1182 := (And let251 let1177)
  let let1183 := (Eq let1 let2)
  let let1184 := (And let468 let1183)
  let let1185 := (And let32 let1166)
(Eq let7 let3) → (Eq let13 let9) → (Eq let41 let40) → (Eq let49 let48) → (Eq let54 let53) → let54 → (Eq let56 let55) → (Eq let57 let9) → (Eq let62 let61) → (Eq let65 let9) → (Eq let68 let67) → (Eq let73 let72) → (Eq let78 let77) → (Eq let86 let85) → let89 → (Eq let92 let91) → (Eq let94 let43) → (Eq let97 let96) → (Eq let101 let100) → (Eq let103 let102) → (Eq let105 let104) → (Eq let112 let107) → (Eq let115 let114) → (Eq let117 let116) → (Eq let121 let120) → (Eq let126 let124) → (Eq let130 let129) → (Eq let132 let131) → (Eq let133 let34) → (Eq let135 let134) → (Eq let140 let139) → (Eq let144 let143) → (Eq let146 let145) → (Eq let149 let148) → (Eq let153 let152) → (Eq let155 let154) → (Eq let158 let157) → (Eq let159 True) → let158 → (Eq let161 let160) → (Eq let162 True) → (Eq let165 let164) → (Eq let167 let166) → (Eq let168 True) → (Eq let172 let170) → (Eq let173 let44) → (Eq let178 let177) → let180 → (Eq let182 let181) → (Eq let183 True) → (Eq let185 let32) → (Eq let188 let187) → (Eq let191 let27) → (Eq let194 let193) → (Eq let196 let195) → (Eq let198 let21) → (Eq let201 let200) → (Eq let204 let203) → (Eq let218 let217) → (Eq let220 let219) → (Eq let222 let221) → (Eq let225 let224) → (Eq let226 False) → (Eq let227 let189) → (Eq let229 let228) → (Eq let231 let230) → (Eq let233 let232) → (Eq let235 False) → (Eq let238 let237) → (Eq let242 let241) → (Eq let245 let244) → (Eq let248 let247) → (Eq let249 let8) → (Eq let250 let197) → (Eq let251 True) → (Eq let252 let252) → (Eq let255 let254) → (Eq let256 let127) → let257 → (Eq let259 let258) → (Eq let263 let262) → (Eq let264 fmt1) → (Eq let265 let265) → (Eq let268 let266) → (Eq let269 let79) → (Eq let271 let270) → (Eq let272 let93) → (Eq let274 let273) → (Eq let276 let275) → let278 → (Eq let282 let280) → (Eq let283 let184) → (Eq let285 let284) → let288 → (Eq let239 let5) → (Eq let292 let291) → (Eq let300 let299) → (Eq let303 let301) → (Eq let304 False) → (Eq let306 let305) → (Eq let310 let309) → (Eq let311 let311) → (Eq let313 let312) → (Eq let402 let401) → (Eq let403 let25) → (Eq let404 let390) → (Eq let405 let405) → (Eq let406 True) → let407 → (Eq let408 let387) → (Eq let410 let409) → (Eq let411 let234) → (Eq let413 let412) → (Eq let414 let337) → (Eq let415 let340) → (Eq let416 let316) → (Eq let418 let417) → (Eq let422 let421) → (Eq let423 let17) → (Eq let424 let29) → (Eq let456 let455) → (Eq let457 let385) → (Eq let461 let460) → (Eq let462 True) → (Eq let463 let14) → (Eq let464 let389) → let465 → (Eq let467 let466) → (Eq let468 let15) → (Eq let469 True) → (Eq let474 let473) → (Eq let419 let202) → (Eq let477 let476) → let461 → (Eq let478 let1) → (Eq let479 let380) → (Eq let480 let319) → (Eq let481 let331) → (Eq let482 False) → (Eq let483 let118) → (Eq let451 let484) → (Eq let485 let399) → (Eq let486 let332) → (Eq let490 let489) → (Eq let491 let107) → (Eq let492 let341) → (Eq let293 let494) → (Eq let211 let171) → (Eq let495 let342) → (Eq let213 let281) → (Eq let496 let345) → (Eq let497 let330) → (Eq let498 let348) → (Eq let435 let499) → (Eq let500 let125) → (Eq let425 let501) → (Eq let502 let17) → (Eq let427 let503) → (Eq let504 let351) → (Eq let510 let509) → (Eq let429 let511) → (Eq let512 let352) → (Eq let513 let358) → (Eq let514 let366) → (Eq let525 let524) → (Eq let529 let528) → (Eq let215 fmt0) → (Eq let260 let190) → (Eq let530 let379) → (Eq let531 let193) → (Eq let532 let367) → (Eq let507 let534) → (Eq let535 let4) → (Eq let536 False) → (Eq let537 let382) → (Eq let449 let538) → (Eq let539 let370) → (Eq let540 let383) → (Eq let543 let542) → (Eq let544 let392) → (Eq let547 let546) → (Eq let205 let548) → (Eq let241 let549) → let551 → (Eq let552 let393) → (Eq let557 let556) → (Eq let209 let558) → (Eq let559 let21) → (Eq let562 let561) → (Eq let563 let322) → (Eq let564 True) → (Eq let444 let565) → (Eq let567 let137) → (Eq let294 let568) → (Eq let569 let566) → (Eq let442 let570) → (Eq let448 let571) → (Eq let572 let11) → (Eq let575 let574) → (Eq let454 let576) → (Eq let180 let577) → (Eq let579 let357) → (Eq let580 let323) → (Eq let582 let11) → (Eq let583 let578) → (Eq let585 let584) → (Eq let587 let361) → (Eq let594 let592) → (Eq let437 let595) → (Eq let597 let596) → (Eq let598 let586) → (Eq let89 let599) → (Eq let600 let365) → (Eq let603 let602) → (Eq let432 let604) → (Eq let606 let175) → (Eq let607 let605) → (Eq let443 let608) → (Eq let207 let609) → (Eq let426 let610) → (Eq let431 let611) → (Eq let434 let612) → (Eq let436 let613) → (Eq let614 True) → (Eq let438 let615) → let617 → (Eq let618 let335) → (Eq let439 let619) → (Eq let617 let620) → (Eq let440 let621) → (Eq let622 let336) → (Eq let441 let623) → (Eq let624 let63) → (Eq let445 let625) → (Eq let628 let627) → (Eq let428 let629) → (Eq let446 let630) → (Eq let433 let631) → (Eq let447 let632) → (Eq let635 let634) → (Eq let450 let636) → (Eq let452 let637) → (Eq let430 let638) → (Eq let641 let640) → (Eq let453 let642) → (Eq let644 let643) → (Eq let493 let16) → (Eq let645 let593) → (Eq let533 let192) → (Eq let534 let646) → (Eq let649 let648) → (Eq let650 let601) → (Eq let653 let652) → (Eq let656 let655) → (Eq let659 let657) → (Eq let660 let658) → (Eq let710 let709) → (Eq let711 let267) → (Eq let679 let356) → (Eq let712 True) → (Eq let713 let10) → (Eq let714 let10) → (Eq let715 let466) → (Eq let716 let27) → (Eq let717 let581) → (Eq let718 True) → (Eq let719 let74) → (Eq let519 let289) → (Eq let720 True) → (Eq let721 True) → (Eq let722 let362) → (Eq let723 let80) → (Eq let725 let724) → (Eq let726 True) → (Eq let288 let727) → (Eq let728 let400) → (Eq let729 let394) → (Eq let550 let550) → let225 → let710 → False :=
  let let1 := (Int.ofNat 2)
  let let2 := (sx5fcount let1)
  let let3 := (Eq let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 let2)
  let let7 := (Eq let4 let6)
  let let8 := (Rat.ofInt 2)
  let let9 := (Neg.neg let8)
  let let10 := (Neg.neg (Rat.ofInt 4))
  let let11 := (Rat.ofInt 0)
  let let12 := (binrel% HAdd.hAdd let11 let10)
  let let13 := (binrel% HAdd.hAdd let8 let12)
  let let14 := (Int.ofNat 4)
  let let15 := (Eq fmt1 let14)
  let let16 := (Neg.neg let1)
  let let17 := (binrel% HAdd.hAdd let16 fmt1)
  let let18 := (xx5fcount let17)
  let let19 := (sx5fcount let17)
  let let20 := (binrel% HAdd.hAdd let19 let18)
  let let21 := (binrel% GE.ge let20 let14)
  let let22 := (And let21 let15)
  let let23 := (xx5fcount let1)
  let let24 := (xx5fcount let4)
  let let25 := (Eq let24 let23)
  let let26 := (And let25 let22)
  let let27 := (Int.ofNat 0)
  let let28 := (xx5fcount let27)
  let let29 := (Eq let28 let24)
  let let30 := (And let29 let26)
  let let31 := (sx5fcount let4)
  let let32 := (Eq let31 let6)
  let let33 := (sx5fcount let27)
  let let34 := (Eq let33 let31)
  let let35 := (And let34 (And let32 let30))
  let let36 := (Eq let28 let27)
  let let37 := (And let36 let35)
  let let38 := (Eq let33 let4)
  let let39 := (And let38 let37)
  let let40 := (Not let39)
  let let41 := (Implies let39 False)
  let let42 := (binrel% HAdd.hAdd let5 let23)
  let let43 := (Eq let24 let42)
  let let44 := (Eq let31 let2)
  let let45 := (And let34 (And let44 (And let29 (And let43 let22))))
  let let46 := (And let36 let45)
  let let47 := (And let38 let46)
  let let48 := (Not let47)
  let let49 := (Implies let47 False)
  let let50 := (Int.ofNat 120)
  let let51 := (Int.ofNat 115)
  let let52 := (Eq let51 let50)
  let let53 := (Not let52)
  let let54 := (Eq let52 False)
  let let55 := (Eq let23 let1)
  let let56 := (Eq let4 let42)
  let let57 := (binrel% HAdd.hAdd let11 (binrel% HAdd.hAdd let8 let10))
  let let58 := (Eq let28 let4)
  let let59 := (Eq let33 let27)
  let let60 := (And let59 (And let58 let45))
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (Rat.ofInt 1)
  let let64 := (binrel% HAdd.hAdd let63 let10)
  let let65 := (binrel% HAdd.hAdd let63 let64)
  let let66 := (And let59 (And let58 let35))
  let let67 := (Not let66)
  let let68 := (Implies let66 False)
  let let69 := (And let44 let30)
  let let70 := (And let34 let69)
  let let71 := (And let59 (And let58 let70))
  let let72 := (Not let71)
  let let73 := (Implies let71 False)
  let let74 := (Eq fmt1 let1)
  let let75 := (And let21 let74)
  let let76 := (And let59 (And let58 let75))
  let let77 := (Not let76)
  let let78 := (Implies let76 False)
  let let79 := (Int.ofNat 3)
  let let80 := (Eq fmt1 let79)
  let let81 := (And let21 let80)
  let let82 := (And let29 let81)
  let let83 := (And let34 let82)
  let let84 := (And let59 (And let58 let83))
  let let85 := (Not let84)
  let let86 := (Implies let84 False)
  let let87 := (Int.ofNat 37)
  let let88 := (Eq let87 let50)
  let let89 := (Eq let88 False)
  let let90 := (selectx5fformat let79)
  let let91 := (Eq x let90)
  let let92 := (Eq let90 x)
  let let93 := (binrel% HAdd.hAdd let4 let24)
  let let94 := (Eq let23 let93)
  let let95 := (xx5fcount let79)
  let let96 := (Eq let23 let95)
  let let97 := (Eq let95 let23)
  let let98 := (And let36 let75)
  let let99 := (And let38 let98)
  let let100 := (Not let99)
  let let101 := (Implies let99 False)
  let let102 := (Eq adrx5fmedlo let90)
  let let103 := (Eq let90 adrx5fmedlo)
  let let104 := (binrel% HAdd.hAdd let4 let95)
  let let105 := (binrel% HAdd.hAdd let95 let4)
  let let106 := (binrel% HMul.hMul let5 let18)
  let let107 := (Eq let19 (binrel% HAdd.hAdd let14 let106))
  let let108 := (binrel% HMul.hMul let14 let18)
  let let109 := (binrel% HMul.hMul let14 let19)
  let let110 := (binrel% HAdd.hAdd let109 let108)
  let let111 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 16)) let110)
  let let112 := (Eq let27 let111)
  let let113 := (selectx5fformat let14)
  let let114 := (Eq adrx5fmedlo let113)
  let let115 := (Eq let113 adrx5fmedlo)
  let let116 := (Eq adrx5fhi let113)
  let let117 := (Eq let113 adrx5fhi)
  let let118 := (Int.ofNat 5)
  let let119 := (selectx5fformat let118)
  let let120 := (Eq percent let119)
  let let121 := (Eq let119 percent)
  let let122 := (xx5fcount let118)
  let let123 := (xx5fcount let14)
  let let124 := (Eq let123 (binrel% HAdd.hAdd let5 let122))
  let let125 := (binrel% HAdd.hAdd let4 let123)
  let let126 := (Eq let122 let125)
  let let127 := (binrel% HAdd.hAdd let4 fmt1)
  let let128 := (selectx5fformat let127)
  let let129 := (Eq let128 let51)
  let let130 := (Eq let51 let128)
  let let131 := (Eq fmt0 arg1)
  let let132 := (Eq arg1 fmt0)
  let let133 := (Eq let31 let33)
  let let134 := (Eq x let113)
  let let135 := (Eq let113 x)
  let let136 := (binrel% HAdd.hAdd let5 let24)
  let let137 := (Eq let28 let136)
  let let138 := (And let59 (And let36 (And let34 (And let137 let81))))
  let let139 := (Not let138)
  let let140 := (Implies let138 False)
  let let141 := (Int.ofNat 6)
  let let142 := (selectx5fformat let141)
  let let143 := (Eq x let142)
  let let144 := (Eq let142 x)
  let let145 := (Eq s let128)
  let let146 := (Eq let128 s)
  let let147 := (selectx5fformat let4)
  let let148 := (Eq let147 let87)
  let let149 := (Eq let87 let147)
  let let150 := (sx5fcount let14)
  let let151 := (sx5fcount let79)
  let let152 := (Eq let151 let150)
  let let153 := (Eq let150 let151)
  let let154 := (Rat.ofInt let19)
  let let155 := (binrel% HMul.hMul let63 let19)
  let let156 := (Eq let51 let87)
  let let157 := (Not let156)
  let let158 := (Eq let156 False)
  let let159 := (Eq let14 let14)
  let let160 := (binrel% HAdd.hAdd let4 let23)
  let let161 := (binrel% HAdd.hAdd let23 let4)
  let let162 := (Eq let4 let4)
  let let163 := (selectx5fformat let1)
  let let164 := (Eq let163 let51)
  let let165 := (Eq let51 let163)
  let let166 := (Eq s let90)
  let let167 := (Eq let90 s)
  let let168 := (Eq let87 let87)
  let let169 := (binrel% HAdd.hAdd let16 arg1)
  let let170 := (Eq fmt0 let169)
  let let171 := (binrel% HAdd.hAdd let1 fmt0)
  let let172 := (Eq arg1 let171)
  let let173 := (Eq let2 let31)
  let let174 := (binrel% HAdd.hAdd let5 let31)
  let let175 := (Eq let33 let174)
  let let176 := (And let59 (And let36 (And let175 let69)))
  let let177 := (Not let176)
  let let178 := (Implies let176 False)
  let let179 := (Eq let50 let51)
  let let180 := (Eq let179 False)
  let let181 := (Eq let23 let4)
  let let182 := (Eq let27 let42)
  let let183 := (Eq let50 let50)
  let let184 := (binrel% HAdd.hAdd let4 let31)
  let let185 := (Eq let2 let184)
  let let186 := (And let59 (And let36 (And let34 (And let44 (And let137 let26)))))
  let let187 := (Not let186)
  let let188 := (Implies let186 False)
  let let189 := (Int.ofNat 15)
  let let190 := (Neg.neg let189)
  let let191 := (binrel% HAdd.hAdd let190 let189)
  let let192 := (Neg.neg let14)
  let let193 := (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd (binrel% HMul.hMul let192 let19) (binrel% HMul.hMul let192 let18)))
  let let194 := (binrel% HAdd.hAdd let27 let193)
  let let195 := (binrel% HAdd.hAdd let4 let2)
  let let196 := (binrel% HAdd.hAdd let2 let4)
  let let197 := (Not let21)
  let let198 := (Not let197)
  let let199 := (And let59 let46)
  let let200 := (Not let199)
  let let201 := (Implies let199 False)
  let let202 := (Neg.neg let141)
  let let203 := (binrel% HAdd.hAdd let202 fmt1)
  let let204 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let27 let202))
  let let205 := (binrel% HAdd.hAdd fmt0 let118)
  let let206 := (Eq fmt1 let205)
  let let207 := (binrel% HAdd.hAdd fmt0 let14)
  let let208 := (Eq fmt1 let207)
  let let209 := (binrel% HAdd.hAdd fmt0 let79)
  let let210 := (Eq fmt1 let209)
  let let211 := (binrel% HAdd.hAdd fmt0 let1)
  let let212 := (Eq fmt1 let211)
  let let213 := (binrel% HAdd.hAdd fmt0 let4)
  let let214 := (Eq fmt1 let213)
  let let215 := (binrel% HAdd.hAdd fmt0 let27)
  let let216 := (Eq fmt1 let215)
  let let217 := (Or let216 (Or let214 (Or let212 (Or let210 (Or let208 let206)))))
  let let218 := (Or (Or (Or (Or (Or let216 let214) let212) let210) let208) let206)
  let let219 := (binrel% HAdd.hAdd let1 arg1)
  let let220 := (binrel% HAdd.hAdd arg1 let1)
  let let221 := (Eq let90 let50)
  let let222 := (Eq let50 let90)
  let let223 := (Eq let50 let87)
  let let224 := (Not let223)
  let let225 := (Eq let223 False)
  let let226 := (binrel% LE.le let11 let9)
  let let227 := (binrel% HMul.hMul let5 let190)
  let let228 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let110)
  let let229 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let189 (binrel% HAdd.hAdd let202 let190)))))
  let let230 := (Eq adrx5fmedhi let147)
  let let231 := (Eq let147 adrx5fmedhi)
  let let232 := (binrel% GE.ge let20 let118)
  let let233 := (binrel% GE.ge let228 let192)
  let let234 := (binrel% HAdd.hAdd let190 let110)
  let let235 := (Eq let27 let234)
  let let236 := (selectx5fformat let27)
  let let237 := (Eq let236 let4)
  let let238 := (Eq let4 let236)
  let let239 := (binrel% HMul.hMul let5 let4)
  let let240 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let241 := (binrel% HAdd.hAdd let240 let239)
  let let242 := (binrel% HSub.hSub let240 let4)
  let let243 := (selectx5fformat let234)
  let let244 := (Eq let243 let14)
  let let245 := (Eq let14 let243)
  let let246 := (selectx5fformat fmt1)
  let let247 := (Eq percent let246)
  let let248 := (Eq let246 percent)
  let let249 := (binrel% HMul.hMul let63 let1)
  let let250 := (binrel% GE.ge let193 let4)
  let let251 := (binrel% GT.gt let63 let27)
  let let252 := (binrel% HAdd.hAdd let5 let234)
  let let253 := (And let59 let98)
  let let254 := (Not let253)
  let let255 := (Implies let253 False)
  let let256 := (binrel% HAdd.hAdd fmt1 let4)
  let let257 := (Eq let252 let111)
  let let258 := (Eq let113 let87)
  let let259 := (Eq let87 let113)
  let let260 := (binrel% HMul.hMul let5 let189)
  let let261 := (binrel% HAdd.hAdd let227 let260)
  let let262 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 let261)))
  let let263 := (binrel% HAdd.hAdd let234 let261)
  let let264 := (binrel% HAdd.hAdd fmt1 let27)
  let let265 := (binrel% HAdd.hAdd let16 let234)
  let let266 := (Eq arg0 let190)
  let let267 := (binrel% HAdd.hAdd let189 arg0)
  let let268 := (Eq let27 let267)
  let let269 := (binrel% HAdd.hAdd let79 let27)
  let let270 := (Eq x let236)
  let let271 := (Eq let236 x)
  let let272 := (binrel% HAdd.hAdd let24 let4)
  let let273 := (Eq adrx5fmedlo let236)
  let let274 := (Eq let236 adrx5fmedlo)
  let let275 := (Eq let90 let4)
  let let276 := (Eq let4 let90)
  let let277 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let110)
  let let278 := (Eq let265 let277)
  let let279 := (binrel% HAdd.hAdd let5 arg1)
  let let280 := (Eq fmt0 let279)
  let let281 := (binrel% HAdd.hAdd let4 fmt0)
  let let282 := (Eq arg1 let281)
  let let283 := (binrel% HAdd.hAdd let31 let4)
  let let284 := (Eq let147 let51)
  let let285 := (Eq let51 let147)
  let let286 := (Not let15)
  let let287 := (Not let286)
  let let288 := (Eq let287 let15)
  let let289 := (binrel% HAdd.hAdd let4 arg1)
  let let290 := (selectx5fformat let289)
  let let291 := (Eq adrx5fmedlo let290)
  let let292 := (Eq let290 adrx5fmedlo)
  let let293 := (binrel% HSub.hSub fmt1 let1)
  let let294 := (binrel% HSub.hSub let293 fmt0)
  let let295 := (xx5fcount let294)
  let let296 := (binrel% HMul.hMul let14 let295)
  let let297 := (sx5fcount let294)
  let let298 := (binrel% HMul.hMul let14 let297)
  let let299 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let298 let296))
  let let300 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let298) let296)
  let let301 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let5 let19) let106))
  let let302 := (Neg.neg let63)
  let let303 := (binrel% HMul.hMul let302 let20)
  let let304 := (Eq let27 let277)
  let let305 := (Eq adrx5fmedlo let119)
  let let306 := (Eq let119 adrx5fmedlo)
  let let307 := (And let36 let70)
  let let308 := (And let59 let307)
  let let309 := (Not let308)
  let let310 := (Implies let308 False)
  let let311 := (binrel% HAdd.hAdd let4 let234)
  let let312 := (Eq let163 let14)
  let let313 := (Eq let14 let163)
  let let314 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 12)) let110)
  let let315 := (selectx5fformat let314)
  let let316 := (Eq let315 let4)
  let let317 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let110)
  let let318 := (selectx5fformat let317)
  let let319 := (Eq let318 let14)
  let let320 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let110)
  let let321 := (selectx5fformat let320)
  let let322 := (Eq let321 let4)
  let let323 := (Eq let246 let87)
  let let324 := (And let323 (And let129 (And let244 (And let322 (And let319 let316)))))
  let let325 := (Not let324)
  let let326 := (Eq fmt1 let118)
  let let327 := (Eq fmt1 let4)
  let let328 := (Eq fmt1 let27)
  let let329 := (Or let328 (Or let327 (Or let74 (Or let80 (Or let15 let326)))))
  let let330 := (Eq let123 let122)
  let let331 := (Eq let142 let50)
  let let332 := (Eq let119 let87)
  let let333 := (And let332 let331)
  let let334 := (smtIte let333 let124 let330 Prop)
  let let335 := (Eq let95 let123)
  let let336 := (Eq let95 (binrel% HAdd.hAdd let5 let123))
  let let337 := (Eq let119 let50)
  let let338 := (And let258 let337)
  let let339 := (smtIte let338 let336 let335 Prop)
  let let340 := (Eq let23 (binrel% HAdd.hAdd let5 let95))
  let let341 := (Eq let113 let50)
  let let342 := (Eq let90 let87)
  let let343 := (And let342 let341)
  let let344 := (smtIte let343 let340 let96 Prop)
  let let345 := (Eq let163 let87)
  let let346 := (And let345 let221)
  let let347 := (smtIte let346 let43 let25 Prop)
  let let348 := (Eq let163 let50)
  let let349 := (And let148 let348)
  let let350 := (smtIte let349 let137 let29 Prop)
  let let351 := (Eq let147 let50)
  let let352 := (Eq let236 let87)
  let let353 := (And let352 let351)
  let let354 := (smtIte let353 let58 let36 Prop)
  let let355 := (sx5fcount let118)
  let let356 := (Eq let150 let355)
  let let357 := (Eq let150 (binrel% HAdd.hAdd let5 let355))
  let let358 := (Eq let142 let51)
  let let359 := (And let332 let358)
  let let360 := (smtIte let359 let357 let356 Prop)
  let let361 := (Eq let151 (binrel% HAdd.hAdd let5 let150))
  let let362 := (Eq let119 let51)
  let let363 := (And let258 let362)
  let let364 := (smtIte let363 let361 let152 Prop)
  let let365 := (Eq let2 let151)
  let let366 := (Eq let2 (binrel% HAdd.hAdd let5 let151))
  let let367 := (Eq let113 let51)
  let let368 := (And let342 let367)
  let let369 := (smtIte let368 let366 let365 Prop)
  let let370 := (Eq let90 let51)
  let let371 := (And let345 let370)
  let let372 := (smtIte let371 let32 let44 Prop)
  let let373 := (And let148 let164)
  let let374 := (smtIte let373 let175 let34 Prop)
  let let375 := (And let352 let284)
  let let376 := (smtIte let375 let38 let59 Prop)
  let let377 := (Int.ofNat 255)
  let let378 := (Eq let119 let377)
  let let379 := (Eq let119 let4)
  let let380 := (Eq let119 let14)
  let let381 := (Eq let113 let377)
  let let382 := (Eq let113 let4)
  let let383 := (Eq let113 let14)
  let let384 := (Eq let90 let377)
  let let385 := (Eq let90 let14)
  let let386 := (Eq let163 let377)
  let let387 := (Eq let163 let4)
  let let388 := (Eq let147 let377)
  let let389 := (Eq let147 let4)
  let let390 := (Eq let147 let14)
  let let391 := (Eq let236 let377)
  let let392 := (Eq let236 let14)
  let let393 := (Eq let236 let50)
  let let394 := (Eq let236 let51)
  let let395 := (Or let352 (Or let394 (Or let393 (Or let392 (Or let237 (Or let392 (Or let237 (Or let391 (Or let148 (Or let284 (Or let351 (Or let390 (Or let389 (Or let390 (Or let389 (Or let388 (Or let345 (Or let164 (Or let348 (Or let312 (Or let387 (Or let312 (Or let387 (Or let386 (Or let342 (Or let370 (Or let221 (Or let385 (Or let275 (Or let385 (Or let275 (Or let384 (Or let258 (Or let367 (Or let341 (Or let383 (Or let382 (Or let383 (Or let382 (Or let381 (Or let332 (Or let362 (Or let337 (Or let380 (Or let379 (Or let380 (Or let379 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let396 := (And let395 (And let376 (And let374 (And let372 (And let369 (And let364 (And let360 (And let354 (And let350 (And let347 (And let344 (And let339 (And let334 (And let329 (And let107 let325)))))))))))))))
  let let397 := (Not let232)
  let let398 := (binrel% GE.ge fmt1 let1)
  let let399 := (binrel% GE.ge fmt1 let118)
  let let400 := (Not let399)
  let let401 := (And let21 (And let400 (And let398 (And let397 let396))))
  let let402 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let21 (And let400 (And let398 (And let21 (And let397 (And True let396)))))))))))))))))
  let let403 := (Eq let23 let24)
  let let404 := (Eq let14 let147)
  let let405 := (binrel% HAdd.hAdd let79 let234)
  let let406 := (Eq let51 let51)
  let let407 := (Eq let311 let320)
  let let408 := (Eq let4 let163)
  let let409 := (binrel% HAdd.hAdd let5 let240)
  let let410 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let5))
  let let411 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 (binrel% HAdd.hAdd let189 let190))))
  let let412 := (Eq percent let147)
  let let413 := (Eq let147 percent)
  let let414 := (Eq let50 let119)
  let let415 := (Eq let95 let160)
  let let416 := (Eq let4 let315)
  let let417 := (binrel% HAdd.hAdd let79 arg1)
  let let418 := (binrel% HAdd.hAdd arg1 let79)
  let let419 := (binrel% HMul.hMul let5 let141)
  let let420 := (binrel% HAdd.hAdd let227 (binrel% HAdd.hAdd let419 let260))
  let let421 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let109 (binrel% HAdd.hAdd let108 let420)))
  let let422 := (binrel% HAdd.hAdd let234 let420)
  let let423 := (binrel% HAdd.hAdd fmt1 let16)
  let let424 := (Eq let24 let28)
  let let425 := (Eq let119 adrx5fhi)
  let let426 := (Eq let119 adrx5fmedhi)
  let let427 := (Eq let119 adrx5flo)
  let let428 := (Eq let119 x)
  let let429 := (Eq let119 s)
  let let430 := (Eq let113 adrx5fmedhi)
  let let431 := (Eq let113 adrx5flo)
  let let432 := (Eq let113 s)
  let let433 := (Eq let113 percent)
  let let434 := (Eq let90 adrx5fhi)
  let let435 := (Eq let90 adrx5fmedhi)
  let let436 := (Eq let90 adrx5flo)
  let let437 := (Eq let90 percent)
  let let438 := (Eq let163 adrx5fhi)
  let let439 := (Eq let163 adrx5fmedhi)
  let let440 := (Eq let163 adrx5fmedlo)
  let let441 := (Eq let163 adrx5flo)
  let let442 := (Eq let163 x)
  let let443 := (Eq let163 s)
  let let444 := (Eq let163 percent)
  let let445 := (Eq let147 adrx5fhi)
  let let446 := (Eq let147 adrx5fmedlo)
  let let447 := (Eq let147 adrx5flo)
  let let448 := (Eq let147 x)
  let let449 := (Eq let147 s)
  let let450 := (Eq let236 adrx5fhi)
  let let451 := (Eq let236 adrx5fmedhi)
  let let452 := (Eq let236 adrx5flo)
  let let453 := (Eq let236 s)
  let let454 := (Eq let236 percent)
  let let455 := (Or let454 (Or let453 (Or let271 (Or let452 (Or let274 (Or let451 (Or let450 (Or let391 (Or let413 (Or let449 (Or let448 (Or let447 (Or let446 (Or let231 (Or let445 (Or let388 (Or let444 (Or let443 (Or let442 (Or let441 (Or let440 (Or let439 (Or let438 (Or let386 (Or let437 (Or let167 (Or let92 (Or let436 (Or let103 (Or let435 (Or let434 (Or let384 (Or let433 (Or let432 (Or let135 (Or let431 (Or let115 (Or let430 (Or let117 (Or let381 (Or let121 (Or let429 (Or let428 (Or let427 (Or let306 (Or let426 (Or let425 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let456 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let454 let453) let271) let452) let274) let451) let450) let391) let413) let449) let448) let447) let446) let231) let445) let388) let444) let443) let442) let441) let440) let439) let438) let386) let437) let167) let92) let436) let103) let435) let434) let384) let433) let432) let135) let431) let115) let430) let117) let381) let121) let429) let428) let427) let306) let426) let425) let378)
  let let457 := (Eq let14 let90)
  let let458 := (Not let74)
  let let459 := (Not let458)
  let let460 := (Eq let74 let459)
  let let461 := (Eq let459 let74)
  let let462 := (Eq let189 let189)
  let let463 := (binrel% HAdd.hAdd let14 let27)
  let let464 := (Eq let4 let147)
  let let465 := (Eq let405 let314)
  let let466 := (Neg.neg (Rat.ofInt 3))
  let let467 := (binrel% HAdd.hAdd let11 let64)
  let let468 := (Eq let1 let17)
  let let469 := (Eq let27 let27)
  let let470 := (Eq arg1 let211)
  let let471 := (Eq arg1 let213)
  let let472 := (Eq arg1 let215)
  let let473 := (Or let472 (Or let471 let470))
  let let474 := (Or (Or let472 let471) let470)
  let let475 := (selectx5fformat arg1)
  let let476 := (Eq adrx5flo let475)
  let let477 := (Eq let475 adrx5flo)
  let let478 := (binrel% HAdd.hAdd let1 let27)
  let let479 := (Eq let14 let119)
  let let480 := (Eq let14 let318)
  let let481 := (Eq let50 let142)
  let let482 := (binrel% LE.le let11 let466)
  let let483 := (binrel% HAdd.hAdd let118 let27)
  let let484 := (Eq adrx5fmedhi let236)
  let let485 := (binrel% GE.ge let203 let5)
  let let486 := (Eq let87 let119)
  let let487 := (binrel% HMul.hMul let5 fmt0)
  let let488 := (binrel% HAdd.hAdd fmt1 let487)
  let let489 := (binrel% HAdd.hAdd let16 let488)
  let let490 := (binrel% HAdd.hAdd let17 let487)
  let let491 := (Or False (Or let107 False))
  let let492 := (Eq let50 let113)
  let let493 := (binrel% HMul.hMul let5 let1)
  let let494 := (binrel% HAdd.hAdd fmt1 let493)
  let let495 := (Eq let87 let90)
  let let496 := (Eq let87 let163)
  let let497 := (Eq let122 let123)
  let let498 := (Eq let50 let163)
  let let499 := (Eq adrx5fmedhi let90)
  let let500 := (binrel% HAdd.hAdd let123 let4)
  let let501 := (Eq adrx5fhi let119)
  let let502 := (binrel% HAdd.hAdd let16 let264)
  let let503 := (Eq adrx5flo let119)
  let let504 := (Eq let50 let147)
  let let505 := (binrel% HAdd.hAdd arg0 distance)
  let let506 := (binrel% HAdd.hAdd let505 fmtx5flength)
  let let507 := (binrel% HSub.hSub let506 let14)
  let let508 := (binrel% GE.ge arg1 let507)
  let let509 := (Not let508)
  let let510 := (binrel% LT.lt arg1 let507)
  let let511 := (Eq s let119)
  let let512 := (Eq let87 let236)
  let let513 := (Eq let51 let142)
  let let514 := (Eq let151 let195)
  let let515 := (selectx5fformat let418)
  let let516 := (Eq let515 adrx5fhi)
  let let517 := (selectx5fformat let220)
  let let518 := (Eq let517 adrx5fmedhi)
  let let519 := (binrel% HAdd.hAdd arg1 let4)
  let let520 := (selectx5fformat let519)
  let let521 := (Eq let520 adrx5fmedlo)
  let let522 := (selectx5fformat let256)
  let let523 := (Eq let522 s)
  let let524 := (And let248 (And let523 (And let477 (And let521 (And let518 let516)))))
  let let525 := (And (And (And (And (And let248 let523) let477) let521) let518) let516)
  let let526 := (And let36 let83)
  let let527 := (And let59 let526)
  let let528 := (Not let527)
  let let529 := (Implies let527 False)
  let let530 := (Eq let4 let119)
  let let531 := (binrel% HMul.hMul let5 let234)
  let let532 := (Eq let51 let113)
  let let533 := (binrel% HMul.hMul let5 let14)
  let let534 := (binrel% HAdd.hAdd let506 let533)
  let let535 := (binrel% HAdd.hAdd let4 let27)
  let let536 := (binrel% LE.le let11 let10)
  let let537 := (Eq let4 let113)
  let let538 := (Eq s let147)
  let let539 := (Eq let51 let90)
  let let540 := (Eq let14 let113)
  let let541 := (selectx5fformat let417)
  let let542 := (Eq adrx5fhi let541)
  let let543 := (Eq let541 adrx5fhi)
  let let544 := (Eq let14 let236)
  let let545 := (binrel% GE.ge fmt1 let242)
  let let546 := (Not let545)
  let let547 := (binrel% LT.lt fmt1 let242)
  let let548 := (binrel% HAdd.hAdd let118 fmt0)
  let let549 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let239))
  let let550 := (binrel% HAdd.hAdd let1 let234)
  let let551 := (Eq let550 let317)
  let let552 := (Eq let50 let236)
  let let553 := (binrel% HMul.hMul let5 arg1)
  let let554 := (binrel% HAdd.hAdd fmt0 let553)
  let let555 := (binrel% GE.ge let554 let4)
  let let556 := (Not let555)
  let let557 := (binrel% GE.ge arg1 fmt0)
  let let558 := (binrel% HAdd.hAdd let79 fmt0)
  let let559 := (binrel% GE.ge let234 let27)
  let let560 := (selectx5fformat let219)
  let let561 := (Eq adrx5fmedhi let560)
  let let562 := (Eq let560 adrx5fmedhi)
  let let563 := (Eq let4 let321)
  let let564 := (Eq let234 let234)
  let let565 := (Eq percent let163)
  let let566 := (binrel% HAdd.hAdd let4 let28)
  let let567 := (Eq let24 let566)
  let let568 := (binrel% HAdd.hAdd let293 let487)
  let let569 := (binrel% HAdd.hAdd let28 let4)
  let let570 := (Eq x let163)
  let let571 := (Eq x let147)
  let let572 := (binrel% HMul.hMul let63 let27)
  let let573 := (And let38 let307)
  let let574 := (Not let573)
  let let575 := (Implies let573 False)
  let let576 := (Eq percent let236)
  let let577 := (Not let179)
  let let578 := (binrel% HAdd.hAdd let4 let150)
  let let579 := (Eq let355 let578)
  let let580 := (Eq let87 let246)
  let let581 := (Rat.ofInt let18)
  let let582 := (binrel% HAdd.hAdd let154 (binrel% HAdd.hAdd let581 let301))
  let let583 := (binrel% HAdd.hAdd let150 let4)
  let let584 := (Eq s let142)
  let let585 := (Eq let142 s)
  let let586 := (binrel% HAdd.hAdd let4 let151)
  let let587 := (Eq let150 let586)
  let let588 := (binrel% HMul.hMul let5 distance)
  let let589 := (binrel% HMul.hMul let5 fmtx5flength)
  let let590 := (binrel% HMul.hMul let5 arg0)
  let let591 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let590 (binrel% HAdd.hAdd let589 let588)))
  let let592 := (binrel% GE.ge let591 let192)
  let let593 := (binrel% HAdd.hAdd let192 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let594 := (binrel% GE.ge arg1 let593)
  let let595 := (Eq percent let90)
  let let596 := (Eq let31 let4)
  let let597 := (Eq let27 let174)
  let let598 := (binrel% HAdd.hAdd let151 let4)
  let let599 := (Not let88)
  let let600 := (Eq let151 let2)
  let let601 := (binrel% GE.ge let488 let1)
  let let602 := (Not let601)
  let let603 := (binrel% LE.le fmt1 let281)
  let let604 := (Eq s let113)
  let let605 := (binrel% HAdd.hAdd let4 let33)
  let let606 := (Eq let31 let605)
  let let607 := (binrel% HAdd.hAdd let33 let4)
  let let608 := (Eq s let163)
  let let609 := (binrel% HAdd.hAdd let14 fmt0)
  let let610 := (Eq adrx5fmedhi let119)
  let let611 := (Eq adrx5flo let113)
  let let612 := (Eq adrx5fhi let90)
  let let613 := (Eq adrx5flo let90)
  let let614 := (Eq let399 let399)
  let let615 := (Eq adrx5fhi let163)
  let let616 := (Not let400)
  let let617 := (Eq let616 let399)
  let let618 := (Eq let123 let95)
  let let619 := (Eq adrx5fmedhi let163)
  let let620 := (Eq let399 let616)
  let let621 := (Eq adrx5fmedlo let163)
  let let622 := (Eq let123 let104)
  let let623 := (Eq adrx5flo let163)
  let let624 := (binrel% HMul.hMul let63 let4)
  let let625 := (Eq adrx5fhi let147)
  let let626 := (And let59 let37)
  let let627 := (Not let626)
  let let628 := (Implies let626 False)
  let let629 := (Eq x let119)
  let let630 := (Eq adrx5fmedlo let147)
  let let631 := (Eq percent let113)
  let let632 := (Eq adrx5flo let147)
  let let633 := (And let38 let526)
  let let634 := (Not let633)
  let let635 := (Implies let633 False)
  let let636 := (Eq adrx5fhi let236)
  let let637 := (Eq adrx5flo let236)
  let let638 := (Eq adrx5fmedhi let113)
  let let639 := (And let59 (And let36 (And let175 let82)))
  let let640 := (Not let639)
  let let641 := (Implies let639 False)
  let let642 := (Eq s let236)
  let let643 := (Eq let2 let4)
  let let644 := (Eq let27 let6)
  let let645 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let192)))
  let let646 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let533)))
  let let647 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let590 let588))
  let let648 := (binrel% GE.ge let647 let27)
  let let649 := (binrel% GE.ge arg1 let505)
  let let650 := (Not let602)
  let let651 := (binrel% LE.le fmt1 let213)
  let let652 := (Not let651)
  let let653 := (binrel% GT.gt fmt1 let213)
  let let654 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let487 let589))
  let let655 := (binrel% GE.ge let654 let5)
  let let656 := (binrel% GE.ge fmt1 let409)
  let let657 := (Eq fmt0 let505)
  let let658 := (binrel% HAdd.hAdd fmt0 let588)
  let let659 := (Eq arg0 let658)
  let let660 := (binrel% HSub.hSub fmt0 distance)
  let let661 := (Not let525)
  let let662 := (Eq let122 let500)
  let let663 := (And let121 let144)
  let let664 := (smtIte let663 let662 let497 Prop)
  let let665 := (Eq let123 let105)
  let let666 := (And let433 let428)
  let let667 := (smtIte let666 let665 let618 Prop)
  let let668 := (Eq let95 let161)
  let let669 := (And let437 let135)
  let let670 := (smtIte let669 let668 let97 Prop)
  let let671 := (Eq let23 let272)
  let let672 := (And let444 let92)
  let let673 := (smtIte let672 let671 let403 Prop)
  let let674 := (Eq let24 let569)
  let let675 := (And let413 let442)
  let let676 := (smtIte let675 let674 let424 Prop)
  let let677 := (And let454 let448)
  let let678 := (smtIte let677 let58 let36 Prop)
  let let679 := (Eq let355 let150)
  let let680 := (Eq let355 let583)
  let let681 := (And let121 let585)
  let let682 := (smtIte let681 let680 let679 Prop)
  let let683 := (Eq let150 let598)
  let let684 := (And let433 let429)
  let let685 := (smtIte let684 let683 let153 Prop)
  let let686 := (Eq let151 let196)
  let let687 := (And let437 let432)
  let let688 := (smtIte let687 let686 let600 Prop)
  let let689 := (Eq let2 let283)
  let let690 := (And let444 let167)
  let let691 := (smtIte let690 let689 let173 Prop)
  let let692 := (Eq let31 let607)
  let let693 := (And let413 let443)
  let let694 := (smtIte let693 let692 let133 Prop)
  let let695 := (And let454 let449)
  let let696 := (smtIte let695 let38 let59 Prop)
  let let697 := (Eq arg1 let300)
  let let698 := (Eq arg0 let660)
  let let699 := (Eq fmt0 let27)
  let let700 := (Eq x let50)
  let let701 := (Eq s let51)
  let let702 := (Eq percent let87)
  let let703 := (Eq adrx5fhi let4)
  let let704 := (Eq adrx5fmedhi let14)
  let let705 := (Eq adrx5fmedlo let4)
  let let706 := (Eq adrx5flo let14)
  let let707 := (Eq fmtx5flength let141)
  let let708 := (Eq distance let189)
  let let709 := (And let708 (And let707 (And let706 (And let705 (And let704 (And let703 (And let702 (And let701 (And let700 (And let699 (And let698 (And let557 (And let547 (And let653 (And let649 (And let510 (And let697 (And let456 (And let696 (And let694 (And let691 (And let688 (And let685 (And let682 (And let678 (And let676 (And let673 (And let670 (And let667 (And let664 (And let218 (And let474 let661))))))))))))))))))))))))))))))))
  let let710 := (And (And (And (And (And (And (And (And (And (And (And (And (And let708 let707) let706) let705) let704) let703) let702) let701) let700) (And (And (And (And (And (And (And let699 let698) let557) let547) let653) let649) let510) let697)) let456) (And (And (And (And (And (And (And (And (And (And (And let696 let694) let691) let688) let685) let682) let678) let676) let673) let670) let667) let664)) (And let218 let474)) let661)
  let let711 := (binrel% HAdd.hAdd arg0 let189)
  let let712 := (Not False)
  let let713 := (binrel% HAdd.hAdd let11 let12)
  let let714 := (binrel% HMul.hMul let302 let14)
  let let715 := (binrel% HAdd.hAdd let63 let12)
  let let716 := (binrel% HMul.hMul let5 let27)
  let let717 := (binrel% HMul.hMul let63 let18)
  let let718 := (binrel% LT.lt let302 let27)
  let let719 := (Eq let27 let17)
  let let720 := (Eq let74 let74)
  let let721 := (Eq let141 let141)
  let let722 := (Eq let51 let119)
  let let723 := (Eq let4 let17)
  let let724 := (Eq let24 let4)
  let let725 := (Eq let27 let136)
  let let726 := (Eq let15 let15)
  let let727 := (Eq let15 let287)
  let let728 := (binrel% LT.lt fmt1 let118)
  let let729 := (Eq let51 let236)
  let let730 := (And let247 (And let145 (And let476 (And let291 (And let561 let542)))))
  let let731 := (Not let730)
  let let732 := (Or let131 (Or let280 let170))
  let let733 := (Eq fmt1 let548)
  let let734 := (Eq fmt1 let609)
  let let735 := (Eq fmt1 let558)
  let let736 := (Eq fmt1 let171)
  let let737 := (Eq fmt1 let281)
  let let738 := (Eq fmt1 fmt0)
  let let739 := (Or let738 (Or let737 (Or let736 (Or let735 (Or let734 let733)))))
  let let740 := (And let120 let143)
  let let741 := (smtIte let740 let124 let330 Prop)
  let let742 := (And let631 let629)
  let let743 := (smtIte let742 let336 let335 Prop)
  let let744 := (And let595 let134)
  let let745 := (smtIte let744 let340 let96 Prop)
  let let746 := (And let565 let91)
  let let747 := (smtIte let746 let43 let25 Prop)
  let let748 := (And let412 let570)
  let let749 := (smtIte let748 let137 let29 Prop)
  let let750 := (And let576 let571)
  let let751 := (smtIte let750 let58 let36 Prop)
  let let752 := (And let120 let584)
  let let753 := (smtIte let752 let357 let356 Prop)
  let let754 := (And let631 let511)
  let let755 := (smtIte let754 let361 let152 Prop)
  let let756 := (And let595 let604)
  let let757 := (smtIte let756 let366 let365 Prop)
  let let758 := (And let565 let166)
  let let759 := (smtIte let758 let32 let44 Prop)
  let let760 := (And let412 let608)
  let let761 := (smtIte let760 let175 let34 Prop)
  let let762 := (And let576 let538)
  let let763 := (smtIte let762 let38 let59 Prop)
  let let764 := (Or let576 (Or let642 (Or let270 (Or let637 (Or let273 (Or let484 (Or let636 (Or let391 (Or let412 (Or let538 (Or let571 (Or let632 (Or let630 (Or let230 (Or let625 (Or let388 (Or let565 (Or let608 (Or let570 (Or let623 (Or let621 (Or let619 (Or let615 (Or let386 (Or let595 (Or let166 (Or let91 (Or let613 (Or let102 (Or let499 (Or let612 (Or let384 (Or let631 (Or let604 (Or let134 (Or let611 (Or let114 (Or let638 (Or let116 (Or let381 (Or let120 (Or let511 (Or let629 (Or let503 (Or let305 (Or let610 (Or let501 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let765 := (xx5fcount let489)
  let let766 := (binrel% HMul.hMul let14 let765)
  let let767 := (sx5fcount let489)
  let let768 := (binrel% HMul.hMul let14 let767)
  let let769 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let768 let766))
  let let770 := (Eq arg1 let769)
  let let771 := (Not let592)
  let let772 := (Not let655)
  let let773 := (And let708 (And let707 (And let706 (And let705 (And let704 (And let703 (And let702 (And let701 (And let700 (And let699 (And let657 (And let556 (And let772 (And let601 (And let648 (And let771 (And let770 (And let764 (And let763 (And let761 (And let759 (And let757 (And let755 (And let753 (And let751 (And let749 (And let747 (And let745 (And let743 (And let741 (And let739 (And let732 let731))))))))))))))))))))))))))))))))
  let let774 := (selectx5fformat let405)
  let let775 := (Eq let4 let774)
  let let776 := (selectx5fformat let550)
  let let777 := (Eq let14 let776)
  let let778 := (selectx5fformat let311)
  let let779 := (Eq let4 let778)
  let let780 := (And let580 (And let130 (And let245 (And let779 (And let777 let775)))))
  let let781 := (Not let780)
  let let782 := (Eq let27 let265)
  let let783 := (Eq let27 let252)
  let let784 := (Or let235 (Or let783 let782))
  let let785 := (Eq fmt1 let483)
  let let786 := (Eq fmt1 let463)
  let let787 := (Eq fmt1 let269)
  let let788 := (Eq fmt1 let478)
  let let789 := (Eq fmt1 let535)
  let let790 := (Or let328 (Or let789 (Or let788 (Or let787 (Or let786 let785)))))
  let let791 := (And let486 let481)
  let let792 := (smtIte let791 let124 let330 Prop)
  let let793 := (And let259 let414)
  let let794 := (smtIte let793 let336 let335 Prop)
  let let795 := (And let495 let492)
  let let796 := (smtIte let795 let340 let96 Prop)
  let let797 := (And let496 let222)
  let let798 := (smtIte let797 let43 let25 Prop)
  let let799 := (And let149 let498)
  let let800 := (smtIte let799 let137 let29 Prop)
  let let801 := (And let512 let504)
  let let802 := (smtIte let801 let58 let36 Prop)
  let let803 := (And let486 let513)
  let let804 := (smtIte let803 let357 let356 Prop)
  let let805 := (And let259 let722)
  let let806 := (smtIte let805 let361 let152 Prop)
  let let807 := (And let495 let532)
  let let808 := (smtIte let807 let366 let365 Prop)
  let let809 := (And let496 let539)
  let let810 := (smtIte let809 let32 let44 Prop)
  let let811 := (And let149 let165)
  let let812 := (smtIte let811 let175 let34 Prop)
  let let813 := (And let512 let285)
  let let814 := (smtIte let813 let38 let59 Prop)
  let let815 := (Or let512 (Or let729 (Or let552 (Or let544 (Or let238 (Or let544 (Or let238 (Or let391 (Or let149 (Or let285 (Or let504 (Or let404 (Or let464 (Or let404 (Or let464 (Or let388 (Or let496 (Or let165 (Or let498 (Or let313 (Or let408 (Or let313 (Or let408 (Or let386 (Or let495 (Or let539 (Or let222 (Or let457 (Or let276 (Or let457 (Or let276 (Or let384 (Or let259 (Or let532 (Or let492 (Or let540 (Or let537 (Or let540 (Or let537 (Or let381 (Or let486 (Or let722 (Or let414 (Or let479 (Or let530 (Or let479 (Or let530 let378)))))))))))))))))))))))))))))))))))))))))))))))
  let let816 := (binrel% HAdd.hAdd fmt1 let716)
  let let817 := (binrel% HAdd.hAdd let16 let816)
  let let818 := (xx5fcount let817)
  let let819 := (binrel% HMul.hMul let14 let818)
  let let820 := (sx5fcount let817)
  let let821 := (binrel% HMul.hMul let14 let820)
  let let822 := (binrel% HAdd.hAdd let190 (binrel% HAdd.hAdd let821 let819))
  let let823 := (Eq let234 let822)
  let let824 := (binrel% GE.ge let422 let192)
  let let825 := (Not let824)
  let let826 := (binrel% GE.ge let263 let27)
  let let827 := (binrel% GE.ge let816 let1)
  let let828 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let716 let419))
  let let829 := (binrel% GE.ge let828 let5)
  let let830 := (Not let829)
  let let831 := (binrel% HAdd.hAdd let27 let531)
  let let832 := (binrel% GE.ge let831 let4)
  let let833 := (Not let832)
  let let834 := (Eq let27 let191)
  let let835 := (And let462 (And let721 (And let159 (And let162 (And let159 (And let162 (And let168 (And let406 (And let183 (And let469 (And let834 (And let833 (And let830 (And let827 (And let826 (And let825 (And let823 (And let815 (And let814 (And let812 (And let810 (And let808 (And let806 (And let804 (And let802 (And let800 (And let798 (And let796 (And let794 (And let792 (And let790 (And let784 let781))))))))))))))))))))))))))))))))
  let let836 := (Eq And And)
  let let837 := (Eq Or Or)
  let let838 := (Eq fmt1 fmt1)
  let let839 := (Eq let330 let330)
  let let840 := (Eq let124 let124)
  let let841 := (Eq let335 let335)
  let let842 := (Eq let336 let336)
  let let843 := (Eq let96 let96)
  let let844 := (Eq let340 let340)
  let let845 := (Eq let25 let25)
  let let846 := (Eq let43 let43)
  let let847 := (Eq let29 let29)
  let let848 := (Eq let137 let137)
  let let849 := (Eq let36 let36)
  let let850 := (Eq let58 let58)
  let let851 := (Eq let356 let356)
  let let852 := (Eq let357 let357)
  let let853 := (Eq let152 let152)
  let let854 := (Eq let361 let361)
  let let855 := (Eq let365 let365)
  let let856 := (Eq let366 let366)
  let let857 := (Eq let44 let44)
  let let858 := (Eq let32 let32)
  let let859 := (Eq let34 let34)
  let let860 := (Eq let175 let175)
  let let861 := (Eq let59 let59)
  let let862 := (Eq let38 let38)
  let let863 := (Eq let378 let378)
  let let864 := (Eq let381 let381)
  let let865 := (Eq let384 let384)
  let let866 := (Eq let386 let386)
  let let867 := (Eq let388 let388)
  let let868 := (Eq let391 let391)
  let let869 := (Eq let16 let16)
  let let870 := (Eq let192 let192)
  let let871 := (Eq let1 let1)
  let let872 := (Eq let5 let5)
  let let873 := (Eq arg1 let234)
  let let874 := (And let699 (And let700 (And let701 (And let702 (And let703 (And let704 (And let705 (And let706 (And let707 let708)))))))))
  let let875 := (And let266 let874)
  let let876 := (Eq arg1 arg1)
  let let877 := (Eq arg0 arg0)
  let let878 := (Eq let27 let711)
  let let879 := (Eq arg1 let822)
  let let880 := (Eq let769 let822)
  let let881 := (Eq let766 let819)
  let let882 := (Eq let765 let818)
  let let883 := (Eq let489 let817)
  let let884 := (Eq let487 let716)
  let let885 := (Eq let768 let821)
  let let886 := (Eq let767 let820)
  let let887 := (Not let59)
  let let888 := (Not let373)
  let let889 := (Or let888 let888)
  let let890 := (Not let164)
  let let891 := (Or let890 let888)
  let let892 := (Not let348)
  let let893 := (Or let892 let890)
  let let894 := (Implies let348 let890)
  let let895 := (Not let345)
  let let896 := (Or let890 let895)
  let let897 := (Implies let164 let895)
  let let898 := (Eq let345 False)
  let let899 := (Or let345 let348)
  let let900 := (Not let148)
  let let901 := (Not let175)
  let let902 := (Or let345 let899)
  let let903 := (Not let349)
  let let904 := (Not let371)
  let let905 := (Not let346)
  let let906 := (Not let375)
  let let907 := (Not let353)
  let let908 := (Not let36)
  let let909 := (Or let887 let908)
  let let910 := (Or let887 (Or let908 let909))
  let let911 := (Or let908 let910)
  let let912 := (Or let908 let458)
  let let913 := (Or let197 let458)
  let let914 := (Or let908 let913)
  let let915 := (Eq let27 let19)
  let let916 := (Eq let27 let18)
  let let917 := (And let21 (And let916 let915))
  let let918 := (Implies let253 let917)
  let let919 := (Eq let917 False)
  let let920 := (Or (Not let915) False)
  let let921 := (Not let916)
  let let922 := (Eq let19 let27)
  let let923 := (Not let922)
  let let924 := (Or let923 False)
  let let925 := (binrel% HAdd.hAdd let572 let714)
  let let926 := (binrel% HAdd.hAdd let572 let925)
  let let927 := (binrel% HAdd.hAdd let155 (binrel% HAdd.hAdd let717 let303))
  let let928 := (binrel% LE.le let927 let926)
  let let929 := (binrel% LE.le let303 let714)
  let let930 := (And let718 let21)
  let let931 := (Implies let930 let929)
  let let932 := (Eq let717 let572)
  let let933 := (Eq let18 let27)
  let let934 := (And let251 let933)
  let let935 := (Implies let934 let932)
  let let936 := (Eq let155 let572)
  let let937 := (And let251 let922)
  let let938 := (Implies let937 let936)
  let let939 := (And let719 let59)
  let let940 := (Implies let939 let915)
  let let941 := (Or let887 let915)
  let let942 := (Not let719)
  let let943 := (Or let942 let941)
  let let944 := (Eq let33 let19)
  let let945 := (Eq let17 let27)
  let let946 := (Eq let27 let33)
  let let947 := (Eq let74 let719)
  let let948 := (And let719 let36)
  let let949 := (Implies let948 let916)
  let let950 := (Or let908 let916)
  let let951 := (Or let942 let950)
  let let952 := (Eq let28 let18)
  let let953 := (Eq let27 let28)
  let let954 := (binrel% GE.ge fmt1 let79)
  let let955 := (Not let398)
  let let956 := (Or let955 (Or let74 let954))
  let let957 := (Or let955 (Or let459 let954))
  let let958 := (And let398 let458)
  let let959 := (Implies let958 let954)
  let let960 := (Not let80)
  let let961 := (Or let887 (Or let908 let960))
  let let962 := (Not let29)
  let let963 := (Or let962 let960)
  let let964 := (Or let908 let963)
  let let965 := (Or let887 let964)
  let let966 := (Not let34)
  let let967 := (Or let966 let964)
  let let968 := (Or let197 let960)
  let let969 := (Or let962 let968)
  let let970 := (Or let966 let969)
  let let971 := (Or let908 let970)
  let let972 := (Implies let527 let917)
  let let973 := (And let34 let59)
  let let974 := (And let723 let973)
  let let975 := (Implies let974 let915)
  let let976 := (Or let966 let941)
  let let977 := (Not let723)
  let let978 := (Or let977 let976)
  let let979 := (Eq let31 let19)
  let let980 := (Eq let17 let4)
  let let981 := (Eq let80 let723)
  let let982 := (And let29 let36)
  let let983 := (And let723 let982)
  let let984 := (Implies let983 let916)
  let let985 := (Or let962 let950)
  let let986 := (Or let977 let985)
  let let987 := (Eq let24 let18)
  let let988 := (Eq let4 let19)
  let let989 := (And let21 (And let916 let988))
  let let990 := (Implies let639 let989)
  let let991 := (Eq let989 False)
  let let992 := (Or (Not let988) False)
  let let993 := (Eq let19 let4)
  let let994 := (Not let993)
  let let995 := (Or let994 False)
  let let996 := (binrel% HAdd.hAdd let624 let925)
  let let997 := (binrel% LE.le let927 let996)
  let let998 := (Eq let155 let624)
  let let999 := (And let251 let993)
  let let1000 := (Implies let999 let998)
  let let1001 := (Or let962 (Or let197 (Or let960 let989)))
  let let1002 := (Eq let4 let31)
  let let1003 := (And let723 let1002)
  let let1004 := (Or (Not let1002) let988)
  let let1005 := (Implies let597 let1002)
  let let1006 := (Or (Not let597) let1002)
  let let1007 := (And let175 let59)
  let let1008 := (Implies let1007 let597)
  let let1009 := (Or let901 (Or let887 let597))
  let let1010 := (Not let137)
  let let1011 := (Eq let4 let18)
  let let1012 := (And let21 (And let1011 let915))
  let let1013 := (Implies let138 let1012)
  let let1014 := (Eq let1012 False)
  let let1015 := (Not let1011)
  let let1016 := (binrel% HAdd.hAdd let624 let714)
  let let1017 := (binrel% HAdd.hAdd let572 let1016)
  let let1018 := (binrel% LE.le let927 let1017)
  let let1019 := (Eq let717 let624)
  let let1020 := (Eq let18 let4)
  let let1021 := (And let251 let1020)
  let let1022 := (Implies let1021 let1019)
  let let1023 := (Or let197 (Or let960 let1012))
  let let1024 := (Eq let4 let24)
  let let1025 := (And let723 let1024)
  let let1026 := (Or (Not let1024) let1011)
  let let1027 := (Implies let725 let1024)
  let let1028 := (Or (Not let725) let1024)
  let let1029 := (And let137 let36)
  let let1030 := (Implies let1029 let725)
  let let1031 := (Or let1010 (Or let908 let725))
  let let1032 := (Not let954)
  let let1033 := (Or let1032 let80)
  let let1034 := (Or let399 (Or let15 let1033))
  let let1035 := (Or let616 (Or let287 let1033))
  let let1036 := (And let400 (And let286 let954))
  let let1037 := (Eq let79 fmt1)
  let let1038 := (And let954 (And let400 let286))
  let let1039 := (Or let887 (Or let966 let908))
  let let1040 := (Or let892 let895)
  let let1041 := (Implies let348 let895)
  let let1042 := (Not let25)
  let let1043 := (Or let1042 let286)
  let let1044 := (Not let44)
  let let1045 := (Or let197 let286)
  let let1046 := (Or let1042 let1045)
  let let1047 := (Implies let186 let1012)
  let let1048 := (Or let197 (Or let286 let1012))
  let let1049 := (Or let1042 let1048)
  let let1050 := (And let468 (And let44 let973))
  let let1051 := (Implies let1050 let915)
  let let1052 := (Not let468)
  let let1053 := (Or let1052 (Or let1044 let976))
  let let1054 := (Eq let2 let19)
  let let1055 := (Eq let17 let1)
  let let1056 := (Eq let15 let468)
  let let1057 := (And let468 (And let25 let1024))
  let let1058 := (Eq let23 let18)
  let let1059 := (Or let962 let1043)
  let let1060 := (Or let908 let1059)
  let let1061 := (Or let887 (Or let966 let1060))
  let let1062 := (Or let1044 let1060)
  let let1063 := (Or let966 let1062)
  let let1064 := (Or let962 let1046)
  let let1065 := (Or let1044 let1064)
  let let1066 := (Or let966 let1065)
  let let1067 := (Or let908 let1066)
  let let1068 := (Implies let308 let917)
  let let1069 := (And let468 (And let25 let982))
  let let1070 := (Implies let1069 let916)
  let let1071 := (Or let1052 (Or let1042 let985))
  let let1072 := (Not let32)
  let let1073 := (Or let966 (Or let1072 let1060))
  let let1074 := (Or let966 (Or let1072 let1064))
  let let1075 := (Or let908 let1074)
  let let1076 := (Implies let626 let989)
  let let1077 := (Or let962 (Or let1042 (Or let197 (Or let286 let989))))
  let let1078 := (Eq let4 let2)
  let let1079 := (And let468 let1078)
  let let1080 := (Implies let1079 let988)
  let let1081 := (Or let1052 (Or (Not let1078) let988))
  let let1082 := (Implies let644 let1078)
  let let1083 := (Or (Not let644) let1078)
  let let1084 := (And let32 let973)
  let let1085 := (Implies let1084 let644)
  let let1086 := (Or let1072 (Or let966 (Or let887 let644)))
  let let1087 := (Eq let6 let31)
  let let1088 := (Or let962 (Or let286 let905))
  let let1089 := (Or let905 let905)
  let let1090 := (Or let962 (Or let286 let1089))
  let let1091 := (Not let221)
  let let1092 := (Not let370)
  let let1093 := (Or let1091 let1092)
  let let1094 := (Implies let221 let1092)
  let let1095 := (Not let43)
  let let1096 := (Or let962 (Or let1095 let286))
  let let1097 := (Or let966 (Or let1044 (Or let908 let1096)))
  let let1098 := (Or let966 (Or let1044 (Or let962 (Or let1095 let1045))))
  let let1099 := (Or let908 let1098)
  let let1100 := (Implies let199 let1012)
  let let1101 := (Eq let4 let23)
  let let1102 := (And let468 let1101)
  let let1103 := (Implies let1102 let1011)
  let let1104 := (Or let1052 (Or (Not let1101) let1011))
  let let1105 := (Implies let182 let1101)
  let let1106 := (Or (Not let182) let1101)
  let let1107 := (And let43 let982)
  let let1108 := (Implies let1107 let182)
  let let1109 := (Or let1095 (Or let962 (Or let908 let182)))
  let let1110 := (Eq let42 let24)
  let let1111 := (Implies let176 let989)
  let let1112 := (Or let1044 let1077)
  let let1113 := (And let468 (And let44 let1002))
  let let1114 := (Not let351)
  let let1115 := (Not let352)
  let let1116 := (Or let1115 (Or let900 let1114))
  let let1117 := (And let352 let148)
  let let1118 := (Implies let1117 let1114)
  let let1119 := (Eq let351 False)
  let let1120 := (Or let887 let966)
  let let1121 := (Or let907 let907)
  let let1122 := (Not let58)
  let let1123 := (Or let887 (Or let966 (Or let1122 let962)))
  let let1124 := (Implies let84 let1012)
  let let1125 := (And let29 let58)
  let let1126 := (And let723 let1125)
  let let1127 := (Or let1122 let1011)
  let let1128 := (Or let962 let1127)
  let let1129 := (Eq let4 let28)
  let let1130 := (Implies let76 let1012)
  let let1131 := (And let719 let58)
  let let1132 := (Or let1122 let1059)
  let let1133 := (Or let887 (Or let966 let1132))
  let let1134 := (Implies let71 let1012)
  let let1135 := (And let468 (And let25 let1125))
  let let1136 := (Implies let1135 let1011)
  let let1137 := (Or let1052 (Or let1042 let1128))
  let let1138 := (And let21 (And let1011 let988))
  let let1139 := (Implies let66 let1138)
  let let1140 := (Eq let1138 False)
  let let1141 := (binrel% HAdd.hAdd let624 let1016)
  let let1142 := (binrel% LE.le let927 let1141)
  let let1143 := (Or let197 (Or let286 let1138))
  let let1144 := (Eq let1 let18)
  let let1145 := (And let21 (And let1144 let915))
  let let1146 := (Implies let60 let1145)
  let let1147 := (binrel% HAdd.hAdd let572 (binrel% HAdd.hAdd let249 let714))
  let let1148 := (binrel% LE.le let927 let1147)
  let let1149 := (Eq let717 let249)
  let let1150 := (Eq let18 let1)
  let let1151 := (And let251 let1150)
  let let1152 := (Eq let1 let23)
  let let1153 := (And let468 let1152)
  let let1154 := (And let43 let1125)
  let let1155 := (Not let284)
  let let1156 := (Or let1155 let1114)
  let let1157 := (Implies let284 let1114)
  let let1158 := (Or let1155 let900)
  let let1159 := (Implies let284 let900)
  let let1160 := (Not let38)
  let let1161 := (Implies let99 let989)
  let let1162 := (And let719 let38)
  let let1163 := (Or let1160 let988)
  let let1164 := (Eq let4 let33)
  let let1165 := (Implies let633 let989)
  let let1166 := (And let34 let38)
  let let1167 := (And let723 let1166)
  let let1168 := (Or let966 let1163)
  let let1169 := (Implies let47 let1138)
  let let1170 := (And let468 (And let44 let1166))
  let let1171 := (Implies let1170 let988)
  let let1172 := (Or let1052 (Or let1044 let1168))
  let let1173 := (Implies let573 let989)
  let let1174 := (Eq let1 let19)
  let let1175 := (And let21 (And let916 let1174))
  let let1176 := (Implies let39 let1175)
  let let1177 := (Eq let19 let1)
  let let1178 := (Not let1177)
  let let1179 := (binrel% HAdd.hAdd let249 let925)
  let let1180 := (binrel% LE.le let927 let1179)
  let let1181 := (Eq let155 let249)
  let let1182 := (And let251 let1177)
  let let1183 := (Eq let1 let2)
  let let1184 := (And let468 let1183)
  let let1185 := (And let32 let1166)
fun lean_r0 : (Eq let7 let3) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let13 let9) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let41 let40) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let49 let48) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq let54 let53) => -- THEORY_REWRITE_BOOL
fun lean_r5 : let54 => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let56 let55) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let57 let9) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let62 let61) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let65 let9) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let68 let67) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let73 let72) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let78 let77) => -- THEORY_REWRITE_BOOL
fun lean_r13 : (Eq let86 let85) => -- THEORY_REWRITE_BOOL
fun lean_r14 : let89 => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let92 let91) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let94 let43) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let97 let96) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let101 let100) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let103 let102) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let105 let104) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let112 let107) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let115 let114) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let117 let116) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let121 let120) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let126 let124) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let130 let129) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let132 let131) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let133 let34) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let135 let134) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let140 let139) => -- THEORY_REWRITE_BOOL
fun lean_r31 : (Eq let144 let143) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let146 let145) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let149 let148) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let153 let152) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let155 let154) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let158 let157) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let159 True) => -- THEORY_REWRITE_ARITH
fun lean_r38 : let158 => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let161 let160) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let162 True) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let165 let164) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let167 let166) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let168 True) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let172 let170) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let173 let44) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let178 let177) => -- THEORY_REWRITE_BOOL
fun lean_r47 : let180 => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let182 let181) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let183 True) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let185 let32) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let188 let187) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let191 let27) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let194 let193) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let196 let195) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let198 let21) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let201 let200) => -- THEORY_REWRITE_BOOL
fun lean_r57 : (Eq let204 let203) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let218 let217) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let220 let219) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let222 let221) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let225 let224) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let226 False) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let227 let189) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let229 let228) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let231 let230) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let233 let232) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let235 False) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let238 let237) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let242 let241) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let245 let244) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let248 let247) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let249 let8) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let250 let197) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let251 True) => -- EVALUATE
fun lean_r75 : (Eq let252 let252) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let255 let254) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let256 let127) => -- THEORY_REWRITE_ARITH
fun lean_r78 : let257 => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let259 let258) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let263 let262) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let264 fmt1) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let265 let265) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let268 let266) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let269 let79) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let271 let270) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let272 let93) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let274 let273) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let276 let275) => -- THEORY_REWRITE_ARITH
fun lean_r89 : let278 => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let282 let280) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let283 let184) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let285 let284) => -- THEORY_REWRITE_ARITH
fun lean_r93 : let288 => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq let239 let5) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let292 let291) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let300 let299) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let303 let301) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let304 False) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let306 let305) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let310 let309) => -- THEORY_REWRITE_BOOL
fun lean_r101 : (Eq let311 let311) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let313 let312) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let402 let401) => -- THEORY_REWRITE_BOOL
fun lean_r104 : (Eq let403 let25) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let404 let390) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let405 let405) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let406 True) => -- THEORY_REWRITE_ARITH
fun lean_r108 : let407 => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let408 let387) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let410 let409) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let411 let234) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let413 let412) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let414 let337) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let415 let340) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let416 let316) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let418 let417) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let422 let421) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let423 let17) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let424 let29) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let456 let455) => -- THEORY_REWRITE_BOOL
fun lean_r121 : (Eq let457 let385) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let461 let460) => -- THEORY_REWRITE_BOOL
fun lean_r123 : (Eq let462 True) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let463 let14) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let464 let389) => -- THEORY_REWRITE_ARITH
fun lean_r126 : let465 => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let467 let466) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let468 let15) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let469 True) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let474 let473) => -- THEORY_REWRITE_BOOL
fun lean_r131 : (Eq let419 let202) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let477 let476) => -- THEORY_REWRITE_ARITH
fun lean_r133 : let461 => -- THEORY_REWRITE_BOOL
fun lean_r134 : (Eq let478 let1) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let479 let380) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let480 let319) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let481 let331) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let482 False) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let483 let118) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let451 let484) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let485 let399) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let486 let332) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let490 let489) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let491 let107) => -- THEORY_REWRITE_BOOL
fun lean_r145 : (Eq let492 let341) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let293 let494) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let211 let171) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let495 let342) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let213 let281) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let496 let345) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let497 let330) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let498 let348) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let435 let499) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let500 let125) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let425 let501) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let502 let17) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let427 let503) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let504 let351) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let510 let509) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let429 let511) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let512 let352) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq let513 let358) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let514 let366) => -- THEORY_REWRITE_ARITH
fun lean_r164 : (Eq let525 let524) => -- THEORY_REWRITE_BOOL
fun lean_r165 : (Eq let529 let528) => -- THEORY_REWRITE_BOOL
fun lean_r166 : (Eq let215 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r167 : (Eq let260 let190) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let530 let379) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let531 let193) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let532 let367) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let507 let534) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let535 let4) => -- THEORY_REWRITE_ARITH
fun lean_r173 : (Eq let536 False) => -- THEORY_REWRITE_ARITH
fun lean_r174 : (Eq let537 let382) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let449 let538) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let539 let370) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq let540 let383) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let543 let542) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let544 let392) => -- THEORY_REWRITE_ARITH
fun lean_r180 : (Eq let547 let546) => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq let205 let548) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq let241 let549) => -- THEORY_REWRITE_ARITH
fun lean_r183 : let551 => -- THEORY_REWRITE_ARITH
fun lean_r184 : (Eq let552 let393) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq let557 let556) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let209 let558) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let559 let21) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq let562 let561) => -- THEORY_REWRITE_ARITH
fun lean_r189 : (Eq let563 let322) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq let564 True) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let444 let565) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let567 let137) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq let294 let568) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let569 let566) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq let442 let570) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let448 let571) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq let572 let11) => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq let575 let574) => -- THEORY_REWRITE_BOOL
fun lean_r199 : (Eq let454 let576) => -- THEORY_REWRITE_ARITH
fun lean_r200 : (Eq let180 let577) => -- THEORY_REWRITE_BOOL
fun lean_r201 : (Eq let579 let357) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let580 let323) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq let582 let11) => -- THEORY_REWRITE_ARITH
fun lean_r204 : (Eq let583 let578) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq let585 let584) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq let587 let361) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let594 let592) => -- THEORY_REWRITE_ARITH
fun lean_r208 : (Eq let437 let595) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let597 let596) => -- THEORY_REWRITE_ARITH
fun lean_r210 : (Eq let598 let586) => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let89 let599) => -- THEORY_REWRITE_BOOL
fun lean_r212 : (Eq let600 let365) => -- THEORY_REWRITE_ARITH
fun lean_r213 : (Eq let603 let602) => -- THEORY_REWRITE_ARITH
fun lean_r214 : (Eq let432 let604) => -- THEORY_REWRITE_ARITH
fun lean_r215 : (Eq let606 let175) => -- THEORY_REWRITE_ARITH
fun lean_r216 : (Eq let607 let605) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq let443 let608) => -- THEORY_REWRITE_ARITH
fun lean_r218 : (Eq let207 let609) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq let426 let610) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let431 let611) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq let434 let612) => -- THEORY_REWRITE_ARITH
fun lean_r222 : (Eq let436 let613) => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let614 True) => -- THEORY_REWRITE_BOOL
fun lean_r224 : (Eq let438 let615) => -- THEORY_REWRITE_ARITH
fun lean_r225 : let617 => -- THEORY_REWRITE_BOOL
fun lean_r226 : (Eq let618 let335) => -- THEORY_REWRITE_ARITH
fun lean_r227 : (Eq let439 let619) => -- THEORY_REWRITE_ARITH
fun lean_r228 : (Eq let617 let620) => -- THEORY_REWRITE_BOOL
fun lean_r229 : (Eq let440 let621) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq let622 let336) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq let441 let623) => -- THEORY_REWRITE_ARITH
fun lean_r232 : (Eq let624 let63) => -- THEORY_REWRITE_ARITH
fun lean_r233 : (Eq let445 let625) => -- THEORY_REWRITE_ARITH
fun lean_r234 : (Eq let628 let627) => -- THEORY_REWRITE_BOOL
fun lean_r235 : (Eq let428 let629) => -- THEORY_REWRITE_ARITH
fun lean_r236 : (Eq let446 let630) => -- THEORY_REWRITE_ARITH
fun lean_r237 : (Eq let433 let631) => -- THEORY_REWRITE_ARITH
fun lean_r238 : (Eq let447 let632) => -- THEORY_REWRITE_ARITH
fun lean_r239 : (Eq let635 let634) => -- THEORY_REWRITE_BOOL
fun lean_r240 : (Eq let450 let636) => -- THEORY_REWRITE_ARITH
fun lean_r241 : (Eq let452 let637) => -- THEORY_REWRITE_ARITH
fun lean_r242 : (Eq let430 let638) => -- THEORY_REWRITE_ARITH
fun lean_r243 : (Eq let641 let640) => -- THEORY_REWRITE_BOOL
fun lean_r244 : (Eq let453 let642) => -- THEORY_REWRITE_ARITH
fun lean_r245 : (Eq let644 let643) => -- THEORY_REWRITE_ARITH
fun lean_r246 : (Eq let493 let16) => -- THEORY_REWRITE_ARITH
fun lean_r247 : (Eq let645 let593) => -- THEORY_REWRITE_ARITH
fun lean_r248 : (Eq let533 let192) => -- THEORY_REWRITE_ARITH
fun lean_r249 : (Eq let534 let646) => -- THEORY_REWRITE_ARITH
fun lean_r250 : (Eq let649 let648) => -- THEORY_REWRITE_ARITH
fun lean_r251 : (Eq let650 let601) => -- THEORY_REWRITE_BOOL
fun lean_r252 : (Eq let653 let652) => -- THEORY_REWRITE_ARITH
fun lean_r253 : (Eq let656 let655) => -- THEORY_REWRITE_ARITH
fun lean_r254 : (Eq let659 let657) => -- THEORY_REWRITE_ARITH
fun lean_r255 : (Eq let660 let658) => -- THEORY_REWRITE_ARITH
fun lean_r256 : (Eq let710 let709) => -- THEORY_REWRITE_BOOL
fun lean_r257 : (Eq let711 let267) => -- THEORY_REWRITE_ARITH
fun lean_r258 : (Eq let679 let356) => -- THEORY_REWRITE_ARITH
fun lean_r259 : (Eq let712 True) => -- THEORY_REWRITE_BOOL
fun lean_r260 : (Eq let713 let10) => -- THEORY_REWRITE_ARITH
fun lean_r261 : (Eq let714 let10) => -- THEORY_REWRITE_ARITH
fun lean_r262 : (Eq let715 let466) => -- THEORY_REWRITE_ARITH
fun lean_r263 : (Eq let716 let27) => -- THEORY_REWRITE_ARITH
fun lean_r264 : (Eq let717 let581) => -- THEORY_REWRITE_ARITH
fun lean_r265 : (Eq let718 True) => -- EVALUATE
fun lean_r266 : (Eq let719 let74) => -- THEORY_REWRITE_ARITH
fun lean_r267 : (Eq let519 let289) => -- THEORY_REWRITE_ARITH
fun lean_r268 : (Eq let720 True) => -- THEORY_REWRITE_BOOL
fun lean_r269 : (Eq let721 True) => -- THEORY_REWRITE_ARITH
fun lean_r270 : (Eq let722 let362) => -- THEORY_REWRITE_ARITH
fun lean_r271 : (Eq let723 let80) => -- THEORY_REWRITE_ARITH
fun lean_r272 : (Eq let725 let724) => -- THEORY_REWRITE_ARITH
fun lean_r273 : (Eq let726 True) => -- THEORY_REWRITE_BOOL
fun lean_r274 : (Eq let288 let727) => -- THEORY_REWRITE_BOOL
fun lean_r275 : (Eq let728 let400) => -- THEORY_REWRITE_ARITH
fun lean_r276 : (Eq let729 let394) => -- THEORY_REWRITE_ARITH
fun lean_r277 : (Eq let550 let550) => -- THEORY_REWRITE_ARITH
fun lean_r278 : let225 => -- THEORY_REWRITE_ARITH
fun lean_a279 : let710 => by
have lean_s0 : (Or let1160 (Or let908 (Or let966 (Or let1072 (Or let962 (Or let1042 (Or let197 (Or let286 let1175)))))))) :=
  (scope (fun lean_a280 : let38 =>
    (scope (fun lean_a281 : let36 =>
      (scope (fun lean_a282 : let34 =>
        (scope (fun lean_a283 : let32 =>
          (scope (fun lean_a284 : let29 =>
            (scope (fun lean_a285 : let25 =>
              (scope (fun lean_a286 : let21 =>
                (scope (fun lean_a287 : let15 =>
                  have lean_s0 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1 : let468 := by timed eqResolve lean_a287 lean_s0
                  let lean_s2 := by timed And.intro lean_a284 lean_a281
                  let lean_s3 := by timed And.intro lean_a285 lean_s2
                  have lean_s4 : let1069 := by timed And.intro lean_s1 lean_s3
                  have lean_s5 : let1071 :=
                    (scope (fun lean_a288 : let468 =>
                      (scope (fun lean_a289 : let25 =>
                        (scope (fun lean_a290 : let29 =>
                          (scope (fun lean_a291 : let36 =>
                            have lean_s5 : let953 := by timed Eq.symm lean_a291
                            have lean_s6 : let424 := by timed Eq.symm lean_a290
                            have lean_s7 : let29 := by timed Eq.symm lean_s6
                            let lean_s8 := by timed Eq.trans lean_s5 lean_s7
                            have lean_s9 : let403 := by timed Eq.symm lean_a289
                            have lean_s10 : let25 := by timed Eq.symm lean_s9
                            let lean_s11 := by timed Eq.trans lean_s8 lean_s10
                            have lean_s12 : let1055 := by timed Eq.symm lean_a288
                            have lean_s13 : let468 := by timed Eq.symm lean_s12
                            have lean_s14 : let1058 := by timed flipCongrArg lean_s13 [xx5fcount]
                            have lean_s15 : let916 := by timed Eq.trans lean_s11 lean_s14
                            show let916 from lean_s15
                    ))))))))
                  have lean_s6 : let1070 := by liftOrNToImp lean_s5, 4
                  have lean_s7 : let916 := by timed modusPonens lean_s4 lean_s6
                  let lean_s8 := by timed And.intro lean_a282 lean_a280
                  have lean_s9 : let1185 := by timed And.intro lean_a283 lean_s8
                  have lean_s10 : (Or let1072 (Or let966 (Or let1160 let7))) :=
                    (scope (fun lean_a289 : let32 =>
                      (scope (fun lean_a290 : let34 =>
                        (scope (fun lean_a291 : let38 =>
                          have lean_s10 : let1164 := by timed Eq.symm lean_a291
                          have lean_s11 : let133 := by timed Eq.symm lean_a290
                          have lean_s12 : let34 := by timed Eq.symm lean_s11
                          let lean_s13 := by timed Eq.trans lean_s10 lean_s12
                          have lean_s14 : let1087 := by timed Eq.symm lean_a289
                          have lean_s15 : let32 := by timed Eq.symm lean_s14
                          have lean_s16 : let7 := by timed Eq.trans lean_s13 lean_s15
                          show let7 from lean_s16
                    ))))))
                  have lean_s11 : (Implies let1185 let7) := by liftOrNToImp lean_s10, 3
                  have lean_s12 : let7 := by timed modusPonens lean_s9 lean_s11
                  have lean_s13 : (Or (Not let7) let1183) :=
                    (scope (fun lean_a289 : let7 =>
                      have lean_s13 : let3 := by timed eqResolve lean_a289 lean_r0
                      have lean_s14 : let1183 := by timed Eq.symm lean_s13
                      show let1183 from lean_s14
                    ))
                  have lean_s14 : (Implies let7 let1183) := by liftOrNToImp lean_s13, 1
                  have lean_s15 : let1183 := by timed modusPonens lean_s12 lean_s14
                  have lean_s16 : let1184 := by timed And.intro lean_s1 lean_s15
                  have lean_s17 : (Or let1052 (Or (Not let1183) let1174)) :=
                    (scope (fun lean_a290 : let468 =>
                      (scope (fun lean_a291 : let1183 =>
                        have lean_s17 : let3 := by timed Eq.symm lean_a291
                        have lean_s18 : let1183 := by timed Eq.symm lean_s17
                        have lean_s19 : let1055 := by timed Eq.symm lean_a290
                        have lean_s20 : let468 := by timed Eq.symm lean_s19
                        have lean_s21 : let1054 := by timed flipCongrArg lean_s20 [sx5fcount]
                        have lean_s22 : let1174 := by timed Eq.trans lean_s18 lean_s21
                        show let1174 from lean_s22
                    ))))
                  have lean_s18 : (Implies let1184 let1174) := by liftOrNToImp lean_s17, 2
                  have lean_s19 : let1174 := by timed modusPonens lean_s16 lean_s18
                  let lean_s20 := by timed And.intro lean_s7 lean_s19
                  have lean_s21 : let1175 := by timed And.intro lean_a286 lean_s20
                  show let1175 from lean_s21
  ))))))))))))))))
have lean_s1 : let1176 := by liftOrNToImp lean_s0, 8
have lean_s2 : (Eq let39 let39) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or let197 (Or let921 (Or (Not let1174) False))) :=
  (scope (fun lean_a291 : let21 =>
    (scope (fun lean_a292 : let916 =>
      (scope (fun lean_a293 : let1174 =>
        have lean_s4 : let1177 := by timed Eq.symm lean_a293
        have lean_s5 : (Or let1178 False) :=
          (scope (fun lean_a293 : let1177 =>
            have lean_s5 : let251 := by timed trueElim lean_r74
            have lean_s6 : let1182 := by timed And.intro lean_s5 lean_a293
            have lean_s7 : (Implies let1182 let1181) := by arithMulPos [let19, let1, let63], 4
            have lean_s8 : let1181 := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : let933 := by timed Eq.symm lean_a292
            have lean_s10 : let934 := by timed And.intro lean_s5 lean_s9
            have lean_s11 : let935 := by arithMulPos [let18, let27, let63], 4
            have lean_s12 : let932 := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : let718 := by timed trueElim lean_r265
            have lean_s14 : let930 := by timed And.intro lean_s13 lean_a291
            have lean_s15 : let931 := by arithMulNeg [let20, let14, let302], 3
            have lean_s16 : let929 := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : let1180 := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r264 lean_r97
            have lean_s19 : (Eq let927 let582) := by timed congrHAdd lean_r35 lean_s18
            have lean_s20 : (Eq let927 let11) := by timed Eq.trans lean_s19 lean_r203
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r197 lean_r261
            have lean_s23 : (Eq let1179 let13) := by timed congrHAdd lean_r72 lean_s22
            have lean_s24 : (Eq let1179 let9) := by timed Eq.trans lean_s23 lean_r1
            have lean_s25 : (Eq let1180 let226) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let1180 False) := by timed Eq.trans lean_s25 lean_r62
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : let1178 := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not let1175) := by liftOrNToNeg lean_s4
have lean_s6 : (Eq let1175 False) := by timed falseIntro lean_s5
have lean_s7 : (Eq let1176 let41) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let1176 let40) := by timed Eq.trans lean_s7 lean_r2
have lean_s9 : let40 := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or let1160 let1075) := by timed flipNotAnd lean_s9 [let38, let36, let34, let32, let29, let25, let21, let15]
have lean_s11 : (Or let197 (Or let1160 let1073)) := by permutateOr lean_s10, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
have lean_s12 : let836 := by timed rfl
have lean_s13 : (Eq let708 let708) := by timed rfl
let lean_s14 := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq let707 let707) := by timed rfl
let lean_s16 := by timed congr lean_s12 lean_s15
have lean_s17 : (Eq let706 let706) := by timed rfl
let lean_s18 := by timed congr lean_s12 lean_s17
have lean_s19 : (Eq let705 let705) := by timed rfl
let lean_s20 := by timed congr lean_s12 lean_s19
have lean_s21 : (Eq let704 let704) := by timed rfl
let lean_s22 := by timed congr lean_s12 lean_s21
have lean_s23 : (Eq let703 let703) := by timed rfl
let lean_s24 := by timed congr lean_s12 lean_s23
have lean_s25 : (Eq let702 let702) := by timed rfl
let lean_s26 := by timed congr lean_s12 lean_s25
have lean_s27 : (Eq let701 let701) := by timed rfl
let lean_s28 := by timed congr lean_s12 lean_s27
have lean_s29 : (Eq let700 let700) := by timed rfl
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq let699 let699) := by timed rfl
let lean_s32 := by timed congr lean_s12 lean_s31
have lean_s33 : let877 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let698 let659) := by timed congr lean_s34 lean_r255
have lean_s36 : (Eq let698 let657) := by timed Eq.trans lean_s35 lean_r254
let lean_s37 := by timed congr lean_s12 lean_s36
let lean_s38 := by timed congr lean_s12 lean_r185
have lean_s39 : let838 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [GE.ge]
have lean_s41 : (Eq fmt0 fmt0) := by timed rfl
have lean_s42 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s43 := by timed congrHAdd lean_s42 lean_r94
have lean_s44 : (Eq let549 let410) := by timed congrHAdd lean_s41 lean_s43
have lean_s45 : (Eq let549 let409) := by timed Eq.trans lean_s44 lean_r110
have lean_s46 : (Eq let241 let409) := by timed Eq.trans lean_r182 lean_s45
have lean_s47 : (Eq let242 let409) := by timed Eq.trans lean_r69 lean_s46
have lean_s48 : (Eq let545 let656) := by timed congr lean_s40 lean_s47
have lean_s49 : (Eq let545 let655) := by timed Eq.trans lean_s48 lean_r253
have lean_s50 : (Eq let546 let772) := by timed flipCongrArg lean_s49 [Not]
have lean_s51 : (Eq let547 let772) := by timed Eq.trans lean_r180 lean_s50
let lean_s52 := by timed congr lean_s12 lean_s51
let lean_s53 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s54 : (Eq let651 let603) := by timed congr lean_s53 lean_r149
have lean_s55 : (Eq let651 let602) := by timed Eq.trans lean_s54 lean_r213
have lean_s56 : (Eq let652 let650) := by timed flipCongrArg lean_s55 [Not]
have lean_s57 : (Eq let652 let601) := by timed Eq.trans lean_s56 lean_r251
have lean_s58 : (Eq let653 let601) := by timed Eq.trans lean_r252 lean_s57
let lean_s59 := by timed congr lean_s12 lean_s58
let lean_s60 := by timed congr lean_s12 lean_r250
have lean_s61 : let876 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq distance distance) := by timed rfl
let lean_s64 := by timed congrHAdd lean_s42 lean_r248
let lean_s65 := by timed congrHAdd lean_s63 lean_s64
have lean_s66 : (Eq let646 let645) := by timed congrHAdd lean_s33 lean_s65
have lean_s67 : (Eq let646 let593) := by timed Eq.trans lean_s66 lean_r247
have lean_s68 : (Eq let534 let593) := by timed Eq.trans lean_r249 lean_s67
have lean_s69 : (Eq let507 let593) := by timed Eq.trans lean_r171 lean_s68
have lean_s70 : (Eq let508 let594) := by timed congr lean_s62 lean_s69
have lean_s71 : (Eq let508 let592) := by timed Eq.trans lean_s70 lean_r207
have lean_s72 : (Eq let509 let771) := by timed flipCongrArg lean_s71 [Not]
have lean_s73 : (Eq let510 let771) := by timed Eq.trans lean_r159 lean_s72
let lean_s74 := by timed congr lean_s12 lean_s73
let lean_s75 := by timed flipCongrArg lean_s61 [Eq]
have lean_s76 : let159 := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [HMul.hMul]
let lean_s78 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s79 : (Eq let494 let423) := by timed congr lean_s78 lean_r246
have lean_s80 : (Eq let494 let17) := by timed Eq.trans lean_s79 lean_r118
have lean_s81 : (Eq let293 let17) := by timed Eq.trans lean_r146 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let487 let487) := by timed rfl
have lean_s84 : (Eq let568 let490) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let568 let489) := by timed Eq.trans lean_s84 lean_r143
have lean_s86 : (Eq let294 let489) := by timed Eq.trans lean_r193 lean_s85
have lean_s87 : (Eq let297 let767) := by timed flipCongrArg lean_s86 [sx5fcount]
have lean_s88 : (Eq let298 let768) := by timed congr lean_s77 lean_s87
let lean_s89 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s90 : (Eq let295 let765) := by timed flipCongrArg lean_s86 [xx5fcount]
have lean_s91 : (Eq let296 let766) := by timed congr lean_s89 lean_s90
let lean_s92 := by timed congrHAdd lean_s88 lean_s91
have lean_s93 : (Eq let299 let769) := by timed congrHAdd lean_s33 lean_s92
have lean_s94 : (Eq let300 let769) := by timed Eq.trans lean_r96 lean_s93
have lean_s95 : (Eq let697 let770) := by timed congr lean_s75 lean_s94
let lean_s96 := by timed congr lean_s12 lean_s95
have lean_s97 : let837 := by timed rfl
let lean_s98 := by timed congr lean_s97 lean_r199
let lean_s99 := by timed congr lean_s97 lean_r244
let lean_s100 := by timed congr lean_s97 lean_r85
let lean_s101 := by timed congr lean_s97 lean_r241
let lean_s102 := by timed congr lean_s97 lean_r87
let lean_s103 := by timed congr lean_s97 lean_r140
let lean_s104 := by timed congr lean_s97 lean_r240
have lean_s105 : let868 := by timed rfl
let lean_s106 := by timed congr lean_s97 lean_s105
let lean_s107 := by timed congr lean_s97 lean_r112
let lean_s108 := by timed congr lean_s97 lean_r175
let lean_s109 := by timed congr lean_s97 lean_r196
let lean_s110 := by timed congr lean_s97 lean_r238
let lean_s111 := by timed congr lean_s97 lean_r236
let lean_s112 := by timed congr lean_s97 lean_r65
let lean_s113 := by timed congr lean_s97 lean_r233
have lean_s114 : let867 := by timed rfl
let lean_s115 := by timed congr lean_s97 lean_s114
let lean_s116 := by timed congr lean_s97 lean_r191
let lean_s117 := by timed congr lean_s97 lean_r217
let lean_s118 := by timed congr lean_s97 lean_r195
let lean_s119 := by timed congr lean_s97 lean_r231
let lean_s120 := by timed congr lean_s97 lean_r229
let lean_s121 := by timed congr lean_s97 lean_r227
let lean_s122 := by timed congr lean_s97 lean_r224
have lean_s123 : let866 := by timed rfl
let lean_s124 := by timed congr lean_s97 lean_s123
let lean_s125 := by timed congr lean_s97 lean_r208
let lean_s126 := by timed congr lean_s97 lean_r42
let lean_s127 := by timed congr lean_s97 lean_r15
let lean_s128 := by timed congr lean_s97 lean_r222
let lean_s129 := by timed congr lean_s97 lean_r19
let lean_s130 := by timed congr lean_s97 lean_r153
let lean_s131 := by timed congr lean_s97 lean_r221
have lean_s132 : let865 := by timed rfl
let lean_s133 := by timed congr lean_s97 lean_s132
let lean_s134 := by timed congr lean_s97 lean_r237
let lean_s135 := by timed congr lean_s97 lean_r214
let lean_s136 := by timed congr lean_s97 lean_r29
let lean_s137 := by timed congr lean_s97 lean_r220
let lean_s138 := by timed congr lean_s97 lean_r22
let lean_s139 := by timed congr lean_s97 lean_r242
let lean_s140 := by timed congr lean_s97 lean_r23
have lean_s141 : let864 := by timed rfl
let lean_s142 := by timed congr lean_s97 lean_s141
let lean_s143 := by timed congr lean_s97 lean_r24
let lean_s144 := by timed congr lean_s97 lean_r160
let lean_s145 := by timed congr lean_s97 lean_r235
let lean_s146 := by timed congr lean_s97 lean_r157
let lean_s147 := by timed congr lean_s97 lean_r99
let lean_s148 := by timed congr lean_s97 lean_r219
let lean_s149 := by timed congr lean_s97 lean_r155
have lean_s150 : let863 := by timed rfl
let lean_s151 := by timed congr lean_s149 lean_s150
let lean_s152 := by timed congr lean_s148 lean_s151
let lean_s153 := by timed congr lean_s147 lean_s152
let lean_s154 := by timed congr lean_s146 lean_s153
let lean_s155 := by timed congr lean_s145 lean_s154
let lean_s156 := by timed congr lean_s144 lean_s155
let lean_s157 := by timed congr lean_s143 lean_s156
let lean_s158 := by timed congr lean_s142 lean_s157
let lean_s159 := by timed congr lean_s140 lean_s158
let lean_s160 := by timed congr lean_s139 lean_s159
let lean_s161 := by timed congr lean_s138 lean_s160
let lean_s162 := by timed congr lean_s137 lean_s161
let lean_s163 := by timed congr lean_s136 lean_s162
let lean_s164 := by timed congr lean_s135 lean_s163
let lean_s165 := by timed congr lean_s134 lean_s164
let lean_s166 := by timed congr lean_s133 lean_s165
let lean_s167 := by timed congr lean_s131 lean_s166
let lean_s168 := by timed congr lean_s130 lean_s167
let lean_s169 := by timed congr lean_s129 lean_s168
let lean_s170 := by timed congr lean_s128 lean_s169
let lean_s171 := by timed congr lean_s127 lean_s170
let lean_s172 := by timed congr lean_s126 lean_s171
let lean_s173 := by timed congr lean_s125 lean_s172
let lean_s174 := by timed congr lean_s124 lean_s173
let lean_s175 := by timed congr lean_s122 lean_s174
let lean_s176 := by timed congr lean_s121 lean_s175
let lean_s177 := by timed congr lean_s120 lean_s176
let lean_s178 := by timed congr lean_s119 lean_s177
let lean_s179 := by timed congr lean_s118 lean_s178
let lean_s180 := by timed congr lean_s117 lean_s179
let lean_s181 := by timed congr lean_s116 lean_s180
let lean_s182 := by timed congr lean_s115 lean_s181
let lean_s183 := by timed congr lean_s113 lean_s182
let lean_s184 := by timed congr lean_s112 lean_s183
let lean_s185 := by timed congr lean_s111 lean_s184
let lean_s186 := by timed congr lean_s110 lean_s185
let lean_s187 := by timed congr lean_s109 lean_s186
let lean_s188 := by timed congr lean_s108 lean_s187
let lean_s189 := by timed congr lean_s107 lean_s188
let lean_s190 := by timed congr lean_s106 lean_s189
let lean_s191 := by timed congr lean_s104 lean_s190
let lean_s192 := by timed congr lean_s103 lean_s191
let lean_s193 := by timed congr lean_s102 lean_s192
let lean_s194 := by timed congr lean_s101 lean_s193
let lean_s195 := by timed congr lean_s100 lean_s194
let lean_s196 := by timed congr lean_s99 lean_s195
have lean_s197 : (Eq let455 let764) := by timed congr lean_s98 lean_s196
have lean_s198 : (Eq let456 let764) := by timed Eq.trans lean_r120 lean_s197
let lean_s199 := by timed congr lean_s12 lean_s198
let lean_s200 := by timed flipCongrArg lean_r199 [And]
have lean_s201 : (Eq let695 let762) := by timed congr lean_s200 lean_r175
have lean_s202 : let862 := by timed rfl
have lean_s203 : let861 := by timed rfl
have lean_s204 : (Eq let696 let763) := by timed congrIte lean_s201 lean_s202 lean_s203
let lean_s205 := by timed congr lean_s12 lean_s204
let lean_s206 := by timed flipCongrArg lean_r112 [And]
have lean_s207 : (Eq let693 let760) := by timed congr lean_s206 lean_r217
have lean_s208 : (Eq let31 let31) := by timed rfl
let lean_s209 := by timed flipCongrArg lean_s208 [Eq]
have lean_s210 : (Eq let692 let606) := by timed congr lean_s209 lean_r216
have lean_s211 : (Eq let692 let175) := by timed Eq.trans lean_s210 lean_r215
have lean_s212 : (Eq let694 let761) := by timed congrIte lean_s207 lean_s211 lean_r28
let lean_s213 := by timed congr lean_s12 lean_s212
let lean_s214 := by timed flipCongrArg lean_r191 [And]
have lean_s215 : (Eq let690 let758) := by timed congr lean_s214 lean_r42
have lean_s216 : (Eq let2 let2) := by timed rfl
let lean_s217 := by timed flipCongrArg lean_s216 [Eq]
have lean_s218 : (Eq let689 let185) := by timed congr lean_s217 lean_r91
have lean_s219 : (Eq let689 let32) := by timed Eq.trans lean_s218 lean_r50
have lean_s220 : (Eq let691 let759) := by timed congrIte lean_s215 lean_s219 lean_r45
let lean_s221 := by timed congr lean_s12 lean_s220
let lean_s222 := by timed flipCongrArg lean_r208 [And]
have lean_s223 : (Eq let687 let756) := by timed congr lean_s222 lean_r214
have lean_s224 : (Eq let151 let151) := by timed rfl
let lean_s225 := by timed flipCongrArg lean_s224 [Eq]
have lean_s226 : (Eq let686 let514) := by timed congr lean_s225 lean_r54
have lean_s227 : (Eq let686 let366) := by timed Eq.trans lean_s226 lean_r163
have lean_s228 : (Eq let688 let757) := by timed congrIte lean_s223 lean_s227 lean_r212
let lean_s229 := by timed congr lean_s12 lean_s228
let lean_s230 := by timed flipCongrArg lean_r237 [And]
have lean_s231 : (Eq let684 let754) := by timed congr lean_s230 lean_r160
have lean_s232 : (Eq let150 let150) := by timed rfl
let lean_s233 := by timed flipCongrArg lean_s232 [Eq]
have lean_s234 : (Eq let683 let587) := by timed congr lean_s233 lean_r210
have lean_s235 : (Eq let683 let361) := by timed Eq.trans lean_s234 lean_r206
have lean_s236 : (Eq let685 let755) := by timed congrIte lean_s231 lean_s235 lean_r34
let lean_s237 := by timed congr lean_s12 lean_s236
let lean_s238 := by timed flipCongrArg lean_r24 [And]
have lean_s239 : (Eq let681 let752) := by timed congr lean_s238 lean_r205
have lean_s240 : (Eq let355 let355) := by timed rfl
let lean_s241 := by timed flipCongrArg lean_s240 [Eq]
have lean_s242 : (Eq let680 let579) := by timed congr lean_s241 lean_r204
have lean_s243 : (Eq let680 let357) := by timed Eq.trans lean_s242 lean_r201
have lean_s244 : (Eq let682 let753) := by timed congrIte lean_s239 lean_s243 lean_r258
let lean_s245 := by timed congr lean_s12 lean_s244
let lean_s246 := by timed flipCongrArg lean_r199 [And]
have lean_s247 : (Eq let677 let750) := by timed congr lean_s246 lean_r196
have lean_s248 : let850 := by timed rfl
have lean_s249 : let849 := by timed rfl
have lean_s250 : (Eq let678 let751) := by timed congrIte lean_s247 lean_s248 lean_s249
let lean_s251 := by timed congr lean_s12 lean_s250
let lean_s252 := by timed flipCongrArg lean_r112 [And]
have lean_s253 : (Eq let675 let748) := by timed congr lean_s252 lean_r195
have lean_s254 : (Eq let24 let24) := by timed rfl
let lean_s255 := by timed flipCongrArg lean_s254 [Eq]
have lean_s256 : (Eq let674 let567) := by timed congr lean_s255 lean_r194
have lean_s257 : (Eq let674 let137) := by timed Eq.trans lean_s256 lean_r192
have lean_s258 : (Eq let676 let749) := by timed congrIte lean_s253 lean_s257 lean_r119
let lean_s259 := by timed congr lean_s12 lean_s258
let lean_s260 := by timed flipCongrArg lean_r191 [And]
have lean_s261 : (Eq let672 let746) := by timed congr lean_s260 lean_r15
have lean_s262 : (Eq let23 let23) := by timed rfl
let lean_s263 := by timed flipCongrArg lean_s262 [Eq]
have lean_s264 : (Eq let671 let94) := by timed congr lean_s263 lean_r86
have lean_s265 : (Eq let671 let43) := by timed Eq.trans lean_s264 lean_r16
have lean_s266 : (Eq let673 let747) := by timed congrIte lean_s261 lean_s265 lean_r104
let lean_s267 := by timed congr lean_s12 lean_s266
let lean_s268 := by timed flipCongrArg lean_r208 [And]
have lean_s269 : (Eq let669 let744) := by timed congr lean_s268 lean_r29
have lean_s270 : (Eq let95 let95) := by timed rfl
let lean_s271 := by timed flipCongrArg lean_s270 [Eq]
have lean_s272 : (Eq let668 let415) := by timed congr lean_s271 lean_r39
have lean_s273 : (Eq let668 let340) := by timed Eq.trans lean_s272 lean_r114
have lean_s274 : (Eq let670 let745) := by timed congrIte lean_s269 lean_s273 lean_r17
let lean_s275 := by timed congr lean_s12 lean_s274
let lean_s276 := by timed flipCongrArg lean_r237 [And]
have lean_s277 : (Eq let666 let742) := by timed congr lean_s276 lean_r235
have lean_s278 : (Eq let123 let123) := by timed rfl
let lean_s279 := by timed flipCongrArg lean_s278 [Eq]
have lean_s280 : (Eq let665 let622) := by timed congr lean_s279 lean_r20
have lean_s281 : (Eq let665 let336) := by timed Eq.trans lean_s280 lean_r230
have lean_s282 : (Eq let667 let743) := by timed congrIte lean_s277 lean_s281 lean_r226
let lean_s283 := by timed congr lean_s12 lean_s282
let lean_s284 := by timed flipCongrArg lean_r24 [And]
have lean_s285 : (Eq let663 let740) := by timed congr lean_s284 lean_r31
have lean_s286 : (Eq let122 let122) := by timed rfl
let lean_s287 := by timed flipCongrArg lean_s286 [Eq]
have lean_s288 : (Eq let662 let126) := by timed congr lean_s287 lean_r154
have lean_s289 : (Eq let662 let124) := by timed Eq.trans lean_s288 lean_r25
have lean_s290 : (Eq let664 let741) := by timed congrIte lean_s285 lean_s289 lean_r151
let lean_s291 := by timed congr lean_s12 lean_s290
have lean_s292 : let837 := by timed rfl
let lean_s293 := by timed flipCongrArg lean_s39 [Eq]
have lean_s294 : (Eq let216 let738) := by timed congr lean_s293 lean_r166
let lean_s295 := by timed congr lean_s292 lean_s294
let lean_s296 := by timed flipCongrArg lean_s39 [Eq]
have lean_s297 : (Eq let214 let737) := by timed congr lean_s296 lean_r149
let lean_s298 := by timed congr lean_s292 lean_s297
let lean_s299 := by timed flipCongrArg lean_s39 [Eq]
have lean_s300 : (Eq let212 let736) := by timed congr lean_s299 lean_r147
let lean_s301 := by timed congr lean_s292 lean_s300
let lean_s302 := by timed flipCongrArg lean_s39 [Eq]
have lean_s303 : (Eq let210 let735) := by timed congr lean_s302 lean_r186
let lean_s304 := by timed congr lean_s292 lean_s303
let lean_s305 := by timed flipCongrArg lean_s39 [Eq]
have lean_s306 : (Eq let208 let734) := by timed congr lean_s305 lean_r218
let lean_s307 := by timed congr lean_s292 lean_s306
let lean_s308 := by timed flipCongrArg lean_s39 [Eq]
have lean_s309 : (Eq let206 let733) := by timed congr lean_s308 lean_r181
let lean_s310 := by timed congr lean_s307 lean_s309
let lean_s311 := by timed congr lean_s304 lean_s310
let lean_s312 := by timed congr lean_s301 lean_s311
let lean_s313 := by timed congr lean_s298 lean_s312
have lean_s314 : (Eq let217 let739) := by timed congr lean_s295 lean_s313
have lean_s315 : (Eq let218 let739) := by timed Eq.trans lean_r58 lean_s314
let lean_s316 := by timed congr lean_s12 lean_s315
have lean_s317 : let837 := by timed rfl
let lean_s318 := by timed flipCongrArg lean_s61 [Eq]
have lean_s319 : (Eq let472 let132) := by timed congr lean_s318 lean_r166
have lean_s320 : (Eq let472 let131) := by timed Eq.trans lean_s319 lean_r27
let lean_s321 := by timed congr lean_s317 lean_s320
let lean_s322 := by timed flipCongrArg lean_s61 [Eq]
have lean_s323 : (Eq let471 let282) := by timed congr lean_s322 lean_r149
have lean_s324 : (Eq let471 let280) := by timed Eq.trans lean_s323 lean_r90
let lean_s325 := by timed congr lean_s317 lean_s324
let lean_s326 := by timed flipCongrArg lean_s61 [Eq]
have lean_s327 : (Eq let470 let172) := by timed congr lean_s326 lean_r147
have lean_s328 : (Eq let470 let170) := by timed Eq.trans lean_s327 lean_r44
let lean_s329 := by timed congr lean_s325 lean_s328
have lean_s330 : (Eq let473 let732) := by timed congr lean_s321 lean_s329
have lean_s331 : (Eq let474 let732) := by timed Eq.trans lean_r130 lean_s330
let lean_s332 := by timed congr lean_s12 lean_s331
have lean_s333 : let836 := by timed rfl
let lean_s334 := by timed congr lean_s333 lean_r71
have lean_s335 : (Eq let522 let128) := by timed flipCongrArg lean_r77 [selectx5fformat]
let lean_s336 := by timed flipCongrArg lean_s335 [Eq]
have lean_s337 : (Eq s s) := by timed rfl
have lean_s338 : (Eq let523 let146) := by timed congr lean_s336 lean_s337
have lean_s339 : (Eq let523 let145) := by timed Eq.trans lean_s338 lean_r32
let lean_s340 := by timed congr lean_s333 lean_s339
let lean_s341 := by timed congr lean_s333 lean_r132
have lean_s342 : (Eq let520 let290) := by timed flipCongrArg lean_r267 [selectx5fformat]
let lean_s343 := by timed flipCongrArg lean_s342 [Eq]
have lean_s344 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s345 : (Eq let521 let292) := by timed congr lean_s343 lean_s344
have lean_s346 : (Eq let521 let291) := by timed Eq.trans lean_s345 lean_r95
let lean_s347 := by timed congr lean_s333 lean_s346
have lean_s348 : (Eq let517 let560) := by timed flipCongrArg lean_r59 [selectx5fformat]
let lean_s349 := by timed flipCongrArg lean_s348 [Eq]
have lean_s350 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s351 : (Eq let518 let562) := by timed congr lean_s349 lean_s350
have lean_s352 : (Eq let518 let561) := by timed Eq.trans lean_s351 lean_r188
let lean_s353 := by timed congr lean_s333 lean_s352
have lean_s354 : (Eq let515 let541) := by timed flipCongrArg lean_r116 [selectx5fformat]
let lean_s355 := by timed flipCongrArg lean_s354 [Eq]
have lean_s356 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s357 : (Eq let516 let543) := by timed congr lean_s355 lean_s356
have lean_s358 : (Eq let516 let542) := by timed Eq.trans lean_s357 lean_r178
let lean_s359 := by timed congr lean_s353 lean_s358
let lean_s360 := by timed congr lean_s347 lean_s359
let lean_s361 := by timed congr lean_s341 lean_s360
let lean_s362 := by timed congr lean_s340 lean_s361
have lean_s363 : (Eq let524 let730) := by timed congr lean_s334 lean_s362
have lean_s364 : (Eq let525 let730) := by timed Eq.trans lean_r164 lean_s363
have lean_s365 : (Eq let661 let731) := by timed flipCongrArg lean_s364 [Not]
let lean_s366 := by timed congr lean_s332 lean_s365
let lean_s367 := by timed congr lean_s316 lean_s366
let lean_s368 := by timed congr lean_s291 lean_s367
let lean_s369 := by timed congr lean_s283 lean_s368
let lean_s370 := by timed congr lean_s275 lean_s369
let lean_s371 := by timed congr lean_s267 lean_s370
let lean_s372 := by timed congr lean_s259 lean_s371
let lean_s373 := by timed congr lean_s251 lean_s372
let lean_s374 := by timed congr lean_s245 lean_s373
let lean_s375 := by timed congr lean_s237 lean_s374
let lean_s376 := by timed congr lean_s229 lean_s375
let lean_s377 := by timed congr lean_s221 lean_s376
let lean_s378 := by timed congr lean_s213 lean_s377
let lean_s379 := by timed congr lean_s205 lean_s378
let lean_s380 := by timed congr lean_s199 lean_s379
let lean_s381 := by timed congr lean_s96 lean_s380
let lean_s382 := by timed congr lean_s74 lean_s381
let lean_s383 := by timed congr lean_s60 lean_s382
let lean_s384 := by timed congr lean_s59 lean_s383
let lean_s385 := by timed congr lean_s52 lean_s384
let lean_s386 := by timed congr lean_s38 lean_s385
let lean_s387 := by timed congr lean_s37 lean_s386
let lean_s388 := by timed congr lean_s32 lean_s387
let lean_s389 := by timed congr lean_s30 lean_s388
let lean_s390 := by timed congr lean_s28 lean_s389
let lean_s391 := by timed congr lean_s26 lean_s390
let lean_s392 := by timed congr lean_s24 lean_s391
let lean_s393 := by timed congr lean_s22 lean_s392
let lean_s394 := by timed congr lean_s20 lean_s393
let lean_s395 := by timed congr lean_s18 lean_s394
let lean_s396 := by timed congr lean_s16 lean_s395
have lean_s397 : (Eq let709 let773) := by timed congr lean_s14 lean_s396
have lean_s398 : (Eq let710 let773) := by timed Eq.trans lean_r256 lean_s397
have lean_s399 : let836 := by timed rfl
have lean_s400 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s401 : let770 := by andElim lean_s400, 16
have lean_s402 : let876 := by timed rfl
let lean_s403 := by timed flipCongrArg lean_s402 [Eq]
have lean_s404 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s405 : let657 := by andElim lean_s404, 10
have lean_s406 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s407 : let699 := by andElim lean_s406, 9
have lean_s408 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s409 : let700 := by andElim lean_s408, 8
have lean_s410 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s411 : let701 := by andElim lean_s410, 7
have lean_s412 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s413 : let702 := by andElim lean_s412, 6
have lean_s414 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s415 : let703 := by andElim lean_s414, 5
have lean_s416 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s417 : let704 := by andElim lean_s416, 4
have lean_s418 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s419 : let705 := by andElim lean_s418, 3
have lean_s420 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s421 : let706 := by andElim lean_s420, 2
have lean_s422 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s423 : let707 := by andElim lean_s422, 1
have lean_s424 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s425 : let708 := by andElim lean_s424, 0
let lean_s426 := by timed And.intro lean_s423 lean_s425
let lean_s427 := by timed And.intro lean_s421 lean_s426
let lean_s428 := by timed And.intro lean_s419 lean_s427
let lean_s429 := by timed And.intro lean_s417 lean_s428
let lean_s430 := by timed And.intro lean_s415 lean_s429
let lean_s431 := by timed And.intro lean_s413 lean_s430
let lean_s432 := by timed And.intro lean_s411 lean_s431
let lean_s433 := by timed And.intro lean_s409 lean_s432
have lean_s434 : let874 := by timed And.intro lean_s407 lean_s433
have lean_s435 : let699 := by andElim lean_s434, 0
let lean_s436 := by timed flipCongrArg lean_s435 [Eq]
have lean_s437 : let877 := by timed rfl
let lean_s438 := by timed flipCongrArg lean_s437 [HAdd.hAdd]
have lean_s439 : let708 := by andElim lean_s434, 9
have lean_s440 : (Eq let505 let711) := by timed congr lean_s438 lean_s439
have lean_s441 : (Eq let657 let878) := by timed congr lean_s436 lean_s440
have lean_s442 : let469 := by timed rfl
let lean_s443 := by timed flipCongrArg lean_s442 [Eq]
have lean_s444 : (Eq let878 let268) := by timed congr lean_s443 lean_r257
have lean_s445 : (Eq let878 let266) := by timed Eq.trans lean_s444 lean_r83
have lean_s446 : (Eq let657 let266) := by timed Eq.trans lean_s441 lean_s445
have lean_s447 : let266 := by timed eqResolve lean_s405 lean_s446
let lean_s448 := by timed And.intro lean_s423 lean_s425
let lean_s449 := by timed And.intro lean_s421 lean_s448
let lean_s450 := by timed And.intro lean_s419 lean_s449
let lean_s451 := by timed And.intro lean_s417 lean_s450
let lean_s452 := by timed And.intro lean_s415 lean_s451
let lean_s453 := by timed And.intro lean_s413 lean_s452
let lean_s454 := by timed And.intro lean_s411 lean_s453
let lean_s455 := by timed And.intro lean_s409 lean_s454
let lean_s456 := by timed And.intro lean_s407 lean_s455
have lean_s457 : let875 := by timed And.intro lean_s447 lean_s456
have lean_s458 : let266 := by andElim lean_s457, 0
have lean_s459 : let159 := by timed rfl
let lean_s460 := by timed flipCongrArg lean_s459 [HMul.hMul]
have lean_s461 : let869 := by timed rfl
have lean_s462 : let838 := by timed rfl
have lean_s463 : let872 := by timed rfl
let lean_s464 := by timed flipCongrArg lean_s463 [HMul.hMul]
have lean_s465 : let699 := by andElim lean_s457, 1
have lean_s466 : let884 := by timed congr lean_s464 lean_s465
let lean_s467 := by timed congrHAdd lean_s462 lean_s466
have lean_s468 : let883 := by timed congrHAdd lean_s461 lean_s467
have lean_s469 : let886 := by timed flipCongrArg lean_s468 [sx5fcount]
have lean_s470 : let885 := by timed congr lean_s460 lean_s469
let lean_s471 := by timed flipCongrArg lean_s459 [HMul.hMul]
have lean_s472 : let882 := by timed flipCongrArg lean_s468 [xx5fcount]
have lean_s473 : let881 := by timed congr lean_s471 lean_s472
let lean_s474 := by timed congrHAdd lean_s470 lean_s473
have lean_s475 : let880 := by timed congrHAdd lean_s458 lean_s474
have lean_s476 : (Eq let770 let879) := by timed congr lean_s403 lean_s475
let lean_s477 := by timed flipCongrArg lean_s61 [Eq]
have lean_s478 : (Eq let190 let190) := by timed rfl
let lean_s479 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s480 : let869 := by timed rfl
let lean_s481 := by timed congrHAdd lean_s39 lean_r263
have lean_s482 : (Eq let817 let502) := by timed congrHAdd lean_s480 lean_s481
have lean_s483 : (Eq let817 let17) := by timed Eq.trans lean_s482 lean_r156
have lean_s484 : (Eq let820 let19) := by timed flipCongrArg lean_s483 [sx5fcount]
have lean_s485 : (Eq let821 let109) := by timed congr lean_s479 lean_s484
let lean_s486 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s487 : (Eq let818 let18) := by timed flipCongrArg lean_s483 [xx5fcount]
have lean_s488 : (Eq let819 let108) := by timed congr lean_s486 lean_s487
let lean_s489 := by timed congrHAdd lean_s485 lean_s488
have lean_s490 : (Eq let822 let234) := by timed congrHAdd lean_s478 lean_s489
have lean_s491 : (Eq let879 let873) := by timed congr lean_s477 lean_s490
have lean_s492 : (Eq let770 let873) := by timed Eq.trans lean_s476 lean_s491
have lean_s493 : let873 := by timed eqResolve lean_s401 lean_s492
let lean_s494 := by timed And.intro lean_s423 lean_s425
let lean_s495 := by timed And.intro lean_s421 lean_s494
let lean_s496 := by timed And.intro lean_s419 lean_s495
let lean_s497 := by timed And.intro lean_s417 lean_s496
let lean_s498 := by timed And.intro lean_s415 lean_s497
let lean_s499 := by timed And.intro lean_s413 lean_s498
let lean_s500 := by timed And.intro lean_s411 lean_s499
let lean_s501 := by timed And.intro lean_s409 lean_s500
let lean_s502 := by timed And.intro lean_s407 lean_s501
let lean_s503 := by timed And.intro lean_s447 lean_s502
have lean_s504 : (And let873 let875) := by timed And.intro lean_s493 lean_s503
have lean_s505 : let708 := by andElim lean_s504, 11
let lean_s506 := by timed flipCongrArg lean_s505 [Eq]
have lean_s507 : let462 := by timed rfl
have lean_s508 : (Eq let708 let462) := by timed congr lean_s506 lean_s507
let lean_s509 := by timed congr lean_s399 lean_s508
have lean_s510 : let707 := by andElim lean_s504, 10
let lean_s511 := by timed flipCongrArg lean_s510 [Eq]
have lean_s512 : let721 := by timed rfl
have lean_s513 : (Eq let707 let721) := by timed congr lean_s511 lean_s512
let lean_s514 := by timed congr lean_s399 lean_s513
have lean_s515 : let706 := by andElim lean_s504, 9
let lean_s516 := by timed flipCongrArg lean_s515 [Eq]
have lean_s517 : let159 := by timed rfl
have lean_s518 : (Eq let706 let159) := by timed congr lean_s516 lean_s517
let lean_s519 := by timed congr lean_s399 lean_s518
have lean_s520 : let705 := by andElim lean_s504, 8
let lean_s521 := by timed flipCongrArg lean_s520 [Eq]
have lean_s522 : let162 := by timed rfl
have lean_s523 : (Eq let705 let162) := by timed congr lean_s521 lean_s522
let lean_s524 := by timed congr lean_s399 lean_s523
have lean_s525 : let704 := by andElim lean_s504, 7
let lean_s526 := by timed flipCongrArg lean_s525 [Eq]
have lean_s527 : (Eq let704 let159) := by timed congr lean_s526 lean_s517
let lean_s528 := by timed congr lean_s399 lean_s527
have lean_s529 : let703 := by andElim lean_s504, 6
let lean_s530 := by timed flipCongrArg lean_s529 [Eq]
have lean_s531 : (Eq let703 let162) := by timed congr lean_s530 lean_s522
let lean_s532 := by timed congr lean_s399 lean_s531
have lean_s533 : let702 := by andElim lean_s504, 5
let lean_s534 := by timed flipCongrArg lean_s533 [Eq]
have lean_s535 : let168 := by timed rfl
have lean_s536 : (Eq let702 let168) := by timed congr lean_s534 lean_s535
let lean_s537 := by timed congr lean_s399 lean_s536
have lean_s538 : let701 := by andElim lean_s504, 4
let lean_s539 := by timed flipCongrArg lean_s538 [Eq]
have lean_s540 : let406 := by timed rfl
have lean_s541 : (Eq let701 let406) := by timed congr lean_s539 lean_s540
let lean_s542 := by timed congr lean_s399 lean_s541
have lean_s543 : let700 := by andElim lean_s504, 3
let lean_s544 := by timed flipCongrArg lean_s543 [Eq]
have lean_s545 : let183 := by timed rfl
have lean_s546 : (Eq let700 let183) := by timed congr lean_s544 lean_s545
let lean_s547 := by timed congr lean_s399 lean_s546
have lean_s548 : let699 := by andElim lean_s504, 2
let lean_s549 := by timed flipCongrArg lean_s548 [Eq]
have lean_s550 : let469 := by timed rfl
have lean_s551 : (Eq let699 let469) := by timed congr lean_s549 lean_s550
let lean_s552 := by timed congr lean_s399 lean_s551
let lean_s553 := by timed flipCongrArg lean_s548 [Eq]
have lean_s554 : let266 := by andElim lean_s504, 1
let lean_s555 := by timed flipCongrArg lean_s554 [HAdd.hAdd]
have lean_s556 : (Eq let505 let191) := by timed congr lean_s555 lean_s505
have lean_s557 : (Eq let657 let834) := by timed congr lean_s553 lean_s556
let lean_s558 := by timed congr lean_s399 lean_s557
let lean_s559 := by timed flipCongrArg lean_s548 [HAdd.hAdd]
have lean_s560 : let872 := by timed rfl
let lean_s561 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s562 : let873 := by andElim lean_s504, 0
have lean_s563 : (Eq let553 let531) := by timed congr lean_s561 lean_s562
have lean_s564 : (Eq let554 let831) := by timed congr lean_s559 lean_s563
let lean_s565 := by timed flipCongrArg lean_s564 [GE.ge]
have lean_s566 : (Eq let555 let832) := by timed congr lean_s565 lean_s522
have lean_s567 : (Eq let556 let833) := by timed flipCongrArg lean_s566 [Not]
let lean_s568 := by timed congr lean_s399 lean_s567
have lean_s569 : let838 := by timed rfl
let lean_s570 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s571 : let884 := by timed congr lean_s570 lean_s548
let lean_s572 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s573 : (Eq let589 let419) := by timed congr lean_s572 lean_s510
let lean_s574 := by timed congrHAdd lean_s571 lean_s573
have lean_s575 : (Eq let654 let828) := by timed congrHAdd lean_s569 lean_s574
let lean_s576 := by timed flipCongrArg lean_s575 [GE.ge]
have lean_s577 : (Eq let655 let829) := by timed congr lean_s576 lean_s560
have lean_s578 : (Eq let772 let830) := by timed flipCongrArg lean_s577 [Not]
let lean_s579 := by timed congr lean_s399 lean_s578
let lean_s580 := by timed flipCongrArg lean_s569 [HAdd.hAdd]
have lean_s581 : (Eq let488 let816) := by timed congr lean_s580 lean_s571
let lean_s582 := by timed flipCongrArg lean_s581 [GE.ge]
have lean_s583 : let871 := by timed rfl
have lean_s584 : (Eq let601 let827) := by timed congr lean_s582 lean_s583
let lean_s585 := by timed congr lean_s399 lean_s584
let lean_s586 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s587 : (Eq let590 let227) := by timed congr lean_s586 lean_s554
let lean_s588 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s589 : (Eq let588 let260) := by timed congr lean_s588 lean_s505
let lean_s590 := by timed congrHAdd lean_s587 lean_s589
have lean_s591 : (Eq let647 let263) := by timed congrHAdd lean_s562 lean_s590
let lean_s592 := by timed flipCongrArg lean_s591 [GE.ge]
have lean_s593 : (Eq let648 let826) := by timed congr lean_s592 lean_s550
let lean_s594 := by timed congr lean_s399 lean_s593
let lean_s595 := by timed congrHAdd lean_s573 lean_s589
let lean_s596 := by timed congrHAdd lean_s587 lean_s595
have lean_s597 : (Eq let591 let422) := by timed congrHAdd lean_s562 lean_s596
let lean_s598 := by timed flipCongrArg lean_s597 [GE.ge]
have lean_s599 : let870 := by timed rfl
have lean_s600 : (Eq let592 let824) := by timed congr lean_s598 lean_s599
have lean_s601 : (Eq let771 let825) := by timed flipCongrArg lean_s600 [Not]
let lean_s602 := by timed congr lean_s399 lean_s601
let lean_s603 := by timed flipCongrArg lean_s562 [Eq]
let lean_s604 := by timed flipCongrArg lean_s517 [HMul.hMul]
have lean_s605 : let869 := by timed rfl
let lean_s606 := by timed congrHAdd lean_s569 lean_s571
have lean_s607 : let883 := by timed congrHAdd lean_s605 lean_s606
have lean_s608 : let886 := by timed flipCongrArg lean_s607 [sx5fcount]
have lean_s609 : let885 := by timed congr lean_s604 lean_s608
let lean_s610 := by timed flipCongrArg lean_s517 [HMul.hMul]
have lean_s611 : let882 := by timed flipCongrArg lean_s607 [xx5fcount]
have lean_s612 : let881 := by timed congr lean_s610 lean_s611
let lean_s613 := by timed congrHAdd lean_s609 lean_s612
have lean_s614 : let880 := by timed congrHAdd lean_s554 lean_s613
have lean_s615 : (Eq let770 let823) := by timed congr lean_s603 lean_s614
let lean_s616 := by timed congr lean_s399 lean_s615
have lean_s617 : let837 := by timed rfl
let lean_s618 := by timed flipCongrArg lean_s533 [Eq]
have lean_s619 : (Eq let236 let236) := by timed rfl
have lean_s620 : (Eq let576 let512) := by timed congr lean_s618 lean_s619
let lean_s621 := by timed congr lean_s617 lean_s620
let lean_s622 := by timed flipCongrArg lean_s538 [Eq]
have lean_s623 : (Eq let642 let729) := by timed congr lean_s622 lean_s619
let lean_s624 := by timed congr lean_s617 lean_s623
let lean_s625 := by timed flipCongrArg lean_s543 [Eq]
have lean_s626 : (Eq let270 let552) := by timed congr lean_s625 lean_s619
let lean_s627 := by timed congr lean_s617 lean_s626
let lean_s628 := by timed flipCongrArg lean_s515 [Eq]
have lean_s629 : (Eq let637 let544) := by timed congr lean_s628 lean_s619
let lean_s630 := by timed congr lean_s617 lean_s629
let lean_s631 := by timed flipCongrArg lean_s520 [Eq]
have lean_s632 : (Eq let273 let238) := by timed congr lean_s631 lean_s619
let lean_s633 := by timed congr lean_s617 lean_s632
let lean_s634 := by timed flipCongrArg lean_s525 [Eq]
have lean_s635 : (Eq let484 let544) := by timed congr lean_s634 lean_s619
let lean_s636 := by timed congr lean_s617 lean_s635
let lean_s637 := by timed flipCongrArg lean_s529 [Eq]
have lean_s638 : (Eq let636 let238) := by timed congr lean_s637 lean_s619
let lean_s639 := by timed congr lean_s617 lean_s638
have lean_s640 : let868 := by timed rfl
let lean_s641 := by timed congr lean_s617 lean_s640
let lean_s642 := by timed flipCongrArg lean_s533 [Eq]
have lean_s643 : (Eq let147 let147) := by timed rfl
have lean_s644 : (Eq let412 let149) := by timed congr lean_s642 lean_s643
let lean_s645 := by timed congr lean_s617 lean_s644
let lean_s646 := by timed flipCongrArg lean_s538 [Eq]
have lean_s647 : (Eq let538 let285) := by timed congr lean_s646 lean_s643
let lean_s648 := by timed congr lean_s617 lean_s647
let lean_s649 := by timed flipCongrArg lean_s543 [Eq]
have lean_s650 : (Eq let571 let504) := by timed congr lean_s649 lean_s643
let lean_s651 := by timed congr lean_s617 lean_s650
let lean_s652 := by timed flipCongrArg lean_s515 [Eq]
have lean_s653 : (Eq let632 let404) := by timed congr lean_s652 lean_s643
let lean_s654 := by timed congr lean_s617 lean_s653
let lean_s655 := by timed flipCongrArg lean_s520 [Eq]
have lean_s656 : (Eq let630 let464) := by timed congr lean_s655 lean_s643
let lean_s657 := by timed congr lean_s617 lean_s656
let lean_s658 := by timed flipCongrArg lean_s525 [Eq]
have lean_s659 : (Eq let230 let404) := by timed congr lean_s658 lean_s643
let lean_s660 := by timed congr lean_s617 lean_s659
let lean_s661 := by timed flipCongrArg lean_s529 [Eq]
have lean_s662 : (Eq let625 let464) := by timed congr lean_s661 lean_s643
let lean_s663 := by timed congr lean_s617 lean_s662
have lean_s664 : let867 := by timed rfl
let lean_s665 := by timed congr lean_s617 lean_s664
let lean_s666 := by timed flipCongrArg lean_s533 [Eq]
have lean_s667 : (Eq let163 let163) := by timed rfl
have lean_s668 : (Eq let565 let496) := by timed congr lean_s666 lean_s667
let lean_s669 := by timed congr lean_s617 lean_s668
let lean_s670 := by timed flipCongrArg lean_s538 [Eq]
have lean_s671 : (Eq let608 let165) := by timed congr lean_s670 lean_s667
let lean_s672 := by timed congr lean_s617 lean_s671
let lean_s673 := by timed flipCongrArg lean_s543 [Eq]
have lean_s674 : (Eq let570 let498) := by timed congr lean_s673 lean_s667
let lean_s675 := by timed congr lean_s617 lean_s674
let lean_s676 := by timed flipCongrArg lean_s515 [Eq]
have lean_s677 : (Eq let623 let313) := by timed congr lean_s676 lean_s667
let lean_s678 := by timed congr lean_s617 lean_s677
let lean_s679 := by timed flipCongrArg lean_s520 [Eq]
have lean_s680 : (Eq let621 let408) := by timed congr lean_s679 lean_s667
let lean_s681 := by timed congr lean_s617 lean_s680
let lean_s682 := by timed flipCongrArg lean_s525 [Eq]
have lean_s683 : (Eq let619 let313) := by timed congr lean_s682 lean_s667
let lean_s684 := by timed congr lean_s617 lean_s683
let lean_s685 := by timed flipCongrArg lean_s529 [Eq]
have lean_s686 : (Eq let615 let408) := by timed congr lean_s685 lean_s667
let lean_s687 := by timed congr lean_s617 lean_s686
have lean_s688 : let866 := by timed rfl
let lean_s689 := by timed congr lean_s617 lean_s688
let lean_s690 := by timed flipCongrArg lean_s533 [Eq]
have lean_s691 : (Eq let90 let90) := by timed rfl
have lean_s692 : (Eq let595 let495) := by timed congr lean_s690 lean_s691
let lean_s693 := by timed congr lean_s617 lean_s692
let lean_s694 := by timed flipCongrArg lean_s538 [Eq]
have lean_s695 : (Eq let166 let539) := by timed congr lean_s694 lean_s691
let lean_s696 := by timed congr lean_s617 lean_s695
let lean_s697 := by timed flipCongrArg lean_s543 [Eq]
have lean_s698 : (Eq let91 let222) := by timed congr lean_s697 lean_s691
let lean_s699 := by timed congr lean_s617 lean_s698
let lean_s700 := by timed flipCongrArg lean_s515 [Eq]
have lean_s701 : (Eq let613 let457) := by timed congr lean_s700 lean_s691
let lean_s702 := by timed congr lean_s617 lean_s701
let lean_s703 := by timed flipCongrArg lean_s520 [Eq]
have lean_s704 : (Eq let102 let276) := by timed congr lean_s703 lean_s691
let lean_s705 := by timed congr lean_s617 lean_s704
let lean_s706 := by timed flipCongrArg lean_s525 [Eq]
have lean_s707 : (Eq let499 let457) := by timed congr lean_s706 lean_s691
let lean_s708 := by timed congr lean_s617 lean_s707
let lean_s709 := by timed flipCongrArg lean_s529 [Eq]
have lean_s710 : (Eq let612 let276) := by timed congr lean_s709 lean_s691
let lean_s711 := by timed congr lean_s617 lean_s710
have lean_s712 : let865 := by timed rfl
let lean_s713 := by timed congr lean_s617 lean_s712
let lean_s714 := by timed flipCongrArg lean_s533 [Eq]
have lean_s715 : (Eq let113 let113) := by timed rfl
have lean_s716 : (Eq let631 let259) := by timed congr lean_s714 lean_s715
let lean_s717 := by timed congr lean_s617 lean_s716
let lean_s718 := by timed flipCongrArg lean_s538 [Eq]
have lean_s719 : (Eq let604 let532) := by timed congr lean_s718 lean_s715
let lean_s720 := by timed congr lean_s617 lean_s719
let lean_s721 := by timed flipCongrArg lean_s543 [Eq]
have lean_s722 : (Eq let134 let492) := by timed congr lean_s721 lean_s715
let lean_s723 := by timed congr lean_s617 lean_s722
let lean_s724 := by timed flipCongrArg lean_s515 [Eq]
have lean_s725 : (Eq let611 let540) := by timed congr lean_s724 lean_s715
let lean_s726 := by timed congr lean_s617 lean_s725
let lean_s727 := by timed flipCongrArg lean_s520 [Eq]
have lean_s728 : (Eq let114 let537) := by timed congr lean_s727 lean_s715
let lean_s729 := by timed congr lean_s617 lean_s728
let lean_s730 := by timed flipCongrArg lean_s525 [Eq]
have lean_s731 : (Eq let638 let540) := by timed congr lean_s730 lean_s715
let lean_s732 := by timed congr lean_s617 lean_s731
let lean_s733 := by timed flipCongrArg lean_s529 [Eq]
have lean_s734 : (Eq let116 let537) := by timed congr lean_s733 lean_s715
let lean_s735 := by timed congr lean_s617 lean_s734
have lean_s736 : let864 := by timed rfl
let lean_s737 := by timed congr lean_s617 lean_s736
let lean_s738 := by timed flipCongrArg lean_s533 [Eq]
have lean_s739 : (Eq let119 let119) := by timed rfl
have lean_s740 : (Eq let120 let486) := by timed congr lean_s738 lean_s739
let lean_s741 := by timed congr lean_s617 lean_s740
let lean_s742 := by timed flipCongrArg lean_s538 [Eq]
have lean_s743 : (Eq let511 let722) := by timed congr lean_s742 lean_s739
let lean_s744 := by timed congr lean_s617 lean_s743
let lean_s745 := by timed flipCongrArg lean_s543 [Eq]
have lean_s746 : (Eq let629 let414) := by timed congr lean_s745 lean_s739
let lean_s747 := by timed congr lean_s617 lean_s746
let lean_s748 := by timed flipCongrArg lean_s515 [Eq]
have lean_s749 : (Eq let503 let479) := by timed congr lean_s748 lean_s739
let lean_s750 := by timed congr lean_s617 lean_s749
let lean_s751 := by timed flipCongrArg lean_s520 [Eq]
have lean_s752 : (Eq let305 let530) := by timed congr lean_s751 lean_s739
let lean_s753 := by timed congr lean_s617 lean_s752
let lean_s754 := by timed flipCongrArg lean_s525 [Eq]
have lean_s755 : (Eq let610 let479) := by timed congr lean_s754 lean_s739
let lean_s756 := by timed congr lean_s617 lean_s755
let lean_s757 := by timed flipCongrArg lean_s529 [Eq]
have lean_s758 : (Eq let501 let530) := by timed congr lean_s757 lean_s739
let lean_s759 := by timed congr lean_s617 lean_s758
have lean_s760 : let863 := by timed rfl
let lean_s761 := by timed congr lean_s759 lean_s760
let lean_s762 := by timed congr lean_s756 lean_s761
let lean_s763 := by timed congr lean_s753 lean_s762
let lean_s764 := by timed congr lean_s750 lean_s763
let lean_s765 := by timed congr lean_s747 lean_s764
let lean_s766 := by timed congr lean_s744 lean_s765
let lean_s767 := by timed congr lean_s741 lean_s766
let lean_s768 := by timed congr lean_s737 lean_s767
let lean_s769 := by timed congr lean_s735 lean_s768
let lean_s770 := by timed congr lean_s732 lean_s769
let lean_s771 := by timed congr lean_s729 lean_s770
let lean_s772 := by timed congr lean_s726 lean_s771
let lean_s773 := by timed congr lean_s723 lean_s772
let lean_s774 := by timed congr lean_s720 lean_s773
let lean_s775 := by timed congr lean_s717 lean_s774
let lean_s776 := by timed congr lean_s713 lean_s775
let lean_s777 := by timed congr lean_s711 lean_s776
let lean_s778 := by timed congr lean_s708 lean_s777
let lean_s779 := by timed congr lean_s705 lean_s778
let lean_s780 := by timed congr lean_s702 lean_s779
let lean_s781 := by timed congr lean_s699 lean_s780
let lean_s782 := by timed congr lean_s696 lean_s781
let lean_s783 := by timed congr lean_s693 lean_s782
let lean_s784 := by timed congr lean_s689 lean_s783
let lean_s785 := by timed congr lean_s687 lean_s784
let lean_s786 := by timed congr lean_s684 lean_s785
let lean_s787 := by timed congr lean_s681 lean_s786
let lean_s788 := by timed congr lean_s678 lean_s787
let lean_s789 := by timed congr lean_s675 lean_s788
let lean_s790 := by timed congr lean_s672 lean_s789
let lean_s791 := by timed congr lean_s669 lean_s790
let lean_s792 := by timed congr lean_s665 lean_s791
let lean_s793 := by timed congr lean_s663 lean_s792
let lean_s794 := by timed congr lean_s660 lean_s793
let lean_s795 := by timed congr lean_s657 lean_s794
let lean_s796 := by timed congr lean_s654 lean_s795
let lean_s797 := by timed congr lean_s651 lean_s796
let lean_s798 := by timed congr lean_s648 lean_s797
let lean_s799 := by timed congr lean_s645 lean_s798
let lean_s800 := by timed congr lean_s641 lean_s799
let lean_s801 := by timed congr lean_s639 lean_s800
let lean_s802 := by timed congr lean_s636 lean_s801
let lean_s803 := by timed congr lean_s633 lean_s802
let lean_s804 := by timed congr lean_s630 lean_s803
let lean_s805 := by timed congr lean_s627 lean_s804
let lean_s806 := by timed congr lean_s624 lean_s805
have lean_s807 : (Eq let764 let815) := by timed congr lean_s621 lean_s806
let lean_s808 := by timed congr lean_s399 lean_s807
let lean_s809 := by timed flipCongrArg lean_s620 [And]
have lean_s810 : (Eq let762 let813) := by timed congr lean_s809 lean_s647
have lean_s811 : let862 := by timed rfl
have lean_s812 : let861 := by timed rfl
have lean_s813 : (Eq let763 let814) := by timed congrIte lean_s810 lean_s811 lean_s812
let lean_s814 := by timed congr lean_s399 lean_s813
let lean_s815 := by timed flipCongrArg lean_s644 [And]
have lean_s816 : (Eq let760 let811) := by timed congr lean_s815 lean_s671
have lean_s817 : let860 := by timed rfl
have lean_s818 : let859 := by timed rfl
have lean_s819 : (Eq let761 let812) := by timed congrIte lean_s816 lean_s817 lean_s818
let lean_s820 := by timed congr lean_s399 lean_s819
let lean_s821 := by timed flipCongrArg lean_s668 [And]
have lean_s822 : (Eq let758 let809) := by timed congr lean_s821 lean_s695
have lean_s823 : let858 := by timed rfl
have lean_s824 : let857 := by timed rfl
have lean_s825 : (Eq let759 let810) := by timed congrIte lean_s822 lean_s823 lean_s824
let lean_s826 := by timed congr lean_s399 lean_s825
let lean_s827 := by timed flipCongrArg lean_s692 [And]
have lean_s828 : (Eq let756 let807) := by timed congr lean_s827 lean_s719
have lean_s829 : let856 := by timed rfl
have lean_s830 : let855 := by timed rfl
have lean_s831 : (Eq let757 let808) := by timed congrIte lean_s828 lean_s829 lean_s830
let lean_s832 := by timed congr lean_s399 lean_s831
let lean_s833 := by timed flipCongrArg lean_s716 [And]
have lean_s834 : (Eq let754 let805) := by timed congr lean_s833 lean_s743
have lean_s835 : let854 := by timed rfl
have lean_s836 : let853 := by timed rfl
have lean_s837 : (Eq let755 let806) := by timed congrIte lean_s834 lean_s835 lean_s836
let lean_s838 := by timed congr lean_s399 lean_s837
let lean_s839 := by timed flipCongrArg lean_s740 [And]
let lean_s840 := by timed flipCongrArg lean_s538 [Eq]
have lean_s841 : (Eq let142 let142) := by timed rfl
have lean_s842 : (Eq let584 let513) := by timed congr lean_s840 lean_s841
have lean_s843 : (Eq let752 let803) := by timed congr lean_s839 lean_s842
have lean_s844 : let852 := by timed rfl
have lean_s845 : let851 := by timed rfl
have lean_s846 : (Eq let753 let804) := by timed congrIte lean_s843 lean_s844 lean_s845
let lean_s847 := by timed congr lean_s399 lean_s846
let lean_s848 := by timed flipCongrArg lean_s620 [And]
have lean_s849 : (Eq let750 let801) := by timed congr lean_s848 lean_s650
have lean_s850 : let850 := by timed rfl
have lean_s851 : let849 := by timed rfl
have lean_s852 : (Eq let751 let802) := by timed congrIte lean_s849 lean_s850 lean_s851
let lean_s853 := by timed congr lean_s399 lean_s852
let lean_s854 := by timed flipCongrArg lean_s644 [And]
have lean_s855 : (Eq let748 let799) := by timed congr lean_s854 lean_s674
have lean_s856 : let848 := by timed rfl
have lean_s857 : let847 := by timed rfl
have lean_s858 : (Eq let749 let800) := by timed congrIte lean_s855 lean_s856 lean_s857
let lean_s859 := by timed congr lean_s399 lean_s858
let lean_s860 := by timed flipCongrArg lean_s668 [And]
have lean_s861 : (Eq let746 let797) := by timed congr lean_s860 lean_s698
have lean_s862 : let846 := by timed rfl
have lean_s863 : let845 := by timed rfl
have lean_s864 : (Eq let747 let798) := by timed congrIte lean_s861 lean_s862 lean_s863
let lean_s865 := by timed congr lean_s399 lean_s864
let lean_s866 := by timed flipCongrArg lean_s692 [And]
have lean_s867 : (Eq let744 let795) := by timed congr lean_s866 lean_s722
have lean_s868 : let844 := by timed rfl
have lean_s869 : let843 := by timed rfl
have lean_s870 : (Eq let745 let796) := by timed congrIte lean_s867 lean_s868 lean_s869
let lean_s871 := by timed congr lean_s399 lean_s870
let lean_s872 := by timed flipCongrArg lean_s716 [And]
have lean_s873 : (Eq let742 let793) := by timed congr lean_s872 lean_s746
have lean_s874 : let842 := by timed rfl
have lean_s875 : let841 := by timed rfl
have lean_s876 : (Eq let743 let794) := by timed congrIte lean_s873 lean_s874 lean_s875
let lean_s877 := by timed congr lean_s399 lean_s876
let lean_s878 := by timed flipCongrArg lean_s740 [And]
let lean_s879 := by timed flipCongrArg lean_s543 [Eq]
have lean_s880 : (Eq let143 let481) := by timed congr lean_s879 lean_s841
have lean_s881 : (Eq let740 let791) := by timed congr lean_s878 lean_s880
have lean_s882 : let840 := by timed rfl
have lean_s883 : let839 := by timed rfl
have lean_s884 : (Eq let741 let792) := by timed congrIte lean_s881 lean_s882 lean_s883
let lean_s885 := by timed congr lean_s399 lean_s884
have lean_s886 : let837 := by timed rfl
let lean_s887 := by timed flipCongrArg lean_s569 [Eq]
have lean_s888 : (Eq let738 let328) := by timed congr lean_s887 lean_s548
let lean_s889 := by timed congr lean_s886 lean_s888
let lean_s890 := by timed flipCongrArg lean_s569 [Eq]
let lean_s891 := by timed flipCongrArg lean_s522 [HAdd.hAdd]
have lean_s892 : (Eq let281 let535) := by timed congr lean_s891 lean_s548
have lean_s893 : (Eq let737 let789) := by timed congr lean_s890 lean_s892
let lean_s894 := by timed congr lean_s886 lean_s893
let lean_s895 := by timed flipCongrArg lean_s569 [Eq]
let lean_s896 := by timed flipCongrArg lean_s583 [HAdd.hAdd]
have lean_s897 : (Eq let171 let478) := by timed congr lean_s896 lean_s548
have lean_s898 : (Eq let736 let788) := by timed congr lean_s895 lean_s897
let lean_s899 := by timed congr lean_s886 lean_s898
let lean_s900 := by timed flipCongrArg lean_s569 [Eq]
have lean_s901 : (Eq let79 let79) := by timed rfl
let lean_s902 := by timed flipCongrArg lean_s901 [HAdd.hAdd]
have lean_s903 : (Eq let558 let269) := by timed congr lean_s902 lean_s548
have lean_s904 : (Eq let735 let787) := by timed congr lean_s900 lean_s903
let lean_s905 := by timed congr lean_s886 lean_s904
let lean_s906 := by timed flipCongrArg lean_s569 [Eq]
let lean_s907 := by timed flipCongrArg lean_s517 [HAdd.hAdd]
have lean_s908 : (Eq let609 let463) := by timed congr lean_s907 lean_s548
have lean_s909 : (Eq let734 let786) := by timed congr lean_s906 lean_s908
let lean_s910 := by timed congr lean_s886 lean_s909
let lean_s911 := by timed flipCongrArg lean_s569 [Eq]
have lean_s912 : (Eq let118 let118) := by timed rfl
let lean_s913 := by timed flipCongrArg lean_s912 [HAdd.hAdd]
have lean_s914 : (Eq let548 let483) := by timed congr lean_s913 lean_s548
have lean_s915 : (Eq let733 let785) := by timed congr lean_s911 lean_s914
let lean_s916 := by timed congr lean_s910 lean_s915
let lean_s917 := by timed congr lean_s905 lean_s916
let lean_s918 := by timed congr lean_s899 lean_s917
let lean_s919 := by timed congr lean_s894 lean_s918
have lean_s920 : (Eq let739 let790) := by timed congr lean_s889 lean_s919
let lean_s921 := by timed congr lean_s399 lean_s920
have lean_s922 : let837 := by timed rfl
let lean_s923 := by timed flipCongrArg lean_s548 [Eq]
have lean_s924 : (Eq let131 let235) := by timed congr lean_s923 lean_s562
let lean_s925 := by timed congr lean_s922 lean_s924
let lean_s926 := by timed flipCongrArg lean_s548 [Eq]
let lean_s927 := by timed flipCongrArg lean_s560 [HAdd.hAdd]
have lean_s928 : (Eq let279 let252) := by timed congr lean_s927 lean_s562
have lean_s929 : (Eq let280 let783) := by timed congr lean_s926 lean_s928
let lean_s930 := by timed congr lean_s922 lean_s929
let lean_s931 := by timed flipCongrArg lean_s548 [Eq]
let lean_s932 := by timed flipCongrArg lean_s605 [HAdd.hAdd]
have lean_s933 : (Eq let169 let265) := by timed congr lean_s932 lean_s562
have lean_s934 : (Eq let170 let782) := by timed congr lean_s931 lean_s933
let lean_s935 := by timed congr lean_s930 lean_s934
have lean_s936 : (Eq let732 let784) := by timed congr lean_s925 lean_s935
let lean_s937 := by timed congr lean_s399 lean_s936
have lean_s938 : let836 := by timed rfl
let lean_s939 := by timed flipCongrArg lean_s533 [Eq]
have lean_s940 : (Eq let246 let246) := by timed rfl
have lean_s941 : (Eq let247 let580) := by timed congr lean_s939 lean_s940
let lean_s942 := by timed congr lean_s938 lean_s941
let lean_s943 := by timed flipCongrArg lean_s538 [Eq]
have lean_s944 : (Eq let128 let128) := by timed rfl
have lean_s945 : (Eq let145 let130) := by timed congr lean_s943 lean_s944
let lean_s946 := by timed congr lean_s938 lean_s945
let lean_s947 := by timed flipCongrArg lean_s515 [Eq]
have lean_s948 : (Eq let475 let243) := by timed flipCongrArg lean_s562 [selectx5fformat]
have lean_s949 : (Eq let476 let245) := by timed congr lean_s947 lean_s948
let lean_s950 := by timed congr lean_s938 lean_s949
let lean_s951 := by timed flipCongrArg lean_s520 [Eq]
let lean_s952 := by timed flipCongrArg lean_s522 [HAdd.hAdd]
have lean_s953 : (Eq let289 let311) := by timed congr lean_s952 lean_s562
have lean_s954 : (Eq let290 let778) := by timed flipCongrArg lean_s953 [selectx5fformat]
have lean_s955 : (Eq let291 let779) := by timed congr lean_s951 lean_s954
let lean_s956 := by timed congr lean_s938 lean_s955
let lean_s957 := by timed flipCongrArg lean_s525 [Eq]
let lean_s958 := by timed flipCongrArg lean_s583 [HAdd.hAdd]
have lean_s959 : (Eq let219 let550) := by timed congr lean_s958 lean_s562
have lean_s960 : (Eq let560 let776) := by timed flipCongrArg lean_s959 [selectx5fformat]
have lean_s961 : (Eq let561 let777) := by timed congr lean_s957 lean_s960
let lean_s962 := by timed congr lean_s938 lean_s961
let lean_s963 := by timed flipCongrArg lean_s529 [Eq]
let lean_s964 := by timed flipCongrArg lean_s901 [HAdd.hAdd]
have lean_s965 : (Eq let417 let405) := by timed congr lean_s964 lean_s562
have lean_s966 : (Eq let541 let774) := by timed flipCongrArg lean_s965 [selectx5fformat]
have lean_s967 : (Eq let542 let775) := by timed congr lean_s963 lean_s966
let lean_s968 := by timed congr lean_s962 lean_s967
let lean_s969 := by timed congr lean_s956 lean_s968
let lean_s970 := by timed congr lean_s950 lean_s969
let lean_s971 := by timed congr lean_s946 lean_s970
have lean_s972 : (Eq let730 let780) := by timed congr lean_s942 lean_s971
have lean_s973 : (Eq let731 let781) := by timed flipCongrArg lean_s972 [Not]
let lean_s974 := by timed congr lean_s937 lean_s973
let lean_s975 := by timed congr lean_s921 lean_s974
let lean_s976 := by timed congr lean_s885 lean_s975
let lean_s977 := by timed congr lean_s877 lean_s976
let lean_s978 := by timed congr lean_s871 lean_s977
let lean_s979 := by timed congr lean_s865 lean_s978
let lean_s980 := by timed congr lean_s859 lean_s979
let lean_s981 := by timed congr lean_s853 lean_s980
let lean_s982 := by timed congr lean_s847 lean_s981
let lean_s983 := by timed congr lean_s838 lean_s982
let lean_s984 := by timed congr lean_s832 lean_s983
let lean_s985 := by timed congr lean_s826 lean_s984
let lean_s986 := by timed congr lean_s820 lean_s985
let lean_s987 := by timed congr lean_s814 lean_s986
let lean_s988 := by timed congr lean_s808 lean_s987
let lean_s989 := by timed congr lean_s616 lean_s988
let lean_s990 := by timed congr lean_s602 lean_s989
let lean_s991 := by timed congr lean_s594 lean_s990
let lean_s992 := by timed congr lean_s585 lean_s991
let lean_s993 := by timed congr lean_s579 lean_s992
let lean_s994 := by timed congr lean_s568 lean_s993
let lean_s995 := by timed congr lean_s558 lean_s994
let lean_s996 := by timed congr lean_s552 lean_s995
let lean_s997 := by timed congr lean_s547 lean_s996
let lean_s998 := by timed congr lean_s542 lean_s997
let lean_s999 := by timed congr lean_s537 lean_s998
let lean_s1000 := by timed congr lean_s532 lean_s999
let lean_s1001 := by timed congr lean_s528 lean_s1000
let lean_s1002 := by timed congr lean_s524 lean_s1001
let lean_s1003 := by timed congr lean_s519 lean_s1002
let lean_s1004 := by timed congr lean_s514 lean_s1003
have lean_s1005 : (Eq let773 let835) := by timed congr lean_s509 lean_s1004
have lean_s1006 : let836 := by timed rfl
let lean_s1007 := by timed congr lean_s1006 lean_r123
let lean_s1008 := by timed congr lean_s1006 lean_r269
let lean_s1009 := by timed congr lean_s1006 lean_r37
let lean_s1010 := by timed congr lean_s1006 lean_r40
let lean_s1011 := by timed congr lean_s1006 lean_r37
let lean_s1012 := by timed congr lean_s1006 lean_r40
let lean_s1013 := by timed congr lean_s1006 lean_r43
let lean_s1014 := by timed congr lean_s1006 lean_r107
let lean_s1015 := by timed congr lean_s1006 lean_r49
let lean_s1016 := by timed congr lean_s1006 lean_r129
let lean_s1017 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1018 : (Eq let834 let469) := by timed congr lean_s1017 lean_r52
have lean_s1019 : (Eq let834 True) := by timed Eq.trans lean_s1018 lean_r129
let lean_s1020 := by timed congr lean_s1006 lean_s1019
let lean_s1021 := by timed flipCongrArg lean_s442 [HAdd.hAdd]
have lean_s1022 : (Eq let831 let194) := by timed congr lean_s1021 lean_r169
have lean_s1023 : (Eq let831 let193) := by timed Eq.trans lean_s1022 lean_r53
let lean_s1024 := by timed flipCongrArg lean_s1023 [GE.ge]
have lean_s1025 : let162 := by timed rfl
have lean_s1026 : (Eq let832 let250) := by timed congr lean_s1024 lean_s1025
have lean_s1027 : (Eq let832 let197) := by timed Eq.trans lean_s1026 lean_r73
have lean_s1028 : (Eq let833 let198) := by timed flipCongrArg lean_s1027 [Not]
have lean_s1029 : (Eq let833 let21) := by timed Eq.trans lean_s1028 lean_r55
let lean_s1030 := by timed congr lean_s1006 lean_s1029
let lean_s1031 := by timed congrHAdd lean_r263 lean_r131
have lean_s1032 : (Eq let828 let204) := by timed congrHAdd lean_s39 lean_s1031
have lean_s1033 : (Eq let828 let203) := by timed Eq.trans lean_s1032 lean_r57
let lean_s1034 := by timed flipCongrArg lean_s1033 [GE.ge]
have lean_s1035 : let872 := by timed rfl
have lean_s1036 : (Eq let829 let485) := by timed congr lean_s1034 lean_s1035
have lean_s1037 : (Eq let829 let399) := by timed Eq.trans lean_s1036 lean_r141
have lean_s1038 : (Eq let830 let400) := by timed flipCongrArg lean_s1037 [Not]
let lean_s1039 := by timed congr lean_s1006 lean_s1038
let lean_s1040 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s1041 : (Eq let816 let264) := by timed congr lean_s1040 lean_r263
have lean_s1042 : (Eq let816 fmt1) := by timed Eq.trans lean_s1041 lean_r81
let lean_s1043 := by timed flipCongrArg lean_s1042 [GE.ge]
have lean_s1044 : let871 := by timed rfl
have lean_s1045 : (Eq let827 let398) := by timed congr lean_s1043 lean_s1044
let lean_s1046 := by timed congr lean_s1006 lean_s1045
have lean_s1047 : (Eq let109 let109) := by timed rfl
have lean_s1048 : (Eq let108 let108) := by timed rfl
let lean_s1049 := by timed congrHAdd lean_r63 lean_r167
let lean_s1050 := by timed congrHAdd lean_s1048 lean_s1049
let lean_s1051 := by timed congrHAdd lean_s1047 lean_s1050
have lean_s1052 : (Eq let262 let411) := by timed congrHAdd lean_s478 lean_s1051
have lean_s1053 : (Eq let262 let234) := by timed Eq.trans lean_s1052 lean_r111
have lean_s1054 : (Eq let263 let234) := by timed Eq.trans lean_r80 lean_s1053
let lean_s1055 := by timed flipCongrArg lean_s1054 [GE.ge]
have lean_s1056 : (Eq let826 let559) := by timed congr lean_s1055 lean_s442
have lean_s1057 : (Eq let826 let21) := by timed Eq.trans lean_s1056 lean_r187
let lean_s1058 := by timed congr lean_s1006 lean_s1057
let lean_s1059 := by timed congrHAdd lean_r131 lean_r167
let lean_s1060 := by timed congrHAdd lean_r63 lean_s1059
let lean_s1061 := by timed congrHAdd lean_s1048 lean_s1060
let lean_s1062 := by timed congrHAdd lean_s1047 lean_s1061
have lean_s1063 : (Eq let421 let229) := by timed congrHAdd lean_s478 lean_s1062
have lean_s1064 : (Eq let421 let228) := by timed Eq.trans lean_s1063 lean_r64
have lean_s1065 : (Eq let422 let228) := by timed Eq.trans lean_r117 lean_s1064
let lean_s1066 := by timed flipCongrArg lean_s1065 [GE.ge]
have lean_s1067 : let870 := by timed rfl
have lean_s1068 : (Eq let824 let233) := by timed congr lean_s1066 lean_s1067
have lean_s1069 : (Eq let824 let232) := by timed Eq.trans lean_s1068 lean_r66
have lean_s1070 : (Eq let825 let397) := by timed flipCongrArg lean_s1069 [Not]
let lean_s1071 := by timed congr lean_s1006 lean_s1070
have lean_s1072 : let564 := by timed rfl
let lean_s1073 := by timed flipCongrArg lean_s1072 [Eq]
have lean_s1074 : (Eq let823 let564) := by timed congr lean_s1073 lean_s490
have lean_s1075 : (Eq let823 True) := by timed Eq.trans lean_s1074 lean_r190
let lean_s1076 := by timed congr lean_s1006 lean_s1075
have lean_s1077 : let837 := by timed rfl
let lean_s1078 := by timed congr lean_s1077 lean_r161
let lean_s1079 := by timed congr lean_s1077 lean_r276
let lean_s1080 := by timed congr lean_s1077 lean_r184
let lean_s1081 := by timed congr lean_s1077 lean_r179
let lean_s1082 := by timed congr lean_s1077 lean_r68
let lean_s1083 := by timed congr lean_s1077 lean_r179
let lean_s1084 := by timed congr lean_s1077 lean_r68
let lean_s1085 := by timed congr lean_s1077 lean_s105
let lean_s1086 := by timed congr lean_s1077 lean_r33
let lean_s1087 := by timed congr lean_s1077 lean_r92
let lean_s1088 := by timed congr lean_s1077 lean_r158
let lean_s1089 := by timed congr lean_s1077 lean_r105
let lean_s1090 := by timed congr lean_s1077 lean_r125
let lean_s1091 := by timed congr lean_s1077 lean_r105
let lean_s1092 := by timed congr lean_s1077 lean_r125
let lean_s1093 := by timed congr lean_s1077 lean_s114
let lean_s1094 := by timed congr lean_s1077 lean_r150
let lean_s1095 := by timed congr lean_s1077 lean_r41
let lean_s1096 := by timed congr lean_s1077 lean_r152
let lean_s1097 := by timed congr lean_s1077 lean_r102
let lean_s1098 := by timed congr lean_s1077 lean_r109
let lean_s1099 := by timed congr lean_s1077 lean_r102
let lean_s1100 := by timed congr lean_s1077 lean_r109
let lean_s1101 := by timed congr lean_s1077 lean_s123
let lean_s1102 := by timed congr lean_s1077 lean_r148
let lean_s1103 := by timed congr lean_s1077 lean_r176
let lean_s1104 := by timed congr lean_s1077 lean_r60
let lean_s1105 := by timed congr lean_s1077 lean_r121
let lean_s1106 := by timed congr lean_s1077 lean_r88
let lean_s1107 := by timed congr lean_s1077 lean_r121
let lean_s1108 := by timed congr lean_s1077 lean_r88
let lean_s1109 := by timed congr lean_s1077 lean_s132
let lean_s1110 := by timed congr lean_s1077 lean_r79
let lean_s1111 := by timed congr lean_s1077 lean_r170
let lean_s1112 := by timed congr lean_s1077 lean_r145
let lean_s1113 := by timed congr lean_s1077 lean_r177
let lean_s1114 := by timed congr lean_s1077 lean_r174
let lean_s1115 := by timed congr lean_s1077 lean_r177
let lean_s1116 := by timed congr lean_s1077 lean_r174
let lean_s1117 := by timed congr lean_s1077 lean_s141
let lean_s1118 := by timed congr lean_s1077 lean_r142
let lean_s1119 := by timed congr lean_s1077 lean_r270
let lean_s1120 := by timed congr lean_s1077 lean_r113
let lean_s1121 := by timed congr lean_s1077 lean_r135
let lean_s1122 := by timed congr lean_s1077 lean_r168
let lean_s1123 := by timed congr lean_s1077 lean_r135
let lean_s1124 := by timed congr lean_s1077 lean_r168
let lean_s1125 := by timed congr lean_s1124 lean_s150
let lean_s1126 := by timed congr lean_s1123 lean_s1125
let lean_s1127 := by timed congr lean_s1122 lean_s1126
let lean_s1128 := by timed congr lean_s1121 lean_s1127
let lean_s1129 := by timed congr lean_s1120 lean_s1128
let lean_s1130 := by timed congr lean_s1119 lean_s1129
let lean_s1131 := by timed congr lean_s1118 lean_s1130
let lean_s1132 := by timed congr lean_s1117 lean_s1131
let lean_s1133 := by timed congr lean_s1116 lean_s1132
let lean_s1134 := by timed congr lean_s1115 lean_s1133
let lean_s1135 := by timed congr lean_s1114 lean_s1134
let lean_s1136 := by timed congr lean_s1113 lean_s1135
let lean_s1137 := by timed congr lean_s1112 lean_s1136
let lean_s1138 := by timed congr lean_s1111 lean_s1137
let lean_s1139 := by timed congr lean_s1110 lean_s1138
let lean_s1140 := by timed congr lean_s1109 lean_s1139
let lean_s1141 := by timed congr lean_s1108 lean_s1140
let lean_s1142 := by timed congr lean_s1107 lean_s1141
let lean_s1143 := by timed congr lean_s1106 lean_s1142
let lean_s1144 := by timed congr lean_s1105 lean_s1143
let lean_s1145 := by timed congr lean_s1104 lean_s1144
let lean_s1146 := by timed congr lean_s1103 lean_s1145
let lean_s1147 := by timed congr lean_s1102 lean_s1146
let lean_s1148 := by timed congr lean_s1101 lean_s1147
let lean_s1149 := by timed congr lean_s1100 lean_s1148
let lean_s1150 := by timed congr lean_s1099 lean_s1149
let lean_s1151 := by timed congr lean_s1098 lean_s1150
let lean_s1152 := by timed congr lean_s1097 lean_s1151
let lean_s1153 := by timed congr lean_s1096 lean_s1152
let lean_s1154 := by timed congr lean_s1095 lean_s1153
let lean_s1155 := by timed congr lean_s1094 lean_s1154
let lean_s1156 := by timed congr lean_s1093 lean_s1155
let lean_s1157 := by timed congr lean_s1092 lean_s1156
let lean_s1158 := by timed congr lean_s1091 lean_s1157
let lean_s1159 := by timed congr lean_s1090 lean_s1158
let lean_s1160 := by timed congr lean_s1089 lean_s1159
let lean_s1161 := by timed congr lean_s1088 lean_s1160
let lean_s1162 := by timed congr lean_s1087 lean_s1161
let lean_s1163 := by timed congr lean_s1086 lean_s1162
let lean_s1164 := by timed congr lean_s1085 lean_s1163
let lean_s1165 := by timed congr lean_s1084 lean_s1164
let lean_s1166 := by timed congr lean_s1083 lean_s1165
let lean_s1167 := by timed congr lean_s1082 lean_s1166
let lean_s1168 := by timed congr lean_s1081 lean_s1167
let lean_s1169 := by timed congr lean_s1080 lean_s1168
let lean_s1170 := by timed congr lean_s1079 lean_s1169
have lean_s1171 : (Eq let815 let395) := by timed congr lean_s1078 lean_s1170
let lean_s1172 := by timed congr lean_s1006 lean_s1171
let lean_s1173 := by timed flipCongrArg lean_r161 [And]
have lean_s1174 : (Eq let813 let375) := by timed congr lean_s1173 lean_r92
have lean_s1175 : (Eq let814 let376) := by timed congrIte lean_s1174 lean_s202 lean_s203
let lean_s1176 := by timed congr lean_s1006 lean_s1175
let lean_s1177 := by timed flipCongrArg lean_r33 [And]
have lean_s1178 : (Eq let811 let373) := by timed congr lean_s1177 lean_r41
have lean_s1179 : let860 := by timed rfl
have lean_s1180 : let859 := by timed rfl
have lean_s1181 : (Eq let812 let374) := by timed congrIte lean_s1178 lean_s1179 lean_s1180
let lean_s1182 := by timed congr lean_s1006 lean_s1181
let lean_s1183 := by timed flipCongrArg lean_r150 [And]
have lean_s1184 : (Eq let809 let371) := by timed congr lean_s1183 lean_r176
have lean_s1185 : let858 := by timed rfl
have lean_s1186 : let857 := by timed rfl
have lean_s1187 : (Eq let810 let372) := by timed congrIte lean_s1184 lean_s1185 lean_s1186
let lean_s1188 := by timed congr lean_s1006 lean_s1187
let lean_s1189 := by timed flipCongrArg lean_r148 [And]
have lean_s1190 : (Eq let807 let368) := by timed congr lean_s1189 lean_r170
have lean_s1191 : let856 := by timed rfl
have lean_s1192 : let855 := by timed rfl
have lean_s1193 : (Eq let808 let369) := by timed congrIte lean_s1190 lean_s1191 lean_s1192
let lean_s1194 := by timed congr lean_s1006 lean_s1193
let lean_s1195 := by timed flipCongrArg lean_r79 [And]
have lean_s1196 : (Eq let805 let363) := by timed congr lean_s1195 lean_r270
have lean_s1197 : let854 := by timed rfl
have lean_s1198 : let853 := by timed rfl
have lean_s1199 : (Eq let806 let364) := by timed congrIte lean_s1196 lean_s1197 lean_s1198
let lean_s1200 := by timed congr lean_s1006 lean_s1199
let lean_s1201 := by timed flipCongrArg lean_r142 [And]
have lean_s1202 : (Eq let803 let359) := by timed congr lean_s1201 lean_r162
have lean_s1203 : let852 := by timed rfl
have lean_s1204 : let851 := by timed rfl
have lean_s1205 : (Eq let804 let360) := by timed congrIte lean_s1202 lean_s1203 lean_s1204
let lean_s1206 := by timed congr lean_s1006 lean_s1205
let lean_s1207 := by timed flipCongrArg lean_r161 [And]
have lean_s1208 : (Eq let801 let353) := by timed congr lean_s1207 lean_r158
have lean_s1209 : (Eq let802 let354) := by timed congrIte lean_s1208 lean_s248 lean_s249
let lean_s1210 := by timed congr lean_s1006 lean_s1209
let lean_s1211 := by timed flipCongrArg lean_r33 [And]
have lean_s1212 : (Eq let799 let349) := by timed congr lean_s1211 lean_r152
have lean_s1213 : let848 := by timed rfl
have lean_s1214 : let847 := by timed rfl
have lean_s1215 : (Eq let800 let350) := by timed congrIte lean_s1212 lean_s1213 lean_s1214
let lean_s1216 := by timed congr lean_s1006 lean_s1215
let lean_s1217 := by timed flipCongrArg lean_r150 [And]
have lean_s1218 : (Eq let797 let346) := by timed congr lean_s1217 lean_r60
have lean_s1219 : let846 := by timed rfl
have lean_s1220 : let845 := by timed rfl
have lean_s1221 : (Eq let798 let347) := by timed congrIte lean_s1218 lean_s1219 lean_s1220
let lean_s1222 := by timed congr lean_s1006 lean_s1221
let lean_s1223 := by timed flipCongrArg lean_r148 [And]
have lean_s1224 : (Eq let795 let343) := by timed congr lean_s1223 lean_r145
have lean_s1225 : let844 := by timed rfl
have lean_s1226 : let843 := by timed rfl
have lean_s1227 : (Eq let796 let344) := by timed congrIte lean_s1224 lean_s1225 lean_s1226
let lean_s1228 := by timed congr lean_s1006 lean_s1227
let lean_s1229 := by timed flipCongrArg lean_r79 [And]
have lean_s1230 : (Eq let793 let338) := by timed congr lean_s1229 lean_r113
have lean_s1231 : let842 := by timed rfl
have lean_s1232 : let841 := by timed rfl
have lean_s1233 : (Eq let794 let339) := by timed congrIte lean_s1230 lean_s1231 lean_s1232
let lean_s1234 := by timed congr lean_s1006 lean_s1233
let lean_s1235 := by timed flipCongrArg lean_r142 [And]
have lean_s1236 : (Eq let791 let333) := by timed congr lean_s1235 lean_r137
have lean_s1237 : let840 := by timed rfl
have lean_s1238 : let839 := by timed rfl
have lean_s1239 : (Eq let792 let334) := by timed congrIte lean_s1236 lean_s1237 lean_s1238
let lean_s1240 := by timed congr lean_s1006 lean_s1239
have lean_s1241 : let837 := by timed rfl
have lean_s1242 : (Eq let328 let328) := by timed rfl
let lean_s1243 := by timed congr lean_s1241 lean_s1242
let lean_s1244 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1245 : (Eq let789 let327) := by timed congr lean_s1244 lean_r172
let lean_s1246 := by timed congr lean_s1241 lean_s1245
let lean_s1247 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1248 : (Eq let788 let74) := by timed congr lean_s1247 lean_r134
let lean_s1249 := by timed congr lean_s1241 lean_s1248
let lean_s1250 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1251 : (Eq let787 let80) := by timed congr lean_s1250 lean_r84
let lean_s1252 := by timed congr lean_s1241 lean_s1251
let lean_s1253 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1254 : (Eq let786 let15) := by timed congr lean_s1253 lean_r124
let lean_s1255 := by timed congr lean_s1241 lean_s1254
let lean_s1256 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1257 : (Eq let785 let326) := by timed congr lean_s1256 lean_r139
let lean_s1258 := by timed congr lean_s1255 lean_s1257
let lean_s1259 := by timed congr lean_s1252 lean_s1258
let lean_s1260 := by timed congr lean_s1249 lean_s1259
let lean_s1261 := by timed congr lean_s1246 lean_s1260
have lean_s1262 : (Eq let790 let329) := by timed congr lean_s1243 lean_s1261
let lean_s1263 := by timed congr lean_s1006 lean_s1262
have lean_s1264 : let837 := by timed rfl
let lean_s1265 := by timed congr lean_s1264 lean_r67
let lean_s1266 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1267 : let257 := by timed Eq.trans lean_r75 lean_r78
have lean_s1268 : (Eq let783 let112) := by timed congr lean_s1266 lean_s1267
have lean_s1269 : (Eq let783 let107) := by timed Eq.trans lean_s1268 lean_r21
let lean_s1270 := by timed congr lean_s1264 lean_s1269
let lean_s1271 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1272 : let278 := by timed Eq.trans lean_r82 lean_r89
have lean_s1273 : (Eq let782 let304) := by timed congr lean_s1271 lean_s1272
have lean_s1274 : (Eq let782 False) := by timed Eq.trans lean_s1273 lean_r98
let lean_s1275 := by timed congr lean_s1270 lean_s1274
have lean_s1276 : (Eq let784 let491) := by timed congr lean_s1265 lean_s1275
have lean_s1277 : (Eq let784 let107) := by timed Eq.trans lean_s1276 lean_r144
let lean_s1278 := by timed congr lean_s1006 lean_s1277
have lean_s1279 : let836 := by timed rfl
let lean_s1280 := by timed congr lean_s1279 lean_r202
let lean_s1281 := by timed congr lean_s1279 lean_r26
let lean_s1282 := by timed congr lean_s1279 lean_r70
let lean_s1283 := by timed flipCongrArg lean_s1025 [Eq]
have lean_s1284 : let407 := by timed Eq.trans lean_r101 lean_r108
have lean_s1285 : (Eq let778 let321) := by timed flipCongrArg lean_s1284 [selectx5fformat]
have lean_s1286 : (Eq let779 let563) := by timed congr lean_s1283 lean_s1285
have lean_s1287 : (Eq let779 let322) := by timed Eq.trans lean_s1286 lean_r189
let lean_s1288 := by timed congr lean_s1279 lean_s1287
let lean_s1289 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1290 : let551 := by timed Eq.trans lean_r277 lean_r183
have lean_s1291 : (Eq let776 let318) := by timed flipCongrArg lean_s1290 [selectx5fformat]
have lean_s1292 : (Eq let777 let480) := by timed congr lean_s1289 lean_s1291
have lean_s1293 : (Eq let777 let319) := by timed Eq.trans lean_s1292 lean_r136
let lean_s1294 := by timed congr lean_s1279 lean_s1293
let lean_s1295 := by timed flipCongrArg lean_s1025 [Eq]
have lean_s1296 : let465 := by timed Eq.trans lean_r106 lean_r126
have lean_s1297 : (Eq let774 let315) := by timed flipCongrArg lean_s1296 [selectx5fformat]
have lean_s1298 : (Eq let775 let416) := by timed congr lean_s1295 lean_s1297
have lean_s1299 : (Eq let775 let316) := by timed Eq.trans lean_s1298 lean_r115
let lean_s1300 := by timed congr lean_s1294 lean_s1299
let lean_s1301 := by timed congr lean_s1288 lean_s1300
let lean_s1302 := by timed congr lean_s1282 lean_s1301
let lean_s1303 := by timed congr lean_s1281 lean_s1302
have lean_s1304 : (Eq let780 let324) := by timed congr lean_s1280 lean_s1303
have lean_s1305 : (Eq let781 let325) := by timed flipCongrArg lean_s1304 [Not]
let lean_s1306 := by timed congr lean_s1278 lean_s1305
let lean_s1307 := by timed congr lean_s1263 lean_s1306
let lean_s1308 := by timed congr lean_s1240 lean_s1307
let lean_s1309 := by timed congr lean_s1234 lean_s1308
let lean_s1310 := by timed congr lean_s1228 lean_s1309
let lean_s1311 := by timed congr lean_s1222 lean_s1310
let lean_s1312 := by timed congr lean_s1216 lean_s1311
let lean_s1313 := by timed congr lean_s1210 lean_s1312
let lean_s1314 := by timed congr lean_s1206 lean_s1313
let lean_s1315 := by timed congr lean_s1200 lean_s1314
let lean_s1316 := by timed congr lean_s1194 lean_s1315
let lean_s1317 := by timed congr lean_s1188 lean_s1316
let lean_s1318 := by timed congr lean_s1182 lean_s1317
let lean_s1319 := by timed congr lean_s1176 lean_s1318
let lean_s1320 := by timed congr lean_s1172 lean_s1319
let lean_s1321 := by timed congr lean_s1076 lean_s1320
let lean_s1322 := by timed congr lean_s1071 lean_s1321
let lean_s1323 := by timed congr lean_s1058 lean_s1322
let lean_s1324 := by timed congr lean_s1046 lean_s1323
let lean_s1325 := by timed congr lean_s1039 lean_s1324
let lean_s1326 := by timed congr lean_s1030 lean_s1325
let lean_s1327 := by timed congr lean_s1020 lean_s1326
let lean_s1328 := by timed congr lean_s1016 lean_s1327
let lean_s1329 := by timed congr lean_s1015 lean_s1328
let lean_s1330 := by timed congr lean_s1014 lean_s1329
let lean_s1331 := by timed congr lean_s1013 lean_s1330
let lean_s1332 := by timed congr lean_s1012 lean_s1331
let lean_s1333 := by timed congr lean_s1011 lean_s1332
let lean_s1334 := by timed congr lean_s1010 lean_s1333
let lean_s1335 := by timed congr lean_s1009 lean_s1334
let lean_s1336 := by timed congr lean_s1008 lean_s1335
have lean_s1337 : (Eq let835 let402) := by timed congr lean_s1007 lean_s1336
have lean_s1338 : (Eq let835 let401) := by timed Eq.trans lean_s1337 lean_r103
have lean_s1339 : (Eq let773 let401) := by timed Eq.trans lean_s1005 lean_s1338
have lean_s1340 : (Eq let710 let401) := by timed Eq.trans lean_s398 lean_s1339
have lean_s1341 : let401 := by timed eqResolve lean_a279 lean_s1340
have lean_s1342 : let372 := by andElim lean_s1341, 7
have lean_s1343 : (Or let904 let32) := by timed iteElim1 lean_s1342
have lean_s1344 : (Or let32 let904) := by permutateOr lean_s1343, [1, 0], (- 1)
have lean_s1345 : (Or let371 let44) := by timed iteElim2 lean_s1342
have lean_s1346 : (Or let44 let371) := by permutateOr lean_s1345, [1, 0], (- 1)
have lean_s1347 : (Or let1160 (Or let908 (Or let966 let1112))) :=
  (scope (fun lean_a294 : let38 =>
    (scope (fun lean_a295 : let36 =>
      (scope (fun lean_a296 : let34 =>
        (scope (fun lean_a297 : let44 =>
          (scope (fun lean_a298 : let29 =>
            (scope (fun lean_a299 : let25 =>
              (scope (fun lean_a300 : let21 =>
                (scope (fun lean_a301 : let15 =>
                  have lean_s1347 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1348 : let468 := by timed eqResolve lean_a301 lean_s1347
                  let lean_s1349 := by timed And.intro lean_a298 lean_a295
                  let lean_s1350 := by timed And.intro lean_a299 lean_s1349
                  have lean_s1351 : let1069 := by timed And.intro lean_s1348 lean_s1350
                  have lean_s1352 : let1071 :=
                    (scope (fun lean_a295 : let468 =>
                      (scope (fun lean_a296 : let25 =>
                        (scope (fun lean_a297 : let29 =>
                          (scope (fun lean_a298 : let36 =>
                            have lean_s1352 : let953 := by timed Eq.symm lean_a298
                            have lean_s1353 : let424 := by timed Eq.symm lean_a297
                            have lean_s1354 : let29 := by timed Eq.symm lean_s1353
                            let lean_s1355 := by timed Eq.trans lean_s1352 lean_s1354
                            have lean_s1356 : let403 := by timed Eq.symm lean_a296
                            have lean_s1357 : let25 := by timed Eq.symm lean_s1356
                            let lean_s1358 := by timed Eq.trans lean_s1355 lean_s1357
                            have lean_s1359 : let1055 := by timed Eq.symm lean_a295
                            have lean_s1360 : let468 := by timed Eq.symm lean_s1359
                            have lean_s1361 : let1058 := by timed flipCongrArg lean_s1360 [xx5fcount]
                            have lean_s1362 : let916 := by timed Eq.trans lean_s1358 lean_s1361
                            show let916 from lean_s1362
                    ))))))))
                  have lean_s1353 : let1070 := by liftOrNToImp lean_s1352, 4
                  have lean_s1354 : let916 := by timed modusPonens lean_s1351 lean_s1353
                  let lean_s1355 := by timed And.intro lean_a296 lean_a294
                  let lean_s1356 := by timed And.intro lean_a297 lean_s1355
                  have lean_s1357 : let1170 := by timed And.intro lean_s1348 lean_s1356
                  have lean_s1358 : let1172 :=
                    (scope (fun lean_a295 : let468 =>
                      (scope (fun lean_a296 : let44 =>
                        (scope (fun lean_a297 : let34 =>
                          (scope (fun lean_a298 : let38 =>
                            have lean_s1358 : let1164 := by timed Eq.symm lean_a298
                            have lean_s1359 : let133 := by timed Eq.symm lean_a297
                            have lean_s1360 : let34 := by timed Eq.symm lean_s1359
                            let lean_s1361 := by timed Eq.trans lean_s1358 lean_s1360
                            have lean_s1362 : let173 := by timed Eq.symm lean_a296
                            have lean_s1363 : let44 := by timed Eq.symm lean_s1362
                            let lean_s1364 := by timed Eq.trans lean_s1361 lean_s1363
                            have lean_s1365 : let1055 := by timed Eq.symm lean_a295
                            have lean_s1366 : let468 := by timed Eq.symm lean_s1365
                            have lean_s1367 : let1054 := by timed flipCongrArg lean_s1366 [sx5fcount]
                            have lean_s1368 : let988 := by timed Eq.trans lean_s1364 lean_s1367
                            show let988 from lean_s1368
                    ))))))))
                  have lean_s1359 : let1171 := by liftOrNToImp lean_s1358, 4
                  have lean_s1360 : let988 := by timed modusPonens lean_s1357 lean_s1359
                  let lean_s1361 := by timed And.intro lean_s1354 lean_s1360
                  have lean_s1362 : let989 := by timed And.intro lean_a300 lean_s1361
                  show let989 from lean_s1362
  ))))))))))))))))
have lean_s1348 : let1173 := by liftOrNToImp lean_s1347, 8
have lean_s1349 : (Eq let573 let573) := by timed rfl
let lean_s1350 := by timed flipCongrArg lean_s1349 [Implies]
have lean_s1351 : (Or let197 (Or let921 let992)) :=
  (scope (fun lean_a295 : let21 =>
    (scope (fun lean_a296 : let916 =>
      (scope (fun lean_a297 : let988 =>
        have lean_s1351 : let993 := by timed Eq.symm lean_a297
        have lean_s1352 : let995 :=
          (scope (fun lean_a296 : let993 =>
            have lean_s1352 : let251 := by timed trueElim lean_r74
            have lean_s1353 : let999 := by timed And.intro lean_s1352 lean_a296
            have lean_s1354 : let1000 := by arithMulPos [let19, let4, let63], 4
            have lean_s1355 : let998 := by timed modusPonens lean_s1353 lean_s1354
            have lean_s1356 : let933 := by timed Eq.symm lean_a296
            have lean_s1357 : let934 := by timed And.intro lean_s1352 lean_s1356
            have lean_s1358 : let935 := by arithMulPos [let18, let27, let63], 4
            have lean_s1359 : let932 := by timed modusPonens lean_s1357 lean_s1358
            have lean_s1360 : let718 := by timed trueElim lean_r265
            have lean_s1361 : let930 := by timed And.intro lean_s1360 lean_a295
            have lean_s1362 : let931 := by arithMulNeg [let20, let14, let302], 3
            have lean_s1363 : let929 := by timed modusPonens lean_s1361 lean_s1362
            have lean_s1364 : let997 := by sumBounds [lean_s1355, lean_s1359, lean_s1363]
            let lean_s1365 := by timed congrHAdd lean_r264 lean_r97
            have lean_s1366 : (Eq let927 let582) := by timed congrHAdd lean_r35 lean_s1365
            have lean_s1367 : (Eq let927 let11) := by timed Eq.trans lean_s1366 lean_r203
            let lean_s1368 := by timed flipCongrArg lean_s1367 [LE.le]
            let lean_s1369 := by timed congrHAdd lean_r197 lean_r261
            have lean_s1370 : (Eq let996 let715) := by timed congrHAdd lean_r232 lean_s1369
            have lean_s1371 : (Eq let996 let466) := by timed Eq.trans lean_s1370 lean_r262
            have lean_s1372 : (Eq let997 let482) := by timed congr lean_s1368 lean_s1371
            have lean_s1373 : (Eq let997 False) := by timed Eq.trans lean_s1372 lean_r138
            show False from by timed eqResolve lean_s1364 lean_s1373
          ))
        have lean_s1353 : let994 := by liftOrNToNeg lean_s1352
        show False from by timed contradiction lean_s1351 lean_s1353
  ))))))
have lean_s1352 : (Not let989) := by liftOrNToNeg lean_s1351
have lean_s1353 : let991 := by timed falseIntro lean_s1352
have lean_s1354 : (Eq let1173 let575) := by timed congr lean_s1350 lean_s1353
have lean_s1355 : (Eq let1173 let574) := by timed Eq.trans lean_s1354 lean_r198
have lean_s1356 : let574 := by timed eqResolve lean_s1348 lean_s1355
have lean_s1357 : (Or let1160 let1067) := by timed flipNotAnd lean_s1356 [let38, let36, let34, let44, let29, let25, let21, let15]
have lean_s1358 : (Or let197 (Or let1160 let1063)) := by permutateOr lean_s1357, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
have lean_s1359 : let21 := by andElim lean_s1341, 0
let lean_s1360 := by R2 lean_s1358, lean_s1359, let21, [(- 1), 0]
have lean_s1361 : let376 := by andElim lean_s1341, 5
have lean_s1362 : (Or let906 let38) := by timed iteElim1 lean_s1361
have lean_s1363 : (Or let38 let906) := by permutateOr lean_s1362, [1, 0], (- 1)
have lean_s1364 : (Or let375 let59) := by timed iteElim2 lean_s1361
have lean_s1365 : (Or let59 let375) := by permutateOr lean_s1364, [1, 0], (- 1)
have lean_s1366 : (Or let887 (Or let1122 (Or let966 (Or let1044 (Or let962 (Or let1095 (Or let197 (Or let286 let1145)))))))) :=
  (scope (fun lean_a297 : let59 =>
    (scope (fun lean_a298 : let58 =>
      (scope (fun lean_a299 : let34 =>
        (scope (fun lean_a300 : let44 =>
          (scope (fun lean_a301 : let29 =>
            (scope (fun lean_a302 : let43 =>
              (scope (fun lean_a303 : let21 =>
                (scope (fun lean_a304 : let15 =>
                  have lean_s1366 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1367 : let468 := by timed eqResolve lean_a304 lean_s1366
                  let lean_s1368 := by timed And.intro lean_a301 lean_a298
                  have lean_s1369 : let1154 := by timed And.intro lean_a302 lean_s1368
                  have lean_s1370 : (Or let1095 (Or let962 (Or let1122 let56))) :=
                    (scope (fun lean_a300 : let43 =>
                      (scope (fun lean_a301 : let29 =>
                        (scope (fun lean_a302 : let58 =>
                          have lean_s1370 : let1129 := by timed Eq.symm lean_a302
                          have lean_s1371 : let424 := by timed Eq.symm lean_a301
                          have lean_s1372 : let29 := by timed Eq.symm lean_s1371
                          let lean_s1373 := by timed Eq.trans lean_s1370 lean_s1372
                          have lean_s1374 : let1110 := by timed Eq.symm lean_a300
                          have lean_s1375 : let43 := by timed Eq.symm lean_s1374
                          have lean_s1376 : let56 := by timed Eq.trans lean_s1373 lean_s1375
                          show let56 from lean_s1376
                    ))))))
                  have lean_s1371 : (Implies let1154 let56) := by liftOrNToImp lean_s1370, 3
                  have lean_s1372 : let56 := by timed modusPonens lean_s1369 lean_s1371
                  have lean_s1373 : (Or (Not let56) let1152) :=
                    (scope (fun lean_a300 : let56 =>
                      have lean_s1373 : let55 := by timed eqResolve lean_a300 lean_r6
                      have lean_s1374 : let1152 := by timed Eq.symm lean_s1373
                      show let1152 from lean_s1374
                    ))
                  have lean_s1374 : (Implies let56 let1152) := by liftOrNToImp lean_s1373, 1
                  have lean_s1375 : let1152 := by timed modusPonens lean_s1372 lean_s1374
                  have lean_s1376 : let1153 := by timed And.intro lean_s1367 lean_s1375
                  have lean_s1377 : (Or let1052 (Or (Not let1152) let1144)) :=
                    (scope (fun lean_a301 : let468 =>
                      (scope (fun lean_a302 : let1152 =>
                        have lean_s1377 : let55 := by timed Eq.symm lean_a302
                        have lean_s1378 : let1152 := by timed Eq.symm lean_s1377
                        have lean_s1379 : let1055 := by timed Eq.symm lean_a301
                        have lean_s1380 : let468 := by timed Eq.symm lean_s1379
                        have lean_s1381 : let1058 := by timed flipCongrArg lean_s1380 [xx5fcount]
                        have lean_s1382 : let1144 := by timed Eq.trans lean_s1378 lean_s1381
                        show let1144 from lean_s1382
                    ))))
                  have lean_s1378 : (Implies let1153 let1144) := by liftOrNToImp lean_s1377, 2
                  have lean_s1379 : let1144 := by timed modusPonens lean_s1376 lean_s1378
                  let lean_s1380 := by timed And.intro lean_a299 lean_a297
                  let lean_s1381 := by timed And.intro lean_a300 lean_s1380
                  have lean_s1382 : let1050 := by timed And.intro lean_s1367 lean_s1381
                  have lean_s1383 : let1053 :=
                    (scope (fun lean_a302 : let468 =>
                      (scope (fun lean_a303 : let44 =>
                        (scope (fun lean_a304 : let34 =>
                          (scope (fun lean_a305 : let59 =>
                            have lean_s1383 : let946 := by timed Eq.symm lean_a305
                            have lean_s1384 : let133 := by timed Eq.symm lean_a304
                            have lean_s1385 : let34 := by timed Eq.symm lean_s1384
                            let lean_s1386 := by timed Eq.trans lean_s1383 lean_s1385
                            have lean_s1387 : let173 := by timed Eq.symm lean_a303
                            have lean_s1388 : let44 := by timed Eq.symm lean_s1387
                            let lean_s1389 := by timed Eq.trans lean_s1386 lean_s1388
                            have lean_s1390 : let1055 := by timed Eq.symm lean_a302
                            have lean_s1391 : let468 := by timed Eq.symm lean_s1390
                            have lean_s1392 : let1054 := by timed flipCongrArg lean_s1391 [sx5fcount]
                            have lean_s1393 : let915 := by timed Eq.trans lean_s1389 lean_s1392
                            show let915 from lean_s1393
                    ))))))))
                  have lean_s1384 : let1051 := by liftOrNToImp lean_s1383, 4
                  have lean_s1385 : let915 := by timed modusPonens lean_s1382 lean_s1384
                  let lean_s1386 := by timed And.intro lean_s1379 lean_s1385
                  have lean_s1387 : let1145 := by timed And.intro lean_a303 lean_s1386
                  show let1145 from lean_s1387
  ))))))))))))))))
have lean_s1367 : let1146 := by liftOrNToImp lean_s1366, 8
have lean_s1368 : (Eq let60 let60) := by timed rfl
let lean_s1369 := by timed flipCongrArg lean_s1368 [Implies]
have lean_s1370 : (Or let197 (Or (Not let1144) let920)) :=
  (scope (fun lean_a302 : let21 =>
    (scope (fun lean_a303 : let1144 =>
      (scope (fun lean_a304 : let915 =>
        have lean_s1370 : let922 := by timed Eq.symm lean_a304
        have lean_s1371 : let924 :=
          (scope (fun lean_a304 : let922 =>
            have lean_s1371 : let251 := by timed trueElim lean_r74
            have lean_s1372 : let937 := by timed And.intro lean_s1371 lean_a304
            have lean_s1373 : let938 := by arithMulPos [let19, let27, let63], 4
            have lean_s1374 : let936 := by timed modusPonens lean_s1372 lean_s1373
            have lean_s1375 : let1150 := by timed Eq.symm lean_a303
            have lean_s1376 : let1151 := by timed And.intro lean_s1371 lean_s1375
            have lean_s1377 : (Implies let1151 let1149) := by arithMulPos [let18, let1, let63], 4
            have lean_s1378 : let1149 := by timed modusPonens lean_s1376 lean_s1377
            have lean_s1379 : let718 := by timed trueElim lean_r265
            have lean_s1380 : let930 := by timed And.intro lean_s1379 lean_a302
            have lean_s1381 : let931 := by arithMulNeg [let20, let14, let302], 3
            have lean_s1382 : let929 := by timed modusPonens lean_s1380 lean_s1381
            have lean_s1383 : let1148 := by sumBounds [lean_s1374, lean_s1378, lean_s1382]
            let lean_s1384 := by timed congrHAdd lean_r264 lean_r97
            have lean_s1385 : (Eq let927 let582) := by timed congrHAdd lean_r35 lean_s1384
            have lean_s1386 : (Eq let927 let11) := by timed Eq.trans lean_s1385 lean_r203
            let lean_s1387 := by timed flipCongrArg lean_s1386 [LE.le]
            let lean_s1388 := by timed congrHAdd lean_r72 lean_r261
            have lean_s1389 : (Eq let1147 let57) := by timed congrHAdd lean_r197 lean_s1388
            have lean_s1390 : (Eq let1147 let9) := by timed Eq.trans lean_s1389 lean_r7
            have lean_s1391 : (Eq let1148 let226) := by timed congr lean_s1387 lean_s1390
            have lean_s1392 : (Eq let1148 False) := by timed Eq.trans lean_s1391 lean_r62
            show False from by timed eqResolve lean_s1383 lean_s1392
          ))
        have lean_s1372 : let923 := by liftOrNToNeg lean_s1371
        show False from by timed contradiction lean_s1370 lean_s1372
  ))))))
have lean_s1371 : (Not let1145) := by liftOrNToNeg lean_s1370
have lean_s1372 : (Eq let1145 False) := by timed falseIntro lean_s1371
have lean_s1373 : (Eq let1146 let62) := by timed congr lean_s1369 lean_s1372
have lean_s1374 : (Eq let1146 let61) := by timed Eq.trans lean_s1373 lean_r8
have lean_s1375 : let61 := by timed eqResolve lean_s1367 lean_s1374
have lean_s1376 : (Or let887 (Or let1122 let1098)) := by timed flipNotAnd lean_s1375 [let59, let58, let34, let44, let29, let43, let21, let15]
have lean_s1377 : (Or let197 (Or let887 (Or let966 (Or let1044 (Or let1122 let1096))))) := by permutateOr lean_s1376, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1378 := by R2 lean_s1377, lean_s1359, let21, [(- 1), 0]
let lean_s1379 := by R2 lean_s1378, lean_s1346, let44, [(- 1), (- 1)]
have lean_s1380 : (Or let904 let370) := by timed @cnfAndPos [let345, let370] 1
have lean_s1381 : (Or let370 let904) := by permutateOr lean_s1380, [1, 0], (- 1)
let lean_s1382 := by R1 lean_s1379, lean_s1381, let371, [(- 1), (- 1)]
have lean_s1383 : let1093 :=
  (scope (fun lean_a305 : let221 =>
    have lean_s1383 : let1093 :=
      (scope (fun lean_a306 : let221 =>
        have lean_s1383 : let222 := by timed Eq.symm lean_a306
        have lean_s1384 : let221 := by timed Eq.symm lean_s1383
        let lean_s1385 := by timed flipCongrArg lean_s1384 [Eq]
        have lean_s1386 : let406 := by timed rfl
        have lean_s1387 : (Eq let370 let179) := by timed congr lean_s1385 lean_s1386
        have lean_s1388 : (Eq let577 let712) := by timed flipCongrArg lean_r47 [Not]
        have lean_s1389 : (Eq let577 True) := by timed Eq.trans lean_s1388 lean_r259
        have lean_s1390 : (Eq let180 True) := by timed Eq.trans lean_r200 lean_s1389
        have lean_s1391 : let180 := by timed trueElim lean_s1390
        have lean_s1392 : (Eq let370 False) := by timed Eq.trans lean_s1387 lean_s1391
        have lean_s1393 : let1092 := by timed falseElim lean_s1392
        show let1092 from lean_s1393
      ))
    have lean_s1384 : let1094 := by liftOrNToImp lean_s1383, 1
    have lean_s1385 : let1092 := by timed modusPonens lean_a305 lean_s1384
    show let1092 from lean_s1385
  ))
have lean_s1384 : let1094 := by liftOrNToImp lean_s1383, 1
have lean_s1385 : let1093 := by timed impliesElim lean_s1384
have lean_s1386 : (Or let1092 let1091) := by permutateOr lean_s1385, [1, 0], (- 1)
let lean_s1387 := by R1 lean_s1382, lean_s1386, let370, [(- 1), (- 1)]
have lean_s1388 : let347 := by andElim lean_s1341, 13
have lean_s1389 : (Or let905 let43) := by timed iteElim1 lean_s1388
have lean_s1390 : (Or let43 let905) := by permutateOr lean_s1389, [1, 0], (- 1)
let lean_s1391 := by R2 lean_s1387, lean_s1390, let43, [(- 1), (- 1)]
have lean_s1392 : (Or let905 let221) := by timed @cnfAndPos [let345, let221] 1
have lean_s1393 : (Or let221 let905) := by permutateOr lean_s1392, [1, 0], (- 1)
have lean_s1394 : (Or let887 (Or let966 (Or let1122 let1090))) := by R2 lean_s1391, lean_s1393, let221, [(- 1), (- 1)]
have lean_s1395 : (Or let887 (Or let966 (Or let1122 let1088))) := by factor lean_s1394, (- 1)
have lean_s1396 : (Or let346 let25) := by timed iteElim2 lean_s1388
have lean_s1397 : (Or let25 let346) := by permutateOr lean_s1396, [1, 0], (- 1)
let lean_s1398 := by R2 lean_s1395, lean_s1397, let346, [(- 1), (- 1)]
have lean_s1399 : (Or let887 (Or let1122 (Or let966 (Or let1072 (Or let962 (Or let1042 let1143)))))) :=
  (scope (fun lean_a306 : let59 =>
    (scope (fun lean_a307 : let58 =>
      (scope (fun lean_a308 : let34 =>
        (scope (fun lean_a309 : let32 =>
          (scope (fun lean_a310 : let29 =>
            (scope (fun lean_a311 : let25 =>
              (scope (fun lean_a312 : let21 =>
                (scope (fun lean_a313 : let15 =>
                  have lean_s1399 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1400 : let468 := by timed eqResolve lean_a313 lean_s1399
                  let lean_s1401 := by timed And.intro lean_a310 lean_a307
                  let lean_s1402 := by timed And.intro lean_a311 lean_s1401
                  have lean_s1403 : let1135 := by timed And.intro lean_s1400 lean_s1402
                  have lean_s1404 : let1137 :=
                    (scope (fun lean_a306 : let468 =>
                      (scope (fun lean_a307 : let25 =>
                        (scope (fun lean_a308 : let29 =>
                          (scope (fun lean_a309 : let58 =>
                            have lean_s1404 : let1129 := by timed Eq.symm lean_a309
                            have lean_s1405 : let424 := by timed Eq.symm lean_a308
                            have lean_s1406 : let29 := by timed Eq.symm lean_s1405
                            let lean_s1407 := by timed Eq.trans lean_s1404 lean_s1406
                            have lean_s1408 : let403 := by timed Eq.symm lean_a307
                            have lean_s1409 : let25 := by timed Eq.symm lean_s1408
                            let lean_s1410 := by timed Eq.trans lean_s1407 lean_s1409
                            have lean_s1411 : let1055 := by timed Eq.symm lean_a306
                            have lean_s1412 : let468 := by timed Eq.symm lean_s1411
                            have lean_s1413 : let1058 := by timed flipCongrArg lean_s1412 [xx5fcount]
                            have lean_s1414 : let1011 := by timed Eq.trans lean_s1410 lean_s1413
                            show let1011 from lean_s1414
                    ))))))))
                  have lean_s1405 : let1136 := by liftOrNToImp lean_s1404, 4
                  have lean_s1406 : let1011 := by timed modusPonens lean_s1403 lean_s1405
                  let lean_s1407 := by timed And.intro lean_a308 lean_a306
                  have lean_s1408 : let1084 := by timed And.intro lean_a309 lean_s1407
                  have lean_s1409 : let1086 :=
                    (scope (fun lean_a306 : let32 =>
                      (scope (fun lean_a307 : let34 =>
                        (scope (fun lean_a308 : let59 =>
                          have lean_s1409 : let946 := by timed Eq.symm lean_a308
                          have lean_s1410 : let133 := by timed Eq.symm lean_a307
                          have lean_s1411 : let34 := by timed Eq.symm lean_s1410
                          let lean_s1412 := by timed Eq.trans lean_s1409 lean_s1411
                          have lean_s1413 : let1087 := by timed Eq.symm lean_a306
                          have lean_s1414 : let32 := by timed Eq.symm lean_s1413
                          have lean_s1415 : let644 := by timed Eq.trans lean_s1412 lean_s1414
                          show let644 from lean_s1415
                    ))))))
                  have lean_s1410 : let1085 := by liftOrNToImp lean_s1409, 3
                  have lean_s1411 : let644 := by timed modusPonens lean_s1408 lean_s1410
                  have lean_s1412 : let1083 :=
                    (scope (fun lean_a306 : let644 =>
                      have lean_s1412 : let643 := by timed eqResolve lean_a306 lean_r245
                      have lean_s1413 : let1078 := by timed Eq.symm lean_s1412
                      show let1078 from lean_s1413
                    ))
                  have lean_s1413 : let1082 := by liftOrNToImp lean_s1412, 1
                  have lean_s1414 : let1078 := by timed modusPonens lean_s1411 lean_s1413
                  have lean_s1415 : let1079 := by timed And.intro lean_s1400 lean_s1414
                  have lean_s1416 : let1081 :=
                    (scope (fun lean_a307 : let468 =>
                      (scope (fun lean_a308 : let1078 =>
                        have lean_s1416 : let643 := by timed Eq.symm lean_a308
                        have lean_s1417 : let1078 := by timed Eq.symm lean_s1416
                        have lean_s1418 : let1055 := by timed Eq.symm lean_a307
                        have lean_s1419 : let468 := by timed Eq.symm lean_s1418
                        have lean_s1420 : let1054 := by timed flipCongrArg lean_s1419 [sx5fcount]
                        have lean_s1421 : let988 := by timed Eq.trans lean_s1417 lean_s1420
                        show let988 from lean_s1421
                    ))))
                  have lean_s1417 : let1080 := by liftOrNToImp lean_s1416, 2
                  have lean_s1418 : let988 := by timed modusPonens lean_s1415 lean_s1417
                  let lean_s1419 := by timed And.intro lean_s1406 lean_s1418
                  have lean_s1420 : let1138 := by timed And.intro lean_a312 lean_s1419
                  show let1138 from lean_s1420
  ))))))))))))))))
have lean_s1400 : let1139 := by liftOrNToImp lean_s1399, 8
have lean_s1401 : (Eq let66 let66) := by timed rfl
let lean_s1402 := by timed flipCongrArg lean_s1401 [Implies]
have lean_s1403 : (Or let197 (Or let1015 let992)) :=
  (scope (fun lean_a308 : let21 =>
    (scope (fun lean_a309 : let1011 =>
      (scope (fun lean_a310 : let988 =>
        have lean_s1403 : let993 := by timed Eq.symm lean_a310
        have lean_s1404 : let995 :=
          (scope (fun lean_a309 : let993 =>
            have lean_s1404 : let251 := by timed trueElim lean_r74
            have lean_s1405 : let999 := by timed And.intro lean_s1404 lean_a309
            have lean_s1406 : let1000 := by arithMulPos [let19, let4, let63], 4
            have lean_s1407 : let998 := by timed modusPonens lean_s1405 lean_s1406
            have lean_s1408 : let1020 := by timed Eq.symm lean_a309
            have lean_s1409 : let1021 := by timed And.intro lean_s1404 lean_s1408
            have lean_s1410 : let1022 := by arithMulPos [let18, let4, let63], 4
            have lean_s1411 : let1019 := by timed modusPonens lean_s1409 lean_s1410
            have lean_s1412 : let718 := by timed trueElim lean_r265
            have lean_s1413 : let930 := by timed And.intro lean_s1412 lean_a308
            have lean_s1414 : let931 := by arithMulNeg [let20, let14, let302], 3
            have lean_s1415 : let929 := by timed modusPonens lean_s1413 lean_s1414
            have lean_s1416 : let1142 := by sumBounds [lean_s1407, lean_s1411, lean_s1415]
            let lean_s1417 := by timed congrHAdd lean_r264 lean_r97
            have lean_s1418 : (Eq let927 let582) := by timed congrHAdd lean_r35 lean_s1417
            have lean_s1419 : (Eq let927 let11) := by timed Eq.trans lean_s1418 lean_r203
            let lean_s1420 := by timed flipCongrArg lean_s1419 [LE.le]
            let lean_s1421 := by timed congrHAdd lean_r232 lean_r261
            have lean_s1422 : (Eq let1141 let65) := by timed congrHAdd lean_r232 lean_s1421
            have lean_s1423 : (Eq let1141 let9) := by timed Eq.trans lean_s1422 lean_r9
            have lean_s1424 : (Eq let1142 let226) := by timed congr lean_s1420 lean_s1423
            have lean_s1425 : (Eq let1142 False) := by timed Eq.trans lean_s1424 lean_r62
            show False from by timed eqResolve lean_s1416 lean_s1425
          ))
        have lean_s1405 : let994 := by liftOrNToNeg lean_s1404
        show False from by timed contradiction lean_s1403 lean_s1405
  ))))))
have lean_s1404 : (Not let1138) := by liftOrNToNeg lean_s1403
have lean_s1405 : let1140 := by timed falseIntro lean_s1404
have lean_s1406 : (Eq let1139 let68) := by timed congr lean_s1402 lean_s1405
have lean_s1407 : (Eq let1139 let67) := by timed Eq.trans lean_s1406 lean_r10
have lean_s1408 : let67 := by timed eqResolve lean_s1400 lean_s1407
have lean_s1409 : (Or let887 (Or let1122 let1074)) := by timed flipNotAnd lean_s1408 [let59, let58, let34, let32, let29, let25, let21, let15]
have lean_s1410 : (Or let197 (Or let887 (Or let966 (Or let1072 let1132)))) := by permutateOr lean_s1409, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1411 := by R2 lean_s1410, lean_s1359, let21, [(- 1), 0]
let lean_s1412 := by R2 lean_s1411, lean_s1344, let32, [(- 1), (- 1)]
let lean_s1413 := by R2 lean_s1412, lean_s1346, let371, [(- 1), (- 1)]
have lean_s1414 : (Or let887 (Or let1122 (Or let966 (Or let1044 (Or let962 let1049))))) :=
  (scope (fun lean_a309 : let59 =>
    (scope (fun lean_a310 : let58 =>
      (scope (fun lean_a311 : let34 =>
        (scope (fun lean_a312 : let44 =>
          (scope (fun lean_a313 : let29 =>
            (scope (fun lean_a314 : let25 =>
              (scope (fun lean_a315 : let21 =>
                (scope (fun lean_a316 : let15 =>
                  have lean_s1414 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1415 : let468 := by timed eqResolve lean_a316 lean_s1414
                  let lean_s1416 := by timed And.intro lean_a313 lean_a310
                  let lean_s1417 := by timed And.intro lean_a314 lean_s1416
                  have lean_s1418 : let1135 := by timed And.intro lean_s1415 lean_s1417
                  have lean_s1419 : let1137 :=
                    (scope (fun lean_a309 : let468 =>
                      (scope (fun lean_a310 : let25 =>
                        (scope (fun lean_a311 : let29 =>
                          (scope (fun lean_a312 : let58 =>
                            have lean_s1419 : let1129 := by timed Eq.symm lean_a312
                            have lean_s1420 : let424 := by timed Eq.symm lean_a311
                            have lean_s1421 : let29 := by timed Eq.symm lean_s1420
                            let lean_s1422 := by timed Eq.trans lean_s1419 lean_s1421
                            have lean_s1423 : let403 := by timed Eq.symm lean_a310
                            have lean_s1424 : let25 := by timed Eq.symm lean_s1423
                            let lean_s1425 := by timed Eq.trans lean_s1422 lean_s1424
                            have lean_s1426 : let1055 := by timed Eq.symm lean_a309
                            have lean_s1427 : let468 := by timed Eq.symm lean_s1426
                            have lean_s1428 : let1058 := by timed flipCongrArg lean_s1427 [xx5fcount]
                            have lean_s1429 : let1011 := by timed Eq.trans lean_s1425 lean_s1428
                            show let1011 from lean_s1429
                    ))))))))
                  have lean_s1420 : let1136 := by liftOrNToImp lean_s1419, 4
                  have lean_s1421 : let1011 := by timed modusPonens lean_s1418 lean_s1420
                  let lean_s1422 := by timed And.intro lean_a311 lean_a309
                  let lean_s1423 := by timed And.intro lean_a312 lean_s1422
                  have lean_s1424 : let1050 := by timed And.intro lean_s1415 lean_s1423
                  have lean_s1425 : let1053 :=
                    (scope (fun lean_a309 : let468 =>
                      (scope (fun lean_a310 : let44 =>
                        (scope (fun lean_a311 : let34 =>
                          (scope (fun lean_a312 : let59 =>
                            have lean_s1425 : let946 := by timed Eq.symm lean_a312
                            have lean_s1426 : let133 := by timed Eq.symm lean_a311
                            have lean_s1427 : let34 := by timed Eq.symm lean_s1426
                            let lean_s1428 := by timed Eq.trans lean_s1425 lean_s1427
                            have lean_s1429 : let173 := by timed Eq.symm lean_a310
                            have lean_s1430 : let44 := by timed Eq.symm lean_s1429
                            let lean_s1431 := by timed Eq.trans lean_s1428 lean_s1430
                            have lean_s1432 : let1055 := by timed Eq.symm lean_a309
                            have lean_s1433 : let468 := by timed Eq.symm lean_s1432
                            have lean_s1434 : let1054 := by timed flipCongrArg lean_s1433 [sx5fcount]
                            have lean_s1435 : let915 := by timed Eq.trans lean_s1431 lean_s1434
                            show let915 from lean_s1435
                    ))))))))
                  have lean_s1426 : let1051 := by liftOrNToImp lean_s1425, 4
                  have lean_s1427 : let915 := by timed modusPonens lean_s1424 lean_s1426
                  let lean_s1428 := by timed And.intro lean_s1421 lean_s1427
                  have lean_s1429 : let1012 := by timed And.intro lean_a315 lean_s1428
                  show let1012 from lean_s1429
  ))))))))))))))))
have lean_s1415 : let1134 := by liftOrNToImp lean_s1414, 8
have lean_s1416 : (Eq let71 let71) := by timed rfl
let lean_s1417 := by timed flipCongrArg lean_s1416 [Implies]
have lean_s1418 : (Or let197 (Or let1015 let920)) :=
  (scope (fun lean_a309 : let21 =>
    (scope (fun lean_a310 : let1011 =>
      (scope (fun lean_a311 : let915 =>
        have lean_s1418 : let922 := by timed Eq.symm lean_a311
        have lean_s1419 : let924 :=
          (scope (fun lean_a309 : let922 =>
            have lean_s1419 : let251 := by timed trueElim lean_r74
            have lean_s1420 : let937 := by timed And.intro lean_s1419 lean_a309
            have lean_s1421 : let938 := by arithMulPos [let19, let27, let63], 4
            have lean_s1422 : let936 := by timed modusPonens lean_s1420 lean_s1421
            have lean_s1423 : let1020 := by timed Eq.symm lean_a310
            have lean_s1424 : let1021 := by timed And.intro lean_s1419 lean_s1423
            have lean_s1425 : let1022 := by arithMulPos [let18, let4, let63], 4
            have lean_s1426 : let1019 := by timed modusPonens lean_s1424 lean_s1425
            have lean_s1427 : let718 := by timed trueElim lean_r265
            have lean_s1428 : let930 := by timed And.intro lean_s1427 lean_a309
            have lean_s1429 : let931 := by arithMulNeg [let20, let14, let302], 3
            have lean_s1430 : let929 := by timed modusPonens lean_s1428 lean_s1429
            have lean_s1431 : let1018 := by sumBounds [lean_s1422, lean_s1426, lean_s1430]
            let lean_s1432 := by timed congrHAdd lean_r264 lean_r97
            have lean_s1433 : (Eq let927 let582) := by timed congrHAdd lean_r35 lean_s1432
            have lean_s1434 : (Eq let927 let11) := by timed Eq.trans lean_s1433 lean_r203
            let lean_s1435 := by timed flipCongrArg lean_s1434 [LE.le]
            let lean_s1436 := by timed congrHAdd lean_r232 lean_r261
            have lean_s1437 : (Eq let1017 let467) := by timed congrHAdd lean_r197 lean_s1436
            have lean_s1438 : (Eq let1017 let466) := by timed Eq.trans lean_s1437 lean_r127
            have lean_s1439 : (Eq let1018 let482) := by timed congr lean_s1435 lean_s1438
            have lean_s1440 : (Eq let1018 False) := by timed Eq.trans lean_s1439 lean_r138
            show False from by timed eqResolve lean_s1431 lean_s1440
          ))
        have lean_s1420 : let923 := by liftOrNToNeg lean_s1419
        show False from by timed contradiction lean_s1418 lean_s1420
  ))))))
have lean_s1419 : (Not let1012) := by liftOrNToNeg lean_s1418
have lean_s1420 : let1014 := by timed falseIntro lean_s1419
have lean_s1421 : (Eq let1134 let73) := by timed congr lean_s1417 lean_s1420
have lean_s1422 : (Eq let1134 let72) := by timed Eq.trans lean_s1421 lean_r11
have lean_s1423 : let72 := by timed eqResolve lean_s1415 lean_s1422
have lean_s1424 : (Or let887 (Or let1122 let1066)) := by timed flipNotAnd lean_s1423 [let59, let58, let34, let44, let29, let25, let21, let15]
have lean_s1425 : (Or let197 (Or let887 (Or let966 (Or let1044 let1132)))) := by permutateOr lean_s1424, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1426 := by R1 lean_s1413, lean_s1425, let44, [(- 1), (- 1)]
have lean_s1427 : (Or let887 (Or let966 (Or let1122 (Or let962 (Or let1042 (Or let286 let1133)))))) := by R2 lean_s1426, lean_s1359, let21, [(- 1), 0]
have lean_s1428 : let1133 := by factor lean_s1427, (- 1)
have lean_s1429 : let350 := by andElim lean_s1341, 12
have lean_s1430 : (Or let349 let29) := by timed iteElim2 lean_s1429
have lean_s1431 : (Or let29 let349) := by permutateOr lean_s1430, [1, 0], (- 1)
let lean_s1432 := by R2 lean_s1428, lean_s1431, let29, [(- 1), (- 1)]
have lean_s1433 : (Or let903 let148) := by timed @cnfAndPos [let148, let348] 0
have lean_s1434 : (Or let148 let903) := by permutateOr lean_s1433, [1, 0], (- 1)
let lean_s1435 := by R1 lean_s1432, lean_s1434, let349, [(- 1), (- 1)]
have lean_s1436 : (Or let1117 (Or let1115 let900)) := by timed cnfAndNeg [let352, let148]
have lean_s1437 : let1116 :=
  (scope (fun lean_a309 : let352 =>
    (scope (fun lean_a310 : let148 =>
      have lean_s1437 : let1117 := by timed And.intro lean_a309 lean_a310
      have lean_s1438 : let1116 :=
        (scope (fun lean_a311 : let352 =>
          (scope (fun lean_a312 : let148 =>
            have lean_s1438 : let149 := by timed Eq.symm lean_a312
            have lean_s1439 : let148 := by timed Eq.symm lean_s1438
            have lean_s1440 : let512 := by timed Eq.symm lean_a311
            have lean_s1441 : (Eq let147 let236) := by timed Eq.trans lean_s1439 lean_s1440
            let lean_s1442 := by timed flipCongrArg lean_s1441 [Eq]
            have lean_s1443 : let183 := by timed rfl
            have lean_s1444 : (Eq let351 let393) := by timed congr lean_s1442 lean_s1443
            let lean_s1445 := by timed flipCongrArg lean_a311 [Eq]
            have lean_s1446 : (Eq let393 let88) := by timed congr lean_s1445 lean_s1443
            have lean_s1447 : (Eq let599 let712) := by timed flipCongrArg lean_r14 [Not]
            have lean_s1448 : (Eq let599 True) := by timed Eq.trans lean_s1447 lean_r259
            have lean_s1449 : (Eq let89 True) := by timed Eq.trans lean_r211 lean_s1448
            have lean_s1450 : let89 := by timed trueElim lean_s1449
            have lean_s1451 : (Eq let393 False) := by timed Eq.trans lean_s1446 lean_s1450
            have lean_s1452 : let1119 := by timed Eq.trans lean_s1444 lean_s1451
            have lean_s1453 : let1114 := by timed falseElim lean_s1452
            show let1114 from lean_s1453
        ))))
      have lean_s1439 : let1118 := by liftOrNToImp lean_s1438, 2
      have lean_s1440 : let1114 := by timed modusPonens lean_s1437 lean_s1439
      show let1114 from lean_s1440
  ))))
have lean_s1438 : let1118 := by liftOrNToImp lean_s1437, 2
have lean_s1439 : (Or (Not let1117) let1114) := by timed impliesElim lean_s1438
have lean_s1440 : let1116 := by R1 lean_s1436, lean_s1439, let1117, [(- 1), (- 1)]
let lean_s1441 := by R1 lean_s1435, lean_s1440, let148, [(- 1), (- 1)]
have lean_s1442 : (Or let887 (Or let908 (Or let901 let1112))) :=
  (scope (fun lean_a311 : let59 =>
    (scope (fun lean_a312 : let36 =>
      (scope (fun lean_a313 : let175 =>
        (scope (fun lean_a314 : let44 =>
          (scope (fun lean_a315 : let29 =>
            (scope (fun lean_a316 : let25 =>
              (scope (fun lean_a317 : let21 =>
                (scope (fun lean_a318 : let15 =>
                  have lean_s1442 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1443 : let468 := by timed eqResolve lean_a318 lean_s1442
                  let lean_s1444 := by timed And.intro lean_a315 lean_a312
                  let lean_s1445 := by timed And.intro lean_a316 lean_s1444
                  have lean_s1446 : let1069 := by timed And.intro lean_s1443 lean_s1445
                  have lean_s1447 : let1071 :=
                    (scope (fun lean_a312 : let468 =>
                      (scope (fun lean_a313 : let25 =>
                        (scope (fun lean_a314 : let29 =>
                          (scope (fun lean_a315 : let36 =>
                            have lean_s1447 : let953 := by timed Eq.symm lean_a315
                            have lean_s1448 : let424 := by timed Eq.symm lean_a314
                            have lean_s1449 : let29 := by timed Eq.symm lean_s1448
                            let lean_s1450 := by timed Eq.trans lean_s1447 lean_s1449
                            have lean_s1451 : let403 := by timed Eq.symm lean_a313
                            have lean_s1452 : let25 := by timed Eq.symm lean_s1451
                            let lean_s1453 := by timed Eq.trans lean_s1450 lean_s1452
                            have lean_s1454 : let1055 := by timed Eq.symm lean_a312
                            have lean_s1455 : let468 := by timed Eq.symm lean_s1454
                            have lean_s1456 : let1058 := by timed flipCongrArg lean_s1455 [xx5fcount]
                            have lean_s1457 : let916 := by timed Eq.trans lean_s1453 lean_s1456
                            show let916 from lean_s1457
                    ))))))))
                  have lean_s1448 : let1070 := by liftOrNToImp lean_s1447, 4
                  have lean_s1449 : let916 := by timed modusPonens lean_s1446 lean_s1448
                  have lean_s1450 : let1007 := by timed And.intro lean_a313 lean_a311
                  have lean_s1451 : let1009 :=
                    (scope (fun lean_a312 : let175 =>
                      (scope (fun lean_a313 : let59 =>
                        have lean_s1451 : let946 := by timed Eq.symm lean_a313
                        have lean_s1452 : (Eq let174 let33) := by timed Eq.symm lean_a312
                        have lean_s1453 : let175 := by timed Eq.symm lean_s1452
                        have lean_s1454 : let597 := by timed Eq.trans lean_s1451 lean_s1453
                        show let597 from lean_s1454
                    ))))
                  have lean_s1452 : let1008 := by liftOrNToImp lean_s1451, 2
                  have lean_s1453 : let597 := by timed modusPonens lean_s1450 lean_s1452
                  have lean_s1454 : let1006 :=
                    (scope (fun lean_a312 : let597 =>
                      have lean_s1454 : let596 := by timed eqResolve lean_a312 lean_r209
                      have lean_s1455 : let1002 := by timed Eq.symm lean_s1454
                      show let1002 from lean_s1455
                    ))
                  have lean_s1455 : let1005 := by liftOrNToImp lean_s1454, 1
                  have lean_s1456 : let1002 := by timed modusPonens lean_s1453 lean_s1455
                  let lean_s1457 := by timed And.intro lean_a314 lean_s1456
                  have lean_s1458 : let1113 := by timed And.intro lean_s1443 lean_s1457
                  have lean_s1459 : (Or let1052 (Or let1044 let1004)) :=
                    (scope (fun lean_a313 : let468 =>
                      (scope (fun lean_a314 : let44 =>
                        (scope (fun lean_a315 : let1002 =>
                          have lean_s1459 : let596 := by timed Eq.symm lean_a315
                          have lean_s1460 : let1002 := by timed Eq.symm lean_s1459
                          have lean_s1461 : let173 := by timed Eq.symm lean_a314
                          have lean_s1462 : let44 := by timed Eq.symm lean_s1461
                          let lean_s1463 := by timed Eq.trans lean_s1460 lean_s1462
                          have lean_s1464 : let1055 := by timed Eq.symm lean_a313
                          have lean_s1465 : let468 := by timed Eq.symm lean_s1464
                          have lean_s1466 : let1054 := by timed flipCongrArg lean_s1465 [sx5fcount]
                          have lean_s1467 : let988 := by timed Eq.trans lean_s1463 lean_s1466
                          show let988 from lean_s1467
                    ))))))
                  have lean_s1460 : (Implies let1113 let988) := by liftOrNToImp lean_s1459, 3
                  have lean_s1461 : let988 := by timed modusPonens lean_s1458 lean_s1460
                  let lean_s1462 := by timed And.intro lean_s1449 lean_s1461
                  have lean_s1463 : let989 := by timed And.intro lean_a317 lean_s1462
                  show let989 from lean_s1463
  ))))))))))))))))
have lean_s1443 : let1111 := by liftOrNToImp lean_s1442, 8
have lean_s1444 : (Eq let176 let176) := by timed rfl
let lean_s1445 := by timed flipCongrArg lean_s1444 [Implies]
have lean_s1446 : let991 := by timed falseIntro lean_s1352
have lean_s1447 : (Eq let1111 let178) := by timed congr lean_s1445 lean_s1446
have lean_s1448 : (Eq let1111 let177) := by timed Eq.trans lean_s1447 lean_r46
have lean_s1449 : let177 := by timed eqResolve lean_s1443 lean_s1448
have lean_s1450 : (Or let887 (Or let908 (Or let901 let1065))) := by timed flipNotAnd lean_s1449 [let59, let36, let175, let44, let29, let25, let21, let15]
have lean_s1451 : (Or let197 (Or let887 (Or let901 let1062))) := by permutateOr lean_s1450, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1452 := by R2 lean_s1451, lean_s1359, let21, [(- 1), 0]
let lean_s1453 := by R2 lean_s1452, lean_s1397, let25, [(- 1), (- 1)]
let lean_s1454 := by R2 lean_s1453, lean_s1346, let44, [(- 1), (- 1)]
have lean_s1455 : (Or let905 let345) := by timed @cnfAndPos [let345, let221] 0
have lean_s1456 : (Or let345 let905) := by permutateOr lean_s1455, [1, 0], (- 1)
let lean_s1457 := by R1 lean_s1454, lean_s1456, let346, [(- 1), (- 1)]
have lean_s1458 : (Or let904 let345) := by timed @cnfAndPos [let345, let370] 0
have lean_s1459 : (Or let345 let904) := by permutateOr lean_s1458, [1, 0], (- 1)
let lean_s1460 := by R1 lean_s1457, lean_s1459, let371, [(- 1), (- 1)]
let lean_s1461 := by R2 lean_s1460, lean_s1431, let29, [(- 1), (- 1)]
have lean_s1462 : (Or let903 let348) := by timed @cnfAndPos [let148, let348] 1
have lean_s1463 : (Or let348 let903) := by permutateOr lean_s1462, [1, 0], (- 1)
have lean_s1464 : (Or let887 (Or let901 (Or let908 (Or let286 let902)))) := by R1 lean_s1461, lean_s1463, let349, [(- 1), (- 1)]
have lean_s1465 : (Or let887 (Or let901 (Or let908 (Or let286 let899)))) := by factor lean_s1464, (- 1)
have lean_s1466 : let896 :=
  (scope (fun lean_a314 : let164 =>
    have lean_s1466 : let896 :=
      (scope (fun lean_a315 : let164 =>
        have lean_s1466 : let165 := by timed Eq.symm lean_a315
        have lean_s1467 : let164 := by timed Eq.symm lean_s1466
        let lean_s1468 := by timed flipCongrArg lean_s1467 [Eq]
        have lean_s1469 : let168 := by timed rfl
        have lean_s1470 : (Eq let345 let156) := by timed congr lean_s1468 lean_s1469
        have lean_s1471 : (Eq let157 let712) := by timed flipCongrArg lean_r38 [Not]
        have lean_s1472 : (Eq let157 True) := by timed Eq.trans lean_s1471 lean_r259
        have lean_s1473 : (Eq let158 True) := by timed Eq.trans lean_r36 lean_s1472
        have lean_s1474 : let158 := by timed trueElim lean_s1473
        have lean_s1475 : let898 := by timed Eq.trans lean_s1470 lean_s1474
        have lean_s1476 : let895 := by timed falseElim lean_s1475
        show let895 from lean_s1476
      ))
    have lean_s1467 : let897 := by liftOrNToImp lean_s1466, 1
    have lean_s1468 : let895 := by timed modusPonens lean_a314 lean_s1467
    show let895 from lean_s1468
  ))
have lean_s1467 : let897 := by liftOrNToImp lean_s1466, 1
have lean_s1468 : let896 := by timed impliesElim lean_s1467
have lean_s1469 : (Or let895 let890) := by permutateOr lean_s1468, [1, 0], (- 1)
let lean_s1470 := by R1 lean_s1465, lean_s1469, let345, [(- 1), (- 1)]
have lean_s1471 : let893 :=
  (scope (fun lean_a315 : let348 =>
    have lean_s1471 : let893 :=
      (scope (fun lean_a316 : let348 =>
        have lean_s1471 : let498 := by timed Eq.symm lean_a316
        have lean_s1472 : let348 := by timed Eq.symm lean_s1471
        let lean_s1473 := by timed flipCongrArg lean_s1472 [Eq]
        have lean_s1474 : let406 := by timed rfl
        have lean_s1475 : (Eq let164 let179) := by timed congr lean_s1473 lean_s1474
        have lean_s1476 : (Eq let577 let712) := by timed flipCongrArg lean_r47 [Not]
        have lean_s1477 : (Eq let577 True) := by timed Eq.trans lean_s1476 lean_r259
        have lean_s1478 : (Eq let180 True) := by timed Eq.trans lean_r200 lean_s1477
        have lean_s1479 : let180 := by timed trueElim lean_s1478
        have lean_s1480 : (Eq let164 False) := by timed Eq.trans lean_s1475 lean_s1479
        have lean_s1481 : let890 := by timed falseElim lean_s1480
        show let890 from lean_s1481
      ))
    have lean_s1472 : let894 := by liftOrNToImp lean_s1471, 1
    have lean_s1473 : let890 := by timed modusPonens lean_a315 lean_s1472
    show let890 from lean_s1473
  ))
have lean_s1472 : let894 := by liftOrNToImp lean_s1471, 1
have lean_s1473 : let893 := by timed impliesElim lean_s1472
have lean_s1474 : (Or let890 let892) := by permutateOr lean_s1473, [1, 0], (- 1)
let lean_s1475 := by R1 lean_s1470, lean_s1474, let348, [(- 1), (- 1)]
have lean_s1476 : let374 := by andElim lean_s1341, 6
have lean_s1477 : (Or let888 let175) := by timed iteElim1 lean_s1476
have lean_s1478 : (Or let175 let888) := by permutateOr lean_s1477, [1, 0], (- 1)
have lean_s1479 : (Or let887 (Or let908 (Or let286 (Or let890 let891)))) := by R2 lean_s1475, lean_s1478, let175, [(- 1), (- 1)]
have lean_s1480 : (Or let887 (Or let908 (Or let286 let891))) := by factor lean_s1479, (- 1)
have lean_s1481 : (Or let888 let164) := by timed @cnfAndPos [let148, let164] 1
have lean_s1482 : (Or let164 let888) := by permutateOr lean_s1481, [1, 0], (- 1)
have lean_s1483 : (Or let887 (Or let908 (Or let286 let889))) := by R2 lean_s1480, lean_s1482, let164, [(- 1), (- 1)]
have lean_s1484 : (Or let887 (Or let908 (Or let286 let888))) := by factor lean_s1483, (- 1)
have lean_s1485 : (Or let373 let34) := by timed iteElim2 lean_s1476
have lean_s1486 : (Or let34 let373) := by permutateOr lean_s1485, [1, 0], (- 1)
let lean_s1487 := by R2 lean_s1484, lean_s1486, let373, [(- 1), (- 1)]
have lean_s1488 : (Or let887 (Or let908 (Or let966 (Or let1044 (Or let962 (Or let1095 let1048)))))) :=
  (scope (fun lean_a316 : let59 =>
    (scope (fun lean_a317 : let36 =>
      (scope (fun lean_a318 : let34 =>
        (scope (fun lean_a319 : let44 =>
          (scope (fun lean_a320 : let29 =>
            (scope (fun lean_a321 : let43 =>
              (scope (fun lean_a322 : let21 =>
                (scope (fun lean_a323 : let15 =>
                  have lean_s1488 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1489 : let468 := by timed eqResolve lean_a323 lean_s1488
                  let lean_s1490 := by timed And.intro lean_a320 lean_a317
                  have lean_s1491 : let1107 := by timed And.intro lean_a321 lean_s1490
                  have lean_s1492 : let1109 :=
                    (scope (fun lean_a316 : let43 =>
                      (scope (fun lean_a317 : let29 =>
                        (scope (fun lean_a318 : let36 =>
                          have lean_s1492 : let953 := by timed Eq.symm lean_a318
                          have lean_s1493 : let424 := by timed Eq.symm lean_a317
                          have lean_s1494 : let29 := by timed Eq.symm lean_s1493
                          let lean_s1495 := by timed Eq.trans lean_s1492 lean_s1494
                          have lean_s1496 : let1110 := by timed Eq.symm lean_a316
                          have lean_s1497 : let43 := by timed Eq.symm lean_s1496
                          have lean_s1498 : let182 := by timed Eq.trans lean_s1495 lean_s1497
                          show let182 from lean_s1498
                    ))))))
                  have lean_s1493 : let1108 := by liftOrNToImp lean_s1492, 3
                  have lean_s1494 : let182 := by timed modusPonens lean_s1491 lean_s1493
                  have lean_s1495 : let1106 :=
                    (scope (fun lean_a316 : let182 =>
                      have lean_s1495 : let181 := by timed eqResolve lean_a316 lean_r48
                      have lean_s1496 : let1101 := by timed Eq.symm lean_s1495
                      show let1101 from lean_s1496
                    ))
                  have lean_s1496 : let1105 := by liftOrNToImp lean_s1495, 1
                  have lean_s1497 : let1101 := by timed modusPonens lean_s1494 lean_s1496
                  have lean_s1498 : let1102 := by timed And.intro lean_s1489 lean_s1497
                  have lean_s1499 : let1104 :=
                    (scope (fun lean_a317 : let468 =>
                      (scope (fun lean_a318 : let1101 =>
                        have lean_s1499 : let181 := by timed Eq.symm lean_a318
                        have lean_s1500 : let1101 := by timed Eq.symm lean_s1499
                        have lean_s1501 : let1055 := by timed Eq.symm lean_a317
                        have lean_s1502 : let468 := by timed Eq.symm lean_s1501
                        have lean_s1503 : let1058 := by timed flipCongrArg lean_s1502 [xx5fcount]
                        have lean_s1504 : let1011 := by timed Eq.trans lean_s1500 lean_s1503
                        show let1011 from lean_s1504
                    ))))
                  have lean_s1500 : let1103 := by liftOrNToImp lean_s1499, 2
                  have lean_s1501 : let1011 := by timed modusPonens lean_s1498 lean_s1500
                  let lean_s1502 := by timed And.intro lean_a318 lean_a316
                  let lean_s1503 := by timed And.intro lean_a319 lean_s1502
                  have lean_s1504 : let1050 := by timed And.intro lean_s1489 lean_s1503
                  have lean_s1505 : let1053 :=
                    (scope (fun lean_a318 : let468 =>
                      (scope (fun lean_a319 : let44 =>
                        (scope (fun lean_a320 : let34 =>
                          (scope (fun lean_a321 : let59 =>
                            have lean_s1505 : let946 := by timed Eq.symm lean_a321
                            have lean_s1506 : let133 := by timed Eq.symm lean_a320
                            have lean_s1507 : let34 := by timed Eq.symm lean_s1506
                            let lean_s1508 := by timed Eq.trans lean_s1505 lean_s1507
                            have lean_s1509 : let173 := by timed Eq.symm lean_a319
                            have lean_s1510 : let44 := by timed Eq.symm lean_s1509
                            let lean_s1511 := by timed Eq.trans lean_s1508 lean_s1510
                            have lean_s1512 : let1055 := by timed Eq.symm lean_a318
                            have lean_s1513 : let468 := by timed Eq.symm lean_s1512
                            have lean_s1514 : let1054 := by timed flipCongrArg lean_s1513 [sx5fcount]
                            have lean_s1515 : let915 := by timed Eq.trans lean_s1511 lean_s1514
                            show let915 from lean_s1515
                    ))))))))
                  have lean_s1506 : let1051 := by liftOrNToImp lean_s1505, 4
                  have lean_s1507 : let915 := by timed modusPonens lean_s1504 lean_s1506
                  let lean_s1508 := by timed And.intro lean_s1501 lean_s1507
                  have lean_s1509 : let1012 := by timed And.intro lean_a322 lean_s1508
                  show let1012 from lean_s1509
  ))))))))))))))))
have lean_s1489 : let1100 := by liftOrNToImp lean_s1488, 8
have lean_s1490 : (Eq let199 let199) := by timed rfl
let lean_s1491 := by timed flipCongrArg lean_s1490 [Implies]
have lean_s1492 : let1014 := by timed falseIntro lean_s1419
have lean_s1493 : (Eq let1100 let201) := by timed congr lean_s1491 lean_s1492
have lean_s1494 : (Eq let1100 let200) := by timed Eq.trans lean_s1493 lean_r56
have lean_s1495 : let200 := by timed eqResolve lean_s1489 lean_s1494
have lean_s1496 : (Or let887 let1099) := by timed flipNotAnd lean_s1495 [let59, let36, let34, let44, let29, let43, let21, let15]
have lean_s1497 : (Or let197 (Or let887 let1097)) := by permutateOr lean_s1496, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1498 := by R2 lean_s1497, lean_s1359, let21, [(- 1), 0]
let lean_s1499 := by R2 lean_s1498, lean_s1346, let44, [(- 1), (- 1)]
let lean_s1500 := by R1 lean_s1499, lean_s1381, let371, [(- 1), (- 1)]
let lean_s1501 := by R1 lean_s1500, lean_s1386, let370, [(- 1), (- 1)]
let lean_s1502 := by R2 lean_s1501, lean_s1390, let43, [(- 1), (- 1)]
have lean_s1503 : (Or let887 (Or let966 (Or let908 let1090))) := by R2 lean_s1502, lean_s1393, let221, [(- 1), (- 1)]
have lean_s1504 : (Or let887 (Or let966 (Or let908 let1088))) := by factor lean_s1503, (- 1)
let lean_s1505 := by R2 lean_s1504, lean_s1397, let346, [(- 1), (- 1)]
have lean_s1506 : (Or let887 (Or let908 (Or let966 (Or let1072 let1077)))) :=
  (scope (fun lean_a318 : let59 =>
    (scope (fun lean_a319 : let36 =>
      (scope (fun lean_a320 : let34 =>
        (scope (fun lean_a321 : let32 =>
          (scope (fun lean_a322 : let29 =>
            (scope (fun lean_a323 : let25 =>
              (scope (fun lean_a324 : let21 =>
                (scope (fun lean_a325 : let15 =>
                  have lean_s1506 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1507 : let468 := by timed eqResolve lean_a325 lean_s1506
                  let lean_s1508 := by timed And.intro lean_a322 lean_a319
                  let lean_s1509 := by timed And.intro lean_a323 lean_s1508
                  have lean_s1510 : let1069 := by timed And.intro lean_s1507 lean_s1509
                  have lean_s1511 : let1071 :=
                    (scope (fun lean_a318 : let468 =>
                      (scope (fun lean_a319 : let25 =>
                        (scope (fun lean_a320 : let29 =>
                          (scope (fun lean_a321 : let36 =>
                            have lean_s1511 : let953 := by timed Eq.symm lean_a321
                            have lean_s1512 : let424 := by timed Eq.symm lean_a320
                            have lean_s1513 : let29 := by timed Eq.symm lean_s1512
                            let lean_s1514 := by timed Eq.trans lean_s1511 lean_s1513
                            have lean_s1515 : let403 := by timed Eq.symm lean_a319
                            have lean_s1516 : let25 := by timed Eq.symm lean_s1515
                            let lean_s1517 := by timed Eq.trans lean_s1514 lean_s1516
                            have lean_s1518 : let1055 := by timed Eq.symm lean_a318
                            have lean_s1519 : let468 := by timed Eq.symm lean_s1518
                            have lean_s1520 : let1058 := by timed flipCongrArg lean_s1519 [xx5fcount]
                            have lean_s1521 : let916 := by timed Eq.trans lean_s1517 lean_s1520
                            show let916 from lean_s1521
                    ))))))))
                  have lean_s1512 : let1070 := by liftOrNToImp lean_s1511, 4
                  have lean_s1513 : let916 := by timed modusPonens lean_s1510 lean_s1512
                  let lean_s1514 := by timed And.intro lean_a320 lean_a318
                  have lean_s1515 : let1084 := by timed And.intro lean_a321 lean_s1514
                  have lean_s1516 : let1086 :=
                    (scope (fun lean_a318 : let32 =>
                      (scope (fun lean_a319 : let34 =>
                        (scope (fun lean_a320 : let59 =>
                          have lean_s1516 : let946 := by timed Eq.symm lean_a320
                          have lean_s1517 : let133 := by timed Eq.symm lean_a319
                          have lean_s1518 : let34 := by timed Eq.symm lean_s1517
                          let lean_s1519 := by timed Eq.trans lean_s1516 lean_s1518
                          have lean_s1520 : let1087 := by timed Eq.symm lean_a318
                          have lean_s1521 : let32 := by timed Eq.symm lean_s1520
                          have lean_s1522 : let644 := by timed Eq.trans lean_s1519 lean_s1521
                          show let644 from lean_s1522
                    ))))))
                  have lean_s1517 : let1085 := by liftOrNToImp lean_s1516, 3
                  have lean_s1518 : let644 := by timed modusPonens lean_s1515 lean_s1517
                  have lean_s1519 : let1083 :=
                    (scope (fun lean_a318 : let644 =>
                      have lean_s1519 : let643 := by timed eqResolve lean_a318 lean_r245
                      have lean_s1520 : let1078 := by timed Eq.symm lean_s1519
                      show let1078 from lean_s1520
                    ))
                  have lean_s1520 : let1082 := by liftOrNToImp lean_s1519, 1
                  have lean_s1521 : let1078 := by timed modusPonens lean_s1518 lean_s1520
                  have lean_s1522 : let1079 := by timed And.intro lean_s1507 lean_s1521
                  have lean_s1523 : let1081 :=
                    (scope (fun lean_a318 : let468 =>
                      (scope (fun lean_a319 : let1078 =>
                        have lean_s1523 : let643 := by timed Eq.symm lean_a319
                        have lean_s1524 : let1078 := by timed Eq.symm lean_s1523
                        have lean_s1525 : let1055 := by timed Eq.symm lean_a318
                        have lean_s1526 : let468 := by timed Eq.symm lean_s1525
                        have lean_s1527 : let1054 := by timed flipCongrArg lean_s1526 [sx5fcount]
                        have lean_s1528 : let988 := by timed Eq.trans lean_s1524 lean_s1527
                        show let988 from lean_s1528
                    ))))
                  have lean_s1524 : let1080 := by liftOrNToImp lean_s1523, 2
                  have lean_s1525 : let988 := by timed modusPonens lean_s1522 lean_s1524
                  let lean_s1526 := by timed And.intro lean_s1513 lean_s1525
                  have lean_s1527 : let989 := by timed And.intro lean_a324 lean_s1526
                  show let989 from lean_s1527
  ))))))))))))))))
have lean_s1507 : let1076 := by liftOrNToImp lean_s1506, 8
have lean_s1508 : (Eq let626 let626) := by timed rfl
let lean_s1509 := by timed flipCongrArg lean_s1508 [Implies]
have lean_s1510 : let991 := by timed falseIntro lean_s1352
have lean_s1511 : (Eq let1076 let628) := by timed congr lean_s1509 lean_s1510
have lean_s1512 : (Eq let1076 let627) := by timed Eq.trans lean_s1511 lean_r234
have lean_s1513 : let627 := by timed eqResolve lean_s1507 lean_s1512
have lean_s1514 : (Or let887 let1075) := by timed flipNotAnd lean_s1513 [let59, let36, let34, let32, let29, let25, let21, let15]
have lean_s1515 : (Or let197 (Or let887 let1073)) := by permutateOr lean_s1514, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1516 := by R2 lean_s1515, lean_s1359, let21, [(- 1), 0]
let lean_s1517 := by R2 lean_s1516, lean_s1344, let32, [(- 1), (- 1)]
let lean_s1518 := by R2 lean_s1517, lean_s1346, let371, [(- 1), (- 1)]
have lean_s1519 : (Or let887 (Or let908 (Or let966 (Or let1044 (Or let962 (Or let1042 (Or let197 (Or let286 let917)))))))) :=
  (scope (fun lean_a318 : let59 =>
    (scope (fun lean_a319 : let36 =>
      (scope (fun lean_a320 : let34 =>
        (scope (fun lean_a321 : let44 =>
          (scope (fun lean_a322 : let29 =>
            (scope (fun lean_a323 : let25 =>
              (scope (fun lean_a324 : let21 =>
                (scope (fun lean_a325 : let15 =>
                  have lean_s1519 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1520 : let468 := by timed eqResolve lean_a325 lean_s1519
                  let lean_s1521 := by timed And.intro lean_a322 lean_a319
                  let lean_s1522 := by timed And.intro lean_a323 lean_s1521
                  have lean_s1523 : let1069 := by timed And.intro lean_s1520 lean_s1522
                  have lean_s1524 : let1071 :=
                    (scope (fun lean_a318 : let468 =>
                      (scope (fun lean_a319 : let25 =>
                        (scope (fun lean_a320 : let29 =>
                          (scope (fun lean_a321 : let36 =>
                            have lean_s1524 : let953 := by timed Eq.symm lean_a321
                            have lean_s1525 : let424 := by timed Eq.symm lean_a320
                            have lean_s1526 : let29 := by timed Eq.symm lean_s1525
                            let lean_s1527 := by timed Eq.trans lean_s1524 lean_s1526
                            have lean_s1528 : let403 := by timed Eq.symm lean_a319
                            have lean_s1529 : let25 := by timed Eq.symm lean_s1528
                            let lean_s1530 := by timed Eq.trans lean_s1527 lean_s1529
                            have lean_s1531 : let1055 := by timed Eq.symm lean_a318
                            have lean_s1532 : let468 := by timed Eq.symm lean_s1531
                            have lean_s1533 : let1058 := by timed flipCongrArg lean_s1532 [xx5fcount]
                            have lean_s1534 : let916 := by timed Eq.trans lean_s1530 lean_s1533
                            show let916 from lean_s1534
                    ))))))))
                  have lean_s1525 : let1070 := by liftOrNToImp lean_s1524, 4
                  have lean_s1526 : let916 := by timed modusPonens lean_s1523 lean_s1525
                  let lean_s1527 := by timed And.intro lean_a320 lean_a318
                  let lean_s1528 := by timed And.intro lean_a321 lean_s1527
                  have lean_s1529 : let1050 := by timed And.intro lean_s1520 lean_s1528
                  have lean_s1530 : let1053 :=
                    (scope (fun lean_a318 : let468 =>
                      (scope (fun lean_a319 : let44 =>
                        (scope (fun lean_a320 : let34 =>
                          (scope (fun lean_a321 : let59 =>
                            have lean_s1530 : let946 := by timed Eq.symm lean_a321
                            have lean_s1531 : let133 := by timed Eq.symm lean_a320
                            have lean_s1532 : let34 := by timed Eq.symm lean_s1531
                            let lean_s1533 := by timed Eq.trans lean_s1530 lean_s1532
                            have lean_s1534 : let173 := by timed Eq.symm lean_a319
                            have lean_s1535 : let44 := by timed Eq.symm lean_s1534
                            let lean_s1536 := by timed Eq.trans lean_s1533 lean_s1535
                            have lean_s1537 : let1055 := by timed Eq.symm lean_a318
                            have lean_s1538 : let468 := by timed Eq.symm lean_s1537
                            have lean_s1539 : let1054 := by timed flipCongrArg lean_s1538 [sx5fcount]
                            have lean_s1540 : let915 := by timed Eq.trans lean_s1536 lean_s1539
                            show let915 from lean_s1540
                    ))))))))
                  have lean_s1531 : let1051 := by liftOrNToImp lean_s1530, 4
                  have lean_s1532 : let915 := by timed modusPonens lean_s1529 lean_s1531
                  let lean_s1533 := by timed And.intro lean_s1526 lean_s1532
                  have lean_s1534 : let917 := by timed And.intro lean_a324 lean_s1533
                  show let917 from lean_s1534
  ))))))))))))))))
have lean_s1520 : let1068 := by liftOrNToImp lean_s1519, 8
have lean_s1521 : (Eq let308 let308) := by timed rfl
let lean_s1522 := by timed flipCongrArg lean_s1521 [Implies]
have lean_s1523 : (Or let197 (Or let921 let920)) :=
  (scope (fun lean_a318 : let21 =>
    (scope (fun lean_a319 : let916 =>
      (scope (fun lean_a320 : let915 =>
        have lean_s1523 : let922 := by timed Eq.symm lean_a320
        have lean_s1524 : let924 :=
          (scope (fun lean_a318 : let922 =>
            have lean_s1524 : let251 := by timed trueElim lean_r74
            have lean_s1525 : let937 := by timed And.intro lean_s1524 lean_a318
            have lean_s1526 : let938 := by arithMulPos [let19, let27, let63], 4
            have lean_s1527 : let936 := by timed modusPonens lean_s1525 lean_s1526
            have lean_s1528 : let933 := by timed Eq.symm lean_a319
            have lean_s1529 : let934 := by timed And.intro lean_s1524 lean_s1528
            have lean_s1530 : let935 := by arithMulPos [let18, let27, let63], 4
            have lean_s1531 : let932 := by timed modusPonens lean_s1529 lean_s1530
            have lean_s1532 : let718 := by timed trueElim lean_r265
            have lean_s1533 : let930 := by timed And.intro lean_s1532 lean_a318
            have lean_s1534 : let931 := by arithMulNeg [let20, let14, let302], 3
            have lean_s1535 : let929 := by timed modusPonens lean_s1533 lean_s1534
            have lean_s1536 : let928 := by sumBounds [lean_s1527, lean_s1531, lean_s1535]
            let lean_s1537 := by timed congrHAdd lean_r264 lean_r97
            have lean_s1538 : (Eq let927 let582) := by timed congrHAdd lean_r35 lean_s1537
            have lean_s1539 : (Eq let927 let11) := by timed Eq.trans lean_s1538 lean_r203
            let lean_s1540 := by timed flipCongrArg lean_s1539 [LE.le]
            let lean_s1541 := by timed congrHAdd lean_r197 lean_r261
            have lean_s1542 : (Eq let926 let713) := by timed congrHAdd lean_r197 lean_s1541
            have lean_s1543 : (Eq let926 let10) := by timed Eq.trans lean_s1542 lean_r260
            have lean_s1544 : (Eq let928 let536) := by timed congr lean_s1540 lean_s1543
            have lean_s1545 : (Eq let928 False) := by timed Eq.trans lean_s1544 lean_r173
            show False from by timed eqResolve lean_s1536 lean_s1545
          ))
        have lean_s1525 : let923 := by liftOrNToNeg lean_s1524
        show False from by timed contradiction lean_s1523 lean_s1525
  ))))))
have lean_s1524 : (Not let917) := by liftOrNToNeg lean_s1523
have lean_s1525 : let919 := by timed falseIntro lean_s1524
have lean_s1526 : (Eq let1068 let310) := by timed congr lean_s1522 lean_s1525
have lean_s1527 : (Eq let1068 let309) := by timed Eq.trans lean_s1526 lean_r100
have lean_s1528 : let309 := by timed eqResolve lean_s1520 lean_s1527
have lean_s1529 : (Or let887 let1067) := by timed flipNotAnd lean_s1528 [let59, let36, let34, let44, let29, let25, let21, let15]
have lean_s1530 : (Or let197 (Or let887 let1063)) := by permutateOr lean_s1529, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1531 := by R1 lean_s1518, lean_s1530, let44, [(- 1), (- 1)]
have lean_s1532 : (Or let887 (Or let966 (Or let908 (Or let962 (Or let1042 (Or let286 let1061)))))) := by R2 lean_s1531, lean_s1359, let21, [(- 1), 0]
have lean_s1533 : let1061 := by factor lean_s1532, (- 1)
have lean_s1534 : (Or let1036 (Or let616 (Or let287 let1032))) := by timed cnfAndNeg [let400, let286, let954]
have lean_s1535 : let1035 :=
  (scope (fun lean_a318 : let400 =>
    (scope (fun lean_a319 : let286 =>
      (scope (fun lean_a320 : let954 =>
        let lean_s1535 := by timed And.intro lean_a318 lean_a319
        have lean_s1536 : let1038 := by timed And.intro lean_a320 lean_s1535
        have lean_s1537 : (Or let1032 (Or let616 (Or let287 let1037))) :=
          (scope (fun lean_a321 : let954 =>
            (scope (fun lean_a322 : let400 =>
              (scope (fun lean_a323 : let286 =>
                have lean_s1537 : (Eq let400 let728) := by timed Eq.symm lean_r275
                have lean_s1538 : let728 := by timed eqResolve lean_a322 lean_s1537
                have lean_s1539 : (binrel% LE.le fmt1 let14) := by intTightUb lean_s1538
                have lean_s1540 : (binrel% LT.lt fmt1 let14) := by trichotomy lean_s1539, lean_a323
                have lean_s1541 : (binrel% LE.le fmt1 let79) := by intTightUb lean_s1540
                have lean_s1542 : let80 := by trichotomy lean_a321, lean_s1541
                have lean_s1543 : let1037 := by timed Eq.symm lean_s1542
                show let1037 from lean_s1543
          ))))))
        have lean_s1538 : (Implies let1038 let1037) := by liftOrNToImp lean_s1537, 3
        have lean_s1539 : let1037 := by timed modusPonens lean_s1536 lean_s1538
        have lean_s1540 : (Or (Not let1037) let80) :=
          (scope (fun lean_a321 : let1037 =>
            have lean_s1540 : let80 := by timed Eq.symm lean_a321
            show let80 from lean_s1540
          ))
        have lean_s1541 : (Implies let1037 let80) := by liftOrNToImp lean_s1540, 1
        have lean_s1542 : let80 := by timed modusPonens lean_s1539 lean_s1541
        show let80 from lean_s1542
  ))))))
have lean_s1536 : (Implies let1036 let80) := by liftOrNToImp lean_s1535, 3
have lean_s1537 : (Or (Not let1036) let80) := by timed impliesElim lean_s1536
have lean_s1538 : let1035 := by R1 lean_s1534, lean_s1537, let1036, [(- 1), (- 1)]
have lean_s1539 : let837 := by timed rfl
have lean_s1540 : let614 := by timed rfl
let lean_s1541 := by timed flipCongrArg lean_s1540 [Eq]
have lean_s1542 : (Eq let620 let614) := by timed congr lean_s1541 lean_r225
have lean_s1543 : (Eq let620 True) := by timed Eq.trans lean_s1542 lean_r223
have lean_s1544 : (Eq let617 True) := by timed Eq.trans lean_r228 lean_s1543
have lean_s1545 : let617 := by timed trueElim lean_s1544
let lean_s1546 := by timed congr lean_s1539 lean_s1545
have lean_s1547 : let726 := by timed rfl
let lean_s1548 := by timed flipCongrArg lean_s1547 [Eq]
have lean_s1549 : (Eq let727 let726) := by timed congr lean_s1548 lean_r93
have lean_s1550 : (Eq let727 True) := by timed Eq.trans lean_s1549 lean_r273
have lean_s1551 : (Eq let288 True) := by timed Eq.trans lean_r274 lean_s1550
have lean_s1552 : let288 := by timed trueElim lean_s1551
let lean_s1553 := by timed congr lean_s1539 lean_s1552
have lean_s1554 : (Eq let1032 let1032) := by timed rfl
let lean_s1555 := by timed congr lean_s1539 lean_s1554
have lean_s1556 : (Eq let80 let80) := by timed rfl
let lean_s1557 := by timed congr lean_s1555 lean_s1556
let lean_s1558 := by timed congr lean_s1553 lean_s1557
have lean_s1559 : (Eq let1035 let1034) := by timed congr lean_s1546 lean_s1558
have lean_s1560 : let1034 := by timed eqResolve lean_s1538 lean_s1559
have lean_s1561 : (Or let399 (Or let80 (Or let15 let1032))) := by permutateOr lean_s1560, [0, 3, 1, 2], (- 1)
let lean_s1562 := by R2 lean_s1533, lean_s1561, let15, [(- 1), (- 1)]
have lean_s1563 : let400 := by andElim lean_s1341, 1
let lean_s1564 := by R1 lean_s1562, lean_s1563, let399, [(- 1), 0]
have lean_s1565 : (Or let958 (Or let955 let459)) := by timed cnfAndNeg [let398, let458]
have lean_s1566 : let957 :=
  (scope (fun lean_a322 : let398 =>
    (scope (fun lean_a323 : let458 =>
      have lean_s1566 : let958 := by timed And.intro lean_a322 lean_a323
      have lean_s1567 : let957 :=
        (scope (fun lean_a324 : let398 =>
          (scope (fun lean_a325 : let458 =>
            have lean_s1567 : (binrel% GT.gt fmt1 let1) := by trichotomy lean_a324, lean_a325
            have lean_s1568 : let954 := by intTightLb lean_s1567
            show let954 from lean_s1568
        ))))
      have lean_s1568 : let959 := by liftOrNToImp lean_s1567, 2
      have lean_s1569 : let954 := by timed modusPonens lean_s1566 lean_s1568
      show let954 from lean_s1569
  ))))
have lean_s1567 : let959 := by liftOrNToImp lean_s1566, 2
have lean_s1568 : (Or (Not let958) let954) := by timed impliesElim lean_s1567
have lean_s1569 : let957 := by R1 lean_s1565, lean_s1568, let958, [(- 1), (- 1)]
have lean_s1570 : let837 := by timed rfl
have lean_s1571 : (Eq let955 let955) := by timed rfl
let lean_s1572 := by timed congr lean_s1570 lean_s1571
have lean_s1573 : let720 := by timed rfl
let lean_s1574 := by timed flipCongrArg lean_s1573 [Eq]
have lean_s1575 : (Eq let460 let720) := by timed congr lean_s1574 lean_r133
have lean_s1576 : (Eq let460 True) := by timed Eq.trans lean_s1575 lean_r268
have lean_s1577 : (Eq let461 True) := by timed Eq.trans lean_r122 lean_s1576
have lean_s1578 : let461 := by timed trueElim lean_s1577
let lean_s1579 := by timed congr lean_s1570 lean_s1578
have lean_s1580 : (Eq let954 let954) := by timed rfl
let lean_s1581 := by timed congr lean_s1579 lean_s1580
have lean_s1582 : (Eq let957 let956) := by timed congr lean_s1572 lean_s1581
have lean_s1583 : let956 := by timed eqResolve lean_s1569 lean_s1582
have lean_s1584 : (Or let74 (Or let955 let954)) := by permutateOr lean_s1583, [1, 0, 2], (- 1)
let lean_s1585 := by R2 lean_s1564, lean_s1584, let954, [(- 1), (- 1)]
have lean_s1586 : let398 := by andElim lean_s1341, 2
let lean_s1587 := by R2 lean_s1585, lean_s1586, let398, [(- 1), 0]
have lean_s1588 : (Or let887 (Or let908 (Or let197 (Or let458 let917)))) :=
  (scope (fun lean_a324 : let59 =>
    (scope (fun lean_a325 : let36 =>
      (scope (fun lean_a326 : let21 =>
        (scope (fun lean_a327 : let74 =>
          have lean_s1588 : let947 := by timed Eq.symm lean_r266
          have lean_s1589 : let719 := by timed eqResolve lean_a327 lean_s1588
          have lean_s1590 : let948 := by timed And.intro lean_s1589 lean_a325
          have lean_s1591 : let951 :=
            (scope (fun lean_a325 : let719 =>
              (scope (fun lean_a326 : let36 =>
                have lean_s1591 : let953 := by timed Eq.symm lean_a326
                have lean_s1592 : let945 := by timed Eq.symm lean_a325
                have lean_s1593 : let719 := by timed Eq.symm lean_s1592
                have lean_s1594 : let952 := by timed flipCongrArg lean_s1593 [xx5fcount]
                have lean_s1595 : let916 := by timed Eq.trans lean_s1591 lean_s1594
                show let916 from lean_s1595
            ))))
          have lean_s1592 : let949 := by liftOrNToImp lean_s1591, 2
          have lean_s1593 : let916 := by timed modusPonens lean_s1590 lean_s1592
          have lean_s1594 : let939 := by timed And.intro lean_s1589 lean_a324
          have lean_s1595 : let943 :=
            (scope (fun lean_a326 : let719 =>
              (scope (fun lean_a327 : let59 =>
                have lean_s1595 : let946 := by timed Eq.symm lean_a327
                have lean_s1596 : let945 := by timed Eq.symm lean_a326
                have lean_s1597 : let719 := by timed Eq.symm lean_s1596
                have lean_s1598 : let944 := by timed flipCongrArg lean_s1597 [sx5fcount]
                have lean_s1599 : let915 := by timed Eq.trans lean_s1595 lean_s1598
                show let915 from lean_s1599
            ))))
          have lean_s1596 : let940 := by liftOrNToImp lean_s1595, 2
          have lean_s1597 : let915 := by timed modusPonens lean_s1594 lean_s1596
          let lean_s1598 := by timed And.intro lean_s1593 lean_s1597
          have lean_s1599 : let917 := by timed And.intro lean_a326 lean_s1598
          show let917 from lean_s1599
  ))))))))
have lean_s1589 : let918 := by liftOrNToImp lean_s1588, 4
have lean_s1590 : (Eq let253 let253) := by timed rfl
let lean_s1591 := by timed flipCongrArg lean_s1590 [Implies]
have lean_s1592 : let919 := by timed falseIntro lean_s1524
have lean_s1593 : (Eq let918 let255) := by timed congr lean_s1591 lean_s1592
have lean_s1594 : (Eq let918 let254) := by timed Eq.trans lean_s1593 lean_r76
have lean_s1595 : let254 := by timed eqResolve lean_s1589 lean_s1594
have lean_s1596 : (Or let887 let914) := by timed flipNotAnd lean_s1595 [let59, let36, let21, let74]
have lean_s1597 : (Or let197 (Or let887 let912)) := by permutateOr lean_s1596, [2, 0, 1, 3], (- 1)
let lean_s1598 := by R1 lean_s1587, lean_s1597, let74, [(- 1), (- 1)]
let lean_s1599 := by R2 lean_s1598, lean_s1359, let21, [(- 1), 0]
have lean_s1600 : (Or let887 (Or let908 (Or let966 (Or let1010 let1023)))) :=
  (scope (fun lean_a326 : let59 =>
    (scope (fun lean_a327 : let36 =>
      (scope (fun lean_a328 : let34 =>
        (scope (fun lean_a329 : let137 =>
          (scope (fun lean_a330 : let21 =>
            (scope (fun lean_a331 : let80 =>
              have lean_s1600 : let981 := by timed Eq.symm lean_r271
              have lean_s1601 : let723 := by timed eqResolve lean_a331 lean_s1600
              have lean_s1602 : let1029 := by timed And.intro lean_a329 lean_a327
              have lean_s1603 : let1031 :=
                (scope (fun lean_a328 : let137 =>
                  (scope (fun lean_a329 : let36 =>
                    have lean_s1603 : let953 := by timed Eq.symm lean_a329
                    have lean_s1604 : (Eq let136 let28) := by timed Eq.symm lean_a328
                    have lean_s1605 : let137 := by timed Eq.symm lean_s1604
                    have lean_s1606 : let725 := by timed Eq.trans lean_s1603 lean_s1605
                    show let725 from lean_s1606
                ))))
              have lean_s1604 : let1030 := by liftOrNToImp lean_s1603, 2
              have lean_s1605 : let725 := by timed modusPonens lean_s1602 lean_s1604
              have lean_s1606 : let1028 :=
                (scope (fun lean_a328 : let725 =>
                  have lean_s1606 : let724 := by timed eqResolve lean_a328 lean_r272
                  have lean_s1607 : let1024 := by timed Eq.symm lean_s1606
                  show let1024 from lean_s1607
                ))
              have lean_s1607 : let1027 := by liftOrNToImp lean_s1606, 1
              have lean_s1608 : let1024 := by timed modusPonens lean_s1605 lean_s1607
              have lean_s1609 : let1025 := by timed And.intro lean_s1601 lean_s1608
              have lean_s1610 : (Or let977 let1026) :=
                (scope (fun lean_a329 : let723 =>
                  (scope (fun lean_a330 : let1024 =>
                    have lean_s1610 : let724 := by timed Eq.symm lean_a330
                    have lean_s1611 : let1024 := by timed Eq.symm lean_s1610
                    have lean_s1612 : let980 := by timed Eq.symm lean_a329
                    have lean_s1613 : let723 := by timed Eq.symm lean_s1612
                    have lean_s1614 : let987 := by timed flipCongrArg lean_s1613 [xx5fcount]
                    have lean_s1615 : let1011 := by timed Eq.trans lean_s1611 lean_s1614
                    show let1011 from lean_s1615
                ))))
              have lean_s1611 : (Implies let1025 let1011) := by liftOrNToImp lean_s1610, 2
              have lean_s1612 : let1011 := by timed modusPonens lean_s1609 lean_s1611
              let lean_s1613 := by timed And.intro lean_a328 lean_a326
              have lean_s1614 : let974 := by timed And.intro lean_s1601 lean_s1613
              have lean_s1615 : let978 :=
                (scope (fun lean_a331 : let723 =>
                  (scope (fun lean_a332 : let34 =>
                    (scope (fun lean_a333 : let59 =>
                      have lean_s1615 : let946 := by timed Eq.symm lean_a333
                      have lean_s1616 : let133 := by timed Eq.symm lean_a332
                      have lean_s1617 : let34 := by timed Eq.symm lean_s1616
                      let lean_s1618 := by timed Eq.trans lean_s1615 lean_s1617
                      have lean_s1619 : let980 := by timed Eq.symm lean_a331
                      have lean_s1620 : let723 := by timed Eq.symm lean_s1619
                      have lean_s1621 : let979 := by timed flipCongrArg lean_s1620 [sx5fcount]
                      have lean_s1622 : let915 := by timed Eq.trans lean_s1618 lean_s1621
                      show let915 from lean_s1622
                ))))))
              have lean_s1616 : let975 := by liftOrNToImp lean_s1615, 3
              have lean_s1617 : let915 := by timed modusPonens lean_s1614 lean_s1616
              let lean_s1618 := by timed And.intro lean_s1612 lean_s1617
              have lean_s1619 : let1012 := by timed And.intro lean_a330 lean_s1618
              show let1012 from lean_s1619
  ))))))))))))
have lean_s1601 : let1013 := by liftOrNToImp lean_s1600, 6
have lean_s1602 : (Eq let138 let138) := by timed rfl
let lean_s1603 := by timed flipCongrArg lean_s1602 [Implies]
have lean_s1604 : let1014 := by timed falseIntro lean_s1419
have lean_s1605 : (Eq let1013 let140) := by timed congr lean_s1603 lean_s1604
have lean_s1606 : (Eq let1013 let139) := by timed Eq.trans lean_s1605 lean_r30
have lean_s1607 : let139 := by timed eqResolve lean_s1601 lean_s1606
have lean_s1608 : (Or let887 (Or let908 (Or let966 (Or let1010 let968)))) := by timed flipNotAnd lean_s1607 [let59, let36, let34, let137, let21, let80]
have lean_s1609 : (Or let197 (Or let887 (Or let966 (Or let908 (Or let1010 let960))))) := by permutateOr lean_s1608, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1610 := by R2 lean_s1609, lean_s1359, let21, [(- 1), 0]
let lean_s1611 := by R2 lean_s1610, lean_s1486, let34, [(- 1), (- 1)]
let lean_s1612 := by R1 lean_s1611, lean_s1482, let373, [(- 1), (- 1)]
let lean_s1613 := by R1 lean_s1612, lean_s1474, let164, [(- 1), (- 1)]
have lean_s1614 : (Or let903 let137) := by timed iteElim1 lean_s1429
have lean_s1615 : (Or let137 let903) := by permutateOr lean_s1614, [1, 0], (- 1)
let lean_s1616 := by R2 lean_s1613, lean_s1615, let137, [(- 1), (- 1)]
have lean_s1617 : (Or let887 (Or let908 (Or let960 (Or let903 let903)))) := by R2 lean_s1616, lean_s1463, let348, [(- 1), (- 1)]
have lean_s1618 : (Or let887 (Or let908 (Or let960 let903))) := by factor lean_s1617, (- 1)
let lean_s1619 := by R2 lean_s1618, lean_s1431, let349, [(- 1), (- 1)]
have lean_s1620 : (Or let887 (Or let908 (Or let901 let1001))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let36 =>
      (scope (fun lean_a333 : let175 =>
        (scope (fun lean_a334 : let29 =>
          (scope (fun lean_a335 : let21 =>
            (scope (fun lean_a336 : let80 =>
              have lean_s1620 : let981 := by timed Eq.symm lean_r271
              have lean_s1621 : let723 := by timed eqResolve lean_a336 lean_s1620
              let lean_s1622 := by timed And.intro lean_a334 lean_a332
              have lean_s1623 : let983 := by timed And.intro lean_s1621 lean_s1622
              have lean_s1624 : let986 :=
                (scope (fun lean_a331 : let723 =>
                  (scope (fun lean_a332 : let29 =>
                    (scope (fun lean_a333 : let36 =>
                      have lean_s1624 : let953 := by timed Eq.symm lean_a333
                      have lean_s1625 : let424 := by timed Eq.symm lean_a332
                      have lean_s1626 : let29 := by timed Eq.symm lean_s1625
                      let lean_s1627 := by timed Eq.trans lean_s1624 lean_s1626
                      have lean_s1628 : let980 := by timed Eq.symm lean_a331
                      have lean_s1629 : let723 := by timed Eq.symm lean_s1628
                      have lean_s1630 : let987 := by timed flipCongrArg lean_s1629 [xx5fcount]
                      have lean_s1631 : let916 := by timed Eq.trans lean_s1627 lean_s1630
                      show let916 from lean_s1631
                ))))))
              have lean_s1625 : let984 := by liftOrNToImp lean_s1624, 3
              have lean_s1626 : let916 := by timed modusPonens lean_s1623 lean_s1625
              have lean_s1627 : let1007 := by timed And.intro lean_a333 lean_a331
              have lean_s1628 : let1009 :=
                (scope (fun lean_a331 : let175 =>
                  (scope (fun lean_a332 : let59 =>
                    have lean_s1628 : let946 := by timed Eq.symm lean_a332
                    have lean_s1629 : (Eq let174 let33) := by timed Eq.symm lean_a331
                    have lean_s1630 : let175 := by timed Eq.symm lean_s1629
                    have lean_s1631 : let597 := by timed Eq.trans lean_s1628 lean_s1630
                    show let597 from lean_s1631
                ))))
              have lean_s1629 : let1008 := by liftOrNToImp lean_s1628, 2
              have lean_s1630 : let597 := by timed modusPonens lean_s1627 lean_s1629
              have lean_s1631 : let1006 :=
                (scope (fun lean_a331 : let597 =>
                  have lean_s1631 : let596 := by timed eqResolve lean_a331 lean_r209
                  have lean_s1632 : let1002 := by timed Eq.symm lean_s1631
                  show let1002 from lean_s1632
                ))
              have lean_s1632 : let1005 := by liftOrNToImp lean_s1631, 1
              have lean_s1633 : let1002 := by timed modusPonens lean_s1630 lean_s1632
              have lean_s1634 : let1003 := by timed And.intro lean_s1621 lean_s1633
              have lean_s1635 : (Or let977 let1004) :=
                (scope (fun lean_a331 : let723 =>
                  (scope (fun lean_a332 : let1002 =>
                    have lean_s1635 : let596 := by timed Eq.symm lean_a332
                    have lean_s1636 : let1002 := by timed Eq.symm lean_s1635
                    have lean_s1637 : let980 := by timed Eq.symm lean_a331
                    have lean_s1638 : let723 := by timed Eq.symm lean_s1637
                    have lean_s1639 : let979 := by timed flipCongrArg lean_s1638 [sx5fcount]
                    have lean_s1640 : let988 := by timed Eq.trans lean_s1636 lean_s1639
                    show let988 from lean_s1640
                ))))
              have lean_s1636 : (Implies let1003 let988) := by liftOrNToImp lean_s1635, 2
              have lean_s1637 : let988 := by timed modusPonens lean_s1634 lean_s1636
              let lean_s1638 := by timed And.intro lean_s1626 lean_s1637
              have lean_s1639 : let989 := by timed And.intro lean_a335 lean_s1638
              show let989 from lean_s1639
  ))))))))))))
have lean_s1621 : let990 := by liftOrNToImp lean_s1620, 6
have lean_s1622 : (Eq let639 let639) := by timed rfl
let lean_s1623 := by timed flipCongrArg lean_s1622 [Implies]
have lean_s1624 : let991 := by timed falseIntro lean_s1352
have lean_s1625 : (Eq let990 let641) := by timed congr lean_s1623 lean_s1624
have lean_s1626 : (Eq let990 let640) := by timed Eq.trans lean_s1625 lean_r243
have lean_s1627 : let640 := by timed eqResolve lean_s1621 lean_s1626
have lean_s1628 : (Or let887 (Or let908 (Or let901 let969))) := by timed flipNotAnd lean_s1627 [let59, let36, let175, let29, let21, let80]
have lean_s1629 : (Or let197 (Or let887 (Or let901 let964))) := by permutateOr lean_s1628, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1630 := by R2 lean_s1629, lean_s1359, let21, [(- 1), 0]
let lean_s1631 := by R2 lean_s1630, lean_s1478, let175, [(- 1), (- 1)]
let lean_s1632 := by R2 lean_s1631, lean_s1486, let373, [(- 1), (- 1)]
have lean_s1633 : (Or let887 (Or let908 (Or let966 (Or let962 (Or let197 (Or let960 let917)))))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let36 =>
      (scope (fun lean_a333 : let34 =>
        (scope (fun lean_a334 : let29 =>
          (scope (fun lean_a335 : let21 =>
            (scope (fun lean_a336 : let80 =>
              have lean_s1633 : let981 := by timed Eq.symm lean_r271
              have lean_s1634 : let723 := by timed eqResolve lean_a336 lean_s1633
              let lean_s1635 := by timed And.intro lean_a334 lean_a332
              have lean_s1636 : let983 := by timed And.intro lean_s1634 lean_s1635
              have lean_s1637 : let986 :=
                (scope (fun lean_a331 : let723 =>
                  (scope (fun lean_a332 : let29 =>
                    (scope (fun lean_a333 : let36 =>
                      have lean_s1637 : let953 := by timed Eq.symm lean_a333
                      have lean_s1638 : let424 := by timed Eq.symm lean_a332
                      have lean_s1639 : let29 := by timed Eq.symm lean_s1638
                      let lean_s1640 := by timed Eq.trans lean_s1637 lean_s1639
                      have lean_s1641 : let980 := by timed Eq.symm lean_a331
                      have lean_s1642 : let723 := by timed Eq.symm lean_s1641
                      have lean_s1643 : let987 := by timed flipCongrArg lean_s1642 [xx5fcount]
                      have lean_s1644 : let916 := by timed Eq.trans lean_s1640 lean_s1643
                      show let916 from lean_s1644
                ))))))
              have lean_s1638 : let984 := by liftOrNToImp lean_s1637, 3
              have lean_s1639 : let916 := by timed modusPonens lean_s1636 lean_s1638
              let lean_s1640 := by timed And.intro lean_a333 lean_a331
              have lean_s1641 : let974 := by timed And.intro lean_s1634 lean_s1640
              have lean_s1642 : let978 :=
                (scope (fun lean_a331 : let723 =>
                  (scope (fun lean_a332 : let34 =>
                    (scope (fun lean_a333 : let59 =>
                      have lean_s1642 : let946 := by timed Eq.symm lean_a333
                      have lean_s1643 : let133 := by timed Eq.symm lean_a332
                      have lean_s1644 : let34 := by timed Eq.symm lean_s1643
                      let lean_s1645 := by timed Eq.trans lean_s1642 lean_s1644
                      have lean_s1646 : let980 := by timed Eq.symm lean_a331
                      have lean_s1647 : let723 := by timed Eq.symm lean_s1646
                      have lean_s1648 : let979 := by timed flipCongrArg lean_s1647 [sx5fcount]
                      have lean_s1649 : let915 := by timed Eq.trans lean_s1645 lean_s1648
                      show let915 from lean_s1649
                ))))))
              have lean_s1643 : let975 := by liftOrNToImp lean_s1642, 3
              have lean_s1644 : let915 := by timed modusPonens lean_s1641 lean_s1643
              let lean_s1645 := by timed And.intro lean_s1639 lean_s1644
              have lean_s1646 : let917 := by timed And.intro lean_a335 lean_s1645
              show let917 from lean_s1646
  ))))))))))))
have lean_s1634 : let972 := by liftOrNToImp lean_s1633, 6
have lean_s1635 : (Eq let527 let527) := by timed rfl
let lean_s1636 := by timed flipCongrArg lean_s1635 [Implies]
have lean_s1637 : let919 := by timed falseIntro lean_s1524
have lean_s1638 : (Eq let972 let529) := by timed congr lean_s1636 lean_s1637
have lean_s1639 : (Eq let972 let528) := by timed Eq.trans lean_s1638 lean_r165
have lean_s1640 : let528 := by timed eqResolve lean_s1634 lean_s1639
have lean_s1641 : (Or let887 let971) := by timed flipNotAnd lean_s1640 [let59, let36, let34, let29, let21, let80]
have lean_s1642 : (Or let197 (Or let887 let967)) := by permutateOr lean_s1641, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1643 := by R1 lean_s1632, lean_s1642, let34, [(- 1), (- 1)]
have lean_s1644 : (Or let887 (Or let908 (Or let962 (Or let960 let965)))) := by R2 lean_s1643, lean_s1359, let21, [(- 1), 0]
have lean_s1645 : let965 := by factor lean_s1644, (- 1)
have lean_s1646 : (Or let887 (Or let908 (Or let960 let961))) := by R1 lean_s1619, lean_s1645, let29, [(- 1), (- 1)]
have lean_s1647 : let961 := by factor lean_s1646, (- 1)
let lean_s1648 := by R1 lean_s1599, lean_s1647, let80, [(- 1), (- 1)]
let lean_s1649 := by R2 lean_s1648, lean_s1431, let29, [(- 1), (- 1)]
have lean_s1650 : (Or let887 (Or let908 (Or let966 (Or let1044 (Or let1010 let1049))))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let36 =>
      (scope (fun lean_a333 : let34 =>
        (scope (fun lean_a334 : let44 =>
          (scope (fun lean_a335 : let137 =>
            (scope (fun lean_a336 : let25 =>
              (scope (fun lean_a337 : let21 =>
                (scope (fun lean_a338 : let15 =>
                  have lean_s1650 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1651 : let468 := by timed eqResolve lean_a338 lean_s1650
                  have lean_s1652 : let1029 := by timed And.intro lean_a335 lean_a332
                  have lean_s1653 : let1031 :=
                    (scope (fun lean_a331 : let137 =>
                      (scope (fun lean_a332 : let36 =>
                        have lean_s1653 : let953 := by timed Eq.symm lean_a332
                        have lean_s1654 : (Eq let136 let28) := by timed Eq.symm lean_a331
                        have lean_s1655 : let137 := by timed Eq.symm lean_s1654
                        have lean_s1656 : let725 := by timed Eq.trans lean_s1653 lean_s1655
                        show let725 from lean_s1656
                    ))))
                  have lean_s1654 : let1030 := by liftOrNToImp lean_s1653, 2
                  have lean_s1655 : let725 := by timed modusPonens lean_s1652 lean_s1654
                  have lean_s1656 : let1028 :=
                    (scope (fun lean_a331 : let725 =>
                      have lean_s1656 : let724 := by timed eqResolve lean_a331 lean_r272
                      have lean_s1657 : let1024 := by timed Eq.symm lean_s1656
                      show let1024 from lean_s1657
                    ))
                  have lean_s1657 : let1027 := by liftOrNToImp lean_s1656, 1
                  have lean_s1658 : let1024 := by timed modusPonens lean_s1655 lean_s1657
                  let lean_s1659 := by timed And.intro lean_a336 lean_s1658
                  have lean_s1660 : let1057 := by timed And.intro lean_s1651 lean_s1659
                  have lean_s1661 : (Or let1052 (Or let1042 let1026)) :=
                    (scope (fun lean_a331 : let468 =>
                      (scope (fun lean_a332 : let25 =>
                        (scope (fun lean_a333 : let1024 =>
                          have lean_s1661 : let724 := by timed Eq.symm lean_a333
                          have lean_s1662 : let1024 := by timed Eq.symm lean_s1661
                          have lean_s1663 : let403 := by timed Eq.symm lean_a332
                          have lean_s1664 : let25 := by timed Eq.symm lean_s1663
                          let lean_s1665 := by timed Eq.trans lean_s1662 lean_s1664
                          have lean_s1666 : let1055 := by timed Eq.symm lean_a331
                          have lean_s1667 : let468 := by timed Eq.symm lean_s1666
                          have lean_s1668 : let1058 := by timed flipCongrArg lean_s1667 [xx5fcount]
                          have lean_s1669 : let1011 := by timed Eq.trans lean_s1665 lean_s1668
                          show let1011 from lean_s1669
                    ))))))
                  have lean_s1662 : (Implies let1057 let1011) := by liftOrNToImp lean_s1661, 3
                  have lean_s1663 : let1011 := by timed modusPonens lean_s1660 lean_s1662
                  let lean_s1664 := by timed And.intro lean_a333 lean_a331
                  let lean_s1665 := by timed And.intro lean_a334 lean_s1664
                  have lean_s1666 : let1050 := by timed And.intro lean_s1651 lean_s1665
                  have lean_s1667 : let1053 :=
                    (scope (fun lean_a331 : let468 =>
                      (scope (fun lean_a332 : let44 =>
                        (scope (fun lean_a333 : let34 =>
                          (scope (fun lean_a334 : let59 =>
                            have lean_s1667 : let946 := by timed Eq.symm lean_a334
                            have lean_s1668 : let133 := by timed Eq.symm lean_a333
                            have lean_s1669 : let34 := by timed Eq.symm lean_s1668
                            let lean_s1670 := by timed Eq.trans lean_s1667 lean_s1669
                            have lean_s1671 : let173 := by timed Eq.symm lean_a332
                            have lean_s1672 : let44 := by timed Eq.symm lean_s1671
                            let lean_s1673 := by timed Eq.trans lean_s1670 lean_s1672
                            have lean_s1674 : let1055 := by timed Eq.symm lean_a331
                            have lean_s1675 : let468 := by timed Eq.symm lean_s1674
                            have lean_s1676 : let1054 := by timed flipCongrArg lean_s1675 [sx5fcount]
                            have lean_s1677 : let915 := by timed Eq.trans lean_s1673 lean_s1676
                            show let915 from lean_s1677
                    ))))))))
                  have lean_s1668 : let1051 := by liftOrNToImp lean_s1667, 4
                  have lean_s1669 : let915 := by timed modusPonens lean_s1666 lean_s1668
                  let lean_s1670 := by timed And.intro lean_s1663 lean_s1669
                  have lean_s1671 : let1012 := by timed And.intro lean_a337 lean_s1670
                  show let1012 from lean_s1671
  ))))))))))))))))
have lean_s1651 : let1047 := by liftOrNToImp lean_s1650, 8
have lean_s1652 : (Eq let186 let186) := by timed rfl
let lean_s1653 := by timed flipCongrArg lean_s1652 [Implies]
have lean_s1654 : let1014 := by timed falseIntro lean_s1419
have lean_s1655 : (Eq let1047 let188) := by timed congr lean_s1653 lean_s1654
have lean_s1656 : (Eq let1047 let187) := by timed Eq.trans lean_s1655 lean_r51
have lean_s1657 : let187 := by timed eqResolve lean_s1651 lean_s1656
have lean_s1658 : (Or let887 (Or let908 (Or let966 (Or let1044 (Or let1010 let1046))))) := by timed flipNotAnd lean_s1657 [let59, let36, let34, let44, let137, let25, let21, let15]
have lean_s1659 : (Or let197 (Or let887 (Or let966 (Or let1044 (Or let908 (Or let1010 let1043)))))) := by permutateOr lean_s1658, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1660 := by R2 lean_s1659, lean_s1359, let21, [(- 1), 0]
let lean_s1661 := by R2 lean_s1660, lean_s1397, let25, [(- 1), (- 1)]
let lean_s1662 := by R2 lean_s1661, lean_s1346, let44, [(- 1), (- 1)]
let lean_s1663 := by R1 lean_s1662, lean_s1456, let346, [(- 1), (- 1)]
have lean_s1664 : (Or let887 (Or let966 (Or let908 (Or let1010 (Or let286 (Or let345 let345)))))) := by R1 lean_s1663, lean_s1459, let371, [(- 1), (- 1)]
have lean_s1665 : (Or let887 (Or let966 (Or let908 (Or let1010 (Or let286 let345))))) := by factor lean_s1664, (- 1)
have lean_s1666 : let1040 :=
  (scope (fun lean_a331 : let348 =>
    have lean_s1666 : let1040 :=
      (scope (fun lean_a331 : let348 =>
        have lean_s1666 : let498 := by timed Eq.symm lean_a331
        have lean_s1667 : let348 := by timed Eq.symm lean_s1666
        let lean_s1668 := by timed flipCongrArg lean_s1667 [Eq]
        have lean_s1669 : let168 := by timed rfl
        have lean_s1670 : (Eq let345 let223) := by timed congr lean_s1668 lean_s1669
        have lean_s1671 : (Eq let224 let712) := by timed flipCongrArg lean_r278 [Not]
        have lean_s1672 : (Eq let224 True) := by timed Eq.trans lean_s1671 lean_r259
        have lean_s1673 : (Eq let225 True) := by timed Eq.trans lean_r61 lean_s1672
        have lean_s1674 : let225 := by timed trueElim lean_s1673
        have lean_s1675 : let898 := by timed Eq.trans lean_s1670 lean_s1674
        have lean_s1676 : let895 := by timed falseElim lean_s1675
        show let895 from lean_s1676
      ))
    have lean_s1667 : let1041 := by liftOrNToImp lean_s1666, 1
    have lean_s1668 : let895 := by timed modusPonens lean_a331 lean_s1667
    show let895 from lean_s1668
  ))
have lean_s1667 : let1041 := by liftOrNToImp lean_s1666, 1
have lean_s1668 : let1040 := by timed impliesElim lean_s1667
have lean_s1669 : (Or let895 let892) := by permutateOr lean_s1668, [1, 0], (- 1)
let lean_s1670 := by R1 lean_s1665, lean_s1669, let345, [(- 1), (- 1)]
let lean_s1671 := by R2 lean_s1670, lean_s1615, let137, [(- 1), (- 1)]
let lean_s1672 := by R2 lean_s1671, lean_s1463, let348, [(- 1), (- 1)]
let lean_s1673 := by R2 lean_s1672, lean_s1561, let15, [(- 1), (- 1)]
let lean_s1674 := by R1 lean_s1673, lean_s1563, let399, [(- 1), 0]
let lean_s1675 := by R2 lean_s1674, lean_s1584, let954, [(- 1), (- 1)]
let lean_s1676 := by R2 lean_s1675, lean_s1586, let398, [(- 1), 0]
let lean_s1677 := by R1 lean_s1676, lean_s1597, let74, [(- 1), (- 1)]
let lean_s1678 := by R2 lean_s1677, lean_s1359, let21, [(- 1), 0]
have lean_s1679 : (Or let887 (Or let966 (Or let908 (Or let903 (Or let903 let910))))) := by R1 lean_s1678, lean_s1647, let80, [(- 1), (- 1)]
have lean_s1680 : (Or let887 (Or let966 (Or let908 let903))) := by factor lean_s1679, 8
have lean_s1681 : (Or let887 (Or let966 (Or let908 (Or let1042 (Or let887 (Or let908 (Or let887 (Or let908 let1039)))))))) := by R1 lean_s1649, lean_s1680, let349, [(- 1), (- 1)]
have lean_s1682 : (Or let887 (Or let966 (Or let908 let1042))) := by factor lean_s1681, 10
let lean_s1683 := by R1 lean_s1505, lean_s1682, let25, [(- 1), (- 1)]
let lean_s1684 := by R2 lean_s1683, lean_s1431, let29, [(- 1), (- 1)]
let lean_s1685 := by R1 lean_s1684, lean_s1680, let349, [(- 1), (- 1)]
let lean_s1686 := by R2 lean_s1685, lean_s1561, let15, [(- 1), (- 1)]
let lean_s1687 := by R1 lean_s1686, lean_s1563, let399, [(- 1), 0]
let lean_s1688 := by R2 lean_s1687, lean_s1584, let954, [(- 1), (- 1)]
let lean_s1689 := by R2 lean_s1688, lean_s1586, let398, [(- 1), 0]
let lean_s1690 := by R1 lean_s1689, lean_s1597, let74, [(- 1), (- 1)]
let lean_s1691 := by R2 lean_s1690, lean_s1359, let21, [(- 1), 0]
have lean_s1692 : (Or let887 (Or let966 (Or let908 (Or let887 (Or let966 (Or let908 (Or let887 (Or let966 let911)))))))) := by R1 lean_s1691, lean_s1647, let80, [(- 1), (- 1)]
have lean_s1693 : let1039 := by factor lean_s1692, (- 1)
let lean_s1694 := by R1 lean_s1487, lean_s1693, let34, [(- 1), (- 1)]
let lean_s1695 := by R2 lean_s1694, lean_s1561, let15, [(- 1), (- 1)]
let lean_s1696 := by R1 lean_s1695, lean_s1563, let399, [(- 1), 0]
let lean_s1697 := by R1 lean_s1696, lean_s1647, let80, [(- 1), (- 1)]
let lean_s1698 := by R2 lean_s1697, lean_s1584, let954, [(- 1), (- 1)]
let lean_s1699 := by R2 lean_s1698, lean_s1586, let398, [(- 1), 0]
let lean_s1700 := by R1 lean_s1699, lean_s1597, let74, [(- 1), (- 1)]
have lean_s1701 : (Or let887 (Or let908 (Or let887 let911))) := by R2 lean_s1700, lean_s1359, let21, [(- 1), 0]
have lean_s1702 : let909 := by factor lean_s1701, (- 1)
have lean_s1703 : let354 := by andElim lean_s1341, 11
have lean_s1704 : (Or let353 let36) := by timed iteElim2 lean_s1703
have lean_s1705 : (Or let36 let353) := by permutateOr lean_s1704, [1, 0], (- 1)
let lean_s1706 := by R2 lean_s1702, lean_s1705, let36, [(- 1), (- 1)]
let lean_s1707 := by R2 lean_s1706, lean_s1365, let59, [(- 1), (- 1)]
have lean_s1708 : (Or let907 let352) := by timed @cnfAndPos [let352, let351] 0
have lean_s1709 : (Or let352 let907) := by permutateOr lean_s1708, [1, 0], (- 1)
let lean_s1710 := by R1 lean_s1707, lean_s1709, let353, [(- 1), (- 1)]
have lean_s1711 : (Or let906 let352) := by timed @cnfAndPos [let352, let284] 0
have lean_s1712 : (Or let352 let906) := by permutateOr lean_s1711, [1, 0], (- 1)
have lean_s1713 : (Or let352 let352) := by R1 lean_s1710, lean_s1712, let375, [(- 1), (- 1)]
have lean_s1714 : let352 := by factor lean_s1713, 1
let lean_s1715 := by R2 lean_s1441, lean_s1714, let352, [(- 1), 0]
have lean_s1716 : (Or let907 let58) := by timed iteElim1 lean_s1703
have lean_s1717 : (Or let58 let907) := by permutateOr lean_s1716, [1, 0], (- 1)
let lean_s1718 := by R2 lean_s1715, lean_s1717, let58, [(- 1), (- 1)]
have lean_s1719 : (Or let907 let351) := by timed @cnfAndPos [let352, let351] 1
have lean_s1720 : (Or let351 let907) := by permutateOr lean_s1719, [1, 0], (- 1)
have lean_s1721 : (Or let887 (Or let966 (Or let1042 (Or let286 let1121)))) := by R2 lean_s1718, lean_s1720, let351, [(- 1), (- 1)]
have lean_s1722 : (Or let887 (Or let966 (Or let1042 (Or let286 let907)))) := by factor lean_s1721, (- 1)
let lean_s1723 := by R2 lean_s1722, lean_s1705, let353, [(- 1), (- 1)]
have lean_s1724 : (Or let887 (Or let966 (Or let1042 (Or let286 let1120)))) := by R1 lean_s1723, lean_s1693, let36, [(- 1), (- 1)]
have lean_s1725 : (Or let887 (Or let966 let1043)) := by factor lean_s1724, 5
let lean_s1726 := by R2 lean_s1725, lean_s1486, let34, [(- 1), (- 1)]
let lean_s1727 := by R1 lean_s1561, lean_s1563, let399, [(- 1), 0]
let lean_s1728 := by R2 lean_s1727, lean_s1584, let954, [(- 1), (- 1)]
let lean_s1729 := by R2 lean_s1728, lean_s1586, let398, [(- 1), 0]
let lean_s1730 := by R1 lean_s1729, lean_s1451, let15, [(- 1), (- 1)]
let lean_s1731 := by R2 lean_s1730, lean_s1359, let21, [(- 1), 0]
let lean_s1732 := by R1 lean_s1731, lean_s1647, let80, [(- 1), (- 1)]
let lean_s1733 := by R1 lean_s1732, lean_s1597, let74, [(- 1), (- 1)]
have lean_s1734 : (Or let887 (Or let901 (Or let1044 (Or let908 (Or let962 (Or let1042 let910)))))) := by R2 lean_s1733, lean_s1359, let21, [(- 1), 0]
have lean_s1735 : (Or let887 (Or let901 (Or let1044 (Or let908 (Or let962 let1042))))) := by factor lean_s1734, 9
let lean_s1736 := by R2 lean_s1735, lean_s1705, let36, [(- 1), (- 1)]
let lean_s1737 := by R1 lean_s1736, lean_s1720, let353, [(- 1), (- 1)]
let lean_s1738 := by R1 lean_s1737, lean_s1440, let351, [(- 1), (- 1)]
let lean_s1739 := by R2 lean_s1738, lean_s1714, let352, [(- 1), 0]
let lean_s1740 := by R2 lean_s1739, lean_s1397, let25, [(- 1), (- 1)]
let lean_s1741 := by R2 lean_s1740, lean_s1346, let44, [(- 1), (- 1)]
let lean_s1742 := by R2 lean_s1741, lean_s1431, let29, [(- 1), (- 1)]
let lean_s1743 := by R1 lean_s1742, lean_s1456, let346, [(- 1), (- 1)]
let lean_s1744 := by R1 lean_s1743, lean_s1459, let371, [(- 1), (- 1)]
have lean_s1745 : (Or let887 (Or let901 (Or let900 let902))) := by R1 lean_s1744, lean_s1463, let349, [(- 1), (- 1)]
have lean_s1746 : (Or let887 (Or let901 (Or let900 let899))) := by factor lean_s1745, (- 1)
let lean_s1747 := by R1 lean_s1746, lean_s1469, let345, [(- 1), (- 1)]
let lean_s1748 := by R1 lean_s1747, lean_s1474, let348, [(- 1), (- 1)]
let lean_s1749 := by R2 lean_s1748, lean_s1478, let175, [(- 1), (- 1)]
have lean_s1750 : (Or let888 let148) := by timed @cnfAndPos [let148, let164] 0
have lean_s1751 : (Or let148 let888) := by permutateOr lean_s1750, [1, 0], (- 1)
have lean_s1752 : (Or let887 (Or let890 (Or let890 let889))) := by R2 lean_s1749, lean_s1751, let148, [(- 1), (- 1)]
have lean_s1753 : (Or let887 let891) := by factor lean_s1752, (- 1)
have lean_s1754 : (Or let887 let889) := by R2 lean_s1753, lean_s1482, let164, [(- 1), (- 1)]
have lean_s1755 : (Or let887 let888) := by factor lean_s1754, (- 1)
have lean_s1756 : (Or let887 (Or let1042 (Or let286 let887))) := by R1 lean_s1726, lean_s1755, let373, [(- 1), (- 1)]
have lean_s1757 : (Or let887 let1043) := by factor lean_s1756, 3
have lean_s1758 : (Or let887 (Or let966 (Or let1122 (Or let962 (Or let286 (Or let887 let286)))))) := by R1 lean_s1398, lean_s1757, let25, [(- 1), (- 1)]
have lean_s1759 : (Or let887 (Or let966 (Or let1122 (Or let962 let286)))) := by factor lean_s1758, (- 1)
let lean_s1760 := by R2 lean_s1759, lean_s1561, let15, [(- 1), (- 1)]
let lean_s1761 := by R1 lean_s1760, lean_s1563, let399, [(- 1), 0]
let lean_s1762 := by R2 lean_s1761, lean_s1584, let954, [(- 1), (- 1)]
let lean_s1763 := by R2 lean_s1762, lean_s1586, let398, [(- 1), 0]
have lean_s1764 : (Or let887 (Or let1122 (Or let197 (Or let458 let1012)))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let58 =>
      (scope (fun lean_a333 : let21 =>
        (scope (fun lean_a334 : let74 =>
          have lean_s1764 : let947 := by timed Eq.symm lean_r266
          have lean_s1765 : let719 := by timed eqResolve lean_a334 lean_s1764
          have lean_s1766 : let1131 := by timed And.intro lean_s1765 lean_a332
          have lean_s1767 : (Or let942 let1127) :=
            (scope (fun lean_a331 : let719 =>
              (scope (fun lean_a332 : let58 =>
                have lean_s1767 : let1129 := by timed Eq.symm lean_a332
                have lean_s1768 : let945 := by timed Eq.symm lean_a331
                have lean_s1769 : let719 := by timed Eq.symm lean_s1768
                have lean_s1770 : let952 := by timed flipCongrArg lean_s1769 [xx5fcount]
                have lean_s1771 : let1011 := by timed Eq.trans lean_s1767 lean_s1770
                show let1011 from lean_s1771
            ))))
          have lean_s1768 : (Implies let1131 let1011) := by liftOrNToImp lean_s1767, 2
          have lean_s1769 : let1011 := by timed modusPonens lean_s1766 lean_s1768
          have lean_s1770 : let939 := by timed And.intro lean_s1765 lean_a331
          have lean_s1771 : let943 :=
            (scope (fun lean_a331 : let719 =>
              (scope (fun lean_a332 : let59 =>
                have lean_s1771 : let946 := by timed Eq.symm lean_a332
                have lean_s1772 : let945 := by timed Eq.symm lean_a331
                have lean_s1773 : let719 := by timed Eq.symm lean_s1772
                have lean_s1774 : let944 := by timed flipCongrArg lean_s1773 [sx5fcount]
                have lean_s1775 : let915 := by timed Eq.trans lean_s1771 lean_s1774
                show let915 from lean_s1775
            ))))
          have lean_s1772 : let940 := by liftOrNToImp lean_s1771, 2
          have lean_s1773 : let915 := by timed modusPonens lean_s1770 lean_s1772
          let lean_s1774 := by timed And.intro lean_s1769 lean_s1773
          have lean_s1775 : let1012 := by timed And.intro lean_a333 lean_s1774
          show let1012 from lean_s1775
  ))))))))
have lean_s1765 : let1130 := by liftOrNToImp lean_s1764, 4
have lean_s1766 : (Eq let76 let76) := by timed rfl
let lean_s1767 := by timed flipCongrArg lean_s1766 [Implies]
have lean_s1768 : let1014 := by timed falseIntro lean_s1419
have lean_s1769 : (Eq let1130 let78) := by timed congr lean_s1767 lean_s1768
have lean_s1770 : (Eq let1130 let77) := by timed Eq.trans lean_s1769 lean_r12
have lean_s1771 : let77 := by timed eqResolve lean_s1765 lean_s1770
have lean_s1772 : (Or let887 (Or let1122 let913)) := by timed flipNotAnd lean_s1771 [let59, let58, let21, let74]
have lean_s1773 : (Or let197 (Or let887 (Or let1122 let458))) := by permutateOr lean_s1772, [2, 0, 1, 3], (- 1)
let lean_s1774 := by R1 lean_s1763, lean_s1773, let74, [(- 1), (- 1)]
let lean_s1775 := by R2 lean_s1774, lean_s1359, let21, [(- 1), 0]
have lean_s1776 : (Or let887 (Or let1122 (Or let966 (Or let962 let1023)))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let58 =>
      (scope (fun lean_a333 : let34 =>
        (scope (fun lean_a334 : let29 =>
          (scope (fun lean_a335 : let21 =>
            (scope (fun lean_a336 : let80 =>
              have lean_s1776 : let981 := by timed Eq.symm lean_r271
              have lean_s1777 : let723 := by timed eqResolve lean_a336 lean_s1776
              let lean_s1778 := by timed And.intro lean_a334 lean_a332
              have lean_s1779 : let1126 := by timed And.intro lean_s1777 lean_s1778
              have lean_s1780 : (Or let977 let1128) :=
                (scope (fun lean_a331 : let723 =>
                  (scope (fun lean_a332 : let29 =>
                    (scope (fun lean_a333 : let58 =>
                      have lean_s1780 : let1129 := by timed Eq.symm lean_a333
                      have lean_s1781 : let424 := by timed Eq.symm lean_a332
                      have lean_s1782 : let29 := by timed Eq.symm lean_s1781
                      let lean_s1783 := by timed Eq.trans lean_s1780 lean_s1782
                      have lean_s1784 : let980 := by timed Eq.symm lean_a331
                      have lean_s1785 : let723 := by timed Eq.symm lean_s1784
                      have lean_s1786 : let987 := by timed flipCongrArg lean_s1785 [xx5fcount]
                      have lean_s1787 : let1011 := by timed Eq.trans lean_s1783 lean_s1786
                      show let1011 from lean_s1787
                ))))))
              have lean_s1781 : (Implies let1126 let1011) := by liftOrNToImp lean_s1780, 3
              have lean_s1782 : let1011 := by timed modusPonens lean_s1779 lean_s1781
              let lean_s1783 := by timed And.intro lean_a333 lean_a331
              have lean_s1784 : let974 := by timed And.intro lean_s1777 lean_s1783
              have lean_s1785 : let978 :=
                (scope (fun lean_a331 : let723 =>
                  (scope (fun lean_a332 : let34 =>
                    (scope (fun lean_a333 : let59 =>
                      have lean_s1785 : let946 := by timed Eq.symm lean_a333
                      have lean_s1786 : let133 := by timed Eq.symm lean_a332
                      have lean_s1787 : let34 := by timed Eq.symm lean_s1786
                      let lean_s1788 := by timed Eq.trans lean_s1785 lean_s1787
                      have lean_s1789 : let980 := by timed Eq.symm lean_a331
                      have lean_s1790 : let723 := by timed Eq.symm lean_s1789
                      have lean_s1791 : let979 := by timed flipCongrArg lean_s1790 [sx5fcount]
                      have lean_s1792 : let915 := by timed Eq.trans lean_s1788 lean_s1791
                      show let915 from lean_s1792
                ))))))
              have lean_s1786 : let975 := by liftOrNToImp lean_s1785, 3
              have lean_s1787 : let915 := by timed modusPonens lean_s1784 lean_s1786
              let lean_s1788 := by timed And.intro lean_s1782 lean_s1787
              have lean_s1789 : let1012 := by timed And.intro lean_a335 lean_s1788
              show let1012 from lean_s1789
  ))))))))))))
have lean_s1777 : let1124 := by liftOrNToImp lean_s1776, 6
have lean_s1778 : (Eq let84 let84) := by timed rfl
let lean_s1779 := by timed flipCongrArg lean_s1778 [Implies]
have lean_s1780 : let1014 := by timed falseIntro lean_s1419
have lean_s1781 : (Eq let1124 let86) := by timed congr lean_s1779 lean_s1780
have lean_s1782 : (Eq let1124 let85) := by timed Eq.trans lean_s1781 lean_r13
have lean_s1783 : let85 := by timed eqResolve lean_s1777 lean_s1782
have lean_s1784 : (Or let887 (Or let1122 let970)) := by timed flipNotAnd lean_s1783 [let59, let58, let34, let29, let21, let80]
have lean_s1785 : (Or let197 (Or let887 (Or let966 (Or let1122 let963)))) := by permutateOr lean_s1784, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1786 := by R1 lean_s1775, lean_s1785, let80, [(- 1), (- 1)]
have lean_s1787 : (Or let887 (Or let966 (Or let1122 (Or let962 (Or let887 (Or let1122 let1123)))))) := by R2 lean_s1786, lean_s1359, let21, [(- 1), 0]
have lean_s1788 : let1123 := by factor lean_s1787, (- 1)
let lean_s1789 := by R2 lean_s1788, lean_s1431, let29, [(- 1), (- 1)]
let lean_s1790 := by R1 lean_s1789, lean_s1434, let349, [(- 1), (- 1)]
let lean_s1791 := by R1 lean_s1790, lean_s1440, let148, [(- 1), (- 1)]
let lean_s1792 := by R2 lean_s1791, lean_s1714, let352, [(- 1), 0]
let lean_s1793 := by R2 lean_s1792, lean_s1717, let58, [(- 1), (- 1)]
have lean_s1794 : (Or let887 (Or let966 let1121)) := by R2 lean_s1793, lean_s1720, let351, [(- 1), (- 1)]
have lean_s1795 : (Or let887 (Or let966 let907)) := by factor lean_s1794, (- 1)
let lean_s1796 := by R2 lean_s1795, lean_s1705, let353, [(- 1), (- 1)]
have lean_s1797 : (Or let887 (Or let966 let1120)) := by R1 lean_s1796, lean_s1693, let36, [(- 1), (- 1)]
have lean_s1798 : let1120 := by factor lean_s1797, (- 1)
let lean_s1799 := by R2 lean_s1798, lean_s1486, let34, [(- 1), (- 1)]
have lean_s1800 : (Or let887 let887) := by R1 lean_s1799, lean_s1755, let373, [(- 1), (- 1)]
have lean_s1801 : let887 := by factor lean_s1800, 1
have lean_s1802 : let375 := by R1 lean_s1365, lean_s1801, let59, [(- 1), 0]
have lean_s1803 : let38 := by R2 lean_s1363, lean_s1802, let375, [(- 1), 0]
let lean_s1804 := by R2 lean_s1360, lean_s1803, let38, [(- 1), 0]
have lean_s1805 : let1158 :=
  (scope (fun lean_a331 : let284 =>
    have lean_s1805 : let1158 :=
      (scope (fun lean_a332 : let284 =>
        have lean_s1805 : let285 := by timed Eq.symm lean_a332
        have lean_s1806 : let284 := by timed Eq.symm lean_s1805
        let lean_s1807 := by timed flipCongrArg lean_s1806 [Eq]
        have lean_s1808 : let168 := by timed rfl
        have lean_s1809 : (Eq let148 let156) := by timed congr lean_s1807 lean_s1808
        have lean_s1810 : (Eq let157 let712) := by timed flipCongrArg lean_r38 [Not]
        have lean_s1811 : (Eq let157 True) := by timed Eq.trans lean_s1810 lean_r259
        have lean_s1812 : (Eq let158 True) := by timed Eq.trans lean_r36 lean_s1811
        have lean_s1813 : let158 := by timed trueElim lean_s1812
        have lean_s1814 : (Eq let148 False) := by timed Eq.trans lean_s1809 lean_s1813
        have lean_s1815 : let900 := by timed falseElim lean_s1814
        show let900 from lean_s1815
      ))
    have lean_s1806 : let1159 := by liftOrNToImp lean_s1805, 1
    have lean_s1807 : let900 := by timed modusPonens lean_a331 lean_s1806
    show let900 from lean_s1807
  ))
have lean_s1806 : let1159 := by liftOrNToImp lean_s1805, 1
have lean_s1807 : let1158 := by timed impliesElim lean_s1806
have lean_s1808 : (Or let900 let1155) := by permutateOr lean_s1807, [1, 0], (- 1)
have lean_s1809 : (Or let906 let284) := by timed @cnfAndPos [let352, let284] 1
have lean_s1810 : (Or let284 let906) := by permutateOr lean_s1809, [1, 0], (- 1)
have lean_s1811 : let284 := by R2 lean_s1810, lean_s1802, let375, [(- 1), 0]
have lean_s1812 : let900 := by R2 lean_s1808, lean_s1811, let284, [(- 1), 0]
have lean_s1813 : let888 := by R1 lean_s1751, lean_s1812, let148, [(- 1), 0]
have lean_s1814 : let34 := by R1 lean_s1486, lean_s1813, let373, [(- 1), 0]
let lean_s1815 := by R2 lean_s1804, lean_s1814, let34, [(- 1), 0]
have lean_s1816 : let1156 :=
  (scope (fun lean_a332 : let284 =>
    have lean_s1816 : let1156 :=
      (scope (fun lean_a332 : let284 =>
        have lean_s1816 : let285 := by timed Eq.symm lean_a332
        have lean_s1817 : let284 := by timed Eq.symm lean_s1816
        let lean_s1818 := by timed flipCongrArg lean_s1817 [Eq]
        have lean_s1819 : let183 := by timed rfl
        have lean_s1820 : (Eq let351 let52) := by timed congr lean_s1818 lean_s1819
        have lean_s1821 : (Eq let53 let712) := by timed flipCongrArg lean_r5 [Not]
        have lean_s1822 : (Eq let53 True) := by timed Eq.trans lean_s1821 lean_r259
        have lean_s1823 : (Eq let54 True) := by timed Eq.trans lean_r4 lean_s1822
        have lean_s1824 : let54 := by timed trueElim lean_s1823
        have lean_s1825 : let1119 := by timed Eq.trans lean_s1820 lean_s1824
        have lean_s1826 : let1114 := by timed falseElim lean_s1825
        show let1114 from lean_s1826
      ))
    have lean_s1817 : let1157 := by liftOrNToImp lean_s1816, 1
    have lean_s1818 : let1114 := by timed modusPonens lean_a332 lean_s1817
    show let1114 from lean_s1818
  ))
have lean_s1817 : let1157 := by liftOrNToImp lean_s1816, 1
have lean_s1818 : let1156 := by timed impliesElim lean_s1817
have lean_s1819 : let1114 := by R2 lean_s1818, lean_s1811, let284, [(- 1), 0]
have lean_s1820 : let907 := by R1 lean_s1720, lean_s1819, let351, [(- 1), 0]
have lean_s1821 : let36 := by R1 lean_s1705, lean_s1820, let353, [(- 1), 0]
let lean_s1822 := by R2 lean_s1815, lean_s1821, let36, [(- 1), 0]
have lean_s1823 : let903 := by R1 lean_s1434, lean_s1812, let148, [(- 1), 0]
have lean_s1824 : let29 := by R1 lean_s1431, lean_s1823, let349, [(- 1), 0]
let lean_s1825 := by R2 lean_s1822, lean_s1824, let29, [(- 1), 0]
let lean_s1826 := by R1 lean_s1346, lean_s1381, let371, [(- 1), (- 1)]
have lean_s1827 : (Or let1160 (Or let908 (Or let966 (Or let1044 (Or let962 (Or let1095 let1143)))))) :=
  (scope (fun lean_a332 : let38 =>
    (scope (fun lean_a333 : let36 =>
      (scope (fun lean_a334 : let34 =>
        (scope (fun lean_a335 : let44 =>
          (scope (fun lean_a336 : let29 =>
            (scope (fun lean_a337 : let43 =>
              (scope (fun lean_a338 : let21 =>
                (scope (fun lean_a339 : let15 =>
                  have lean_s1827 : let1056 := by timed Eq.symm lean_r128
                  have lean_s1828 : let468 := by timed eqResolve lean_a339 lean_s1827
                  let lean_s1829 := by timed And.intro lean_a336 lean_a333
                  have lean_s1830 : let1107 := by timed And.intro lean_a337 lean_s1829
                  have lean_s1831 : let1109 :=
                    (scope (fun lean_a332 : let43 =>
                      (scope (fun lean_a333 : let29 =>
                        (scope (fun lean_a334 : let36 =>
                          have lean_s1831 : let953 := by timed Eq.symm lean_a334
                          have lean_s1832 : let424 := by timed Eq.symm lean_a333
                          have lean_s1833 : let29 := by timed Eq.symm lean_s1832
                          let lean_s1834 := by timed Eq.trans lean_s1831 lean_s1833
                          have lean_s1835 : let1110 := by timed Eq.symm lean_a332
                          have lean_s1836 : let43 := by timed Eq.symm lean_s1835
                          have lean_s1837 : let182 := by timed Eq.trans lean_s1834 lean_s1836
                          show let182 from lean_s1837
                    ))))))
                  have lean_s1832 : let1108 := by liftOrNToImp lean_s1831, 3
                  have lean_s1833 : let182 := by timed modusPonens lean_s1830 lean_s1832
                  have lean_s1834 : let1106 :=
                    (scope (fun lean_a332 : let182 =>
                      have lean_s1834 : let181 := by timed eqResolve lean_a332 lean_r48
                      have lean_s1835 : let1101 := by timed Eq.symm lean_s1834
                      show let1101 from lean_s1835
                    ))
                  have lean_s1835 : let1105 := by liftOrNToImp lean_s1834, 1
                  have lean_s1836 : let1101 := by timed modusPonens lean_s1833 lean_s1835
                  have lean_s1837 : let1102 := by timed And.intro lean_s1828 lean_s1836
                  have lean_s1838 : let1104 :=
                    (scope (fun lean_a332 : let468 =>
                      (scope (fun lean_a333 : let1101 =>
                        have lean_s1838 : let181 := by timed Eq.symm lean_a333
                        have lean_s1839 : let1101 := by timed Eq.symm lean_s1838
                        have lean_s1840 : let1055 := by timed Eq.symm lean_a332
                        have lean_s1841 : let468 := by timed Eq.symm lean_s1840
                        have lean_s1842 : let1058 := by timed flipCongrArg lean_s1841 [xx5fcount]
                        have lean_s1843 : let1011 := by timed Eq.trans lean_s1839 lean_s1842
                        show let1011 from lean_s1843
                    ))))
                  have lean_s1839 : let1103 := by liftOrNToImp lean_s1838, 2
                  have lean_s1840 : let1011 := by timed modusPonens lean_s1837 lean_s1839
                  let lean_s1841 := by timed And.intro lean_a334 lean_a332
                  let lean_s1842 := by timed And.intro lean_a335 lean_s1841
                  have lean_s1843 : let1170 := by timed And.intro lean_s1828 lean_s1842
                  have lean_s1844 : let1172 :=
                    (scope (fun lean_a332 : let468 =>
                      (scope (fun lean_a333 : let44 =>
                        (scope (fun lean_a334 : let34 =>
                          (scope (fun lean_a335 : let38 =>
                            have lean_s1844 : let1164 := by timed Eq.symm lean_a335
                            have lean_s1845 : let133 := by timed Eq.symm lean_a334
                            have lean_s1846 : let34 := by timed Eq.symm lean_s1845
                            let lean_s1847 := by timed Eq.trans lean_s1844 lean_s1846
                            have lean_s1848 : let173 := by timed Eq.symm lean_a333
                            have lean_s1849 : let44 := by timed Eq.symm lean_s1848
                            let lean_s1850 := by timed Eq.trans lean_s1847 lean_s1849
                            have lean_s1851 : let1055 := by timed Eq.symm lean_a332
                            have lean_s1852 : let468 := by timed Eq.symm lean_s1851
                            have lean_s1853 : let1054 := by timed flipCongrArg lean_s1852 [sx5fcount]
                            have lean_s1854 : let988 := by timed Eq.trans lean_s1850 lean_s1853
                            show let988 from lean_s1854
                    ))))))))
                  have lean_s1845 : let1171 := by liftOrNToImp lean_s1844, 4
                  have lean_s1846 : let988 := by timed modusPonens lean_s1843 lean_s1845
                  let lean_s1847 := by timed And.intro lean_s1840 lean_s1846
                  have lean_s1848 : let1138 := by timed And.intro lean_a338 lean_s1847
                  show let1138 from lean_s1848
  ))))))))))))))))
have lean_s1828 : let1169 := by liftOrNToImp lean_s1827, 8
have lean_s1829 : (Eq let47 let47) := by timed rfl
let lean_s1830 := by timed flipCongrArg lean_s1829 [Implies]
have lean_s1831 : let1140 := by timed falseIntro lean_s1404
have lean_s1832 : (Eq let1169 let49) := by timed congr lean_s1830 lean_s1831
have lean_s1833 : (Eq let1169 let48) := by timed Eq.trans lean_s1832 lean_r3
have lean_s1834 : let48 := by timed eqResolve lean_s1828 lean_s1833
have lean_s1835 : (Or let1160 let1099) := by timed flipNotAnd lean_s1834 [let38, let36, let34, let44, let29, let43, let21, let15]
have lean_s1836 : (Or let197 (Or let1160 let1097)) := by permutateOr lean_s1835, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1837 := by R1 lean_s1826, lean_s1836, let44, [(- 1), (- 1)]
let lean_s1838 := by R1 lean_s1561, lean_s1563, let399, [(- 1), 0]
have lean_s1839 : (Or let1160 (Or let908 (Or let966 let1001))) :=
  (scope (fun lean_a332 : let38 =>
    (scope (fun lean_a333 : let36 =>
      (scope (fun lean_a334 : let34 =>
        (scope (fun lean_a335 : let29 =>
          (scope (fun lean_a336 : let21 =>
            (scope (fun lean_a337 : let80 =>
              have lean_s1839 : let981 := by timed Eq.symm lean_r271
              have lean_s1840 : let723 := by timed eqResolve lean_a337 lean_s1839
              let lean_s1841 := by timed And.intro lean_a335 lean_a333
              have lean_s1842 : let983 := by timed And.intro lean_s1840 lean_s1841
              have lean_s1843 : let986 :=
                (scope (fun lean_a332 : let723 =>
                  (scope (fun lean_a333 : let29 =>
                    (scope (fun lean_a334 : let36 =>
                      have lean_s1843 : let953 := by timed Eq.symm lean_a334
                      have lean_s1844 : let424 := by timed Eq.symm lean_a333
                      have lean_s1845 : let29 := by timed Eq.symm lean_s1844
                      let lean_s1846 := by timed Eq.trans lean_s1843 lean_s1845
                      have lean_s1847 : let980 := by timed Eq.symm lean_a332
                      have lean_s1848 : let723 := by timed Eq.symm lean_s1847
                      have lean_s1849 : let987 := by timed flipCongrArg lean_s1848 [xx5fcount]
                      have lean_s1850 : let916 := by timed Eq.trans lean_s1846 lean_s1849
                      show let916 from lean_s1850
                ))))))
              have lean_s1844 : let984 := by liftOrNToImp lean_s1843, 3
              have lean_s1845 : let916 := by timed modusPonens lean_s1842 lean_s1844
              let lean_s1846 := by timed And.intro lean_a334 lean_a332
              have lean_s1847 : let1167 := by timed And.intro lean_s1840 lean_s1846
              have lean_s1848 : (Or let977 let1168) :=
                (scope (fun lean_a332 : let723 =>
                  (scope (fun lean_a333 : let34 =>
                    (scope (fun lean_a334 : let38 =>
                      have lean_s1848 : let1164 := by timed Eq.symm lean_a334
                      have lean_s1849 : let133 := by timed Eq.symm lean_a333
                      have lean_s1850 : let34 := by timed Eq.symm lean_s1849
                      let lean_s1851 := by timed Eq.trans lean_s1848 lean_s1850
                      have lean_s1852 : let980 := by timed Eq.symm lean_a332
                      have lean_s1853 : let723 := by timed Eq.symm lean_s1852
                      have lean_s1854 : let979 := by timed flipCongrArg lean_s1853 [sx5fcount]
                      have lean_s1855 : let988 := by timed Eq.trans lean_s1851 lean_s1854
                      show let988 from lean_s1855
                ))))))
              have lean_s1849 : (Implies let1167 let988) := by liftOrNToImp lean_s1848, 3
              have lean_s1850 : let988 := by timed modusPonens lean_s1847 lean_s1849
              let lean_s1851 := by timed And.intro lean_s1845 lean_s1850
              have lean_s1852 : let989 := by timed And.intro lean_a336 lean_s1851
              show let989 from lean_s1852
  ))))))))))))
have lean_s1840 : let1165 := by liftOrNToImp lean_s1839, 6
have lean_s1841 : (Eq let633 let633) := by timed rfl
let lean_s1842 := by timed flipCongrArg lean_s1841 [Implies]
have lean_s1843 : let991 := by timed falseIntro lean_s1352
have lean_s1844 : (Eq let1165 let635) := by timed congr lean_s1842 lean_s1843
have lean_s1845 : (Eq let1165 let634) := by timed Eq.trans lean_s1844 lean_r239
have lean_s1846 : let634 := by timed eqResolve lean_s1840 lean_s1845
have lean_s1847 : (Or let1160 let971) := by timed flipNotAnd lean_s1846 [let38, let36, let34, let29, let21, let80]
have lean_s1848 : (Or let197 (Or let1160 let967)) := by permutateOr lean_s1847, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1849 := by R2 lean_s1848, lean_s1824, let29, [(- 1), 0]
let lean_s1850 := by R2 lean_s1849, lean_s1814, let34, [(- 1), 0]
let lean_s1851 := by R2 lean_s1850, lean_s1821, let36, [(- 1), 0]
let lean_s1852 := by R2 lean_s1851, lean_s1803, let38, [(- 1), 0]
have lean_s1853 : let960 := by R2 lean_s1852, lean_s1359, let21, [(- 1), 0]
let lean_s1854 := by R1 lean_s1838, lean_s1853, let80, [(- 1), 0]
have lean_s1855 : (Or let1160 (Or let908 (Or let197 (Or let458 let989)))) :=
  (scope (fun lean_a332 : let38 =>
    (scope (fun lean_a333 : let36 =>
      (scope (fun lean_a334 : let21 =>
        (scope (fun lean_a335 : let74 =>
          have lean_s1855 : let947 := by timed Eq.symm lean_r266
          have lean_s1856 : let719 := by timed eqResolve lean_a335 lean_s1855
          have lean_s1857 : let948 := by timed And.intro lean_s1856 lean_a333
          have lean_s1858 : let951 :=
            (scope (fun lean_a332 : let719 =>
              (scope (fun lean_a333 : let36 =>
                have lean_s1858 : let953 := by timed Eq.symm lean_a333
                have lean_s1859 : let945 := by timed Eq.symm lean_a332
                have lean_s1860 : let719 := by timed Eq.symm lean_s1859
                have lean_s1861 : let952 := by timed flipCongrArg lean_s1860 [xx5fcount]
                have lean_s1862 : let916 := by timed Eq.trans lean_s1858 lean_s1861
                show let916 from lean_s1862
            ))))
          have lean_s1859 : let949 := by liftOrNToImp lean_s1858, 2
          have lean_s1860 : let916 := by timed modusPonens lean_s1857 lean_s1859
          have lean_s1861 : let1162 := by timed And.intro lean_s1856 lean_a332
          have lean_s1862 : (Or let942 let1163) :=
            (scope (fun lean_a332 : let719 =>
              (scope (fun lean_a333 : let38 =>
                have lean_s1862 : let1164 := by timed Eq.symm lean_a333
                have lean_s1863 : let945 := by timed Eq.symm lean_a332
                have lean_s1864 : let719 := by timed Eq.symm lean_s1863
                have lean_s1865 : let944 := by timed flipCongrArg lean_s1864 [sx5fcount]
                have lean_s1866 : let988 := by timed Eq.trans lean_s1862 lean_s1865
                show let988 from lean_s1866
            ))))
          have lean_s1863 : (Implies let1162 let988) := by liftOrNToImp lean_s1862, 2
          have lean_s1864 : let988 := by timed modusPonens lean_s1861 lean_s1863
          let lean_s1865 := by timed And.intro lean_s1860 lean_s1864
          have lean_s1866 : let989 := by timed And.intro lean_a334 lean_s1865
          show let989 from lean_s1866
  ))))))))
have lean_s1856 : let1161 := by liftOrNToImp lean_s1855, 4
have lean_s1857 : (Eq let99 let99) := by timed rfl
let lean_s1858 := by timed flipCongrArg lean_s1857 [Implies]
have lean_s1859 : let991 := by timed falseIntro lean_s1352
have lean_s1860 : (Eq let1161 let101) := by timed congr lean_s1858 lean_s1859
have lean_s1861 : (Eq let1161 let100) := by timed Eq.trans lean_s1860 lean_r18
have lean_s1862 : let100 := by timed eqResolve lean_s1856 lean_s1861
have lean_s1863 : (Or let1160 let914) := by timed flipNotAnd lean_s1862 [let38, let36, let21, let74]
have lean_s1864 : (Or let197 (Or let1160 let912)) := by permutateOr lean_s1863, [2, 0, 1, 3], (- 1)
let lean_s1865 := by R2 lean_s1864, lean_s1359, let21, [(- 1), 0]
let lean_s1866 := by R2 lean_s1865, lean_s1803, let38, [(- 1), 0]
have lean_s1867 : let458 := by R2 lean_s1866, lean_s1821, let36, [(- 1), 0]
let lean_s1868 := by R1 lean_s1584, lean_s1867, let74, [(- 1), 0]
have lean_s1869 : let954 := by R2 lean_s1868, lean_s1586, let398, [(- 1), 0]
have lean_s1870 : let15 := by R2 lean_s1854, lean_s1869, let954, [(- 1), 0]
let lean_s1871 := by R2 lean_s1837, lean_s1870, let15, [(- 1), 0]
let lean_s1872 := by R2 lean_s1871, lean_s1824, let29, [(- 1), 0]
let lean_s1873 := by R2 lean_s1872, lean_s1814, let34, [(- 1), 0]
let lean_s1874 := by R2 lean_s1873, lean_s1821, let36, [(- 1), 0]
let lean_s1875 := by R2 lean_s1874, lean_s1803, let38, [(- 1), 0]
let lean_s1876 := by R2 lean_s1875, lean_s1359, let21, [(- 1), 0]
let lean_s1877 := by R1 lean_s1876, lean_s1386, let370, [(- 1), (- 1)]
let lean_s1878 := by R2 lean_s1877, lean_s1390, let43, [(- 1), (- 1)]
have lean_s1879 : let1089 := by R2 lean_s1878, lean_s1393, let221, [(- 1), (- 1)]
have lean_s1880 : let905 := by factor lean_s1879, 1
have lean_s1881 : let25 := by R1 lean_s1397, lean_s1880, let346, [(- 1), 0]
let lean_s1882 := by R2 lean_s1825, lean_s1881, let25, [(- 1), 0]
have lean_s1883 : let1044 := by R2 lean_s1882, lean_s1870, let15, [(- 1), 0]
have lean_s1884 : let371 := by R1 lean_s1346, lean_s1883, let44, [(- 1), 0]
have lean_s1885 : let32 := by R2 lean_s1344, lean_s1884, let371, [(- 1), 0]
let lean_s1886 := by R2 lean_s11, lean_s1885, let32, [(- 1), 0]
let lean_s1887 := by R2 lean_s1886, lean_s1881, let25, [(- 1), 0]
let lean_s1888 := by R2 lean_s1887, lean_s1870, let15, [(- 1), 0]
let lean_s1889 := by R2 lean_s1888, lean_s1824, let29, [(- 1), 0]
let lean_s1890 := by R2 lean_s1889, lean_s1814, let34, [(- 1), 0]
let lean_s1891 := by R2 lean_s1890, lean_s1821, let36, [(- 1), 0]
let lean_s1892 := by R2 lean_s1891, lean_s1803, let38, [(- 1), 0]
exact (show False from by R2 lean_s1892, lean_s1359, let21, [0, 0])


