open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {distance : Int}
variable {fmtx5flength : Int}
variable {arg0 : Int}
variable {xx5fcount : (Int -> Int)}
variable {selectx5fformat : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {percent : Int}
variable {s : Int}
variable {adrx5flo : Int}
variable {adrx5fmedlo : Int}
variable {fmt0 : Int}
variable {fmt1 : Int}
variable {adrx5fmedhi : Int}
variable {adrx5fhi : Int}
variable {fmt1 : Int}
variable {s : Int}
variable {selectx5fformat : (Int -> Int)}
variable {arg1 : Int}
variable {x : Int}
variable {arg1 : Int}
variable {adrx5fhi : Int}
variable {arg0 : Int}
variable {fmtx5flength : Int}
variable {adrx5flo : Int}
variable {x : Int}
variable {percent : Int}
variable {distance : Int}
variable {adrx5fmedhi : Int}
variable {adrx5fmedlo : Int}
variable {xx5fcount : (Int -> Int)}
variable {fmt0 : Int}

theorem th0 :
  let let1 := (Int.ofNat 2)
  let let2 := (sx5fcount let1)
  let let3 := (Eq let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 let2)
  let let7 := (Eq let4 let6)
  let let8 := (Neg.neg (Rat.ofInt 3))
  let let9 := (Neg.neg (Rat.ofInt 5))
  let let10 := (Rat.ofInt 0)
  let let11 := (binrel% HAdd.hAdd let10 let9)
  let let12 := (Rat.ofInt 2)
  let let13 := (binrel% HAdd.hAdd let12 let11)
  let let14 := (Int.ofNat 4)
  let let15 := (Eq fmt1 let14)
  let let16 := (Int.ofNat 5)
  let let17 := (Neg.neg let1)
  let let18 := (binrel% HAdd.hAdd let17 fmt1)
  let let19 := (xx5fcount let18)
  let let20 := (sx5fcount let18)
  let let21 := (binrel% HAdd.hAdd let20 let19)
  let let22 := (binrel% GE.ge let21 let16)
  let let23 := (And let22 let15)
  let let24 := (xx5fcount let1)
  let let25 := (xx5fcount let4)
  let let26 := (Eq let25 let24)
  let let27 := (And let26 let23)
  let let28 := (Int.ofNat 0)
  let let29 := (xx5fcount let28)
  let let30 := (Eq let29 let25)
  let let31 := (And let30 let27)
  let let32 := (sx5fcount let4)
  let let33 := (Eq let32 let2)
  let let34 := (And let33 let31)
  let let35 := (sx5fcount let28)
  let let36 := (Eq let35 let32)
  let let37 := (And let36 let34)
  let let38 := (Eq let29 let28)
  let let39 := (And let38 let37)
  let let40 := (Eq let35 let4)
  let let41 := (And let40 let39)
  let let42 := (Not let41)
  let let43 := (Implies let41 False)
  let let44 := (binrel% HAdd.hAdd let5 let24)
  let let45 := (Eq let25 let44)
  let let46 := (And let36 (And let33 (And let30 (And let45 let23))))
  let let47 := (And let38 let46)
  let let48 := (And let40 let47)
  let let49 := (Not let48)
  let let50 := (Implies let48 False)
  let let51 := (Eq fmt1 let1)
  let let52 := (And let22 let51)
  let let53 := (And let38 let52)
  let let54 := (And let40 let53)
  let let55 := (Not let54)
  let let56 := (Implies let54 False)
  let let57 := (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let12 let9))
  let let58 := (Eq let29 let4)
  let let59 := (Eq let35 let28)
  let let60 := (And let59 (And let58 let46))
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (Eq let32 let6)
  let let64 := (And let36 (And let63 let31))
  let let65 := (And let59 (And let58 let64))
  let let66 := (Not let65)
  let let67 := (Implies let65 False)
  let let68 := (And let59 (And let58 let37))
  let let69 := (Not let68)
  let let70 := (Implies let68 False)
  let let71 := (And let59 (And let58 let52))
  let let72 := (Not let71)
  let let73 := (Implies let71 False)
  let let74 := (Int.ofNat 3)
  let let75 := (Eq fmt1 let74)
  let let76 := (And let22 let75)
  let let77 := (And let30 let76)
  let let78 := (And let36 let77)
  let let79 := (And let59 (And let58 let78))
  let let80 := (Not let79)
  let let81 := (Implies let79 False)
  let let82 := (binrel% HAdd.hAdd let4 let25)
  let let83 := (binrel% HAdd.hAdd let25 let4)
  let let84 := (Int.ofNat 19)
  let let85 := (Neg.neg let84)
  let let86 := (binrel% HMul.hMul let5 let84)
  let let87 := (selectx5fformat let28)
  let let88 := (Eq adrx5fmedlo let87)
  let let89 := (Eq let87 adrx5fmedlo)
  let let90 := (Eq let24 let82)
  let let91 := (xx5fcount let74)
  let let92 := (Eq let24 (binrel% HAdd.hAdd let5 let91))
  let let93 := (binrel% HAdd.hAdd let4 let24)
  let let94 := (Eq let91 let93)
  let let95 := (And let38 let78)
  let let96 := (And let40 let95)
  let let97 := (Not let96)
  let let98 := (Implies let96 False)
  let let99 := (Eq let24 let91)
  let let100 := (Eq let91 let24)
  let let101 := (selectx5fformat let14)
  let let102 := (Eq adrx5fmedlo let101)
  let let103 := (Eq let101 adrx5fmedlo)
  let let104 := (binrel% HMul.hMul let14 let19)
  let let105 := (binrel% HMul.hMul let14 let20)
  let let106 := (binrel% HAdd.hAdd let105 let104)
  let let107 := (binrel% HAdd.hAdd let85 let106)
  let let108 := (binrel% HAdd.hAdd let17 let107)
  let let109 := (Eq adrx5fhi let101)
  let let110 := (Eq let101 adrx5fhi)
  let let111 := (selectx5fformat let16)
  let let112 := (Eq percent let111)
  let let113 := (Eq let111 percent)
  let let114 := (binrel% HAdd.hAdd fmt1 let28)
  let let115 := (binrel% HAdd.hAdd let17 let114)
  let let116 := (xx5fcount let16)
  let let117 := (xx5fcount let14)
  let let118 := (Eq let117 (binrel% HAdd.hAdd let5 let116))
  let let119 := (binrel% HAdd.hAdd let4 let117)
  let let120 := (Eq let116 let119)
  let let121 := (Eq fmt0 arg1)
  let let122 := (Eq arg1 fmt0)
  let let123 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 16)) let106)
  let let124 := (selectx5fformat let123)
  let let125 := (Eq let124 let14)
  let let126 := (Eq let14 let124)
  let let127 := (Eq let32 let35)
  let let128 := (Eq x let101)
  let let129 := (Eq let101 x)
  let let130 := (binrel% HAdd.hAdd let4 fmt0)
  let let131 := (binrel% HAdd.hAdd fmt0 let4)
  let let132 := (binrel% HAdd.hAdd let4 let32)
  let let133 := (binrel% HAdd.hAdd let32 let4)
  let let134 := (Eq let28 let18)
  let let135 := (binrel% HAdd.hAdd arg1 let74)
  let let136 := (selectx5fformat let135)
  let let137 := (Eq let136 adrx5fhi)
  let let138 := (binrel% HAdd.hAdd arg1 let1)
  let let139 := (selectx5fformat let138)
  let let140 := (Eq let139 adrx5fmedhi)
  let let141 := (binrel% HAdd.hAdd arg1 let4)
  let let142 := (selectx5fformat let141)
  let let143 := (Eq let142 adrx5fmedlo)
  let let144 := (selectx5fformat arg1)
  let let145 := (Eq let144 adrx5flo)
  let let146 := (binrel% HAdd.hAdd fmt1 let4)
  let let147 := (selectx5fformat let146)
  let let148 := (Eq let147 s)
  let let149 := (selectx5fformat fmt1)
  let let150 := (Eq let149 percent)
  let let151 := (And let150 (And let148 (And let145 (And let143 (And let140 let137)))))
  let let152 := (And (And (And (And (And let150 let148) let145) let143) let140) let137)
  let let153 := (Eq percent let149)
  let let154 := (binrel% HAdd.hAdd let4 fmt1)
  let let155 := (Int.ofNat 6)
  let let156 := (selectx5fformat let155)
  let let157 := (Eq x let156)
  let let158 := (Eq let156 x)
  let let159 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let106)
  let let160 := (Eq let28 let159)
  let let161 := (And let59 let39)
  let let162 := (Not let161)
  let let163 := (Implies let161 False)
  let let164 := (selectx5fformat let154)
  let let165 := (Eq s let164)
  let let166 := (Eq let164 s)
  let let167 := (selectx5fformat let74)
  let let168 := (Eq adrx5fmedhi let167)
  let let169 := (Eq let167 adrx5fmedhi)
  let let170 := (binrel% HAdd.hAdd let117 let4)
  let let171 := (Eq adrx5fhi let111)
  let let172 := (Eq let111 adrx5fhi)
  let let173 := (Eq adrx5flo let144)
  let let174 := (binrel% HAdd.hAdd let5 arg1)
  let let175 := (Eq fmt0 let174)
  let let176 := (Eq arg1 let130)
  let let177 := (Int.ofNat 120)
  let let178 := (Eq let167 let177)
  let let179 := (Eq let177 let167)
  let let180 := (binrel% HSub.hSub fmt1 let1)
  let let181 := (binrel% HSub.hSub let180 fmt0)
  let let182 := (xx5fcount let181)
  let let183 := (binrel% HMul.hMul let14 let182)
  let let184 := (sx5fcount let181)
  let let185 := (binrel% HMul.hMul let14 let184)
  let let186 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let185 let183))
  let let187 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let185) let183)
  let let188 := (Int.ofNat 37)
  let let189 := (Eq let177 let188)
  let let190 := (Not let189)
  let let191 := (Eq let189 False)
  let let192 := (binrel% HAdd.hAdd fmt0 let16)
  let let193 := (Eq fmt1 let192)
  let let194 := (binrel% HAdd.hAdd fmt0 let14)
  let let195 := (Eq fmt1 let194)
  let let196 := (binrel% HAdd.hAdd fmt0 let74)
  let let197 := (Eq fmt1 let196)
  let let198 := (binrel% HAdd.hAdd fmt0 let1)
  let let199 := (Eq fmt1 let198)
  let let200 := (Eq fmt1 let131)
  let let201 := (binrel% HAdd.hAdd fmt0 let28)
  let let202 := (Eq fmt1 let201)
  let let203 := (Or let202 (Or let200 (Or let199 (Or let197 (Or let195 let193)))))
  let let204 := (Or (Or (Or (Or (Or let202 let200) let199) let197) let195) let193)
  let let205 := (binrel% HAdd.hAdd let16 let28)
  let let206 := (binrel% HAdd.hAdd let1 arg1)
  let let207 := (binrel% HAdd.hAdd let74 fmt0)
  let let208 := (selectx5fformat let206)
  let let209 := (Eq adrx5fmedhi let208)
  let let210 := (Eq let208 adrx5fmedhi)
  let let211 := (Rat.ofInt 1)
  let let212 := (binrel% HAdd.hAdd let211 let9)
  let let213 := (binrel% HAdd.hAdd let211 let212)
  let let214 := (binrel% HAdd.hAdd let74 arg1)
  let let215 := (Eq let84 let84)
  let let216 := (Eq let155 let155)
  let let217 := (Int.ofNat 115)
  let let218 := (selectx5fformat let4)
  let let219 := (Eq let218 let217)
  let let220 := (Eq let217 let218)
  let let221 := (Eq let217 let217)
  let let222 := (Eq let101 let217)
  let let223 := (Eq let217 let101)
  let let224 := (Eq let2 let32)
  let let225 := (Eq let87 let188)
  let let226 := (Eq let188 let87)
  let let227 := (Eq let177 let177)
  let let228 := (Eq let2 let132)
  let let229 := (Eq let218 let177)
  let let230 := (Eq let177 let218)
  let let231 := (binrel% HAdd.hAdd let85 let84)
  let let232 := (Eq arg1 let198)
  let let233 := (Eq arg1 let131)
  let let234 := (Eq arg1 let201)
  let let235 := (Or let234 (Or let233 let232))
  let let236 := (Or (Or let234 let233) let232)
  let let237 := (Eq let28 let28)
  let let238 := (binrel% HAdd.hAdd let5 let32)
  let let239 := (Eq let35 let238)
  let let240 := (And let59 (And let38 (And let239 let34)))
  let let241 := (Not let240)
  let let242 := (Implies let240 False)
  let let243 := (Eq let177 let217)
  let let244 := (Eq let243 False)
  let let245 := (Neg.neg let14)
  let let246 := (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd (binrel% HMul.hMul let245 let20) (binrel% HMul.hMul let245 let19)))
  let let247 := (binrel% HAdd.hAdd let28 let246)
  let let248 := (binrel% HAdd.hAdd let4 let2)
  let let249 := (binrel% HAdd.hAdd let2 let4)
  let let250 := (Not let22)
  let let251 := (Not let250)
  let let252 := (And let59 let47)
  let let253 := (Not let252)
  let let254 := (Implies let252 False)
  let let255 := (Neg.neg let155)
  let let256 := (binrel% HAdd.hAdd let255 fmt1)
  let let257 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let28 let255))
  let let258 := (Eq let188 let188)
  let let259 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 25)) let106)
  let let260 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let255 let85)))))
  let let261 := (binrel% HAdd.hAdd let4 let91)
  let let262 := (binrel% HAdd.hAdd let91 let4)
  let let263 := (binrel% GE.ge let21 let155)
  let let264 := (binrel% GE.ge let259 let245)
  let let265 := (Eq let28 let107)
  let let266 := (Eq let218 let188)
  let let267 := (Eq let188 let218)
  let let268 := (Eq let87 let14)
  let let269 := (Eq let14 let87)
  let let270 := (selectx5fformat let107)
  let let271 := (Eq let270 let74)
  let let272 := (Eq let74 let270)
  let let273 := (binrel% HAdd.hAdd let16 fmt0)
  let let274 := (binrel% HMul.hMul let5 let4)
  let let275 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let274))
  let let276 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let277 := (binrel% HAdd.hAdd let276 let274)
  let let278 := (binrel% GE.ge let246 let4)
  let let279 := (binrel% GT.gt let211 let28)
  let let280 := (binrel% HAdd.hAdd let5 let107)
  let let281 := (And let59 let53)
  let let282 := (Not let281)
  let let283 := (Implies let281 False)
  let let284 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 20)) let106)
  let let285 := (Eq let280 let284)
  let let286 := (Eq adrx5fmedhi let101)
  let let287 := (Eq let101 adrx5fmedhi)
  let let288 := (binrel% HMul.hMul let5 let19)
  let let289 := (Eq let20 (binrel% HAdd.hAdd let16 let288))
  let let290 := (Eq let28 let284)
  let let291 := (Eq adrx5flo let101)
  let let292 := (Eq let101 adrx5flo)
  let let293 := (Not let15)
  let let294 := (Not let293)
  let let295 := (Eq let294 let15)
  let let296 := (binrel% HAdd.hAdd let4 arg1)
  let let297 := (And let38 let64)
  let let298 := (And let40 let297)
  let let299 := (Not let298)
  let let300 := (Implies let298 False)
  let let301 := (sx5fcount let14)
  let let302 := (sx5fcount let74)
  let let303 := (Eq let302 let301)
  let let304 := (Eq let301 let302)
  let let305 := (Eq let24 let4)
  let let306 := (Eq let28 let44)
  let let307 := (Eq let24 let25)
  let let308 := (binrel% HAdd.hAdd let74 let28)
  let let309 := (Eq x let167)
  let let310 := (Eq let167 x)
  let let311 := (Eq let87 let177)
  let let312 := (Eq let177 let87)
  let let313 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let106)
  let let314 := (binrel% HAdd.hAdd let1 let107)
  let let315 := (Eq let314 let313)
  let let316 := (Eq let167 let14)
  let let317 := (Eq let14 let167)
  let let318 := (Eq let108 let159)
  let let319 := (Eq adrx5flo let111)
  let let320 := (Eq let111 adrx5flo)
  let let321 := (binrel% HAdd.hAdd let24 let4)
  let let322 := (Eq let14 let14)
  let let323 := (Eq s let167)
  let let324 := (Eq let167 s)
  let let325 := (Eq let117 let116)
  let let326 := (Eq let116 let117)
  let let327 := (binrel% HAdd.hAdd let4 let107)
  let let328 := (selectx5fformat let1)
  let let329 := (Eq let328 let74)
  let let330 := (Eq let74 let328)
  let let331 := (binrel% GE.ge let107 let28)
  let let332 := (binrel% HAdd.hAdd let5 let276)
  let let333 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let5))
  let let334 := (Eq x let87)
  let let335 := (Eq let87 x)
  let let336 := (selectx5fformat let313)
  let let337 := (Eq let336 let14)
  let let338 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 18)) let106)
  let let339 := (selectx5fformat let338)
  let let340 := (Eq let339 let74)
  let let341 := (Eq let164 let217)
  let let342 := (Eq let149 let188)
  let let343 := (And let342 (And let341 (And let271 (And let340 (And let337 let125)))))
  let let344 := (Not let343)
  let let345 := (Eq fmt1 let16)
  let let346 := (Eq fmt1 let4)
  let let347 := (Eq fmt1 let28)
  let let348 := (Or let347 (Or let346 (Or let51 (Or let75 (Or let15 let345)))))
  let let349 := (Eq let156 let177)
  let let350 := (Eq let111 let188)
  let let351 := (And let350 let349)
  let let352 := (smtIte let351 let118 let325 Prop)
  let let353 := (Eq let91 let117)
  let let354 := (Eq let91 (binrel% HAdd.hAdd let5 let117))
  let let355 := (Eq let111 let177)
  let let356 := (Eq let101 let188)
  let let357 := (And let356 let355)
  let let358 := (smtIte let357 let354 let353 Prop)
  let let359 := (Eq let101 let177)
  let let360 := (Eq let167 let188)
  let let361 := (And let360 let359)
  let let362 := (smtIte let361 let92 let99 Prop)
  let let363 := (Eq let328 let188)
  let let364 := (And let363 let178)
  let let365 := (smtIte let364 let45 let26 Prop)
  let let366 := (binrel% HAdd.hAdd let5 let25)
  let let367 := (Eq let29 let366)
  let let368 := (Eq let328 let177)
  let let369 := (And let266 let368)
  let let370 := (smtIte let369 let367 let30 Prop)
  let let371 := (And let225 let229)
  let let372 := (smtIte let371 let58 let38 Prop)
  let let373 := (sx5fcount let16)
  let let374 := (Eq let301 let373)
  let let375 := (Eq let301 (binrel% HAdd.hAdd let5 let373))
  let let376 := (Eq let156 let217)
  let let377 := (And let350 let376)
  let let378 := (smtIte let377 let375 let374 Prop)
  let let379 := (Eq let302 (binrel% HAdd.hAdd let5 let301))
  let let380 := (Eq let111 let217)
  let let381 := (And let356 let380)
  let let382 := (smtIte let381 let379 let303 Prop)
  let let383 := (Eq let2 let302)
  let let384 := (Eq let2 (binrel% HAdd.hAdd let5 let302))
  let let385 := (And let360 let222)
  let let386 := (smtIte let385 let384 let383 Prop)
  let let387 := (Eq let167 let217)
  let let388 := (And let363 let387)
  let let389 := (smtIte let388 let63 let33 Prop)
  let let390 := (Eq let328 let217)
  let let391 := (And let266 let390)
  let let392 := (smtIte let391 let239 let36 Prop)
  let let393 := (And let225 let219)
  let let394 := (smtIte let393 let40 let59 Prop)
  let let395 := (Int.ofNat 255)
  let let396 := (Eq let111 let395)
  let let397 := (Eq let111 let14)
  let let398 := (Eq let111 let74)
  let let399 := (Eq let101 let395)
  let let400 := (Eq let101 let14)
  let let401 := (Eq let101 let74)
  let let402 := (Eq let167 let395)
  let let403 := (Eq let167 let74)
  let let404 := (Eq let328 let395)
  let let405 := (Eq let328 let14)
  let let406 := (Eq let218 let395)
  let let407 := (Eq let218 let14)
  let let408 := (Eq let218 let74)
  let let409 := (Eq let87 let395)
  let let410 := (Eq let87 let74)
  let let411 := (Eq let87 let217)
  let let412 := (Or let225 (Or let411 (Or let311 (Or let410 (Or let410 (Or let268 (Or let268 (Or let409 (Or let266 (Or let219 (Or let229 (Or let408 (Or let408 (Or let407 (Or let407 (Or let406 (Or let363 (Or let390 (Or let368 (Or let329 (Or let329 (Or let405 (Or let405 (Or let404 (Or let360 (Or let387 (Or let178 (Or let403 (Or let403 (Or let316 (Or let316 (Or let402 (Or let356 (Or let222 (Or let359 (Or let401 (Or let401 (Or let400 (Or let400 (Or let399 (Or let350 (Or let380 (Or let355 (Or let398 (Or let398 (Or let397 (Or let397 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let413 := (And let412 (And let394 (And let392 (And let389 (And let386 (And let382 (And let378 (And let372 (And let370 (And let365 (And let362 (And let358 (And let352 (And let348 (And let289 let344)))))))))))))))
  let let414 := (Not let263)
  let let415 := (binrel% GE.ge fmt1 let1)
  let let416 := (binrel% GE.ge fmt1 let16)
  let let417 := (Not let416)
  let let418 := (And let22 (And let417 (And let415 (And let414 let413))))
  let let419 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let22 (And let417 (And let415 (And let22 (And let414 (And True let413)))))))))))))))))
  let let420 := (Eq let74 let218)
  let let421 := (binrel% HAdd.hAdd let74 let107)
  let let422 := (Eq let327 let338)
  let let423 := (Eq let14 let328)
  let let424 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let84 let85))))
  let let425 := (binrel% HMul.hMul let5 fmt0)
  let let426 := (binrel% HAdd.hAdd fmt1 let425)
  let let427 := (binrel% HAdd.hAdd let17 let426)
  let let428 := (binrel% HAdd.hAdd let18 let425)
  let let429 := (Eq let177 let111)
  let let430 := (Eq x let218)
  let let431 := (Eq let218 x)
  let let432 := (binrel% HMul.hMul let211 let4)
  let let433 := (binrel% HAdd.hAdd let1 fmt0)
  let let434 := (Eq let188 let101)
  let let435 := (binrel% HMul.hMul let5 let85)
  let let436 := (binrel% HAdd.hAdd let435 let86)
  let let437 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 let436)))
  let let438 := (binrel% HAdd.hAdd let107 let436)
  let let439 := (Eq percent let87)
  let let440 := (Eq let87 percent)
  let let441 := (binrel% HMul.hMul let5 let155)
  let let442 := (binrel% HAdd.hAdd let435 (binrel% HAdd.hAdd let441 let86))
  let let443 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 let442)))
  let let444 := (binrel% HAdd.hAdd let107 let442)
  let let445 := (Eq let74 let167)
  let let446 := (Not let51)
  let let447 := (Not let446)
  let let448 := (Eq let51 let447)
  let let449 := (Eq let447 let51)
  let let450 := (Eq percent let167)
  let let451 := (Eq let167 percent)
  let let452 := (selectx5fformat let296)
  let let453 := (Eq adrx5fmedlo let452)
  let let454 := (Eq let452 adrx5fmedlo)
  let let455 := (binrel% HAdd.hAdd let14 let28)
  let let456 := (Eq let14 let218)
  let let457 := (Eq let421 let123)
  let let458 := (Neg.neg (Rat.ofInt 4))
  let let459 := (binrel% HAdd.hAdd let10 let212)
  let let460 := (Eq let1 let18)
  let let461 := (Eq adrx5flo let87)
  let let462 := (Eq let87 adrx5flo)
  let let463 := (binrel% HAdd.hAdd let1 let28)
  let let464 := (Eq s let87)
  let let465 := (Eq let87 s)
  let let466 := (Eq let74 let111)
  let let467 := (Eq s let328)
  let let468 := (Eq let328 s)
  let let469 := (Eq let14 let336)
  let let470 := (binrel% HMul.hMul let5 fmtx5flength)
  let let471 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let425 let470))
  let let472 := (binrel% GE.ge let471 let5)
  let let473 := (binrel% GE.ge fmt1 let332)
  let let474 := (Eq let177 let156)
  let let475 := (binrel% LE.le let10 let458)
  let let476 := (Eq let74 let74)
  let let477 := (Eq let217 let164)
  let let478 := (binrel% HSub.hSub let276 let4)
  let let479 := (binrel% GE.ge let256 let5)
  let let480 := (Eq let188 let111)
  let let481 := (binrel% LE.le let10 let8)
  let let482 := (selectx5fformat let214)
  let let483 := (Eq adrx5fhi let482)
  let let484 := (Eq let482 adrx5fhi)
  let let485 := (Or False (Or let289 False))
  let let486 := (binrel% HAdd.hAdd let17 arg1)
  let let487 := (Eq fmt0 let486)
  let let488 := (Eq arg1 let433)
  let let489 := (Eq let177 let101)
  let let490 := (Eq let188 let167)
  let let491 := (binrel% HAdd.hAdd let4 let301)
  let let492 := (Eq let373 let491)
  let let493 := (binrel% HMul.hMul let211 let1)
  let let494 := (Eq let188 let328)
  let let495 := (Eq let177 let328)
  let let496 := (Eq let217 let156)
  let let497 := (Eq let14 let111)
  let let498 := (binrel% HAdd.hAdd let4 let28)
  let let499 := (binrel% LE.le let10 let9)
  let let500 := (Eq let14 let101)
  let let501 := (Eq adrx5fmedlo let167)
  let let502 := (Eq let167 adrx5fmedlo)
  let let503 := (Eq let217 let167)
  let let504 := (Eq let188 let177)
  let let505 := (Not let504)
  let let506 := (Eq let504 False)
  let let507 := (binrel% HMul.hMul let5 distance)
  let let508 := (binrel% HMul.hMul let5 arg0)
  let let509 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let508 let507))
  let let510 := (binrel% GE.ge let509 let28)
  let let511 := (binrel% HAdd.hAdd arg0 distance)
  let let512 := (binrel% GE.ge arg1 let511)
  let let513 := (Eq let74 let101)
  let let514 := (Eq let74 let87)
  let let515 := (Eq let74 let339)
  let let516 := (Eq let107 let107)
  let let517 := (Eq percent let328)
  let let518 := (Eq let328 percent)
  let let519 := (Eq let2 let4)
  let let520 := (Eq let28 let6)
  let let521 := (binrel% HAdd.hAdd fmt1 let17)
  let let522 := (Eq let25 let29)
  let let523 := (binrel% HAdd.hAdd let4 let29)
  let let524 := (Eq let25 let523)
  let let525 := (Eq x let328)
  let let526 := (Eq let328 x)
  let let527 := (Eq percent let218)
  let let528 := (Eq let218 percent)
  let let529 := (Eq let373 let301)
  let let530 := (binrel% HAdd.hAdd let301 let4)
  let let531 := (Eq let217 let87)
  let let532 := (Eq s let156)
  let let533 := (Eq let156 s)
  let let534 := (binrel% HMul.hMul let5 let28)
  let let535 := (Rat.ofInt let19)
  let let536 := (binrel% HMul.hMul let211 let19)
  let let537 := (binrel% HAdd.hAdd let4 let302)
  let let538 := (Eq let301 let537)
  let let539 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let508 (binrel% HAdd.hAdd let470 let507)))
  let let540 := (binrel% GE.ge let539 let245)
  let let541 := (binrel% HAdd.hAdd let245 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let542 := (binrel% GE.ge arg1 let541)
  let let543 := (binrel% HAdd.hAdd let302 let4)
  let let544 := (binrel% HAdd.hAdd let511 fmtx5flength)
  let let545 := (binrel% HSub.hSub let544 let14)
  let let546 := (binrel% GE.ge arg1 let545)
  let let547 := (Not let546)
  let let548 := (binrel% LT.lt arg1 let545)
  let let549 := (Eq s let111)
  let let550 := (Eq let111 s)
  let let551 := (Eq let302 let2)
  let let552 := (Eq let25 let4)
  let let553 := (Eq let28 let366)
  let let554 := (Eq let302 let248)
  let let555 := (binrel% GE.ge let426 let1)
  let let556 := (Not let555)
  let let557 := (binrel% LE.le fmt1 let130)
  let let558 := (Eq s let101)
  let let559 := (Eq let101 s)
  let let560 := (Not False)
  let let561 := (binrel% HAdd.hAdd let4 let35)
  let let562 := (Eq let32 let561)
  let let563 := (Eq let15 let15)
  let let564 := (binrel% HAdd.hAdd let35 let4)
  let let565 := (Eq s let218)
  let let566 := (Eq let218 s)
  let let567 := (Eq let217 let177)
  let let568 := (Eq let567 False)
  let let569 := (binrel% HAdd.hAdd let14 fmt0)
  let let570 := (Eq let217 let328)
  let let571 := (Eq adrx5fmedhi let111)
  let let572 := (Eq let111 adrx5fmedhi)
  let let573 := (Not let567)
  let let574 := (Eq adrx5fmedlo let111)
  let let575 := (Eq let111 adrx5fmedlo)
  let let576 := (Eq adrx5fhi let167)
  let let577 := (Eq let167 adrx5fhi)
  let let578 := (Eq let15 let294)
  let let579 := (Eq adrx5flo let167)
  let let580 := (Eq let167 adrx5flo)
  let let581 := (Eq adrx5fhi let328)
  let let582 := (Eq let328 adrx5fhi)
  let let583 := (Eq let24 let1)
  let let584 := (Eq let4 let44)
  let let585 := (Eq let217 let111)
  let let586 := (Eq let4 let18)
  let let587 := (Eq let117 let91)
  let let588 := (Eq adrx5fmedhi let328)
  let let589 := (Eq let328 adrx5fmedhi)
  let let590 := (Eq adrx5fmedlo let328)
  let let591 := (Eq let328 adrx5fmedlo)
  let let592 := (Eq let117 let261)
  let let593 := (Eq adrx5flo let328)
  let let594 := (Eq let328 adrx5flo)
  let let595 := (Eq adrx5fhi let218)
  let let596 := (Eq let218 adrx5fhi)
  let let597 := (Eq adrx5fmedhi let218)
  let let598 := (Eq let218 adrx5fmedhi)
  let let599 := (Eq x let111)
  let let600 := (Eq let111 x)
  let let601 := (Eq adrx5fmedlo let218)
  let let602 := (Eq let218 adrx5fmedlo)
  let let603 := (Eq percent let101)
  let let604 := (Eq let101 percent)
  let let605 := (Eq adrx5flo let218)
  let let606 := (Eq let218 adrx5flo)
  let let607 := (Eq adrx5fhi let87)
  let let608 := (Eq let87 adrx5fhi)
  let let609 := (Eq adrx5fmedhi let87)
  let let610 := (Eq let87 adrx5fmedhi)
  let let611 := (binrel% HMul.hMul let5 let1)
  let let612 := (binrel% HAdd.hAdd fmt1 let611)
  let let613 := (binrel% HAdd.hAdd let29 let4)
  let let614 := (binrel% HAdd.hAdd let180 let425)
  let let615 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let245)))
  let let616 := (binrel% HMul.hMul let5 let14)
  let let617 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let616)))
  let let618 := (binrel% HAdd.hAdd let544 let616)
  let let619 := (Not let556)
  let let620 := (Eq let217 let188)
  let let621 := (Eq let620 False)
  let let622 := (binrel% LE.le fmt1 let131)
  let let623 := (Not let622)
  let let624 := (binrel% GT.gt fmt1 let131)
  let let625 := (Eq fmt0 let511)
  let let626 := (binrel% HAdd.hAdd fmt0 let507)
  let let627 := (Eq arg0 let626)
  let let628 := (binrel% HSub.hSub fmt0 distance)
  let let629 := (Not let152)
  let let630 := (Eq let116 let170)
  let let631 := (And let113 let158)
  let let632 := (smtIte let631 let630 let326 Prop)
  let let633 := (Eq let117 let262)
  let let634 := (And let604 let600)
  let let635 := (smtIte let634 let633 let587 Prop)
  let let636 := (Eq let91 let321)
  let let637 := (And let451 let129)
  let let638 := (smtIte let637 let636 let100 Prop)
  let let639 := (Eq let24 let83)
  let let640 := (And let518 let310)
  let let641 := (smtIte let640 let639 let307 Prop)
  let let642 := (Eq let25 let613)
  let let643 := (And let528 let526)
  let let644 := (smtIte let643 let642 let522 Prop)
  let let645 := (And let440 let431)
  let let646 := (smtIte let645 let58 let38 Prop)
  let let647 := (Eq let373 let530)
  let let648 := (And let113 let533)
  let let649 := (smtIte let648 let647 let529 Prop)
  let let650 := (Eq let301 let543)
  let let651 := (And let604 let550)
  let let652 := (smtIte let651 let650 let304 Prop)
  let let653 := (Eq let302 let249)
  let let654 := (And let451 let559)
  let let655 := (smtIte let654 let653 let551 Prop)
  let let656 := (Eq let2 let133)
  let let657 := (And let518 let324)
  let let658 := (smtIte let657 let656 let224 Prop)
  let let659 := (Eq let32 let564)
  let let660 := (And let528 let468)
  let let661 := (smtIte let660 let659 let127 Prop)
  let let662 := (And let440 let566)
  let let663 := (smtIte let662 let40 let59 Prop)
  let let664 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let440 let465) let335) let462) let89) let610) let608) let409) let528) let566) let431) let606) let602) let598) let596) let406) let518) let468) let526) let594) let591) let589) let582) let404) let451) let324) let310) let580) let502) let169) let577) let402) let604) let559) let129) let292) let103) let287) let110) let399) let113) let550) let600) let320) let575) let572) let172) let396)
  let let665 := (Eq arg1 let187)
  let let666 := (binrel% LT.lt fmt1 let478)
  let let667 := (binrel% GE.ge arg1 fmt0)
  let let668 := (Eq arg0 let628)
  let let669 := (Eq fmt0 let28)
  let let670 := (Eq x let177)
  let let671 := (Eq s let217)
  let let672 := (Eq percent let188)
  let let673 := (Eq adrx5fhi let14)
  let let674 := (Eq adrx5fmedhi let14)
  let let675 := (Eq adrx5fmedlo let74)
  let let676 := (Eq adrx5flo let74)
  let let677 := (Eq fmtx5flength let155)
  let let678 := (Eq distance let84)
  let let679 := (And let678 (And let677 (And let676 (And let675 (And let674 (And let673 (And let672 (And let671 (And let670 (And let669 (And let668 (And let667 (And let666 (And let624 (And let512 (And let548 (And let665 (And let664 (And let663 (And let661 (And let658 (And let655 (And let652 (And let649 (And let646 (And let644 (And let641 (And let638 (And let635 (And let632 (And let204 (And let236 let629))))))))))))))))))))))))))))))))
  let let680 := (And (And (And (And (And (And (And (And (And (And (And (And (And let678 let677) let676) let675) let674) let673) let672) let671) let670) (And (And (And (And (And (And (And let669 let668) let667) let666) let624) let512) let548) let665)) let664) (And (And (And (And (And (And (And (And (And (And (And let663 let661) let658) let655) let652) let649) let646) let644) let641) let638) let635) let632)) (And let204 let236)) let629)
  let let681 := (Eq arg0 let85)
  let let682 := (binrel% HAdd.hAdd let84 arg0)
  let let683 := (Eq let28 let682)
  let let684 := (binrel% HAdd.hAdd arg0 let84)
  let let685 := (Not let243)
  let let686 := (Not let620)
  let let687 := (binrel% HAdd.hAdd let10 let11)
  let let688 := (Neg.neg let211)
  let let689 := (binrel% HMul.hMul let688 let16)
  let let690 := (binrel% HAdd.hAdd let211 let11)
  let let691 := (binrel% HMul.hMul let211 let28)
  let let692 := (Eq let188 let149)
  let let693 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let5 let20) let288))
  let let694 := (Rat.ofInt let20)
  let let695 := (binrel% HAdd.hAdd let694 (binrel% HAdd.hAdd let535 let693))
  let let696 := (binrel% HMul.hMul let688 let21)
  let let697 := (binrel% HMul.hMul let211 let20)
  let let698 := (binrel% LT.lt let688 let28)
  let let699 := (Eq let51 let51)
  let let700 := (binrel% HMul.hMul let5 let107)
  let let701 := (And let59 let95)
  let let702 := (Not let701)
  let let703 := (Implies let701 False)
  let let704 := (And let59 (And let38 (And let239 let77)))
  let let705 := (Not let704)
  let let706 := (Implies let704 False)
  let let707 := (Or let440 (Or let465 (Or let335 (Or let462 (Or let89 (Or let610 (Or let608 (Or let409 (Or let528 (Or let566 (Or let431 (Or let606 (Or let602 (Or let598 (Or let596 (Or let406 (Or let518 (Or let468 (Or let526 (Or let594 (Or let591 (Or let589 (Or let582 (Or let404 (Or let451 (Or let324 (Or let310 (Or let580 (Or let502 (Or let169 (Or let577 (Or let402 (Or let604 (Or let559 (Or let129 (Or let292 (Or let103 (Or let287 (Or let110 (Or let399 (Or let113 (Or let550 (Or let600 (Or let320 (Or let575 (Or let572 (Or let172 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let708 := (Eq let32 let4)
  let let709 := (Eq let28 let238)
  let let710 := (And let59 (And let38 (And let36 (And let367 let76))))
  let let711 := (Not let710)
  let let712 := (Implies let710 False)
  let let713 := (binrel% GE.ge fmt1 let478)
  let let714 := (Not let713)
  let let715 := (Eq let416 let416)
  let let716 := (binrel% HMul.hMul let5 arg1)
  let let717 := (binrel% HAdd.hAdd fmt0 let716)
  let let718 := (binrel% GE.ge let717 let4)
  let let719 := (Not let718)
  let let720 := (Not let417)
  let let721 := (Eq let720 let416)
  let let722 := (Eq let416 let720)
  let let723 := (binrel% LT.lt fmt1 let16)
  let let724 := (And let59 (And let38 (And let36 (And let33 (And let367 let27)))))
  let let725 := (Not let724)
  let let726 := (Implies let724 False)
  let let727 := (And let59 let297)
  let let728 := (Not let727)
  let let729 := (Implies let727 False)
  let let730 := (And let153 (And let165 (And let173 (And let453 (And let209 let483)))))
  let let731 := (Not let730)
  let let732 := (Or let121 (Or let175 let487))
  let let733 := (Eq fmt1 let273)
  let let734 := (Eq fmt1 let569)
  let let735 := (Eq fmt1 let207)
  let let736 := (Eq fmt1 let433)
  let let737 := (Eq fmt1 let130)
  let let738 := (Eq fmt1 fmt0)
  let let739 := (Or let738 (Or let737 (Or let736 (Or let735 (Or let734 let733)))))
  let let740 := (And let112 let157)
  let let741 := (smtIte let740 let118 let325 Prop)
  let let742 := (And let603 let599)
  let let743 := (smtIte let742 let354 let353 Prop)
  let let744 := (And let450 let128)
  let let745 := (smtIte let744 let92 let99 Prop)
  let let746 := (And let517 let309)
  let let747 := (smtIte let746 let45 let26 Prop)
  let let748 := (And let527 let525)
  let let749 := (smtIte let748 let367 let30 Prop)
  let let750 := (And let439 let430)
  let let751 := (smtIte let750 let58 let38 Prop)
  let let752 := (And let112 let532)
  let let753 := (smtIte let752 let375 let374 Prop)
  let let754 := (And let603 let549)
  let let755 := (smtIte let754 let379 let303 Prop)
  let let756 := (And let450 let558)
  let let757 := (smtIte let756 let384 let383 Prop)
  let let758 := (And let517 let323)
  let let759 := (smtIte let758 let63 let33 Prop)
  let let760 := (And let527 let467)
  let let761 := (smtIte let760 let239 let36 Prop)
  let let762 := (And let439 let565)
  let let763 := (smtIte let762 let40 let59 Prop)
  let let764 := (Or let439 (Or let464 (Or let334 (Or let461 (Or let88 (Or let609 (Or let607 (Or let409 (Or let527 (Or let565 (Or let430 (Or let605 (Or let601 (Or let597 (Or let595 (Or let406 (Or let517 (Or let467 (Or let525 (Or let593 (Or let590 (Or let588 (Or let581 (Or let404 (Or let450 (Or let323 (Or let309 (Or let579 (Or let501 (Or let168 (Or let576 (Or let402 (Or let603 (Or let558 (Or let128 (Or let291 (Or let102 (Or let286 (Or let109 (Or let399 (Or let112 (Or let549 (Or let599 (Or let319 (Or let574 (Or let571 (Or let171 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let765 := (xx5fcount let427)
  let let766 := (binrel% HMul.hMul let14 let765)
  let let767 := (sx5fcount let427)
  let let768 := (binrel% HMul.hMul let14 let767)
  let let769 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let768 let766))
  let let770 := (Eq arg1 let769)
  let let771 := (Not let540)
  let let772 := (Not let472)
  let let773 := (And let678 (And let677 (And let676 (And let675 (And let674 (And let673 (And let672 (And let671 (And let670 (And let669 (And let625 (And let719 (And let772 (And let555 (And let510 (And let771 (And let770 (And let764 (And let763 (And let761 (And let759 (And let757 (And let755 (And let753 (And let751 (And let749 (And let747 (And let745 (And let743 (And let741 (And let739 (And let732 let731))))))))))))))))))))))))))))))))
  let let774 := (selectx5fformat let421)
  let let775 := (Eq let14 let774)
  let let776 := (selectx5fformat let314)
  let let777 := (Eq let14 let776)
  let let778 := (selectx5fformat let327)
  let let779 := (Eq let74 let778)
  let let780 := (And let692 (And let477 (And let272 (And let779 (And let777 let775)))))
  let let781 := (Not let780)
  let let782 := (Eq let28 let108)
  let let783 := (Eq let28 let280)
  let let784 := (Or let265 (Or let783 let782))
  let let785 := (Eq fmt1 let205)
  let let786 := (Eq fmt1 let455)
  let let787 := (Eq fmt1 let308)
  let let788 := (Eq fmt1 let463)
  let let789 := (Eq fmt1 let498)
  let let790 := (Or let347 (Or let789 (Or let788 (Or let787 (Or let786 let785)))))
  let let791 := (And let480 let474)
  let let792 := (smtIte let791 let118 let325 Prop)
  let let793 := (And let434 let429)
  let let794 := (smtIte let793 let354 let353 Prop)
  let let795 := (And let490 let489)
  let let796 := (smtIte let795 let92 let99 Prop)
  let let797 := (And let494 let179)
  let let798 := (smtIte let797 let45 let26 Prop)
  let let799 := (And let267 let495)
  let let800 := (smtIte let799 let367 let30 Prop)
  let let801 := (And let226 let230)
  let let802 := (smtIte let801 let58 let38 Prop)
  let let803 := (And let480 let496)
  let let804 := (smtIte let803 let375 let374 Prop)
  let let805 := (And let434 let585)
  let let806 := (smtIte let805 let379 let303 Prop)
  let let807 := (And let490 let223)
  let let808 := (smtIte let807 let384 let383 Prop)
  let let809 := (And let494 let503)
  let let810 := (smtIte let809 let63 let33 Prop)
  let let811 := (And let267 let570)
  let let812 := (smtIte let811 let239 let36 Prop)
  let let813 := (And let226 let220)
  let let814 := (smtIte let813 let40 let59 Prop)
  let let815 := (Or let226 (Or let531 (Or let312 (Or let514 (Or let514 (Or let269 (Or let269 (Or let409 (Or let267 (Or let220 (Or let230 (Or let420 (Or let420 (Or let456 (Or let456 (Or let406 (Or let494 (Or let570 (Or let495 (Or let330 (Or let330 (Or let423 (Or let423 (Or let404 (Or let490 (Or let503 (Or let179 (Or let445 (Or let445 (Or let317 (Or let317 (Or let402 (Or let434 (Or let223 (Or let489 (Or let513 (Or let513 (Or let500 (Or let500 (Or let399 (Or let480 (Or let585 (Or let429 (Or let466 (Or let466 (Or let497 (Or let497 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let816 := (binrel% HAdd.hAdd fmt1 let534)
  let let817 := (binrel% HAdd.hAdd let17 let816)
  let let818 := (xx5fcount let817)
  let let819 := (binrel% HMul.hMul let14 let818)
  let let820 := (sx5fcount let817)
  let let821 := (binrel% HMul.hMul let14 let820)
  let let822 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let821 let819))
  let let823 := (Eq let107 let822)
  let let824 := (binrel% GE.ge let444 let245)
  let let825 := (Not let824)
  let let826 := (binrel% GE.ge let438 let28)
  let let827 := (binrel% GE.ge let816 let1)
  let let828 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let534 let441))
  let let829 := (binrel% GE.ge let828 let5)
  let let830 := (Not let829)
  let let831 := (binrel% HAdd.hAdd let28 let700)
  let let832 := (binrel% GE.ge let831 let4)
  let let833 := (Not let832)
  let let834 := (Eq let28 let231)
  let let835 := (And let215 (And let216 (And let476 (And let476 (And let322 (And let322 (And let258 (And let221 (And let227 (And let237 (And let834 (And let833 (And let830 (And let827 (And let826 (And let825 (And let823 (And let815 (And let814 (And let812 (And let810 (And let808 (And let806 (And let804 (And let802 (And let800 (And let798 (And let796 (And let794 (And let792 (And let790 (And let784 let781))))))))))))))))))))))))))))))))
  let let836 := (Eq And And)
  let let837 := (Eq Or Or)
  let let838 := (Eq fmt1 fmt1)
  let let839 := (Eq let325 let325)
  let let840 := (Eq let118 let118)
  let let841 := (Eq let353 let353)
  let let842 := (Eq let354 let354)
  let let843 := (Eq let99 let99)
  let let844 := (Eq let92 let92)
  let let845 := (Eq let26 let26)
  let let846 := (Eq let45 let45)
  let let847 := (Eq let30 let30)
  let let848 := (Eq let367 let367)
  let let849 := (Eq let38 let38)
  let let850 := (Eq let58 let58)
  let let851 := (Eq let374 let374)
  let let852 := (Eq let375 let375)
  let let853 := (Eq let303 let303)
  let let854 := (Eq let379 let379)
  let let855 := (Eq let383 let383)
  let let856 := (Eq let384 let384)
  let let857 := (Eq let33 let33)
  let let858 := (Eq let63 let63)
  let let859 := (Eq let36 let36)
  let let860 := (Eq let239 let239)
  let let861 := (Eq let59 let59)
  let let862 := (Eq let40 let40)
  let let863 := (Eq let396 let396)
  let let864 := (Eq let399 let399)
  let let865 := (Eq let402 let402)
  let let866 := (Eq let404 let404)
  let let867 := (Eq let406 let406)
  let let868 := (Eq let409 let409)
  let let869 := (Eq let17 let17)
  let let870 := (Eq let245 let245)
  let let871 := (Eq let1 let1)
  let let872 := (Eq let5 let5)
  let let873 := (Eq let4 let4)
  let let874 := (Eq arg1 let107)
  let let875 := (And let669 (And let670 (And let671 (And let672 (And let673 (And let674 (And let675 (And let676 (And let677 let678)))))))))
  let let876 := (And let681 let875)
  let let877 := (Eq arg1 arg1)
  let let878 := (Eq arg0 arg0)
  let let879 := (Eq let28 let684)
  let let880 := (Eq arg1 let822)
  let let881 := (Eq let769 let822)
  let let882 := (Eq let766 let819)
  let let883 := (Eq let765 let818)
  let let884 := (Eq let427 let817)
  let let885 := (Eq let425 let534)
  let let886 := (Eq let768 let821)
  let let887 := (Eq let767 let820)
  let let888 := (Not let59)
  let let889 := (Not let391)
  let let890 := (Or let889 let889)
  let let891 := (Not let390)
  let let892 := (Or let891 let889)
  let let893 := (Not let368)
  let let894 := (Or let893 let891)
  let let895 := (Implies let368 let891)
  let let896 := (Not let363)
  let let897 := (Or let891 let896)
  let let898 := (Implies let390 let896)
  let let899 := (Eq let363 False)
  let let900 := (Or let363 let368)
  let let901 := (Not let266)
  let let902 := (Not let239)
  let let903 := (Or let363 let900)
  let let904 := (Not let369)
  let let905 := (Not let388)
  let let906 := (Not let364)
  let let907 := (Not let393)
  let let908 := (Not let371)
  let let909 := (Not let38)
  let let910 := (Or let888 let909)
  let let911 := (Or let888 (Or let909 let910))
  let let912 := (Or let909 let911)
  let let913 := (Or let909 let446)
  let let914 := (Or let250 let446)
  let let915 := (Or let909 let914)
  let let916 := (Eq let28 let20)
  let let917 := (Eq let28 let19)
  let let918 := (And let22 (And let917 let916))
  let let919 := (Implies let281 let918)
  let let920 := (Eq let918 False)
  let let921 := (Or (Not let916) False)
  let let922 := (Not let917)
  let let923 := (Eq let20 let28)
  let let924 := (Not let923)
  let let925 := (Or let924 False)
  let let926 := (binrel% HAdd.hAdd let691 let689)
  let let927 := (binrel% HAdd.hAdd let691 let926)
  let let928 := (binrel% HAdd.hAdd let697 (binrel% HAdd.hAdd let536 let696))
  let let929 := (binrel% LE.le let928 let927)
  let let930 := (binrel% LE.le let696 let689)
  let let931 := (And let698 let22)
  let let932 := (Implies let931 let930)
  let let933 := (Eq let536 let691)
  let let934 := (Eq let19 let28)
  let let935 := (And let279 let934)
  let let936 := (Implies let935 let933)
  let let937 := (Eq let697 let691)
  let let938 := (And let279 let923)
  let let939 := (Implies let938 let937)
  let let940 := (And let134 let59)
  let let941 := (Implies let940 let916)
  let let942 := (Or let888 let916)
  let let943 := (Not let134)
  let let944 := (Or let943 let942)
  let let945 := (Eq let35 let20)
  let let946 := (Eq let18 let28)
  let let947 := (Eq let28 let35)
  let let948 := (Eq let51 let134)
  let let949 := (And let134 let38)
  let let950 := (Implies let949 let917)
  let let951 := (Or let909 let917)
  let let952 := (Or let943 let951)
  let let953 := (Eq let29 let19)
  let let954 := (Eq let28 let29)
  let let955 := (binrel% GE.ge fmt1 let74)
  let let956 := (Not let415)
  let let957 := (Or let956 (Or let51 let955))
  let let958 := (Or let956 (Or let447 let955))
  let let959 := (And let415 let446)
  let let960 := (Implies let959 let955)
  let let961 := (Not let75)
  let let962 := (Or let888 (Or let909 let961))
  let let963 := (Not let30)
  let let964 := (Or let963 let961)
  let let965 := (Or let909 let964)
  let let966 := (Or let888 let965)
  let let967 := (Not let36)
  let let968 := (Or let967 let965)
  let let969 := (Or let250 let961)
  let let970 := (Or let963 let969)
  let let971 := (Or let967 let970)
  let let972 := (Or let909 let971)
  let let973 := (Implies let701 let918)
  let let974 := (And let36 let59)
  let let975 := (And let586 let974)
  let let976 := (Implies let975 let916)
  let let977 := (Or let967 let942)
  let let978 := (Not let586)
  let let979 := (Or let978 let977)
  let let980 := (Eq let32 let20)
  let let981 := (Eq let18 let4)
  let let982 := (Eq let75 let586)
  let let983 := (And let30 let38)
  let let984 := (And let586 let983)
  let let985 := (Implies let984 let917)
  let let986 := (Or let963 let951)
  let let987 := (Or let978 let986)
  let let988 := (Eq let25 let19)
  let let989 := (Eq let4 let20)
  let let990 := (And let22 (And let917 let989))
  let let991 := (Implies let704 let990)
  let let992 := (Eq let990 False)
  let let993 := (Or (Not let989) False)
  let let994 := (Eq let20 let4)
  let let995 := (Not let994)
  let let996 := (Or let995 False)
  let let997 := (binrel% HAdd.hAdd let432 let926)
  let let998 := (binrel% LE.le let928 let997)
  let let999 := (Eq let697 let432)
  let let1000 := (And let279 let994)
  let let1001 := (Implies let1000 let999)
  let let1002 := (Or let963 (Or let250 (Or let961 let990)))
  let let1003 := (Eq let4 let32)
  let let1004 := (And let586 let1003)
  let let1005 := (Or (Not let1003) let989)
  let let1006 := (Implies let709 let1003)
  let let1007 := (Or (Not let709) let1003)
  let let1008 := (And let239 let59)
  let let1009 := (Implies let1008 let709)
  let let1010 := (Or let902 (Or let888 let709))
  let let1011 := (Not let367)
  let let1012 := (Eq let4 let19)
  let let1013 := (And let22 (And let1012 let916))
  let let1014 := (Implies let710 let1013)
  let let1015 := (Eq let1013 False)
  let let1016 := (Not let1012)
  let let1017 := (binrel% HAdd.hAdd let432 let689)
  let let1018 := (binrel% HAdd.hAdd let691 let1017)
  let let1019 := (binrel% LE.le let928 let1018)
  let let1020 := (Eq let536 let432)
  let let1021 := (Eq let19 let4)
  let let1022 := (And let279 let1021)
  let let1023 := (Implies let1022 let1020)
  let let1024 := (Or let250 (Or let961 let1013))
  let let1025 := (Eq let4 let25)
  let let1026 := (And let586 let1025)
  let let1027 := (Or (Not let1025) let1012)
  let let1028 := (Implies let553 let1025)
  let let1029 := (Or (Not let553) let1025)
  let let1030 := (And let367 let38)
  let let1031 := (Implies let1030 let553)
  let let1032 := (Or let1011 (Or let909 let553))
  let let1033 := (Not let955)
  let let1034 := (Or let1033 let75)
  let let1035 := (Or let416 (Or let15 let1034))
  let let1036 := (Or let720 (Or let294 let1034))
  let let1037 := (And let417 (And let293 let955))
  let let1038 := (Eq let74 fmt1)
  let let1039 := (And let955 (And let417 let293))
  let let1040 := (Or let888 (Or let967 let909))
  let let1041 := (Or let893 let896)
  let let1042 := (Implies let368 let896)
  let let1043 := (Not let26)
  let let1044 := (Or let1043 let293)
  let let1045 := (Not let33)
  let let1046 := (Or let250 let293)
  let let1047 := (Or let1043 let1046)
  let let1048 := (Implies let724 let1013)
  let let1049 := (Or let250 (Or let293 let1013))
  let let1050 := (Or let1043 let1049)
  let let1051 := (And let460 (And let33 let974))
  let let1052 := (Implies let1051 let916)
  let let1053 := (Not let460)
  let let1054 := (Or let1053 (Or let1045 let977))
  let let1055 := (Eq let2 let20)
  let let1056 := (Eq let18 let1)
  let let1057 := (Eq let15 let460)
  let let1058 := (And let460 (And let26 let1025))
  let let1059 := (Eq let24 let19)
  let let1060 := (Or let963 let1044)
  let let1061 := (Or let909 let1060)
  let let1062 := (Or let888 (Or let967 let1061))
  let let1063 := (Or let1045 let1061)
  let let1064 := (Or let967 let1063)
  let let1065 := (Or let963 let1047)
  let let1066 := (Or let1045 let1065)
  let let1067 := (Or let967 let1066)
  let let1068 := (Or let909 let1067)
  let let1069 := (Implies let161 let918)
  let let1070 := (And let460 (And let26 let983))
  let let1071 := (Implies let1070 let917)
  let let1072 := (Or let1053 (Or let1043 let986))
  let let1073 := (Not let63)
  let let1074 := (Or let967 (Or let1073 let1061))
  let let1075 := (Or let967 (Or let1073 let1065))
  let let1076 := (Or let909 let1075)
  let let1077 := (Implies let727 let990)
  let let1078 := (Or let963 (Or let1043 (Or let250 (Or let293 let990))))
  let let1079 := (Eq let4 let2)
  let let1080 := (And let460 let1079)
  let let1081 := (Implies let1080 let989)
  let let1082 := (Or let1053 (Or (Not let1079) let989))
  let let1083 := (Implies let520 let1079)
  let let1084 := (Or (Not let520) let1079)
  let let1085 := (And let63 let974)
  let let1086 := (Implies let1085 let520)
  let let1087 := (Or let1073 (Or let967 (Or let888 let520)))
  let let1088 := (Eq let6 let32)
  let let1089 := (Or let963 (Or let293 let906))
  let let1090 := (Or let906 let906)
  let let1091 := (Or let963 (Or let293 let1090))
  let let1092 := (Not let178)
  let let1093 := (Not let387)
  let let1094 := (Or let1092 let1093)
  let let1095 := (Implies let178 let1093)
  let let1096 := (Not let45)
  let let1097 := (Or let963 (Or let1096 let293))
  let let1098 := (Or let967 (Or let1045 (Or let909 let1097)))
  let let1099 := (Or let967 (Or let1045 (Or let963 (Or let1096 let1046))))
  let let1100 := (Or let909 let1099)
  let let1101 := (Implies let252 let1013)
  let let1102 := (Eq let4 let24)
  let let1103 := (And let460 let1102)
  let let1104 := (Implies let1103 let1012)
  let let1105 := (Or let1053 (Or (Not let1102) let1012))
  let let1106 := (Implies let306 let1102)
  let let1107 := (Or (Not let306) let1102)
  let let1108 := (And let45 let983)
  let let1109 := (Implies let1108 let306)
  let let1110 := (Or let1096 (Or let963 (Or let909 let306)))
  let let1111 := (Eq let44 let25)
  let let1112 := (Implies let240 let990)
  let let1113 := (Or let1045 let1078)
  let let1114 := (And let460 (And let33 let1003))
  let let1115 := (Not let229)
  let let1116 := (Not let225)
  let let1117 := (Or let1116 (Or let901 let1115))
  let let1118 := (And let225 let266)
  let let1119 := (Implies let1118 let1115)
  let let1120 := (Eq let229 False)
  let let1121 := (Or let888 let967)
  let let1122 := (Or let908 let908)
  let let1123 := (Not let58)
  let let1124 := (Or let888 (Or let967 (Or let1123 let963)))
  let let1125 := (Implies let79 let1013)
  let let1126 := (And let30 let58)
  let let1127 := (And let586 let1126)
  let let1128 := (Or let1123 let1012)
  let let1129 := (Or let963 let1128)
  let let1130 := (Eq let4 let29)
  let let1131 := (Implies let71 let1013)
  let let1132 := (And let134 let58)
  let let1133 := (Or let1123 let1060)
  let let1134 := (Or let888 (Or let967 let1133))
  let let1135 := (Implies let68 let1013)
  let let1136 := (And let460 (And let26 let1126))
  let let1137 := (Implies let1136 let1012)
  let let1138 := (Or let1053 (Or let1043 let1129))
  let let1139 := (And let22 (And let1012 let989))
  let let1140 := (Implies let65 let1139)
  let let1141 := (Eq let1139 False)
  let let1142 := (binrel% HAdd.hAdd let432 let1017)
  let let1143 := (binrel% LE.le let928 let1142)
  let let1144 := (Or let250 (Or let293 let1139))
  let let1145 := (Eq let1 let19)
  let let1146 := (And let22 (And let1145 let916))
  let let1147 := (Implies let60 let1146)
  let let1148 := (binrel% HAdd.hAdd let691 (binrel% HAdd.hAdd let493 let689))
  let let1149 := (binrel% LE.le let928 let1148)
  let let1150 := (Eq let536 let493)
  let let1151 := (Eq let19 let1)
  let let1152 := (And let279 let1151)
  let let1153 := (Eq let1 let24)
  let let1154 := (And let460 let1153)
  let let1155 := (And let45 let1126)
  let let1156 := (Not let219)
  let let1157 := (Or let1156 let1115)
  let let1158 := (Implies let219 let1115)
  let let1159 := (Or let1156 let901)
  let let1160 := (Implies let219 let901)
  let let1161 := (Not let40)
  let let1162 := (Implies let54 let990)
  let let1163 := (And let134 let40)
  let let1164 := (Or let1161 let989)
  let let1165 := (Eq let4 let35)
  let let1166 := (Implies let96 let990)
  let let1167 := (And let36 let40)
  let let1168 := (And let586 let1167)
  let let1169 := (Or let967 let1164)
  let let1170 := (Implies let48 let1139)
  let let1171 := (And let460 (And let33 let1167))
  let let1172 := (Implies let1171 let989)
  let let1173 := (Or let1053 (Or let1045 let1169))
  let let1174 := (Implies let41 let990)
  let let1175 := (Eq let1 let20)
  let let1176 := (And let22 (And let917 let1175))
  let let1177 := (Implies let298 let1176)
  let let1178 := (Eq let20 let1)
  let let1179 := (Not let1178)
  let let1180 := (binrel% HAdd.hAdd let493 let926)
  let let1181 := (binrel% LE.le let928 let1180)
  let let1182 := (Eq let697 let493)
  let let1183 := (And let279 let1178)
  let let1184 := (Eq let1 let2)
  let let1185 := (And let460 let1184)
  let let1186 := (And let63 let1167)
(Eq let7 let3) → (Eq let13 let8) → (Eq let43 let42) → (Eq let50 let49) → (Eq let56 let55) → (Eq let57 let8) → (Eq let62 let61) → (Eq let67 let66) → (Eq let70 let69) → (Eq let73 let72) → (Eq let81 let80) → (Eq let83 let82) → (Eq let86 let85) → (Eq let89 let88) → (Eq let90 let45) → (Eq let94 let92) → (Eq let98 let97) → (Eq let100 let99) → (Eq let103 let102) → (Eq let108 let108) → (Eq let110 let109) → (Eq let113 let112) → (Eq let115 let18) → (Eq let120 let118) → (Eq let122 let121) → (Eq let126 let125) → (Eq let127 let36) → (Eq let129 let128) → (Eq let131 let130) → (Eq let133 let132) → (Eq let134 let51) → (Eq let152 let151) → (Eq let150 let153) → (Eq let146 let154) → (Eq let158 let157) → (Eq let160 False) → (Eq let163 let162) → (Eq let166 let165) → (Eq let169 let168) → (Eq let170 let119) → (Eq let172 let171) → (Eq let145 let173) → (Eq let176 let175) → (Eq let179 let178) → (Eq let187 let186) → (Eq let191 let190) → (Eq let204 let203) → (Eq let205 let16) → (Eq let138 let206) → (Eq let196 let207) → (Eq let210 let209) → (Eq let114 fmt1) → (Eq let213 let8) → (Eq let135 let214) → (Eq let215 True) → (Eq let216 True) → (Eq let220 let219) → (Eq let221 True) → (Eq let223 let222) → (Eq let224 let33) → (Eq let226 let225) → (Eq let227 True) → (Eq let228 let63) → (Eq let230 let229) → (Eq let231 let28) → (Eq let236 let235) → (Eq let237 True) → (Eq let242 let241) → let244 → (Eq let247 let246) → (Eq let249 let248) → (Eq let251 let22) → (Eq let254 let253) → (Eq let257 let256) → (Eq let258 True) → (Eq let260 let259) → (Eq let262 let261) → (Eq let264 let263) → (Eq let265 False) → (Eq let201 fmt0) → (Eq let267 let266) → (Eq let269 let268) → (Eq let272 let271) → (Eq let192 let273) → (Eq let277 let275) → (Eq let278 let250) → (Eq let279 True) → (Eq let280 let280) → (Eq let283 let282) → let285 → (Eq let287 let286) → (Eq let290 let289) → (Eq let292 let291) → let295 → (Eq let141 let296) → (Eq let300 let299) → (Eq let304 let303) → (Eq let306 let305) → (Eq let307 let26) → (Eq let308 let74) → (Eq let310 let309) → (Eq let312 let311) → let315 → (Eq let317 let316) → let318 → (Eq let320 let319) → (Eq let321 let93) → (Eq let322 True) → (Eq let324 let323) → (Eq let326 let325) → (Eq let327 let327) → (Eq let330 let329) → (Eq let331 let22) → (Eq let333 let332) → (Eq let335 let334) → (Eq let419 let418) → (Eq let420 let408) → (Eq let421 let421) → let422 → (Eq let423 let405) → (Eq let424 let107) → (Eq let428 let427) → (Eq let429 let355) → (Eq let431 let430) → (Eq let432 let211) → (Eq let198 let433) → (Eq let434 let356) → (Eq let438 let437) → (Eq let440 let439) → (Eq let444 let443) → (Eq let445 let403) → (Eq let449 let448) → (Eq let451 let450) → (Eq let454 let453) → (Eq let455 let14) → (Eq let456 let407) → let457 → (Eq let459 let458) → (Eq let460 let15) → (Eq let441 let255) → (Eq let462 let461) → let449 → (Eq let463 let1) → (Eq let465 let464) → (Eq let466 let398) → (Eq let468 let467) → (Eq let469 let337) → (Eq let473 let472) → (Eq let474 let349) → (Eq let475 False) → (Eq let476 True) → (Eq let477 let341) → (Eq let478 let277) → (Eq let479 let416) → (Eq let480 let350) → (Eq let481 False) → (Eq let435 let84) → (Eq let484 let483) → (Eq let485 let289) → (Eq let488 let487) → (Eq let489 let359) → (Eq let490 let360) → (Eq let492 let375) → (Eq let493 let12) → (Eq let494 let363) → (Eq let495 let368) → (Eq let496 let376) → (Eq let497 let397) → (Eq let498 let4) → (Eq let499 False) → (Eq let500 let400) → (Eq let502 let501) → (Eq let503 let387) → (Eq let506 let505) → (Eq let512 let510) → (Eq let513 let401) → (Eq let514 let410) → (Eq let515 let340) → (Eq let516 True) → (Eq let518 let517) → (Eq let520 let519) → (Eq let521 let18) → (Eq let522 let30) → (Eq let524 let367) → (Eq let526 let525) → (Eq let528 let527) → (Eq let529 let374) → (Eq let530 let491) → (Eq let531 let411) → (Eq let314 let314) → let191 → (Eq let533 let532) → (Eq let534 let28) → (Eq let536 let535) → (Eq let538 let379) → (Eq let542 let540) → (Eq let543 let537) → let506 → (Eq let548 let547) → (Eq let550 let549) → (Eq let551 let383) → (Eq let553 let552) → (Eq let554 let384) → (Eq let557 let556) → (Eq let559 let558) → (Eq let560 True) → (Eq let562 let239) → (Eq let563 True) → (Eq let564 let561) → (Eq let566 let565) → let568 → (Eq let194 let569) → (Eq let570 let390) → (Eq let572 let571) → (Eq let568 let573) → (Eq let575 let574) → (Eq let577 let576) → (Eq let295 let578) → (Eq let580 let579) → (Eq let582 let581) → (Eq let584 let583) → (Eq let585 let380) → (Eq let586 let75) → (Eq let587 let353) → (Eq let589 let588) → (Eq let591 let590) → (Eq let592 let354) → (Eq let594 let593) → (Eq let596 let595) → (Eq let598 let597) → (Eq let600 let599) → (Eq let602 let601) → (Eq let604 let603) → (Eq let606 let605) → (Eq let608 let607) → (Eq let610 let609) → (Eq let611 let17) → (Eq let180 let612) → (Eq let613 let523) → (Eq let181 let614) → (Eq let615 let541) → (Eq let618 let617) → (Eq let545 let618) → (Eq let619 let555) → let621 → (Eq let624 let623) → (Eq let274 let5) → (Eq let627 let625) → (Eq let628 let626) → (Eq let680 let679) → (Eq let683 let681) → (Eq let684 let682) → (Eq let244 let685) → (Eq let616 let245) → (Eq let621 let686) → (Eq let687 let9) → (Eq let689 let9) → (Eq let690 let458) → (Eq let691 let10) → (Eq let692 let342) → (Eq let695 let10) → (Eq let696 let693) → (Eq let697 let694) → (Eq let698 True) → (Eq let699 True) → (Eq let700 let246) → (Eq let703 let702) → (Eq let706 let705) → (Eq let664 let707) → (Eq let709 let708) → (Eq let712 let711) → (Eq let666 let714) → (Eq let715 True) → (Eq let667 let719) → let721 → (Eq let721 let722) → (Eq let723 let417) → (Eq let726 let725) → (Eq let729 let728) → let680 → False :=
  let let1 := (Int.ofNat 2)
  let let2 := (sx5fcount let1)
  let let3 := (Eq let2 let1)
  let let4 := (Int.ofNat 1)
  let let5 := (Neg.neg let4)
  let let6 := (binrel% HAdd.hAdd let5 let2)
  let let7 := (Eq let4 let6)
  let let8 := (Neg.neg (Rat.ofInt 3))
  let let9 := (Neg.neg (Rat.ofInt 5))
  let let10 := (Rat.ofInt 0)
  let let11 := (binrel% HAdd.hAdd let10 let9)
  let let12 := (Rat.ofInt 2)
  let let13 := (binrel% HAdd.hAdd let12 let11)
  let let14 := (Int.ofNat 4)
  let let15 := (Eq fmt1 let14)
  let let16 := (Int.ofNat 5)
  let let17 := (Neg.neg let1)
  let let18 := (binrel% HAdd.hAdd let17 fmt1)
  let let19 := (xx5fcount let18)
  let let20 := (sx5fcount let18)
  let let21 := (binrel% HAdd.hAdd let20 let19)
  let let22 := (binrel% GE.ge let21 let16)
  let let23 := (And let22 let15)
  let let24 := (xx5fcount let1)
  let let25 := (xx5fcount let4)
  let let26 := (Eq let25 let24)
  let let27 := (And let26 let23)
  let let28 := (Int.ofNat 0)
  let let29 := (xx5fcount let28)
  let let30 := (Eq let29 let25)
  let let31 := (And let30 let27)
  let let32 := (sx5fcount let4)
  let let33 := (Eq let32 let2)
  let let34 := (And let33 let31)
  let let35 := (sx5fcount let28)
  let let36 := (Eq let35 let32)
  let let37 := (And let36 let34)
  let let38 := (Eq let29 let28)
  let let39 := (And let38 let37)
  let let40 := (Eq let35 let4)
  let let41 := (And let40 let39)
  let let42 := (Not let41)
  let let43 := (Implies let41 False)
  let let44 := (binrel% HAdd.hAdd let5 let24)
  let let45 := (Eq let25 let44)
  let let46 := (And let36 (And let33 (And let30 (And let45 let23))))
  let let47 := (And let38 let46)
  let let48 := (And let40 let47)
  let let49 := (Not let48)
  let let50 := (Implies let48 False)
  let let51 := (Eq fmt1 let1)
  let let52 := (And let22 let51)
  let let53 := (And let38 let52)
  let let54 := (And let40 let53)
  let let55 := (Not let54)
  let let56 := (Implies let54 False)
  let let57 := (binrel% HAdd.hAdd let10 (binrel% HAdd.hAdd let12 let9))
  let let58 := (Eq let29 let4)
  let let59 := (Eq let35 let28)
  let let60 := (And let59 (And let58 let46))
  let let61 := (Not let60)
  let let62 := (Implies let60 False)
  let let63 := (Eq let32 let6)
  let let64 := (And let36 (And let63 let31))
  let let65 := (And let59 (And let58 let64))
  let let66 := (Not let65)
  let let67 := (Implies let65 False)
  let let68 := (And let59 (And let58 let37))
  let let69 := (Not let68)
  let let70 := (Implies let68 False)
  let let71 := (And let59 (And let58 let52))
  let let72 := (Not let71)
  let let73 := (Implies let71 False)
  let let74 := (Int.ofNat 3)
  let let75 := (Eq fmt1 let74)
  let let76 := (And let22 let75)
  let let77 := (And let30 let76)
  let let78 := (And let36 let77)
  let let79 := (And let59 (And let58 let78))
  let let80 := (Not let79)
  let let81 := (Implies let79 False)
  let let82 := (binrel% HAdd.hAdd let4 let25)
  let let83 := (binrel% HAdd.hAdd let25 let4)
  let let84 := (Int.ofNat 19)
  let let85 := (Neg.neg let84)
  let let86 := (binrel% HMul.hMul let5 let84)
  let let87 := (selectx5fformat let28)
  let let88 := (Eq adrx5fmedlo let87)
  let let89 := (Eq let87 adrx5fmedlo)
  let let90 := (Eq let24 let82)
  let let91 := (xx5fcount let74)
  let let92 := (Eq let24 (binrel% HAdd.hAdd let5 let91))
  let let93 := (binrel% HAdd.hAdd let4 let24)
  let let94 := (Eq let91 let93)
  let let95 := (And let38 let78)
  let let96 := (And let40 let95)
  let let97 := (Not let96)
  let let98 := (Implies let96 False)
  let let99 := (Eq let24 let91)
  let let100 := (Eq let91 let24)
  let let101 := (selectx5fformat let14)
  let let102 := (Eq adrx5fmedlo let101)
  let let103 := (Eq let101 adrx5fmedlo)
  let let104 := (binrel% HMul.hMul let14 let19)
  let let105 := (binrel% HMul.hMul let14 let20)
  let let106 := (binrel% HAdd.hAdd let105 let104)
  let let107 := (binrel% HAdd.hAdd let85 let106)
  let let108 := (binrel% HAdd.hAdd let17 let107)
  let let109 := (Eq adrx5fhi let101)
  let let110 := (Eq let101 adrx5fhi)
  let let111 := (selectx5fformat let16)
  let let112 := (Eq percent let111)
  let let113 := (Eq let111 percent)
  let let114 := (binrel% HAdd.hAdd fmt1 let28)
  let let115 := (binrel% HAdd.hAdd let17 let114)
  let let116 := (xx5fcount let16)
  let let117 := (xx5fcount let14)
  let let118 := (Eq let117 (binrel% HAdd.hAdd let5 let116))
  let let119 := (binrel% HAdd.hAdd let4 let117)
  let let120 := (Eq let116 let119)
  let let121 := (Eq fmt0 arg1)
  let let122 := (Eq arg1 fmt0)
  let let123 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 16)) let106)
  let let124 := (selectx5fformat let123)
  let let125 := (Eq let124 let14)
  let let126 := (Eq let14 let124)
  let let127 := (Eq let32 let35)
  let let128 := (Eq x let101)
  let let129 := (Eq let101 x)
  let let130 := (binrel% HAdd.hAdd let4 fmt0)
  let let131 := (binrel% HAdd.hAdd fmt0 let4)
  let let132 := (binrel% HAdd.hAdd let4 let32)
  let let133 := (binrel% HAdd.hAdd let32 let4)
  let let134 := (Eq let28 let18)
  let let135 := (binrel% HAdd.hAdd arg1 let74)
  let let136 := (selectx5fformat let135)
  let let137 := (Eq let136 adrx5fhi)
  let let138 := (binrel% HAdd.hAdd arg1 let1)
  let let139 := (selectx5fformat let138)
  let let140 := (Eq let139 adrx5fmedhi)
  let let141 := (binrel% HAdd.hAdd arg1 let4)
  let let142 := (selectx5fformat let141)
  let let143 := (Eq let142 adrx5fmedlo)
  let let144 := (selectx5fformat arg1)
  let let145 := (Eq let144 adrx5flo)
  let let146 := (binrel% HAdd.hAdd fmt1 let4)
  let let147 := (selectx5fformat let146)
  let let148 := (Eq let147 s)
  let let149 := (selectx5fformat fmt1)
  let let150 := (Eq let149 percent)
  let let151 := (And let150 (And let148 (And let145 (And let143 (And let140 let137)))))
  let let152 := (And (And (And (And (And let150 let148) let145) let143) let140) let137)
  let let153 := (Eq percent let149)
  let let154 := (binrel% HAdd.hAdd let4 fmt1)
  let let155 := (Int.ofNat 6)
  let let156 := (selectx5fformat let155)
  let let157 := (Eq x let156)
  let let158 := (Eq let156 x)
  let let159 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 21)) let106)
  let let160 := (Eq let28 let159)
  let let161 := (And let59 let39)
  let let162 := (Not let161)
  let let163 := (Implies let161 False)
  let let164 := (selectx5fformat let154)
  let let165 := (Eq s let164)
  let let166 := (Eq let164 s)
  let let167 := (selectx5fformat let74)
  let let168 := (Eq adrx5fmedhi let167)
  let let169 := (Eq let167 adrx5fmedhi)
  let let170 := (binrel% HAdd.hAdd let117 let4)
  let let171 := (Eq adrx5fhi let111)
  let let172 := (Eq let111 adrx5fhi)
  let let173 := (Eq adrx5flo let144)
  let let174 := (binrel% HAdd.hAdd let5 arg1)
  let let175 := (Eq fmt0 let174)
  let let176 := (Eq arg1 let130)
  let let177 := (Int.ofNat 120)
  let let178 := (Eq let167 let177)
  let let179 := (Eq let177 let167)
  let let180 := (binrel% HSub.hSub fmt1 let1)
  let let181 := (binrel% HSub.hSub let180 fmt0)
  let let182 := (xx5fcount let181)
  let let183 := (binrel% HMul.hMul let14 let182)
  let let184 := (sx5fcount let181)
  let let185 := (binrel% HMul.hMul let14 let184)
  let let186 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let185 let183))
  let let187 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let185) let183)
  let let188 := (Int.ofNat 37)
  let let189 := (Eq let177 let188)
  let let190 := (Not let189)
  let let191 := (Eq let189 False)
  let let192 := (binrel% HAdd.hAdd fmt0 let16)
  let let193 := (Eq fmt1 let192)
  let let194 := (binrel% HAdd.hAdd fmt0 let14)
  let let195 := (Eq fmt1 let194)
  let let196 := (binrel% HAdd.hAdd fmt0 let74)
  let let197 := (Eq fmt1 let196)
  let let198 := (binrel% HAdd.hAdd fmt0 let1)
  let let199 := (Eq fmt1 let198)
  let let200 := (Eq fmt1 let131)
  let let201 := (binrel% HAdd.hAdd fmt0 let28)
  let let202 := (Eq fmt1 let201)
  let let203 := (Or let202 (Or let200 (Or let199 (Or let197 (Or let195 let193)))))
  let let204 := (Or (Or (Or (Or (Or let202 let200) let199) let197) let195) let193)
  let let205 := (binrel% HAdd.hAdd let16 let28)
  let let206 := (binrel% HAdd.hAdd let1 arg1)
  let let207 := (binrel% HAdd.hAdd let74 fmt0)
  let let208 := (selectx5fformat let206)
  let let209 := (Eq adrx5fmedhi let208)
  let let210 := (Eq let208 adrx5fmedhi)
  let let211 := (Rat.ofInt 1)
  let let212 := (binrel% HAdd.hAdd let211 let9)
  let let213 := (binrel% HAdd.hAdd let211 let212)
  let let214 := (binrel% HAdd.hAdd let74 arg1)
  let let215 := (Eq let84 let84)
  let let216 := (Eq let155 let155)
  let let217 := (Int.ofNat 115)
  let let218 := (selectx5fformat let4)
  let let219 := (Eq let218 let217)
  let let220 := (Eq let217 let218)
  let let221 := (Eq let217 let217)
  let let222 := (Eq let101 let217)
  let let223 := (Eq let217 let101)
  let let224 := (Eq let2 let32)
  let let225 := (Eq let87 let188)
  let let226 := (Eq let188 let87)
  let let227 := (Eq let177 let177)
  let let228 := (Eq let2 let132)
  let let229 := (Eq let218 let177)
  let let230 := (Eq let177 let218)
  let let231 := (binrel% HAdd.hAdd let85 let84)
  let let232 := (Eq arg1 let198)
  let let233 := (Eq arg1 let131)
  let let234 := (Eq arg1 let201)
  let let235 := (Or let234 (Or let233 let232))
  let let236 := (Or (Or let234 let233) let232)
  let let237 := (Eq let28 let28)
  let let238 := (binrel% HAdd.hAdd let5 let32)
  let let239 := (Eq let35 let238)
  let let240 := (And let59 (And let38 (And let239 let34)))
  let let241 := (Not let240)
  let let242 := (Implies let240 False)
  let let243 := (Eq let177 let217)
  let let244 := (Eq let243 False)
  let let245 := (Neg.neg let14)
  let let246 := (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd (binrel% HMul.hMul let245 let20) (binrel% HMul.hMul let245 let19)))
  let let247 := (binrel% HAdd.hAdd let28 let246)
  let let248 := (binrel% HAdd.hAdd let4 let2)
  let let249 := (binrel% HAdd.hAdd let2 let4)
  let let250 := (Not let22)
  let let251 := (Not let250)
  let let252 := (And let59 let47)
  let let253 := (Not let252)
  let let254 := (Implies let252 False)
  let let255 := (Neg.neg let155)
  let let256 := (binrel% HAdd.hAdd let255 fmt1)
  let let257 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let28 let255))
  let let258 := (Eq let188 let188)
  let let259 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 25)) let106)
  let let260 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let84 (binrel% HAdd.hAdd let255 let85)))))
  let let261 := (binrel% HAdd.hAdd let4 let91)
  let let262 := (binrel% HAdd.hAdd let91 let4)
  let let263 := (binrel% GE.ge let21 let155)
  let let264 := (binrel% GE.ge let259 let245)
  let let265 := (Eq let28 let107)
  let let266 := (Eq let218 let188)
  let let267 := (Eq let188 let218)
  let let268 := (Eq let87 let14)
  let let269 := (Eq let14 let87)
  let let270 := (selectx5fformat let107)
  let let271 := (Eq let270 let74)
  let let272 := (Eq let74 let270)
  let let273 := (binrel% HAdd.hAdd let16 fmt0)
  let let274 := (binrel% HMul.hMul let5 let4)
  let let275 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let274))
  let let276 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let277 := (binrel% HAdd.hAdd let276 let274)
  let let278 := (binrel% GE.ge let246 let4)
  let let279 := (binrel% GT.gt let211 let28)
  let let280 := (binrel% HAdd.hAdd let5 let107)
  let let281 := (And let59 let53)
  let let282 := (Not let281)
  let let283 := (Implies let281 False)
  let let284 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 20)) let106)
  let let285 := (Eq let280 let284)
  let let286 := (Eq adrx5fmedhi let101)
  let let287 := (Eq let101 adrx5fmedhi)
  let let288 := (binrel% HMul.hMul let5 let19)
  let let289 := (Eq let20 (binrel% HAdd.hAdd let16 let288))
  let let290 := (Eq let28 let284)
  let let291 := (Eq adrx5flo let101)
  let let292 := (Eq let101 adrx5flo)
  let let293 := (Not let15)
  let let294 := (Not let293)
  let let295 := (Eq let294 let15)
  let let296 := (binrel% HAdd.hAdd let4 arg1)
  let let297 := (And let38 let64)
  let let298 := (And let40 let297)
  let let299 := (Not let298)
  let let300 := (Implies let298 False)
  let let301 := (sx5fcount let14)
  let let302 := (sx5fcount let74)
  let let303 := (Eq let302 let301)
  let let304 := (Eq let301 let302)
  let let305 := (Eq let24 let4)
  let let306 := (Eq let28 let44)
  let let307 := (Eq let24 let25)
  let let308 := (binrel% HAdd.hAdd let74 let28)
  let let309 := (Eq x let167)
  let let310 := (Eq let167 x)
  let let311 := (Eq let87 let177)
  let let312 := (Eq let177 let87)
  let let313 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 17)) let106)
  let let314 := (binrel% HAdd.hAdd let1 let107)
  let let315 := (Eq let314 let313)
  let let316 := (Eq let167 let14)
  let let317 := (Eq let14 let167)
  let let318 := (Eq let108 let159)
  let let319 := (Eq adrx5flo let111)
  let let320 := (Eq let111 adrx5flo)
  let let321 := (binrel% HAdd.hAdd let24 let4)
  let let322 := (Eq let14 let14)
  let let323 := (Eq s let167)
  let let324 := (Eq let167 s)
  let let325 := (Eq let117 let116)
  let let326 := (Eq let116 let117)
  let let327 := (binrel% HAdd.hAdd let4 let107)
  let let328 := (selectx5fformat let1)
  let let329 := (Eq let328 let74)
  let let330 := (Eq let74 let328)
  let let331 := (binrel% GE.ge let107 let28)
  let let332 := (binrel% HAdd.hAdd let5 let276)
  let let333 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let5))
  let let334 := (Eq x let87)
  let let335 := (Eq let87 x)
  let let336 := (selectx5fformat let313)
  let let337 := (Eq let336 let14)
  let let338 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 18)) let106)
  let let339 := (selectx5fformat let338)
  let let340 := (Eq let339 let74)
  let let341 := (Eq let164 let217)
  let let342 := (Eq let149 let188)
  let let343 := (And let342 (And let341 (And let271 (And let340 (And let337 let125)))))
  let let344 := (Not let343)
  let let345 := (Eq fmt1 let16)
  let let346 := (Eq fmt1 let4)
  let let347 := (Eq fmt1 let28)
  let let348 := (Or let347 (Or let346 (Or let51 (Or let75 (Or let15 let345)))))
  let let349 := (Eq let156 let177)
  let let350 := (Eq let111 let188)
  let let351 := (And let350 let349)
  let let352 := (smtIte let351 let118 let325 Prop)
  let let353 := (Eq let91 let117)
  let let354 := (Eq let91 (binrel% HAdd.hAdd let5 let117))
  let let355 := (Eq let111 let177)
  let let356 := (Eq let101 let188)
  let let357 := (And let356 let355)
  let let358 := (smtIte let357 let354 let353 Prop)
  let let359 := (Eq let101 let177)
  let let360 := (Eq let167 let188)
  let let361 := (And let360 let359)
  let let362 := (smtIte let361 let92 let99 Prop)
  let let363 := (Eq let328 let188)
  let let364 := (And let363 let178)
  let let365 := (smtIte let364 let45 let26 Prop)
  let let366 := (binrel% HAdd.hAdd let5 let25)
  let let367 := (Eq let29 let366)
  let let368 := (Eq let328 let177)
  let let369 := (And let266 let368)
  let let370 := (smtIte let369 let367 let30 Prop)
  let let371 := (And let225 let229)
  let let372 := (smtIte let371 let58 let38 Prop)
  let let373 := (sx5fcount let16)
  let let374 := (Eq let301 let373)
  let let375 := (Eq let301 (binrel% HAdd.hAdd let5 let373))
  let let376 := (Eq let156 let217)
  let let377 := (And let350 let376)
  let let378 := (smtIte let377 let375 let374 Prop)
  let let379 := (Eq let302 (binrel% HAdd.hAdd let5 let301))
  let let380 := (Eq let111 let217)
  let let381 := (And let356 let380)
  let let382 := (smtIte let381 let379 let303 Prop)
  let let383 := (Eq let2 let302)
  let let384 := (Eq let2 (binrel% HAdd.hAdd let5 let302))
  let let385 := (And let360 let222)
  let let386 := (smtIte let385 let384 let383 Prop)
  let let387 := (Eq let167 let217)
  let let388 := (And let363 let387)
  let let389 := (smtIte let388 let63 let33 Prop)
  let let390 := (Eq let328 let217)
  let let391 := (And let266 let390)
  let let392 := (smtIte let391 let239 let36 Prop)
  let let393 := (And let225 let219)
  let let394 := (smtIte let393 let40 let59 Prop)
  let let395 := (Int.ofNat 255)
  let let396 := (Eq let111 let395)
  let let397 := (Eq let111 let14)
  let let398 := (Eq let111 let74)
  let let399 := (Eq let101 let395)
  let let400 := (Eq let101 let14)
  let let401 := (Eq let101 let74)
  let let402 := (Eq let167 let395)
  let let403 := (Eq let167 let74)
  let let404 := (Eq let328 let395)
  let let405 := (Eq let328 let14)
  let let406 := (Eq let218 let395)
  let let407 := (Eq let218 let14)
  let let408 := (Eq let218 let74)
  let let409 := (Eq let87 let395)
  let let410 := (Eq let87 let74)
  let let411 := (Eq let87 let217)
  let let412 := (Or let225 (Or let411 (Or let311 (Or let410 (Or let410 (Or let268 (Or let268 (Or let409 (Or let266 (Or let219 (Or let229 (Or let408 (Or let408 (Or let407 (Or let407 (Or let406 (Or let363 (Or let390 (Or let368 (Or let329 (Or let329 (Or let405 (Or let405 (Or let404 (Or let360 (Or let387 (Or let178 (Or let403 (Or let403 (Or let316 (Or let316 (Or let402 (Or let356 (Or let222 (Or let359 (Or let401 (Or let401 (Or let400 (Or let400 (Or let399 (Or let350 (Or let380 (Or let355 (Or let398 (Or let398 (Or let397 (Or let397 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let413 := (And let412 (And let394 (And let392 (And let389 (And let386 (And let382 (And let378 (And let372 (And let370 (And let365 (And let362 (And let358 (And let352 (And let348 (And let289 let344)))))))))))))))
  let let414 := (Not let263)
  let let415 := (binrel% GE.ge fmt1 let1)
  let let416 := (binrel% GE.ge fmt1 let16)
  let let417 := (Not let416)
  let let418 := (And let22 (And let417 (And let415 (And let414 let413))))
  let let419 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let22 (And let417 (And let415 (And let22 (And let414 (And True let413)))))))))))))))))
  let let420 := (Eq let74 let218)
  let let421 := (binrel% HAdd.hAdd let74 let107)
  let let422 := (Eq let327 let338)
  let let423 := (Eq let14 let328)
  let let424 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 (binrel% HAdd.hAdd let84 let85))))
  let let425 := (binrel% HMul.hMul let5 fmt0)
  let let426 := (binrel% HAdd.hAdd fmt1 let425)
  let let427 := (binrel% HAdd.hAdd let17 let426)
  let let428 := (binrel% HAdd.hAdd let18 let425)
  let let429 := (Eq let177 let111)
  let let430 := (Eq x let218)
  let let431 := (Eq let218 x)
  let let432 := (binrel% HMul.hMul let211 let4)
  let let433 := (binrel% HAdd.hAdd let1 fmt0)
  let let434 := (Eq let188 let101)
  let let435 := (binrel% HMul.hMul let5 let85)
  let let436 := (binrel% HAdd.hAdd let435 let86)
  let let437 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 let436)))
  let let438 := (binrel% HAdd.hAdd let107 let436)
  let let439 := (Eq percent let87)
  let let440 := (Eq let87 percent)
  let let441 := (binrel% HMul.hMul let5 let155)
  let let442 := (binrel% HAdd.hAdd let435 (binrel% HAdd.hAdd let441 let86))
  let let443 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let105 (binrel% HAdd.hAdd let104 let442)))
  let let444 := (binrel% HAdd.hAdd let107 let442)
  let let445 := (Eq let74 let167)
  let let446 := (Not let51)
  let let447 := (Not let446)
  let let448 := (Eq let51 let447)
  let let449 := (Eq let447 let51)
  let let450 := (Eq percent let167)
  let let451 := (Eq let167 percent)
  let let452 := (selectx5fformat let296)
  let let453 := (Eq adrx5fmedlo let452)
  let let454 := (Eq let452 adrx5fmedlo)
  let let455 := (binrel% HAdd.hAdd let14 let28)
  let let456 := (Eq let14 let218)
  let let457 := (Eq let421 let123)
  let let458 := (Neg.neg (Rat.ofInt 4))
  let let459 := (binrel% HAdd.hAdd let10 let212)
  let let460 := (Eq let1 let18)
  let let461 := (Eq adrx5flo let87)
  let let462 := (Eq let87 adrx5flo)
  let let463 := (binrel% HAdd.hAdd let1 let28)
  let let464 := (Eq s let87)
  let let465 := (Eq let87 s)
  let let466 := (Eq let74 let111)
  let let467 := (Eq s let328)
  let let468 := (Eq let328 s)
  let let469 := (Eq let14 let336)
  let let470 := (binrel% HMul.hMul let5 fmtx5flength)
  let let471 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let425 let470))
  let let472 := (binrel% GE.ge let471 let5)
  let let473 := (binrel% GE.ge fmt1 let332)
  let let474 := (Eq let177 let156)
  let let475 := (binrel% LE.le let10 let458)
  let let476 := (Eq let74 let74)
  let let477 := (Eq let217 let164)
  let let478 := (binrel% HSub.hSub let276 let4)
  let let479 := (binrel% GE.ge let256 let5)
  let let480 := (Eq let188 let111)
  let let481 := (binrel% LE.le let10 let8)
  let let482 := (selectx5fformat let214)
  let let483 := (Eq adrx5fhi let482)
  let let484 := (Eq let482 adrx5fhi)
  let let485 := (Or False (Or let289 False))
  let let486 := (binrel% HAdd.hAdd let17 arg1)
  let let487 := (Eq fmt0 let486)
  let let488 := (Eq arg1 let433)
  let let489 := (Eq let177 let101)
  let let490 := (Eq let188 let167)
  let let491 := (binrel% HAdd.hAdd let4 let301)
  let let492 := (Eq let373 let491)
  let let493 := (binrel% HMul.hMul let211 let1)
  let let494 := (Eq let188 let328)
  let let495 := (Eq let177 let328)
  let let496 := (Eq let217 let156)
  let let497 := (Eq let14 let111)
  let let498 := (binrel% HAdd.hAdd let4 let28)
  let let499 := (binrel% LE.le let10 let9)
  let let500 := (Eq let14 let101)
  let let501 := (Eq adrx5fmedlo let167)
  let let502 := (Eq let167 adrx5fmedlo)
  let let503 := (Eq let217 let167)
  let let504 := (Eq let188 let177)
  let let505 := (Not let504)
  let let506 := (Eq let504 False)
  let let507 := (binrel% HMul.hMul let5 distance)
  let let508 := (binrel% HMul.hMul let5 arg0)
  let let509 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let508 let507))
  let let510 := (binrel% GE.ge let509 let28)
  let let511 := (binrel% HAdd.hAdd arg0 distance)
  let let512 := (binrel% GE.ge arg1 let511)
  let let513 := (Eq let74 let101)
  let let514 := (Eq let74 let87)
  let let515 := (Eq let74 let339)
  let let516 := (Eq let107 let107)
  let let517 := (Eq percent let328)
  let let518 := (Eq let328 percent)
  let let519 := (Eq let2 let4)
  let let520 := (Eq let28 let6)
  let let521 := (binrel% HAdd.hAdd fmt1 let17)
  let let522 := (Eq let25 let29)
  let let523 := (binrel% HAdd.hAdd let4 let29)
  let let524 := (Eq let25 let523)
  let let525 := (Eq x let328)
  let let526 := (Eq let328 x)
  let let527 := (Eq percent let218)
  let let528 := (Eq let218 percent)
  let let529 := (Eq let373 let301)
  let let530 := (binrel% HAdd.hAdd let301 let4)
  let let531 := (Eq let217 let87)
  let let532 := (Eq s let156)
  let let533 := (Eq let156 s)
  let let534 := (binrel% HMul.hMul let5 let28)
  let let535 := (Rat.ofInt let19)
  let let536 := (binrel% HMul.hMul let211 let19)
  let let537 := (binrel% HAdd.hAdd let4 let302)
  let let538 := (Eq let301 let537)
  let let539 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let508 (binrel% HAdd.hAdd let470 let507)))
  let let540 := (binrel% GE.ge let539 let245)
  let let541 := (binrel% HAdd.hAdd let245 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let542 := (binrel% GE.ge arg1 let541)
  let let543 := (binrel% HAdd.hAdd let302 let4)
  let let544 := (binrel% HAdd.hAdd let511 fmtx5flength)
  let let545 := (binrel% HSub.hSub let544 let14)
  let let546 := (binrel% GE.ge arg1 let545)
  let let547 := (Not let546)
  let let548 := (binrel% LT.lt arg1 let545)
  let let549 := (Eq s let111)
  let let550 := (Eq let111 s)
  let let551 := (Eq let302 let2)
  let let552 := (Eq let25 let4)
  let let553 := (Eq let28 let366)
  let let554 := (Eq let302 let248)
  let let555 := (binrel% GE.ge let426 let1)
  let let556 := (Not let555)
  let let557 := (binrel% LE.le fmt1 let130)
  let let558 := (Eq s let101)
  let let559 := (Eq let101 s)
  let let560 := (Not False)
  let let561 := (binrel% HAdd.hAdd let4 let35)
  let let562 := (Eq let32 let561)
  let let563 := (Eq let15 let15)
  let let564 := (binrel% HAdd.hAdd let35 let4)
  let let565 := (Eq s let218)
  let let566 := (Eq let218 s)
  let let567 := (Eq let217 let177)
  let let568 := (Eq let567 False)
  let let569 := (binrel% HAdd.hAdd let14 fmt0)
  let let570 := (Eq let217 let328)
  let let571 := (Eq adrx5fmedhi let111)
  let let572 := (Eq let111 adrx5fmedhi)
  let let573 := (Not let567)
  let let574 := (Eq adrx5fmedlo let111)
  let let575 := (Eq let111 adrx5fmedlo)
  let let576 := (Eq adrx5fhi let167)
  let let577 := (Eq let167 adrx5fhi)
  let let578 := (Eq let15 let294)
  let let579 := (Eq adrx5flo let167)
  let let580 := (Eq let167 adrx5flo)
  let let581 := (Eq adrx5fhi let328)
  let let582 := (Eq let328 adrx5fhi)
  let let583 := (Eq let24 let1)
  let let584 := (Eq let4 let44)
  let let585 := (Eq let217 let111)
  let let586 := (Eq let4 let18)
  let let587 := (Eq let117 let91)
  let let588 := (Eq adrx5fmedhi let328)
  let let589 := (Eq let328 adrx5fmedhi)
  let let590 := (Eq adrx5fmedlo let328)
  let let591 := (Eq let328 adrx5fmedlo)
  let let592 := (Eq let117 let261)
  let let593 := (Eq adrx5flo let328)
  let let594 := (Eq let328 adrx5flo)
  let let595 := (Eq adrx5fhi let218)
  let let596 := (Eq let218 adrx5fhi)
  let let597 := (Eq adrx5fmedhi let218)
  let let598 := (Eq let218 adrx5fmedhi)
  let let599 := (Eq x let111)
  let let600 := (Eq let111 x)
  let let601 := (Eq adrx5fmedlo let218)
  let let602 := (Eq let218 adrx5fmedlo)
  let let603 := (Eq percent let101)
  let let604 := (Eq let101 percent)
  let let605 := (Eq adrx5flo let218)
  let let606 := (Eq let218 adrx5flo)
  let let607 := (Eq adrx5fhi let87)
  let let608 := (Eq let87 adrx5fhi)
  let let609 := (Eq adrx5fmedhi let87)
  let let610 := (Eq let87 adrx5fmedhi)
  let let611 := (binrel% HMul.hMul let5 let1)
  let let612 := (binrel% HAdd.hAdd fmt1 let611)
  let let613 := (binrel% HAdd.hAdd let29 let4)
  let let614 := (binrel% HAdd.hAdd let180 let425)
  let let615 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let245)))
  let let616 := (binrel% HMul.hMul let5 let14)
  let let617 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let616)))
  let let618 := (binrel% HAdd.hAdd let544 let616)
  let let619 := (Not let556)
  let let620 := (Eq let217 let188)
  let let621 := (Eq let620 False)
  let let622 := (binrel% LE.le fmt1 let131)
  let let623 := (Not let622)
  let let624 := (binrel% GT.gt fmt1 let131)
  let let625 := (Eq fmt0 let511)
  let let626 := (binrel% HAdd.hAdd fmt0 let507)
  let let627 := (Eq arg0 let626)
  let let628 := (binrel% HSub.hSub fmt0 distance)
  let let629 := (Not let152)
  let let630 := (Eq let116 let170)
  let let631 := (And let113 let158)
  let let632 := (smtIte let631 let630 let326 Prop)
  let let633 := (Eq let117 let262)
  let let634 := (And let604 let600)
  let let635 := (smtIte let634 let633 let587 Prop)
  let let636 := (Eq let91 let321)
  let let637 := (And let451 let129)
  let let638 := (smtIte let637 let636 let100 Prop)
  let let639 := (Eq let24 let83)
  let let640 := (And let518 let310)
  let let641 := (smtIte let640 let639 let307 Prop)
  let let642 := (Eq let25 let613)
  let let643 := (And let528 let526)
  let let644 := (smtIte let643 let642 let522 Prop)
  let let645 := (And let440 let431)
  let let646 := (smtIte let645 let58 let38 Prop)
  let let647 := (Eq let373 let530)
  let let648 := (And let113 let533)
  let let649 := (smtIte let648 let647 let529 Prop)
  let let650 := (Eq let301 let543)
  let let651 := (And let604 let550)
  let let652 := (smtIte let651 let650 let304 Prop)
  let let653 := (Eq let302 let249)
  let let654 := (And let451 let559)
  let let655 := (smtIte let654 let653 let551 Prop)
  let let656 := (Eq let2 let133)
  let let657 := (And let518 let324)
  let let658 := (smtIte let657 let656 let224 Prop)
  let let659 := (Eq let32 let564)
  let let660 := (And let528 let468)
  let let661 := (smtIte let660 let659 let127 Prop)
  let let662 := (And let440 let566)
  let let663 := (smtIte let662 let40 let59 Prop)
  let let664 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let440 let465) let335) let462) let89) let610) let608) let409) let528) let566) let431) let606) let602) let598) let596) let406) let518) let468) let526) let594) let591) let589) let582) let404) let451) let324) let310) let580) let502) let169) let577) let402) let604) let559) let129) let292) let103) let287) let110) let399) let113) let550) let600) let320) let575) let572) let172) let396)
  let let665 := (Eq arg1 let187)
  let let666 := (binrel% LT.lt fmt1 let478)
  let let667 := (binrel% GE.ge arg1 fmt0)
  let let668 := (Eq arg0 let628)
  let let669 := (Eq fmt0 let28)
  let let670 := (Eq x let177)
  let let671 := (Eq s let217)
  let let672 := (Eq percent let188)
  let let673 := (Eq adrx5fhi let14)
  let let674 := (Eq adrx5fmedhi let14)
  let let675 := (Eq adrx5fmedlo let74)
  let let676 := (Eq adrx5flo let74)
  let let677 := (Eq fmtx5flength let155)
  let let678 := (Eq distance let84)
  let let679 := (And let678 (And let677 (And let676 (And let675 (And let674 (And let673 (And let672 (And let671 (And let670 (And let669 (And let668 (And let667 (And let666 (And let624 (And let512 (And let548 (And let665 (And let664 (And let663 (And let661 (And let658 (And let655 (And let652 (And let649 (And let646 (And let644 (And let641 (And let638 (And let635 (And let632 (And let204 (And let236 let629))))))))))))))))))))))))))))))))
  let let680 := (And (And (And (And (And (And (And (And (And (And (And (And (And let678 let677) let676) let675) let674) let673) let672) let671) let670) (And (And (And (And (And (And (And let669 let668) let667) let666) let624) let512) let548) let665)) let664) (And (And (And (And (And (And (And (And (And (And (And let663 let661) let658) let655) let652) let649) let646) let644) let641) let638) let635) let632)) (And let204 let236)) let629)
  let let681 := (Eq arg0 let85)
  let let682 := (binrel% HAdd.hAdd let84 arg0)
  let let683 := (Eq let28 let682)
  let let684 := (binrel% HAdd.hAdd arg0 let84)
  let let685 := (Not let243)
  let let686 := (Not let620)
  let let687 := (binrel% HAdd.hAdd let10 let11)
  let let688 := (Neg.neg let211)
  let let689 := (binrel% HMul.hMul let688 let16)
  let let690 := (binrel% HAdd.hAdd let211 let11)
  let let691 := (binrel% HMul.hMul let211 let28)
  let let692 := (Eq let188 let149)
  let let693 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let5 let20) let288))
  let let694 := (Rat.ofInt let20)
  let let695 := (binrel% HAdd.hAdd let694 (binrel% HAdd.hAdd let535 let693))
  let let696 := (binrel% HMul.hMul let688 let21)
  let let697 := (binrel% HMul.hMul let211 let20)
  let let698 := (binrel% LT.lt let688 let28)
  let let699 := (Eq let51 let51)
  let let700 := (binrel% HMul.hMul let5 let107)
  let let701 := (And let59 let95)
  let let702 := (Not let701)
  let let703 := (Implies let701 False)
  let let704 := (And let59 (And let38 (And let239 let77)))
  let let705 := (Not let704)
  let let706 := (Implies let704 False)
  let let707 := (Or let440 (Or let465 (Or let335 (Or let462 (Or let89 (Or let610 (Or let608 (Or let409 (Or let528 (Or let566 (Or let431 (Or let606 (Or let602 (Or let598 (Or let596 (Or let406 (Or let518 (Or let468 (Or let526 (Or let594 (Or let591 (Or let589 (Or let582 (Or let404 (Or let451 (Or let324 (Or let310 (Or let580 (Or let502 (Or let169 (Or let577 (Or let402 (Or let604 (Or let559 (Or let129 (Or let292 (Or let103 (Or let287 (Or let110 (Or let399 (Or let113 (Or let550 (Or let600 (Or let320 (Or let575 (Or let572 (Or let172 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let708 := (Eq let32 let4)
  let let709 := (Eq let28 let238)
  let let710 := (And let59 (And let38 (And let36 (And let367 let76))))
  let let711 := (Not let710)
  let let712 := (Implies let710 False)
  let let713 := (binrel% GE.ge fmt1 let478)
  let let714 := (Not let713)
  let let715 := (Eq let416 let416)
  let let716 := (binrel% HMul.hMul let5 arg1)
  let let717 := (binrel% HAdd.hAdd fmt0 let716)
  let let718 := (binrel% GE.ge let717 let4)
  let let719 := (Not let718)
  let let720 := (Not let417)
  let let721 := (Eq let720 let416)
  let let722 := (Eq let416 let720)
  let let723 := (binrel% LT.lt fmt1 let16)
  let let724 := (And let59 (And let38 (And let36 (And let33 (And let367 let27)))))
  let let725 := (Not let724)
  let let726 := (Implies let724 False)
  let let727 := (And let59 let297)
  let let728 := (Not let727)
  let let729 := (Implies let727 False)
  let let730 := (And let153 (And let165 (And let173 (And let453 (And let209 let483)))))
  let let731 := (Not let730)
  let let732 := (Or let121 (Or let175 let487))
  let let733 := (Eq fmt1 let273)
  let let734 := (Eq fmt1 let569)
  let let735 := (Eq fmt1 let207)
  let let736 := (Eq fmt1 let433)
  let let737 := (Eq fmt1 let130)
  let let738 := (Eq fmt1 fmt0)
  let let739 := (Or let738 (Or let737 (Or let736 (Or let735 (Or let734 let733)))))
  let let740 := (And let112 let157)
  let let741 := (smtIte let740 let118 let325 Prop)
  let let742 := (And let603 let599)
  let let743 := (smtIte let742 let354 let353 Prop)
  let let744 := (And let450 let128)
  let let745 := (smtIte let744 let92 let99 Prop)
  let let746 := (And let517 let309)
  let let747 := (smtIte let746 let45 let26 Prop)
  let let748 := (And let527 let525)
  let let749 := (smtIte let748 let367 let30 Prop)
  let let750 := (And let439 let430)
  let let751 := (smtIte let750 let58 let38 Prop)
  let let752 := (And let112 let532)
  let let753 := (smtIte let752 let375 let374 Prop)
  let let754 := (And let603 let549)
  let let755 := (smtIte let754 let379 let303 Prop)
  let let756 := (And let450 let558)
  let let757 := (smtIte let756 let384 let383 Prop)
  let let758 := (And let517 let323)
  let let759 := (smtIte let758 let63 let33 Prop)
  let let760 := (And let527 let467)
  let let761 := (smtIte let760 let239 let36 Prop)
  let let762 := (And let439 let565)
  let let763 := (smtIte let762 let40 let59 Prop)
  let let764 := (Or let439 (Or let464 (Or let334 (Or let461 (Or let88 (Or let609 (Or let607 (Or let409 (Or let527 (Or let565 (Or let430 (Or let605 (Or let601 (Or let597 (Or let595 (Or let406 (Or let517 (Or let467 (Or let525 (Or let593 (Or let590 (Or let588 (Or let581 (Or let404 (Or let450 (Or let323 (Or let309 (Or let579 (Or let501 (Or let168 (Or let576 (Or let402 (Or let603 (Or let558 (Or let128 (Or let291 (Or let102 (Or let286 (Or let109 (Or let399 (Or let112 (Or let549 (Or let599 (Or let319 (Or let574 (Or let571 (Or let171 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let765 := (xx5fcount let427)
  let let766 := (binrel% HMul.hMul let14 let765)
  let let767 := (sx5fcount let427)
  let let768 := (binrel% HMul.hMul let14 let767)
  let let769 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let768 let766))
  let let770 := (Eq arg1 let769)
  let let771 := (Not let540)
  let let772 := (Not let472)
  let let773 := (And let678 (And let677 (And let676 (And let675 (And let674 (And let673 (And let672 (And let671 (And let670 (And let669 (And let625 (And let719 (And let772 (And let555 (And let510 (And let771 (And let770 (And let764 (And let763 (And let761 (And let759 (And let757 (And let755 (And let753 (And let751 (And let749 (And let747 (And let745 (And let743 (And let741 (And let739 (And let732 let731))))))))))))))))))))))))))))))))
  let let774 := (selectx5fformat let421)
  let let775 := (Eq let14 let774)
  let let776 := (selectx5fformat let314)
  let let777 := (Eq let14 let776)
  let let778 := (selectx5fformat let327)
  let let779 := (Eq let74 let778)
  let let780 := (And let692 (And let477 (And let272 (And let779 (And let777 let775)))))
  let let781 := (Not let780)
  let let782 := (Eq let28 let108)
  let let783 := (Eq let28 let280)
  let let784 := (Or let265 (Or let783 let782))
  let let785 := (Eq fmt1 let205)
  let let786 := (Eq fmt1 let455)
  let let787 := (Eq fmt1 let308)
  let let788 := (Eq fmt1 let463)
  let let789 := (Eq fmt1 let498)
  let let790 := (Or let347 (Or let789 (Or let788 (Or let787 (Or let786 let785)))))
  let let791 := (And let480 let474)
  let let792 := (smtIte let791 let118 let325 Prop)
  let let793 := (And let434 let429)
  let let794 := (smtIte let793 let354 let353 Prop)
  let let795 := (And let490 let489)
  let let796 := (smtIte let795 let92 let99 Prop)
  let let797 := (And let494 let179)
  let let798 := (smtIte let797 let45 let26 Prop)
  let let799 := (And let267 let495)
  let let800 := (smtIte let799 let367 let30 Prop)
  let let801 := (And let226 let230)
  let let802 := (smtIte let801 let58 let38 Prop)
  let let803 := (And let480 let496)
  let let804 := (smtIte let803 let375 let374 Prop)
  let let805 := (And let434 let585)
  let let806 := (smtIte let805 let379 let303 Prop)
  let let807 := (And let490 let223)
  let let808 := (smtIte let807 let384 let383 Prop)
  let let809 := (And let494 let503)
  let let810 := (smtIte let809 let63 let33 Prop)
  let let811 := (And let267 let570)
  let let812 := (smtIte let811 let239 let36 Prop)
  let let813 := (And let226 let220)
  let let814 := (smtIte let813 let40 let59 Prop)
  let let815 := (Or let226 (Or let531 (Or let312 (Or let514 (Or let514 (Or let269 (Or let269 (Or let409 (Or let267 (Or let220 (Or let230 (Or let420 (Or let420 (Or let456 (Or let456 (Or let406 (Or let494 (Or let570 (Or let495 (Or let330 (Or let330 (Or let423 (Or let423 (Or let404 (Or let490 (Or let503 (Or let179 (Or let445 (Or let445 (Or let317 (Or let317 (Or let402 (Or let434 (Or let223 (Or let489 (Or let513 (Or let513 (Or let500 (Or let500 (Or let399 (Or let480 (Or let585 (Or let429 (Or let466 (Or let466 (Or let497 (Or let497 let396)))))))))))))))))))))))))))))))))))))))))))))))
  let let816 := (binrel% HAdd.hAdd fmt1 let534)
  let let817 := (binrel% HAdd.hAdd let17 let816)
  let let818 := (xx5fcount let817)
  let let819 := (binrel% HMul.hMul let14 let818)
  let let820 := (sx5fcount let817)
  let let821 := (binrel% HMul.hMul let14 let820)
  let let822 := (binrel% HAdd.hAdd let85 (binrel% HAdd.hAdd let821 let819))
  let let823 := (Eq let107 let822)
  let let824 := (binrel% GE.ge let444 let245)
  let let825 := (Not let824)
  let let826 := (binrel% GE.ge let438 let28)
  let let827 := (binrel% GE.ge let816 let1)
  let let828 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let534 let441))
  let let829 := (binrel% GE.ge let828 let5)
  let let830 := (Not let829)
  let let831 := (binrel% HAdd.hAdd let28 let700)
  let let832 := (binrel% GE.ge let831 let4)
  let let833 := (Not let832)
  let let834 := (Eq let28 let231)
  let let835 := (And let215 (And let216 (And let476 (And let476 (And let322 (And let322 (And let258 (And let221 (And let227 (And let237 (And let834 (And let833 (And let830 (And let827 (And let826 (And let825 (And let823 (And let815 (And let814 (And let812 (And let810 (And let808 (And let806 (And let804 (And let802 (And let800 (And let798 (And let796 (And let794 (And let792 (And let790 (And let784 let781))))))))))))))))))))))))))))))))
  let let836 := (Eq And And)
  let let837 := (Eq Or Or)
  let let838 := (Eq fmt1 fmt1)
  let let839 := (Eq let325 let325)
  let let840 := (Eq let118 let118)
  let let841 := (Eq let353 let353)
  let let842 := (Eq let354 let354)
  let let843 := (Eq let99 let99)
  let let844 := (Eq let92 let92)
  let let845 := (Eq let26 let26)
  let let846 := (Eq let45 let45)
  let let847 := (Eq let30 let30)
  let let848 := (Eq let367 let367)
  let let849 := (Eq let38 let38)
  let let850 := (Eq let58 let58)
  let let851 := (Eq let374 let374)
  let let852 := (Eq let375 let375)
  let let853 := (Eq let303 let303)
  let let854 := (Eq let379 let379)
  let let855 := (Eq let383 let383)
  let let856 := (Eq let384 let384)
  let let857 := (Eq let33 let33)
  let let858 := (Eq let63 let63)
  let let859 := (Eq let36 let36)
  let let860 := (Eq let239 let239)
  let let861 := (Eq let59 let59)
  let let862 := (Eq let40 let40)
  let let863 := (Eq let396 let396)
  let let864 := (Eq let399 let399)
  let let865 := (Eq let402 let402)
  let let866 := (Eq let404 let404)
  let let867 := (Eq let406 let406)
  let let868 := (Eq let409 let409)
  let let869 := (Eq let17 let17)
  let let870 := (Eq let245 let245)
  let let871 := (Eq let1 let1)
  let let872 := (Eq let5 let5)
  let let873 := (Eq let4 let4)
  let let874 := (Eq arg1 let107)
  let let875 := (And let669 (And let670 (And let671 (And let672 (And let673 (And let674 (And let675 (And let676 (And let677 let678)))))))))
  let let876 := (And let681 let875)
  let let877 := (Eq arg1 arg1)
  let let878 := (Eq arg0 arg0)
  let let879 := (Eq let28 let684)
  let let880 := (Eq arg1 let822)
  let let881 := (Eq let769 let822)
  let let882 := (Eq let766 let819)
  let let883 := (Eq let765 let818)
  let let884 := (Eq let427 let817)
  let let885 := (Eq let425 let534)
  let let886 := (Eq let768 let821)
  let let887 := (Eq let767 let820)
  let let888 := (Not let59)
  let let889 := (Not let391)
  let let890 := (Or let889 let889)
  let let891 := (Not let390)
  let let892 := (Or let891 let889)
  let let893 := (Not let368)
  let let894 := (Or let893 let891)
  let let895 := (Implies let368 let891)
  let let896 := (Not let363)
  let let897 := (Or let891 let896)
  let let898 := (Implies let390 let896)
  let let899 := (Eq let363 False)
  let let900 := (Or let363 let368)
  let let901 := (Not let266)
  let let902 := (Not let239)
  let let903 := (Or let363 let900)
  let let904 := (Not let369)
  let let905 := (Not let388)
  let let906 := (Not let364)
  let let907 := (Not let393)
  let let908 := (Not let371)
  let let909 := (Not let38)
  let let910 := (Or let888 let909)
  let let911 := (Or let888 (Or let909 let910))
  let let912 := (Or let909 let911)
  let let913 := (Or let909 let446)
  let let914 := (Or let250 let446)
  let let915 := (Or let909 let914)
  let let916 := (Eq let28 let20)
  let let917 := (Eq let28 let19)
  let let918 := (And let22 (And let917 let916))
  let let919 := (Implies let281 let918)
  let let920 := (Eq let918 False)
  let let921 := (Or (Not let916) False)
  let let922 := (Not let917)
  let let923 := (Eq let20 let28)
  let let924 := (Not let923)
  let let925 := (Or let924 False)
  let let926 := (binrel% HAdd.hAdd let691 let689)
  let let927 := (binrel% HAdd.hAdd let691 let926)
  let let928 := (binrel% HAdd.hAdd let697 (binrel% HAdd.hAdd let536 let696))
  let let929 := (binrel% LE.le let928 let927)
  let let930 := (binrel% LE.le let696 let689)
  let let931 := (And let698 let22)
  let let932 := (Implies let931 let930)
  let let933 := (Eq let536 let691)
  let let934 := (Eq let19 let28)
  let let935 := (And let279 let934)
  let let936 := (Implies let935 let933)
  let let937 := (Eq let697 let691)
  let let938 := (And let279 let923)
  let let939 := (Implies let938 let937)
  let let940 := (And let134 let59)
  let let941 := (Implies let940 let916)
  let let942 := (Or let888 let916)
  let let943 := (Not let134)
  let let944 := (Or let943 let942)
  let let945 := (Eq let35 let20)
  let let946 := (Eq let18 let28)
  let let947 := (Eq let28 let35)
  let let948 := (Eq let51 let134)
  let let949 := (And let134 let38)
  let let950 := (Implies let949 let917)
  let let951 := (Or let909 let917)
  let let952 := (Or let943 let951)
  let let953 := (Eq let29 let19)
  let let954 := (Eq let28 let29)
  let let955 := (binrel% GE.ge fmt1 let74)
  let let956 := (Not let415)
  let let957 := (Or let956 (Or let51 let955))
  let let958 := (Or let956 (Or let447 let955))
  let let959 := (And let415 let446)
  let let960 := (Implies let959 let955)
  let let961 := (Not let75)
  let let962 := (Or let888 (Or let909 let961))
  let let963 := (Not let30)
  let let964 := (Or let963 let961)
  let let965 := (Or let909 let964)
  let let966 := (Or let888 let965)
  let let967 := (Not let36)
  let let968 := (Or let967 let965)
  let let969 := (Or let250 let961)
  let let970 := (Or let963 let969)
  let let971 := (Or let967 let970)
  let let972 := (Or let909 let971)
  let let973 := (Implies let701 let918)
  let let974 := (And let36 let59)
  let let975 := (And let586 let974)
  let let976 := (Implies let975 let916)
  let let977 := (Or let967 let942)
  let let978 := (Not let586)
  let let979 := (Or let978 let977)
  let let980 := (Eq let32 let20)
  let let981 := (Eq let18 let4)
  let let982 := (Eq let75 let586)
  let let983 := (And let30 let38)
  let let984 := (And let586 let983)
  let let985 := (Implies let984 let917)
  let let986 := (Or let963 let951)
  let let987 := (Or let978 let986)
  let let988 := (Eq let25 let19)
  let let989 := (Eq let4 let20)
  let let990 := (And let22 (And let917 let989))
  let let991 := (Implies let704 let990)
  let let992 := (Eq let990 False)
  let let993 := (Or (Not let989) False)
  let let994 := (Eq let20 let4)
  let let995 := (Not let994)
  let let996 := (Or let995 False)
  let let997 := (binrel% HAdd.hAdd let432 let926)
  let let998 := (binrel% LE.le let928 let997)
  let let999 := (Eq let697 let432)
  let let1000 := (And let279 let994)
  let let1001 := (Implies let1000 let999)
  let let1002 := (Or let963 (Or let250 (Or let961 let990)))
  let let1003 := (Eq let4 let32)
  let let1004 := (And let586 let1003)
  let let1005 := (Or (Not let1003) let989)
  let let1006 := (Implies let709 let1003)
  let let1007 := (Or (Not let709) let1003)
  let let1008 := (And let239 let59)
  let let1009 := (Implies let1008 let709)
  let let1010 := (Or let902 (Or let888 let709))
  let let1011 := (Not let367)
  let let1012 := (Eq let4 let19)
  let let1013 := (And let22 (And let1012 let916))
  let let1014 := (Implies let710 let1013)
  let let1015 := (Eq let1013 False)
  let let1016 := (Not let1012)
  let let1017 := (binrel% HAdd.hAdd let432 let689)
  let let1018 := (binrel% HAdd.hAdd let691 let1017)
  let let1019 := (binrel% LE.le let928 let1018)
  let let1020 := (Eq let536 let432)
  let let1021 := (Eq let19 let4)
  let let1022 := (And let279 let1021)
  let let1023 := (Implies let1022 let1020)
  let let1024 := (Or let250 (Or let961 let1013))
  let let1025 := (Eq let4 let25)
  let let1026 := (And let586 let1025)
  let let1027 := (Or (Not let1025) let1012)
  let let1028 := (Implies let553 let1025)
  let let1029 := (Or (Not let553) let1025)
  let let1030 := (And let367 let38)
  let let1031 := (Implies let1030 let553)
  let let1032 := (Or let1011 (Or let909 let553))
  let let1033 := (Not let955)
  let let1034 := (Or let1033 let75)
  let let1035 := (Or let416 (Or let15 let1034))
  let let1036 := (Or let720 (Or let294 let1034))
  let let1037 := (And let417 (And let293 let955))
  let let1038 := (Eq let74 fmt1)
  let let1039 := (And let955 (And let417 let293))
  let let1040 := (Or let888 (Or let967 let909))
  let let1041 := (Or let893 let896)
  let let1042 := (Implies let368 let896)
  let let1043 := (Not let26)
  let let1044 := (Or let1043 let293)
  let let1045 := (Not let33)
  let let1046 := (Or let250 let293)
  let let1047 := (Or let1043 let1046)
  let let1048 := (Implies let724 let1013)
  let let1049 := (Or let250 (Or let293 let1013))
  let let1050 := (Or let1043 let1049)
  let let1051 := (And let460 (And let33 let974))
  let let1052 := (Implies let1051 let916)
  let let1053 := (Not let460)
  let let1054 := (Or let1053 (Or let1045 let977))
  let let1055 := (Eq let2 let20)
  let let1056 := (Eq let18 let1)
  let let1057 := (Eq let15 let460)
  let let1058 := (And let460 (And let26 let1025))
  let let1059 := (Eq let24 let19)
  let let1060 := (Or let963 let1044)
  let let1061 := (Or let909 let1060)
  let let1062 := (Or let888 (Or let967 let1061))
  let let1063 := (Or let1045 let1061)
  let let1064 := (Or let967 let1063)
  let let1065 := (Or let963 let1047)
  let let1066 := (Or let1045 let1065)
  let let1067 := (Or let967 let1066)
  let let1068 := (Or let909 let1067)
  let let1069 := (Implies let161 let918)
  let let1070 := (And let460 (And let26 let983))
  let let1071 := (Implies let1070 let917)
  let let1072 := (Or let1053 (Or let1043 let986))
  let let1073 := (Not let63)
  let let1074 := (Or let967 (Or let1073 let1061))
  let let1075 := (Or let967 (Or let1073 let1065))
  let let1076 := (Or let909 let1075)
  let let1077 := (Implies let727 let990)
  let let1078 := (Or let963 (Or let1043 (Or let250 (Or let293 let990))))
  let let1079 := (Eq let4 let2)
  let let1080 := (And let460 let1079)
  let let1081 := (Implies let1080 let989)
  let let1082 := (Or let1053 (Or (Not let1079) let989))
  let let1083 := (Implies let520 let1079)
  let let1084 := (Or (Not let520) let1079)
  let let1085 := (And let63 let974)
  let let1086 := (Implies let1085 let520)
  let let1087 := (Or let1073 (Or let967 (Or let888 let520)))
  let let1088 := (Eq let6 let32)
  let let1089 := (Or let963 (Or let293 let906))
  let let1090 := (Or let906 let906)
  let let1091 := (Or let963 (Or let293 let1090))
  let let1092 := (Not let178)
  let let1093 := (Not let387)
  let let1094 := (Or let1092 let1093)
  let let1095 := (Implies let178 let1093)
  let let1096 := (Not let45)
  let let1097 := (Or let963 (Or let1096 let293))
  let let1098 := (Or let967 (Or let1045 (Or let909 let1097)))
  let let1099 := (Or let967 (Or let1045 (Or let963 (Or let1096 let1046))))
  let let1100 := (Or let909 let1099)
  let let1101 := (Implies let252 let1013)
  let let1102 := (Eq let4 let24)
  let let1103 := (And let460 let1102)
  let let1104 := (Implies let1103 let1012)
  let let1105 := (Or let1053 (Or (Not let1102) let1012))
  let let1106 := (Implies let306 let1102)
  let let1107 := (Or (Not let306) let1102)
  let let1108 := (And let45 let983)
  let let1109 := (Implies let1108 let306)
  let let1110 := (Or let1096 (Or let963 (Or let909 let306)))
  let let1111 := (Eq let44 let25)
  let let1112 := (Implies let240 let990)
  let let1113 := (Or let1045 let1078)
  let let1114 := (And let460 (And let33 let1003))
  let let1115 := (Not let229)
  let let1116 := (Not let225)
  let let1117 := (Or let1116 (Or let901 let1115))
  let let1118 := (And let225 let266)
  let let1119 := (Implies let1118 let1115)
  let let1120 := (Eq let229 False)
  let let1121 := (Or let888 let967)
  let let1122 := (Or let908 let908)
  let let1123 := (Not let58)
  let let1124 := (Or let888 (Or let967 (Or let1123 let963)))
  let let1125 := (Implies let79 let1013)
  let let1126 := (And let30 let58)
  let let1127 := (And let586 let1126)
  let let1128 := (Or let1123 let1012)
  let let1129 := (Or let963 let1128)
  let let1130 := (Eq let4 let29)
  let let1131 := (Implies let71 let1013)
  let let1132 := (And let134 let58)
  let let1133 := (Or let1123 let1060)
  let let1134 := (Or let888 (Or let967 let1133))
  let let1135 := (Implies let68 let1013)
  let let1136 := (And let460 (And let26 let1126))
  let let1137 := (Implies let1136 let1012)
  let let1138 := (Or let1053 (Or let1043 let1129))
  let let1139 := (And let22 (And let1012 let989))
  let let1140 := (Implies let65 let1139)
  let let1141 := (Eq let1139 False)
  let let1142 := (binrel% HAdd.hAdd let432 let1017)
  let let1143 := (binrel% LE.le let928 let1142)
  let let1144 := (Or let250 (Or let293 let1139))
  let let1145 := (Eq let1 let19)
  let let1146 := (And let22 (And let1145 let916))
  let let1147 := (Implies let60 let1146)
  let let1148 := (binrel% HAdd.hAdd let691 (binrel% HAdd.hAdd let493 let689))
  let let1149 := (binrel% LE.le let928 let1148)
  let let1150 := (Eq let536 let493)
  let let1151 := (Eq let19 let1)
  let let1152 := (And let279 let1151)
  let let1153 := (Eq let1 let24)
  let let1154 := (And let460 let1153)
  let let1155 := (And let45 let1126)
  let let1156 := (Not let219)
  let let1157 := (Or let1156 let1115)
  let let1158 := (Implies let219 let1115)
  let let1159 := (Or let1156 let901)
  let let1160 := (Implies let219 let901)
  let let1161 := (Not let40)
  let let1162 := (Implies let54 let990)
  let let1163 := (And let134 let40)
  let let1164 := (Or let1161 let989)
  let let1165 := (Eq let4 let35)
  let let1166 := (Implies let96 let990)
  let let1167 := (And let36 let40)
  let let1168 := (And let586 let1167)
  let let1169 := (Or let967 let1164)
  let let1170 := (Implies let48 let1139)
  let let1171 := (And let460 (And let33 let1167))
  let let1172 := (Implies let1171 let989)
  let let1173 := (Or let1053 (Or let1045 let1169))
  let let1174 := (Implies let41 let990)
  let let1175 := (Eq let1 let20)
  let let1176 := (And let22 (And let917 let1175))
  let let1177 := (Implies let298 let1176)
  let let1178 := (Eq let20 let1)
  let let1179 := (Not let1178)
  let let1180 := (binrel% HAdd.hAdd let493 let926)
  let let1181 := (binrel% LE.le let928 let1180)
  let let1182 := (Eq let697 let493)
  let let1183 := (And let279 let1178)
  let let1184 := (Eq let1 let2)
  let let1185 := (And let460 let1184)
  let let1186 := (And let63 let1167)
fun lean_r0 : (Eq let7 let3) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let13 let8) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let43 let42) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let50 let49) => -- THEORY_REWRITE_BOOL
fun lean_r4 : (Eq let56 let55) => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq let57 let8) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let62 let61) => -- THEORY_REWRITE_BOOL
fun lean_r7 : (Eq let67 let66) => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let70 let69) => -- THEORY_REWRITE_BOOL
fun lean_r9 : (Eq let73 let72) => -- THEORY_REWRITE_BOOL
fun lean_r10 : (Eq let81 let80) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let83 let82) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let86 let85) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let89 let88) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let90 let45) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let94 let92) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let98 let97) => -- THEORY_REWRITE_BOOL
fun lean_r17 : (Eq let100 let99) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let103 let102) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let108 let108) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let110 let109) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let113 let112) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let115 let18) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let120 let118) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let122 let121) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let126 let125) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let127 let36) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let129 let128) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let131 let130) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let133 let132) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let134 let51) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let152 let151) => -- THEORY_REWRITE_BOOL
fun lean_r32 : (Eq let150 let153) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let146 let154) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let158 let157) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let160 False) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let163 let162) => -- THEORY_REWRITE_BOOL
fun lean_r37 : (Eq let166 let165) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let169 let168) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let170 let119) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let145 let173) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let176 let175) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let179 let178) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let187 let186) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let191 let190) => -- THEORY_REWRITE_BOOL
fun lean_r46 : (Eq let204 let203) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let205 let16) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let138 let206) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let196 let207) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let210 let209) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let114 fmt1) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let213 let8) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let135 let214) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let215 True) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let216 True) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let220 let219) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let221 True) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let223 let222) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let224 let33) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let226 let225) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let227 True) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let228 let63) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let230 let229) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let231 let28) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let236 let235) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq let237 True) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let242 let241) => -- THEORY_REWRITE_BOOL
fun lean_r68 : let244 => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let247 let246) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let249 let248) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let251 let22) => -- THEORY_REWRITE_BOOL
fun lean_r72 : (Eq let254 let253) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let257 let256) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let258 True) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let260 let259) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let262 let261) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let264 let263) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let265 False) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let201 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let267 let266) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let269 let268) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let272 let271) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let192 let273) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let277 let275) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let278 let250) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let279 True) => -- EVALUATE
fun lean_r87 : (Eq let280 let280) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let283 let282) => -- THEORY_REWRITE_BOOL
fun lean_r89 : let285 => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let287 let286) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let290 let289) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let292 let291) => -- THEORY_REWRITE_ARITH
fun lean_r93 : let295 => -- THEORY_REWRITE_BOOL
fun lean_r94 : (Eq let141 let296) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let300 let299) => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq let304 let303) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let306 let305) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let307 let26) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let308 let74) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let310 let309) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let312 let311) => -- THEORY_REWRITE_ARITH
fun lean_r102 : let315 => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let317 let316) => -- THEORY_REWRITE_ARITH
fun lean_r104 : let318 => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let320 let319) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let321 let93) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let322 True) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let324 let323) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let326 let325) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let327 let327) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let330 let329) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let331 let22) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let333 let332) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let335 let334) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let419 let418) => -- THEORY_REWRITE_BOOL
fun lean_r116 : (Eq let420 let408) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let421 let421) => -- THEORY_REWRITE_ARITH
fun lean_r118 : let422 => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let423 let405) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let424 let107) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let428 let427) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let429 let355) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let431 let430) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let432 let211) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let198 let433) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let434 let356) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let438 let437) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let440 let439) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let444 let443) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let445 let403) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let449 let448) => -- THEORY_REWRITE_BOOL
fun lean_r132 : (Eq let451 let450) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let454 let453) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let455 let14) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let456 let407) => -- THEORY_REWRITE_ARITH
fun lean_r136 : let457 => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let459 let458) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let460 let15) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let441 let255) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let462 let461) => -- THEORY_REWRITE_ARITH
fun lean_r141 : let449 => -- THEORY_REWRITE_BOOL
fun lean_r142 : (Eq let463 let1) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let465 let464) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let466 let398) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let468 let467) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let469 let337) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let473 let472) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let474 let349) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let475 False) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let476 True) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let477 let341) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let478 let277) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let479 let416) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let480 let350) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let481 False) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let435 let84) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let484 let483) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let485 let289) => -- THEORY_REWRITE_BOOL
fun lean_r159 : (Eq let488 let487) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let489 let359) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let490 let360) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq let492 let375) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let493 let12) => -- THEORY_REWRITE_ARITH
fun lean_r164 : (Eq let494 let363) => -- THEORY_REWRITE_ARITH
fun lean_r165 : (Eq let495 let368) => -- THEORY_REWRITE_ARITH
fun lean_r166 : (Eq let496 let376) => -- THEORY_REWRITE_ARITH
fun lean_r167 : (Eq let497 let397) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let498 let4) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let499 False) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let500 let400) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let502 let501) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let503 let387) => -- THEORY_REWRITE_ARITH
fun lean_r173 : (Eq let506 let505) => -- THEORY_REWRITE_BOOL
fun lean_r174 : (Eq let512 let510) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let513 let401) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let514 let410) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq let515 let340) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let516 True) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let518 let517) => -- THEORY_REWRITE_ARITH
fun lean_r180 : (Eq let520 let519) => -- THEORY_REWRITE_ARITH
fun lean_r181 : (Eq let521 let18) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq let522 let30) => -- THEORY_REWRITE_ARITH
fun lean_r183 : (Eq let524 let367) => -- THEORY_REWRITE_ARITH
fun lean_r184 : (Eq let526 let525) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq let528 let527) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let529 let374) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let530 let491) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq let531 let411) => -- THEORY_REWRITE_ARITH
fun lean_r189 : (Eq let314 let314) => -- THEORY_REWRITE_ARITH
fun lean_r190 : let191 => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let533 let532) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let534 let28) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq let536 let535) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let538 let379) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq let542 let540) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let543 let537) => -- THEORY_REWRITE_ARITH
fun lean_r197 : let506 => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq let548 let547) => -- THEORY_REWRITE_ARITH
fun lean_r199 : (Eq let550 let549) => -- THEORY_REWRITE_ARITH
fun lean_r200 : (Eq let551 let383) => -- THEORY_REWRITE_ARITH
fun lean_r201 : (Eq let553 let552) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let554 let384) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq let557 let556) => -- THEORY_REWRITE_ARITH
fun lean_r204 : (Eq let559 let558) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq let560 True) => -- THEORY_REWRITE_BOOL
fun lean_r206 : (Eq let562 let239) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let563 True) => -- THEORY_REWRITE_BOOL
fun lean_r208 : (Eq let564 let561) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let566 let565) => -- THEORY_REWRITE_ARITH
fun lean_r210 : let568 => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let194 let569) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq let570 let390) => -- THEORY_REWRITE_ARITH
fun lean_r213 : (Eq let572 let571) => -- THEORY_REWRITE_ARITH
fun lean_r214 : (Eq let568 let573) => -- THEORY_REWRITE_BOOL
fun lean_r215 : (Eq let575 let574) => -- THEORY_REWRITE_ARITH
fun lean_r216 : (Eq let577 let576) => -- THEORY_REWRITE_ARITH
fun lean_r217 : (Eq let295 let578) => -- THEORY_REWRITE_BOOL
fun lean_r218 : (Eq let580 let579) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq let582 let581) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let584 let583) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq let585 let380) => -- THEORY_REWRITE_ARITH
fun lean_r222 : (Eq let586 let75) => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let587 let353) => -- THEORY_REWRITE_ARITH
fun lean_r224 : (Eq let589 let588) => -- THEORY_REWRITE_ARITH
fun lean_r225 : (Eq let591 let590) => -- THEORY_REWRITE_ARITH
fun lean_r226 : (Eq let592 let354) => -- THEORY_REWRITE_ARITH
fun lean_r227 : (Eq let594 let593) => -- THEORY_REWRITE_ARITH
fun lean_r228 : (Eq let596 let595) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq let598 let597) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq let600 let599) => -- THEORY_REWRITE_ARITH
fun lean_r231 : (Eq let602 let601) => -- THEORY_REWRITE_ARITH
fun lean_r232 : (Eq let604 let603) => -- THEORY_REWRITE_ARITH
fun lean_r233 : (Eq let606 let605) => -- THEORY_REWRITE_ARITH
fun lean_r234 : (Eq let608 let607) => -- THEORY_REWRITE_ARITH
fun lean_r235 : (Eq let610 let609) => -- THEORY_REWRITE_ARITH
fun lean_r236 : (Eq let611 let17) => -- THEORY_REWRITE_ARITH
fun lean_r237 : (Eq let180 let612) => -- THEORY_REWRITE_ARITH
fun lean_r238 : (Eq let613 let523) => -- THEORY_REWRITE_ARITH
fun lean_r239 : (Eq let181 let614) => -- THEORY_REWRITE_ARITH
fun lean_r240 : (Eq let615 let541) => -- THEORY_REWRITE_ARITH
fun lean_r241 : (Eq let618 let617) => -- THEORY_REWRITE_ARITH
fun lean_r242 : (Eq let545 let618) => -- THEORY_REWRITE_ARITH
fun lean_r243 : (Eq let619 let555) => -- THEORY_REWRITE_BOOL
fun lean_r244 : let621 => -- THEORY_REWRITE_ARITH
fun lean_r245 : (Eq let624 let623) => -- THEORY_REWRITE_ARITH
fun lean_r246 : (Eq let274 let5) => -- THEORY_REWRITE_ARITH
fun lean_r247 : (Eq let627 let625) => -- THEORY_REWRITE_ARITH
fun lean_r248 : (Eq let628 let626) => -- THEORY_REWRITE_ARITH
fun lean_r249 : (Eq let680 let679) => -- THEORY_REWRITE_BOOL
fun lean_r250 : (Eq let683 let681) => -- THEORY_REWRITE_ARITH
fun lean_r251 : (Eq let684 let682) => -- THEORY_REWRITE_ARITH
fun lean_r252 : (Eq let244 let685) => -- THEORY_REWRITE_BOOL
fun lean_r253 : (Eq let616 let245) => -- THEORY_REWRITE_ARITH
fun lean_r254 : (Eq let621 let686) => -- THEORY_REWRITE_BOOL
fun lean_r255 : (Eq let687 let9) => -- THEORY_REWRITE_ARITH
fun lean_r256 : (Eq let689 let9) => -- THEORY_REWRITE_ARITH
fun lean_r257 : (Eq let690 let458) => -- THEORY_REWRITE_ARITH
fun lean_r258 : (Eq let691 let10) => -- THEORY_REWRITE_ARITH
fun lean_r259 : (Eq let692 let342) => -- THEORY_REWRITE_ARITH
fun lean_r260 : (Eq let695 let10) => -- THEORY_REWRITE_ARITH
fun lean_r261 : (Eq let696 let693) => -- THEORY_REWRITE_ARITH
fun lean_r262 : (Eq let697 let694) => -- THEORY_REWRITE_ARITH
fun lean_r263 : (Eq let698 True) => -- EVALUATE
fun lean_r264 : (Eq let699 True) => -- THEORY_REWRITE_BOOL
fun lean_r265 : (Eq let700 let246) => -- THEORY_REWRITE_ARITH
fun lean_r266 : (Eq let703 let702) => -- THEORY_REWRITE_BOOL
fun lean_r267 : (Eq let706 let705) => -- THEORY_REWRITE_BOOL
fun lean_r268 : (Eq let664 let707) => -- THEORY_REWRITE_BOOL
fun lean_r269 : (Eq let709 let708) => -- THEORY_REWRITE_ARITH
fun lean_r270 : (Eq let712 let711) => -- THEORY_REWRITE_BOOL
fun lean_r271 : (Eq let666 let714) => -- THEORY_REWRITE_ARITH
fun lean_r272 : (Eq let715 True) => -- THEORY_REWRITE_BOOL
fun lean_r273 : (Eq let667 let719) => -- THEORY_REWRITE_ARITH
fun lean_r274 : let721 => -- THEORY_REWRITE_BOOL
fun lean_r275 : (Eq let721 let722) => -- THEORY_REWRITE_BOOL
fun lean_r276 : (Eq let723 let417) => -- THEORY_REWRITE_ARITH
fun lean_r277 : (Eq let726 let725) => -- THEORY_REWRITE_BOOL
fun lean_r278 : (Eq let729 let728) => -- THEORY_REWRITE_BOOL
fun lean_a279 : let680 => by
have lean_s0 : (Or let1161 (Or let909 (Or let967 (Or let1073 (Or let963 (Or let1043 (Or let250 (Or let293 let1176)))))))) :=
  (scope (fun lean_a280 : let40 =>
    (scope (fun lean_a281 : let38 =>
      (scope (fun lean_a282 : let36 =>
        (scope (fun lean_a283 : let63 =>
          (scope (fun lean_a284 : let30 =>
            (scope (fun lean_a285 : let26 =>
              (scope (fun lean_a286 : let22 =>
                (scope (fun lean_a287 : let15 =>
                  have lean_s0 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1 : let460 := by timed eqResolve lean_a287 lean_s0
                  let lean_s2 := by timed And.intro lean_a284 lean_a281
                  let lean_s3 := by timed And.intro lean_a285 lean_s2
                  have lean_s4 : let1070 := by timed And.intro lean_s1 lean_s3
                  have lean_s5 : let1072 :=
                    (scope (fun lean_a288 : let460 =>
                      (scope (fun lean_a289 : let26 =>
                        (scope (fun lean_a290 : let30 =>
                          (scope (fun lean_a291 : let38 =>
                            have lean_s5 : let954 := by timed Eq.symm lean_a291
                            have lean_s6 : let522 := by timed Eq.symm lean_a290
                            have lean_s7 : let30 := by timed Eq.symm lean_s6
                            let lean_s8 := by timed Eq.trans lean_s5 lean_s7
                            have lean_s9 : let307 := by timed Eq.symm lean_a289
                            have lean_s10 : let26 := by timed Eq.symm lean_s9
                            let lean_s11 := by timed Eq.trans lean_s8 lean_s10
                            have lean_s12 : let1056 := by timed Eq.symm lean_a288
                            have lean_s13 : let460 := by timed Eq.symm lean_s12
                            have lean_s14 : let1059 := by timed flipCongrArg lean_s13 [xx5fcount]
                            have lean_s15 : let917 := by timed Eq.trans lean_s11 lean_s14
                            show let917 from lean_s15
                    ))))))))
                  have lean_s6 : let1071 := by liftOrNToImp lean_s5, 4
                  have lean_s7 : let917 := by timed modusPonens lean_s4 lean_s6
                  let lean_s8 := by timed And.intro lean_a282 lean_a280
                  have lean_s9 : let1186 := by timed And.intro lean_a283 lean_s8
                  have lean_s10 : (Or let1073 (Or let967 (Or let1161 let7))) :=
                    (scope (fun lean_a289 : let63 =>
                      (scope (fun lean_a290 : let36 =>
                        (scope (fun lean_a291 : let40 =>
                          have lean_s10 : let1165 := by timed Eq.symm lean_a291
                          have lean_s11 : let127 := by timed Eq.symm lean_a290
                          have lean_s12 : let36 := by timed Eq.symm lean_s11
                          let lean_s13 := by timed Eq.trans lean_s10 lean_s12
                          have lean_s14 : let1088 := by timed Eq.symm lean_a289
                          have lean_s15 : let63 := by timed Eq.symm lean_s14
                          have lean_s16 : let7 := by timed Eq.trans lean_s13 lean_s15
                          show let7 from lean_s16
                    ))))))
                  have lean_s11 : (Implies let1186 let7) := by liftOrNToImp lean_s10, 3
                  have lean_s12 : let7 := by timed modusPonens lean_s9 lean_s11
                  have lean_s13 : (Or (Not let7) let1184) :=
                    (scope (fun lean_a289 : let7 =>
                      have lean_s13 : let3 := by timed eqResolve lean_a289 lean_r0
                      have lean_s14 : let1184 := by timed Eq.symm lean_s13
                      show let1184 from lean_s14
                    ))
                  have lean_s14 : (Implies let7 let1184) := by liftOrNToImp lean_s13, 1
                  have lean_s15 : let1184 := by timed modusPonens lean_s12 lean_s14
                  have lean_s16 : let1185 := by timed And.intro lean_s1 lean_s15
                  have lean_s17 : (Or let1053 (Or (Not let1184) let1175)) :=
                    (scope (fun lean_a290 : let460 =>
                      (scope (fun lean_a291 : let1184 =>
                        have lean_s17 : let3 := by timed Eq.symm lean_a291
                        have lean_s18 : let1184 := by timed Eq.symm lean_s17
                        have lean_s19 : let1056 := by timed Eq.symm lean_a290
                        have lean_s20 : let460 := by timed Eq.symm lean_s19
                        have lean_s21 : let1055 := by timed flipCongrArg lean_s20 [sx5fcount]
                        have lean_s22 : let1175 := by timed Eq.trans lean_s18 lean_s21
                        show let1175 from lean_s22
                    ))))
                  have lean_s18 : (Implies let1185 let1175) := by liftOrNToImp lean_s17, 2
                  have lean_s19 : let1175 := by timed modusPonens lean_s16 lean_s18
                  let lean_s20 := by timed And.intro lean_s7 lean_s19
                  have lean_s21 : let1176 := by timed And.intro lean_a286 lean_s20
                  show let1176 from lean_s21
  ))))))))))))))))
have lean_s1 : let1177 := by liftOrNToImp lean_s0, 8
have lean_s2 : (Eq let298 let298) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or let250 (Or let922 (Or (Not let1175) False))) :=
  (scope (fun lean_a291 : let22 =>
    (scope (fun lean_a292 : let917 =>
      (scope (fun lean_a293 : let1175 =>
        have lean_s4 : let1178 := by timed Eq.symm lean_a293
        have lean_s5 : (Or let1179 False) :=
          (scope (fun lean_a293 : let1178 =>
            have lean_s5 : let279 := by timed trueElim lean_r86
            have lean_s6 : let1183 := by timed And.intro lean_s5 lean_a293
            have lean_s7 : (Implies let1183 let1182) := by arithMulPos [let20, let1, let211], 4
            have lean_s8 : let1182 := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : let934 := by timed Eq.symm lean_a292
            have lean_s10 : let935 := by timed And.intro lean_s5 lean_s9
            have lean_s11 : let936 := by arithMulPos [let19, let28, let211], 4
            have lean_s12 : let933 := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : let698 := by timed trueElim lean_r263
            have lean_s14 : let931 := by timed And.intro lean_s13 lean_a291
            have lean_s15 : let932 := by arithMulNeg [let21, let16, let688], 3
            have lean_s16 : let930 := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : let1181 := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r193 lean_r261
            have lean_s19 : (Eq let928 let695) := by timed congrHAdd lean_r262 lean_s18
            have lean_s20 : (Eq let928 let10) := by timed Eq.trans lean_s19 lean_r260
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r258 lean_r256
            have lean_s23 : (Eq let1180 let13) := by timed congrHAdd lean_r163 lean_s22
            have lean_s24 : (Eq let1180 let8) := by timed Eq.trans lean_s23 lean_r1
            have lean_s25 : (Eq let1181 let481) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let1181 False) := by timed Eq.trans lean_s25 lean_r155
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : let1179 := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not let1176) := by liftOrNToNeg lean_s4
have lean_s6 : (Eq let1176 False) := by timed falseIntro lean_s5
have lean_s7 : (Eq let1177 let300) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let1177 let299) := by timed Eq.trans lean_s7 lean_r95
have lean_s9 : let299 := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or let1161 let1076) := by timed flipNotAnd lean_s9 [let40, let38, let36, let63, let30, let26, let22, let15]
have lean_s11 : (Or let250 (Or let1161 let1074)) := by permutateOr lean_s10, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
have lean_s12 : let836 := by timed rfl
have lean_s13 : (Eq let678 let678) := by timed rfl
let lean_s14 := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq let677 let677) := by timed rfl
let lean_s16 := by timed congr lean_s12 lean_s15
have lean_s17 : (Eq let676 let676) := by timed rfl
let lean_s18 := by timed congr lean_s12 lean_s17
have lean_s19 : (Eq let675 let675) := by timed rfl
let lean_s20 := by timed congr lean_s12 lean_s19
have lean_s21 : (Eq let674 let674) := by timed rfl
let lean_s22 := by timed congr lean_s12 lean_s21
have lean_s23 : (Eq let673 let673) := by timed rfl
let lean_s24 := by timed congr lean_s12 lean_s23
have lean_s25 : (Eq let672 let672) := by timed rfl
let lean_s26 := by timed congr lean_s12 lean_s25
have lean_s27 : (Eq let671 let671) := by timed rfl
let lean_s28 := by timed congr lean_s12 lean_s27
have lean_s29 : (Eq let670 let670) := by timed rfl
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq let669 let669) := by timed rfl
let lean_s32 := by timed congr lean_s12 lean_s31
have lean_s33 : let878 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let668 let627) := by timed congr lean_s34 lean_r248
have lean_s36 : (Eq let668 let625) := by timed Eq.trans lean_s35 lean_r247
let lean_s37 := by timed congr lean_s12 lean_s36
let lean_s38 := by timed congr lean_s12 lean_r273
have lean_s39 : let838 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [GE.ge]
have lean_s41 : (Eq fmt0 fmt0) := by timed rfl
have lean_s42 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s43 := by timed congrHAdd lean_s42 lean_r246
have lean_s44 : (Eq let275 let333) := by timed congrHAdd lean_s41 lean_s43
have lean_s45 : (Eq let275 let332) := by timed Eq.trans lean_s44 lean_r113
have lean_s46 : (Eq let277 let332) := by timed Eq.trans lean_r84 lean_s45
have lean_s47 : (Eq let478 let332) := by timed Eq.trans lean_r152 lean_s46
have lean_s48 : (Eq let713 let473) := by timed congr lean_s40 lean_s47
have lean_s49 : (Eq let713 let472) := by timed Eq.trans lean_s48 lean_r147
have lean_s50 : (Eq let714 let772) := by timed flipCongrArg lean_s49 [Not]
have lean_s51 : (Eq let666 let772) := by timed Eq.trans lean_r271 lean_s50
let lean_s52 := by timed congr lean_s12 lean_s51
let lean_s53 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s54 : (Eq let622 let557) := by timed congr lean_s53 lean_r28
have lean_s55 : (Eq let622 let556) := by timed Eq.trans lean_s54 lean_r203
have lean_s56 : (Eq let623 let619) := by timed flipCongrArg lean_s55 [Not]
have lean_s57 : (Eq let623 let555) := by timed Eq.trans lean_s56 lean_r243
have lean_s58 : (Eq let624 let555) := by timed Eq.trans lean_r245 lean_s57
let lean_s59 := by timed congr lean_s12 lean_s58
let lean_s60 := by timed congr lean_s12 lean_r174
have lean_s61 : let877 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq distance distance) := by timed rfl
let lean_s64 := by timed congrHAdd lean_s42 lean_r253
let lean_s65 := by timed congrHAdd lean_s63 lean_s64
have lean_s66 : (Eq let617 let615) := by timed congrHAdd lean_s33 lean_s65
have lean_s67 : (Eq let617 let541) := by timed Eq.trans lean_s66 lean_r240
have lean_s68 : (Eq let618 let541) := by timed Eq.trans lean_r241 lean_s67
have lean_s69 : (Eq let545 let541) := by timed Eq.trans lean_r242 lean_s68
have lean_s70 : (Eq let546 let542) := by timed congr lean_s62 lean_s69
have lean_s71 : (Eq let546 let540) := by timed Eq.trans lean_s70 lean_r195
have lean_s72 : (Eq let547 let771) := by timed flipCongrArg lean_s71 [Not]
have lean_s73 : (Eq let548 let771) := by timed Eq.trans lean_r198 lean_s72
let lean_s74 := by timed congr lean_s12 lean_s73
let lean_s75 := by timed flipCongrArg lean_s61 [Eq]
have lean_s76 : let322 := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [HMul.hMul]
let lean_s78 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s79 : (Eq let612 let521) := by timed congr lean_s78 lean_r236
have lean_s80 : (Eq let612 let18) := by timed Eq.trans lean_s79 lean_r181
have lean_s81 : (Eq let180 let18) := by timed Eq.trans lean_r237 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let425 let425) := by timed rfl
have lean_s84 : (Eq let614 let428) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let614 let427) := by timed Eq.trans lean_s84 lean_r121
have lean_s86 : (Eq let181 let427) := by timed Eq.trans lean_r239 lean_s85
have lean_s87 : (Eq let184 let767) := by timed flipCongrArg lean_s86 [sx5fcount]
have lean_s88 : (Eq let185 let768) := by timed congr lean_s77 lean_s87
let lean_s89 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s90 : (Eq let182 let765) := by timed flipCongrArg lean_s86 [xx5fcount]
have lean_s91 : (Eq let183 let766) := by timed congr lean_s89 lean_s90
let lean_s92 := by timed congrHAdd lean_s88 lean_s91
have lean_s93 : (Eq let186 let769) := by timed congrHAdd lean_s33 lean_s92
have lean_s94 : (Eq let187 let769) := by timed Eq.trans lean_r44 lean_s93
have lean_s95 : (Eq let665 let770) := by timed congr lean_s75 lean_s94
let lean_s96 := by timed congr lean_s12 lean_s95
have lean_s97 : let837 := by timed rfl
let lean_s98 := by timed congr lean_s97 lean_r128
let lean_s99 := by timed congr lean_s97 lean_r143
let lean_s100 := by timed congr lean_s97 lean_r114
let lean_s101 := by timed congr lean_s97 lean_r140
let lean_s102 := by timed congr lean_s97 lean_r13
let lean_s103 := by timed congr lean_s97 lean_r235
let lean_s104 := by timed congr lean_s97 lean_r234
have lean_s105 : let868 := by timed rfl
let lean_s106 := by timed congr lean_s97 lean_s105
let lean_s107 := by timed congr lean_s97 lean_r185
let lean_s108 := by timed congr lean_s97 lean_r209
let lean_s109 := by timed congr lean_s97 lean_r123
let lean_s110 := by timed congr lean_s97 lean_r233
let lean_s111 := by timed congr lean_s97 lean_r231
let lean_s112 := by timed congr lean_s97 lean_r229
let lean_s113 := by timed congr lean_s97 lean_r228
have lean_s114 : let867 := by timed rfl
let lean_s115 := by timed congr lean_s97 lean_s114
let lean_s116 := by timed congr lean_s97 lean_r179
let lean_s117 := by timed congr lean_s97 lean_r145
let lean_s118 := by timed congr lean_s97 lean_r184
let lean_s119 := by timed congr lean_s97 lean_r227
let lean_s120 := by timed congr lean_s97 lean_r225
let lean_s121 := by timed congr lean_s97 lean_r224
let lean_s122 := by timed congr lean_s97 lean_r219
have lean_s123 : let866 := by timed rfl
let lean_s124 := by timed congr lean_s97 lean_s123
let lean_s125 := by timed congr lean_s97 lean_r132
let lean_s126 := by timed congr lean_s97 lean_r108
let lean_s127 := by timed congr lean_s97 lean_r100
let lean_s128 := by timed congr lean_s97 lean_r218
let lean_s129 := by timed congr lean_s97 lean_r171
let lean_s130 := by timed congr lean_s97 lean_r38
let lean_s131 := by timed congr lean_s97 lean_r216
have lean_s132 : let865 := by timed rfl
let lean_s133 := by timed congr lean_s97 lean_s132
let lean_s134 := by timed congr lean_s97 lean_r232
let lean_s135 := by timed congr lean_s97 lean_r204
let lean_s136 := by timed congr lean_s97 lean_r27
let lean_s137 := by timed congr lean_s97 lean_r92
let lean_s138 := by timed congr lean_s97 lean_r18
let lean_s139 := by timed congr lean_s97 lean_r90
let lean_s140 := by timed congr lean_s97 lean_r20
have lean_s141 : let864 := by timed rfl
let lean_s142 := by timed congr lean_s97 lean_s141
let lean_s143 := by timed congr lean_s97 lean_r21
let lean_s144 := by timed congr lean_s97 lean_r199
let lean_s145 := by timed congr lean_s97 lean_r230
let lean_s146 := by timed congr lean_s97 lean_r105
let lean_s147 := by timed congr lean_s97 lean_r215
let lean_s148 := by timed congr lean_s97 lean_r213
let lean_s149 := by timed congr lean_s97 lean_r40
have lean_s150 : let863 := by timed rfl
let lean_s151 := by timed congr lean_s149 lean_s150
let lean_s152 := by timed congr lean_s148 lean_s151
let lean_s153 := by timed congr lean_s147 lean_s152
let lean_s154 := by timed congr lean_s146 lean_s153
let lean_s155 := by timed congr lean_s145 lean_s154
let lean_s156 := by timed congr lean_s144 lean_s155
let lean_s157 := by timed congr lean_s143 lean_s156
let lean_s158 := by timed congr lean_s142 lean_s157
let lean_s159 := by timed congr lean_s140 lean_s158
let lean_s160 := by timed congr lean_s139 lean_s159
let lean_s161 := by timed congr lean_s138 lean_s160
let lean_s162 := by timed congr lean_s137 lean_s161
let lean_s163 := by timed congr lean_s136 lean_s162
let lean_s164 := by timed congr lean_s135 lean_s163
let lean_s165 := by timed congr lean_s134 lean_s164
let lean_s166 := by timed congr lean_s133 lean_s165
let lean_s167 := by timed congr lean_s131 lean_s166
let lean_s168 := by timed congr lean_s130 lean_s167
let lean_s169 := by timed congr lean_s129 lean_s168
let lean_s170 := by timed congr lean_s128 lean_s169
let lean_s171 := by timed congr lean_s127 lean_s170
let lean_s172 := by timed congr lean_s126 lean_s171
let lean_s173 := by timed congr lean_s125 lean_s172
let lean_s174 := by timed congr lean_s124 lean_s173
let lean_s175 := by timed congr lean_s122 lean_s174
let lean_s176 := by timed congr lean_s121 lean_s175
let lean_s177 := by timed congr lean_s120 lean_s176
let lean_s178 := by timed congr lean_s119 lean_s177
let lean_s179 := by timed congr lean_s118 lean_s178
let lean_s180 := by timed congr lean_s117 lean_s179
let lean_s181 := by timed congr lean_s116 lean_s180
let lean_s182 := by timed congr lean_s115 lean_s181
let lean_s183 := by timed congr lean_s113 lean_s182
let lean_s184 := by timed congr lean_s112 lean_s183
let lean_s185 := by timed congr lean_s111 lean_s184
let lean_s186 := by timed congr lean_s110 lean_s185
let lean_s187 := by timed congr lean_s109 lean_s186
let lean_s188 := by timed congr lean_s108 lean_s187
let lean_s189 := by timed congr lean_s107 lean_s188
let lean_s190 := by timed congr lean_s106 lean_s189
let lean_s191 := by timed congr lean_s104 lean_s190
let lean_s192 := by timed congr lean_s103 lean_s191
let lean_s193 := by timed congr lean_s102 lean_s192
let lean_s194 := by timed congr lean_s101 lean_s193
let lean_s195 := by timed congr lean_s100 lean_s194
let lean_s196 := by timed congr lean_s99 lean_s195
have lean_s197 : (Eq let707 let764) := by timed congr lean_s98 lean_s196
have lean_s198 : (Eq let664 let764) := by timed Eq.trans lean_r268 lean_s197
let lean_s199 := by timed congr lean_s12 lean_s198
let lean_s200 := by timed flipCongrArg lean_r128 [And]
have lean_s201 : (Eq let662 let762) := by timed congr lean_s200 lean_r209
have lean_s202 : let862 := by timed rfl
have lean_s203 : let861 := by timed rfl
have lean_s204 : (Eq let663 let763) := by timed congrIte lean_s201 lean_s202 lean_s203
let lean_s205 := by timed congr lean_s12 lean_s204
let lean_s206 := by timed flipCongrArg lean_r185 [And]
have lean_s207 : (Eq let660 let760) := by timed congr lean_s206 lean_r145
have lean_s208 : (Eq let32 let32) := by timed rfl
let lean_s209 := by timed flipCongrArg lean_s208 [Eq]
have lean_s210 : (Eq let659 let562) := by timed congr lean_s209 lean_r208
have lean_s211 : (Eq let659 let239) := by timed Eq.trans lean_s210 lean_r206
have lean_s212 : (Eq let661 let761) := by timed congrIte lean_s207 lean_s211 lean_r26
let lean_s213 := by timed congr lean_s12 lean_s212
let lean_s214 := by timed flipCongrArg lean_r179 [And]
have lean_s215 : (Eq let657 let758) := by timed congr lean_s214 lean_r108
have lean_s216 : (Eq let2 let2) := by timed rfl
let lean_s217 := by timed flipCongrArg lean_s216 [Eq]
have lean_s218 : (Eq let656 let228) := by timed congr lean_s217 lean_r29
have lean_s219 : (Eq let656 let63) := by timed Eq.trans lean_s218 lean_r62
have lean_s220 : (Eq let658 let759) := by timed congrIte lean_s215 lean_s219 lean_r59
let lean_s221 := by timed congr lean_s12 lean_s220
let lean_s222 := by timed flipCongrArg lean_r132 [And]
have lean_s223 : (Eq let654 let756) := by timed congr lean_s222 lean_r204
have lean_s224 : (Eq let302 let302) := by timed rfl
let lean_s225 := by timed flipCongrArg lean_s224 [Eq]
have lean_s226 : (Eq let653 let554) := by timed congr lean_s225 lean_r70
have lean_s227 : (Eq let653 let384) := by timed Eq.trans lean_s226 lean_r202
have lean_s228 : (Eq let655 let757) := by timed congrIte lean_s223 lean_s227 lean_r200
let lean_s229 := by timed congr lean_s12 lean_s228
let lean_s230 := by timed flipCongrArg lean_r232 [And]
have lean_s231 : (Eq let651 let754) := by timed congr lean_s230 lean_r199
have lean_s232 : (Eq let301 let301) := by timed rfl
let lean_s233 := by timed flipCongrArg lean_s232 [Eq]
have lean_s234 : (Eq let650 let538) := by timed congr lean_s233 lean_r196
have lean_s235 : (Eq let650 let379) := by timed Eq.trans lean_s234 lean_r194
have lean_s236 : (Eq let652 let755) := by timed congrIte lean_s231 lean_s235 lean_r96
let lean_s237 := by timed congr lean_s12 lean_s236
let lean_s238 := by timed flipCongrArg lean_r21 [And]
have lean_s239 : (Eq let648 let752) := by timed congr lean_s238 lean_r191
have lean_s240 : (Eq let373 let373) := by timed rfl
let lean_s241 := by timed flipCongrArg lean_s240 [Eq]
have lean_s242 : (Eq let647 let492) := by timed congr lean_s241 lean_r187
have lean_s243 : (Eq let647 let375) := by timed Eq.trans lean_s242 lean_r162
have lean_s244 : (Eq let649 let753) := by timed congrIte lean_s239 lean_s243 lean_r186
let lean_s245 := by timed congr lean_s12 lean_s244
let lean_s246 := by timed flipCongrArg lean_r128 [And]
have lean_s247 : (Eq let645 let750) := by timed congr lean_s246 lean_r123
have lean_s248 : let850 := by timed rfl
have lean_s249 : let849 := by timed rfl
have lean_s250 : (Eq let646 let751) := by timed congrIte lean_s247 lean_s248 lean_s249
let lean_s251 := by timed congr lean_s12 lean_s250
let lean_s252 := by timed flipCongrArg lean_r185 [And]
have lean_s253 : (Eq let643 let748) := by timed congr lean_s252 lean_r184
have lean_s254 : (Eq let25 let25) := by timed rfl
let lean_s255 := by timed flipCongrArg lean_s254 [Eq]
have lean_s256 : (Eq let642 let524) := by timed congr lean_s255 lean_r238
have lean_s257 : (Eq let642 let367) := by timed Eq.trans lean_s256 lean_r183
have lean_s258 : (Eq let644 let749) := by timed congrIte lean_s253 lean_s257 lean_r182
let lean_s259 := by timed congr lean_s12 lean_s258
let lean_s260 := by timed flipCongrArg lean_r179 [And]
have lean_s261 : (Eq let640 let746) := by timed congr lean_s260 lean_r100
have lean_s262 : (Eq let24 let24) := by timed rfl
let lean_s263 := by timed flipCongrArg lean_s262 [Eq]
have lean_s264 : (Eq let639 let90) := by timed congr lean_s263 lean_r11
have lean_s265 : (Eq let639 let45) := by timed Eq.trans lean_s264 lean_r14
have lean_s266 : (Eq let641 let747) := by timed congrIte lean_s261 lean_s265 lean_r98
let lean_s267 := by timed congr lean_s12 lean_s266
let lean_s268 := by timed flipCongrArg lean_r132 [And]
have lean_s269 : (Eq let637 let744) := by timed congr lean_s268 lean_r27
have lean_s270 : (Eq let91 let91) := by timed rfl
let lean_s271 := by timed flipCongrArg lean_s270 [Eq]
have lean_s272 : (Eq let636 let94) := by timed congr lean_s271 lean_r106
have lean_s273 : (Eq let636 let92) := by timed Eq.trans lean_s272 lean_r15
have lean_s274 : (Eq let638 let745) := by timed congrIte lean_s269 lean_s273 lean_r17
let lean_s275 := by timed congr lean_s12 lean_s274
let lean_s276 := by timed flipCongrArg lean_r232 [And]
have lean_s277 : (Eq let634 let742) := by timed congr lean_s276 lean_r230
have lean_s278 : (Eq let117 let117) := by timed rfl
let lean_s279 := by timed flipCongrArg lean_s278 [Eq]
have lean_s280 : (Eq let633 let592) := by timed congr lean_s279 lean_r76
have lean_s281 : (Eq let633 let354) := by timed Eq.trans lean_s280 lean_r226
have lean_s282 : (Eq let635 let743) := by timed congrIte lean_s277 lean_s281 lean_r223
let lean_s283 := by timed congr lean_s12 lean_s282
let lean_s284 := by timed flipCongrArg lean_r21 [And]
have lean_s285 : (Eq let631 let740) := by timed congr lean_s284 lean_r34
have lean_s286 : (Eq let116 let116) := by timed rfl
let lean_s287 := by timed flipCongrArg lean_s286 [Eq]
have lean_s288 : (Eq let630 let120) := by timed congr lean_s287 lean_r39
have lean_s289 : (Eq let630 let118) := by timed Eq.trans lean_s288 lean_r23
have lean_s290 : (Eq let632 let741) := by timed congrIte lean_s285 lean_s289 lean_r109
let lean_s291 := by timed congr lean_s12 lean_s290
have lean_s292 : let837 := by timed rfl
let lean_s293 := by timed flipCongrArg lean_s39 [Eq]
have lean_s294 : (Eq let202 let738) := by timed congr lean_s293 lean_r79
let lean_s295 := by timed congr lean_s292 lean_s294
let lean_s296 := by timed flipCongrArg lean_s39 [Eq]
have lean_s297 : (Eq let200 let737) := by timed congr lean_s296 lean_r28
let lean_s298 := by timed congr lean_s292 lean_s297
let lean_s299 := by timed flipCongrArg lean_s39 [Eq]
have lean_s300 : (Eq let199 let736) := by timed congr lean_s299 lean_r125
let lean_s301 := by timed congr lean_s292 lean_s300
let lean_s302 := by timed flipCongrArg lean_s39 [Eq]
have lean_s303 : (Eq let197 let735) := by timed congr lean_s302 lean_r49
let lean_s304 := by timed congr lean_s292 lean_s303
let lean_s305 := by timed flipCongrArg lean_s39 [Eq]
have lean_s306 : (Eq let195 let734) := by timed congr lean_s305 lean_r211
let lean_s307 := by timed congr lean_s292 lean_s306
let lean_s308 := by timed flipCongrArg lean_s39 [Eq]
have lean_s309 : (Eq let193 let733) := by timed congr lean_s308 lean_r83
let lean_s310 := by timed congr lean_s307 lean_s309
let lean_s311 := by timed congr lean_s304 lean_s310
let lean_s312 := by timed congr lean_s301 lean_s311
let lean_s313 := by timed congr lean_s298 lean_s312
have lean_s314 : (Eq let203 let739) := by timed congr lean_s295 lean_s313
have lean_s315 : (Eq let204 let739) := by timed Eq.trans lean_r46 lean_s314
let lean_s316 := by timed congr lean_s12 lean_s315
have lean_s317 : let837 := by timed rfl
let lean_s318 := by timed flipCongrArg lean_s61 [Eq]
have lean_s319 : (Eq let234 let122) := by timed congr lean_s318 lean_r79
have lean_s320 : (Eq let234 let121) := by timed Eq.trans lean_s319 lean_r24
let lean_s321 := by timed congr lean_s317 lean_s320
let lean_s322 := by timed flipCongrArg lean_s61 [Eq]
have lean_s323 : (Eq let233 let176) := by timed congr lean_s322 lean_r28
have lean_s324 : (Eq let233 let175) := by timed Eq.trans lean_s323 lean_r42
let lean_s325 := by timed congr lean_s317 lean_s324
let lean_s326 := by timed flipCongrArg lean_s61 [Eq]
have lean_s327 : (Eq let232 let488) := by timed congr lean_s326 lean_r125
have lean_s328 : (Eq let232 let487) := by timed Eq.trans lean_s327 lean_r159
let lean_s329 := by timed congr lean_s325 lean_s328
have lean_s330 : (Eq let235 let732) := by timed congr lean_s321 lean_s329
have lean_s331 : (Eq let236 let732) := by timed Eq.trans lean_r65 lean_s330
let lean_s332 := by timed congr lean_s12 lean_s331
have lean_s333 : let836 := by timed rfl
let lean_s334 := by timed congr lean_s333 lean_r32
have lean_s335 : (Eq let147 let164) := by timed flipCongrArg lean_r33 [selectx5fformat]
let lean_s336 := by timed flipCongrArg lean_s335 [Eq]
have lean_s337 : (Eq s s) := by timed rfl
have lean_s338 : (Eq let148 let166) := by timed congr lean_s336 lean_s337
have lean_s339 : (Eq let148 let165) := by timed Eq.trans lean_s338 lean_r37
let lean_s340 := by timed congr lean_s333 lean_s339
let lean_s341 := by timed congr lean_s333 lean_r41
have lean_s342 : (Eq let142 let452) := by timed flipCongrArg lean_r94 [selectx5fformat]
let lean_s343 := by timed flipCongrArg lean_s342 [Eq]
have lean_s344 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s345 : (Eq let143 let454) := by timed congr lean_s343 lean_s344
have lean_s346 : (Eq let143 let453) := by timed Eq.trans lean_s345 lean_r133
let lean_s347 := by timed congr lean_s333 lean_s346
have lean_s348 : (Eq let139 let208) := by timed flipCongrArg lean_r48 [selectx5fformat]
let lean_s349 := by timed flipCongrArg lean_s348 [Eq]
have lean_s350 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s351 : (Eq let140 let210) := by timed congr lean_s349 lean_s350
have lean_s352 : (Eq let140 let209) := by timed Eq.trans lean_s351 lean_r50
let lean_s353 := by timed congr lean_s333 lean_s352
have lean_s354 : (Eq let136 let482) := by timed flipCongrArg lean_r53 [selectx5fformat]
let lean_s355 := by timed flipCongrArg lean_s354 [Eq]
have lean_s356 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s357 : (Eq let137 let484) := by timed congr lean_s355 lean_s356
have lean_s358 : (Eq let137 let483) := by timed Eq.trans lean_s357 lean_r157
let lean_s359 := by timed congr lean_s353 lean_s358
let lean_s360 := by timed congr lean_s347 lean_s359
let lean_s361 := by timed congr lean_s341 lean_s360
let lean_s362 := by timed congr lean_s340 lean_s361
have lean_s363 : (Eq let151 let730) := by timed congr lean_s334 lean_s362
have lean_s364 : (Eq let152 let730) := by timed Eq.trans lean_r31 lean_s363
have lean_s365 : (Eq let629 let731) := by timed flipCongrArg lean_s364 [Not]
let lean_s366 := by timed congr lean_s332 lean_s365
let lean_s367 := by timed congr lean_s316 lean_s366
let lean_s368 := by timed congr lean_s291 lean_s367
let lean_s369 := by timed congr lean_s283 lean_s368
let lean_s370 := by timed congr lean_s275 lean_s369
let lean_s371 := by timed congr lean_s267 lean_s370
let lean_s372 := by timed congr lean_s259 lean_s371
let lean_s373 := by timed congr lean_s251 lean_s372
let lean_s374 := by timed congr lean_s245 lean_s373
let lean_s375 := by timed congr lean_s237 lean_s374
let lean_s376 := by timed congr lean_s229 lean_s375
let lean_s377 := by timed congr lean_s221 lean_s376
let lean_s378 := by timed congr lean_s213 lean_s377
let lean_s379 := by timed congr lean_s205 lean_s378
let lean_s380 := by timed congr lean_s199 lean_s379
let lean_s381 := by timed congr lean_s96 lean_s380
let lean_s382 := by timed congr lean_s74 lean_s381
let lean_s383 := by timed congr lean_s60 lean_s382
let lean_s384 := by timed congr lean_s59 lean_s383
let lean_s385 := by timed congr lean_s52 lean_s384
let lean_s386 := by timed congr lean_s38 lean_s385
let lean_s387 := by timed congr lean_s37 lean_s386
let lean_s388 := by timed congr lean_s32 lean_s387
let lean_s389 := by timed congr lean_s30 lean_s388
let lean_s390 := by timed congr lean_s28 lean_s389
let lean_s391 := by timed congr lean_s26 lean_s390
let lean_s392 := by timed congr lean_s24 lean_s391
let lean_s393 := by timed congr lean_s22 lean_s392
let lean_s394 := by timed congr lean_s20 lean_s393
let lean_s395 := by timed congr lean_s18 lean_s394
let lean_s396 := by timed congr lean_s16 lean_s395
have lean_s397 : (Eq let679 let773) := by timed congr lean_s14 lean_s396
have lean_s398 : (Eq let680 let773) := by timed Eq.trans lean_r249 lean_s397
have lean_s399 : let836 := by timed rfl
have lean_s400 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s401 : let770 := by andElim lean_s400, 16
have lean_s402 : let877 := by timed rfl
let lean_s403 := by timed flipCongrArg lean_s402 [Eq]
have lean_s404 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s405 : let625 := by andElim lean_s404, 10
have lean_s406 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s407 : let669 := by andElim lean_s406, 9
have lean_s408 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s409 : let670 := by andElim lean_s408, 8
have lean_s410 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s411 : let671 := by andElim lean_s410, 7
have lean_s412 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s413 : let672 := by andElim lean_s412, 6
have lean_s414 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s415 : let673 := by andElim lean_s414, 5
have lean_s416 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s417 : let674 := by andElim lean_s416, 4
have lean_s418 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s419 : let675 := by andElim lean_s418, 3
have lean_s420 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s421 : let676 := by andElim lean_s420, 2
have lean_s422 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s423 : let677 := by andElim lean_s422, 1
have lean_s424 : let773 := by timed eqResolve lean_a279 lean_s398
have lean_s425 : let678 := by andElim lean_s424, 0
let lean_s426 := by timed And.intro lean_s423 lean_s425
let lean_s427 := by timed And.intro lean_s421 lean_s426
let lean_s428 := by timed And.intro lean_s419 lean_s427
let lean_s429 := by timed And.intro lean_s417 lean_s428
let lean_s430 := by timed And.intro lean_s415 lean_s429
let lean_s431 := by timed And.intro lean_s413 lean_s430
let lean_s432 := by timed And.intro lean_s411 lean_s431
let lean_s433 := by timed And.intro lean_s409 lean_s432
have lean_s434 : let875 := by timed And.intro lean_s407 lean_s433
have lean_s435 : let669 := by andElim lean_s434, 0
let lean_s436 := by timed flipCongrArg lean_s435 [Eq]
have lean_s437 : let878 := by timed rfl
let lean_s438 := by timed flipCongrArg lean_s437 [HAdd.hAdd]
have lean_s439 : let678 := by andElim lean_s434, 9
have lean_s440 : (Eq let511 let684) := by timed congr lean_s438 lean_s439
have lean_s441 : (Eq let625 let879) := by timed congr lean_s436 lean_s440
have lean_s442 : let237 := by timed rfl
let lean_s443 := by timed flipCongrArg lean_s442 [Eq]
have lean_s444 : (Eq let879 let683) := by timed congr lean_s443 lean_r251
have lean_s445 : (Eq let879 let681) := by timed Eq.trans lean_s444 lean_r250
have lean_s446 : (Eq let625 let681) := by timed Eq.trans lean_s441 lean_s445
have lean_s447 : let681 := by timed eqResolve lean_s405 lean_s446
let lean_s448 := by timed And.intro lean_s423 lean_s425
let lean_s449 := by timed And.intro lean_s421 lean_s448
let lean_s450 := by timed And.intro lean_s419 lean_s449
let lean_s451 := by timed And.intro lean_s417 lean_s450
let lean_s452 := by timed And.intro lean_s415 lean_s451
let lean_s453 := by timed And.intro lean_s413 lean_s452
let lean_s454 := by timed And.intro lean_s411 lean_s453
let lean_s455 := by timed And.intro lean_s409 lean_s454
let lean_s456 := by timed And.intro lean_s407 lean_s455
have lean_s457 : let876 := by timed And.intro lean_s447 lean_s456
have lean_s458 : let681 := by andElim lean_s457, 0
have lean_s459 : let322 := by timed rfl
let lean_s460 := by timed flipCongrArg lean_s459 [HMul.hMul]
have lean_s461 : let869 := by timed rfl
have lean_s462 : let838 := by timed rfl
have lean_s463 : let872 := by timed rfl
let lean_s464 := by timed flipCongrArg lean_s463 [HMul.hMul]
have lean_s465 : let669 := by andElim lean_s457, 1
have lean_s466 : let885 := by timed congr lean_s464 lean_s465
let lean_s467 := by timed congrHAdd lean_s462 lean_s466
have lean_s468 : let884 := by timed congrHAdd lean_s461 lean_s467
have lean_s469 : let887 := by timed flipCongrArg lean_s468 [sx5fcount]
have lean_s470 : let886 := by timed congr lean_s460 lean_s469
let lean_s471 := by timed flipCongrArg lean_s459 [HMul.hMul]
have lean_s472 : let883 := by timed flipCongrArg lean_s468 [xx5fcount]
have lean_s473 : let882 := by timed congr lean_s471 lean_s472
let lean_s474 := by timed congrHAdd lean_s470 lean_s473
have lean_s475 : let881 := by timed congrHAdd lean_s458 lean_s474
have lean_s476 : (Eq let770 let880) := by timed congr lean_s403 lean_s475
let lean_s477 := by timed flipCongrArg lean_s61 [Eq]
have lean_s478 : (Eq let85 let85) := by timed rfl
let lean_s479 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s480 : let869 := by timed rfl
let lean_s481 := by timed congrHAdd lean_s39 lean_r192
have lean_s482 : (Eq let817 let115) := by timed congrHAdd lean_s480 lean_s481
have lean_s483 : (Eq let817 let18) := by timed Eq.trans lean_s482 lean_r22
have lean_s484 : (Eq let820 let20) := by timed flipCongrArg lean_s483 [sx5fcount]
have lean_s485 : (Eq let821 let105) := by timed congr lean_s479 lean_s484
let lean_s486 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s487 : (Eq let818 let19) := by timed flipCongrArg lean_s483 [xx5fcount]
have lean_s488 : (Eq let819 let104) := by timed congr lean_s486 lean_s487
let lean_s489 := by timed congrHAdd lean_s485 lean_s488
have lean_s490 : (Eq let822 let107) := by timed congrHAdd lean_s478 lean_s489
have lean_s491 : (Eq let880 let874) := by timed congr lean_s477 lean_s490
have lean_s492 : (Eq let770 let874) := by timed Eq.trans lean_s476 lean_s491
have lean_s493 : let874 := by timed eqResolve lean_s401 lean_s492
let lean_s494 := by timed And.intro lean_s423 lean_s425
let lean_s495 := by timed And.intro lean_s421 lean_s494
let lean_s496 := by timed And.intro lean_s419 lean_s495
let lean_s497 := by timed And.intro lean_s417 lean_s496
let lean_s498 := by timed And.intro lean_s415 lean_s497
let lean_s499 := by timed And.intro lean_s413 lean_s498
let lean_s500 := by timed And.intro lean_s411 lean_s499
let lean_s501 := by timed And.intro lean_s409 lean_s500
let lean_s502 := by timed And.intro lean_s407 lean_s501
let lean_s503 := by timed And.intro lean_s447 lean_s502
have lean_s504 : (And let874 let876) := by timed And.intro lean_s493 lean_s503
have lean_s505 : let678 := by andElim lean_s504, 11
let lean_s506 := by timed flipCongrArg lean_s505 [Eq]
have lean_s507 : let215 := by timed rfl
have lean_s508 : (Eq let678 let215) := by timed congr lean_s506 lean_s507
let lean_s509 := by timed congr lean_s399 lean_s508
have lean_s510 : let677 := by andElim lean_s504, 10
let lean_s511 := by timed flipCongrArg lean_s510 [Eq]
have lean_s512 : let216 := by timed rfl
have lean_s513 : (Eq let677 let216) := by timed congr lean_s511 lean_s512
let lean_s514 := by timed congr lean_s399 lean_s513
have lean_s515 : let676 := by andElim lean_s504, 9
let lean_s516 := by timed flipCongrArg lean_s515 [Eq]
have lean_s517 : let476 := by timed rfl
have lean_s518 : (Eq let676 let476) := by timed congr lean_s516 lean_s517
let lean_s519 := by timed congr lean_s399 lean_s518
have lean_s520 : let675 := by andElim lean_s504, 8
let lean_s521 := by timed flipCongrArg lean_s520 [Eq]
have lean_s522 : (Eq let675 let476) := by timed congr lean_s521 lean_s517
let lean_s523 := by timed congr lean_s399 lean_s522
have lean_s524 : let674 := by andElim lean_s504, 7
let lean_s525 := by timed flipCongrArg lean_s524 [Eq]
have lean_s526 : let322 := by timed rfl
have lean_s527 : (Eq let674 let322) := by timed congr lean_s525 lean_s526
let lean_s528 := by timed congr lean_s399 lean_s527
have lean_s529 : let673 := by andElim lean_s504, 6
let lean_s530 := by timed flipCongrArg lean_s529 [Eq]
have lean_s531 : (Eq let673 let322) := by timed congr lean_s530 lean_s526
let lean_s532 := by timed congr lean_s399 lean_s531
have lean_s533 : let672 := by andElim lean_s504, 5
let lean_s534 := by timed flipCongrArg lean_s533 [Eq]
have lean_s535 : let258 := by timed rfl
have lean_s536 : (Eq let672 let258) := by timed congr lean_s534 lean_s535
let lean_s537 := by timed congr lean_s399 lean_s536
have lean_s538 : let671 := by andElim lean_s504, 4
let lean_s539 := by timed flipCongrArg lean_s538 [Eq]
have lean_s540 : let221 := by timed rfl
have lean_s541 : (Eq let671 let221) := by timed congr lean_s539 lean_s540
let lean_s542 := by timed congr lean_s399 lean_s541
have lean_s543 : let670 := by andElim lean_s504, 3
let lean_s544 := by timed flipCongrArg lean_s543 [Eq]
have lean_s545 : let227 := by timed rfl
have lean_s546 : (Eq let670 let227) := by timed congr lean_s544 lean_s545
let lean_s547 := by timed congr lean_s399 lean_s546
have lean_s548 : let669 := by andElim lean_s504, 2
let lean_s549 := by timed flipCongrArg lean_s548 [Eq]
have lean_s550 : let237 := by timed rfl
have lean_s551 : (Eq let669 let237) := by timed congr lean_s549 lean_s550
let lean_s552 := by timed congr lean_s399 lean_s551
let lean_s553 := by timed flipCongrArg lean_s548 [Eq]
have lean_s554 : let681 := by andElim lean_s504, 1
let lean_s555 := by timed flipCongrArg lean_s554 [HAdd.hAdd]
have lean_s556 : (Eq let511 let231) := by timed congr lean_s555 lean_s505
have lean_s557 : (Eq let625 let834) := by timed congr lean_s553 lean_s556
let lean_s558 := by timed congr lean_s399 lean_s557
let lean_s559 := by timed flipCongrArg lean_s548 [HAdd.hAdd]
have lean_s560 : let872 := by timed rfl
let lean_s561 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s562 : let874 := by andElim lean_s504, 0
have lean_s563 : (Eq let716 let700) := by timed congr lean_s561 lean_s562
have lean_s564 : (Eq let717 let831) := by timed congr lean_s559 lean_s563
let lean_s565 := by timed flipCongrArg lean_s564 [GE.ge]
have lean_s566 : let873 := by timed rfl
have lean_s567 : (Eq let718 let832) := by timed congr lean_s565 lean_s566
have lean_s568 : (Eq let719 let833) := by timed flipCongrArg lean_s567 [Not]
let lean_s569 := by timed congr lean_s399 lean_s568
have lean_s570 : let838 := by timed rfl
let lean_s571 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s572 : let885 := by timed congr lean_s571 lean_s548
let lean_s573 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s574 : (Eq let470 let441) := by timed congr lean_s573 lean_s510
let lean_s575 := by timed congrHAdd lean_s572 lean_s574
have lean_s576 : (Eq let471 let828) := by timed congrHAdd lean_s570 lean_s575
let lean_s577 := by timed flipCongrArg lean_s576 [GE.ge]
have lean_s578 : (Eq let472 let829) := by timed congr lean_s577 lean_s560
have lean_s579 : (Eq let772 let830) := by timed flipCongrArg lean_s578 [Not]
let lean_s580 := by timed congr lean_s399 lean_s579
let lean_s581 := by timed flipCongrArg lean_s570 [HAdd.hAdd]
have lean_s582 : (Eq let426 let816) := by timed congr lean_s581 lean_s572
let lean_s583 := by timed flipCongrArg lean_s582 [GE.ge]
have lean_s584 : let871 := by timed rfl
have lean_s585 : (Eq let555 let827) := by timed congr lean_s583 lean_s584
let lean_s586 := by timed congr lean_s399 lean_s585
let lean_s587 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s588 : (Eq let508 let435) := by timed congr lean_s587 lean_s554
let lean_s589 := by timed flipCongrArg lean_s560 [HMul.hMul]
have lean_s590 : (Eq let507 let86) := by timed congr lean_s589 lean_s505
let lean_s591 := by timed congrHAdd lean_s588 lean_s590
have lean_s592 : (Eq let509 let438) := by timed congrHAdd lean_s562 lean_s591
let lean_s593 := by timed flipCongrArg lean_s592 [GE.ge]
have lean_s594 : (Eq let510 let826) := by timed congr lean_s593 lean_s550
let lean_s595 := by timed congr lean_s399 lean_s594
let lean_s596 := by timed congrHAdd lean_s574 lean_s590
let lean_s597 := by timed congrHAdd lean_s588 lean_s596
have lean_s598 : (Eq let539 let444) := by timed congrHAdd lean_s562 lean_s597
let lean_s599 := by timed flipCongrArg lean_s598 [GE.ge]
have lean_s600 : let870 := by timed rfl
have lean_s601 : (Eq let540 let824) := by timed congr lean_s599 lean_s600
have lean_s602 : (Eq let771 let825) := by timed flipCongrArg lean_s601 [Not]
let lean_s603 := by timed congr lean_s399 lean_s602
let lean_s604 := by timed flipCongrArg lean_s562 [Eq]
let lean_s605 := by timed flipCongrArg lean_s526 [HMul.hMul]
have lean_s606 : let869 := by timed rfl
let lean_s607 := by timed congrHAdd lean_s570 lean_s572
have lean_s608 : let884 := by timed congrHAdd lean_s606 lean_s607
have lean_s609 : let887 := by timed flipCongrArg lean_s608 [sx5fcount]
have lean_s610 : let886 := by timed congr lean_s605 lean_s609
let lean_s611 := by timed flipCongrArg lean_s526 [HMul.hMul]
have lean_s612 : let883 := by timed flipCongrArg lean_s608 [xx5fcount]
have lean_s613 : let882 := by timed congr lean_s611 lean_s612
let lean_s614 := by timed congrHAdd lean_s610 lean_s613
have lean_s615 : let881 := by timed congrHAdd lean_s554 lean_s614
have lean_s616 : (Eq let770 let823) := by timed congr lean_s604 lean_s615
let lean_s617 := by timed congr lean_s399 lean_s616
have lean_s618 : let837 := by timed rfl
let lean_s619 := by timed flipCongrArg lean_s533 [Eq]
have lean_s620 : (Eq let87 let87) := by timed rfl
have lean_s621 : (Eq let439 let226) := by timed congr lean_s619 lean_s620
let lean_s622 := by timed congr lean_s618 lean_s621
let lean_s623 := by timed flipCongrArg lean_s538 [Eq]
have lean_s624 : (Eq let464 let531) := by timed congr lean_s623 lean_s620
let lean_s625 := by timed congr lean_s618 lean_s624
let lean_s626 := by timed flipCongrArg lean_s543 [Eq]
have lean_s627 : (Eq let334 let312) := by timed congr lean_s626 lean_s620
let lean_s628 := by timed congr lean_s618 lean_s627
let lean_s629 := by timed flipCongrArg lean_s515 [Eq]
have lean_s630 : (Eq let461 let514) := by timed congr lean_s629 lean_s620
let lean_s631 := by timed congr lean_s618 lean_s630
let lean_s632 := by timed flipCongrArg lean_s520 [Eq]
have lean_s633 : (Eq let88 let514) := by timed congr lean_s632 lean_s620
let lean_s634 := by timed congr lean_s618 lean_s633
let lean_s635 := by timed flipCongrArg lean_s524 [Eq]
have lean_s636 : (Eq let609 let269) := by timed congr lean_s635 lean_s620
let lean_s637 := by timed congr lean_s618 lean_s636
let lean_s638 := by timed flipCongrArg lean_s529 [Eq]
have lean_s639 : (Eq let607 let269) := by timed congr lean_s638 lean_s620
let lean_s640 := by timed congr lean_s618 lean_s639
have lean_s641 : let868 := by timed rfl
let lean_s642 := by timed congr lean_s618 lean_s641
let lean_s643 := by timed flipCongrArg lean_s533 [Eq]
have lean_s644 : (Eq let218 let218) := by timed rfl
have lean_s645 : (Eq let527 let267) := by timed congr lean_s643 lean_s644
let lean_s646 := by timed congr lean_s618 lean_s645
let lean_s647 := by timed flipCongrArg lean_s538 [Eq]
have lean_s648 : (Eq let565 let220) := by timed congr lean_s647 lean_s644
let lean_s649 := by timed congr lean_s618 lean_s648
let lean_s650 := by timed flipCongrArg lean_s543 [Eq]
have lean_s651 : (Eq let430 let230) := by timed congr lean_s650 lean_s644
let lean_s652 := by timed congr lean_s618 lean_s651
let lean_s653 := by timed flipCongrArg lean_s515 [Eq]
have lean_s654 : (Eq let605 let420) := by timed congr lean_s653 lean_s644
let lean_s655 := by timed congr lean_s618 lean_s654
let lean_s656 := by timed flipCongrArg lean_s520 [Eq]
have lean_s657 : (Eq let601 let420) := by timed congr lean_s656 lean_s644
let lean_s658 := by timed congr lean_s618 lean_s657
let lean_s659 := by timed flipCongrArg lean_s524 [Eq]
have lean_s660 : (Eq let597 let456) := by timed congr lean_s659 lean_s644
let lean_s661 := by timed congr lean_s618 lean_s660
let lean_s662 := by timed flipCongrArg lean_s529 [Eq]
have lean_s663 : (Eq let595 let456) := by timed congr lean_s662 lean_s644
let lean_s664 := by timed congr lean_s618 lean_s663
have lean_s665 : let867 := by timed rfl
let lean_s666 := by timed congr lean_s618 lean_s665
let lean_s667 := by timed flipCongrArg lean_s533 [Eq]
have lean_s668 : (Eq let328 let328) := by timed rfl
have lean_s669 : (Eq let517 let494) := by timed congr lean_s667 lean_s668
let lean_s670 := by timed congr lean_s618 lean_s669
let lean_s671 := by timed flipCongrArg lean_s538 [Eq]
have lean_s672 : (Eq let467 let570) := by timed congr lean_s671 lean_s668
let lean_s673 := by timed congr lean_s618 lean_s672
let lean_s674 := by timed flipCongrArg lean_s543 [Eq]
have lean_s675 : (Eq let525 let495) := by timed congr lean_s674 lean_s668
let lean_s676 := by timed congr lean_s618 lean_s675
let lean_s677 := by timed flipCongrArg lean_s515 [Eq]
have lean_s678 : (Eq let593 let330) := by timed congr lean_s677 lean_s668
let lean_s679 := by timed congr lean_s618 lean_s678
let lean_s680 := by timed flipCongrArg lean_s520 [Eq]
have lean_s681 : (Eq let590 let330) := by timed congr lean_s680 lean_s668
let lean_s682 := by timed congr lean_s618 lean_s681
let lean_s683 := by timed flipCongrArg lean_s524 [Eq]
have lean_s684 : (Eq let588 let423) := by timed congr lean_s683 lean_s668
let lean_s685 := by timed congr lean_s618 lean_s684
let lean_s686 := by timed flipCongrArg lean_s529 [Eq]
have lean_s687 : (Eq let581 let423) := by timed congr lean_s686 lean_s668
let lean_s688 := by timed congr lean_s618 lean_s687
have lean_s689 : let866 := by timed rfl
let lean_s690 := by timed congr lean_s618 lean_s689
let lean_s691 := by timed flipCongrArg lean_s533 [Eq]
have lean_s692 : (Eq let167 let167) := by timed rfl
have lean_s693 : (Eq let450 let490) := by timed congr lean_s691 lean_s692
let lean_s694 := by timed congr lean_s618 lean_s693
let lean_s695 := by timed flipCongrArg lean_s538 [Eq]
have lean_s696 : (Eq let323 let503) := by timed congr lean_s695 lean_s692
let lean_s697 := by timed congr lean_s618 lean_s696
let lean_s698 := by timed flipCongrArg lean_s543 [Eq]
have lean_s699 : (Eq let309 let179) := by timed congr lean_s698 lean_s692
let lean_s700 := by timed congr lean_s618 lean_s699
let lean_s701 := by timed flipCongrArg lean_s515 [Eq]
have lean_s702 : (Eq let579 let445) := by timed congr lean_s701 lean_s692
let lean_s703 := by timed congr lean_s618 lean_s702
let lean_s704 := by timed flipCongrArg lean_s520 [Eq]
have lean_s705 : (Eq let501 let445) := by timed congr lean_s704 lean_s692
let lean_s706 := by timed congr lean_s618 lean_s705
let lean_s707 := by timed flipCongrArg lean_s524 [Eq]
have lean_s708 : (Eq let168 let317) := by timed congr lean_s707 lean_s692
let lean_s709 := by timed congr lean_s618 lean_s708
let lean_s710 := by timed flipCongrArg lean_s529 [Eq]
have lean_s711 : (Eq let576 let317) := by timed congr lean_s710 lean_s692
let lean_s712 := by timed congr lean_s618 lean_s711
have lean_s713 : let865 := by timed rfl
let lean_s714 := by timed congr lean_s618 lean_s713
let lean_s715 := by timed flipCongrArg lean_s533 [Eq]
have lean_s716 : (Eq let101 let101) := by timed rfl
have lean_s717 : (Eq let603 let434) := by timed congr lean_s715 lean_s716
let lean_s718 := by timed congr lean_s618 lean_s717
let lean_s719 := by timed flipCongrArg lean_s538 [Eq]
have lean_s720 : (Eq let558 let223) := by timed congr lean_s719 lean_s716
let lean_s721 := by timed congr lean_s618 lean_s720
let lean_s722 := by timed flipCongrArg lean_s543 [Eq]
have lean_s723 : (Eq let128 let489) := by timed congr lean_s722 lean_s716
let lean_s724 := by timed congr lean_s618 lean_s723
let lean_s725 := by timed flipCongrArg lean_s515 [Eq]
have lean_s726 : (Eq let291 let513) := by timed congr lean_s725 lean_s716
let lean_s727 := by timed congr lean_s618 lean_s726
let lean_s728 := by timed flipCongrArg lean_s520 [Eq]
have lean_s729 : (Eq let102 let513) := by timed congr lean_s728 lean_s716
let lean_s730 := by timed congr lean_s618 lean_s729
let lean_s731 := by timed flipCongrArg lean_s524 [Eq]
have lean_s732 : (Eq let286 let500) := by timed congr lean_s731 lean_s716
let lean_s733 := by timed congr lean_s618 lean_s732
let lean_s734 := by timed flipCongrArg lean_s529 [Eq]
have lean_s735 : (Eq let109 let500) := by timed congr lean_s734 lean_s716
let lean_s736 := by timed congr lean_s618 lean_s735
have lean_s737 : let864 := by timed rfl
let lean_s738 := by timed congr lean_s618 lean_s737
let lean_s739 := by timed flipCongrArg lean_s533 [Eq]
have lean_s740 : (Eq let111 let111) := by timed rfl
have lean_s741 : (Eq let112 let480) := by timed congr lean_s739 lean_s740
let lean_s742 := by timed congr lean_s618 lean_s741
let lean_s743 := by timed flipCongrArg lean_s538 [Eq]
have lean_s744 : (Eq let549 let585) := by timed congr lean_s743 lean_s740
let lean_s745 := by timed congr lean_s618 lean_s744
let lean_s746 := by timed flipCongrArg lean_s543 [Eq]
have lean_s747 : (Eq let599 let429) := by timed congr lean_s746 lean_s740
let lean_s748 := by timed congr lean_s618 lean_s747
let lean_s749 := by timed flipCongrArg lean_s515 [Eq]
have lean_s750 : (Eq let319 let466) := by timed congr lean_s749 lean_s740
let lean_s751 := by timed congr lean_s618 lean_s750
let lean_s752 := by timed flipCongrArg lean_s520 [Eq]
have lean_s753 : (Eq let574 let466) := by timed congr lean_s752 lean_s740
let lean_s754 := by timed congr lean_s618 lean_s753
let lean_s755 := by timed flipCongrArg lean_s524 [Eq]
have lean_s756 : (Eq let571 let497) := by timed congr lean_s755 lean_s740
let lean_s757 := by timed congr lean_s618 lean_s756
let lean_s758 := by timed flipCongrArg lean_s529 [Eq]
have lean_s759 : (Eq let171 let497) := by timed congr lean_s758 lean_s740
let lean_s760 := by timed congr lean_s618 lean_s759
have lean_s761 : let863 := by timed rfl
let lean_s762 := by timed congr lean_s760 lean_s761
let lean_s763 := by timed congr lean_s757 lean_s762
let lean_s764 := by timed congr lean_s754 lean_s763
let lean_s765 := by timed congr lean_s751 lean_s764
let lean_s766 := by timed congr lean_s748 lean_s765
let lean_s767 := by timed congr lean_s745 lean_s766
let lean_s768 := by timed congr lean_s742 lean_s767
let lean_s769 := by timed congr lean_s738 lean_s768
let lean_s770 := by timed congr lean_s736 lean_s769
let lean_s771 := by timed congr lean_s733 lean_s770
let lean_s772 := by timed congr lean_s730 lean_s771
let lean_s773 := by timed congr lean_s727 lean_s772
let lean_s774 := by timed congr lean_s724 lean_s773
let lean_s775 := by timed congr lean_s721 lean_s774
let lean_s776 := by timed congr lean_s718 lean_s775
let lean_s777 := by timed congr lean_s714 lean_s776
let lean_s778 := by timed congr lean_s712 lean_s777
let lean_s779 := by timed congr lean_s709 lean_s778
let lean_s780 := by timed congr lean_s706 lean_s779
let lean_s781 := by timed congr lean_s703 lean_s780
let lean_s782 := by timed congr lean_s700 lean_s781
let lean_s783 := by timed congr lean_s697 lean_s782
let lean_s784 := by timed congr lean_s694 lean_s783
let lean_s785 := by timed congr lean_s690 lean_s784
let lean_s786 := by timed congr lean_s688 lean_s785
let lean_s787 := by timed congr lean_s685 lean_s786
let lean_s788 := by timed congr lean_s682 lean_s787
let lean_s789 := by timed congr lean_s679 lean_s788
let lean_s790 := by timed congr lean_s676 lean_s789
let lean_s791 := by timed congr lean_s673 lean_s790
let lean_s792 := by timed congr lean_s670 lean_s791
let lean_s793 := by timed congr lean_s666 lean_s792
let lean_s794 := by timed congr lean_s664 lean_s793
let lean_s795 := by timed congr lean_s661 lean_s794
let lean_s796 := by timed congr lean_s658 lean_s795
let lean_s797 := by timed congr lean_s655 lean_s796
let lean_s798 := by timed congr lean_s652 lean_s797
let lean_s799 := by timed congr lean_s649 lean_s798
let lean_s800 := by timed congr lean_s646 lean_s799
let lean_s801 := by timed congr lean_s642 lean_s800
let lean_s802 := by timed congr lean_s640 lean_s801
let lean_s803 := by timed congr lean_s637 lean_s802
let lean_s804 := by timed congr lean_s634 lean_s803
let lean_s805 := by timed congr lean_s631 lean_s804
let lean_s806 := by timed congr lean_s628 lean_s805
let lean_s807 := by timed congr lean_s625 lean_s806
have lean_s808 : (Eq let764 let815) := by timed congr lean_s622 lean_s807
let lean_s809 := by timed congr lean_s399 lean_s808
let lean_s810 := by timed flipCongrArg lean_s621 [And]
have lean_s811 : (Eq let762 let813) := by timed congr lean_s810 lean_s648
have lean_s812 : let862 := by timed rfl
have lean_s813 : let861 := by timed rfl
have lean_s814 : (Eq let763 let814) := by timed congrIte lean_s811 lean_s812 lean_s813
let lean_s815 := by timed congr lean_s399 lean_s814
let lean_s816 := by timed flipCongrArg lean_s645 [And]
have lean_s817 : (Eq let760 let811) := by timed congr lean_s816 lean_s672
have lean_s818 : let860 := by timed rfl
have lean_s819 : let859 := by timed rfl
have lean_s820 : (Eq let761 let812) := by timed congrIte lean_s817 lean_s818 lean_s819
let lean_s821 := by timed congr lean_s399 lean_s820
let lean_s822 := by timed flipCongrArg lean_s669 [And]
have lean_s823 : (Eq let758 let809) := by timed congr lean_s822 lean_s696
have lean_s824 : let858 := by timed rfl
have lean_s825 : let857 := by timed rfl
have lean_s826 : (Eq let759 let810) := by timed congrIte lean_s823 lean_s824 lean_s825
let lean_s827 := by timed congr lean_s399 lean_s826
let lean_s828 := by timed flipCongrArg lean_s693 [And]
have lean_s829 : (Eq let756 let807) := by timed congr lean_s828 lean_s720
have lean_s830 : let856 := by timed rfl
have lean_s831 : let855 := by timed rfl
have lean_s832 : (Eq let757 let808) := by timed congrIte lean_s829 lean_s830 lean_s831
let lean_s833 := by timed congr lean_s399 lean_s832
let lean_s834 := by timed flipCongrArg lean_s717 [And]
have lean_s835 : (Eq let754 let805) := by timed congr lean_s834 lean_s744
have lean_s836 : let854 := by timed rfl
have lean_s837 : let853 := by timed rfl
have lean_s838 : (Eq let755 let806) := by timed congrIte lean_s835 lean_s836 lean_s837
let lean_s839 := by timed congr lean_s399 lean_s838
let lean_s840 := by timed flipCongrArg lean_s741 [And]
let lean_s841 := by timed flipCongrArg lean_s538 [Eq]
have lean_s842 : (Eq let156 let156) := by timed rfl
have lean_s843 : (Eq let532 let496) := by timed congr lean_s841 lean_s842
have lean_s844 : (Eq let752 let803) := by timed congr lean_s840 lean_s843
have lean_s845 : let852 := by timed rfl
have lean_s846 : let851 := by timed rfl
have lean_s847 : (Eq let753 let804) := by timed congrIte lean_s844 lean_s845 lean_s846
let lean_s848 := by timed congr lean_s399 lean_s847
let lean_s849 := by timed flipCongrArg lean_s621 [And]
have lean_s850 : (Eq let750 let801) := by timed congr lean_s849 lean_s651
have lean_s851 : let850 := by timed rfl
have lean_s852 : let849 := by timed rfl
have lean_s853 : (Eq let751 let802) := by timed congrIte lean_s850 lean_s851 lean_s852
let lean_s854 := by timed congr lean_s399 lean_s853
let lean_s855 := by timed flipCongrArg lean_s645 [And]
have lean_s856 : (Eq let748 let799) := by timed congr lean_s855 lean_s675
have lean_s857 : let848 := by timed rfl
have lean_s858 : let847 := by timed rfl
have lean_s859 : (Eq let749 let800) := by timed congrIte lean_s856 lean_s857 lean_s858
let lean_s860 := by timed congr lean_s399 lean_s859
let lean_s861 := by timed flipCongrArg lean_s669 [And]
have lean_s862 : (Eq let746 let797) := by timed congr lean_s861 lean_s699
have lean_s863 : let846 := by timed rfl
have lean_s864 : let845 := by timed rfl
have lean_s865 : (Eq let747 let798) := by timed congrIte lean_s862 lean_s863 lean_s864
let lean_s866 := by timed congr lean_s399 lean_s865
let lean_s867 := by timed flipCongrArg lean_s693 [And]
have lean_s868 : (Eq let744 let795) := by timed congr lean_s867 lean_s723
have lean_s869 : let844 := by timed rfl
have lean_s870 : let843 := by timed rfl
have lean_s871 : (Eq let745 let796) := by timed congrIte lean_s868 lean_s869 lean_s870
let lean_s872 := by timed congr lean_s399 lean_s871
let lean_s873 := by timed flipCongrArg lean_s717 [And]
have lean_s874 : (Eq let742 let793) := by timed congr lean_s873 lean_s747
have lean_s875 : let842 := by timed rfl
have lean_s876 : let841 := by timed rfl
have lean_s877 : (Eq let743 let794) := by timed congrIte lean_s874 lean_s875 lean_s876
let lean_s878 := by timed congr lean_s399 lean_s877
let lean_s879 := by timed flipCongrArg lean_s741 [And]
let lean_s880 := by timed flipCongrArg lean_s543 [Eq]
have lean_s881 : (Eq let157 let474) := by timed congr lean_s880 lean_s842
have lean_s882 : (Eq let740 let791) := by timed congr lean_s879 lean_s881
have lean_s883 : let840 := by timed rfl
have lean_s884 : let839 := by timed rfl
have lean_s885 : (Eq let741 let792) := by timed congrIte lean_s882 lean_s883 lean_s884
let lean_s886 := by timed congr lean_s399 lean_s885
have lean_s887 : let837 := by timed rfl
let lean_s888 := by timed flipCongrArg lean_s570 [Eq]
have lean_s889 : (Eq let738 let347) := by timed congr lean_s888 lean_s548
let lean_s890 := by timed congr lean_s887 lean_s889
let lean_s891 := by timed flipCongrArg lean_s570 [Eq]
let lean_s892 := by timed flipCongrArg lean_s566 [HAdd.hAdd]
have lean_s893 : (Eq let130 let498) := by timed congr lean_s892 lean_s548
have lean_s894 : (Eq let737 let789) := by timed congr lean_s891 lean_s893
let lean_s895 := by timed congr lean_s887 lean_s894
let lean_s896 := by timed flipCongrArg lean_s570 [Eq]
let lean_s897 := by timed flipCongrArg lean_s584 [HAdd.hAdd]
have lean_s898 : (Eq let433 let463) := by timed congr lean_s897 lean_s548
have lean_s899 : (Eq let736 let788) := by timed congr lean_s896 lean_s898
let lean_s900 := by timed congr lean_s887 lean_s899
let lean_s901 := by timed flipCongrArg lean_s570 [Eq]
let lean_s902 := by timed flipCongrArg lean_s517 [HAdd.hAdd]
have lean_s903 : (Eq let207 let308) := by timed congr lean_s902 lean_s548
have lean_s904 : (Eq let735 let787) := by timed congr lean_s901 lean_s903
let lean_s905 := by timed congr lean_s887 lean_s904
let lean_s906 := by timed flipCongrArg lean_s570 [Eq]
let lean_s907 := by timed flipCongrArg lean_s526 [HAdd.hAdd]
have lean_s908 : (Eq let569 let455) := by timed congr lean_s907 lean_s548
have lean_s909 : (Eq let734 let786) := by timed congr lean_s906 lean_s908
let lean_s910 := by timed congr lean_s887 lean_s909
let lean_s911 := by timed flipCongrArg lean_s570 [Eq]
have lean_s912 : (Eq let16 let16) := by timed rfl
let lean_s913 := by timed flipCongrArg lean_s912 [HAdd.hAdd]
have lean_s914 : (Eq let273 let205) := by timed congr lean_s913 lean_s548
have lean_s915 : (Eq let733 let785) := by timed congr lean_s911 lean_s914
let lean_s916 := by timed congr lean_s910 lean_s915
let lean_s917 := by timed congr lean_s905 lean_s916
let lean_s918 := by timed congr lean_s900 lean_s917
let lean_s919 := by timed congr lean_s895 lean_s918
have lean_s920 : (Eq let739 let790) := by timed congr lean_s890 lean_s919
let lean_s921 := by timed congr lean_s399 lean_s920
have lean_s922 : let837 := by timed rfl
let lean_s923 := by timed flipCongrArg lean_s548 [Eq]
have lean_s924 : (Eq let121 let265) := by timed congr lean_s923 lean_s562
let lean_s925 := by timed congr lean_s922 lean_s924
let lean_s926 := by timed flipCongrArg lean_s548 [Eq]
let lean_s927 := by timed flipCongrArg lean_s560 [HAdd.hAdd]
have lean_s928 : (Eq let174 let280) := by timed congr lean_s927 lean_s562
have lean_s929 : (Eq let175 let783) := by timed congr lean_s926 lean_s928
let lean_s930 := by timed congr lean_s922 lean_s929
let lean_s931 := by timed flipCongrArg lean_s548 [Eq]
let lean_s932 := by timed flipCongrArg lean_s606 [HAdd.hAdd]
have lean_s933 : (Eq let486 let108) := by timed congr lean_s932 lean_s562
have lean_s934 : (Eq let487 let782) := by timed congr lean_s931 lean_s933
let lean_s935 := by timed congr lean_s930 lean_s934
have lean_s936 : (Eq let732 let784) := by timed congr lean_s925 lean_s935
let lean_s937 := by timed congr lean_s399 lean_s936
have lean_s938 : let836 := by timed rfl
let lean_s939 := by timed flipCongrArg lean_s533 [Eq]
have lean_s940 : (Eq let149 let149) := by timed rfl
have lean_s941 : (Eq let153 let692) := by timed congr lean_s939 lean_s940
let lean_s942 := by timed congr lean_s938 lean_s941
let lean_s943 := by timed flipCongrArg lean_s538 [Eq]
have lean_s944 : (Eq let164 let164) := by timed rfl
have lean_s945 : (Eq let165 let477) := by timed congr lean_s943 lean_s944
let lean_s946 := by timed congr lean_s938 lean_s945
let lean_s947 := by timed flipCongrArg lean_s515 [Eq]
have lean_s948 : (Eq let144 let270) := by timed flipCongrArg lean_s562 [selectx5fformat]
have lean_s949 : (Eq let173 let272) := by timed congr lean_s947 lean_s948
let lean_s950 := by timed congr lean_s938 lean_s949
let lean_s951 := by timed flipCongrArg lean_s520 [Eq]
let lean_s952 := by timed flipCongrArg lean_s566 [HAdd.hAdd]
have lean_s953 : (Eq let296 let327) := by timed congr lean_s952 lean_s562
have lean_s954 : (Eq let452 let778) := by timed flipCongrArg lean_s953 [selectx5fformat]
have lean_s955 : (Eq let453 let779) := by timed congr lean_s951 lean_s954
let lean_s956 := by timed congr lean_s938 lean_s955
let lean_s957 := by timed flipCongrArg lean_s524 [Eq]
let lean_s958 := by timed flipCongrArg lean_s584 [HAdd.hAdd]
have lean_s959 : (Eq let206 let314) := by timed congr lean_s958 lean_s562
have lean_s960 : (Eq let208 let776) := by timed flipCongrArg lean_s959 [selectx5fformat]
have lean_s961 : (Eq let209 let777) := by timed congr lean_s957 lean_s960
let lean_s962 := by timed congr lean_s938 lean_s961
let lean_s963 := by timed flipCongrArg lean_s529 [Eq]
let lean_s964 := by timed flipCongrArg lean_s517 [HAdd.hAdd]
have lean_s965 : (Eq let214 let421) := by timed congr lean_s964 lean_s562
have lean_s966 : (Eq let482 let774) := by timed flipCongrArg lean_s965 [selectx5fformat]
have lean_s967 : (Eq let483 let775) := by timed congr lean_s963 lean_s966
let lean_s968 := by timed congr lean_s962 lean_s967
let lean_s969 := by timed congr lean_s956 lean_s968
let lean_s970 := by timed congr lean_s950 lean_s969
let lean_s971 := by timed congr lean_s946 lean_s970
have lean_s972 : (Eq let730 let780) := by timed congr lean_s942 lean_s971
have lean_s973 : (Eq let731 let781) := by timed flipCongrArg lean_s972 [Not]
let lean_s974 := by timed congr lean_s937 lean_s973
let lean_s975 := by timed congr lean_s921 lean_s974
let lean_s976 := by timed congr lean_s886 lean_s975
let lean_s977 := by timed congr lean_s878 lean_s976
let lean_s978 := by timed congr lean_s872 lean_s977
let lean_s979 := by timed congr lean_s866 lean_s978
let lean_s980 := by timed congr lean_s860 lean_s979
let lean_s981 := by timed congr lean_s854 lean_s980
let lean_s982 := by timed congr lean_s848 lean_s981
let lean_s983 := by timed congr lean_s839 lean_s982
let lean_s984 := by timed congr lean_s833 lean_s983
let lean_s985 := by timed congr lean_s827 lean_s984
let lean_s986 := by timed congr lean_s821 lean_s985
let lean_s987 := by timed congr lean_s815 lean_s986
let lean_s988 := by timed congr lean_s809 lean_s987
let lean_s989 := by timed congr lean_s617 lean_s988
let lean_s990 := by timed congr lean_s603 lean_s989
let lean_s991 := by timed congr lean_s595 lean_s990
let lean_s992 := by timed congr lean_s586 lean_s991
let lean_s993 := by timed congr lean_s580 lean_s992
let lean_s994 := by timed congr lean_s569 lean_s993
let lean_s995 := by timed congr lean_s558 lean_s994
let lean_s996 := by timed congr lean_s552 lean_s995
let lean_s997 := by timed congr lean_s547 lean_s996
let lean_s998 := by timed congr lean_s542 lean_s997
let lean_s999 := by timed congr lean_s537 lean_s998
let lean_s1000 := by timed congr lean_s532 lean_s999
let lean_s1001 := by timed congr lean_s528 lean_s1000
let lean_s1002 := by timed congr lean_s523 lean_s1001
let lean_s1003 := by timed congr lean_s519 lean_s1002
let lean_s1004 := by timed congr lean_s514 lean_s1003
have lean_s1005 : (Eq let773 let835) := by timed congr lean_s509 lean_s1004
have lean_s1006 : let836 := by timed rfl
let lean_s1007 := by timed congr lean_s1006 lean_r54
let lean_s1008 := by timed congr lean_s1006 lean_r55
let lean_s1009 := by timed congr lean_s1006 lean_r150
let lean_s1010 := by timed congr lean_s1006 lean_r150
let lean_s1011 := by timed congr lean_s1006 lean_r107
let lean_s1012 := by timed congr lean_s1006 lean_r107
let lean_s1013 := by timed congr lean_s1006 lean_r74
let lean_s1014 := by timed congr lean_s1006 lean_r57
let lean_s1015 := by timed congr lean_s1006 lean_r61
let lean_s1016 := by timed congr lean_s1006 lean_r66
let lean_s1017 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1018 : (Eq let834 let237) := by timed congr lean_s1017 lean_r64
have lean_s1019 : (Eq let834 True) := by timed Eq.trans lean_s1018 lean_r66
let lean_s1020 := by timed congr lean_s1006 lean_s1019
let lean_s1021 := by timed flipCongrArg lean_s442 [HAdd.hAdd]
have lean_s1022 : (Eq let831 let247) := by timed congr lean_s1021 lean_r265
have lean_s1023 : (Eq let831 let246) := by timed Eq.trans lean_s1022 lean_r69
let lean_s1024 := by timed flipCongrArg lean_s1023 [GE.ge]
have lean_s1025 : let873 := by timed rfl
have lean_s1026 : (Eq let832 let278) := by timed congr lean_s1024 lean_s1025
have lean_s1027 : (Eq let832 let250) := by timed Eq.trans lean_s1026 lean_r85
have lean_s1028 : (Eq let833 let251) := by timed flipCongrArg lean_s1027 [Not]
have lean_s1029 : (Eq let833 let22) := by timed Eq.trans lean_s1028 lean_r71
let lean_s1030 := by timed congr lean_s1006 lean_s1029
let lean_s1031 := by timed congrHAdd lean_r192 lean_r139
have lean_s1032 : (Eq let828 let257) := by timed congrHAdd lean_s39 lean_s1031
have lean_s1033 : (Eq let828 let256) := by timed Eq.trans lean_s1032 lean_r73
let lean_s1034 := by timed flipCongrArg lean_s1033 [GE.ge]
have lean_s1035 : let872 := by timed rfl
have lean_s1036 : (Eq let829 let479) := by timed congr lean_s1034 lean_s1035
have lean_s1037 : (Eq let829 let416) := by timed Eq.trans lean_s1036 lean_r153
have lean_s1038 : (Eq let830 let417) := by timed flipCongrArg lean_s1037 [Not]
let lean_s1039 := by timed congr lean_s1006 lean_s1038
let lean_s1040 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s1041 : (Eq let816 let114) := by timed congr lean_s1040 lean_r192
have lean_s1042 : (Eq let816 fmt1) := by timed Eq.trans lean_s1041 lean_r51
let lean_s1043 := by timed flipCongrArg lean_s1042 [GE.ge]
have lean_s1044 : let871 := by timed rfl
have lean_s1045 : (Eq let827 let415) := by timed congr lean_s1043 lean_s1044
let lean_s1046 := by timed congr lean_s1006 lean_s1045
have lean_s1047 : (Eq let105 let105) := by timed rfl
have lean_s1048 : (Eq let104 let104) := by timed rfl
let lean_s1049 := by timed congrHAdd lean_r156 lean_r12
let lean_s1050 := by timed congrHAdd lean_s1048 lean_s1049
let lean_s1051 := by timed congrHAdd lean_s1047 lean_s1050
have lean_s1052 : (Eq let437 let424) := by timed congrHAdd lean_s478 lean_s1051
have lean_s1053 : (Eq let437 let107) := by timed Eq.trans lean_s1052 lean_r120
have lean_s1054 : (Eq let438 let107) := by timed Eq.trans lean_r127 lean_s1053
let lean_s1055 := by timed flipCongrArg lean_s1054 [GE.ge]
have lean_s1056 : (Eq let826 let331) := by timed congr lean_s1055 lean_s442
have lean_s1057 : (Eq let826 let22) := by timed Eq.trans lean_s1056 lean_r112
let lean_s1058 := by timed congr lean_s1006 lean_s1057
let lean_s1059 := by timed congrHAdd lean_r139 lean_r12
let lean_s1060 := by timed congrHAdd lean_r156 lean_s1059
let lean_s1061 := by timed congrHAdd lean_s1048 lean_s1060
let lean_s1062 := by timed congrHAdd lean_s1047 lean_s1061
have lean_s1063 : (Eq let443 let260) := by timed congrHAdd lean_s478 lean_s1062
have lean_s1064 : (Eq let443 let259) := by timed Eq.trans lean_s1063 lean_r75
have lean_s1065 : (Eq let444 let259) := by timed Eq.trans lean_r129 lean_s1064
let lean_s1066 := by timed flipCongrArg lean_s1065 [GE.ge]
have lean_s1067 : let870 := by timed rfl
have lean_s1068 : (Eq let824 let264) := by timed congr lean_s1066 lean_s1067
have lean_s1069 : (Eq let824 let263) := by timed Eq.trans lean_s1068 lean_r77
have lean_s1070 : (Eq let825 let414) := by timed flipCongrArg lean_s1069 [Not]
let lean_s1071 := by timed congr lean_s1006 lean_s1070
have lean_s1072 : let516 := by timed rfl
let lean_s1073 := by timed flipCongrArg lean_s1072 [Eq]
have lean_s1074 : (Eq let823 let516) := by timed congr lean_s1073 lean_s490
have lean_s1075 : (Eq let823 True) := by timed Eq.trans lean_s1074 lean_r178
let lean_s1076 := by timed congr lean_s1006 lean_s1075
have lean_s1077 : let837 := by timed rfl
let lean_s1078 := by timed congr lean_s1077 lean_r60
let lean_s1079 := by timed congr lean_s1077 lean_r188
let lean_s1080 := by timed congr lean_s1077 lean_r101
let lean_s1081 := by timed congr lean_s1077 lean_r176
let lean_s1082 := by timed congr lean_s1077 lean_r176
let lean_s1083 := by timed congr lean_s1077 lean_r81
let lean_s1084 := by timed congr lean_s1077 lean_r81
let lean_s1085 := by timed congr lean_s1077 lean_s105
let lean_s1086 := by timed congr lean_s1077 lean_r80
let lean_s1087 := by timed congr lean_s1077 lean_r56
let lean_s1088 := by timed congr lean_s1077 lean_r63
let lean_s1089 := by timed congr lean_s1077 lean_r116
let lean_s1090 := by timed congr lean_s1077 lean_r116
let lean_s1091 := by timed congr lean_s1077 lean_r135
let lean_s1092 := by timed congr lean_s1077 lean_r135
let lean_s1093 := by timed congr lean_s1077 lean_s114
let lean_s1094 := by timed congr lean_s1077 lean_r164
let lean_s1095 := by timed congr lean_s1077 lean_r212
let lean_s1096 := by timed congr lean_s1077 lean_r165
let lean_s1097 := by timed congr lean_s1077 lean_r111
let lean_s1098 := by timed congr lean_s1077 lean_r111
let lean_s1099 := by timed congr lean_s1077 lean_r119
let lean_s1100 := by timed congr lean_s1077 lean_r119
let lean_s1101 := by timed congr lean_s1077 lean_s123
let lean_s1102 := by timed congr lean_s1077 lean_r161
let lean_s1103 := by timed congr lean_s1077 lean_r172
let lean_s1104 := by timed congr lean_s1077 lean_r43
let lean_s1105 := by timed congr lean_s1077 lean_r130
let lean_s1106 := by timed congr lean_s1077 lean_r130
let lean_s1107 := by timed congr lean_s1077 lean_r103
let lean_s1108 := by timed congr lean_s1077 lean_r103
let lean_s1109 := by timed congr lean_s1077 lean_s132
let lean_s1110 := by timed congr lean_s1077 lean_r126
let lean_s1111 := by timed congr lean_s1077 lean_r58
let lean_s1112 := by timed congr lean_s1077 lean_r160
let lean_s1113 := by timed congr lean_s1077 lean_r175
let lean_s1114 := by timed congr lean_s1077 lean_r175
let lean_s1115 := by timed congr lean_s1077 lean_r170
let lean_s1116 := by timed congr lean_s1077 lean_r170
let lean_s1117 := by timed congr lean_s1077 lean_s141
let lean_s1118 := by timed congr lean_s1077 lean_r154
let lean_s1119 := by timed congr lean_s1077 lean_r221
let lean_s1120 := by timed congr lean_s1077 lean_r122
let lean_s1121 := by timed congr lean_s1077 lean_r144
let lean_s1122 := by timed congr lean_s1077 lean_r144
let lean_s1123 := by timed congr lean_s1077 lean_r167
let lean_s1124 := by timed congr lean_s1077 lean_r167
let lean_s1125 := by timed congr lean_s1124 lean_s150
let lean_s1126 := by timed congr lean_s1123 lean_s1125
let lean_s1127 := by timed congr lean_s1122 lean_s1126
let lean_s1128 := by timed congr lean_s1121 lean_s1127
let lean_s1129 := by timed congr lean_s1120 lean_s1128
let lean_s1130 := by timed congr lean_s1119 lean_s1129
let lean_s1131 := by timed congr lean_s1118 lean_s1130
let lean_s1132 := by timed congr lean_s1117 lean_s1131
let lean_s1133 := by timed congr lean_s1116 lean_s1132
let lean_s1134 := by timed congr lean_s1115 lean_s1133
let lean_s1135 := by timed congr lean_s1114 lean_s1134
let lean_s1136 := by timed congr lean_s1113 lean_s1135
let lean_s1137 := by timed congr lean_s1112 lean_s1136
let lean_s1138 := by timed congr lean_s1111 lean_s1137
let lean_s1139 := by timed congr lean_s1110 lean_s1138
let lean_s1140 := by timed congr lean_s1109 lean_s1139
let lean_s1141 := by timed congr lean_s1108 lean_s1140
let lean_s1142 := by timed congr lean_s1107 lean_s1141
let lean_s1143 := by timed congr lean_s1106 lean_s1142
let lean_s1144 := by timed congr lean_s1105 lean_s1143
let lean_s1145 := by timed congr lean_s1104 lean_s1144
let lean_s1146 := by timed congr lean_s1103 lean_s1145
let lean_s1147 := by timed congr lean_s1102 lean_s1146
let lean_s1148 := by timed congr lean_s1101 lean_s1147
let lean_s1149 := by timed congr lean_s1100 lean_s1148
let lean_s1150 := by timed congr lean_s1099 lean_s1149
let lean_s1151 := by timed congr lean_s1098 lean_s1150
let lean_s1152 := by timed congr lean_s1097 lean_s1151
let lean_s1153 := by timed congr lean_s1096 lean_s1152
let lean_s1154 := by timed congr lean_s1095 lean_s1153
let lean_s1155 := by timed congr lean_s1094 lean_s1154
let lean_s1156 := by timed congr lean_s1093 lean_s1155
let lean_s1157 := by timed congr lean_s1092 lean_s1156
let lean_s1158 := by timed congr lean_s1091 lean_s1157
let lean_s1159 := by timed congr lean_s1090 lean_s1158
let lean_s1160 := by timed congr lean_s1089 lean_s1159
let lean_s1161 := by timed congr lean_s1088 lean_s1160
let lean_s1162 := by timed congr lean_s1087 lean_s1161
let lean_s1163 := by timed congr lean_s1086 lean_s1162
let lean_s1164 := by timed congr lean_s1085 lean_s1163
let lean_s1165 := by timed congr lean_s1084 lean_s1164
let lean_s1166 := by timed congr lean_s1083 lean_s1165
let lean_s1167 := by timed congr lean_s1082 lean_s1166
let lean_s1168 := by timed congr lean_s1081 lean_s1167
let lean_s1169 := by timed congr lean_s1080 lean_s1168
let lean_s1170 := by timed congr lean_s1079 lean_s1169
have lean_s1171 : (Eq let815 let412) := by timed congr lean_s1078 lean_s1170
let lean_s1172 := by timed congr lean_s1006 lean_s1171
let lean_s1173 := by timed flipCongrArg lean_r60 [And]
have lean_s1174 : (Eq let813 let393) := by timed congr lean_s1173 lean_r56
have lean_s1175 : (Eq let814 let394) := by timed congrIte lean_s1174 lean_s202 lean_s203
let lean_s1176 := by timed congr lean_s1006 lean_s1175
let lean_s1177 := by timed flipCongrArg lean_r80 [And]
have lean_s1178 : (Eq let811 let391) := by timed congr lean_s1177 lean_r212
have lean_s1179 : let860 := by timed rfl
have lean_s1180 : let859 := by timed rfl
have lean_s1181 : (Eq let812 let392) := by timed congrIte lean_s1178 lean_s1179 lean_s1180
let lean_s1182 := by timed congr lean_s1006 lean_s1181
let lean_s1183 := by timed flipCongrArg lean_r164 [And]
have lean_s1184 : (Eq let809 let388) := by timed congr lean_s1183 lean_r172
have lean_s1185 : let858 := by timed rfl
have lean_s1186 : let857 := by timed rfl
have lean_s1187 : (Eq let810 let389) := by timed congrIte lean_s1184 lean_s1185 lean_s1186
let lean_s1188 := by timed congr lean_s1006 lean_s1187
let lean_s1189 := by timed flipCongrArg lean_r161 [And]
have lean_s1190 : (Eq let807 let385) := by timed congr lean_s1189 lean_r58
have lean_s1191 : let856 := by timed rfl
have lean_s1192 : let855 := by timed rfl
have lean_s1193 : (Eq let808 let386) := by timed congrIte lean_s1190 lean_s1191 lean_s1192
let lean_s1194 := by timed congr lean_s1006 lean_s1193
let lean_s1195 := by timed flipCongrArg lean_r126 [And]
have lean_s1196 : (Eq let805 let381) := by timed congr lean_s1195 lean_r221
have lean_s1197 : let854 := by timed rfl
have lean_s1198 : let853 := by timed rfl
have lean_s1199 : (Eq let806 let382) := by timed congrIte lean_s1196 lean_s1197 lean_s1198
let lean_s1200 := by timed congr lean_s1006 lean_s1199
let lean_s1201 := by timed flipCongrArg lean_r154 [And]
have lean_s1202 : (Eq let803 let377) := by timed congr lean_s1201 lean_r166
have lean_s1203 : let852 := by timed rfl
have lean_s1204 : let851 := by timed rfl
have lean_s1205 : (Eq let804 let378) := by timed congrIte lean_s1202 lean_s1203 lean_s1204
let lean_s1206 := by timed congr lean_s1006 lean_s1205
let lean_s1207 := by timed flipCongrArg lean_r60 [And]
have lean_s1208 : (Eq let801 let371) := by timed congr lean_s1207 lean_r63
have lean_s1209 : (Eq let802 let372) := by timed congrIte lean_s1208 lean_s248 lean_s249
let lean_s1210 := by timed congr lean_s1006 lean_s1209
let lean_s1211 := by timed flipCongrArg lean_r80 [And]
have lean_s1212 : (Eq let799 let369) := by timed congr lean_s1211 lean_r165
have lean_s1213 : let848 := by timed rfl
have lean_s1214 : let847 := by timed rfl
have lean_s1215 : (Eq let800 let370) := by timed congrIte lean_s1212 lean_s1213 lean_s1214
let lean_s1216 := by timed congr lean_s1006 lean_s1215
let lean_s1217 := by timed flipCongrArg lean_r164 [And]
have lean_s1218 : (Eq let797 let364) := by timed congr lean_s1217 lean_r43
have lean_s1219 : let846 := by timed rfl
have lean_s1220 : let845 := by timed rfl
have lean_s1221 : (Eq let798 let365) := by timed congrIte lean_s1218 lean_s1219 lean_s1220
let lean_s1222 := by timed congr lean_s1006 lean_s1221
let lean_s1223 := by timed flipCongrArg lean_r161 [And]
have lean_s1224 : (Eq let795 let361) := by timed congr lean_s1223 lean_r160
have lean_s1225 : let844 := by timed rfl
have lean_s1226 : let843 := by timed rfl
have lean_s1227 : (Eq let796 let362) := by timed congrIte lean_s1224 lean_s1225 lean_s1226
let lean_s1228 := by timed congr lean_s1006 lean_s1227
let lean_s1229 := by timed flipCongrArg lean_r126 [And]
have lean_s1230 : (Eq let793 let357) := by timed congr lean_s1229 lean_r122
have lean_s1231 : let842 := by timed rfl
have lean_s1232 : let841 := by timed rfl
have lean_s1233 : (Eq let794 let358) := by timed congrIte lean_s1230 lean_s1231 lean_s1232
let lean_s1234 := by timed congr lean_s1006 lean_s1233
let lean_s1235 := by timed flipCongrArg lean_r154 [And]
have lean_s1236 : (Eq let791 let351) := by timed congr lean_s1235 lean_r148
have lean_s1237 : let840 := by timed rfl
have lean_s1238 : let839 := by timed rfl
have lean_s1239 : (Eq let792 let352) := by timed congrIte lean_s1236 lean_s1237 lean_s1238
let lean_s1240 := by timed congr lean_s1006 lean_s1239
have lean_s1241 : let837 := by timed rfl
have lean_s1242 : (Eq let347 let347) := by timed rfl
let lean_s1243 := by timed congr lean_s1241 lean_s1242
let lean_s1244 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1245 : (Eq let789 let346) := by timed congr lean_s1244 lean_r168
let lean_s1246 := by timed congr lean_s1241 lean_s1245
let lean_s1247 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1248 : (Eq let788 let51) := by timed congr lean_s1247 lean_r142
let lean_s1249 := by timed congr lean_s1241 lean_s1248
let lean_s1250 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1251 : (Eq let787 let75) := by timed congr lean_s1250 lean_r99
let lean_s1252 := by timed congr lean_s1241 lean_s1251
let lean_s1253 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1254 : (Eq let786 let15) := by timed congr lean_s1253 lean_r134
let lean_s1255 := by timed congr lean_s1241 lean_s1254
let lean_s1256 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1257 : (Eq let785 let345) := by timed congr lean_s1256 lean_r47
let lean_s1258 := by timed congr lean_s1255 lean_s1257
let lean_s1259 := by timed congr lean_s1252 lean_s1258
let lean_s1260 := by timed congr lean_s1249 lean_s1259
let lean_s1261 := by timed congr lean_s1246 lean_s1260
have lean_s1262 : (Eq let790 let348) := by timed congr lean_s1243 lean_s1261
let lean_s1263 := by timed congr lean_s1006 lean_s1262
have lean_s1264 : let837 := by timed rfl
let lean_s1265 := by timed congr lean_s1264 lean_r78
let lean_s1266 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1267 : let285 := by timed Eq.trans lean_r87 lean_r89
have lean_s1268 : (Eq let783 let290) := by timed congr lean_s1266 lean_s1267
have lean_s1269 : (Eq let783 let289) := by timed Eq.trans lean_s1268 lean_r91
let lean_s1270 := by timed congr lean_s1264 lean_s1269
let lean_s1271 := by timed flipCongrArg lean_s442 [Eq]
have lean_s1272 : let318 := by timed Eq.trans lean_r19 lean_r104
have lean_s1273 : (Eq let782 let160) := by timed congr lean_s1271 lean_s1272
have lean_s1274 : (Eq let782 False) := by timed Eq.trans lean_s1273 lean_r35
let lean_s1275 := by timed congr lean_s1270 lean_s1274
have lean_s1276 : (Eq let784 let485) := by timed congr lean_s1265 lean_s1275
have lean_s1277 : (Eq let784 let289) := by timed Eq.trans lean_s1276 lean_r158
let lean_s1278 := by timed congr lean_s1006 lean_s1277
have lean_s1279 : let836 := by timed rfl
let lean_s1280 := by timed congr lean_s1279 lean_r259
let lean_s1281 := by timed congr lean_s1279 lean_r151
let lean_s1282 := by timed congr lean_s1279 lean_r82
have lean_s1283 : let476 := by timed rfl
let lean_s1284 := by timed flipCongrArg lean_s1283 [Eq]
have lean_s1285 : let422 := by timed Eq.trans lean_r110 lean_r118
have lean_s1286 : (Eq let778 let339) := by timed flipCongrArg lean_s1285 [selectx5fformat]
have lean_s1287 : (Eq let779 let515) := by timed congr lean_s1284 lean_s1286
have lean_s1288 : (Eq let779 let340) := by timed Eq.trans lean_s1287 lean_r177
let lean_s1289 := by timed congr lean_s1279 lean_s1288
let lean_s1290 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1291 : let315 := by timed Eq.trans lean_r189 lean_r102
have lean_s1292 : (Eq let776 let336) := by timed flipCongrArg lean_s1291 [selectx5fformat]
have lean_s1293 : (Eq let777 let469) := by timed congr lean_s1290 lean_s1292
have lean_s1294 : (Eq let777 let337) := by timed Eq.trans lean_s1293 lean_r146
let lean_s1295 := by timed congr lean_s1279 lean_s1294
let lean_s1296 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1297 : let457 := by timed Eq.trans lean_r117 lean_r136
have lean_s1298 : (Eq let774 let124) := by timed flipCongrArg lean_s1297 [selectx5fformat]
have lean_s1299 : (Eq let775 let126) := by timed congr lean_s1296 lean_s1298
have lean_s1300 : (Eq let775 let125) := by timed Eq.trans lean_s1299 lean_r25
let lean_s1301 := by timed congr lean_s1295 lean_s1300
let lean_s1302 := by timed congr lean_s1289 lean_s1301
let lean_s1303 := by timed congr lean_s1282 lean_s1302
let lean_s1304 := by timed congr lean_s1281 lean_s1303
have lean_s1305 : (Eq let780 let343) := by timed congr lean_s1280 lean_s1304
have lean_s1306 : (Eq let781 let344) := by timed flipCongrArg lean_s1305 [Not]
let lean_s1307 := by timed congr lean_s1278 lean_s1306
let lean_s1308 := by timed congr lean_s1263 lean_s1307
let lean_s1309 := by timed congr lean_s1240 lean_s1308
let lean_s1310 := by timed congr lean_s1234 lean_s1309
let lean_s1311 := by timed congr lean_s1228 lean_s1310
let lean_s1312 := by timed congr lean_s1222 lean_s1311
let lean_s1313 := by timed congr lean_s1216 lean_s1312
let lean_s1314 := by timed congr lean_s1210 lean_s1313
let lean_s1315 := by timed congr lean_s1206 lean_s1314
let lean_s1316 := by timed congr lean_s1200 lean_s1315
let lean_s1317 := by timed congr lean_s1194 lean_s1316
let lean_s1318 := by timed congr lean_s1188 lean_s1317
let lean_s1319 := by timed congr lean_s1182 lean_s1318
let lean_s1320 := by timed congr lean_s1176 lean_s1319
let lean_s1321 := by timed congr lean_s1172 lean_s1320
let lean_s1322 := by timed congr lean_s1076 lean_s1321
let lean_s1323 := by timed congr lean_s1071 lean_s1322
let lean_s1324 := by timed congr lean_s1058 lean_s1323
let lean_s1325 := by timed congr lean_s1046 lean_s1324
let lean_s1326 := by timed congr lean_s1039 lean_s1325
let lean_s1327 := by timed congr lean_s1030 lean_s1326
let lean_s1328 := by timed congr lean_s1020 lean_s1327
let lean_s1329 := by timed congr lean_s1016 lean_s1328
let lean_s1330 := by timed congr lean_s1015 lean_s1329
let lean_s1331 := by timed congr lean_s1014 lean_s1330
let lean_s1332 := by timed congr lean_s1013 lean_s1331
let lean_s1333 := by timed congr lean_s1012 lean_s1332
let lean_s1334 := by timed congr lean_s1011 lean_s1333
let lean_s1335 := by timed congr lean_s1010 lean_s1334
let lean_s1336 := by timed congr lean_s1009 lean_s1335
let lean_s1337 := by timed congr lean_s1008 lean_s1336
have lean_s1338 : (Eq let835 let419) := by timed congr lean_s1007 lean_s1337
have lean_s1339 : (Eq let835 let418) := by timed Eq.trans lean_s1338 lean_r115
have lean_s1340 : (Eq let773 let418) := by timed Eq.trans lean_s1005 lean_s1339
have lean_s1341 : (Eq let680 let418) := by timed Eq.trans lean_s398 lean_s1340
have lean_s1342 : let418 := by timed eqResolve lean_a279 lean_s1341
have lean_s1343 : let389 := by andElim lean_s1342, 7
have lean_s1344 : (Or let905 let63) := by timed iteElim1 lean_s1343
have lean_s1345 : (Or let63 let905) := by permutateOr lean_s1344, [1, 0], (- 1)
have lean_s1346 : (Or let388 let33) := by timed iteElim2 lean_s1343
have lean_s1347 : (Or let33 let388) := by permutateOr lean_s1346, [1, 0], (- 1)
have lean_s1348 : (Or let1161 (Or let909 (Or let967 let1113))) :=
  (scope (fun lean_a294 : let40 =>
    (scope (fun lean_a295 : let38 =>
      (scope (fun lean_a296 : let36 =>
        (scope (fun lean_a297 : let33 =>
          (scope (fun lean_a298 : let30 =>
            (scope (fun lean_a299 : let26 =>
              (scope (fun lean_a300 : let22 =>
                (scope (fun lean_a301 : let15 =>
                  have lean_s1348 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1349 : let460 := by timed eqResolve lean_a301 lean_s1348
                  let lean_s1350 := by timed And.intro lean_a298 lean_a295
                  let lean_s1351 := by timed And.intro lean_a299 lean_s1350
                  have lean_s1352 : let1070 := by timed And.intro lean_s1349 lean_s1351
                  have lean_s1353 : let1072 :=
                    (scope (fun lean_a295 : let460 =>
                      (scope (fun lean_a296 : let26 =>
                        (scope (fun lean_a297 : let30 =>
                          (scope (fun lean_a298 : let38 =>
                            have lean_s1353 : let954 := by timed Eq.symm lean_a298
                            have lean_s1354 : let522 := by timed Eq.symm lean_a297
                            have lean_s1355 : let30 := by timed Eq.symm lean_s1354
                            let lean_s1356 := by timed Eq.trans lean_s1353 lean_s1355
                            have lean_s1357 : let307 := by timed Eq.symm lean_a296
                            have lean_s1358 : let26 := by timed Eq.symm lean_s1357
                            let lean_s1359 := by timed Eq.trans lean_s1356 lean_s1358
                            have lean_s1360 : let1056 := by timed Eq.symm lean_a295
                            have lean_s1361 : let460 := by timed Eq.symm lean_s1360
                            have lean_s1362 : let1059 := by timed flipCongrArg lean_s1361 [xx5fcount]
                            have lean_s1363 : let917 := by timed Eq.trans lean_s1359 lean_s1362
                            show let917 from lean_s1363
                    ))))))))
                  have lean_s1354 : let1071 := by liftOrNToImp lean_s1353, 4
                  have lean_s1355 : let917 := by timed modusPonens lean_s1352 lean_s1354
                  let lean_s1356 := by timed And.intro lean_a296 lean_a294
                  let lean_s1357 := by timed And.intro lean_a297 lean_s1356
                  have lean_s1358 : let1171 := by timed And.intro lean_s1349 lean_s1357
                  have lean_s1359 : let1173 :=
                    (scope (fun lean_a295 : let460 =>
                      (scope (fun lean_a296 : let33 =>
                        (scope (fun lean_a297 : let36 =>
                          (scope (fun lean_a298 : let40 =>
                            have lean_s1359 : let1165 := by timed Eq.symm lean_a298
                            have lean_s1360 : let127 := by timed Eq.symm lean_a297
                            have lean_s1361 : let36 := by timed Eq.symm lean_s1360
                            let lean_s1362 := by timed Eq.trans lean_s1359 lean_s1361
                            have lean_s1363 : let224 := by timed Eq.symm lean_a296
                            have lean_s1364 : let33 := by timed Eq.symm lean_s1363
                            let lean_s1365 := by timed Eq.trans lean_s1362 lean_s1364
                            have lean_s1366 : let1056 := by timed Eq.symm lean_a295
                            have lean_s1367 : let460 := by timed Eq.symm lean_s1366
                            have lean_s1368 : let1055 := by timed flipCongrArg lean_s1367 [sx5fcount]
                            have lean_s1369 : let989 := by timed Eq.trans lean_s1365 lean_s1368
                            show let989 from lean_s1369
                    ))))))))
                  have lean_s1360 : let1172 := by liftOrNToImp lean_s1359, 4
                  have lean_s1361 : let989 := by timed modusPonens lean_s1358 lean_s1360
                  let lean_s1362 := by timed And.intro lean_s1355 lean_s1361
                  have lean_s1363 : let990 := by timed And.intro lean_a300 lean_s1362
                  show let990 from lean_s1363
  ))))))))))))))))
have lean_s1349 : let1174 := by liftOrNToImp lean_s1348, 8
have lean_s1350 : (Eq let41 let41) := by timed rfl
let lean_s1351 := by timed flipCongrArg lean_s1350 [Implies]
have lean_s1352 : (Or let250 (Or let922 let993)) :=
  (scope (fun lean_a295 : let22 =>
    (scope (fun lean_a296 : let917 =>
      (scope (fun lean_a297 : let989 =>
        have lean_s1352 : let994 := by timed Eq.symm lean_a297
        have lean_s1353 : let996 :=
          (scope (fun lean_a296 : let994 =>
            have lean_s1353 : let279 := by timed trueElim lean_r86
            have lean_s1354 : let1000 := by timed And.intro lean_s1353 lean_a296
            have lean_s1355 : let1001 := by arithMulPos [let20, let4, let211], 4
            have lean_s1356 : let999 := by timed modusPonens lean_s1354 lean_s1355
            have lean_s1357 : let934 := by timed Eq.symm lean_a296
            have lean_s1358 : let935 := by timed And.intro lean_s1353 lean_s1357
            have lean_s1359 : let936 := by arithMulPos [let19, let28, let211], 4
            have lean_s1360 : let933 := by timed modusPonens lean_s1358 lean_s1359
            have lean_s1361 : let698 := by timed trueElim lean_r263
            have lean_s1362 : let931 := by timed And.intro lean_s1361 lean_a295
            have lean_s1363 : let932 := by arithMulNeg [let21, let16, let688], 3
            have lean_s1364 : let930 := by timed modusPonens lean_s1362 lean_s1363
            have lean_s1365 : let998 := by sumBounds [lean_s1356, lean_s1360, lean_s1364]
            let lean_s1366 := by timed congrHAdd lean_r193 lean_r261
            have lean_s1367 : (Eq let928 let695) := by timed congrHAdd lean_r262 lean_s1366
            have lean_s1368 : (Eq let928 let10) := by timed Eq.trans lean_s1367 lean_r260
            let lean_s1369 := by timed flipCongrArg lean_s1368 [LE.le]
            let lean_s1370 := by timed congrHAdd lean_r258 lean_r256
            have lean_s1371 : (Eq let997 let690) := by timed congrHAdd lean_r124 lean_s1370
            have lean_s1372 : (Eq let997 let458) := by timed Eq.trans lean_s1371 lean_r257
            have lean_s1373 : (Eq let998 let475) := by timed congr lean_s1369 lean_s1372
            have lean_s1374 : (Eq let998 False) := by timed Eq.trans lean_s1373 lean_r149
            show False from by timed eqResolve lean_s1365 lean_s1374
          ))
        have lean_s1354 : let995 := by liftOrNToNeg lean_s1353
        show False from by timed contradiction lean_s1352 lean_s1354
  ))))))
have lean_s1353 : (Not let990) := by liftOrNToNeg lean_s1352
have lean_s1354 : let992 := by timed falseIntro lean_s1353
have lean_s1355 : (Eq let1174 let43) := by timed congr lean_s1351 lean_s1354
have lean_s1356 : (Eq let1174 let42) := by timed Eq.trans lean_s1355 lean_r2
have lean_s1357 : let42 := by timed eqResolve lean_s1349 lean_s1356
have lean_s1358 : (Or let1161 let1068) := by timed flipNotAnd lean_s1357 [let40, let38, let36, let33, let30, let26, let22, let15]
have lean_s1359 : (Or let250 (Or let1161 let1064)) := by permutateOr lean_s1358, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
have lean_s1360 : let22 := by andElim lean_s1342, 0
let lean_s1361 := by R2 lean_s1359, lean_s1360, let22, [(- 1), 0]
have lean_s1362 : let394 := by andElim lean_s1342, 5
have lean_s1363 : (Or let907 let40) := by timed iteElim1 lean_s1362
have lean_s1364 : (Or let40 let907) := by permutateOr lean_s1363, [1, 0], (- 1)
have lean_s1365 : (Or let393 let59) := by timed iteElim2 lean_s1362
have lean_s1366 : (Or let59 let393) := by permutateOr lean_s1365, [1, 0], (- 1)
have lean_s1367 : (Or let888 (Or let1123 (Or let967 (Or let1045 (Or let963 (Or let1096 (Or let250 (Or let293 let1146)))))))) :=
  (scope (fun lean_a297 : let59 =>
    (scope (fun lean_a298 : let58 =>
      (scope (fun lean_a299 : let36 =>
        (scope (fun lean_a300 : let33 =>
          (scope (fun lean_a301 : let30 =>
            (scope (fun lean_a302 : let45 =>
              (scope (fun lean_a303 : let22 =>
                (scope (fun lean_a304 : let15 =>
                  have lean_s1367 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1368 : let460 := by timed eqResolve lean_a304 lean_s1367
                  let lean_s1369 := by timed And.intro lean_a301 lean_a298
                  have lean_s1370 : let1155 := by timed And.intro lean_a302 lean_s1369
                  have lean_s1371 : (Or let1096 (Or let963 (Or let1123 let584))) :=
                    (scope (fun lean_a300 : let45 =>
                      (scope (fun lean_a301 : let30 =>
                        (scope (fun lean_a302 : let58 =>
                          have lean_s1371 : let1130 := by timed Eq.symm lean_a302
                          have lean_s1372 : let522 := by timed Eq.symm lean_a301
                          have lean_s1373 : let30 := by timed Eq.symm lean_s1372
                          let lean_s1374 := by timed Eq.trans lean_s1371 lean_s1373
                          have lean_s1375 : let1111 := by timed Eq.symm lean_a300
                          have lean_s1376 : let45 := by timed Eq.symm lean_s1375
                          have lean_s1377 : let584 := by timed Eq.trans lean_s1374 lean_s1376
                          show let584 from lean_s1377
                    ))))))
                  have lean_s1372 : (Implies let1155 let584) := by liftOrNToImp lean_s1371, 3
                  have lean_s1373 : let584 := by timed modusPonens lean_s1370 lean_s1372
                  have lean_s1374 : (Or (Not let584) let1153) :=
                    (scope (fun lean_a300 : let584 =>
                      have lean_s1374 : let583 := by timed eqResolve lean_a300 lean_r220
                      have lean_s1375 : let1153 := by timed Eq.symm lean_s1374
                      show let1153 from lean_s1375
                    ))
                  have lean_s1375 : (Implies let584 let1153) := by liftOrNToImp lean_s1374, 1
                  have lean_s1376 : let1153 := by timed modusPonens lean_s1373 lean_s1375
                  have lean_s1377 : let1154 := by timed And.intro lean_s1368 lean_s1376
                  have lean_s1378 : (Or let1053 (Or (Not let1153) let1145)) :=
                    (scope (fun lean_a301 : let460 =>
                      (scope (fun lean_a302 : let1153 =>
                        have lean_s1378 : let583 := by timed Eq.symm lean_a302
                        have lean_s1379 : let1153 := by timed Eq.symm lean_s1378
                        have lean_s1380 : let1056 := by timed Eq.symm lean_a301
                        have lean_s1381 : let460 := by timed Eq.symm lean_s1380
                        have lean_s1382 : let1059 := by timed flipCongrArg lean_s1381 [xx5fcount]
                        have lean_s1383 : let1145 := by timed Eq.trans lean_s1379 lean_s1382
                        show let1145 from lean_s1383
                    ))))
                  have lean_s1379 : (Implies let1154 let1145) := by liftOrNToImp lean_s1378, 2
                  have lean_s1380 : let1145 := by timed modusPonens lean_s1377 lean_s1379
                  let lean_s1381 := by timed And.intro lean_a299 lean_a297
                  let lean_s1382 := by timed And.intro lean_a300 lean_s1381
                  have lean_s1383 : let1051 := by timed And.intro lean_s1368 lean_s1382
                  have lean_s1384 : let1054 :=
                    (scope (fun lean_a302 : let460 =>
                      (scope (fun lean_a303 : let33 =>
                        (scope (fun lean_a304 : let36 =>
                          (scope (fun lean_a305 : let59 =>
                            have lean_s1384 : let947 := by timed Eq.symm lean_a305
                            have lean_s1385 : let127 := by timed Eq.symm lean_a304
                            have lean_s1386 : let36 := by timed Eq.symm lean_s1385
                            let lean_s1387 := by timed Eq.trans lean_s1384 lean_s1386
                            have lean_s1388 : let224 := by timed Eq.symm lean_a303
                            have lean_s1389 : let33 := by timed Eq.symm lean_s1388
                            let lean_s1390 := by timed Eq.trans lean_s1387 lean_s1389
                            have lean_s1391 : let1056 := by timed Eq.symm lean_a302
                            have lean_s1392 : let460 := by timed Eq.symm lean_s1391
                            have lean_s1393 : let1055 := by timed flipCongrArg lean_s1392 [sx5fcount]
                            have lean_s1394 : let916 := by timed Eq.trans lean_s1390 lean_s1393
                            show let916 from lean_s1394
                    ))))))))
                  have lean_s1385 : let1052 := by liftOrNToImp lean_s1384, 4
                  have lean_s1386 : let916 := by timed modusPonens lean_s1383 lean_s1385
                  let lean_s1387 := by timed And.intro lean_s1380 lean_s1386
                  have lean_s1388 : let1146 := by timed And.intro lean_a303 lean_s1387
                  show let1146 from lean_s1388
  ))))))))))))))))
have lean_s1368 : let1147 := by liftOrNToImp lean_s1367, 8
have lean_s1369 : (Eq let60 let60) := by timed rfl
let lean_s1370 := by timed flipCongrArg lean_s1369 [Implies]
have lean_s1371 : (Or let250 (Or (Not let1145) let921)) :=
  (scope (fun lean_a302 : let22 =>
    (scope (fun lean_a303 : let1145 =>
      (scope (fun lean_a304 : let916 =>
        have lean_s1371 : let923 := by timed Eq.symm lean_a304
        have lean_s1372 : let925 :=
          (scope (fun lean_a304 : let923 =>
            have lean_s1372 : let279 := by timed trueElim lean_r86
            have lean_s1373 : let938 := by timed And.intro lean_s1372 lean_a304
            have lean_s1374 : let939 := by arithMulPos [let20, let28, let211], 4
            have lean_s1375 : let937 := by timed modusPonens lean_s1373 lean_s1374
            have lean_s1376 : let1151 := by timed Eq.symm lean_a303
            have lean_s1377 : let1152 := by timed And.intro lean_s1372 lean_s1376
            have lean_s1378 : (Implies let1152 let1150) := by arithMulPos [let19, let1, let211], 4
            have lean_s1379 : let1150 := by timed modusPonens lean_s1377 lean_s1378
            have lean_s1380 : let698 := by timed trueElim lean_r263
            have lean_s1381 : let931 := by timed And.intro lean_s1380 lean_a302
            have lean_s1382 : let932 := by arithMulNeg [let21, let16, let688], 3
            have lean_s1383 : let930 := by timed modusPonens lean_s1381 lean_s1382
            have lean_s1384 : let1149 := by sumBounds [lean_s1375, lean_s1379, lean_s1383]
            let lean_s1385 := by timed congrHAdd lean_r193 lean_r261
            have lean_s1386 : (Eq let928 let695) := by timed congrHAdd lean_r262 lean_s1385
            have lean_s1387 : (Eq let928 let10) := by timed Eq.trans lean_s1386 lean_r260
            let lean_s1388 := by timed flipCongrArg lean_s1387 [LE.le]
            let lean_s1389 := by timed congrHAdd lean_r163 lean_r256
            have lean_s1390 : (Eq let1148 let57) := by timed congrHAdd lean_r258 lean_s1389
            have lean_s1391 : (Eq let1148 let8) := by timed Eq.trans lean_s1390 lean_r5
            have lean_s1392 : (Eq let1149 let481) := by timed congr lean_s1388 lean_s1391
            have lean_s1393 : (Eq let1149 False) := by timed Eq.trans lean_s1392 lean_r155
            show False from by timed eqResolve lean_s1384 lean_s1393
          ))
        have lean_s1373 : let924 := by liftOrNToNeg lean_s1372
        show False from by timed contradiction lean_s1371 lean_s1373
  ))))))
have lean_s1372 : (Not let1146) := by liftOrNToNeg lean_s1371
have lean_s1373 : (Eq let1146 False) := by timed falseIntro lean_s1372
have lean_s1374 : (Eq let1147 let62) := by timed congr lean_s1370 lean_s1373
have lean_s1375 : (Eq let1147 let61) := by timed Eq.trans lean_s1374 lean_r6
have lean_s1376 : let61 := by timed eqResolve lean_s1368 lean_s1375
have lean_s1377 : (Or let888 (Or let1123 let1099)) := by timed flipNotAnd lean_s1376 [let59, let58, let36, let33, let30, let45, let22, let15]
have lean_s1378 : (Or let250 (Or let888 (Or let967 (Or let1045 (Or let1123 let1097))))) := by permutateOr lean_s1377, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1379 := by R2 lean_s1378, lean_s1360, let22, [(- 1), 0]
let lean_s1380 := by R2 lean_s1379, lean_s1347, let33, [(- 1), (- 1)]
have lean_s1381 : (Or let905 let387) := by timed @cnfAndPos [let363, let387] 1
have lean_s1382 : (Or let387 let905) := by permutateOr lean_s1381, [1, 0], (- 1)
let lean_s1383 := by R1 lean_s1380, lean_s1382, let388, [(- 1), (- 1)]
have lean_s1384 : let1094 :=
  (scope (fun lean_a305 : let178 =>
    have lean_s1384 : let1094 :=
      (scope (fun lean_a306 : let178 =>
        have lean_s1384 : let179 := by timed Eq.symm lean_a306
        have lean_s1385 : let178 := by timed Eq.symm lean_s1384
        let lean_s1386 := by timed flipCongrArg lean_s1385 [Eq]
        have lean_s1387 : let221 := by timed rfl
        have lean_s1388 : (Eq let387 let243) := by timed congr lean_s1386 lean_s1387
        have lean_s1389 : (Eq let685 let560) := by timed flipCongrArg lean_r68 [Not]
        have lean_s1390 : (Eq let685 True) := by timed Eq.trans lean_s1389 lean_r205
        have lean_s1391 : (Eq let244 True) := by timed Eq.trans lean_r252 lean_s1390
        have lean_s1392 : let244 := by timed trueElim lean_s1391
        have lean_s1393 : (Eq let387 False) := by timed Eq.trans lean_s1388 lean_s1392
        have lean_s1394 : let1093 := by timed falseElim lean_s1393
        show let1093 from lean_s1394
      ))
    have lean_s1385 : let1095 := by liftOrNToImp lean_s1384, 1
    have lean_s1386 : let1093 := by timed modusPonens lean_a305 lean_s1385
    show let1093 from lean_s1386
  ))
have lean_s1385 : let1095 := by liftOrNToImp lean_s1384, 1
have lean_s1386 : let1094 := by timed impliesElim lean_s1385
have lean_s1387 : (Or let1093 let1092) := by permutateOr lean_s1386, [1, 0], (- 1)
let lean_s1388 := by R1 lean_s1383, lean_s1387, let387, [(- 1), (- 1)]
have lean_s1389 : let365 := by andElim lean_s1342, 13
have lean_s1390 : (Or let906 let45) := by timed iteElim1 lean_s1389
have lean_s1391 : (Or let45 let906) := by permutateOr lean_s1390, [1, 0], (- 1)
let lean_s1392 := by R2 lean_s1388, lean_s1391, let45, [(- 1), (- 1)]
have lean_s1393 : (Or let906 let178) := by timed @cnfAndPos [let363, let178] 1
have lean_s1394 : (Or let178 let906) := by permutateOr lean_s1393, [1, 0], (- 1)
have lean_s1395 : (Or let888 (Or let967 (Or let1123 let1091))) := by R2 lean_s1392, lean_s1394, let178, [(- 1), (- 1)]
have lean_s1396 : (Or let888 (Or let967 (Or let1123 let1089))) := by factor lean_s1395, (- 1)
have lean_s1397 : (Or let364 let26) := by timed iteElim2 lean_s1389
have lean_s1398 : (Or let26 let364) := by permutateOr lean_s1397, [1, 0], (- 1)
let lean_s1399 := by R2 lean_s1396, lean_s1398, let364, [(- 1), (- 1)]
have lean_s1400 : (Or let888 (Or let1123 (Or let967 (Or let1073 (Or let963 (Or let1043 let1144)))))) :=
  (scope (fun lean_a306 : let59 =>
    (scope (fun lean_a307 : let58 =>
      (scope (fun lean_a308 : let36 =>
        (scope (fun lean_a309 : let63 =>
          (scope (fun lean_a310 : let30 =>
            (scope (fun lean_a311 : let26 =>
              (scope (fun lean_a312 : let22 =>
                (scope (fun lean_a313 : let15 =>
                  have lean_s1400 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1401 : let460 := by timed eqResolve lean_a313 lean_s1400
                  let lean_s1402 := by timed And.intro lean_a310 lean_a307
                  let lean_s1403 := by timed And.intro lean_a311 lean_s1402
                  have lean_s1404 : let1136 := by timed And.intro lean_s1401 lean_s1403
                  have lean_s1405 : let1138 :=
                    (scope (fun lean_a306 : let460 =>
                      (scope (fun lean_a307 : let26 =>
                        (scope (fun lean_a308 : let30 =>
                          (scope (fun lean_a309 : let58 =>
                            have lean_s1405 : let1130 := by timed Eq.symm lean_a309
                            have lean_s1406 : let522 := by timed Eq.symm lean_a308
                            have lean_s1407 : let30 := by timed Eq.symm lean_s1406
                            let lean_s1408 := by timed Eq.trans lean_s1405 lean_s1407
                            have lean_s1409 : let307 := by timed Eq.symm lean_a307
                            have lean_s1410 : let26 := by timed Eq.symm lean_s1409
                            let lean_s1411 := by timed Eq.trans lean_s1408 lean_s1410
                            have lean_s1412 : let1056 := by timed Eq.symm lean_a306
                            have lean_s1413 : let460 := by timed Eq.symm lean_s1412
                            have lean_s1414 : let1059 := by timed flipCongrArg lean_s1413 [xx5fcount]
                            have lean_s1415 : let1012 := by timed Eq.trans lean_s1411 lean_s1414
                            show let1012 from lean_s1415
                    ))))))))
                  have lean_s1406 : let1137 := by liftOrNToImp lean_s1405, 4
                  have lean_s1407 : let1012 := by timed modusPonens lean_s1404 lean_s1406
                  let lean_s1408 := by timed And.intro lean_a308 lean_a306
                  have lean_s1409 : let1085 := by timed And.intro lean_a309 lean_s1408
                  have lean_s1410 : let1087 :=
                    (scope (fun lean_a306 : let63 =>
                      (scope (fun lean_a307 : let36 =>
                        (scope (fun lean_a308 : let59 =>
                          have lean_s1410 : let947 := by timed Eq.symm lean_a308
                          have lean_s1411 : let127 := by timed Eq.symm lean_a307
                          have lean_s1412 : let36 := by timed Eq.symm lean_s1411
                          let lean_s1413 := by timed Eq.trans lean_s1410 lean_s1412
                          have lean_s1414 : let1088 := by timed Eq.symm lean_a306
                          have lean_s1415 : let63 := by timed Eq.symm lean_s1414
                          have lean_s1416 : let520 := by timed Eq.trans lean_s1413 lean_s1415
                          show let520 from lean_s1416
                    ))))))
                  have lean_s1411 : let1086 := by liftOrNToImp lean_s1410, 3
                  have lean_s1412 : let520 := by timed modusPonens lean_s1409 lean_s1411
                  have lean_s1413 : let1084 :=
                    (scope (fun lean_a306 : let520 =>
                      have lean_s1413 : let519 := by timed eqResolve lean_a306 lean_r180
                      have lean_s1414 : let1079 := by timed Eq.symm lean_s1413
                      show let1079 from lean_s1414
                    ))
                  have lean_s1414 : let1083 := by liftOrNToImp lean_s1413, 1
                  have lean_s1415 : let1079 := by timed modusPonens lean_s1412 lean_s1414
                  have lean_s1416 : let1080 := by timed And.intro lean_s1401 lean_s1415
                  have lean_s1417 : let1082 :=
                    (scope (fun lean_a307 : let460 =>
                      (scope (fun lean_a308 : let1079 =>
                        have lean_s1417 : let519 := by timed Eq.symm lean_a308
                        have lean_s1418 : let1079 := by timed Eq.symm lean_s1417
                        have lean_s1419 : let1056 := by timed Eq.symm lean_a307
                        have lean_s1420 : let460 := by timed Eq.symm lean_s1419
                        have lean_s1421 : let1055 := by timed flipCongrArg lean_s1420 [sx5fcount]
                        have lean_s1422 : let989 := by timed Eq.trans lean_s1418 lean_s1421
                        show let989 from lean_s1422
                    ))))
                  have lean_s1418 : let1081 := by liftOrNToImp lean_s1417, 2
                  have lean_s1419 : let989 := by timed modusPonens lean_s1416 lean_s1418
                  let lean_s1420 := by timed And.intro lean_s1407 lean_s1419
                  have lean_s1421 : let1139 := by timed And.intro lean_a312 lean_s1420
                  show let1139 from lean_s1421
  ))))))))))))))))
have lean_s1401 : let1140 := by liftOrNToImp lean_s1400, 8
have lean_s1402 : (Eq let65 let65) := by timed rfl
let lean_s1403 := by timed flipCongrArg lean_s1402 [Implies]
have lean_s1404 : (Or let250 (Or let1016 let993)) :=
  (scope (fun lean_a308 : let22 =>
    (scope (fun lean_a309 : let1012 =>
      (scope (fun lean_a310 : let989 =>
        have lean_s1404 : let994 := by timed Eq.symm lean_a310
        have lean_s1405 : let996 :=
          (scope (fun lean_a309 : let994 =>
            have lean_s1405 : let279 := by timed trueElim lean_r86
            have lean_s1406 : let1000 := by timed And.intro lean_s1405 lean_a309
            have lean_s1407 : let1001 := by arithMulPos [let20, let4, let211], 4
            have lean_s1408 : let999 := by timed modusPonens lean_s1406 lean_s1407
            have lean_s1409 : let1021 := by timed Eq.symm lean_a309
            have lean_s1410 : let1022 := by timed And.intro lean_s1405 lean_s1409
            have lean_s1411 : let1023 := by arithMulPos [let19, let4, let211], 4
            have lean_s1412 : let1020 := by timed modusPonens lean_s1410 lean_s1411
            have lean_s1413 : let698 := by timed trueElim lean_r263
            have lean_s1414 : let931 := by timed And.intro lean_s1413 lean_a308
            have lean_s1415 : let932 := by arithMulNeg [let21, let16, let688], 3
            have lean_s1416 : let930 := by timed modusPonens lean_s1414 lean_s1415
            have lean_s1417 : let1143 := by sumBounds [lean_s1408, lean_s1412, lean_s1416]
            let lean_s1418 := by timed congrHAdd lean_r193 lean_r261
            have lean_s1419 : (Eq let928 let695) := by timed congrHAdd lean_r262 lean_s1418
            have lean_s1420 : (Eq let928 let10) := by timed Eq.trans lean_s1419 lean_r260
            let lean_s1421 := by timed flipCongrArg lean_s1420 [LE.le]
            let lean_s1422 := by timed congrHAdd lean_r124 lean_r256
            have lean_s1423 : (Eq let1142 let213) := by timed congrHAdd lean_r124 lean_s1422
            have lean_s1424 : (Eq let1142 let8) := by timed Eq.trans lean_s1423 lean_r52
            have lean_s1425 : (Eq let1143 let481) := by timed congr lean_s1421 lean_s1424
            have lean_s1426 : (Eq let1143 False) := by timed Eq.trans lean_s1425 lean_r155
            show False from by timed eqResolve lean_s1417 lean_s1426
          ))
        have lean_s1406 : let995 := by liftOrNToNeg lean_s1405
        show False from by timed contradiction lean_s1404 lean_s1406
  ))))))
have lean_s1405 : (Not let1139) := by liftOrNToNeg lean_s1404
have lean_s1406 : let1141 := by timed falseIntro lean_s1405
have lean_s1407 : (Eq let1140 let67) := by timed congr lean_s1403 lean_s1406
have lean_s1408 : (Eq let1140 let66) := by timed Eq.trans lean_s1407 lean_r7
have lean_s1409 : let66 := by timed eqResolve lean_s1401 lean_s1408
have lean_s1410 : (Or let888 (Or let1123 let1075)) := by timed flipNotAnd lean_s1409 [let59, let58, let36, let63, let30, let26, let22, let15]
have lean_s1411 : (Or let250 (Or let888 (Or let967 (Or let1073 let1133)))) := by permutateOr lean_s1410, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1412 := by R2 lean_s1411, lean_s1360, let22, [(- 1), 0]
let lean_s1413 := by R2 lean_s1412, lean_s1345, let63, [(- 1), (- 1)]
let lean_s1414 := by R2 lean_s1413, lean_s1347, let388, [(- 1), (- 1)]
have lean_s1415 : (Or let888 (Or let1123 (Or let967 (Or let1045 (Or let963 let1050))))) :=
  (scope (fun lean_a309 : let59 =>
    (scope (fun lean_a310 : let58 =>
      (scope (fun lean_a311 : let36 =>
        (scope (fun lean_a312 : let33 =>
          (scope (fun lean_a313 : let30 =>
            (scope (fun lean_a314 : let26 =>
              (scope (fun lean_a315 : let22 =>
                (scope (fun lean_a316 : let15 =>
                  have lean_s1415 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1416 : let460 := by timed eqResolve lean_a316 lean_s1415
                  let lean_s1417 := by timed And.intro lean_a313 lean_a310
                  let lean_s1418 := by timed And.intro lean_a314 lean_s1417
                  have lean_s1419 : let1136 := by timed And.intro lean_s1416 lean_s1418
                  have lean_s1420 : let1138 :=
                    (scope (fun lean_a309 : let460 =>
                      (scope (fun lean_a310 : let26 =>
                        (scope (fun lean_a311 : let30 =>
                          (scope (fun lean_a312 : let58 =>
                            have lean_s1420 : let1130 := by timed Eq.symm lean_a312
                            have lean_s1421 : let522 := by timed Eq.symm lean_a311
                            have lean_s1422 : let30 := by timed Eq.symm lean_s1421
                            let lean_s1423 := by timed Eq.trans lean_s1420 lean_s1422
                            have lean_s1424 : let307 := by timed Eq.symm lean_a310
                            have lean_s1425 : let26 := by timed Eq.symm lean_s1424
                            let lean_s1426 := by timed Eq.trans lean_s1423 lean_s1425
                            have lean_s1427 : let1056 := by timed Eq.symm lean_a309
                            have lean_s1428 : let460 := by timed Eq.symm lean_s1427
                            have lean_s1429 : let1059 := by timed flipCongrArg lean_s1428 [xx5fcount]
                            have lean_s1430 : let1012 := by timed Eq.trans lean_s1426 lean_s1429
                            show let1012 from lean_s1430
                    ))))))))
                  have lean_s1421 : let1137 := by liftOrNToImp lean_s1420, 4
                  have lean_s1422 : let1012 := by timed modusPonens lean_s1419 lean_s1421
                  let lean_s1423 := by timed And.intro lean_a311 lean_a309
                  let lean_s1424 := by timed And.intro lean_a312 lean_s1423
                  have lean_s1425 : let1051 := by timed And.intro lean_s1416 lean_s1424
                  have lean_s1426 : let1054 :=
                    (scope (fun lean_a309 : let460 =>
                      (scope (fun lean_a310 : let33 =>
                        (scope (fun lean_a311 : let36 =>
                          (scope (fun lean_a312 : let59 =>
                            have lean_s1426 : let947 := by timed Eq.symm lean_a312
                            have lean_s1427 : let127 := by timed Eq.symm lean_a311
                            have lean_s1428 : let36 := by timed Eq.symm lean_s1427
                            let lean_s1429 := by timed Eq.trans lean_s1426 lean_s1428
                            have lean_s1430 : let224 := by timed Eq.symm lean_a310
                            have lean_s1431 : let33 := by timed Eq.symm lean_s1430
                            let lean_s1432 := by timed Eq.trans lean_s1429 lean_s1431
                            have lean_s1433 : let1056 := by timed Eq.symm lean_a309
                            have lean_s1434 : let460 := by timed Eq.symm lean_s1433
                            have lean_s1435 : let1055 := by timed flipCongrArg lean_s1434 [sx5fcount]
                            have lean_s1436 : let916 := by timed Eq.trans lean_s1432 lean_s1435
                            show let916 from lean_s1436
                    ))))))))
                  have lean_s1427 : let1052 := by liftOrNToImp lean_s1426, 4
                  have lean_s1428 : let916 := by timed modusPonens lean_s1425 lean_s1427
                  let lean_s1429 := by timed And.intro lean_s1422 lean_s1428
                  have lean_s1430 : let1013 := by timed And.intro lean_a315 lean_s1429
                  show let1013 from lean_s1430
  ))))))))))))))))
have lean_s1416 : let1135 := by liftOrNToImp lean_s1415, 8
have lean_s1417 : (Eq let68 let68) := by timed rfl
let lean_s1418 := by timed flipCongrArg lean_s1417 [Implies]
have lean_s1419 : (Or let250 (Or let1016 let921)) :=
  (scope (fun lean_a309 : let22 =>
    (scope (fun lean_a310 : let1012 =>
      (scope (fun lean_a311 : let916 =>
        have lean_s1419 : let923 := by timed Eq.symm lean_a311
        have lean_s1420 : let925 :=
          (scope (fun lean_a309 : let923 =>
            have lean_s1420 : let279 := by timed trueElim lean_r86
            have lean_s1421 : let938 := by timed And.intro lean_s1420 lean_a309
            have lean_s1422 : let939 := by arithMulPos [let20, let28, let211], 4
            have lean_s1423 : let937 := by timed modusPonens lean_s1421 lean_s1422
            have lean_s1424 : let1021 := by timed Eq.symm lean_a310
            have lean_s1425 : let1022 := by timed And.intro lean_s1420 lean_s1424
            have lean_s1426 : let1023 := by arithMulPos [let19, let4, let211], 4
            have lean_s1427 : let1020 := by timed modusPonens lean_s1425 lean_s1426
            have lean_s1428 : let698 := by timed trueElim lean_r263
            have lean_s1429 : let931 := by timed And.intro lean_s1428 lean_a309
            have lean_s1430 : let932 := by arithMulNeg [let21, let16, let688], 3
            have lean_s1431 : let930 := by timed modusPonens lean_s1429 lean_s1430
            have lean_s1432 : let1019 := by sumBounds [lean_s1423, lean_s1427, lean_s1431]
            let lean_s1433 := by timed congrHAdd lean_r193 lean_r261
            have lean_s1434 : (Eq let928 let695) := by timed congrHAdd lean_r262 lean_s1433
            have lean_s1435 : (Eq let928 let10) := by timed Eq.trans lean_s1434 lean_r260
            let lean_s1436 := by timed flipCongrArg lean_s1435 [LE.le]
            let lean_s1437 := by timed congrHAdd lean_r124 lean_r256
            have lean_s1438 : (Eq let1018 let459) := by timed congrHAdd lean_r258 lean_s1437
            have lean_s1439 : (Eq let1018 let458) := by timed Eq.trans lean_s1438 lean_r137
            have lean_s1440 : (Eq let1019 let475) := by timed congr lean_s1436 lean_s1439
            have lean_s1441 : (Eq let1019 False) := by timed Eq.trans lean_s1440 lean_r149
            show False from by timed eqResolve lean_s1432 lean_s1441
          ))
        have lean_s1421 : let924 := by liftOrNToNeg lean_s1420
        show False from by timed contradiction lean_s1419 lean_s1421
  ))))))
have lean_s1420 : (Not let1013) := by liftOrNToNeg lean_s1419
have lean_s1421 : let1015 := by timed falseIntro lean_s1420
have lean_s1422 : (Eq let1135 let70) := by timed congr lean_s1418 lean_s1421
have lean_s1423 : (Eq let1135 let69) := by timed Eq.trans lean_s1422 lean_r8
have lean_s1424 : let69 := by timed eqResolve lean_s1416 lean_s1423
have lean_s1425 : (Or let888 (Or let1123 let1067)) := by timed flipNotAnd lean_s1424 [let59, let58, let36, let33, let30, let26, let22, let15]
have lean_s1426 : (Or let250 (Or let888 (Or let967 (Or let1045 let1133)))) := by permutateOr lean_s1425, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1427 := by R1 lean_s1414, lean_s1426, let33, [(- 1), (- 1)]
have lean_s1428 : (Or let888 (Or let967 (Or let1123 (Or let963 (Or let1043 (Or let293 let1134)))))) := by R2 lean_s1427, lean_s1360, let22, [(- 1), 0]
have lean_s1429 : let1134 := by factor lean_s1428, (- 1)
have lean_s1430 : let370 := by andElim lean_s1342, 12
have lean_s1431 : (Or let369 let30) := by timed iteElim2 lean_s1430
have lean_s1432 : (Or let30 let369) := by permutateOr lean_s1431, [1, 0], (- 1)
let lean_s1433 := by R2 lean_s1429, lean_s1432, let30, [(- 1), (- 1)]
have lean_s1434 : (Or let904 let266) := by timed @cnfAndPos [let266, let368] 0
have lean_s1435 : (Or let266 let904) := by permutateOr lean_s1434, [1, 0], (- 1)
let lean_s1436 := by R1 lean_s1433, lean_s1435, let369, [(- 1), (- 1)]
have lean_s1437 : (Or let1118 (Or let1116 let901)) := by timed cnfAndNeg [let225, let266]
have lean_s1438 : let1117 :=
  (scope (fun lean_a309 : let225 =>
    (scope (fun lean_a310 : let266 =>
      have lean_s1438 : let1118 := by timed And.intro lean_a309 lean_a310
      have lean_s1439 : let1117 :=
        (scope (fun lean_a311 : let225 =>
          (scope (fun lean_a312 : let266 =>
            have lean_s1439 : let267 := by timed Eq.symm lean_a312
            have lean_s1440 : let266 := by timed Eq.symm lean_s1439
            have lean_s1441 : let226 := by timed Eq.symm lean_a311
            have lean_s1442 : (Eq let218 let87) := by timed Eq.trans lean_s1440 lean_s1441
            let lean_s1443 := by timed flipCongrArg lean_s1442 [Eq]
            have lean_s1444 : let227 := by timed rfl
            have lean_s1445 : (Eq let229 let311) := by timed congr lean_s1443 lean_s1444
            let lean_s1446 := by timed flipCongrArg lean_a311 [Eq]
            have lean_s1447 : (Eq let311 let504) := by timed congr lean_s1446 lean_s1444
            have lean_s1448 : (Eq let505 let560) := by timed flipCongrArg lean_r197 [Not]
            have lean_s1449 : (Eq let505 True) := by timed Eq.trans lean_s1448 lean_r205
            have lean_s1450 : (Eq let506 True) := by timed Eq.trans lean_r173 lean_s1449
            have lean_s1451 : let506 := by timed trueElim lean_s1450
            have lean_s1452 : (Eq let311 False) := by timed Eq.trans lean_s1447 lean_s1451
            have lean_s1453 : let1120 := by timed Eq.trans lean_s1445 lean_s1452
            have lean_s1454 : let1115 := by timed falseElim lean_s1453
            show let1115 from lean_s1454
        ))))
      have lean_s1440 : let1119 := by liftOrNToImp lean_s1439, 2
      have lean_s1441 : let1115 := by timed modusPonens lean_s1438 lean_s1440
      show let1115 from lean_s1441
  ))))
have lean_s1439 : let1119 := by liftOrNToImp lean_s1438, 2
have lean_s1440 : (Or (Not let1118) let1115) := by timed impliesElim lean_s1439
have lean_s1441 : let1117 := by R1 lean_s1437, lean_s1440, let1118, [(- 1), (- 1)]
let lean_s1442 := by R1 lean_s1436, lean_s1441, let266, [(- 1), (- 1)]
have lean_s1443 : (Or let888 (Or let909 (Or let902 let1113))) :=
  (scope (fun lean_a311 : let59 =>
    (scope (fun lean_a312 : let38 =>
      (scope (fun lean_a313 : let239 =>
        (scope (fun lean_a314 : let33 =>
          (scope (fun lean_a315 : let30 =>
            (scope (fun lean_a316 : let26 =>
              (scope (fun lean_a317 : let22 =>
                (scope (fun lean_a318 : let15 =>
                  have lean_s1443 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1444 : let460 := by timed eqResolve lean_a318 lean_s1443
                  let lean_s1445 := by timed And.intro lean_a315 lean_a312
                  let lean_s1446 := by timed And.intro lean_a316 lean_s1445
                  have lean_s1447 : let1070 := by timed And.intro lean_s1444 lean_s1446
                  have lean_s1448 : let1072 :=
                    (scope (fun lean_a312 : let460 =>
                      (scope (fun lean_a313 : let26 =>
                        (scope (fun lean_a314 : let30 =>
                          (scope (fun lean_a315 : let38 =>
                            have lean_s1448 : let954 := by timed Eq.symm lean_a315
                            have lean_s1449 : let522 := by timed Eq.symm lean_a314
                            have lean_s1450 : let30 := by timed Eq.symm lean_s1449
                            let lean_s1451 := by timed Eq.trans lean_s1448 lean_s1450
                            have lean_s1452 : let307 := by timed Eq.symm lean_a313
                            have lean_s1453 : let26 := by timed Eq.symm lean_s1452
                            let lean_s1454 := by timed Eq.trans lean_s1451 lean_s1453
                            have lean_s1455 : let1056 := by timed Eq.symm lean_a312
                            have lean_s1456 : let460 := by timed Eq.symm lean_s1455
                            have lean_s1457 : let1059 := by timed flipCongrArg lean_s1456 [xx5fcount]
                            have lean_s1458 : let917 := by timed Eq.trans lean_s1454 lean_s1457
                            show let917 from lean_s1458
                    ))))))))
                  have lean_s1449 : let1071 := by liftOrNToImp lean_s1448, 4
                  have lean_s1450 : let917 := by timed modusPonens lean_s1447 lean_s1449
                  have lean_s1451 : let1008 := by timed And.intro lean_a313 lean_a311
                  have lean_s1452 : let1010 :=
                    (scope (fun lean_a312 : let239 =>
                      (scope (fun lean_a313 : let59 =>
                        have lean_s1452 : let947 := by timed Eq.symm lean_a313
                        have lean_s1453 : (Eq let238 let35) := by timed Eq.symm lean_a312
                        have lean_s1454 : let239 := by timed Eq.symm lean_s1453
                        have lean_s1455 : let709 := by timed Eq.trans lean_s1452 lean_s1454
                        show let709 from lean_s1455
                    ))))
                  have lean_s1453 : let1009 := by liftOrNToImp lean_s1452, 2
                  have lean_s1454 : let709 := by timed modusPonens lean_s1451 lean_s1453
                  have lean_s1455 : let1007 :=
                    (scope (fun lean_a312 : let709 =>
                      have lean_s1455 : let708 := by timed eqResolve lean_a312 lean_r269
                      have lean_s1456 : let1003 := by timed Eq.symm lean_s1455
                      show let1003 from lean_s1456
                    ))
                  have lean_s1456 : let1006 := by liftOrNToImp lean_s1455, 1
                  have lean_s1457 : let1003 := by timed modusPonens lean_s1454 lean_s1456
                  let lean_s1458 := by timed And.intro lean_a314 lean_s1457
                  have lean_s1459 : let1114 := by timed And.intro lean_s1444 lean_s1458
                  have lean_s1460 : (Or let1053 (Or let1045 let1005)) :=
                    (scope (fun lean_a313 : let460 =>
                      (scope (fun lean_a314 : let33 =>
                        (scope (fun lean_a315 : let1003 =>
                          have lean_s1460 : let708 := by timed Eq.symm lean_a315
                          have lean_s1461 : let1003 := by timed Eq.symm lean_s1460
                          have lean_s1462 : let224 := by timed Eq.symm lean_a314
                          have lean_s1463 : let33 := by timed Eq.symm lean_s1462
                          let lean_s1464 := by timed Eq.trans lean_s1461 lean_s1463
                          have lean_s1465 : let1056 := by timed Eq.symm lean_a313
                          have lean_s1466 : let460 := by timed Eq.symm lean_s1465
                          have lean_s1467 : let1055 := by timed flipCongrArg lean_s1466 [sx5fcount]
                          have lean_s1468 : let989 := by timed Eq.trans lean_s1464 lean_s1467
                          show let989 from lean_s1468
                    ))))))
                  have lean_s1461 : (Implies let1114 let989) := by liftOrNToImp lean_s1460, 3
                  have lean_s1462 : let989 := by timed modusPonens lean_s1459 lean_s1461
                  let lean_s1463 := by timed And.intro lean_s1450 lean_s1462
                  have lean_s1464 : let990 := by timed And.intro lean_a317 lean_s1463
                  show let990 from lean_s1464
  ))))))))))))))))
have lean_s1444 : let1112 := by liftOrNToImp lean_s1443, 8
have lean_s1445 : (Eq let240 let240) := by timed rfl
let lean_s1446 := by timed flipCongrArg lean_s1445 [Implies]
have lean_s1447 : let992 := by timed falseIntro lean_s1353
have lean_s1448 : (Eq let1112 let242) := by timed congr lean_s1446 lean_s1447
have lean_s1449 : (Eq let1112 let241) := by timed Eq.trans lean_s1448 lean_r67
have lean_s1450 : let241 := by timed eqResolve lean_s1444 lean_s1449
have lean_s1451 : (Or let888 (Or let909 (Or let902 let1066))) := by timed flipNotAnd lean_s1450 [let59, let38, let239, let33, let30, let26, let22, let15]
have lean_s1452 : (Or let250 (Or let888 (Or let902 let1063))) := by permutateOr lean_s1451, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1453 := by R2 lean_s1452, lean_s1360, let22, [(- 1), 0]
let lean_s1454 := by R2 lean_s1453, lean_s1398, let26, [(- 1), (- 1)]
let lean_s1455 := by R2 lean_s1454, lean_s1347, let33, [(- 1), (- 1)]
have lean_s1456 : (Or let906 let363) := by timed @cnfAndPos [let363, let178] 0
have lean_s1457 : (Or let363 let906) := by permutateOr lean_s1456, [1, 0], (- 1)
let lean_s1458 := by R1 lean_s1455, lean_s1457, let364, [(- 1), (- 1)]
have lean_s1459 : (Or let905 let363) := by timed @cnfAndPos [let363, let387] 0
have lean_s1460 : (Or let363 let905) := by permutateOr lean_s1459, [1, 0], (- 1)
let lean_s1461 := by R1 lean_s1458, lean_s1460, let388, [(- 1), (- 1)]
let lean_s1462 := by R2 lean_s1461, lean_s1432, let30, [(- 1), (- 1)]
have lean_s1463 : (Or let904 let368) := by timed @cnfAndPos [let266, let368] 1
have lean_s1464 : (Or let368 let904) := by permutateOr lean_s1463, [1, 0], (- 1)
have lean_s1465 : (Or let888 (Or let902 (Or let909 (Or let293 let903)))) := by R1 lean_s1462, lean_s1464, let369, [(- 1), (- 1)]
have lean_s1466 : (Or let888 (Or let902 (Or let909 (Or let293 let900)))) := by factor lean_s1465, (- 1)
have lean_s1467 : let897 :=
  (scope (fun lean_a314 : let390 =>
    have lean_s1467 : let897 :=
      (scope (fun lean_a315 : let390 =>
        have lean_s1467 : let570 := by timed Eq.symm lean_a315
        have lean_s1468 : let390 := by timed Eq.symm lean_s1467
        let lean_s1469 := by timed flipCongrArg lean_s1468 [Eq]
        have lean_s1470 : let258 := by timed rfl
        have lean_s1471 : (Eq let363 let620) := by timed congr lean_s1469 lean_s1470
        have lean_s1472 : (Eq let686 let560) := by timed flipCongrArg lean_r244 [Not]
        have lean_s1473 : (Eq let686 True) := by timed Eq.trans lean_s1472 lean_r205
        have lean_s1474 : (Eq let621 True) := by timed Eq.trans lean_r254 lean_s1473
        have lean_s1475 : let621 := by timed trueElim lean_s1474
        have lean_s1476 : let899 := by timed Eq.trans lean_s1471 lean_s1475
        have lean_s1477 : let896 := by timed falseElim lean_s1476
        show let896 from lean_s1477
      ))
    have lean_s1468 : let898 := by liftOrNToImp lean_s1467, 1
    have lean_s1469 : let896 := by timed modusPonens lean_a314 lean_s1468
    show let896 from lean_s1469
  ))
have lean_s1468 : let898 := by liftOrNToImp lean_s1467, 1
have lean_s1469 : let897 := by timed impliesElim lean_s1468
have lean_s1470 : (Or let896 let891) := by permutateOr lean_s1469, [1, 0], (- 1)
let lean_s1471 := by R1 lean_s1466, lean_s1470, let363, [(- 1), (- 1)]
have lean_s1472 : let894 :=
  (scope (fun lean_a315 : let368 =>
    have lean_s1472 : let894 :=
      (scope (fun lean_a316 : let368 =>
        have lean_s1472 : let495 := by timed Eq.symm lean_a316
        have lean_s1473 : let368 := by timed Eq.symm lean_s1472
        let lean_s1474 := by timed flipCongrArg lean_s1473 [Eq]
        have lean_s1475 : let221 := by timed rfl
        have lean_s1476 : (Eq let390 let243) := by timed congr lean_s1474 lean_s1475
        have lean_s1477 : (Eq let685 let560) := by timed flipCongrArg lean_r68 [Not]
        have lean_s1478 : (Eq let685 True) := by timed Eq.trans lean_s1477 lean_r205
        have lean_s1479 : (Eq let244 True) := by timed Eq.trans lean_r252 lean_s1478
        have lean_s1480 : let244 := by timed trueElim lean_s1479
        have lean_s1481 : (Eq let390 False) := by timed Eq.trans lean_s1476 lean_s1480
        have lean_s1482 : let891 := by timed falseElim lean_s1481
        show let891 from lean_s1482
      ))
    have lean_s1473 : let895 := by liftOrNToImp lean_s1472, 1
    have lean_s1474 : let891 := by timed modusPonens lean_a315 lean_s1473
    show let891 from lean_s1474
  ))
have lean_s1473 : let895 := by liftOrNToImp lean_s1472, 1
have lean_s1474 : let894 := by timed impliesElim lean_s1473
have lean_s1475 : (Or let891 let893) := by permutateOr lean_s1474, [1, 0], (- 1)
let lean_s1476 := by R1 lean_s1471, lean_s1475, let368, [(- 1), (- 1)]
have lean_s1477 : let392 := by andElim lean_s1342, 6
have lean_s1478 : (Or let889 let239) := by timed iteElim1 lean_s1477
have lean_s1479 : (Or let239 let889) := by permutateOr lean_s1478, [1, 0], (- 1)
have lean_s1480 : (Or let888 (Or let909 (Or let293 (Or let891 let892)))) := by R2 lean_s1476, lean_s1479, let239, [(- 1), (- 1)]
have lean_s1481 : (Or let888 (Or let909 (Or let293 let892))) := by factor lean_s1480, (- 1)
have lean_s1482 : (Or let889 let390) := by timed @cnfAndPos [let266, let390] 1
have lean_s1483 : (Or let390 let889) := by permutateOr lean_s1482, [1, 0], (- 1)
have lean_s1484 : (Or let888 (Or let909 (Or let293 let890))) := by R2 lean_s1481, lean_s1483, let390, [(- 1), (- 1)]
have lean_s1485 : (Or let888 (Or let909 (Or let293 let889))) := by factor lean_s1484, (- 1)
have lean_s1486 : (Or let391 let36) := by timed iteElim2 lean_s1477
have lean_s1487 : (Or let36 let391) := by permutateOr lean_s1486, [1, 0], (- 1)
let lean_s1488 := by R2 lean_s1485, lean_s1487, let391, [(- 1), (- 1)]
have lean_s1489 : (Or let888 (Or let909 (Or let967 (Or let1045 (Or let963 (Or let1096 let1049)))))) :=
  (scope (fun lean_a316 : let59 =>
    (scope (fun lean_a317 : let38 =>
      (scope (fun lean_a318 : let36 =>
        (scope (fun lean_a319 : let33 =>
          (scope (fun lean_a320 : let30 =>
            (scope (fun lean_a321 : let45 =>
              (scope (fun lean_a322 : let22 =>
                (scope (fun lean_a323 : let15 =>
                  have lean_s1489 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1490 : let460 := by timed eqResolve lean_a323 lean_s1489
                  let lean_s1491 := by timed And.intro lean_a320 lean_a317
                  have lean_s1492 : let1108 := by timed And.intro lean_a321 lean_s1491
                  have lean_s1493 : let1110 :=
                    (scope (fun lean_a316 : let45 =>
                      (scope (fun lean_a317 : let30 =>
                        (scope (fun lean_a318 : let38 =>
                          have lean_s1493 : let954 := by timed Eq.symm lean_a318
                          have lean_s1494 : let522 := by timed Eq.symm lean_a317
                          have lean_s1495 : let30 := by timed Eq.symm lean_s1494
                          let lean_s1496 := by timed Eq.trans lean_s1493 lean_s1495
                          have lean_s1497 : let1111 := by timed Eq.symm lean_a316
                          have lean_s1498 : let45 := by timed Eq.symm lean_s1497
                          have lean_s1499 : let306 := by timed Eq.trans lean_s1496 lean_s1498
                          show let306 from lean_s1499
                    ))))))
                  have lean_s1494 : let1109 := by liftOrNToImp lean_s1493, 3
                  have lean_s1495 : let306 := by timed modusPonens lean_s1492 lean_s1494
                  have lean_s1496 : let1107 :=
                    (scope (fun lean_a316 : let306 =>
                      have lean_s1496 : let305 := by timed eqResolve lean_a316 lean_r97
                      have lean_s1497 : let1102 := by timed Eq.symm lean_s1496
                      show let1102 from lean_s1497
                    ))
                  have lean_s1497 : let1106 := by liftOrNToImp lean_s1496, 1
                  have lean_s1498 : let1102 := by timed modusPonens lean_s1495 lean_s1497
                  have lean_s1499 : let1103 := by timed And.intro lean_s1490 lean_s1498
                  have lean_s1500 : let1105 :=
                    (scope (fun lean_a317 : let460 =>
                      (scope (fun lean_a318 : let1102 =>
                        have lean_s1500 : let305 := by timed Eq.symm lean_a318
                        have lean_s1501 : let1102 := by timed Eq.symm lean_s1500
                        have lean_s1502 : let1056 := by timed Eq.symm lean_a317
                        have lean_s1503 : let460 := by timed Eq.symm lean_s1502
                        have lean_s1504 : let1059 := by timed flipCongrArg lean_s1503 [xx5fcount]
                        have lean_s1505 : let1012 := by timed Eq.trans lean_s1501 lean_s1504
                        show let1012 from lean_s1505
                    ))))
                  have lean_s1501 : let1104 := by liftOrNToImp lean_s1500, 2
                  have lean_s1502 : let1012 := by timed modusPonens lean_s1499 lean_s1501
                  let lean_s1503 := by timed And.intro lean_a318 lean_a316
                  let lean_s1504 := by timed And.intro lean_a319 lean_s1503
                  have lean_s1505 : let1051 := by timed And.intro lean_s1490 lean_s1504
                  have lean_s1506 : let1054 :=
                    (scope (fun lean_a318 : let460 =>
                      (scope (fun lean_a319 : let33 =>
                        (scope (fun lean_a320 : let36 =>
                          (scope (fun lean_a321 : let59 =>
                            have lean_s1506 : let947 := by timed Eq.symm lean_a321
                            have lean_s1507 : let127 := by timed Eq.symm lean_a320
                            have lean_s1508 : let36 := by timed Eq.symm lean_s1507
                            let lean_s1509 := by timed Eq.trans lean_s1506 lean_s1508
                            have lean_s1510 : let224 := by timed Eq.symm lean_a319
                            have lean_s1511 : let33 := by timed Eq.symm lean_s1510
                            let lean_s1512 := by timed Eq.trans lean_s1509 lean_s1511
                            have lean_s1513 : let1056 := by timed Eq.symm lean_a318
                            have lean_s1514 : let460 := by timed Eq.symm lean_s1513
                            have lean_s1515 : let1055 := by timed flipCongrArg lean_s1514 [sx5fcount]
                            have lean_s1516 : let916 := by timed Eq.trans lean_s1512 lean_s1515
                            show let916 from lean_s1516
                    ))))))))
                  have lean_s1507 : let1052 := by liftOrNToImp lean_s1506, 4
                  have lean_s1508 : let916 := by timed modusPonens lean_s1505 lean_s1507
                  let lean_s1509 := by timed And.intro lean_s1502 lean_s1508
                  have lean_s1510 : let1013 := by timed And.intro lean_a322 lean_s1509
                  show let1013 from lean_s1510
  ))))))))))))))))
have lean_s1490 : let1101 := by liftOrNToImp lean_s1489, 8
have lean_s1491 : (Eq let252 let252) := by timed rfl
let lean_s1492 := by timed flipCongrArg lean_s1491 [Implies]
have lean_s1493 : let1015 := by timed falseIntro lean_s1420
have lean_s1494 : (Eq let1101 let254) := by timed congr lean_s1492 lean_s1493
have lean_s1495 : (Eq let1101 let253) := by timed Eq.trans lean_s1494 lean_r72
have lean_s1496 : let253 := by timed eqResolve lean_s1490 lean_s1495
have lean_s1497 : (Or let888 let1100) := by timed flipNotAnd lean_s1496 [let59, let38, let36, let33, let30, let45, let22, let15]
have lean_s1498 : (Or let250 (Or let888 let1098)) := by permutateOr lean_s1497, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1499 := by R2 lean_s1498, lean_s1360, let22, [(- 1), 0]
let lean_s1500 := by R2 lean_s1499, lean_s1347, let33, [(- 1), (- 1)]
let lean_s1501 := by R1 lean_s1500, lean_s1382, let388, [(- 1), (- 1)]
let lean_s1502 := by R1 lean_s1501, lean_s1387, let387, [(- 1), (- 1)]
let lean_s1503 := by R2 lean_s1502, lean_s1391, let45, [(- 1), (- 1)]
have lean_s1504 : (Or let888 (Or let967 (Or let909 let1091))) := by R2 lean_s1503, lean_s1394, let178, [(- 1), (- 1)]
have lean_s1505 : (Or let888 (Or let967 (Or let909 let1089))) := by factor lean_s1504, (- 1)
let lean_s1506 := by R2 lean_s1505, lean_s1398, let364, [(- 1), (- 1)]
have lean_s1507 : (Or let888 (Or let909 (Or let967 (Or let1073 let1078)))) :=
  (scope (fun lean_a318 : let59 =>
    (scope (fun lean_a319 : let38 =>
      (scope (fun lean_a320 : let36 =>
        (scope (fun lean_a321 : let63 =>
          (scope (fun lean_a322 : let30 =>
            (scope (fun lean_a323 : let26 =>
              (scope (fun lean_a324 : let22 =>
                (scope (fun lean_a325 : let15 =>
                  have lean_s1507 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1508 : let460 := by timed eqResolve lean_a325 lean_s1507
                  let lean_s1509 := by timed And.intro lean_a322 lean_a319
                  let lean_s1510 := by timed And.intro lean_a323 lean_s1509
                  have lean_s1511 : let1070 := by timed And.intro lean_s1508 lean_s1510
                  have lean_s1512 : let1072 :=
                    (scope (fun lean_a318 : let460 =>
                      (scope (fun lean_a319 : let26 =>
                        (scope (fun lean_a320 : let30 =>
                          (scope (fun lean_a321 : let38 =>
                            have lean_s1512 : let954 := by timed Eq.symm lean_a321
                            have lean_s1513 : let522 := by timed Eq.symm lean_a320
                            have lean_s1514 : let30 := by timed Eq.symm lean_s1513
                            let lean_s1515 := by timed Eq.trans lean_s1512 lean_s1514
                            have lean_s1516 : let307 := by timed Eq.symm lean_a319
                            have lean_s1517 : let26 := by timed Eq.symm lean_s1516
                            let lean_s1518 := by timed Eq.trans lean_s1515 lean_s1517
                            have lean_s1519 : let1056 := by timed Eq.symm lean_a318
                            have lean_s1520 : let460 := by timed Eq.symm lean_s1519
                            have lean_s1521 : let1059 := by timed flipCongrArg lean_s1520 [xx5fcount]
                            have lean_s1522 : let917 := by timed Eq.trans lean_s1518 lean_s1521
                            show let917 from lean_s1522
                    ))))))))
                  have lean_s1513 : let1071 := by liftOrNToImp lean_s1512, 4
                  have lean_s1514 : let917 := by timed modusPonens lean_s1511 lean_s1513
                  let lean_s1515 := by timed And.intro lean_a320 lean_a318
                  have lean_s1516 : let1085 := by timed And.intro lean_a321 lean_s1515
                  have lean_s1517 : let1087 :=
                    (scope (fun lean_a318 : let63 =>
                      (scope (fun lean_a319 : let36 =>
                        (scope (fun lean_a320 : let59 =>
                          have lean_s1517 : let947 := by timed Eq.symm lean_a320
                          have lean_s1518 : let127 := by timed Eq.symm lean_a319
                          have lean_s1519 : let36 := by timed Eq.symm lean_s1518
                          let lean_s1520 := by timed Eq.trans lean_s1517 lean_s1519
                          have lean_s1521 : let1088 := by timed Eq.symm lean_a318
                          have lean_s1522 : let63 := by timed Eq.symm lean_s1521
                          have lean_s1523 : let520 := by timed Eq.trans lean_s1520 lean_s1522
                          show let520 from lean_s1523
                    ))))))
                  have lean_s1518 : let1086 := by liftOrNToImp lean_s1517, 3
                  have lean_s1519 : let520 := by timed modusPonens lean_s1516 lean_s1518
                  have lean_s1520 : let1084 :=
                    (scope (fun lean_a318 : let520 =>
                      have lean_s1520 : let519 := by timed eqResolve lean_a318 lean_r180
                      have lean_s1521 : let1079 := by timed Eq.symm lean_s1520
                      show let1079 from lean_s1521
                    ))
                  have lean_s1521 : let1083 := by liftOrNToImp lean_s1520, 1
                  have lean_s1522 : let1079 := by timed modusPonens lean_s1519 lean_s1521
                  have lean_s1523 : let1080 := by timed And.intro lean_s1508 lean_s1522
                  have lean_s1524 : let1082 :=
                    (scope (fun lean_a318 : let460 =>
                      (scope (fun lean_a319 : let1079 =>
                        have lean_s1524 : let519 := by timed Eq.symm lean_a319
                        have lean_s1525 : let1079 := by timed Eq.symm lean_s1524
                        have lean_s1526 : let1056 := by timed Eq.symm lean_a318
                        have lean_s1527 : let460 := by timed Eq.symm lean_s1526
                        have lean_s1528 : let1055 := by timed flipCongrArg lean_s1527 [sx5fcount]
                        have lean_s1529 : let989 := by timed Eq.trans lean_s1525 lean_s1528
                        show let989 from lean_s1529
                    ))))
                  have lean_s1525 : let1081 := by liftOrNToImp lean_s1524, 2
                  have lean_s1526 : let989 := by timed modusPonens lean_s1523 lean_s1525
                  let lean_s1527 := by timed And.intro lean_s1514 lean_s1526
                  have lean_s1528 : let990 := by timed And.intro lean_a324 lean_s1527
                  show let990 from lean_s1528
  ))))))))))))))))
have lean_s1508 : let1077 := by liftOrNToImp lean_s1507, 8
have lean_s1509 : (Eq let727 let727) := by timed rfl
let lean_s1510 := by timed flipCongrArg lean_s1509 [Implies]
have lean_s1511 : let992 := by timed falseIntro lean_s1353
have lean_s1512 : (Eq let1077 let729) := by timed congr lean_s1510 lean_s1511
have lean_s1513 : (Eq let1077 let728) := by timed Eq.trans lean_s1512 lean_r278
have lean_s1514 : let728 := by timed eqResolve lean_s1508 lean_s1513
have lean_s1515 : (Or let888 let1076) := by timed flipNotAnd lean_s1514 [let59, let38, let36, let63, let30, let26, let22, let15]
have lean_s1516 : (Or let250 (Or let888 let1074)) := by permutateOr lean_s1515, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1517 := by R2 lean_s1516, lean_s1360, let22, [(- 1), 0]
let lean_s1518 := by R2 lean_s1517, lean_s1345, let63, [(- 1), (- 1)]
let lean_s1519 := by R2 lean_s1518, lean_s1347, let388, [(- 1), (- 1)]
have lean_s1520 : (Or let888 (Or let909 (Or let967 (Or let1045 (Or let963 (Or let1043 (Or let250 (Or let293 let918)))))))) :=
  (scope (fun lean_a318 : let59 =>
    (scope (fun lean_a319 : let38 =>
      (scope (fun lean_a320 : let36 =>
        (scope (fun lean_a321 : let33 =>
          (scope (fun lean_a322 : let30 =>
            (scope (fun lean_a323 : let26 =>
              (scope (fun lean_a324 : let22 =>
                (scope (fun lean_a325 : let15 =>
                  have lean_s1520 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1521 : let460 := by timed eqResolve lean_a325 lean_s1520
                  let lean_s1522 := by timed And.intro lean_a322 lean_a319
                  let lean_s1523 := by timed And.intro lean_a323 lean_s1522
                  have lean_s1524 : let1070 := by timed And.intro lean_s1521 lean_s1523
                  have lean_s1525 : let1072 :=
                    (scope (fun lean_a318 : let460 =>
                      (scope (fun lean_a319 : let26 =>
                        (scope (fun lean_a320 : let30 =>
                          (scope (fun lean_a321 : let38 =>
                            have lean_s1525 : let954 := by timed Eq.symm lean_a321
                            have lean_s1526 : let522 := by timed Eq.symm lean_a320
                            have lean_s1527 : let30 := by timed Eq.symm lean_s1526
                            let lean_s1528 := by timed Eq.trans lean_s1525 lean_s1527
                            have lean_s1529 : let307 := by timed Eq.symm lean_a319
                            have lean_s1530 : let26 := by timed Eq.symm lean_s1529
                            let lean_s1531 := by timed Eq.trans lean_s1528 lean_s1530
                            have lean_s1532 : let1056 := by timed Eq.symm lean_a318
                            have lean_s1533 : let460 := by timed Eq.symm lean_s1532
                            have lean_s1534 : let1059 := by timed flipCongrArg lean_s1533 [xx5fcount]
                            have lean_s1535 : let917 := by timed Eq.trans lean_s1531 lean_s1534
                            show let917 from lean_s1535
                    ))))))))
                  have lean_s1526 : let1071 := by liftOrNToImp lean_s1525, 4
                  have lean_s1527 : let917 := by timed modusPonens lean_s1524 lean_s1526
                  let lean_s1528 := by timed And.intro lean_a320 lean_a318
                  let lean_s1529 := by timed And.intro lean_a321 lean_s1528
                  have lean_s1530 : let1051 := by timed And.intro lean_s1521 lean_s1529
                  have lean_s1531 : let1054 :=
                    (scope (fun lean_a318 : let460 =>
                      (scope (fun lean_a319 : let33 =>
                        (scope (fun lean_a320 : let36 =>
                          (scope (fun lean_a321 : let59 =>
                            have lean_s1531 : let947 := by timed Eq.symm lean_a321
                            have lean_s1532 : let127 := by timed Eq.symm lean_a320
                            have lean_s1533 : let36 := by timed Eq.symm lean_s1532
                            let lean_s1534 := by timed Eq.trans lean_s1531 lean_s1533
                            have lean_s1535 : let224 := by timed Eq.symm lean_a319
                            have lean_s1536 : let33 := by timed Eq.symm lean_s1535
                            let lean_s1537 := by timed Eq.trans lean_s1534 lean_s1536
                            have lean_s1538 : let1056 := by timed Eq.symm lean_a318
                            have lean_s1539 : let460 := by timed Eq.symm lean_s1538
                            have lean_s1540 : let1055 := by timed flipCongrArg lean_s1539 [sx5fcount]
                            have lean_s1541 : let916 := by timed Eq.trans lean_s1537 lean_s1540
                            show let916 from lean_s1541
                    ))))))))
                  have lean_s1532 : let1052 := by liftOrNToImp lean_s1531, 4
                  have lean_s1533 : let916 := by timed modusPonens lean_s1530 lean_s1532
                  let lean_s1534 := by timed And.intro lean_s1527 lean_s1533
                  have lean_s1535 : let918 := by timed And.intro lean_a324 lean_s1534
                  show let918 from lean_s1535
  ))))))))))))))))
have lean_s1521 : let1069 := by liftOrNToImp lean_s1520, 8
have lean_s1522 : (Eq let161 let161) := by timed rfl
let lean_s1523 := by timed flipCongrArg lean_s1522 [Implies]
have lean_s1524 : (Or let250 (Or let922 let921)) :=
  (scope (fun lean_a318 : let22 =>
    (scope (fun lean_a319 : let917 =>
      (scope (fun lean_a320 : let916 =>
        have lean_s1524 : let923 := by timed Eq.symm lean_a320
        have lean_s1525 : let925 :=
          (scope (fun lean_a318 : let923 =>
            have lean_s1525 : let279 := by timed trueElim lean_r86
            have lean_s1526 : let938 := by timed And.intro lean_s1525 lean_a318
            have lean_s1527 : let939 := by arithMulPos [let20, let28, let211], 4
            have lean_s1528 : let937 := by timed modusPonens lean_s1526 lean_s1527
            have lean_s1529 : let934 := by timed Eq.symm lean_a319
            have lean_s1530 : let935 := by timed And.intro lean_s1525 lean_s1529
            have lean_s1531 : let936 := by arithMulPos [let19, let28, let211], 4
            have lean_s1532 : let933 := by timed modusPonens lean_s1530 lean_s1531
            have lean_s1533 : let698 := by timed trueElim lean_r263
            have lean_s1534 : let931 := by timed And.intro lean_s1533 lean_a318
            have lean_s1535 : let932 := by arithMulNeg [let21, let16, let688], 3
            have lean_s1536 : let930 := by timed modusPonens lean_s1534 lean_s1535
            have lean_s1537 : let929 := by sumBounds [lean_s1528, lean_s1532, lean_s1536]
            let lean_s1538 := by timed congrHAdd lean_r193 lean_r261
            have lean_s1539 : (Eq let928 let695) := by timed congrHAdd lean_r262 lean_s1538
            have lean_s1540 : (Eq let928 let10) := by timed Eq.trans lean_s1539 lean_r260
            let lean_s1541 := by timed flipCongrArg lean_s1540 [LE.le]
            let lean_s1542 := by timed congrHAdd lean_r258 lean_r256
            have lean_s1543 : (Eq let927 let687) := by timed congrHAdd lean_r258 lean_s1542
            have lean_s1544 : (Eq let927 let9) := by timed Eq.trans lean_s1543 lean_r255
            have lean_s1545 : (Eq let929 let499) := by timed congr lean_s1541 lean_s1544
            have lean_s1546 : (Eq let929 False) := by timed Eq.trans lean_s1545 lean_r169
            show False from by timed eqResolve lean_s1537 lean_s1546
          ))
        have lean_s1526 : let924 := by liftOrNToNeg lean_s1525
        show False from by timed contradiction lean_s1524 lean_s1526
  ))))))
have lean_s1525 : (Not let918) := by liftOrNToNeg lean_s1524
have lean_s1526 : let920 := by timed falseIntro lean_s1525
have lean_s1527 : (Eq let1069 let163) := by timed congr lean_s1523 lean_s1526
have lean_s1528 : (Eq let1069 let162) := by timed Eq.trans lean_s1527 lean_r36
have lean_s1529 : let162 := by timed eqResolve lean_s1521 lean_s1528
have lean_s1530 : (Or let888 let1068) := by timed flipNotAnd lean_s1529 [let59, let38, let36, let33, let30, let26, let22, let15]
have lean_s1531 : (Or let250 (Or let888 let1064)) := by permutateOr lean_s1530, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1532 := by R1 lean_s1519, lean_s1531, let33, [(- 1), (- 1)]
have lean_s1533 : (Or let888 (Or let967 (Or let909 (Or let963 (Or let1043 (Or let293 let1062)))))) := by R2 lean_s1532, lean_s1360, let22, [(- 1), 0]
have lean_s1534 : let1062 := by factor lean_s1533, (- 1)
have lean_s1535 : (Or let1037 (Or let720 (Or let294 let1033))) := by timed cnfAndNeg [let417, let293, let955]
have lean_s1536 : let1036 :=
  (scope (fun lean_a318 : let417 =>
    (scope (fun lean_a319 : let293 =>
      (scope (fun lean_a320 : let955 =>
        let lean_s1536 := by timed And.intro lean_a318 lean_a319
        have lean_s1537 : let1039 := by timed And.intro lean_a320 lean_s1536
        have lean_s1538 : (Or let1033 (Or let720 (Or let294 let1038))) :=
          (scope (fun lean_a321 : let955 =>
            (scope (fun lean_a322 : let417 =>
              (scope (fun lean_a323 : let293 =>
                have lean_s1538 : (Eq let417 let723) := by timed Eq.symm lean_r276
                have lean_s1539 : let723 := by timed eqResolve lean_a322 lean_s1538
                have lean_s1540 : (binrel% LE.le fmt1 let14) := by intTightUb lean_s1539
                have lean_s1541 : (binrel% LT.lt fmt1 let14) := by trichotomy lean_s1540, lean_a323
                have lean_s1542 : (binrel% LE.le fmt1 let74) := by intTightUb lean_s1541
                have lean_s1543 : let75 := by trichotomy lean_a321, lean_s1542
                have lean_s1544 : let1038 := by timed Eq.symm lean_s1543
                show let1038 from lean_s1544
          ))))))
        have lean_s1539 : (Implies let1039 let1038) := by liftOrNToImp lean_s1538, 3
        have lean_s1540 : let1038 := by timed modusPonens lean_s1537 lean_s1539
        have lean_s1541 : (Or (Not let1038) let75) :=
          (scope (fun lean_a321 : let1038 =>
            have lean_s1541 : let75 := by timed Eq.symm lean_a321
            show let75 from lean_s1541
          ))
        have lean_s1542 : (Implies let1038 let75) := by liftOrNToImp lean_s1541, 1
        have lean_s1543 : let75 := by timed modusPonens lean_s1540 lean_s1542
        show let75 from lean_s1543
  ))))))
have lean_s1537 : (Implies let1037 let75) := by liftOrNToImp lean_s1536, 3
have lean_s1538 : (Or (Not let1037) let75) := by timed impliesElim lean_s1537
have lean_s1539 : let1036 := by R1 lean_s1535, lean_s1538, let1037, [(- 1), (- 1)]
have lean_s1540 : let837 := by timed rfl
have lean_s1541 : let715 := by timed rfl
let lean_s1542 := by timed flipCongrArg lean_s1541 [Eq]
have lean_s1543 : (Eq let722 let715) := by timed congr lean_s1542 lean_r274
have lean_s1544 : (Eq let722 True) := by timed Eq.trans lean_s1543 lean_r272
have lean_s1545 : (Eq let721 True) := by timed Eq.trans lean_r275 lean_s1544
have lean_s1546 : let721 := by timed trueElim lean_s1545
let lean_s1547 := by timed congr lean_s1540 lean_s1546
have lean_s1548 : let563 := by timed rfl
let lean_s1549 := by timed flipCongrArg lean_s1548 [Eq]
have lean_s1550 : (Eq let578 let563) := by timed congr lean_s1549 lean_r93
have lean_s1551 : (Eq let578 True) := by timed Eq.trans lean_s1550 lean_r207
have lean_s1552 : (Eq let295 True) := by timed Eq.trans lean_r217 lean_s1551
have lean_s1553 : let295 := by timed trueElim lean_s1552
let lean_s1554 := by timed congr lean_s1540 lean_s1553
have lean_s1555 : (Eq let1033 let1033) := by timed rfl
let lean_s1556 := by timed congr lean_s1540 lean_s1555
have lean_s1557 : (Eq let75 let75) := by timed rfl
let lean_s1558 := by timed congr lean_s1556 lean_s1557
let lean_s1559 := by timed congr lean_s1554 lean_s1558
have lean_s1560 : (Eq let1036 let1035) := by timed congr lean_s1547 lean_s1559
have lean_s1561 : let1035 := by timed eqResolve lean_s1539 lean_s1560
have lean_s1562 : (Or let416 (Or let75 (Or let15 let1033))) := by permutateOr lean_s1561, [0, 3, 1, 2], (- 1)
let lean_s1563 := by R2 lean_s1534, lean_s1562, let15, [(- 1), (- 1)]
have lean_s1564 : let417 := by andElim lean_s1342, 1
let lean_s1565 := by R1 lean_s1563, lean_s1564, let416, [(- 1), 0]
have lean_s1566 : (Or let959 (Or let956 let447)) := by timed cnfAndNeg [let415, let446]
have lean_s1567 : let958 :=
  (scope (fun lean_a322 : let415 =>
    (scope (fun lean_a323 : let446 =>
      have lean_s1567 : let959 := by timed And.intro lean_a322 lean_a323
      have lean_s1568 : let958 :=
        (scope (fun lean_a324 : let415 =>
          (scope (fun lean_a325 : let446 =>
            have lean_s1568 : (binrel% GT.gt fmt1 let1) := by trichotomy lean_a324, lean_a325
            have lean_s1569 : let955 := by intTightLb lean_s1568
            show let955 from lean_s1569
        ))))
      have lean_s1569 : let960 := by liftOrNToImp lean_s1568, 2
      have lean_s1570 : let955 := by timed modusPonens lean_s1567 lean_s1569
      show let955 from lean_s1570
  ))))
have lean_s1568 : let960 := by liftOrNToImp lean_s1567, 2
have lean_s1569 : (Or (Not let959) let955) := by timed impliesElim lean_s1568
have lean_s1570 : let958 := by R1 lean_s1566, lean_s1569, let959, [(- 1), (- 1)]
have lean_s1571 : let837 := by timed rfl
have lean_s1572 : (Eq let956 let956) := by timed rfl
let lean_s1573 := by timed congr lean_s1571 lean_s1572
have lean_s1574 : let699 := by timed rfl
let lean_s1575 := by timed flipCongrArg lean_s1574 [Eq]
have lean_s1576 : (Eq let448 let699) := by timed congr lean_s1575 lean_r141
have lean_s1577 : (Eq let448 True) := by timed Eq.trans lean_s1576 lean_r264
have lean_s1578 : (Eq let449 True) := by timed Eq.trans lean_r131 lean_s1577
have lean_s1579 : let449 := by timed trueElim lean_s1578
let lean_s1580 := by timed congr lean_s1571 lean_s1579
have lean_s1581 : (Eq let955 let955) := by timed rfl
let lean_s1582 := by timed congr lean_s1580 lean_s1581
have lean_s1583 : (Eq let958 let957) := by timed congr lean_s1573 lean_s1582
have lean_s1584 : let957 := by timed eqResolve lean_s1570 lean_s1583
have lean_s1585 : (Or let51 (Or let956 let955)) := by permutateOr lean_s1584, [1, 0, 2], (- 1)
let lean_s1586 := by R2 lean_s1565, lean_s1585, let955, [(- 1), (- 1)]
have lean_s1587 : let415 := by andElim lean_s1342, 2
let lean_s1588 := by R2 lean_s1586, lean_s1587, let415, [(- 1), 0]
have lean_s1589 : (Or let888 (Or let909 (Or let250 (Or let446 let918)))) :=
  (scope (fun lean_a324 : let59 =>
    (scope (fun lean_a325 : let38 =>
      (scope (fun lean_a326 : let22 =>
        (scope (fun lean_a327 : let51 =>
          have lean_s1589 : let948 := by timed Eq.symm lean_r30
          have lean_s1590 : let134 := by timed eqResolve lean_a327 lean_s1589
          have lean_s1591 : let949 := by timed And.intro lean_s1590 lean_a325
          have lean_s1592 : let952 :=
            (scope (fun lean_a325 : let134 =>
              (scope (fun lean_a326 : let38 =>
                have lean_s1592 : let954 := by timed Eq.symm lean_a326
                have lean_s1593 : let946 := by timed Eq.symm lean_a325
                have lean_s1594 : let134 := by timed Eq.symm lean_s1593
                have lean_s1595 : let953 := by timed flipCongrArg lean_s1594 [xx5fcount]
                have lean_s1596 : let917 := by timed Eq.trans lean_s1592 lean_s1595
                show let917 from lean_s1596
            ))))
          have lean_s1593 : let950 := by liftOrNToImp lean_s1592, 2
          have lean_s1594 : let917 := by timed modusPonens lean_s1591 lean_s1593
          have lean_s1595 : let940 := by timed And.intro lean_s1590 lean_a324
          have lean_s1596 : let944 :=
            (scope (fun lean_a326 : let134 =>
              (scope (fun lean_a327 : let59 =>
                have lean_s1596 : let947 := by timed Eq.symm lean_a327
                have lean_s1597 : let946 := by timed Eq.symm lean_a326
                have lean_s1598 : let134 := by timed Eq.symm lean_s1597
                have lean_s1599 : let945 := by timed flipCongrArg lean_s1598 [sx5fcount]
                have lean_s1600 : let916 := by timed Eq.trans lean_s1596 lean_s1599
                show let916 from lean_s1600
            ))))
          have lean_s1597 : let941 := by liftOrNToImp lean_s1596, 2
          have lean_s1598 : let916 := by timed modusPonens lean_s1595 lean_s1597
          let lean_s1599 := by timed And.intro lean_s1594 lean_s1598
          have lean_s1600 : let918 := by timed And.intro lean_a326 lean_s1599
          show let918 from lean_s1600
  ))))))))
have lean_s1590 : let919 := by liftOrNToImp lean_s1589, 4
have lean_s1591 : (Eq let281 let281) := by timed rfl
let lean_s1592 := by timed flipCongrArg lean_s1591 [Implies]
have lean_s1593 : let920 := by timed falseIntro lean_s1525
have lean_s1594 : (Eq let919 let283) := by timed congr lean_s1592 lean_s1593
have lean_s1595 : (Eq let919 let282) := by timed Eq.trans lean_s1594 lean_r88
have lean_s1596 : let282 := by timed eqResolve lean_s1590 lean_s1595
have lean_s1597 : (Or let888 let915) := by timed flipNotAnd lean_s1596 [let59, let38, let22, let51]
have lean_s1598 : (Or let250 (Or let888 let913)) := by permutateOr lean_s1597, [2, 0, 1, 3], (- 1)
let lean_s1599 := by R1 lean_s1588, lean_s1598, let51, [(- 1), (- 1)]
let lean_s1600 := by R2 lean_s1599, lean_s1360, let22, [(- 1), 0]
have lean_s1601 : (Or let888 (Or let909 (Or let967 (Or let1011 let1024)))) :=
  (scope (fun lean_a326 : let59 =>
    (scope (fun lean_a327 : let38 =>
      (scope (fun lean_a328 : let36 =>
        (scope (fun lean_a329 : let367 =>
          (scope (fun lean_a330 : let22 =>
            (scope (fun lean_a331 : let75 =>
              have lean_s1601 : let982 := by timed Eq.symm lean_r222
              have lean_s1602 : let586 := by timed eqResolve lean_a331 lean_s1601
              have lean_s1603 : let1030 := by timed And.intro lean_a329 lean_a327
              have lean_s1604 : let1032 :=
                (scope (fun lean_a328 : let367 =>
                  (scope (fun lean_a329 : let38 =>
                    have lean_s1604 : let954 := by timed Eq.symm lean_a329
                    have lean_s1605 : (Eq let366 let29) := by timed Eq.symm lean_a328
                    have lean_s1606 : let367 := by timed Eq.symm lean_s1605
                    have lean_s1607 : let553 := by timed Eq.trans lean_s1604 lean_s1606
                    show let553 from lean_s1607
                ))))
              have lean_s1605 : let1031 := by liftOrNToImp lean_s1604, 2
              have lean_s1606 : let553 := by timed modusPonens lean_s1603 lean_s1605
              have lean_s1607 : let1029 :=
                (scope (fun lean_a328 : let553 =>
                  have lean_s1607 : let552 := by timed eqResolve lean_a328 lean_r201
                  have lean_s1608 : let1025 := by timed Eq.symm lean_s1607
                  show let1025 from lean_s1608
                ))
              have lean_s1608 : let1028 := by liftOrNToImp lean_s1607, 1
              have lean_s1609 : let1025 := by timed modusPonens lean_s1606 lean_s1608
              have lean_s1610 : let1026 := by timed And.intro lean_s1602 lean_s1609
              have lean_s1611 : (Or let978 let1027) :=
                (scope (fun lean_a329 : let586 =>
                  (scope (fun lean_a330 : let1025 =>
                    have lean_s1611 : let552 := by timed Eq.symm lean_a330
                    have lean_s1612 : let1025 := by timed Eq.symm lean_s1611
                    have lean_s1613 : let981 := by timed Eq.symm lean_a329
                    have lean_s1614 : let586 := by timed Eq.symm lean_s1613
                    have lean_s1615 : let988 := by timed flipCongrArg lean_s1614 [xx5fcount]
                    have lean_s1616 : let1012 := by timed Eq.trans lean_s1612 lean_s1615
                    show let1012 from lean_s1616
                ))))
              have lean_s1612 : (Implies let1026 let1012) := by liftOrNToImp lean_s1611, 2
              have lean_s1613 : let1012 := by timed modusPonens lean_s1610 lean_s1612
              let lean_s1614 := by timed And.intro lean_a328 lean_a326
              have lean_s1615 : let975 := by timed And.intro lean_s1602 lean_s1614
              have lean_s1616 : let979 :=
                (scope (fun lean_a331 : let586 =>
                  (scope (fun lean_a332 : let36 =>
                    (scope (fun lean_a333 : let59 =>
                      have lean_s1616 : let947 := by timed Eq.symm lean_a333
                      have lean_s1617 : let127 := by timed Eq.symm lean_a332
                      have lean_s1618 : let36 := by timed Eq.symm lean_s1617
                      let lean_s1619 := by timed Eq.trans lean_s1616 lean_s1618
                      have lean_s1620 : let981 := by timed Eq.symm lean_a331
                      have lean_s1621 : let586 := by timed Eq.symm lean_s1620
                      have lean_s1622 : let980 := by timed flipCongrArg lean_s1621 [sx5fcount]
                      have lean_s1623 : let916 := by timed Eq.trans lean_s1619 lean_s1622
                      show let916 from lean_s1623
                ))))))
              have lean_s1617 : let976 := by liftOrNToImp lean_s1616, 3
              have lean_s1618 : let916 := by timed modusPonens lean_s1615 lean_s1617
              let lean_s1619 := by timed And.intro lean_s1613 lean_s1618
              have lean_s1620 : let1013 := by timed And.intro lean_a330 lean_s1619
              show let1013 from lean_s1620
  ))))))))))))
have lean_s1602 : let1014 := by liftOrNToImp lean_s1601, 6
have lean_s1603 : (Eq let710 let710) := by timed rfl
let lean_s1604 := by timed flipCongrArg lean_s1603 [Implies]
have lean_s1605 : let1015 := by timed falseIntro lean_s1420
have lean_s1606 : (Eq let1014 let712) := by timed congr lean_s1604 lean_s1605
have lean_s1607 : (Eq let1014 let711) := by timed Eq.trans lean_s1606 lean_r270
have lean_s1608 : let711 := by timed eqResolve lean_s1602 lean_s1607
have lean_s1609 : (Or let888 (Or let909 (Or let967 (Or let1011 let969)))) := by timed flipNotAnd lean_s1608 [let59, let38, let36, let367, let22, let75]
have lean_s1610 : (Or let250 (Or let888 (Or let967 (Or let909 (Or let1011 let961))))) := by permutateOr lean_s1609, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1611 := by R2 lean_s1610, lean_s1360, let22, [(- 1), 0]
let lean_s1612 := by R2 lean_s1611, lean_s1487, let36, [(- 1), (- 1)]
let lean_s1613 := by R1 lean_s1612, lean_s1483, let391, [(- 1), (- 1)]
let lean_s1614 := by R1 lean_s1613, lean_s1475, let390, [(- 1), (- 1)]
have lean_s1615 : (Or let904 let367) := by timed iteElim1 lean_s1430
have lean_s1616 : (Or let367 let904) := by permutateOr lean_s1615, [1, 0], (- 1)
let lean_s1617 := by R2 lean_s1614, lean_s1616, let367, [(- 1), (- 1)]
have lean_s1618 : (Or let888 (Or let909 (Or let961 (Or let904 let904)))) := by R2 lean_s1617, lean_s1464, let368, [(- 1), (- 1)]
have lean_s1619 : (Or let888 (Or let909 (Or let961 let904))) := by factor lean_s1618, (- 1)
let lean_s1620 := by R2 lean_s1619, lean_s1432, let369, [(- 1), (- 1)]
have lean_s1621 : (Or let888 (Or let909 (Or let902 let1002))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let38 =>
      (scope (fun lean_a333 : let239 =>
        (scope (fun lean_a334 : let30 =>
          (scope (fun lean_a335 : let22 =>
            (scope (fun lean_a336 : let75 =>
              have lean_s1621 : let982 := by timed Eq.symm lean_r222
              have lean_s1622 : let586 := by timed eqResolve lean_a336 lean_s1621
              let lean_s1623 := by timed And.intro lean_a334 lean_a332
              have lean_s1624 : let984 := by timed And.intro lean_s1622 lean_s1623
              have lean_s1625 : let987 :=
                (scope (fun lean_a331 : let586 =>
                  (scope (fun lean_a332 : let30 =>
                    (scope (fun lean_a333 : let38 =>
                      have lean_s1625 : let954 := by timed Eq.symm lean_a333
                      have lean_s1626 : let522 := by timed Eq.symm lean_a332
                      have lean_s1627 : let30 := by timed Eq.symm lean_s1626
                      let lean_s1628 := by timed Eq.trans lean_s1625 lean_s1627
                      have lean_s1629 : let981 := by timed Eq.symm lean_a331
                      have lean_s1630 : let586 := by timed Eq.symm lean_s1629
                      have lean_s1631 : let988 := by timed flipCongrArg lean_s1630 [xx5fcount]
                      have lean_s1632 : let917 := by timed Eq.trans lean_s1628 lean_s1631
                      show let917 from lean_s1632
                ))))))
              have lean_s1626 : let985 := by liftOrNToImp lean_s1625, 3
              have lean_s1627 : let917 := by timed modusPonens lean_s1624 lean_s1626
              have lean_s1628 : let1008 := by timed And.intro lean_a333 lean_a331
              have lean_s1629 : let1010 :=
                (scope (fun lean_a331 : let239 =>
                  (scope (fun lean_a332 : let59 =>
                    have lean_s1629 : let947 := by timed Eq.symm lean_a332
                    have lean_s1630 : (Eq let238 let35) := by timed Eq.symm lean_a331
                    have lean_s1631 : let239 := by timed Eq.symm lean_s1630
                    have lean_s1632 : let709 := by timed Eq.trans lean_s1629 lean_s1631
                    show let709 from lean_s1632
                ))))
              have lean_s1630 : let1009 := by liftOrNToImp lean_s1629, 2
              have lean_s1631 : let709 := by timed modusPonens lean_s1628 lean_s1630
              have lean_s1632 : let1007 :=
                (scope (fun lean_a331 : let709 =>
                  have lean_s1632 : let708 := by timed eqResolve lean_a331 lean_r269
                  have lean_s1633 : let1003 := by timed Eq.symm lean_s1632
                  show let1003 from lean_s1633
                ))
              have lean_s1633 : let1006 := by liftOrNToImp lean_s1632, 1
              have lean_s1634 : let1003 := by timed modusPonens lean_s1631 lean_s1633
              have lean_s1635 : let1004 := by timed And.intro lean_s1622 lean_s1634
              have lean_s1636 : (Or let978 let1005) :=
                (scope (fun lean_a331 : let586 =>
                  (scope (fun lean_a332 : let1003 =>
                    have lean_s1636 : let708 := by timed Eq.symm lean_a332
                    have lean_s1637 : let1003 := by timed Eq.symm lean_s1636
                    have lean_s1638 : let981 := by timed Eq.symm lean_a331
                    have lean_s1639 : let586 := by timed Eq.symm lean_s1638
                    have lean_s1640 : let980 := by timed flipCongrArg lean_s1639 [sx5fcount]
                    have lean_s1641 : let989 := by timed Eq.trans lean_s1637 lean_s1640
                    show let989 from lean_s1641
                ))))
              have lean_s1637 : (Implies let1004 let989) := by liftOrNToImp lean_s1636, 2
              have lean_s1638 : let989 := by timed modusPonens lean_s1635 lean_s1637
              let lean_s1639 := by timed And.intro lean_s1627 lean_s1638
              have lean_s1640 : let990 := by timed And.intro lean_a335 lean_s1639
              show let990 from lean_s1640
  ))))))))))))
have lean_s1622 : let991 := by liftOrNToImp lean_s1621, 6
have lean_s1623 : (Eq let704 let704) := by timed rfl
let lean_s1624 := by timed flipCongrArg lean_s1623 [Implies]
have lean_s1625 : let992 := by timed falseIntro lean_s1353
have lean_s1626 : (Eq let991 let706) := by timed congr lean_s1624 lean_s1625
have lean_s1627 : (Eq let991 let705) := by timed Eq.trans lean_s1626 lean_r267
have lean_s1628 : let705 := by timed eqResolve lean_s1622 lean_s1627
have lean_s1629 : (Or let888 (Or let909 (Or let902 let970))) := by timed flipNotAnd lean_s1628 [let59, let38, let239, let30, let22, let75]
have lean_s1630 : (Or let250 (Or let888 (Or let902 let965))) := by permutateOr lean_s1629, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1631 := by R2 lean_s1630, lean_s1360, let22, [(- 1), 0]
let lean_s1632 := by R2 lean_s1631, lean_s1479, let239, [(- 1), (- 1)]
let lean_s1633 := by R2 lean_s1632, lean_s1487, let391, [(- 1), (- 1)]
have lean_s1634 : (Or let888 (Or let909 (Or let967 (Or let963 (Or let250 (Or let961 let918)))))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let38 =>
      (scope (fun lean_a333 : let36 =>
        (scope (fun lean_a334 : let30 =>
          (scope (fun lean_a335 : let22 =>
            (scope (fun lean_a336 : let75 =>
              have lean_s1634 : let982 := by timed Eq.symm lean_r222
              have lean_s1635 : let586 := by timed eqResolve lean_a336 lean_s1634
              let lean_s1636 := by timed And.intro lean_a334 lean_a332
              have lean_s1637 : let984 := by timed And.intro lean_s1635 lean_s1636
              have lean_s1638 : let987 :=
                (scope (fun lean_a331 : let586 =>
                  (scope (fun lean_a332 : let30 =>
                    (scope (fun lean_a333 : let38 =>
                      have lean_s1638 : let954 := by timed Eq.symm lean_a333
                      have lean_s1639 : let522 := by timed Eq.symm lean_a332
                      have lean_s1640 : let30 := by timed Eq.symm lean_s1639
                      let lean_s1641 := by timed Eq.trans lean_s1638 lean_s1640
                      have lean_s1642 : let981 := by timed Eq.symm lean_a331
                      have lean_s1643 : let586 := by timed Eq.symm lean_s1642
                      have lean_s1644 : let988 := by timed flipCongrArg lean_s1643 [xx5fcount]
                      have lean_s1645 : let917 := by timed Eq.trans lean_s1641 lean_s1644
                      show let917 from lean_s1645
                ))))))
              have lean_s1639 : let985 := by liftOrNToImp lean_s1638, 3
              have lean_s1640 : let917 := by timed modusPonens lean_s1637 lean_s1639
              let lean_s1641 := by timed And.intro lean_a333 lean_a331
              have lean_s1642 : let975 := by timed And.intro lean_s1635 lean_s1641
              have lean_s1643 : let979 :=
                (scope (fun lean_a331 : let586 =>
                  (scope (fun lean_a332 : let36 =>
                    (scope (fun lean_a333 : let59 =>
                      have lean_s1643 : let947 := by timed Eq.symm lean_a333
                      have lean_s1644 : let127 := by timed Eq.symm lean_a332
                      have lean_s1645 : let36 := by timed Eq.symm lean_s1644
                      let lean_s1646 := by timed Eq.trans lean_s1643 lean_s1645
                      have lean_s1647 : let981 := by timed Eq.symm lean_a331
                      have lean_s1648 : let586 := by timed Eq.symm lean_s1647
                      have lean_s1649 : let980 := by timed flipCongrArg lean_s1648 [sx5fcount]
                      have lean_s1650 : let916 := by timed Eq.trans lean_s1646 lean_s1649
                      show let916 from lean_s1650
                ))))))
              have lean_s1644 : let976 := by liftOrNToImp lean_s1643, 3
              have lean_s1645 : let916 := by timed modusPonens lean_s1642 lean_s1644
              let lean_s1646 := by timed And.intro lean_s1640 lean_s1645
              have lean_s1647 : let918 := by timed And.intro lean_a335 lean_s1646
              show let918 from lean_s1647
  ))))))))))))
have lean_s1635 : let973 := by liftOrNToImp lean_s1634, 6
have lean_s1636 : (Eq let701 let701) := by timed rfl
let lean_s1637 := by timed flipCongrArg lean_s1636 [Implies]
have lean_s1638 : let920 := by timed falseIntro lean_s1525
have lean_s1639 : (Eq let973 let703) := by timed congr lean_s1637 lean_s1638
have lean_s1640 : (Eq let973 let702) := by timed Eq.trans lean_s1639 lean_r266
have lean_s1641 : let702 := by timed eqResolve lean_s1635 lean_s1640
have lean_s1642 : (Or let888 let972) := by timed flipNotAnd lean_s1641 [let59, let38, let36, let30, let22, let75]
have lean_s1643 : (Or let250 (Or let888 let968)) := by permutateOr lean_s1642, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1644 := by R1 lean_s1633, lean_s1643, let36, [(- 1), (- 1)]
have lean_s1645 : (Or let888 (Or let909 (Or let963 (Or let961 let966)))) := by R2 lean_s1644, lean_s1360, let22, [(- 1), 0]
have lean_s1646 : let966 := by factor lean_s1645, (- 1)
have lean_s1647 : (Or let888 (Or let909 (Or let961 let962))) := by R1 lean_s1620, lean_s1646, let30, [(- 1), (- 1)]
have lean_s1648 : let962 := by factor lean_s1647, (- 1)
let lean_s1649 := by R1 lean_s1600, lean_s1648, let75, [(- 1), (- 1)]
let lean_s1650 := by R2 lean_s1649, lean_s1432, let30, [(- 1), (- 1)]
have lean_s1651 : (Or let888 (Or let909 (Or let967 (Or let1045 (Or let1011 let1050))))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let38 =>
      (scope (fun lean_a333 : let36 =>
        (scope (fun lean_a334 : let33 =>
          (scope (fun lean_a335 : let367 =>
            (scope (fun lean_a336 : let26 =>
              (scope (fun lean_a337 : let22 =>
                (scope (fun lean_a338 : let15 =>
                  have lean_s1651 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1652 : let460 := by timed eqResolve lean_a338 lean_s1651
                  have lean_s1653 : let1030 := by timed And.intro lean_a335 lean_a332
                  have lean_s1654 : let1032 :=
                    (scope (fun lean_a331 : let367 =>
                      (scope (fun lean_a332 : let38 =>
                        have lean_s1654 : let954 := by timed Eq.symm lean_a332
                        have lean_s1655 : (Eq let366 let29) := by timed Eq.symm lean_a331
                        have lean_s1656 : let367 := by timed Eq.symm lean_s1655
                        have lean_s1657 : let553 := by timed Eq.trans lean_s1654 lean_s1656
                        show let553 from lean_s1657
                    ))))
                  have lean_s1655 : let1031 := by liftOrNToImp lean_s1654, 2
                  have lean_s1656 : let553 := by timed modusPonens lean_s1653 lean_s1655
                  have lean_s1657 : let1029 :=
                    (scope (fun lean_a331 : let553 =>
                      have lean_s1657 : let552 := by timed eqResolve lean_a331 lean_r201
                      have lean_s1658 : let1025 := by timed Eq.symm lean_s1657
                      show let1025 from lean_s1658
                    ))
                  have lean_s1658 : let1028 := by liftOrNToImp lean_s1657, 1
                  have lean_s1659 : let1025 := by timed modusPonens lean_s1656 lean_s1658
                  let lean_s1660 := by timed And.intro lean_a336 lean_s1659
                  have lean_s1661 : let1058 := by timed And.intro lean_s1652 lean_s1660
                  have lean_s1662 : (Or let1053 (Or let1043 let1027)) :=
                    (scope (fun lean_a331 : let460 =>
                      (scope (fun lean_a332 : let26 =>
                        (scope (fun lean_a333 : let1025 =>
                          have lean_s1662 : let552 := by timed Eq.symm lean_a333
                          have lean_s1663 : let1025 := by timed Eq.symm lean_s1662
                          have lean_s1664 : let307 := by timed Eq.symm lean_a332
                          have lean_s1665 : let26 := by timed Eq.symm lean_s1664
                          let lean_s1666 := by timed Eq.trans lean_s1663 lean_s1665
                          have lean_s1667 : let1056 := by timed Eq.symm lean_a331
                          have lean_s1668 : let460 := by timed Eq.symm lean_s1667
                          have lean_s1669 : let1059 := by timed flipCongrArg lean_s1668 [xx5fcount]
                          have lean_s1670 : let1012 := by timed Eq.trans lean_s1666 lean_s1669
                          show let1012 from lean_s1670
                    ))))))
                  have lean_s1663 : (Implies let1058 let1012) := by liftOrNToImp lean_s1662, 3
                  have lean_s1664 : let1012 := by timed modusPonens lean_s1661 lean_s1663
                  let lean_s1665 := by timed And.intro lean_a333 lean_a331
                  let lean_s1666 := by timed And.intro lean_a334 lean_s1665
                  have lean_s1667 : let1051 := by timed And.intro lean_s1652 lean_s1666
                  have lean_s1668 : let1054 :=
                    (scope (fun lean_a331 : let460 =>
                      (scope (fun lean_a332 : let33 =>
                        (scope (fun lean_a333 : let36 =>
                          (scope (fun lean_a334 : let59 =>
                            have lean_s1668 : let947 := by timed Eq.symm lean_a334
                            have lean_s1669 : let127 := by timed Eq.symm lean_a333
                            have lean_s1670 : let36 := by timed Eq.symm lean_s1669
                            let lean_s1671 := by timed Eq.trans lean_s1668 lean_s1670
                            have lean_s1672 : let224 := by timed Eq.symm lean_a332
                            have lean_s1673 : let33 := by timed Eq.symm lean_s1672
                            let lean_s1674 := by timed Eq.trans lean_s1671 lean_s1673
                            have lean_s1675 : let1056 := by timed Eq.symm lean_a331
                            have lean_s1676 : let460 := by timed Eq.symm lean_s1675
                            have lean_s1677 : let1055 := by timed flipCongrArg lean_s1676 [sx5fcount]
                            have lean_s1678 : let916 := by timed Eq.trans lean_s1674 lean_s1677
                            show let916 from lean_s1678
                    ))))))))
                  have lean_s1669 : let1052 := by liftOrNToImp lean_s1668, 4
                  have lean_s1670 : let916 := by timed modusPonens lean_s1667 lean_s1669
                  let lean_s1671 := by timed And.intro lean_s1664 lean_s1670
                  have lean_s1672 : let1013 := by timed And.intro lean_a337 lean_s1671
                  show let1013 from lean_s1672
  ))))))))))))))))
have lean_s1652 : let1048 := by liftOrNToImp lean_s1651, 8
have lean_s1653 : (Eq let724 let724) := by timed rfl
let lean_s1654 := by timed flipCongrArg lean_s1653 [Implies]
have lean_s1655 : let1015 := by timed falseIntro lean_s1420
have lean_s1656 : (Eq let1048 let726) := by timed congr lean_s1654 lean_s1655
have lean_s1657 : (Eq let1048 let725) := by timed Eq.trans lean_s1656 lean_r277
have lean_s1658 : let725 := by timed eqResolve lean_s1652 lean_s1657
have lean_s1659 : (Or let888 (Or let909 (Or let967 (Or let1045 (Or let1011 let1047))))) := by timed flipNotAnd lean_s1658 [let59, let38, let36, let33, let367, let26, let22, let15]
have lean_s1660 : (Or let250 (Or let888 (Or let967 (Or let1045 (Or let909 (Or let1011 let1044)))))) := by permutateOr lean_s1659, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1661 := by R2 lean_s1660, lean_s1360, let22, [(- 1), 0]
let lean_s1662 := by R2 lean_s1661, lean_s1398, let26, [(- 1), (- 1)]
let lean_s1663 := by R2 lean_s1662, lean_s1347, let33, [(- 1), (- 1)]
let lean_s1664 := by R1 lean_s1663, lean_s1457, let364, [(- 1), (- 1)]
have lean_s1665 : (Or let888 (Or let967 (Or let909 (Or let1011 (Or let293 (Or let363 let363)))))) := by R1 lean_s1664, lean_s1460, let388, [(- 1), (- 1)]
have lean_s1666 : (Or let888 (Or let967 (Or let909 (Or let1011 (Or let293 let363))))) := by factor lean_s1665, (- 1)
have lean_s1667 : let1041 :=
  (scope (fun lean_a331 : let368 =>
    have lean_s1667 : let1041 :=
      (scope (fun lean_a331 : let368 =>
        have lean_s1667 : let495 := by timed Eq.symm lean_a331
        have lean_s1668 : let368 := by timed Eq.symm lean_s1667
        let lean_s1669 := by timed flipCongrArg lean_s1668 [Eq]
        have lean_s1670 : let258 := by timed rfl
        have lean_s1671 : (Eq let363 let189) := by timed congr lean_s1669 lean_s1670
        have lean_s1672 : (Eq let190 let560) := by timed flipCongrArg lean_r190 [Not]
        have lean_s1673 : (Eq let190 True) := by timed Eq.trans lean_s1672 lean_r205
        have lean_s1674 : (Eq let191 True) := by timed Eq.trans lean_r45 lean_s1673
        have lean_s1675 : let191 := by timed trueElim lean_s1674
        have lean_s1676 : let899 := by timed Eq.trans lean_s1671 lean_s1675
        have lean_s1677 : let896 := by timed falseElim lean_s1676
        show let896 from lean_s1677
      ))
    have lean_s1668 : let1042 := by liftOrNToImp lean_s1667, 1
    have lean_s1669 : let896 := by timed modusPonens lean_a331 lean_s1668
    show let896 from lean_s1669
  ))
have lean_s1668 : let1042 := by liftOrNToImp lean_s1667, 1
have lean_s1669 : let1041 := by timed impliesElim lean_s1668
have lean_s1670 : (Or let896 let893) := by permutateOr lean_s1669, [1, 0], (- 1)
let lean_s1671 := by R1 lean_s1666, lean_s1670, let363, [(- 1), (- 1)]
let lean_s1672 := by R2 lean_s1671, lean_s1616, let367, [(- 1), (- 1)]
let lean_s1673 := by R2 lean_s1672, lean_s1464, let368, [(- 1), (- 1)]
let lean_s1674 := by R2 lean_s1673, lean_s1562, let15, [(- 1), (- 1)]
let lean_s1675 := by R1 lean_s1674, lean_s1564, let416, [(- 1), 0]
let lean_s1676 := by R2 lean_s1675, lean_s1585, let955, [(- 1), (- 1)]
let lean_s1677 := by R2 lean_s1676, lean_s1587, let415, [(- 1), 0]
let lean_s1678 := by R1 lean_s1677, lean_s1598, let51, [(- 1), (- 1)]
let lean_s1679 := by R2 lean_s1678, lean_s1360, let22, [(- 1), 0]
have lean_s1680 : (Or let888 (Or let967 (Or let909 (Or let904 (Or let904 let911))))) := by R1 lean_s1679, lean_s1648, let75, [(- 1), (- 1)]
have lean_s1681 : (Or let888 (Or let967 (Or let909 let904))) := by factor lean_s1680, 8
have lean_s1682 : (Or let888 (Or let967 (Or let909 (Or let1043 (Or let888 (Or let909 (Or let888 (Or let909 let1040)))))))) := by R1 lean_s1650, lean_s1681, let369, [(- 1), (- 1)]
have lean_s1683 : (Or let888 (Or let967 (Or let909 let1043))) := by factor lean_s1682, 10
let lean_s1684 := by R1 lean_s1506, lean_s1683, let26, [(- 1), (- 1)]
let lean_s1685 := by R2 lean_s1684, lean_s1432, let30, [(- 1), (- 1)]
let lean_s1686 := by R1 lean_s1685, lean_s1681, let369, [(- 1), (- 1)]
let lean_s1687 := by R2 lean_s1686, lean_s1562, let15, [(- 1), (- 1)]
let lean_s1688 := by R1 lean_s1687, lean_s1564, let416, [(- 1), 0]
let lean_s1689 := by R2 lean_s1688, lean_s1585, let955, [(- 1), (- 1)]
let lean_s1690 := by R2 lean_s1689, lean_s1587, let415, [(- 1), 0]
let lean_s1691 := by R1 lean_s1690, lean_s1598, let51, [(- 1), (- 1)]
let lean_s1692 := by R2 lean_s1691, lean_s1360, let22, [(- 1), 0]
have lean_s1693 : (Or let888 (Or let967 (Or let909 (Or let888 (Or let967 (Or let909 (Or let888 (Or let967 let912)))))))) := by R1 lean_s1692, lean_s1648, let75, [(- 1), (- 1)]
have lean_s1694 : let1040 := by factor lean_s1693, (- 1)
let lean_s1695 := by R1 lean_s1488, lean_s1694, let36, [(- 1), (- 1)]
let lean_s1696 := by R2 lean_s1695, lean_s1562, let15, [(- 1), (- 1)]
let lean_s1697 := by R1 lean_s1696, lean_s1564, let416, [(- 1), 0]
let lean_s1698 := by R1 lean_s1697, lean_s1648, let75, [(- 1), (- 1)]
let lean_s1699 := by R2 lean_s1698, lean_s1585, let955, [(- 1), (- 1)]
let lean_s1700 := by R2 lean_s1699, lean_s1587, let415, [(- 1), 0]
let lean_s1701 := by R1 lean_s1700, lean_s1598, let51, [(- 1), (- 1)]
have lean_s1702 : (Or let888 (Or let909 (Or let888 let912))) := by R2 lean_s1701, lean_s1360, let22, [(- 1), 0]
have lean_s1703 : let910 := by factor lean_s1702, (- 1)
have lean_s1704 : let372 := by andElim lean_s1342, 11
have lean_s1705 : (Or let371 let38) := by timed iteElim2 lean_s1704
have lean_s1706 : (Or let38 let371) := by permutateOr lean_s1705, [1, 0], (- 1)
let lean_s1707 := by R2 lean_s1703, lean_s1706, let38, [(- 1), (- 1)]
let lean_s1708 := by R2 lean_s1707, lean_s1366, let59, [(- 1), (- 1)]
have lean_s1709 : (Or let908 let225) := by timed @cnfAndPos [let225, let229] 0
have lean_s1710 : (Or let225 let908) := by permutateOr lean_s1709, [1, 0], (- 1)
let lean_s1711 := by R1 lean_s1708, lean_s1710, let371, [(- 1), (- 1)]
have lean_s1712 : (Or let907 let225) := by timed @cnfAndPos [let225, let219] 0
have lean_s1713 : (Or let225 let907) := by permutateOr lean_s1712, [1, 0], (- 1)
have lean_s1714 : (Or let225 let225) := by R1 lean_s1711, lean_s1713, let393, [(- 1), (- 1)]
have lean_s1715 : let225 := by factor lean_s1714, 1
let lean_s1716 := by R2 lean_s1442, lean_s1715, let225, [(- 1), 0]
have lean_s1717 : (Or let908 let58) := by timed iteElim1 lean_s1704
have lean_s1718 : (Or let58 let908) := by permutateOr lean_s1717, [1, 0], (- 1)
let lean_s1719 := by R2 lean_s1716, lean_s1718, let58, [(- 1), (- 1)]
have lean_s1720 : (Or let908 let229) := by timed @cnfAndPos [let225, let229] 1
have lean_s1721 : (Or let229 let908) := by permutateOr lean_s1720, [1, 0], (- 1)
have lean_s1722 : (Or let888 (Or let967 (Or let1043 (Or let293 let1122)))) := by R2 lean_s1719, lean_s1721, let229, [(- 1), (- 1)]
have lean_s1723 : (Or let888 (Or let967 (Or let1043 (Or let293 let908)))) := by factor lean_s1722, (- 1)
let lean_s1724 := by R2 lean_s1723, lean_s1706, let371, [(- 1), (- 1)]
have lean_s1725 : (Or let888 (Or let967 (Or let1043 (Or let293 let1121)))) := by R1 lean_s1724, lean_s1694, let38, [(- 1), (- 1)]
have lean_s1726 : (Or let888 (Or let967 let1044)) := by factor lean_s1725, 5
let lean_s1727 := by R2 lean_s1726, lean_s1487, let36, [(- 1), (- 1)]
let lean_s1728 := by R1 lean_s1562, lean_s1564, let416, [(- 1), 0]
let lean_s1729 := by R2 lean_s1728, lean_s1585, let955, [(- 1), (- 1)]
let lean_s1730 := by R2 lean_s1729, lean_s1587, let415, [(- 1), 0]
let lean_s1731 := by R1 lean_s1730, lean_s1452, let15, [(- 1), (- 1)]
let lean_s1732 := by R2 lean_s1731, lean_s1360, let22, [(- 1), 0]
let lean_s1733 := by R1 lean_s1732, lean_s1648, let75, [(- 1), (- 1)]
let lean_s1734 := by R1 lean_s1733, lean_s1598, let51, [(- 1), (- 1)]
have lean_s1735 : (Or let888 (Or let902 (Or let1045 (Or let909 (Or let963 (Or let1043 let911)))))) := by R2 lean_s1734, lean_s1360, let22, [(- 1), 0]
have lean_s1736 : (Or let888 (Or let902 (Or let1045 (Or let909 (Or let963 let1043))))) := by factor lean_s1735, 9
let lean_s1737 := by R2 lean_s1736, lean_s1706, let38, [(- 1), (- 1)]
let lean_s1738 := by R1 lean_s1737, lean_s1721, let371, [(- 1), (- 1)]
let lean_s1739 := by R1 lean_s1738, lean_s1441, let229, [(- 1), (- 1)]
let lean_s1740 := by R2 lean_s1739, lean_s1715, let225, [(- 1), 0]
let lean_s1741 := by R2 lean_s1740, lean_s1398, let26, [(- 1), (- 1)]
let lean_s1742 := by R2 lean_s1741, lean_s1347, let33, [(- 1), (- 1)]
let lean_s1743 := by R2 lean_s1742, lean_s1432, let30, [(- 1), (- 1)]
let lean_s1744 := by R1 lean_s1743, lean_s1457, let364, [(- 1), (- 1)]
let lean_s1745 := by R1 lean_s1744, lean_s1460, let388, [(- 1), (- 1)]
have lean_s1746 : (Or let888 (Or let902 (Or let901 let903))) := by R1 lean_s1745, lean_s1464, let369, [(- 1), (- 1)]
have lean_s1747 : (Or let888 (Or let902 (Or let901 let900))) := by factor lean_s1746, (- 1)
let lean_s1748 := by R1 lean_s1747, lean_s1470, let363, [(- 1), (- 1)]
let lean_s1749 := by R1 lean_s1748, lean_s1475, let368, [(- 1), (- 1)]
let lean_s1750 := by R2 lean_s1749, lean_s1479, let239, [(- 1), (- 1)]
have lean_s1751 : (Or let889 let266) := by timed @cnfAndPos [let266, let390] 0
have lean_s1752 : (Or let266 let889) := by permutateOr lean_s1751, [1, 0], (- 1)
have lean_s1753 : (Or let888 (Or let891 (Or let891 let890))) := by R2 lean_s1750, lean_s1752, let266, [(- 1), (- 1)]
have lean_s1754 : (Or let888 let892) := by factor lean_s1753, (- 1)
have lean_s1755 : (Or let888 let890) := by R2 lean_s1754, lean_s1483, let390, [(- 1), (- 1)]
have lean_s1756 : (Or let888 let889) := by factor lean_s1755, (- 1)
have lean_s1757 : (Or let888 (Or let1043 (Or let293 let888))) := by R1 lean_s1727, lean_s1756, let391, [(- 1), (- 1)]
have lean_s1758 : (Or let888 let1044) := by factor lean_s1757, 3
have lean_s1759 : (Or let888 (Or let967 (Or let1123 (Or let963 (Or let293 (Or let888 let293)))))) := by R1 lean_s1399, lean_s1758, let26, [(- 1), (- 1)]
have lean_s1760 : (Or let888 (Or let967 (Or let1123 (Or let963 let293)))) := by factor lean_s1759, (- 1)
let lean_s1761 := by R2 lean_s1760, lean_s1562, let15, [(- 1), (- 1)]
let lean_s1762 := by R1 lean_s1761, lean_s1564, let416, [(- 1), 0]
let lean_s1763 := by R2 lean_s1762, lean_s1585, let955, [(- 1), (- 1)]
let lean_s1764 := by R2 lean_s1763, lean_s1587, let415, [(- 1), 0]
have lean_s1765 : (Or let888 (Or let1123 (Or let250 (Or let446 let1013)))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let58 =>
      (scope (fun lean_a333 : let22 =>
        (scope (fun lean_a334 : let51 =>
          have lean_s1765 : let948 := by timed Eq.symm lean_r30
          have lean_s1766 : let134 := by timed eqResolve lean_a334 lean_s1765
          have lean_s1767 : let1132 := by timed And.intro lean_s1766 lean_a332
          have lean_s1768 : (Or let943 let1128) :=
            (scope (fun lean_a331 : let134 =>
              (scope (fun lean_a332 : let58 =>
                have lean_s1768 : let1130 := by timed Eq.symm lean_a332
                have lean_s1769 : let946 := by timed Eq.symm lean_a331
                have lean_s1770 : let134 := by timed Eq.symm lean_s1769
                have lean_s1771 : let953 := by timed flipCongrArg lean_s1770 [xx5fcount]
                have lean_s1772 : let1012 := by timed Eq.trans lean_s1768 lean_s1771
                show let1012 from lean_s1772
            ))))
          have lean_s1769 : (Implies let1132 let1012) := by liftOrNToImp lean_s1768, 2
          have lean_s1770 : let1012 := by timed modusPonens lean_s1767 lean_s1769
          have lean_s1771 : let940 := by timed And.intro lean_s1766 lean_a331
          have lean_s1772 : let944 :=
            (scope (fun lean_a331 : let134 =>
              (scope (fun lean_a332 : let59 =>
                have lean_s1772 : let947 := by timed Eq.symm lean_a332
                have lean_s1773 : let946 := by timed Eq.symm lean_a331
                have lean_s1774 : let134 := by timed Eq.symm lean_s1773
                have lean_s1775 : let945 := by timed flipCongrArg lean_s1774 [sx5fcount]
                have lean_s1776 : let916 := by timed Eq.trans lean_s1772 lean_s1775
                show let916 from lean_s1776
            ))))
          have lean_s1773 : let941 := by liftOrNToImp lean_s1772, 2
          have lean_s1774 : let916 := by timed modusPonens lean_s1771 lean_s1773
          let lean_s1775 := by timed And.intro lean_s1770 lean_s1774
          have lean_s1776 : let1013 := by timed And.intro lean_a333 lean_s1775
          show let1013 from lean_s1776
  ))))))))
have lean_s1766 : let1131 := by liftOrNToImp lean_s1765, 4
have lean_s1767 : (Eq let71 let71) := by timed rfl
let lean_s1768 := by timed flipCongrArg lean_s1767 [Implies]
have lean_s1769 : let1015 := by timed falseIntro lean_s1420
have lean_s1770 : (Eq let1131 let73) := by timed congr lean_s1768 lean_s1769
have lean_s1771 : (Eq let1131 let72) := by timed Eq.trans lean_s1770 lean_r9
have lean_s1772 : let72 := by timed eqResolve lean_s1766 lean_s1771
have lean_s1773 : (Or let888 (Or let1123 let914)) := by timed flipNotAnd lean_s1772 [let59, let58, let22, let51]
have lean_s1774 : (Or let250 (Or let888 (Or let1123 let446))) := by permutateOr lean_s1773, [2, 0, 1, 3], (- 1)
let lean_s1775 := by R1 lean_s1764, lean_s1774, let51, [(- 1), (- 1)]
let lean_s1776 := by R2 lean_s1775, lean_s1360, let22, [(- 1), 0]
have lean_s1777 : (Or let888 (Or let1123 (Or let967 (Or let963 let1024)))) :=
  (scope (fun lean_a331 : let59 =>
    (scope (fun lean_a332 : let58 =>
      (scope (fun lean_a333 : let36 =>
        (scope (fun lean_a334 : let30 =>
          (scope (fun lean_a335 : let22 =>
            (scope (fun lean_a336 : let75 =>
              have lean_s1777 : let982 := by timed Eq.symm lean_r222
              have lean_s1778 : let586 := by timed eqResolve lean_a336 lean_s1777
              let lean_s1779 := by timed And.intro lean_a334 lean_a332
              have lean_s1780 : let1127 := by timed And.intro lean_s1778 lean_s1779
              have lean_s1781 : (Or let978 let1129) :=
                (scope (fun lean_a331 : let586 =>
                  (scope (fun lean_a332 : let30 =>
                    (scope (fun lean_a333 : let58 =>
                      have lean_s1781 : let1130 := by timed Eq.symm lean_a333
                      have lean_s1782 : let522 := by timed Eq.symm lean_a332
                      have lean_s1783 : let30 := by timed Eq.symm lean_s1782
                      let lean_s1784 := by timed Eq.trans lean_s1781 lean_s1783
                      have lean_s1785 : let981 := by timed Eq.symm lean_a331
                      have lean_s1786 : let586 := by timed Eq.symm lean_s1785
                      have lean_s1787 : let988 := by timed flipCongrArg lean_s1786 [xx5fcount]
                      have lean_s1788 : let1012 := by timed Eq.trans lean_s1784 lean_s1787
                      show let1012 from lean_s1788
                ))))))
              have lean_s1782 : (Implies let1127 let1012) := by liftOrNToImp lean_s1781, 3
              have lean_s1783 : let1012 := by timed modusPonens lean_s1780 lean_s1782
              let lean_s1784 := by timed And.intro lean_a333 lean_a331
              have lean_s1785 : let975 := by timed And.intro lean_s1778 lean_s1784
              have lean_s1786 : let979 :=
                (scope (fun lean_a331 : let586 =>
                  (scope (fun lean_a332 : let36 =>
                    (scope (fun lean_a333 : let59 =>
                      have lean_s1786 : let947 := by timed Eq.symm lean_a333
                      have lean_s1787 : let127 := by timed Eq.symm lean_a332
                      have lean_s1788 : let36 := by timed Eq.symm lean_s1787
                      let lean_s1789 := by timed Eq.trans lean_s1786 lean_s1788
                      have lean_s1790 : let981 := by timed Eq.symm lean_a331
                      have lean_s1791 : let586 := by timed Eq.symm lean_s1790
                      have lean_s1792 : let980 := by timed flipCongrArg lean_s1791 [sx5fcount]
                      have lean_s1793 : let916 := by timed Eq.trans lean_s1789 lean_s1792
                      show let916 from lean_s1793
                ))))))
              have lean_s1787 : let976 := by liftOrNToImp lean_s1786, 3
              have lean_s1788 : let916 := by timed modusPonens lean_s1785 lean_s1787
              let lean_s1789 := by timed And.intro lean_s1783 lean_s1788
              have lean_s1790 : let1013 := by timed And.intro lean_a335 lean_s1789
              show let1013 from lean_s1790
  ))))))))))))
have lean_s1778 : let1125 := by liftOrNToImp lean_s1777, 6
have lean_s1779 : (Eq let79 let79) := by timed rfl
let lean_s1780 := by timed flipCongrArg lean_s1779 [Implies]
have lean_s1781 : let1015 := by timed falseIntro lean_s1420
have lean_s1782 : (Eq let1125 let81) := by timed congr lean_s1780 lean_s1781
have lean_s1783 : (Eq let1125 let80) := by timed Eq.trans lean_s1782 lean_r10
have lean_s1784 : let80 := by timed eqResolve lean_s1778 lean_s1783
have lean_s1785 : (Or let888 (Or let1123 let971)) := by timed flipNotAnd lean_s1784 [let59, let58, let36, let30, let22, let75]
have lean_s1786 : (Or let250 (Or let888 (Or let967 (Or let1123 let964)))) := by permutateOr lean_s1785, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1787 := by R1 lean_s1776, lean_s1786, let75, [(- 1), (- 1)]
have lean_s1788 : (Or let888 (Or let967 (Or let1123 (Or let963 (Or let888 (Or let1123 let1124)))))) := by R2 lean_s1787, lean_s1360, let22, [(- 1), 0]
have lean_s1789 : let1124 := by factor lean_s1788, (- 1)
let lean_s1790 := by R2 lean_s1789, lean_s1432, let30, [(- 1), (- 1)]
let lean_s1791 := by R1 lean_s1790, lean_s1435, let369, [(- 1), (- 1)]
let lean_s1792 := by R1 lean_s1791, lean_s1441, let266, [(- 1), (- 1)]
let lean_s1793 := by R2 lean_s1792, lean_s1715, let225, [(- 1), 0]
let lean_s1794 := by R2 lean_s1793, lean_s1718, let58, [(- 1), (- 1)]
have lean_s1795 : (Or let888 (Or let967 let1122)) := by R2 lean_s1794, lean_s1721, let229, [(- 1), (- 1)]
have lean_s1796 : (Or let888 (Or let967 let908)) := by factor lean_s1795, (- 1)
let lean_s1797 := by R2 lean_s1796, lean_s1706, let371, [(- 1), (- 1)]
have lean_s1798 : (Or let888 (Or let967 let1121)) := by R1 lean_s1797, lean_s1694, let38, [(- 1), (- 1)]
have lean_s1799 : let1121 := by factor lean_s1798, (- 1)
let lean_s1800 := by R2 lean_s1799, lean_s1487, let36, [(- 1), (- 1)]
have lean_s1801 : (Or let888 let888) := by R1 lean_s1800, lean_s1756, let391, [(- 1), (- 1)]
have lean_s1802 : let888 := by factor lean_s1801, 1
have lean_s1803 : let393 := by R1 lean_s1366, lean_s1802, let59, [(- 1), 0]
have lean_s1804 : let40 := by R2 lean_s1364, lean_s1803, let393, [(- 1), 0]
let lean_s1805 := by R2 lean_s1361, lean_s1804, let40, [(- 1), 0]
have lean_s1806 : let1159 :=
  (scope (fun lean_a331 : let219 =>
    have lean_s1806 : let1159 :=
      (scope (fun lean_a332 : let219 =>
        have lean_s1806 : let220 := by timed Eq.symm lean_a332
        have lean_s1807 : let219 := by timed Eq.symm lean_s1806
        let lean_s1808 := by timed flipCongrArg lean_s1807 [Eq]
        have lean_s1809 : let258 := by timed rfl
        have lean_s1810 : (Eq let266 let620) := by timed congr lean_s1808 lean_s1809
        have lean_s1811 : (Eq let686 let560) := by timed flipCongrArg lean_r244 [Not]
        have lean_s1812 : (Eq let686 True) := by timed Eq.trans lean_s1811 lean_r205
        have lean_s1813 : (Eq let621 True) := by timed Eq.trans lean_r254 lean_s1812
        have lean_s1814 : let621 := by timed trueElim lean_s1813
        have lean_s1815 : (Eq let266 False) := by timed Eq.trans lean_s1810 lean_s1814
        have lean_s1816 : let901 := by timed falseElim lean_s1815
        show let901 from lean_s1816
      ))
    have lean_s1807 : let1160 := by liftOrNToImp lean_s1806, 1
    have lean_s1808 : let901 := by timed modusPonens lean_a331 lean_s1807
    show let901 from lean_s1808
  ))
have lean_s1807 : let1160 := by liftOrNToImp lean_s1806, 1
have lean_s1808 : let1159 := by timed impliesElim lean_s1807
have lean_s1809 : (Or let901 let1156) := by permutateOr lean_s1808, [1, 0], (- 1)
have lean_s1810 : (Or let907 let219) := by timed @cnfAndPos [let225, let219] 1
have lean_s1811 : (Or let219 let907) := by permutateOr lean_s1810, [1, 0], (- 1)
have lean_s1812 : let219 := by R2 lean_s1811, lean_s1803, let393, [(- 1), 0]
have lean_s1813 : let901 := by R2 lean_s1809, lean_s1812, let219, [(- 1), 0]
have lean_s1814 : let889 := by R1 lean_s1752, lean_s1813, let266, [(- 1), 0]
have lean_s1815 : let36 := by R1 lean_s1487, lean_s1814, let391, [(- 1), 0]
let lean_s1816 := by R2 lean_s1805, lean_s1815, let36, [(- 1), 0]
have lean_s1817 : let1157 :=
  (scope (fun lean_a332 : let219 =>
    have lean_s1817 : let1157 :=
      (scope (fun lean_a332 : let219 =>
        have lean_s1817 : let220 := by timed Eq.symm lean_a332
        have lean_s1818 : let219 := by timed Eq.symm lean_s1817
        let lean_s1819 := by timed flipCongrArg lean_s1818 [Eq]
        have lean_s1820 : let227 := by timed rfl
        have lean_s1821 : (Eq let229 let567) := by timed congr lean_s1819 lean_s1820
        have lean_s1822 : (Eq let573 let560) := by timed flipCongrArg lean_r210 [Not]
        have lean_s1823 : (Eq let573 True) := by timed Eq.trans lean_s1822 lean_r205
        have lean_s1824 : (Eq let568 True) := by timed Eq.trans lean_r214 lean_s1823
        have lean_s1825 : let568 := by timed trueElim lean_s1824
        have lean_s1826 : let1120 := by timed Eq.trans lean_s1821 lean_s1825
        have lean_s1827 : let1115 := by timed falseElim lean_s1826
        show let1115 from lean_s1827
      ))
    have lean_s1818 : let1158 := by liftOrNToImp lean_s1817, 1
    have lean_s1819 : let1115 := by timed modusPonens lean_a332 lean_s1818
    show let1115 from lean_s1819
  ))
have lean_s1818 : let1158 := by liftOrNToImp lean_s1817, 1
have lean_s1819 : let1157 := by timed impliesElim lean_s1818
have lean_s1820 : let1115 := by R2 lean_s1819, lean_s1812, let219, [(- 1), 0]
have lean_s1821 : let908 := by R1 lean_s1721, lean_s1820, let229, [(- 1), 0]
have lean_s1822 : let38 := by R1 lean_s1706, lean_s1821, let371, [(- 1), 0]
let lean_s1823 := by R2 lean_s1816, lean_s1822, let38, [(- 1), 0]
have lean_s1824 : let904 := by R1 lean_s1435, lean_s1813, let266, [(- 1), 0]
have lean_s1825 : let30 := by R1 lean_s1432, lean_s1824, let369, [(- 1), 0]
let lean_s1826 := by R2 lean_s1823, lean_s1825, let30, [(- 1), 0]
let lean_s1827 := by R1 lean_s1347, lean_s1382, let388, [(- 1), (- 1)]
have lean_s1828 : (Or let1161 (Or let909 (Or let967 (Or let1045 (Or let963 (Or let1096 let1144)))))) :=
  (scope (fun lean_a332 : let40 =>
    (scope (fun lean_a333 : let38 =>
      (scope (fun lean_a334 : let36 =>
        (scope (fun lean_a335 : let33 =>
          (scope (fun lean_a336 : let30 =>
            (scope (fun lean_a337 : let45 =>
              (scope (fun lean_a338 : let22 =>
                (scope (fun lean_a339 : let15 =>
                  have lean_s1828 : let1057 := by timed Eq.symm lean_r138
                  have lean_s1829 : let460 := by timed eqResolve lean_a339 lean_s1828
                  let lean_s1830 := by timed And.intro lean_a336 lean_a333
                  have lean_s1831 : let1108 := by timed And.intro lean_a337 lean_s1830
                  have lean_s1832 : let1110 :=
                    (scope (fun lean_a332 : let45 =>
                      (scope (fun lean_a333 : let30 =>
                        (scope (fun lean_a334 : let38 =>
                          have lean_s1832 : let954 := by timed Eq.symm lean_a334
                          have lean_s1833 : let522 := by timed Eq.symm lean_a333
                          have lean_s1834 : let30 := by timed Eq.symm lean_s1833
                          let lean_s1835 := by timed Eq.trans lean_s1832 lean_s1834
                          have lean_s1836 : let1111 := by timed Eq.symm lean_a332
                          have lean_s1837 : let45 := by timed Eq.symm lean_s1836
                          have lean_s1838 : let306 := by timed Eq.trans lean_s1835 lean_s1837
                          show let306 from lean_s1838
                    ))))))
                  have lean_s1833 : let1109 := by liftOrNToImp lean_s1832, 3
                  have lean_s1834 : let306 := by timed modusPonens lean_s1831 lean_s1833
                  have lean_s1835 : let1107 :=
                    (scope (fun lean_a332 : let306 =>
                      have lean_s1835 : let305 := by timed eqResolve lean_a332 lean_r97
                      have lean_s1836 : let1102 := by timed Eq.symm lean_s1835
                      show let1102 from lean_s1836
                    ))
                  have lean_s1836 : let1106 := by liftOrNToImp lean_s1835, 1
                  have lean_s1837 : let1102 := by timed modusPonens lean_s1834 lean_s1836
                  have lean_s1838 : let1103 := by timed And.intro lean_s1829 lean_s1837
                  have lean_s1839 : let1105 :=
                    (scope (fun lean_a332 : let460 =>
                      (scope (fun lean_a333 : let1102 =>
                        have lean_s1839 : let305 := by timed Eq.symm lean_a333
                        have lean_s1840 : let1102 := by timed Eq.symm lean_s1839
                        have lean_s1841 : let1056 := by timed Eq.symm lean_a332
                        have lean_s1842 : let460 := by timed Eq.symm lean_s1841
                        have lean_s1843 : let1059 := by timed flipCongrArg lean_s1842 [xx5fcount]
                        have lean_s1844 : let1012 := by timed Eq.trans lean_s1840 lean_s1843
                        show let1012 from lean_s1844
                    ))))
                  have lean_s1840 : let1104 := by liftOrNToImp lean_s1839, 2
                  have lean_s1841 : let1012 := by timed modusPonens lean_s1838 lean_s1840
                  let lean_s1842 := by timed And.intro lean_a334 lean_a332
                  let lean_s1843 := by timed And.intro lean_a335 lean_s1842
                  have lean_s1844 : let1171 := by timed And.intro lean_s1829 lean_s1843
                  have lean_s1845 : let1173 :=
                    (scope (fun lean_a332 : let460 =>
                      (scope (fun lean_a333 : let33 =>
                        (scope (fun lean_a334 : let36 =>
                          (scope (fun lean_a335 : let40 =>
                            have lean_s1845 : let1165 := by timed Eq.symm lean_a335
                            have lean_s1846 : let127 := by timed Eq.symm lean_a334
                            have lean_s1847 : let36 := by timed Eq.symm lean_s1846
                            let lean_s1848 := by timed Eq.trans lean_s1845 lean_s1847
                            have lean_s1849 : let224 := by timed Eq.symm lean_a333
                            have lean_s1850 : let33 := by timed Eq.symm lean_s1849
                            let lean_s1851 := by timed Eq.trans lean_s1848 lean_s1850
                            have lean_s1852 : let1056 := by timed Eq.symm lean_a332
                            have lean_s1853 : let460 := by timed Eq.symm lean_s1852
                            have lean_s1854 : let1055 := by timed flipCongrArg lean_s1853 [sx5fcount]
                            have lean_s1855 : let989 := by timed Eq.trans lean_s1851 lean_s1854
                            show let989 from lean_s1855
                    ))))))))
                  have lean_s1846 : let1172 := by liftOrNToImp lean_s1845, 4
                  have lean_s1847 : let989 := by timed modusPonens lean_s1844 lean_s1846
                  let lean_s1848 := by timed And.intro lean_s1841 lean_s1847
                  have lean_s1849 : let1139 := by timed And.intro lean_a338 lean_s1848
                  show let1139 from lean_s1849
  ))))))))))))))))
have lean_s1829 : let1170 := by liftOrNToImp lean_s1828, 8
have lean_s1830 : (Eq let48 let48) := by timed rfl
let lean_s1831 := by timed flipCongrArg lean_s1830 [Implies]
have lean_s1832 : let1141 := by timed falseIntro lean_s1405
have lean_s1833 : (Eq let1170 let50) := by timed congr lean_s1831 lean_s1832
have lean_s1834 : (Eq let1170 let49) := by timed Eq.trans lean_s1833 lean_r3
have lean_s1835 : let49 := by timed eqResolve lean_s1829 lean_s1834
have lean_s1836 : (Or let1161 let1100) := by timed flipNotAnd lean_s1835 [let40, let38, let36, let33, let30, let45, let22, let15]
have lean_s1837 : (Or let250 (Or let1161 let1098)) := by permutateOr lean_s1836, [6, 0, 2, 3, 1, 4, 5, 7], (- 1)
let lean_s1838 := by R1 lean_s1827, lean_s1837, let33, [(- 1), (- 1)]
let lean_s1839 := by R1 lean_s1562, lean_s1564, let416, [(- 1), 0]
have lean_s1840 : (Or let1161 (Or let909 (Or let967 let1002))) :=
  (scope (fun lean_a332 : let40 =>
    (scope (fun lean_a333 : let38 =>
      (scope (fun lean_a334 : let36 =>
        (scope (fun lean_a335 : let30 =>
          (scope (fun lean_a336 : let22 =>
            (scope (fun lean_a337 : let75 =>
              have lean_s1840 : let982 := by timed Eq.symm lean_r222
              have lean_s1841 : let586 := by timed eqResolve lean_a337 lean_s1840
              let lean_s1842 := by timed And.intro lean_a335 lean_a333
              have lean_s1843 : let984 := by timed And.intro lean_s1841 lean_s1842
              have lean_s1844 : let987 :=
                (scope (fun lean_a332 : let586 =>
                  (scope (fun lean_a333 : let30 =>
                    (scope (fun lean_a334 : let38 =>
                      have lean_s1844 : let954 := by timed Eq.symm lean_a334
                      have lean_s1845 : let522 := by timed Eq.symm lean_a333
                      have lean_s1846 : let30 := by timed Eq.symm lean_s1845
                      let lean_s1847 := by timed Eq.trans lean_s1844 lean_s1846
                      have lean_s1848 : let981 := by timed Eq.symm lean_a332
                      have lean_s1849 : let586 := by timed Eq.symm lean_s1848
                      have lean_s1850 : let988 := by timed flipCongrArg lean_s1849 [xx5fcount]
                      have lean_s1851 : let917 := by timed Eq.trans lean_s1847 lean_s1850
                      show let917 from lean_s1851
                ))))))
              have lean_s1845 : let985 := by liftOrNToImp lean_s1844, 3
              have lean_s1846 : let917 := by timed modusPonens lean_s1843 lean_s1845
              let lean_s1847 := by timed And.intro lean_a334 lean_a332
              have lean_s1848 : let1168 := by timed And.intro lean_s1841 lean_s1847
              have lean_s1849 : (Or let978 let1169) :=
                (scope (fun lean_a332 : let586 =>
                  (scope (fun lean_a333 : let36 =>
                    (scope (fun lean_a334 : let40 =>
                      have lean_s1849 : let1165 := by timed Eq.symm lean_a334
                      have lean_s1850 : let127 := by timed Eq.symm lean_a333
                      have lean_s1851 : let36 := by timed Eq.symm lean_s1850
                      let lean_s1852 := by timed Eq.trans lean_s1849 lean_s1851
                      have lean_s1853 : let981 := by timed Eq.symm lean_a332
                      have lean_s1854 : let586 := by timed Eq.symm lean_s1853
                      have lean_s1855 : let980 := by timed flipCongrArg lean_s1854 [sx5fcount]
                      have lean_s1856 : let989 := by timed Eq.trans lean_s1852 lean_s1855
                      show let989 from lean_s1856
                ))))))
              have lean_s1850 : (Implies let1168 let989) := by liftOrNToImp lean_s1849, 3
              have lean_s1851 : let989 := by timed modusPonens lean_s1848 lean_s1850
              let lean_s1852 := by timed And.intro lean_s1846 lean_s1851
              have lean_s1853 : let990 := by timed And.intro lean_a336 lean_s1852
              show let990 from lean_s1853
  ))))))))))))
have lean_s1841 : let1166 := by liftOrNToImp lean_s1840, 6
have lean_s1842 : (Eq let96 let96) := by timed rfl
let lean_s1843 := by timed flipCongrArg lean_s1842 [Implies]
have lean_s1844 : let992 := by timed falseIntro lean_s1353
have lean_s1845 : (Eq let1166 let98) := by timed congr lean_s1843 lean_s1844
have lean_s1846 : (Eq let1166 let97) := by timed Eq.trans lean_s1845 lean_r16
have lean_s1847 : let97 := by timed eqResolve lean_s1841 lean_s1846
have lean_s1848 : (Or let1161 let972) := by timed flipNotAnd lean_s1847 [let40, let38, let36, let30, let22, let75]
have lean_s1849 : (Or let250 (Or let1161 let968)) := by permutateOr lean_s1848, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1850 := by R2 lean_s1849, lean_s1825, let30, [(- 1), 0]
let lean_s1851 := by R2 lean_s1850, lean_s1815, let36, [(- 1), 0]
let lean_s1852 := by R2 lean_s1851, lean_s1822, let38, [(- 1), 0]
let lean_s1853 := by R2 lean_s1852, lean_s1804, let40, [(- 1), 0]
have lean_s1854 : let961 := by R2 lean_s1853, lean_s1360, let22, [(- 1), 0]
let lean_s1855 := by R1 lean_s1839, lean_s1854, let75, [(- 1), 0]
have lean_s1856 : (Or let1161 (Or let909 (Or let250 (Or let446 let990)))) :=
  (scope (fun lean_a332 : let40 =>
    (scope (fun lean_a333 : let38 =>
      (scope (fun lean_a334 : let22 =>
        (scope (fun lean_a335 : let51 =>
          have lean_s1856 : let948 := by timed Eq.symm lean_r30
          have lean_s1857 : let134 := by timed eqResolve lean_a335 lean_s1856
          have lean_s1858 : let949 := by timed And.intro lean_s1857 lean_a333
          have lean_s1859 : let952 :=
            (scope (fun lean_a332 : let134 =>
              (scope (fun lean_a333 : let38 =>
                have lean_s1859 : let954 := by timed Eq.symm lean_a333
                have lean_s1860 : let946 := by timed Eq.symm lean_a332
                have lean_s1861 : let134 := by timed Eq.symm lean_s1860
                have lean_s1862 : let953 := by timed flipCongrArg lean_s1861 [xx5fcount]
                have lean_s1863 : let917 := by timed Eq.trans lean_s1859 lean_s1862
                show let917 from lean_s1863
            ))))
          have lean_s1860 : let950 := by liftOrNToImp lean_s1859, 2
          have lean_s1861 : let917 := by timed modusPonens lean_s1858 lean_s1860
          have lean_s1862 : let1163 := by timed And.intro lean_s1857 lean_a332
          have lean_s1863 : (Or let943 let1164) :=
            (scope (fun lean_a332 : let134 =>
              (scope (fun lean_a333 : let40 =>
                have lean_s1863 : let1165 := by timed Eq.symm lean_a333
                have lean_s1864 : let946 := by timed Eq.symm lean_a332
                have lean_s1865 : let134 := by timed Eq.symm lean_s1864
                have lean_s1866 : let945 := by timed flipCongrArg lean_s1865 [sx5fcount]
                have lean_s1867 : let989 := by timed Eq.trans lean_s1863 lean_s1866
                show let989 from lean_s1867
            ))))
          have lean_s1864 : (Implies let1163 let989) := by liftOrNToImp lean_s1863, 2
          have lean_s1865 : let989 := by timed modusPonens lean_s1862 lean_s1864
          let lean_s1866 := by timed And.intro lean_s1861 lean_s1865
          have lean_s1867 : let990 := by timed And.intro lean_a334 lean_s1866
          show let990 from lean_s1867
  ))))))))
have lean_s1857 : let1162 := by liftOrNToImp lean_s1856, 4
have lean_s1858 : (Eq let54 let54) := by timed rfl
let lean_s1859 := by timed flipCongrArg lean_s1858 [Implies]
have lean_s1860 : let992 := by timed falseIntro lean_s1353
have lean_s1861 : (Eq let1162 let56) := by timed congr lean_s1859 lean_s1860
have lean_s1862 : (Eq let1162 let55) := by timed Eq.trans lean_s1861 lean_r4
have lean_s1863 : let55 := by timed eqResolve lean_s1857 lean_s1862
have lean_s1864 : (Or let1161 let915) := by timed flipNotAnd lean_s1863 [let40, let38, let22, let51]
have lean_s1865 : (Or let250 (Or let1161 let913)) := by permutateOr lean_s1864, [2, 0, 1, 3], (- 1)
let lean_s1866 := by R2 lean_s1865, lean_s1360, let22, [(- 1), 0]
let lean_s1867 := by R2 lean_s1866, lean_s1804, let40, [(- 1), 0]
have lean_s1868 : let446 := by R2 lean_s1867, lean_s1822, let38, [(- 1), 0]
let lean_s1869 := by R1 lean_s1585, lean_s1868, let51, [(- 1), 0]
have lean_s1870 : let955 := by R2 lean_s1869, lean_s1587, let415, [(- 1), 0]
have lean_s1871 : let15 := by R2 lean_s1855, lean_s1870, let955, [(- 1), 0]
let lean_s1872 := by R2 lean_s1838, lean_s1871, let15, [(- 1), 0]
let lean_s1873 := by R2 lean_s1872, lean_s1825, let30, [(- 1), 0]
let lean_s1874 := by R2 lean_s1873, lean_s1815, let36, [(- 1), 0]
let lean_s1875 := by R2 lean_s1874, lean_s1822, let38, [(- 1), 0]
let lean_s1876 := by R2 lean_s1875, lean_s1804, let40, [(- 1), 0]
let lean_s1877 := by R2 lean_s1876, lean_s1360, let22, [(- 1), 0]
let lean_s1878 := by R1 lean_s1877, lean_s1387, let387, [(- 1), (- 1)]
let lean_s1879 := by R2 lean_s1878, lean_s1391, let45, [(- 1), (- 1)]
have lean_s1880 : let1090 := by R2 lean_s1879, lean_s1394, let178, [(- 1), (- 1)]
have lean_s1881 : let906 := by factor lean_s1880, 1
have lean_s1882 : let26 := by R1 lean_s1398, lean_s1881, let364, [(- 1), 0]
let lean_s1883 := by R2 lean_s1826, lean_s1882, let26, [(- 1), 0]
have lean_s1884 : let1045 := by R2 lean_s1883, lean_s1871, let15, [(- 1), 0]
have lean_s1885 : let388 := by R1 lean_s1347, lean_s1884, let33, [(- 1), 0]
have lean_s1886 : let63 := by R2 lean_s1345, lean_s1885, let388, [(- 1), 0]
let lean_s1887 := by R2 lean_s11, lean_s1886, let63, [(- 1), 0]
let lean_s1888 := by R2 lean_s1887, lean_s1882, let26, [(- 1), 0]
let lean_s1889 := by R2 lean_s1888, lean_s1871, let15, [(- 1), 0]
let lean_s1890 := by R2 lean_s1889, lean_s1825, let30, [(- 1), 0]
let lean_s1891 := by R2 lean_s1890, lean_s1815, let36, [(- 1), 0]
let lean_s1892 := by R2 lean_s1891, lean_s1822, let38, [(- 1), 0]
let lean_s1893 := by R2 lean_s1892, lean_s1804, let40, [(- 1), 0]
exact (show False from by R2 lean_s1893, lean_s1360, let22, [0, 0])


