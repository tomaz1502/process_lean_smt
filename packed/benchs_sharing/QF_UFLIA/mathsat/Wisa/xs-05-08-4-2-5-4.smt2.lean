open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {xx5fcount : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {fmt0 : Int}
variable {percent : Int}
variable {fmt1 : Int}
variable {adrx5fmedhi : Int}
variable {adrx5flo : Int}
variable {adrx5fmedlo : Int}
variable {distance : Int}
variable {xx5fcount : (Int -> Int)}
variable {adrx5fmedhi : Int}
variable {selectx5fformat : (Int -> Int)}
variable {arg0 : Int}
variable {arg1 : Int}
variable {fmtx5flength : Int}
variable {adrx5fhi : Int}
variable {fmt1 : Int}
variable {sx5fcount : (Int -> Int)}
variable {arg0 : Int}
variable {arg1 : Int}
variable {selectx5fformat : (Int -> Int)}
variable {fmtx5flength : Int}
variable {percent : Int}
variable {distance : Int}
variable {adrx5fhi : Int}
variable {s : Int}
variable {x : Int}
variable {adrx5fmedlo : Int}
variable {adrx5flo : Int}
variable {fmt0 : Int}
variable {s : Int}
variable {x : Int}

theorem th0 :
  let let1 := (Int.ofNat 3)
  let let2 := (Eq fmt1 let1)
  let let3 := (Int.ofNat 2)
  let let4 := (Neg.neg let3)
  let let5 := (binrel% HAdd.hAdd let4 fmt1)
  let let6 := (xx5fcount let5)
  let let7 := (sx5fcount let5)
  let let8 := (binrel% HAdd.hAdd let7 let6)
  let let9 := (binrel% GE.ge let8 let3)
  let let10 := (And let9 let2)
  let let11 := (Int.ofNat 1)
  let let12 := (xx5fcount let11)
  let let13 := (Int.ofNat 0)
  let let14 := (xx5fcount let13)
  let let15 := (Eq let14 let12)
  let let16 := (And let15 let10)
  let let17 := (sx5fcount let11)
  let let18 := (sx5fcount let13)
  let let19 := (Eq let18 let17)
  let let20 := (And let19 let16)
  let let21 := (Eq let14 let13)
  let let22 := (And let21 let20)
  let let23 := (Eq let18 let11)
  let let24 := (And let23 let22)
  let let25 := (Not let24)
  let let26 := (Implies let24 False)
  let let27 := (Int.ofNat 37)
  let let28 := (Int.ofNat 115)
  let let29 := (Eq let28 let27)
  let let30 := (Eq let29 False)
  let let31 := (Neg.neg let11)
  let let32 := (binrel% HAdd.hAdd let31 let17)
  let let33 := (Eq let18 let32)
  let let34 := (Eq let18 let13)
  let let35 := (And let34 (And let21 (And let33 let16)))
  let let36 := (Not let35)
  let let37 := (Implies let35 False)
  let let38 := (Eq let11 let5)
  let let39 := (Int.ofNat 4)
  let let40 := (binrel% GE.ge fmt1 let39)
  let let41 := (Not let40)
  let let42 := (Not let41)
  let let43 := (Eq let42 let40)
  let let44 := (Eq let40 let40)
  let let45 := (Eq fmt1 let3)
  let let46 := (Not let45)
  let let47 := (Not let46)
  let let48 := (Eq let45 let47)
  let let49 := (Eq let47 let45)
  let let50 := (Rat.ofInt 1)
  let let51 := (Neg.neg let50)
  let let52 := (Neg.neg (Rat.ofInt 2))
  let let53 := (Rat.ofInt 0)
  let let54 := (binrel% HAdd.hAdd let53 let52)
  let let55 := (binrel% HAdd.hAdd let50 let54)
  let let56 := (Int.ofNat 120)
  let let57 := (Eq let56 let28)
  let let58 := (Not let57)
  let let59 := (Eq let57 False)
  let let60 := (Eq let56 let27)
  let let61 := (Not let60)
  let let62 := (Eq let60 False)
  let let63 := (binrel% HMul.hMul let50 let11)
  let let64 := (binrel% GT.gt let50 let13)
  let let65 := (Rat.ofInt let6)
  let let66 := (binrel% HMul.hMul let50 let6)
  let let67 := (binrel% HMul.hMul let50 let13)
  let let68 := (binrel% HMul.hMul let51 let3)
  let let69 := (binrel% LE.le let53 let52)
  let let70 := (Int.ofNat 8)
  let let71 := (binrel% HAdd.hAdd let70 arg0)
  let let72 := (binrel% HAdd.hAdd arg0 let70)
  let let73 := (Neg.neg let70)
  let let74 := (Eq arg0 let73)
  let let75 := (Eq let13 let71)
  let let76 := (binrel% HAdd.hAdd arg1 let1)
  let let77 := (selectx5fformat let76)
  let let78 := (Eq let77 adrx5fhi)
  let let79 := (binrel% HAdd.hAdd arg1 let3)
  let let80 := (selectx5fformat let79)
  let let81 := (Eq let80 adrx5fmedhi)
  let let82 := (binrel% HAdd.hAdd arg1 let11)
  let let83 := (selectx5fformat let82)
  let let84 := (Eq let83 adrx5fmedlo)
  let let85 := (selectx5fformat arg1)
  let let86 := (Eq let85 adrx5flo)
  let let87 := (binrel% HAdd.hAdd fmt1 let11)
  let let88 := (selectx5fformat let87)
  let let89 := (Eq let88 s)
  let let90 := (selectx5fformat fmt1)
  let let91 := (Eq let90 percent)
  let let92 := (And (And (And (And (And let91 let89) let86) let84) let81) let78)
  let let93 := (Not let92)
  let let94 := (binrel% HAdd.hAdd fmt0 let11)
  let let95 := (Eq arg1 let94)
  let let96 := (binrel% HAdd.hAdd fmt0 let13)
  let let97 := (Eq arg1 let96)
  let let98 := (Or let97 let95)
  let let99 := (binrel% HAdd.hAdd fmt0 let39)
  let let100 := (Eq fmt1 let99)
  let let101 := (binrel% HAdd.hAdd fmt0 let1)
  let let102 := (Eq fmt1 let101)
  let let103 := (binrel% HAdd.hAdd fmt0 let3)
  let let104 := (Eq fmt1 let103)
  let let105 := (Eq fmt1 let94)
  let let106 := (Eq fmt1 let96)
  let let107 := (Or (Or (Or (Or let106 let105) let104) let102) let100)
  let let108 := (xx5fcount let1)
  let let109 := (xx5fcount let39)
  let let110 := (Eq let109 let108)
  let let111 := (binrel% HAdd.hAdd let108 let11)
  let let112 := (Eq let109 let111)
  let let113 := (Int.ofNat 5)
  let let114 := (selectx5fformat let113)
  let let115 := (Eq let114 x)
  let let116 := (selectx5fformat let39)
  let let117 := (Eq let116 percent)
  let let118 := (And let117 let115)
  let let119 := (smtIte let118 let112 let110 Prop)
  let let120 := (xx5fcount let3)
  let let121 := (Eq let108 let120)
  let let122 := (binrel% HAdd.hAdd let120 let11)
  let let123 := (Eq let108 let122)
  let let124 := (Eq let116 x)
  let let125 := (selectx5fformat let1)
  let let126 := (Eq let125 percent)
  let let127 := (And let126 let124)
  let let128 := (smtIte let127 let123 let121 Prop)
  let let129 := (Eq let120 let12)
  let let130 := (binrel% HAdd.hAdd let12 let11)
  let let131 := (Eq let120 let130)
  let let132 := (Eq let125 x)
  let let133 := (selectx5fformat let3)
  let let134 := (Eq let133 percent)
  let let135 := (And let134 let132)
  let let136 := (smtIte let135 let131 let129 Prop)
  let let137 := (Eq let12 let14)
  let let138 := (binrel% HAdd.hAdd let14 let11)
  let let139 := (Eq let12 let138)
  let let140 := (Eq let133 x)
  let let141 := (selectx5fformat let11)
  let let142 := (Eq let141 percent)
  let let143 := (And let142 let140)
  let let144 := (smtIte let143 let139 let137 Prop)
  let let145 := (Eq let14 let11)
  let let146 := (Eq let141 x)
  let let147 := (selectx5fformat let13)
  let let148 := (Eq let147 percent)
  let let149 := (And let148 let146)
  let let150 := (smtIte let149 let145 let21 Prop)
  let let151 := (sx5fcount let1)
  let let152 := (sx5fcount let39)
  let let153 := (Eq let152 let151)
  let let154 := (binrel% HAdd.hAdd let151 let11)
  let let155 := (Eq let152 let154)
  let let156 := (Eq let114 s)
  let let157 := (And let117 let156)
  let let158 := (smtIte let157 let155 let153 Prop)
  let let159 := (sx5fcount let3)
  let let160 := (Eq let151 let159)
  let let161 := (binrel% HAdd.hAdd let159 let11)
  let let162 := (Eq let151 let161)
  let let163 := (Eq let116 s)
  let let164 := (And let126 let163)
  let let165 := (smtIte let164 let162 let160 Prop)
  let let166 := (Eq let159 let17)
  let let167 := (binrel% HAdd.hAdd let17 let11)
  let let168 := (Eq let159 let167)
  let let169 := (Eq let125 s)
  let let170 := (And let134 let169)
  let let171 := (smtIte let170 let168 let166 Prop)
  let let172 := (Eq let17 let18)
  let let173 := (binrel% HAdd.hAdd let18 let11)
  let let174 := (Eq let17 let173)
  let let175 := (Eq let133 s)
  let let176 := (And let142 let175)
  let let177 := (smtIte let176 let174 let172 Prop)
  let let178 := (Eq let141 s)
  let let179 := (And let148 let178)
  let let180 := (smtIte let179 let23 let34 Prop)
  let let181 := (Int.ofNat 255)
  let let182 := (Eq let116 let181)
  let let183 := (Eq let116 adrx5fhi)
  let let184 := (Eq let116 adrx5fmedhi)
  let let185 := (Eq let116 adrx5fmedlo)
  let let186 := (Eq let116 adrx5flo)
  let let187 := (Eq let125 let181)
  let let188 := (Eq let125 adrx5fhi)
  let let189 := (Eq let125 adrx5fmedhi)
  let let190 := (Eq let125 adrx5fmedlo)
  let let191 := (Eq let125 adrx5flo)
  let let192 := (Eq let133 let181)
  let let193 := (Eq let133 adrx5fhi)
  let let194 := (Eq let133 adrx5fmedhi)
  let let195 := (Eq let133 adrx5fmedlo)
  let let196 := (Eq let133 adrx5flo)
  let let197 := (Eq let141 let181)
  let let198 := (Eq let141 adrx5fhi)
  let let199 := (Eq let141 adrx5fmedhi)
  let let200 := (Eq let141 adrx5fmedlo)
  let let201 := (Eq let141 adrx5flo)
  let let202 := (Eq let147 let181)
  let let203 := (Eq let147 adrx5fhi)
  let let204 := (Eq let147 adrx5fmedhi)
  let let205 := (Eq let147 adrx5fmedlo)
  let let206 := (Eq let147 adrx5flo)
  let let207 := (Eq let147 x)
  let let208 := (Eq let147 s)
  let let209 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let148 let208) let207) let206) let205) let204) let203) let202) let142) let178) let146) let201) let200) let199) let198) let197) let134) let175) let140) let196) let195) let194) let193) let192) let126) let169) let132) let191) let190) let189) let188) let187) let117) let163) let124) let186) let185) let184) let183) let182)
  let let210 := (binrel% HSub.hSub fmt1 let3)
  let let211 := (binrel% HSub.hSub let210 fmt0)
  let let212 := (xx5fcount let211)
  let let213 := (binrel% HMul.hMul let39 let212)
  let let214 := (sx5fcount let211)
  let let215 := (binrel% HMul.hMul let39 let214)
  let let216 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let215) let213)
  let let217 := (Eq arg1 let216)
  let let218 := (binrel% HAdd.hAdd arg0 distance)
  let let219 := (binrel% HAdd.hAdd let218 fmtx5flength)
  let let220 := (binrel% HSub.hSub let219 let39)
  let let221 := (binrel% LT.lt arg1 let220)
  let let222 := (binrel% GE.ge arg1 let218)
  let let223 := (binrel% GT.gt fmt1 let94)
  let let224 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let225 := (binrel% HSub.hSub let224 let11)
  let let226 := (binrel% LT.lt fmt1 let225)
  let let227 := (binrel% GE.ge arg1 fmt0)
  let let228 := (binrel% HSub.hSub fmt0 distance)
  let let229 := (Eq arg0 let228)
  let let230 := (Eq fmt0 let13)
  let let231 := (Eq x let56)
  let let232 := (Eq s let28)
  let let233 := (Eq percent let27)
  let let234 := (Eq adrx5fhi let39)
  let let235 := (Eq adrx5fmedhi let113)
  let let236 := (Eq adrx5fmedlo let3)
  let let237 := (Eq adrx5flo let39)
  let let238 := (Eq fmtx5flength let113)
  let let239 := (Eq distance let70)
  let let240 := (And let239 (And let238 (And let237 (And let236 (And let235 (And let234 (And let233 (And let232 (And let231 (And let230 (And let229 (And let227 (And let226 (And let223 (And let222 (And let221 (And let217 (And let209 (And let180 (And let177 (And let171 (And let165 (And let158 (And let150 (And let144 (And let136 (And let128 (And let119 (And let107 (And let98 let93))))))))))))))))))))))))))))))
  let let241 := (And (And (And (And (And (And (And (And (And (And (And (And (And let239 let238) let237) let236) let235) let234) let233) let232) let231) (And (And (And (And (And (And (And let230 let229) let227) let226) let223) let222) let221) let217)) let209) (And (And (And (And (And (And (And (And (And let180 let177) let171) let165) let158) let150) let144) let136) let128) let119)) (And let107 let98)) let93)
  let let242 := (binrel% HMul.hMul let31 arg1)
  let let243 := (binrel% HAdd.hAdd fmt0 let242)
  let let244 := (binrel% GE.ge let243 let11)
  let let245 := (Not let244)
  let let246 := (binrel% HMul.hMul let31 fmtx5flength)
  let let247 := (binrel% HMul.hMul let31 fmt0)
  let let248 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let247 let246))
  let let249 := (binrel% GE.ge let248 let31)
  let let250 := (binrel% HAdd.hAdd let31 let224)
  let let251 := (binrel% GE.ge fmt1 let250)
  let let252 := (binrel% HAdd.hAdd fmt1 let247)
  let let253 := (binrel% GE.ge let252 let3)
  let let254 := (Not let253)
  let let255 := (binrel% HAdd.hAdd let11 fmt0)
  let let256 := (binrel% LE.le fmt1 let255)
  let let257 := (binrel% HMul.hMul let31 distance)
  let let258 := (binrel% HMul.hMul let31 arg0)
  let let259 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let258 let257))
  let let260 := (binrel% GE.ge let259 let13)
  let let261 := (binrel% HMul.hMul let31 let39)
  let let262 := (binrel% HAdd.hAdd let219 let261)
  let let263 := (Eq let17 let11)
  let let264 := (Eq let13 let32)
  let let265 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let261)))
  let let266 := (Neg.neg let39)
  let let267 := (binrel% HAdd.hAdd let266 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let268 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let266)))
  let let269 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let258 (binrel% HAdd.hAdd let246 let257)))
  let let270 := (binrel% GE.ge let269 let266)
  let let271 := (binrel% GE.ge arg1 let267)
  let let272 := (binrel% HMul.hMul let31 let3)
  let let273 := (Eq s let147)
  let let274 := (Eq x let147)
  let let275 := (Eq adrx5flo let147)
  let let276 := (Eq adrx5fhi let147)
  let let277 := (Eq adrx5flo let141)
  let let278 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let50 let52))
  let let279 := (Eq adrx5fmedlo let141)
  let let280 := (Eq adrx5fhi let141)
  let let281 := (Eq adrx5flo let133)
  let let282 := (Eq adrx5fmedlo let133)
  let let283 := (Eq adrx5fmedhi let133)
  let let284 := (Eq adrx5fhi let133)
  let let285 := (And let9 let45)
  let let286 := (And let34 (And let145 let285))
  let let287 := (Not let286)
  let let288 := (Implies let286 False)
  let let289 := (Eq adrx5fmedlo let125)
  let let290 := (Eq s let141)
  let let291 := (binrel% LT.lt fmt1 let39)
  let let292 := (Eq s let133)
  let let293 := (Eq let13 let5)
  let let294 := (binrel% HAdd.hAdd let11 let18)
  let let295 := (Eq let17 let294)
  let let296 := (binrel% HAdd.hAdd fmt0 let257)
  let let297 := (Eq fmt0 let218)
  let let298 := (Eq arg0 let296)
  let let299 := (Eq s let125)
  let let300 := (binrel% GE.ge fmt1 let225)
  let let301 := (Not let300)
  let let302 := (Eq let17 (binrel% HAdd.hAdd let31 let159))
  let let303 := (binrel% HAdd.hAdd let11 let17)
  let let304 := (Eq let159 let303)
  let let305 := (Eq let45 let45)
  let let306 := (binrel% LT.lt let51 let13)
  let let307 := (Eq let159 (binrel% HAdd.hAdd let31 let151))
  let let308 := (binrel% HAdd.hAdd let11 let159)
  let let309 := (Eq let151 let308)
  let let310 := (binrel% HAdd.hAdd let31 let12)
  let let311 := (Eq let14 let310)
  let let312 := (And let34 (And let21 (And let19 (And let311 let10))))
  let let313 := (Not let312)
  let let314 := (Implies let312 False)
  let let315 := (binrel% GE.ge let8 let1)
  let let316 := (binrel% HMul.hMul let39 let6)
  let let317 := (binrel% HMul.hMul let39 let7)
  let let318 := (binrel% HAdd.hAdd let317 let316)
  let let319 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let318)
  let let320 := (binrel% GE.ge let319 let266)
  let let321 := (binrel% HAdd.hAdd let73 let318)
  let let322 := (binrel% HAdd.hAdd let3 let321)
  let let323 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd (binrel% HMul.hMul let266 let7) (binrel% HMul.hMul let266 let6)))
  let let324 := (binrel% HMul.hMul let31 let321)
  let let325 := (Not let254)
  let let326 := (Neg.neg let113)
  let let327 := (binrel% HAdd.hAdd let326 let318)
  let let328 := (binrel% HAdd.hAdd let1 let321)
  let let329 := (Eq let328 let327)
  let let330 := (binrel% HAdd.hAdd let53 let54)
  let let331 := (binrel% HAdd.hAdd let11 let14)
  let let332 := (Eq let12 let331)
  let let333 := (Eq let147 let28)
  let let334 := (Eq let28 let147)
  let let335 := (And let21 let285)
  let let336 := (And let23 let335)
  let let337 := (Not let336)
  let let338 := (Implies let336 False)
  let let339 := (Eq let147 let56)
  let let340 := (Eq let56 let147)
  let let341 := (Eq percent let125)
  let let342 := (Eq let147 let113)
  let let343 := (Eq let113 let147)
  let let344 := (Eq x let116)
  let let345 := (Eq let147 let39)
  let let346 := (Eq let39 let147)
  let let347 := (binrel% HAdd.hAdd let3 arg1)
  let let348 := (Eq let120 (binrel% HAdd.hAdd let31 let108))
  let let349 := (binrel% HAdd.hAdd let11 let120)
  let let350 := (Eq let108 let349)
  let let351 := (Eq let141 let113)
  let let352 := (Eq let113 let141)
  let let353 := (Eq let141 let39)
  let let354 := (Eq let39 let141)
  let let355 := (Not False)
  let let356 := (Eq percent let116)
  let let357 := (Eq let133 let3)
  let let358 := (Eq let3 let133)
  let let359 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let215 let213))
  let let360 := (Eq let141 let28)
  let let361 := (Eq let28 let141)
  let let362 := (binrel% HAdd.hAdd fmt1 let272)
  let let363 := (Eq let133 let39)
  let let364 := (Eq let39 let133)
  let let365 := (Eq let125 let3)
  let let366 := (Eq let3 let125)
  let let367 := (binrel% HMul.hMul let31 let11)
  let let368 := (binrel% HAdd.hAdd let224 let367)
  let let369 := (binrel% HMul.hMul let31 let73)
  let let370 := (Eq let116 let3)
  let let371 := (Eq let3 let116)
  let let372 := (Eq let159 let151)
  let let373 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let326 let73)))))
  let let374 := (binrel% HAdd.hAdd let3 fmt0)
  let let375 := (Eq let147 let27)
  let let376 := (Eq let27 let147)
  let let377 := (binrel% HAdd.hAdd let11 let151)
  let let378 := (Eq let116 let39)
  let let379 := (Eq let39 let116)
  let let380 := (Eq s let116)
  let let381 := (binrel% HMul.hMul let31 let6)
  let let382 := (Eq let7 (binrel% HAdd.hAdd let3 let381))
  let let383 := (Or let382 False)
  let let384 := (Eq let133 let28)
  let let385 := (Eq let28 let133)
  let let386 := (Eq let114 let28)
  let let387 := (Eq let28 let114)
  let let388 := (Eq let141 let56)
  let let389 := (Eq let56 let141)
  let let390 := (binrel% HAdd.hAdd let73 let70)
  let let391 := (Eq let151 let152)
  let let392 := (Eq let90 let27)
  let let393 := (Eq let27 let90)
  let let394 := (Or let148 (Or let208 (Or let207 (Or let206 (Or let205 (Or let204 (Or let203 (Or let202 (Or let142 (Or let178 (Or let146 (Or let201 (Or let200 (Or let199 (Or let198 (Or let197 (Or let134 (Or let175 (Or let140 (Or let196 (Or let195 (Or let194 (Or let193 (Or let192 (Or let126 (Or let169 (Or let132 (Or let191 (Or let190 (Or let189 (Or let188 (Or let187 (Or let117 (Or let163 (Or let124 (Or let186 (Or let185 (Or let184 (Or let183 let182)))))))))))))))))))))))))))))))))))))))
  let let395 := (binrel% HAdd.hAdd let39 fmt0)
  let let396 := (binrel% HAdd.hAdd let11 fmt1)
  let let397 := (selectx5fformat let396)
  let let398 := (Eq let397 let28)
  let let399 := (Eq let28 let397)
  let let400 := (Eq let125 let28)
  let let401 := (Eq let28 let125)
  let let402 := (binrel% HAdd.hAdd let4 let252)
  let let403 := (binrel% HAdd.hAdd let5 let247)
  let let404 := (Eq let116 let113)
  let let405 := (Eq let113 let116)
  let let406 := (Eq let108 let109)
  let let407 := (binrel% HAdd.hAdd let31 let321)
  let let408 := (binrel% HAdd.hAdd let210 let247)
  let let409 := (Eq let133 let113)
  let let410 := (Eq let113 let133)
  let let411 := (Eq let40 let42)
  let let412 := (binrel% HAdd.hAdd let1 arg1)
  let let413 := (selectx5fformat let412)
  let let414 := (Eq adrx5fhi let413)
  let let415 := (Eq let413 adrx5fhi)
  let let416 := (Eq adrx5fmedlo let116)
  let let417 := (binrel% HAdd.hAdd let39 let13)
  let let418 := (Eq adrx5fhi let116)
  let let419 := (binrel% HAdd.hAdd fmt1 let13)
  let let420 := (selectx5fformat let321)
  let let421 := (Eq let420 let39)
  let let422 := (Eq let39 let420)
  let let423 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) let318)
  let let424 := (Eq let407 let423)
  let let425 := (binrel% HMul.hMul let31 let70)
  let let426 := (binrel% HMul.hMul let31 let113)
  let let427 := (binrel% HAdd.hAdd let369 (binrel% HAdd.hAdd let426 let425))
  let let428 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 let427)))
  let let429 := (binrel% HAdd.hAdd let321 let427)
  let let430 := (Eq let108 (binrel% HAdd.hAdd let31 let109))
  let let431 := (binrel% HAdd.hAdd let11 let108)
  let let432 := (Eq let109 let431)
  let let433 := (Rat.ofInt let7)
  let let434 := (binrel% HMul.hMul let50 let7)
  let let435 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) let318)
  let let436 := (selectx5fformat let435)
  let let437 := (Eq let436 let3)
  let let438 := (Eq let3 let436)
  let let439 := (Eq let125 let39)
  let let440 := (Eq let39 let125)
  let let441 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let367))
  let let442 := (Eq let17 let159)
  let let443 := (Eq let13 let321)
  let let444 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let31 let7) let381))
  let let445 := (binrel% HAdd.hAdd let433 (binrel% HAdd.hAdd let65 let444))
  let let446 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) let318)
  let let447 := (selectx5fformat let446)
  let let448 := (Eq let447 let113)
  let let449 := (Eq let113 let447)
  let let450 := (Eq adrx5flo let125)
  let let451 := (binrel% HAdd.hAdd let31 arg1)
  let let452 := (Eq fmt0 let451)
  let let453 := (Eq arg1 let255)
  let let454 := (binrel% HAdd.hAdd let11 let321)
  let let455 := (binrel% GE.ge arg1 let220)
  let let456 := (Not let455)
  let let457 := (binrel% HAdd.hAdd let4 let419)
  let let458 := (selectx5fformat let327)
  let let459 := (Eq let458 let39)
  let let460 := (Eq let39 let458)
  let let461 := (Eq x let125)
  let let462 := (Eq let454 let435)
  let let463 := (Eq let12 let11)
  let let464 := (Eq let13 let310)
  let let465 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let31))
  let let466 := (And let392 (And let398 (And let421 (And let437 (And let448 let459)))))
  let let467 := (Not let466)
  let let468 := (Eq fmt1 let39)
  let let469 := (Eq fmt1 let11)
  let let470 := (Eq fmt1 let13)
  let let471 := (Or let470 (Or let469 (Or let45 (Or let2 let468))))
  let let472 := (Eq let114 let56)
  let let473 := (Eq let116 let27)
  let let474 := (And let473 let472)
  let let475 := (smtIte let474 let430 let406 Prop)
  let let476 := (Eq let120 let108)
  let let477 := (Eq let116 let56)
  let let478 := (Eq let125 let27)
  let let479 := (And let478 let477)
  let let480 := (smtIte let479 let348 let476 Prop)
  let let481 := (Eq let12 let120)
  let let482 := (Eq let12 (binrel% HAdd.hAdd let31 let120))
  let let483 := (Eq let125 let56)
  let let484 := (Eq let133 let27)
  let let485 := (And let484 let483)
  let let486 := (smtIte let485 let482 let481 Prop)
  let let487 := (Eq let133 let56)
  let let488 := (Eq let141 let27)
  let let489 := (And let488 let487)
  let let490 := (smtIte let489 let311 let15 Prop)
  let let491 := (And let375 let388)
  let let492 := (smtIte let491 let145 let21 Prop)
  let let493 := (Eq let151 (binrel% HAdd.hAdd let31 let152))
  let let494 := (And let473 let386)
  let let495 := (smtIte let494 let493 let391 Prop)
  let let496 := (Eq let116 let28)
  let let497 := (And let478 let496)
  let let498 := (smtIte let497 let307 let372 Prop)
  let let499 := (And let484 let400)
  let let500 := (smtIte let499 let302 let442 Prop)
  let let501 := (And let488 let384)
  let let502 := (smtIte let501 let33 let19 Prop)
  let let503 := (And let375 let360)
  let let504 := (smtIte let503 let23 let34 Prop)
  let let505 := (Eq let125 let113)
  let let506 := (Eq let141 let3)
  let let507 := (Eq let147 let3)
  let let508 := (Or let375 (Or let333 (Or let339 (Or let345 (Or let507 (Or let342 (Or let345 (Or let202 (Or let488 (Or let360 (Or let388 (Or let353 (Or let506 (Or let351 (Or let353 (Or let197 (Or let484 (Or let384 (Or let487 (Or let363 (Or let357 (Or let409 (Or let363 (Or let192 (Or let478 (Or let400 (Or let483 (Or let439 (Or let365 (Or let505 (Or let439 (Or let187 (Or let473 (Or let496 (Or let477 (Or let378 (Or let370 (Or let404 (Or let378 let182)))))))))))))))))))))))))))))))))))))))
  let let509 := (And let508 (And let504 (And let502 (And let500 (And let498 (And let495 (And let492 (And let490 (And let486 (And let480 (And let475 (And let471 (And let382 let467)))))))))))))
  let let510 := (Not let315)
  let let511 := (binrel% GE.ge fmt1 let3)
  let let512 := (And let9 (And let41 (And let511 (And let510 let509))))
  let let513 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let9 (And let41 (And let511 (And let9 (And let510 (And True let509)))))))))))))))))
  let let514 := (And let34 (And let145 let20))
  let let515 := (Not let514)
  let let516 := (Implies let514 False)
  let let517 := (And let34 let22)
  let let518 := (Not let517)
  let let519 := (Implies let517 False)
  let let520 := (Eq let27 let27)
  let let521 := (Eq let3 let147)
  let let522 := (Eq let28 let116)
  let let523 := (Eq let13 let423)
  let let524 := (Eq adrx5fmedhi let125)
  let let525 := (And let91 (And let89 (And let86 (And let84 (And let81 let78)))))
  let let526 := (binrel% HAdd.hAdd let3 let13)
  let let527 := (Eq adrx5fmedhi let116)
  let let528 := (Eq s let397)
  let let529 := (Eq let397 s)
  let let530 := (binrel% LE.le fmt1 let94)
  let let531 := (Not let530)
  let let532 := (Eq let322 let446)
  let let533 := (Eq let27 let125)
  let let534 := (Eq let3 let141)
  let let535 := (Not let29)
  let let536 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 (binrel% HAdd.hAdd let70 let73))))
  let let537 := (Eq let56 let114)
  let let538 := (Eq fmt0 arg1)
  let let539 := (Eq arg1 fmt0)
  let let540 := (Eq let27 let116)
  let let541 := (Eq let56 let116)
  let let542 := (Eq adrx5fmedhi let147)
  let let543 := (Eq let56 let125)
  let let544 := (binrel% HAdd.hAdd let11 arg1)
  let let545 := (selectx5fformat let544)
  let let546 := (Eq adrx5fmedlo let545)
  let let547 := (Eq let545 adrx5fmedlo)
  let let548 := (binrel% HAdd.hAdd let1 let13)
  let let549 := (binrel% HAdd.hAdd let326 fmt1)
  let let550 := (binrel% GE.ge let549 let31)
  let let551 := (binrel% HAdd.hAdd let11 let13)
  let let552 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let13 let326))
  let let553 := (Not let9)
  let let554 := (Not let553)
  let let555 := (Eq adrx5fmedhi let141)
  let let556 := (binrel% GE.ge let323 let11)
  let let557 := (binrel% HAdd.hAdd let13 let323)
  let let558 := (Eq percent let141)
  let let559 := (Eq adrx5fmedlo let147)
  let let560 := (Eq let27 let133)
  let let561 := (Eq let13 let13)
  let let562 := (Eq percent let147)
  let let563 := (Eq let56 let133)
  let let564 := (Eq let56 let56)
  let let565 := (Eq let27 let141)
  let let566 := (Eq let28 let28)
  let let567 := (binrel% HMul.hMul let51 let8)
  let let568 := (Eq let152 let377)
  let let569 := (Eq let113 let113)
  let let570 := (Eq s let114)
  let let571 := (Eq let3 let3)
  let let572 := (Eq let39 let39)
  let let573 := (binrel% HAdd.hAdd let1 fmt0)
  let let574 := (binrel% GE.ge let321 let13)
  let let575 := (selectx5fformat let347)
  let let576 := (Eq adrx5fmedhi let575)
  let let577 := (Eq let575 adrx5fmedhi)
  let let578 := (binrel% HAdd.hAdd let369 let425)
  let let579 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 let578)))
  let let580 := (binrel% HAdd.hAdd let321 let578)
  let let581 := (Eq adrx5flo let85)
  let let582 := (Eq adrx5flo let116)
  let let583 := (Eq adrx5fhi let125)
  let let584 := (Eq percent let90)
  let let585 := (binrel% LE.le let53 let51)
  let let586 := (Eq let70 let70)
  let let587 := (Or let106 (Or let105 (Or let104 (Or let102 let100))))
  let let588 := (And let34 let335)
  let let589 := (Not let588)
  let let590 := (Implies let588 False)
  let let591 := (binrel% HAdd.hAdd fmt1 let4)
  let let592 := (Eq let113 let125)
  let let593 := (Eq x let114)
  let let594 := (binrel% HAdd.hAdd let11 let12)
  let let595 := (Eq let120 let594)
  let let596 := (Eq let321 let321)
  let let597 := (Eq percent let133)
  let let598 := (binrel% HMul.hMul let31 let13)
  let let599 := (Eq x let133)
  let let600 := (Eq x let141)
  let let601 := (And let584 (And let528 (And let581 (And let546 (And let576 let414)))))
  let let602 := (Not let601)
  let let603 := (Or let538 let452)
  let let604 := (Eq fmt1 let395)
  let let605 := (Eq fmt1 let573)
  let let606 := (Eq fmt1 let374)
  let let607 := (Eq fmt1 let255)
  let let608 := (Eq fmt1 fmt0)
  let let609 := (Or let608 (Or let607 (Or let606 (Or let605 let604))))
  let let610 := (And let356 let593)
  let let611 := (smtIte let610 let430 let406 Prop)
  let let612 := (And let341 let344)
  let let613 := (smtIte let612 let348 let476 Prop)
  let let614 := (And let597 let461)
  let let615 := (smtIte let614 let482 let481 Prop)
  let let616 := (And let558 let599)
  let let617 := (smtIte let616 let311 let15 Prop)
  let let618 := (And let562 let600)
  let let619 := (smtIte let618 let145 let21 Prop)
  let let620 := (And let356 let570)
  let let621 := (smtIte let620 let493 let391 Prop)
  let let622 := (And let341 let380)
  let let623 := (smtIte let622 let307 let372 Prop)
  let let624 := (And let597 let299)
  let let625 := (smtIte let624 let302 let442 Prop)
  let let626 := (And let558 let292)
  let let627 := (smtIte let626 let33 let19 Prop)
  let let628 := (And let562 let290)
  let let629 := (smtIte let628 let23 let34 Prop)
  let let630 := (Or let562 (Or let273 (Or let274 (Or let275 (Or let559 (Or let542 (Or let276 (Or let202 (Or let558 (Or let290 (Or let600 (Or let277 (Or let279 (Or let555 (Or let280 (Or let197 (Or let597 (Or let292 (Or let599 (Or let281 (Or let282 (Or let283 (Or let284 (Or let192 (Or let341 (Or let299 (Or let461 (Or let450 (Or let289 (Or let524 (Or let583 (Or let187 (Or let356 (Or let380 (Or let344 (Or let582 (Or let416 (Or let527 (Or let418 let182)))))))))))))))))))))))))))))))))))))))
  let let631 := (xx5fcount let402)
  let let632 := (binrel% HMul.hMul let39 let631)
  let let633 := (sx5fcount let402)
  let let634 := (binrel% HMul.hMul let39 let633)
  let let635 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let634 let632))
  let let636 := (Eq arg1 let635)
  let let637 := (Not let270)
  let let638 := (Not let249)
  let let639 := (And let239 (And let238 (And let237 (And let236 (And let235 (And let234 (And let233 (And let232 (And let231 (And let230 (And let297 (And let245 (And let638 (And let253 (And let260 (And let637 (And let636 (And let630 (And let629 (And let627 (And let625 (And let623 (And let621 (And let619 (And let617 (And let615 (And let613 (And let611 (And let609 (And let603 let602))))))))))))))))))))))))))))))
  let let640 := (selectx5fformat let328)
  let let641 := (Eq let39 let640)
  let let642 := (selectx5fformat let322)
  let let643 := (Eq let113 let642)
  let let644 := (selectx5fformat let454)
  let let645 := (Eq let3 let644)
  let let646 := (And let393 (And let399 (And let422 (And let645 (And let643 let641)))))
  let let647 := (Not let646)
  let let648 := (Eq let13 let407)
  let let649 := (Or let443 let648)
  let let650 := (Eq fmt1 let417)
  let let651 := (Eq fmt1 let548)
  let let652 := (Eq fmt1 let526)
  let let653 := (Eq fmt1 let551)
  let let654 := (Or let470 (Or let653 (Or let652 (Or let651 let650))))
  let let655 := (And let540 let537)
  let let656 := (smtIte let655 let430 let406 Prop)
  let let657 := (And let533 let541)
  let let658 := (smtIte let657 let348 let476 Prop)
  let let659 := (And let560 let543)
  let let660 := (smtIte let659 let482 let481 Prop)
  let let661 := (And let565 let563)
  let let662 := (smtIte let661 let311 let15 Prop)
  let let663 := (And let376 let389)
  let let664 := (smtIte let663 let145 let21 Prop)
  let let665 := (And let540 let387)
  let let666 := (smtIte let665 let493 let391 Prop)
  let let667 := (And let533 let522)
  let let668 := (smtIte let667 let307 let372 Prop)
  let let669 := (And let560 let401)
  let let670 := (smtIte let669 let302 let442 Prop)
  let let671 := (And let565 let385)
  let let672 := (smtIte let671 let33 let19 Prop)
  let let673 := (And let376 let361)
  let let674 := (smtIte let673 let23 let34 Prop)
  let let675 := (Or let376 (Or let334 (Or let340 (Or let346 (Or let521 (Or let343 (Or let346 (Or let202 (Or let565 (Or let361 (Or let389 (Or let354 (Or let534 (Or let352 (Or let354 (Or let197 (Or let560 (Or let385 (Or let563 (Or let364 (Or let358 (Or let410 (Or let364 (Or let192 (Or let533 (Or let401 (Or let543 (Or let440 (Or let366 (Or let592 (Or let440 (Or let187 (Or let540 (Or let522 (Or let541 (Or let379 (Or let371 (Or let405 (Or let379 let182)))))))))))))))))))))))))))))))))))))))
  let let676 := (binrel% HAdd.hAdd fmt1 let598)
  let let677 := (binrel% HAdd.hAdd let4 let676)
  let let678 := (xx5fcount let677)
  let let679 := (binrel% HMul.hMul let39 let678)
  let let680 := (sx5fcount let677)
  let let681 := (binrel% HMul.hMul let39 let680)
  let let682 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let681 let679))
  let let683 := (Eq let321 let682)
  let let684 := (binrel% GE.ge let429 let266)
  let let685 := (Not let684)
  let let686 := (binrel% GE.ge let580 let13)
  let let687 := (binrel% GE.ge let676 let3)
  let let688 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let598 let426))
  let let689 := (binrel% GE.ge let688 let31)
  let let690 := (Not let689)
  let let691 := (binrel% HAdd.hAdd let13 let324)
  let let692 := (binrel% GE.ge let691 let11)
  let let693 := (Not let692)
  let let694 := (Eq let13 let390)
  let let695 := (And let586 (And let569 (And let572 (And let571 (And let569 (And let572 (And let520 (And let566 (And let564 (And let561 (And let694 (And let693 (And let690 (And let687 (And let686 (And let685 (And let683 (And let675 (And let674 (And let672 (And let670 (And let668 (And let666 (And let664 (And let662 (And let660 (And let658 (And let656 (And let654 (And let649 let647))))))))))))))))))))))))))))))
  let let696 := (Eq And And)
  let let697 := (Eq fmt1 fmt1)
  let let698 := (Eq Or Or)
  let let699 := (Eq let406 let406)
  let let700 := (Eq let430 let430)
  let let701 := (Eq let476 let476)
  let let702 := (Eq let348 let348)
  let let703 := (Eq let481 let481)
  let let704 := (Eq let482 let482)
  let let705 := (Eq let15 let15)
  let let706 := (Eq let311 let311)
  let let707 := (Eq let21 let21)
  let let708 := (Eq let145 let145)
  let let709 := (Eq let391 let391)
  let let710 := (Eq let493 let493)
  let let711 := (Eq let372 let372)
  let let712 := (Eq let307 let307)
  let let713 := (Eq let442 let442)
  let let714 := (Eq let302 let302)
  let let715 := (Eq let19 let19)
  let let716 := (Eq let33 let33)
  let let717 := (Eq let34 let34)
  let let718 := (Eq let23 let23)
  let let719 := (Eq let182 let182)
  let let720 := (Eq let187 let187)
  let let721 := (Eq let192 let192)
  let let722 := (Eq let197 let197)
  let let723 := (Eq let202 let202)
  let let724 := (Eq let4 let4)
  let let725 := (Eq let266 let266)
  let let726 := (Eq let31 let31)
  let let727 := (Eq let11 let11)
  let let728 := (Eq arg1 let321)
  let let729 := (And let230 (And let231 (And let232 (And let233 (And let234 (And let235 (And let236 (And let237 (And let238 let239)))))))))
  let let730 := (And let74 let729)
  let let731 := (Eq arg1 arg1)
  let let732 := (Eq arg0 arg0)
  let let733 := (Eq let13 let72)
  let let734 := (Eq arg1 let682)
  let let735 := (Eq let635 let682)
  let let736 := (Eq let632 let679)
  let let737 := (Eq let631 let678)
  let let738 := (Eq let402 let677)
  let let739 := (Eq let247 let598)
  let let740 := (Eq let634 let681)
  let let741 := (Eq let633 let680)
  let let742 := (Not let489)
  let let743 := (Not let487)
  let let744 := (Not let19)
  let let745 := (Not let34)
  let let746 := (Or let745 let46)
  let let747 := (Not let21)
  let let748 := (Or let747 let46)
  let let749 := (Or let553 let46)
  let let750 := (Or let747 let749)
  let let751 := (Eq let13 let7)
  let let752 := (Eq let13 let6)
  let let753 := (And let9 (And let752 let751))
  let let754 := (Implies let588 let753)
  let let755 := (Eq let753 False)
  let let756 := (Or (Not let751) False)
  let let757 := (Not let752)
  let let758 := (Eq let7 let13)
  let let759 := (Not let758)
  let let760 := (Or let759 False)
  let let761 := (binrel% HAdd.hAdd let67 let68)
  let let762 := (binrel% HAdd.hAdd let67 let761)
  let let763 := (binrel% HAdd.hAdd let434 (binrel% HAdd.hAdd let66 let567))
  let let764 := (binrel% LE.le let763 let762)
  let let765 := (binrel% LE.le let567 let68)
  let let766 := (And let306 let9)
  let let767 := (Implies let766 let765)
  let let768 := (Eq let66 let67)
  let let769 := (Eq let6 let13)
  let let770 := (And let64 let769)
  let let771 := (Implies let770 let768)
  let let772 := (Eq let434 let67)
  let let773 := (And let64 let758)
  let let774 := (Implies let773 let772)
  let let775 := (And let293 let34)
  let let776 := (Implies let775 let751)
  let let777 := (Or let745 let751)
  let let778 := (Not let293)
  let let779 := (Or let778 let777)
  let let780 := (Eq let18 let7)
  let let781 := (Eq let5 let13)
  let let782 := (Eq let13 let18)
  let let783 := (Eq let45 let293)
  let let784 := (And let293 let21)
  let let785 := (Implies let784 let752)
  let let786 := (Or let747 let752)
  let let787 := (Or let778 let786)
  let let788 := (Eq let14 let6)
  let let789 := (Eq let13 let14)
  let let790 := (Not let491)
  let let791 := (Not let145)
  let let792 := (Eq let11 let6)
  let let793 := (And let9 (And let792 let751))
  let let794 := (Implies let286 let793)
  let let795 := (Eq let793 False)
  let let796 := (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let63 let68))
  let let797 := (binrel% LE.le let763 let796)
  let let798 := (Eq let66 let63)
  let let799 := (Eq let6 let11)
  let let800 := (And let64 let799)
  let let801 := (And let293 let145)
  let let802 := (Or let791 let792)
  let let803 := (Eq let11 let14)
  let let804 := (Not let503)
  let let805 := (Or let804 let804)
  let let806 := (Not let388)
  let let807 := (Not let360)
  let let808 := (Or let806 let807)
  let let809 := (Implies let388 let807)
  let let810 := (Not let23)
  let let811 := (Eq let11 let7)
  let let812 := (And let9 (And let752 let811))
  let let813 := (Implies let336 let812)
  let let814 := (Eq let812 False)
  let let815 := (Eq let7 let11)
  let let816 := (Not let815)
  let let817 := (binrel% HAdd.hAdd let63 let761)
  let let818 := (binrel% LE.le let763 let817)
  let let819 := (Eq let434 let63)
  let let820 := (And let64 let815)
  let let821 := (And let293 let23)
  let let822 := (Or let810 let811)
  let let823 := (Eq let11 let18)
  let let824 := (Not let511)
  let let825 := (Or let824 (Or let40 (Or let45 let2)))
  let let826 := (Or let824 (Or let42 (Or let47 let2)))
  let let827 := (And let511 (And let41 let46))
  let let828 := (Eq let1 fmt1)
  let let829 := (And let511 (And let46 let41))
  let let830 := (Not let2)
  let let831 := (Or let744 let830)
  let let832 := (Or let744 (Or let747 let830))
  let let833 := (Or let745 let747)
  let let834 := (Not let15)
  let let835 := (Or let834 let830)
  let let836 := (Or let747 let835)
  let let837 := (Or let745 let836)
  let let838 := (Or let744 let836)
  let let839 := (Or let553 let830)
  let let840 := (Or let834 let839)
  let let841 := (Or let744 let840)
  let let842 := (Or let747 let841)
  let let843 := (Implies let517 let753)
  let let844 := (And let38 (And let19 let34))
  let let845 := (Implies let844 let751)
  let let846 := (Not let38)
  let let847 := (Or let846 (Or let744 let777))
  let let848 := (Eq let17 let7)
  let let849 := (Eq let5 let11)
  let let850 := (Eq let2 let38)
  let let851 := (And let38 (And let15 let21))
  let let852 := (Implies let851 let752)
  let let853 := (Or let846 (Or let834 let786))
  let let854 := (Eq let12 let6)
  let let855 := (Not let501)
  let let856 := (Not let33)
  let let857 := (Implies let35 let812)
  let let858 := (Or let834 (Or let553 (Or let830 let812)))
  let let859 := (Eq let11 let17)
  let let860 := (And let38 let859)
  let let861 := (And let33 let34)
  let let862 := (Not let311)
  let let863 := (Implies let312 let793)
  let let864 := (Or let553 (Or let830 let793))
  let let865 := (Eq let11 let12)
  let let866 := (And let38 let865)
  let let867 := (And let311 let21)
  let let868 := (Not let488)
  let let869 := (Or let807 let868)
  let let870 := (Implies let360 let868)
  let let871 := (Eq let488 False)
  let let872 := (Implies let24 let812)
  let let873 := (And let38 (And let19 let23))
  let let874 := (Or let806 let790)
  let let875 := (Or let806 let868)
  let let876 := (Implies let388 let868)
  let let877 := (Implies let514 let793)
  let let878 := (And let38 (And let15 let145))
  let let879 := (Not let384)
  let let880 := (Or let743 let879)
  let let881 := (Implies let487 let879)
(Eq let26 let25) → let30 → (Eq let37 let36) → (Eq let38 let2) → let43 → (Eq let44 True) → (Eq let49 let48) → let49 → (Eq let55 let51) → (Eq let59 let58) → let59 → (Eq let62 let61) → (Eq let63 let50) → (Eq let64 True) → (Eq let66 let65) → (Eq let67 let53) → (Eq let68 let52) → (Eq let69 False) → (Eq let72 let71) → (Eq let75 let74) → (Eq let241 let240) → (Eq let227 let245) → (Eq let251 let249) → (Eq let256 let254) → (Eq let222 let260) → (Eq let220 let262) → (Eq let264 let263) → (Eq let262 let265) → (Eq let261 let266) → (Eq let268 let267) → (Eq let271 let270) → (Eq let272 let4) → (Eq let208 let273) → (Eq let207 let274) → (Eq let206 let275) → (Eq let203 let276) → (Eq let201 let277) → (Eq let278 let51) → (Eq let200 let279) → (Eq let198 let280) → (Eq let196 let281) → (Eq let195 let282) → (Eq let194 let283) → (Eq let193 let284) → (Eq let288 let287) → (Eq let190 let289) → (Eq let178 let290) → (Eq let291 let41) → (Eq let175 let292) → (Eq let293 let45) → (Eq let295 let33) → (Eq let228 let296) → (Eq let172 let19) → (Eq let298 let297) → (Eq let169 let299) → (Eq let226 let301) → (Eq let304 let302) → (Eq let305 True) → (Eq let306 True) → (Eq let309 let307) → (Eq let314 let313) → (Eq let320 let315) → (Eq let322 let322) → (Eq let324 let323) → (Eq let325 let253) → let329 → (Eq let330 let52) → (Eq let332 let311) → (Eq let334 let333) → (Eq let338 let337) → (Eq let340 let339) → (Eq let126 let341) → (Eq let343 let342) → (Eq let124 let344) → (Eq let346 let345) → (Eq let79 let347) → (Eq let350 let348) → (Eq let352 let351) → (Eq let354 let353) → (Eq let355 True) → (Eq let117 let356) → (Eq let358 let357) → (Eq let216 let359) → (Eq let361 let360) → (Eq let210 let362) → (Eq let364 let363) → (Eq let366 let365) → (Eq let225 let368) → (Eq let369 let70) → (Eq let371 let370) → (Eq let160 let372) → (Eq let373 let319) → (Eq let103 let374) → (Eq let376 let375) → (Eq let154 let377) → (Eq let379 let378) → (Eq let367 let31) → (Eq let163 let380) → (Eq let383 let382) → (Eq let385 let384) → (Eq let387 let386) → (Eq let389 let388) → (Eq let390 let13) → (Eq let153 let391) → (Eq let161 let308) → (Eq let393 let392) → (Eq let209 let394) → (Eq let99 let395) → (Eq let399 let398) → (Eq let401 let400) → (Eq let403 let402) → (Eq let405 let404) → (Eq let110 let406) → (Eq let407 let407) → (Eq let211 let408) → (Eq let410 let409) → (Eq let43 let411) → (Eq let415 let414) → (Eq let185 let416) → (Eq let417 let39) → (Eq let183 let418) → (Eq let419 fmt1) → (Eq let422 let421) → let424 → (Eq let429 let428) → (Eq let432 let430) → (Eq let434 let433) → (Eq let438 let437) → (Eq let440 let439) → (Eq let368 let441) → (Eq let166 let442) → (Eq let426 let326) → (Eq let443 let382) → (Eq let445 let53) → (Eq let449 let448) → (Eq let191 let450) → (Eq let453 let452) → (Eq let454 let454) → (Eq let221 let456) → (Eq let457 let5) → (Eq let460 let459) → (Eq let132 let461) → let462 → (Eq let464 let463) → (Eq let465 let250) → (Eq let513 let512) → (Eq let516 let515) → (Eq let519 let518) → (Eq let520 True) → (Eq let521 let507) → (Eq let522 let496) → (Eq let167 let303) → (Eq let523 False) → (Eq let189 let524) → (Eq let92 let525) → (Eq let526 let3) → (Eq let184 let527) → (Eq let529 let528) → (Eq let223 let531) → let532 → (Eq let533 let478) → (Eq let138 let331) → (Eq let534 let506) → (Eq let30 let535) → (Eq let536 let321) → (Eq let328 let328) → (Eq let537 let472) → (Eq let539 let538) → (Eq let540 let473) → (Eq let137 let15) → (Eq let541 let477) → (Eq let204 let542) → (Eq let543 let483) → (Eq let425 let73) → (Eq let173 let294) → (Eq let547 let546) → (Eq let548 let1) → (Eq let550 let40) → (Eq let551 let11) → (Eq let552 let549) → (Eq let554 let9) → (Eq let199 let555) → (Eq let556 let553) → let62 → (Eq let557 let323) → (Eq let142 let558) → (Eq let205 let559) → (Eq let560 let484) → (Eq let561 True) → (Eq let148 let562) → (Eq let563 let487) → (Eq let564 True) → (Eq let565 let488) → (Eq let566 True) → (Eq let567 let444) → (Eq let568 let493) → (Eq let569 True) → (Eq let156 let570) → (Eq let571 True) → (Eq let572 True) → (Eq let101 let573) → (Eq let574 let9) → (Eq let76 let412) → (Eq let577 let576) → (Eq let121 let476) → (Eq let580 let579) → (Eq let82 let544) → (Eq let86 let581) → (Eq let186 let582) → (Eq let87 let396) → (Eq let188 let583) → (Eq let91 let584) → (Eq let94 let255) → (Eq let585 False) → (Eq let96 fmt0) → (Eq let586 True) → (Eq let107 let587) → (Eq let590 let589) → (Eq let591 let5) → (Eq let592 let505) → (Eq let111 let431) → (Eq let115 let593) → (Eq let122 let349) → (Eq let129 let481) → (Eq let595 let482) → (Eq let596 True) → (Eq let130 let594) → (Eq let134 let597) → (Eq let598 let13) → (Eq let140 let599) → (Eq let146 let600) → let241 → False :=
  let let1 := (Int.ofNat 3)
  let let2 := (Eq fmt1 let1)
  let let3 := (Int.ofNat 2)
  let let4 := (Neg.neg let3)
  let let5 := (binrel% HAdd.hAdd let4 fmt1)
  let let6 := (xx5fcount let5)
  let let7 := (sx5fcount let5)
  let let8 := (binrel% HAdd.hAdd let7 let6)
  let let9 := (binrel% GE.ge let8 let3)
  let let10 := (And let9 let2)
  let let11 := (Int.ofNat 1)
  let let12 := (xx5fcount let11)
  let let13 := (Int.ofNat 0)
  let let14 := (xx5fcount let13)
  let let15 := (Eq let14 let12)
  let let16 := (And let15 let10)
  let let17 := (sx5fcount let11)
  let let18 := (sx5fcount let13)
  let let19 := (Eq let18 let17)
  let let20 := (And let19 let16)
  let let21 := (Eq let14 let13)
  let let22 := (And let21 let20)
  let let23 := (Eq let18 let11)
  let let24 := (And let23 let22)
  let let25 := (Not let24)
  let let26 := (Implies let24 False)
  let let27 := (Int.ofNat 37)
  let let28 := (Int.ofNat 115)
  let let29 := (Eq let28 let27)
  let let30 := (Eq let29 False)
  let let31 := (Neg.neg let11)
  let let32 := (binrel% HAdd.hAdd let31 let17)
  let let33 := (Eq let18 let32)
  let let34 := (Eq let18 let13)
  let let35 := (And let34 (And let21 (And let33 let16)))
  let let36 := (Not let35)
  let let37 := (Implies let35 False)
  let let38 := (Eq let11 let5)
  let let39 := (Int.ofNat 4)
  let let40 := (binrel% GE.ge fmt1 let39)
  let let41 := (Not let40)
  let let42 := (Not let41)
  let let43 := (Eq let42 let40)
  let let44 := (Eq let40 let40)
  let let45 := (Eq fmt1 let3)
  let let46 := (Not let45)
  let let47 := (Not let46)
  let let48 := (Eq let45 let47)
  let let49 := (Eq let47 let45)
  let let50 := (Rat.ofInt 1)
  let let51 := (Neg.neg let50)
  let let52 := (Neg.neg (Rat.ofInt 2))
  let let53 := (Rat.ofInt 0)
  let let54 := (binrel% HAdd.hAdd let53 let52)
  let let55 := (binrel% HAdd.hAdd let50 let54)
  let let56 := (Int.ofNat 120)
  let let57 := (Eq let56 let28)
  let let58 := (Not let57)
  let let59 := (Eq let57 False)
  let let60 := (Eq let56 let27)
  let let61 := (Not let60)
  let let62 := (Eq let60 False)
  let let63 := (binrel% HMul.hMul let50 let11)
  let let64 := (binrel% GT.gt let50 let13)
  let let65 := (Rat.ofInt let6)
  let let66 := (binrel% HMul.hMul let50 let6)
  let let67 := (binrel% HMul.hMul let50 let13)
  let let68 := (binrel% HMul.hMul let51 let3)
  let let69 := (binrel% LE.le let53 let52)
  let let70 := (Int.ofNat 8)
  let let71 := (binrel% HAdd.hAdd let70 arg0)
  let let72 := (binrel% HAdd.hAdd arg0 let70)
  let let73 := (Neg.neg let70)
  let let74 := (Eq arg0 let73)
  let let75 := (Eq let13 let71)
  let let76 := (binrel% HAdd.hAdd arg1 let1)
  let let77 := (selectx5fformat let76)
  let let78 := (Eq let77 adrx5fhi)
  let let79 := (binrel% HAdd.hAdd arg1 let3)
  let let80 := (selectx5fformat let79)
  let let81 := (Eq let80 adrx5fmedhi)
  let let82 := (binrel% HAdd.hAdd arg1 let11)
  let let83 := (selectx5fformat let82)
  let let84 := (Eq let83 adrx5fmedlo)
  let let85 := (selectx5fformat arg1)
  let let86 := (Eq let85 adrx5flo)
  let let87 := (binrel% HAdd.hAdd fmt1 let11)
  let let88 := (selectx5fformat let87)
  let let89 := (Eq let88 s)
  let let90 := (selectx5fformat fmt1)
  let let91 := (Eq let90 percent)
  let let92 := (And (And (And (And (And let91 let89) let86) let84) let81) let78)
  let let93 := (Not let92)
  let let94 := (binrel% HAdd.hAdd fmt0 let11)
  let let95 := (Eq arg1 let94)
  let let96 := (binrel% HAdd.hAdd fmt0 let13)
  let let97 := (Eq arg1 let96)
  let let98 := (Or let97 let95)
  let let99 := (binrel% HAdd.hAdd fmt0 let39)
  let let100 := (Eq fmt1 let99)
  let let101 := (binrel% HAdd.hAdd fmt0 let1)
  let let102 := (Eq fmt1 let101)
  let let103 := (binrel% HAdd.hAdd fmt0 let3)
  let let104 := (Eq fmt1 let103)
  let let105 := (Eq fmt1 let94)
  let let106 := (Eq fmt1 let96)
  let let107 := (Or (Or (Or (Or let106 let105) let104) let102) let100)
  let let108 := (xx5fcount let1)
  let let109 := (xx5fcount let39)
  let let110 := (Eq let109 let108)
  let let111 := (binrel% HAdd.hAdd let108 let11)
  let let112 := (Eq let109 let111)
  let let113 := (Int.ofNat 5)
  let let114 := (selectx5fformat let113)
  let let115 := (Eq let114 x)
  let let116 := (selectx5fformat let39)
  let let117 := (Eq let116 percent)
  let let118 := (And let117 let115)
  let let119 := (smtIte let118 let112 let110 Prop)
  let let120 := (xx5fcount let3)
  let let121 := (Eq let108 let120)
  let let122 := (binrel% HAdd.hAdd let120 let11)
  let let123 := (Eq let108 let122)
  let let124 := (Eq let116 x)
  let let125 := (selectx5fformat let1)
  let let126 := (Eq let125 percent)
  let let127 := (And let126 let124)
  let let128 := (smtIte let127 let123 let121 Prop)
  let let129 := (Eq let120 let12)
  let let130 := (binrel% HAdd.hAdd let12 let11)
  let let131 := (Eq let120 let130)
  let let132 := (Eq let125 x)
  let let133 := (selectx5fformat let3)
  let let134 := (Eq let133 percent)
  let let135 := (And let134 let132)
  let let136 := (smtIte let135 let131 let129 Prop)
  let let137 := (Eq let12 let14)
  let let138 := (binrel% HAdd.hAdd let14 let11)
  let let139 := (Eq let12 let138)
  let let140 := (Eq let133 x)
  let let141 := (selectx5fformat let11)
  let let142 := (Eq let141 percent)
  let let143 := (And let142 let140)
  let let144 := (smtIte let143 let139 let137 Prop)
  let let145 := (Eq let14 let11)
  let let146 := (Eq let141 x)
  let let147 := (selectx5fformat let13)
  let let148 := (Eq let147 percent)
  let let149 := (And let148 let146)
  let let150 := (smtIte let149 let145 let21 Prop)
  let let151 := (sx5fcount let1)
  let let152 := (sx5fcount let39)
  let let153 := (Eq let152 let151)
  let let154 := (binrel% HAdd.hAdd let151 let11)
  let let155 := (Eq let152 let154)
  let let156 := (Eq let114 s)
  let let157 := (And let117 let156)
  let let158 := (smtIte let157 let155 let153 Prop)
  let let159 := (sx5fcount let3)
  let let160 := (Eq let151 let159)
  let let161 := (binrel% HAdd.hAdd let159 let11)
  let let162 := (Eq let151 let161)
  let let163 := (Eq let116 s)
  let let164 := (And let126 let163)
  let let165 := (smtIte let164 let162 let160 Prop)
  let let166 := (Eq let159 let17)
  let let167 := (binrel% HAdd.hAdd let17 let11)
  let let168 := (Eq let159 let167)
  let let169 := (Eq let125 s)
  let let170 := (And let134 let169)
  let let171 := (smtIte let170 let168 let166 Prop)
  let let172 := (Eq let17 let18)
  let let173 := (binrel% HAdd.hAdd let18 let11)
  let let174 := (Eq let17 let173)
  let let175 := (Eq let133 s)
  let let176 := (And let142 let175)
  let let177 := (smtIte let176 let174 let172 Prop)
  let let178 := (Eq let141 s)
  let let179 := (And let148 let178)
  let let180 := (smtIte let179 let23 let34 Prop)
  let let181 := (Int.ofNat 255)
  let let182 := (Eq let116 let181)
  let let183 := (Eq let116 adrx5fhi)
  let let184 := (Eq let116 adrx5fmedhi)
  let let185 := (Eq let116 adrx5fmedlo)
  let let186 := (Eq let116 adrx5flo)
  let let187 := (Eq let125 let181)
  let let188 := (Eq let125 adrx5fhi)
  let let189 := (Eq let125 adrx5fmedhi)
  let let190 := (Eq let125 adrx5fmedlo)
  let let191 := (Eq let125 adrx5flo)
  let let192 := (Eq let133 let181)
  let let193 := (Eq let133 adrx5fhi)
  let let194 := (Eq let133 adrx5fmedhi)
  let let195 := (Eq let133 adrx5fmedlo)
  let let196 := (Eq let133 adrx5flo)
  let let197 := (Eq let141 let181)
  let let198 := (Eq let141 adrx5fhi)
  let let199 := (Eq let141 adrx5fmedhi)
  let let200 := (Eq let141 adrx5fmedlo)
  let let201 := (Eq let141 adrx5flo)
  let let202 := (Eq let147 let181)
  let let203 := (Eq let147 adrx5fhi)
  let let204 := (Eq let147 adrx5fmedhi)
  let let205 := (Eq let147 adrx5fmedlo)
  let let206 := (Eq let147 adrx5flo)
  let let207 := (Eq let147 x)
  let let208 := (Eq let147 s)
  let let209 := (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or let148 let208) let207) let206) let205) let204) let203) let202) let142) let178) let146) let201) let200) let199) let198) let197) let134) let175) let140) let196) let195) let194) let193) let192) let126) let169) let132) let191) let190) let189) let188) let187) let117) let163) let124) let186) let185) let184) let183) let182)
  let let210 := (binrel% HSub.hSub fmt1 let3)
  let let211 := (binrel% HSub.hSub let210 fmt0)
  let let212 := (xx5fcount let211)
  let let213 := (binrel% HMul.hMul let39 let212)
  let let214 := (sx5fcount let211)
  let let215 := (binrel% HMul.hMul let39 let214)
  let let216 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let215) let213)
  let let217 := (Eq arg1 let216)
  let let218 := (binrel% HAdd.hAdd arg0 distance)
  let let219 := (binrel% HAdd.hAdd let218 fmtx5flength)
  let let220 := (binrel% HSub.hSub let219 let39)
  let let221 := (binrel% LT.lt arg1 let220)
  let let222 := (binrel% GE.ge arg1 let218)
  let let223 := (binrel% GT.gt fmt1 let94)
  let let224 := (binrel% HAdd.hAdd fmt0 fmtx5flength)
  let let225 := (binrel% HSub.hSub let224 let11)
  let let226 := (binrel% LT.lt fmt1 let225)
  let let227 := (binrel% GE.ge arg1 fmt0)
  let let228 := (binrel% HSub.hSub fmt0 distance)
  let let229 := (Eq arg0 let228)
  let let230 := (Eq fmt0 let13)
  let let231 := (Eq x let56)
  let let232 := (Eq s let28)
  let let233 := (Eq percent let27)
  let let234 := (Eq adrx5fhi let39)
  let let235 := (Eq adrx5fmedhi let113)
  let let236 := (Eq adrx5fmedlo let3)
  let let237 := (Eq adrx5flo let39)
  let let238 := (Eq fmtx5flength let113)
  let let239 := (Eq distance let70)
  let let240 := (And let239 (And let238 (And let237 (And let236 (And let235 (And let234 (And let233 (And let232 (And let231 (And let230 (And let229 (And let227 (And let226 (And let223 (And let222 (And let221 (And let217 (And let209 (And let180 (And let177 (And let171 (And let165 (And let158 (And let150 (And let144 (And let136 (And let128 (And let119 (And let107 (And let98 let93))))))))))))))))))))))))))))))
  let let241 := (And (And (And (And (And (And (And (And (And (And (And (And (And let239 let238) let237) let236) let235) let234) let233) let232) let231) (And (And (And (And (And (And (And let230 let229) let227) let226) let223) let222) let221) let217)) let209) (And (And (And (And (And (And (And (And (And let180 let177) let171) let165) let158) let150) let144) let136) let128) let119)) (And let107 let98)) let93)
  let let242 := (binrel% HMul.hMul let31 arg1)
  let let243 := (binrel% HAdd.hAdd fmt0 let242)
  let let244 := (binrel% GE.ge let243 let11)
  let let245 := (Not let244)
  let let246 := (binrel% HMul.hMul let31 fmtx5flength)
  let let247 := (binrel% HMul.hMul let31 fmt0)
  let let248 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let247 let246))
  let let249 := (binrel% GE.ge let248 let31)
  let let250 := (binrel% HAdd.hAdd let31 let224)
  let let251 := (binrel% GE.ge fmt1 let250)
  let let252 := (binrel% HAdd.hAdd fmt1 let247)
  let let253 := (binrel% GE.ge let252 let3)
  let let254 := (Not let253)
  let let255 := (binrel% HAdd.hAdd let11 fmt0)
  let let256 := (binrel% LE.le fmt1 let255)
  let let257 := (binrel% HMul.hMul let31 distance)
  let let258 := (binrel% HMul.hMul let31 arg0)
  let let259 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let258 let257))
  let let260 := (binrel% GE.ge let259 let13)
  let let261 := (binrel% HMul.hMul let31 let39)
  let let262 := (binrel% HAdd.hAdd let219 let261)
  let let263 := (Eq let17 let11)
  let let264 := (Eq let13 let32)
  let let265 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let261)))
  let let266 := (Neg.neg let39)
  let let267 := (binrel% HAdd.hAdd let266 (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd fmtx5flength distance)))
  let let268 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance (binrel% HAdd.hAdd fmtx5flength let266)))
  let let269 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let258 (binrel% HAdd.hAdd let246 let257)))
  let let270 := (binrel% GE.ge let269 let266)
  let let271 := (binrel% GE.ge arg1 let267)
  let let272 := (binrel% HMul.hMul let31 let3)
  let let273 := (Eq s let147)
  let let274 := (Eq x let147)
  let let275 := (Eq adrx5flo let147)
  let let276 := (Eq adrx5fhi let147)
  let let277 := (Eq adrx5flo let141)
  let let278 := (binrel% HAdd.hAdd let53 (binrel% HAdd.hAdd let50 let52))
  let let279 := (Eq adrx5fmedlo let141)
  let let280 := (Eq adrx5fhi let141)
  let let281 := (Eq adrx5flo let133)
  let let282 := (Eq adrx5fmedlo let133)
  let let283 := (Eq adrx5fmedhi let133)
  let let284 := (Eq adrx5fhi let133)
  let let285 := (And let9 let45)
  let let286 := (And let34 (And let145 let285))
  let let287 := (Not let286)
  let let288 := (Implies let286 False)
  let let289 := (Eq adrx5fmedlo let125)
  let let290 := (Eq s let141)
  let let291 := (binrel% LT.lt fmt1 let39)
  let let292 := (Eq s let133)
  let let293 := (Eq let13 let5)
  let let294 := (binrel% HAdd.hAdd let11 let18)
  let let295 := (Eq let17 let294)
  let let296 := (binrel% HAdd.hAdd fmt0 let257)
  let let297 := (Eq fmt0 let218)
  let let298 := (Eq arg0 let296)
  let let299 := (Eq s let125)
  let let300 := (binrel% GE.ge fmt1 let225)
  let let301 := (Not let300)
  let let302 := (Eq let17 (binrel% HAdd.hAdd let31 let159))
  let let303 := (binrel% HAdd.hAdd let11 let17)
  let let304 := (Eq let159 let303)
  let let305 := (Eq let45 let45)
  let let306 := (binrel% LT.lt let51 let13)
  let let307 := (Eq let159 (binrel% HAdd.hAdd let31 let151))
  let let308 := (binrel% HAdd.hAdd let11 let159)
  let let309 := (Eq let151 let308)
  let let310 := (binrel% HAdd.hAdd let31 let12)
  let let311 := (Eq let14 let310)
  let let312 := (And let34 (And let21 (And let19 (And let311 let10))))
  let let313 := (Not let312)
  let let314 := (Implies let312 False)
  let let315 := (binrel% GE.ge let8 let1)
  let let316 := (binrel% HMul.hMul let39 let6)
  let let317 := (binrel% HMul.hMul let39 let7)
  let let318 := (binrel% HAdd.hAdd let317 let316)
  let let319 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let318)
  let let320 := (binrel% GE.ge let319 let266)
  let let321 := (binrel% HAdd.hAdd let73 let318)
  let let322 := (binrel% HAdd.hAdd let3 let321)
  let let323 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd (binrel% HMul.hMul let266 let7) (binrel% HMul.hMul let266 let6)))
  let let324 := (binrel% HMul.hMul let31 let321)
  let let325 := (Not let254)
  let let326 := (Neg.neg let113)
  let let327 := (binrel% HAdd.hAdd let326 let318)
  let let328 := (binrel% HAdd.hAdd let1 let321)
  let let329 := (Eq let328 let327)
  let let330 := (binrel% HAdd.hAdd let53 let54)
  let let331 := (binrel% HAdd.hAdd let11 let14)
  let let332 := (Eq let12 let331)
  let let333 := (Eq let147 let28)
  let let334 := (Eq let28 let147)
  let let335 := (And let21 let285)
  let let336 := (And let23 let335)
  let let337 := (Not let336)
  let let338 := (Implies let336 False)
  let let339 := (Eq let147 let56)
  let let340 := (Eq let56 let147)
  let let341 := (Eq percent let125)
  let let342 := (Eq let147 let113)
  let let343 := (Eq let113 let147)
  let let344 := (Eq x let116)
  let let345 := (Eq let147 let39)
  let let346 := (Eq let39 let147)
  let let347 := (binrel% HAdd.hAdd let3 arg1)
  let let348 := (Eq let120 (binrel% HAdd.hAdd let31 let108))
  let let349 := (binrel% HAdd.hAdd let11 let120)
  let let350 := (Eq let108 let349)
  let let351 := (Eq let141 let113)
  let let352 := (Eq let113 let141)
  let let353 := (Eq let141 let39)
  let let354 := (Eq let39 let141)
  let let355 := (Not False)
  let let356 := (Eq percent let116)
  let let357 := (Eq let133 let3)
  let let358 := (Eq let3 let133)
  let let359 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let215 let213))
  let let360 := (Eq let141 let28)
  let let361 := (Eq let28 let141)
  let let362 := (binrel% HAdd.hAdd fmt1 let272)
  let let363 := (Eq let133 let39)
  let let364 := (Eq let39 let133)
  let let365 := (Eq let125 let3)
  let let366 := (Eq let3 let125)
  let let367 := (binrel% HMul.hMul let31 let11)
  let let368 := (binrel% HAdd.hAdd let224 let367)
  let let369 := (binrel% HMul.hMul let31 let73)
  let let370 := (Eq let116 let3)
  let let371 := (Eq let3 let116)
  let let372 := (Eq let159 let151)
  let let373 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let326 let73)))))
  let let374 := (binrel% HAdd.hAdd let3 fmt0)
  let let375 := (Eq let147 let27)
  let let376 := (Eq let27 let147)
  let let377 := (binrel% HAdd.hAdd let11 let151)
  let let378 := (Eq let116 let39)
  let let379 := (Eq let39 let116)
  let let380 := (Eq s let116)
  let let381 := (binrel% HMul.hMul let31 let6)
  let let382 := (Eq let7 (binrel% HAdd.hAdd let3 let381))
  let let383 := (Or let382 False)
  let let384 := (Eq let133 let28)
  let let385 := (Eq let28 let133)
  let let386 := (Eq let114 let28)
  let let387 := (Eq let28 let114)
  let let388 := (Eq let141 let56)
  let let389 := (Eq let56 let141)
  let let390 := (binrel% HAdd.hAdd let73 let70)
  let let391 := (Eq let151 let152)
  let let392 := (Eq let90 let27)
  let let393 := (Eq let27 let90)
  let let394 := (Or let148 (Or let208 (Or let207 (Or let206 (Or let205 (Or let204 (Or let203 (Or let202 (Or let142 (Or let178 (Or let146 (Or let201 (Or let200 (Or let199 (Or let198 (Or let197 (Or let134 (Or let175 (Or let140 (Or let196 (Or let195 (Or let194 (Or let193 (Or let192 (Or let126 (Or let169 (Or let132 (Or let191 (Or let190 (Or let189 (Or let188 (Or let187 (Or let117 (Or let163 (Or let124 (Or let186 (Or let185 (Or let184 (Or let183 let182)))))))))))))))))))))))))))))))))))))))
  let let395 := (binrel% HAdd.hAdd let39 fmt0)
  let let396 := (binrel% HAdd.hAdd let11 fmt1)
  let let397 := (selectx5fformat let396)
  let let398 := (Eq let397 let28)
  let let399 := (Eq let28 let397)
  let let400 := (Eq let125 let28)
  let let401 := (Eq let28 let125)
  let let402 := (binrel% HAdd.hAdd let4 let252)
  let let403 := (binrel% HAdd.hAdd let5 let247)
  let let404 := (Eq let116 let113)
  let let405 := (Eq let113 let116)
  let let406 := (Eq let108 let109)
  let let407 := (binrel% HAdd.hAdd let31 let321)
  let let408 := (binrel% HAdd.hAdd let210 let247)
  let let409 := (Eq let133 let113)
  let let410 := (Eq let113 let133)
  let let411 := (Eq let40 let42)
  let let412 := (binrel% HAdd.hAdd let1 arg1)
  let let413 := (selectx5fformat let412)
  let let414 := (Eq adrx5fhi let413)
  let let415 := (Eq let413 adrx5fhi)
  let let416 := (Eq adrx5fmedlo let116)
  let let417 := (binrel% HAdd.hAdd let39 let13)
  let let418 := (Eq adrx5fhi let116)
  let let419 := (binrel% HAdd.hAdd fmt1 let13)
  let let420 := (selectx5fformat let321)
  let let421 := (Eq let420 let39)
  let let422 := (Eq let39 let420)
  let let423 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 9)) let318)
  let let424 := (Eq let407 let423)
  let let425 := (binrel% HMul.hMul let31 let70)
  let let426 := (binrel% HMul.hMul let31 let113)
  let let427 := (binrel% HAdd.hAdd let369 (binrel% HAdd.hAdd let426 let425))
  let let428 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 let427)))
  let let429 := (binrel% HAdd.hAdd let321 let427)
  let let430 := (Eq let108 (binrel% HAdd.hAdd let31 let109))
  let let431 := (binrel% HAdd.hAdd let11 let108)
  let let432 := (Eq let109 let431)
  let let433 := (Rat.ofInt let7)
  let let434 := (binrel% HMul.hMul let50 let7)
  let let435 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 7)) let318)
  let let436 := (selectx5fformat let435)
  let let437 := (Eq let436 let3)
  let let438 := (Eq let3 let436)
  let let439 := (Eq let125 let39)
  let let440 := (Eq let39 let125)
  let let441 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let367))
  let let442 := (Eq let17 let159)
  let let443 := (Eq let13 let321)
  let let444 := (Rat.ofInt (binrel% HAdd.hAdd (binrel% HMul.hMul let31 let7) let381))
  let let445 := (binrel% HAdd.hAdd let433 (binrel% HAdd.hAdd let65 let444))
  let let446 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 6)) let318)
  let let447 := (selectx5fformat let446)
  let let448 := (Eq let447 let113)
  let let449 := (Eq let113 let447)
  let let450 := (Eq adrx5flo let125)
  let let451 := (binrel% HAdd.hAdd let31 arg1)
  let let452 := (Eq fmt0 let451)
  let let453 := (Eq arg1 let255)
  let let454 := (binrel% HAdd.hAdd let11 let321)
  let let455 := (binrel% GE.ge arg1 let220)
  let let456 := (Not let455)
  let let457 := (binrel% HAdd.hAdd let4 let419)
  let let458 := (selectx5fformat let327)
  let let459 := (Eq let458 let39)
  let let460 := (Eq let39 let458)
  let let461 := (Eq x let125)
  let let462 := (Eq let454 let435)
  let let463 := (Eq let12 let11)
  let let464 := (Eq let13 let310)
  let let465 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd fmtx5flength let31))
  let let466 := (And let392 (And let398 (And let421 (And let437 (And let448 let459)))))
  let let467 := (Not let466)
  let let468 := (Eq fmt1 let39)
  let let469 := (Eq fmt1 let11)
  let let470 := (Eq fmt1 let13)
  let let471 := (Or let470 (Or let469 (Or let45 (Or let2 let468))))
  let let472 := (Eq let114 let56)
  let let473 := (Eq let116 let27)
  let let474 := (And let473 let472)
  let let475 := (smtIte let474 let430 let406 Prop)
  let let476 := (Eq let120 let108)
  let let477 := (Eq let116 let56)
  let let478 := (Eq let125 let27)
  let let479 := (And let478 let477)
  let let480 := (smtIte let479 let348 let476 Prop)
  let let481 := (Eq let12 let120)
  let let482 := (Eq let12 (binrel% HAdd.hAdd let31 let120))
  let let483 := (Eq let125 let56)
  let let484 := (Eq let133 let27)
  let let485 := (And let484 let483)
  let let486 := (smtIte let485 let482 let481 Prop)
  let let487 := (Eq let133 let56)
  let let488 := (Eq let141 let27)
  let let489 := (And let488 let487)
  let let490 := (smtIte let489 let311 let15 Prop)
  let let491 := (And let375 let388)
  let let492 := (smtIte let491 let145 let21 Prop)
  let let493 := (Eq let151 (binrel% HAdd.hAdd let31 let152))
  let let494 := (And let473 let386)
  let let495 := (smtIte let494 let493 let391 Prop)
  let let496 := (Eq let116 let28)
  let let497 := (And let478 let496)
  let let498 := (smtIte let497 let307 let372 Prop)
  let let499 := (And let484 let400)
  let let500 := (smtIte let499 let302 let442 Prop)
  let let501 := (And let488 let384)
  let let502 := (smtIte let501 let33 let19 Prop)
  let let503 := (And let375 let360)
  let let504 := (smtIte let503 let23 let34 Prop)
  let let505 := (Eq let125 let113)
  let let506 := (Eq let141 let3)
  let let507 := (Eq let147 let3)
  let let508 := (Or let375 (Or let333 (Or let339 (Or let345 (Or let507 (Or let342 (Or let345 (Or let202 (Or let488 (Or let360 (Or let388 (Or let353 (Or let506 (Or let351 (Or let353 (Or let197 (Or let484 (Or let384 (Or let487 (Or let363 (Or let357 (Or let409 (Or let363 (Or let192 (Or let478 (Or let400 (Or let483 (Or let439 (Or let365 (Or let505 (Or let439 (Or let187 (Or let473 (Or let496 (Or let477 (Or let378 (Or let370 (Or let404 (Or let378 let182)))))))))))))))))))))))))))))))))))))))
  let let509 := (And let508 (And let504 (And let502 (And let500 (And let498 (And let495 (And let492 (And let490 (And let486 (And let480 (And let475 (And let471 (And let382 let467)))))))))))))
  let let510 := (Not let315)
  let let511 := (binrel% GE.ge fmt1 let3)
  let let512 := (And let9 (And let41 (And let511 (And let510 let509))))
  let let513 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let9 (And let41 (And let511 (And let9 (And let510 (And True let509)))))))))))))))))
  let let514 := (And let34 (And let145 let20))
  let let515 := (Not let514)
  let let516 := (Implies let514 False)
  let let517 := (And let34 let22)
  let let518 := (Not let517)
  let let519 := (Implies let517 False)
  let let520 := (Eq let27 let27)
  let let521 := (Eq let3 let147)
  let let522 := (Eq let28 let116)
  let let523 := (Eq let13 let423)
  let let524 := (Eq adrx5fmedhi let125)
  let let525 := (And let91 (And let89 (And let86 (And let84 (And let81 let78)))))
  let let526 := (binrel% HAdd.hAdd let3 let13)
  let let527 := (Eq adrx5fmedhi let116)
  let let528 := (Eq s let397)
  let let529 := (Eq let397 s)
  let let530 := (binrel% LE.le fmt1 let94)
  let let531 := (Not let530)
  let let532 := (Eq let322 let446)
  let let533 := (Eq let27 let125)
  let let534 := (Eq let3 let141)
  let let535 := (Not let29)
  let let536 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 (binrel% HAdd.hAdd let70 let73))))
  let let537 := (Eq let56 let114)
  let let538 := (Eq fmt0 arg1)
  let let539 := (Eq arg1 fmt0)
  let let540 := (Eq let27 let116)
  let let541 := (Eq let56 let116)
  let let542 := (Eq adrx5fmedhi let147)
  let let543 := (Eq let56 let125)
  let let544 := (binrel% HAdd.hAdd let11 arg1)
  let let545 := (selectx5fformat let544)
  let let546 := (Eq adrx5fmedlo let545)
  let let547 := (Eq let545 adrx5fmedlo)
  let let548 := (binrel% HAdd.hAdd let1 let13)
  let let549 := (binrel% HAdd.hAdd let326 fmt1)
  let let550 := (binrel% GE.ge let549 let31)
  let let551 := (binrel% HAdd.hAdd let11 let13)
  let let552 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let13 let326))
  let let553 := (Not let9)
  let let554 := (Not let553)
  let let555 := (Eq adrx5fmedhi let141)
  let let556 := (binrel% GE.ge let323 let11)
  let let557 := (binrel% HAdd.hAdd let13 let323)
  let let558 := (Eq percent let141)
  let let559 := (Eq adrx5fmedlo let147)
  let let560 := (Eq let27 let133)
  let let561 := (Eq let13 let13)
  let let562 := (Eq percent let147)
  let let563 := (Eq let56 let133)
  let let564 := (Eq let56 let56)
  let let565 := (Eq let27 let141)
  let let566 := (Eq let28 let28)
  let let567 := (binrel% HMul.hMul let51 let8)
  let let568 := (Eq let152 let377)
  let let569 := (Eq let113 let113)
  let let570 := (Eq s let114)
  let let571 := (Eq let3 let3)
  let let572 := (Eq let39 let39)
  let let573 := (binrel% HAdd.hAdd let1 fmt0)
  let let574 := (binrel% GE.ge let321 let13)
  let let575 := (selectx5fformat let347)
  let let576 := (Eq adrx5fmedhi let575)
  let let577 := (Eq let575 adrx5fmedhi)
  let let578 := (binrel% HAdd.hAdd let369 let425)
  let let579 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let317 (binrel% HAdd.hAdd let316 let578)))
  let let580 := (binrel% HAdd.hAdd let321 let578)
  let let581 := (Eq adrx5flo let85)
  let let582 := (Eq adrx5flo let116)
  let let583 := (Eq adrx5fhi let125)
  let let584 := (Eq percent let90)
  let let585 := (binrel% LE.le let53 let51)
  let let586 := (Eq let70 let70)
  let let587 := (Or let106 (Or let105 (Or let104 (Or let102 let100))))
  let let588 := (And let34 let335)
  let let589 := (Not let588)
  let let590 := (Implies let588 False)
  let let591 := (binrel% HAdd.hAdd fmt1 let4)
  let let592 := (Eq let113 let125)
  let let593 := (Eq x let114)
  let let594 := (binrel% HAdd.hAdd let11 let12)
  let let595 := (Eq let120 let594)
  let let596 := (Eq let321 let321)
  let let597 := (Eq percent let133)
  let let598 := (binrel% HMul.hMul let31 let13)
  let let599 := (Eq x let133)
  let let600 := (Eq x let141)
  let let601 := (And let584 (And let528 (And let581 (And let546 (And let576 let414)))))
  let let602 := (Not let601)
  let let603 := (Or let538 let452)
  let let604 := (Eq fmt1 let395)
  let let605 := (Eq fmt1 let573)
  let let606 := (Eq fmt1 let374)
  let let607 := (Eq fmt1 let255)
  let let608 := (Eq fmt1 fmt0)
  let let609 := (Or let608 (Or let607 (Or let606 (Or let605 let604))))
  let let610 := (And let356 let593)
  let let611 := (smtIte let610 let430 let406 Prop)
  let let612 := (And let341 let344)
  let let613 := (smtIte let612 let348 let476 Prop)
  let let614 := (And let597 let461)
  let let615 := (smtIte let614 let482 let481 Prop)
  let let616 := (And let558 let599)
  let let617 := (smtIte let616 let311 let15 Prop)
  let let618 := (And let562 let600)
  let let619 := (smtIte let618 let145 let21 Prop)
  let let620 := (And let356 let570)
  let let621 := (smtIte let620 let493 let391 Prop)
  let let622 := (And let341 let380)
  let let623 := (smtIte let622 let307 let372 Prop)
  let let624 := (And let597 let299)
  let let625 := (smtIte let624 let302 let442 Prop)
  let let626 := (And let558 let292)
  let let627 := (smtIte let626 let33 let19 Prop)
  let let628 := (And let562 let290)
  let let629 := (smtIte let628 let23 let34 Prop)
  let let630 := (Or let562 (Or let273 (Or let274 (Or let275 (Or let559 (Or let542 (Or let276 (Or let202 (Or let558 (Or let290 (Or let600 (Or let277 (Or let279 (Or let555 (Or let280 (Or let197 (Or let597 (Or let292 (Or let599 (Or let281 (Or let282 (Or let283 (Or let284 (Or let192 (Or let341 (Or let299 (Or let461 (Or let450 (Or let289 (Or let524 (Or let583 (Or let187 (Or let356 (Or let380 (Or let344 (Or let582 (Or let416 (Or let527 (Or let418 let182)))))))))))))))))))))))))))))))))))))))
  let let631 := (xx5fcount let402)
  let let632 := (binrel% HMul.hMul let39 let631)
  let let633 := (sx5fcount let402)
  let let634 := (binrel% HMul.hMul let39 let633)
  let let635 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let634 let632))
  let let636 := (Eq arg1 let635)
  let let637 := (Not let270)
  let let638 := (Not let249)
  let let639 := (And let239 (And let238 (And let237 (And let236 (And let235 (And let234 (And let233 (And let232 (And let231 (And let230 (And let297 (And let245 (And let638 (And let253 (And let260 (And let637 (And let636 (And let630 (And let629 (And let627 (And let625 (And let623 (And let621 (And let619 (And let617 (And let615 (And let613 (And let611 (And let609 (And let603 let602))))))))))))))))))))))))))))))
  let let640 := (selectx5fformat let328)
  let let641 := (Eq let39 let640)
  let let642 := (selectx5fformat let322)
  let let643 := (Eq let113 let642)
  let let644 := (selectx5fformat let454)
  let let645 := (Eq let3 let644)
  let let646 := (And let393 (And let399 (And let422 (And let645 (And let643 let641)))))
  let let647 := (Not let646)
  let let648 := (Eq let13 let407)
  let let649 := (Or let443 let648)
  let let650 := (Eq fmt1 let417)
  let let651 := (Eq fmt1 let548)
  let let652 := (Eq fmt1 let526)
  let let653 := (Eq fmt1 let551)
  let let654 := (Or let470 (Or let653 (Or let652 (Or let651 let650))))
  let let655 := (And let540 let537)
  let let656 := (smtIte let655 let430 let406 Prop)
  let let657 := (And let533 let541)
  let let658 := (smtIte let657 let348 let476 Prop)
  let let659 := (And let560 let543)
  let let660 := (smtIte let659 let482 let481 Prop)
  let let661 := (And let565 let563)
  let let662 := (smtIte let661 let311 let15 Prop)
  let let663 := (And let376 let389)
  let let664 := (smtIte let663 let145 let21 Prop)
  let let665 := (And let540 let387)
  let let666 := (smtIte let665 let493 let391 Prop)
  let let667 := (And let533 let522)
  let let668 := (smtIte let667 let307 let372 Prop)
  let let669 := (And let560 let401)
  let let670 := (smtIte let669 let302 let442 Prop)
  let let671 := (And let565 let385)
  let let672 := (smtIte let671 let33 let19 Prop)
  let let673 := (And let376 let361)
  let let674 := (smtIte let673 let23 let34 Prop)
  let let675 := (Or let376 (Or let334 (Or let340 (Or let346 (Or let521 (Or let343 (Or let346 (Or let202 (Or let565 (Or let361 (Or let389 (Or let354 (Or let534 (Or let352 (Or let354 (Or let197 (Or let560 (Or let385 (Or let563 (Or let364 (Or let358 (Or let410 (Or let364 (Or let192 (Or let533 (Or let401 (Or let543 (Or let440 (Or let366 (Or let592 (Or let440 (Or let187 (Or let540 (Or let522 (Or let541 (Or let379 (Or let371 (Or let405 (Or let379 let182)))))))))))))))))))))))))))))))))))))))
  let let676 := (binrel% HAdd.hAdd fmt1 let598)
  let let677 := (binrel% HAdd.hAdd let4 let676)
  let let678 := (xx5fcount let677)
  let let679 := (binrel% HMul.hMul let39 let678)
  let let680 := (sx5fcount let677)
  let let681 := (binrel% HMul.hMul let39 let680)
  let let682 := (binrel% HAdd.hAdd let73 (binrel% HAdd.hAdd let681 let679))
  let let683 := (Eq let321 let682)
  let let684 := (binrel% GE.ge let429 let266)
  let let685 := (Not let684)
  let let686 := (binrel% GE.ge let580 let13)
  let let687 := (binrel% GE.ge let676 let3)
  let let688 := (binrel% HAdd.hAdd fmt1 (binrel% HAdd.hAdd let598 let426))
  let let689 := (binrel% GE.ge let688 let31)
  let let690 := (Not let689)
  let let691 := (binrel% HAdd.hAdd let13 let324)
  let let692 := (binrel% GE.ge let691 let11)
  let let693 := (Not let692)
  let let694 := (Eq let13 let390)
  let let695 := (And let586 (And let569 (And let572 (And let571 (And let569 (And let572 (And let520 (And let566 (And let564 (And let561 (And let694 (And let693 (And let690 (And let687 (And let686 (And let685 (And let683 (And let675 (And let674 (And let672 (And let670 (And let668 (And let666 (And let664 (And let662 (And let660 (And let658 (And let656 (And let654 (And let649 let647))))))))))))))))))))))))))))))
  let let696 := (Eq And And)
  let let697 := (Eq fmt1 fmt1)
  let let698 := (Eq Or Or)
  let let699 := (Eq let406 let406)
  let let700 := (Eq let430 let430)
  let let701 := (Eq let476 let476)
  let let702 := (Eq let348 let348)
  let let703 := (Eq let481 let481)
  let let704 := (Eq let482 let482)
  let let705 := (Eq let15 let15)
  let let706 := (Eq let311 let311)
  let let707 := (Eq let21 let21)
  let let708 := (Eq let145 let145)
  let let709 := (Eq let391 let391)
  let let710 := (Eq let493 let493)
  let let711 := (Eq let372 let372)
  let let712 := (Eq let307 let307)
  let let713 := (Eq let442 let442)
  let let714 := (Eq let302 let302)
  let let715 := (Eq let19 let19)
  let let716 := (Eq let33 let33)
  let let717 := (Eq let34 let34)
  let let718 := (Eq let23 let23)
  let let719 := (Eq let182 let182)
  let let720 := (Eq let187 let187)
  let let721 := (Eq let192 let192)
  let let722 := (Eq let197 let197)
  let let723 := (Eq let202 let202)
  let let724 := (Eq let4 let4)
  let let725 := (Eq let266 let266)
  let let726 := (Eq let31 let31)
  let let727 := (Eq let11 let11)
  let let728 := (Eq arg1 let321)
  let let729 := (And let230 (And let231 (And let232 (And let233 (And let234 (And let235 (And let236 (And let237 (And let238 let239)))))))))
  let let730 := (And let74 let729)
  let let731 := (Eq arg1 arg1)
  let let732 := (Eq arg0 arg0)
  let let733 := (Eq let13 let72)
  let let734 := (Eq arg1 let682)
  let let735 := (Eq let635 let682)
  let let736 := (Eq let632 let679)
  let let737 := (Eq let631 let678)
  let let738 := (Eq let402 let677)
  let let739 := (Eq let247 let598)
  let let740 := (Eq let634 let681)
  let let741 := (Eq let633 let680)
  let let742 := (Not let489)
  let let743 := (Not let487)
  let let744 := (Not let19)
  let let745 := (Not let34)
  let let746 := (Or let745 let46)
  let let747 := (Not let21)
  let let748 := (Or let747 let46)
  let let749 := (Or let553 let46)
  let let750 := (Or let747 let749)
  let let751 := (Eq let13 let7)
  let let752 := (Eq let13 let6)
  let let753 := (And let9 (And let752 let751))
  let let754 := (Implies let588 let753)
  let let755 := (Eq let753 False)
  let let756 := (Or (Not let751) False)
  let let757 := (Not let752)
  let let758 := (Eq let7 let13)
  let let759 := (Not let758)
  let let760 := (Or let759 False)
  let let761 := (binrel% HAdd.hAdd let67 let68)
  let let762 := (binrel% HAdd.hAdd let67 let761)
  let let763 := (binrel% HAdd.hAdd let434 (binrel% HAdd.hAdd let66 let567))
  let let764 := (binrel% LE.le let763 let762)
  let let765 := (binrel% LE.le let567 let68)
  let let766 := (And let306 let9)
  let let767 := (Implies let766 let765)
  let let768 := (Eq let66 let67)
  let let769 := (Eq let6 let13)
  let let770 := (And let64 let769)
  let let771 := (Implies let770 let768)
  let let772 := (Eq let434 let67)
  let let773 := (And let64 let758)
  let let774 := (Implies let773 let772)
  let let775 := (And let293 let34)
  let let776 := (Implies let775 let751)
  let let777 := (Or let745 let751)
  let let778 := (Not let293)
  let let779 := (Or let778 let777)
  let let780 := (Eq let18 let7)
  let let781 := (Eq let5 let13)
  let let782 := (Eq let13 let18)
  let let783 := (Eq let45 let293)
  let let784 := (And let293 let21)
  let let785 := (Implies let784 let752)
  let let786 := (Or let747 let752)
  let let787 := (Or let778 let786)
  let let788 := (Eq let14 let6)
  let let789 := (Eq let13 let14)
  let let790 := (Not let491)
  let let791 := (Not let145)
  let let792 := (Eq let11 let6)
  let let793 := (And let9 (And let792 let751))
  let let794 := (Implies let286 let793)
  let let795 := (Eq let793 False)
  let let796 := (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let63 let68))
  let let797 := (binrel% LE.le let763 let796)
  let let798 := (Eq let66 let63)
  let let799 := (Eq let6 let11)
  let let800 := (And let64 let799)
  let let801 := (And let293 let145)
  let let802 := (Or let791 let792)
  let let803 := (Eq let11 let14)
  let let804 := (Not let503)
  let let805 := (Or let804 let804)
  let let806 := (Not let388)
  let let807 := (Not let360)
  let let808 := (Or let806 let807)
  let let809 := (Implies let388 let807)
  let let810 := (Not let23)
  let let811 := (Eq let11 let7)
  let let812 := (And let9 (And let752 let811))
  let let813 := (Implies let336 let812)
  let let814 := (Eq let812 False)
  let let815 := (Eq let7 let11)
  let let816 := (Not let815)
  let let817 := (binrel% HAdd.hAdd let63 let761)
  let let818 := (binrel% LE.le let763 let817)
  let let819 := (Eq let434 let63)
  let let820 := (And let64 let815)
  let let821 := (And let293 let23)
  let let822 := (Or let810 let811)
  let let823 := (Eq let11 let18)
  let let824 := (Not let511)
  let let825 := (Or let824 (Or let40 (Or let45 let2)))
  let let826 := (Or let824 (Or let42 (Or let47 let2)))
  let let827 := (And let511 (And let41 let46))
  let let828 := (Eq let1 fmt1)
  let let829 := (And let511 (And let46 let41))
  let let830 := (Not let2)
  let let831 := (Or let744 let830)
  let let832 := (Or let744 (Or let747 let830))
  let let833 := (Or let745 let747)
  let let834 := (Not let15)
  let let835 := (Or let834 let830)
  let let836 := (Or let747 let835)
  let let837 := (Or let745 let836)
  let let838 := (Or let744 let836)
  let let839 := (Or let553 let830)
  let let840 := (Or let834 let839)
  let let841 := (Or let744 let840)
  let let842 := (Or let747 let841)
  let let843 := (Implies let517 let753)
  let let844 := (And let38 (And let19 let34))
  let let845 := (Implies let844 let751)
  let let846 := (Not let38)
  let let847 := (Or let846 (Or let744 let777))
  let let848 := (Eq let17 let7)
  let let849 := (Eq let5 let11)
  let let850 := (Eq let2 let38)
  let let851 := (And let38 (And let15 let21))
  let let852 := (Implies let851 let752)
  let let853 := (Or let846 (Or let834 let786))
  let let854 := (Eq let12 let6)
  let let855 := (Not let501)
  let let856 := (Not let33)
  let let857 := (Implies let35 let812)
  let let858 := (Or let834 (Or let553 (Or let830 let812)))
  let let859 := (Eq let11 let17)
  let let860 := (And let38 let859)
  let let861 := (And let33 let34)
  let let862 := (Not let311)
  let let863 := (Implies let312 let793)
  let let864 := (Or let553 (Or let830 let793))
  let let865 := (Eq let11 let12)
  let let866 := (And let38 let865)
  let let867 := (And let311 let21)
  let let868 := (Not let488)
  let let869 := (Or let807 let868)
  let let870 := (Implies let360 let868)
  let let871 := (Eq let488 False)
  let let872 := (Implies let24 let812)
  let let873 := (And let38 (And let19 let23))
  let let874 := (Or let806 let790)
  let let875 := (Or let806 let868)
  let let876 := (Implies let388 let868)
  let let877 := (Implies let514 let793)
  let let878 := (And let38 (And let15 let145))
  let let879 := (Not let384)
  let let880 := (Or let743 let879)
  let let881 := (Implies let487 let879)
fun lean_r0 : (Eq let26 let25) => -- THEORY_REWRITE_BOOL
fun lean_r1 : let30 => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let37 let36) => -- THEORY_REWRITE_BOOL
fun lean_r3 : (Eq let38 let2) => -- THEORY_REWRITE_ARITH
fun lean_r4 : let43 => -- THEORY_REWRITE_BOOL
fun lean_r5 : (Eq let44 True) => -- THEORY_REWRITE_BOOL
fun lean_r6 : (Eq let49 let48) => -- THEORY_REWRITE_BOOL
fun lean_r7 : let49 => -- THEORY_REWRITE_BOOL
fun lean_r8 : (Eq let55 let51) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let59 let58) => -- THEORY_REWRITE_BOOL
fun lean_r10 : let59 => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let62 let61) => -- THEORY_REWRITE_BOOL
fun lean_r12 : (Eq let63 let50) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let64 True) => -- EVALUATE
fun lean_r14 : (Eq let66 let65) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let67 let53) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let68 let52) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let69 False) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let72 let71) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let75 let74) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let241 let240) => -- THEORY_REWRITE_BOOL
fun lean_r21 : (Eq let227 let245) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let251 let249) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let256 let254) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let222 let260) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let220 let262) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let264 let263) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let262 let265) => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let261 let266) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let268 let267) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let271 let270) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let272 let4) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let208 let273) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let207 let274) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let206 let275) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let203 let276) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let201 let277) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let278 let51) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let200 let279) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let198 let280) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let196 let281) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let195 let282) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let194 let283) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let193 let284) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let288 let287) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq let190 let289) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let178 let290) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let291 let41) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let175 let292) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let293 let45) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let295 let33) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let228 let296) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let172 let19) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let298 let297) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let169 let299) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let226 let301) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let304 let302) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let305 True) => -- THEORY_REWRITE_BOOL
fun lean_r58 : (Eq let306 True) => -- EVALUATE
fun lean_r59 : (Eq let309 let307) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let314 let313) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let320 let315) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let322 let322) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let324 let323) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let325 let253) => -- THEORY_REWRITE_BOOL
fun lean_r65 : let329 => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let330 let52) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let332 let311) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let334 let333) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let338 let337) => -- THEORY_REWRITE_BOOL
fun lean_r70 : (Eq let340 let339) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let126 let341) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let343 let342) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let124 let344) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let346 let345) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let79 let347) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let350 let348) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let352 let351) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let354 let353) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let355 True) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let117 let356) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let358 let357) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let216 let359) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let361 let360) => -- THEORY_REWRITE_ARITH
fun lean_r84 : (Eq let210 let362) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let364 let363) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let366 let365) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let225 let368) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let369 let70) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let371 let370) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let160 let372) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let373 let319) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let103 let374) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let376 let375) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let154 let377) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let379 let378) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let367 let31) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let163 let380) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let383 let382) => -- THEORY_REWRITE_BOOL
fun lean_r99 : (Eq let385 let384) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let387 let386) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let389 let388) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let390 let13) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let153 let391) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let161 let308) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let393 let392) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let209 let394) => -- THEORY_REWRITE_BOOL
fun lean_r107 : (Eq let99 let395) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let399 let398) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let401 let400) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let403 let402) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let405 let404) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let110 let406) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let407 let407) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let211 let408) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let410 let409) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let43 let411) => -- THEORY_REWRITE_BOOL
fun lean_r117 : (Eq let415 let414) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let185 let416) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let417 let39) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let183 let418) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let419 fmt1) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let422 let421) => -- THEORY_REWRITE_ARITH
fun lean_r123 : let424 => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let429 let428) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let432 let430) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let434 let433) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let438 let437) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let440 let439) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let368 let441) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let166 let442) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let426 let326) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let443 let382) => -- THEORY_REWRITE_ARITH
fun lean_r133 : (Eq let445 let53) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let449 let448) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let191 let450) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let453 let452) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let454 let454) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let221 let456) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let457 let5) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let460 let459) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let132 let461) => -- THEORY_REWRITE_ARITH
fun lean_r142 : let462 => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let464 let463) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let465 let250) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let513 let512) => -- THEORY_REWRITE_BOOL
fun lean_r146 : (Eq let516 let515) => -- THEORY_REWRITE_BOOL
fun lean_r147 : (Eq let519 let518) => -- THEORY_REWRITE_BOOL
fun lean_r148 : (Eq let520 True) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let521 let507) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let522 let496) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let167 let303) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let523 False) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let189 let524) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let92 let525) => -- THEORY_REWRITE_BOOL
fun lean_r155 : (Eq let526 let3) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let184 let527) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let529 let528) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let223 let531) => -- THEORY_REWRITE_ARITH
fun lean_r159 : let532 => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let533 let478) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let138 let331) => -- THEORY_REWRITE_ARITH
fun lean_r162 : (Eq let534 let506) => -- THEORY_REWRITE_ARITH
fun lean_r163 : (Eq let30 let535) => -- THEORY_REWRITE_BOOL
fun lean_r164 : (Eq let536 let321) => -- THEORY_REWRITE_ARITH
fun lean_r165 : (Eq let328 let328) => -- THEORY_REWRITE_ARITH
fun lean_r166 : (Eq let537 let472) => -- THEORY_REWRITE_ARITH
fun lean_r167 : (Eq let539 let538) => -- THEORY_REWRITE_ARITH
fun lean_r168 : (Eq let540 let473) => -- THEORY_REWRITE_ARITH
fun lean_r169 : (Eq let137 let15) => -- THEORY_REWRITE_ARITH
fun lean_r170 : (Eq let541 let477) => -- THEORY_REWRITE_ARITH
fun lean_r171 : (Eq let204 let542) => -- THEORY_REWRITE_ARITH
fun lean_r172 : (Eq let543 let483) => -- THEORY_REWRITE_ARITH
fun lean_r173 : (Eq let425 let73) => -- THEORY_REWRITE_ARITH
fun lean_r174 : (Eq let173 let294) => -- THEORY_REWRITE_ARITH
fun lean_r175 : (Eq let547 let546) => -- THEORY_REWRITE_ARITH
fun lean_r176 : (Eq let548 let1) => -- THEORY_REWRITE_ARITH
fun lean_r177 : (Eq let550 let40) => -- THEORY_REWRITE_ARITH
fun lean_r178 : (Eq let551 let11) => -- THEORY_REWRITE_ARITH
fun lean_r179 : (Eq let552 let549) => -- THEORY_REWRITE_ARITH
fun lean_r180 : (Eq let554 let9) => -- THEORY_REWRITE_BOOL
fun lean_r181 : (Eq let199 let555) => -- THEORY_REWRITE_ARITH
fun lean_r182 : (Eq let556 let553) => -- THEORY_REWRITE_ARITH
fun lean_r183 : let62 => -- THEORY_REWRITE_ARITH
fun lean_r184 : (Eq let557 let323) => -- THEORY_REWRITE_ARITH
fun lean_r185 : (Eq let142 let558) => -- THEORY_REWRITE_ARITH
fun lean_r186 : (Eq let205 let559) => -- THEORY_REWRITE_ARITH
fun lean_r187 : (Eq let560 let484) => -- THEORY_REWRITE_ARITH
fun lean_r188 : (Eq let561 True) => -- THEORY_REWRITE_ARITH
fun lean_r189 : (Eq let148 let562) => -- THEORY_REWRITE_ARITH
fun lean_r190 : (Eq let563 let487) => -- THEORY_REWRITE_ARITH
fun lean_r191 : (Eq let564 True) => -- THEORY_REWRITE_ARITH
fun lean_r192 : (Eq let565 let488) => -- THEORY_REWRITE_ARITH
fun lean_r193 : (Eq let566 True) => -- THEORY_REWRITE_ARITH
fun lean_r194 : (Eq let567 let444) => -- THEORY_REWRITE_ARITH
fun lean_r195 : (Eq let568 let493) => -- THEORY_REWRITE_ARITH
fun lean_r196 : (Eq let569 True) => -- THEORY_REWRITE_ARITH
fun lean_r197 : (Eq let156 let570) => -- THEORY_REWRITE_ARITH
fun lean_r198 : (Eq let571 True) => -- THEORY_REWRITE_ARITH
fun lean_r199 : (Eq let572 True) => -- THEORY_REWRITE_ARITH
fun lean_r200 : (Eq let101 let573) => -- THEORY_REWRITE_ARITH
fun lean_r201 : (Eq let574 let9) => -- THEORY_REWRITE_ARITH
fun lean_r202 : (Eq let76 let412) => -- THEORY_REWRITE_ARITH
fun lean_r203 : (Eq let577 let576) => -- THEORY_REWRITE_ARITH
fun lean_r204 : (Eq let121 let476) => -- THEORY_REWRITE_ARITH
fun lean_r205 : (Eq let580 let579) => -- THEORY_REWRITE_ARITH
fun lean_r206 : (Eq let82 let544) => -- THEORY_REWRITE_ARITH
fun lean_r207 : (Eq let86 let581) => -- THEORY_REWRITE_ARITH
fun lean_r208 : (Eq let186 let582) => -- THEORY_REWRITE_ARITH
fun lean_r209 : (Eq let87 let396) => -- THEORY_REWRITE_ARITH
fun lean_r210 : (Eq let188 let583) => -- THEORY_REWRITE_ARITH
fun lean_r211 : (Eq let91 let584) => -- THEORY_REWRITE_ARITH
fun lean_r212 : (Eq let94 let255) => -- THEORY_REWRITE_ARITH
fun lean_r213 : (Eq let585 False) => -- THEORY_REWRITE_ARITH
fun lean_r214 : (Eq let96 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r215 : (Eq let586 True) => -- THEORY_REWRITE_ARITH
fun lean_r216 : (Eq let107 let587) => -- THEORY_REWRITE_BOOL
fun lean_r217 : (Eq let590 let589) => -- THEORY_REWRITE_BOOL
fun lean_r218 : (Eq let591 let5) => -- THEORY_REWRITE_ARITH
fun lean_r219 : (Eq let592 let505) => -- THEORY_REWRITE_ARITH
fun lean_r220 : (Eq let111 let431) => -- THEORY_REWRITE_ARITH
fun lean_r221 : (Eq let115 let593) => -- THEORY_REWRITE_ARITH
fun lean_r222 : (Eq let122 let349) => -- THEORY_REWRITE_ARITH
fun lean_r223 : (Eq let129 let481) => -- THEORY_REWRITE_ARITH
fun lean_r224 : (Eq let595 let482) => -- THEORY_REWRITE_ARITH
fun lean_r225 : (Eq let596 True) => -- THEORY_REWRITE_ARITH
fun lean_r226 : (Eq let130 let594) => -- THEORY_REWRITE_ARITH
fun lean_r227 : (Eq let134 let597) => -- THEORY_REWRITE_ARITH
fun lean_r228 : (Eq let598 let13) => -- THEORY_REWRITE_ARITH
fun lean_r229 : (Eq let140 let599) => -- THEORY_REWRITE_ARITH
fun lean_r230 : (Eq let146 let600) => -- THEORY_REWRITE_ARITH
fun lean_a231 : let241 => by
have lean_s0 : (Or let745 (Or let747 (Or let856 let858))) :=
  (scope (fun lean_a232 : let34 =>
    (scope (fun lean_a233 : let21 =>
      (scope (fun lean_a234 : let33 =>
        (scope (fun lean_a235 : let15 =>
          (scope (fun lean_a236 : let9 =>
            (scope (fun lean_a237 : let2 =>
              have lean_s0 : let850 := by timed Eq.symm lean_r3
              have lean_s1 : let38 := by timed eqResolve lean_a237 lean_s0
              let lean_s2 := by timed And.intro lean_a235 lean_a233
              have lean_s3 : let851 := by timed And.intro lean_s1 lean_s2
              have lean_s4 : let853 :=
                (scope (fun lean_a238 : let38 =>
                  (scope (fun lean_a239 : let15 =>
                    (scope (fun lean_a240 : let21 =>
                      have lean_s4 : let789 := by timed Eq.symm lean_a240
                      have lean_s5 : let137 := by timed Eq.symm lean_a239
                      have lean_s6 : let15 := by timed Eq.symm lean_s5
                      let lean_s7 := by timed Eq.trans lean_s4 lean_s6
                      have lean_s8 : let849 := by timed Eq.symm lean_a238
                      have lean_s9 : let38 := by timed Eq.symm lean_s8
                      have lean_s10 : let854 := by timed flipCongrArg lean_s9 [xx5fcount]
                      have lean_s11 : let752 := by timed Eq.trans lean_s7 lean_s10
                      show let752 from lean_s11
                ))))))
              have lean_s5 : let852 := by liftOrNToImp lean_s4, 3
              have lean_s6 : let752 := by timed modusPonens lean_s3 lean_s5
              have lean_s7 : let861 := by timed And.intro lean_a234 lean_a232
              have lean_s8 : (Or let856 (Or let745 let264)) :=
                (scope (fun lean_a239 : let33 =>
                  (scope (fun lean_a240 : let34 =>
                    have lean_s8 : let782 := by timed Eq.symm lean_a240
                    have lean_s9 : (Eq let32 let18) := by timed Eq.symm lean_a239
                    have lean_s10 : let33 := by timed Eq.symm lean_s9
                    have lean_s11 : let264 := by timed Eq.trans lean_s8 lean_s10
                    show let264 from lean_s11
                ))))
              have lean_s9 : (Implies let861 let264) := by liftOrNToImp lean_s8, 2
              have lean_s10 : let264 := by timed modusPonens lean_s7 lean_s9
              have lean_s11 : (Or (Not let264) let859) :=
                (scope (fun lean_a239 : let264 =>
                  have lean_s11 : let263 := by timed eqResolve lean_a239 lean_r26
                  have lean_s12 : let859 := by timed Eq.symm lean_s11
                  show let859 from lean_s12
                ))
              have lean_s12 : (Implies let264 let859) := by liftOrNToImp lean_s11, 1
              have lean_s13 : let859 := by timed modusPonens lean_s10 lean_s12
              have lean_s14 : let860 := by timed And.intro lean_s1 lean_s13
              have lean_s15 : (Or let846 (Or (Not let859) let811)) :=
                (scope (fun lean_a240 : let38 =>
                  (scope (fun lean_a241 : let859 =>
                    have lean_s15 : let263 := by timed Eq.symm lean_a241
                    have lean_s16 : let859 := by timed Eq.symm lean_s15
                    have lean_s17 : let849 := by timed Eq.symm lean_a240
                    have lean_s18 : let38 := by timed Eq.symm lean_s17
                    have lean_s19 : let848 := by timed flipCongrArg lean_s18 [sx5fcount]
                    have lean_s20 : let811 := by timed Eq.trans lean_s16 lean_s19
                    show let811 from lean_s20
                ))))
              have lean_s16 : (Implies let860 let811) := by liftOrNToImp lean_s15, 2
              have lean_s17 : let811 := by timed modusPonens lean_s14 lean_s16
              let lean_s18 := by timed And.intro lean_s6 lean_s17
              have lean_s19 : let812 := by timed And.intro lean_a236 lean_s18
              show let812 from lean_s19
  ))))))))))))
have lean_s1 : let857 := by liftOrNToImp lean_s0, 6
have lean_s2 : (Eq let35 let35) := by timed rfl
let lean_s3 := by timed flipCongrArg lean_s2 [Implies]
have lean_s4 : (Or let553 (Or let757 (Or (Not let811) False))) :=
  (scope (fun lean_a241 : let9 =>
    (scope (fun lean_a242 : let752 =>
      (scope (fun lean_a243 : let811 =>
        have lean_s4 : let815 := by timed Eq.symm lean_a243
        have lean_s5 : (Or let816 False) :=
          (scope (fun lean_a243 : let815 =>
            have lean_s5 : let64 := by timed trueElim lean_r13
            have lean_s6 : let820 := by timed And.intro lean_s5 lean_a243
            have lean_s7 : (Implies let820 let819) := by arithMulPos [let7, let11, let50], 4
            have lean_s8 : let819 := by timed modusPonens lean_s6 lean_s7
            have lean_s9 : let769 := by timed Eq.symm lean_a242
            have lean_s10 : let770 := by timed And.intro lean_s5 lean_s9
            have lean_s11 : let771 := by arithMulPos [let6, let13, let50], 4
            have lean_s12 : let768 := by timed modusPonens lean_s10 lean_s11
            have lean_s13 : let306 := by timed trueElim lean_r58
            have lean_s14 : let766 := by timed And.intro lean_s13 lean_a241
            have lean_s15 : let767 := by arithMulNeg [let8, let3, let51], 3
            have lean_s16 : let765 := by timed modusPonens lean_s14 lean_s15
            have lean_s17 : let818 := by sumBounds [lean_s8, lean_s12, lean_s16]
            let lean_s18 := by timed congrHAdd lean_r14 lean_r194
            have lean_s19 : (Eq let763 let445) := by timed congrHAdd lean_r126 lean_s18
            have lean_s20 : (Eq let763 let53) := by timed Eq.trans lean_s19 lean_r133
            let lean_s21 := by timed flipCongrArg lean_s20 [LE.le]
            let lean_s22 := by timed congrHAdd lean_r15 lean_r16
            have lean_s23 : (Eq let817 let55) := by timed congrHAdd lean_r12 lean_s22
            have lean_s24 : (Eq let817 let51) := by timed Eq.trans lean_s23 lean_r8
            have lean_s25 : (Eq let818 let585) := by timed congr lean_s21 lean_s24
            have lean_s26 : (Eq let818 False) := by timed Eq.trans lean_s25 lean_r213
            show False from by timed eqResolve lean_s17 lean_s26
          ))
        have lean_s6 : let816 := by liftOrNToNeg lean_s5
        show False from by timed contradiction lean_s4 lean_s6
  ))))))
have lean_s5 : (Not let812) := by liftOrNToNeg lean_s4
have lean_s6 : let814 := by timed falseIntro lean_s5
have lean_s7 : (Eq let857 let37) := by timed congr lean_s3 lean_s6
have lean_s8 : (Eq let857 let36) := by timed Eq.trans lean_s7 lean_r2
have lean_s9 : let36 := by timed eqResolve lean_s1 lean_s8
have lean_s10 : (Or let745 (Or let747 (Or let856 let840))) := by timed flipNotAnd lean_s9 [let34, let21, let33, let15, let9, let2]
have lean_s11 : (Or let553 (Or let745 (Or let856 let836))) := by permutateOr lean_s10, [4, 0, 2, 1, 3, 5], (- 1)
have lean_s12 : let696 := by timed rfl
have lean_s13 : (Eq let239 let239) := by timed rfl
let lean_s14 := by timed congr lean_s12 lean_s13
have lean_s15 : (Eq let238 let238) := by timed rfl
let lean_s16 := by timed congr lean_s12 lean_s15
have lean_s17 : (Eq let237 let237) := by timed rfl
let lean_s18 := by timed congr lean_s12 lean_s17
have lean_s19 : (Eq let236 let236) := by timed rfl
let lean_s20 := by timed congr lean_s12 lean_s19
have lean_s21 : (Eq let235 let235) := by timed rfl
let lean_s22 := by timed congr lean_s12 lean_s21
have lean_s23 : (Eq let234 let234) := by timed rfl
let lean_s24 := by timed congr lean_s12 lean_s23
have lean_s25 : (Eq let233 let233) := by timed rfl
let lean_s26 := by timed congr lean_s12 lean_s25
have lean_s27 : (Eq let232 let232) := by timed rfl
let lean_s28 := by timed congr lean_s12 lean_s27
have lean_s29 : (Eq let231 let231) := by timed rfl
let lean_s30 := by timed congr lean_s12 lean_s29
have lean_s31 : (Eq let230 let230) := by timed rfl
let lean_s32 := by timed congr lean_s12 lean_s31
have lean_s33 : let732 := by timed rfl
let lean_s34 := by timed flipCongrArg lean_s33 [Eq]
have lean_s35 : (Eq let229 let298) := by timed congr lean_s34 lean_r51
have lean_s36 : (Eq let229 let297) := by timed Eq.trans lean_s35 lean_r53
let lean_s37 := by timed congr lean_s12 lean_s36
let lean_s38 := by timed congr lean_s12 lean_r21
have lean_s39 : let697 := by timed rfl
let lean_s40 := by timed flipCongrArg lean_s39 [GE.ge]
have lean_s41 : (Eq fmt0 fmt0) := by timed rfl
have lean_s42 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s43 := by timed congrHAdd lean_s42 lean_r96
have lean_s44 : (Eq let441 let465) := by timed congrHAdd lean_s41 lean_s43
have lean_s45 : (Eq let441 let250) := by timed Eq.trans lean_s44 lean_r144
have lean_s46 : (Eq let368 let250) := by timed Eq.trans lean_r129 lean_s45
have lean_s47 : (Eq let225 let250) := by timed Eq.trans lean_r87 lean_s46
have lean_s48 : (Eq let300 let251) := by timed congr lean_s40 lean_s47
have lean_s49 : (Eq let300 let249) := by timed Eq.trans lean_s48 lean_r22
have lean_s50 : (Eq let301 let638) := by timed flipCongrArg lean_s49 [Not]
have lean_s51 : (Eq let226 let638) := by timed Eq.trans lean_r55 lean_s50
let lean_s52 := by timed congr lean_s12 lean_s51
let lean_s53 := by timed flipCongrArg lean_s39 [LE.le]
have lean_s54 : (Eq let530 let256) := by timed congr lean_s53 lean_r212
have lean_s55 : (Eq let530 let254) := by timed Eq.trans lean_s54 lean_r23
have lean_s56 : (Eq let531 let325) := by timed flipCongrArg lean_s55 [Not]
have lean_s57 : (Eq let531 let253) := by timed Eq.trans lean_s56 lean_r64
have lean_s58 : (Eq let223 let253) := by timed Eq.trans lean_r158 lean_s57
let lean_s59 := by timed congr lean_s12 lean_s58
let lean_s60 := by timed congr lean_s12 lean_r24
have lean_s61 : let731 := by timed rfl
let lean_s62 := by timed flipCongrArg lean_s61 [GE.ge]
have lean_s63 : (Eq distance distance) := by timed rfl
let lean_s64 := by timed congrHAdd lean_s42 lean_r28
let lean_s65 := by timed congrHAdd lean_s63 lean_s64
have lean_s66 : (Eq let265 let268) := by timed congrHAdd lean_s33 lean_s65
have lean_s67 : (Eq let265 let267) := by timed Eq.trans lean_s66 lean_r29
have lean_s68 : (Eq let262 let267) := by timed Eq.trans lean_r27 lean_s67
have lean_s69 : (Eq let220 let267) := by timed Eq.trans lean_r25 lean_s68
have lean_s70 : (Eq let455 let271) := by timed congr lean_s62 lean_s69
have lean_s71 : (Eq let455 let270) := by timed Eq.trans lean_s70 lean_r30
have lean_s72 : (Eq let456 let637) := by timed flipCongrArg lean_s71 [Not]
have lean_s73 : (Eq let221 let637) := by timed Eq.trans lean_r138 lean_s72
let lean_s74 := by timed congr lean_s12 lean_s73
let lean_s75 := by timed flipCongrArg lean_s61 [Eq]
have lean_s76 : let572 := by timed rfl
let lean_s77 := by timed flipCongrArg lean_s76 [HMul.hMul]
let lean_s78 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s79 : (Eq let362 let591) := by timed congr lean_s78 lean_r31
have lean_s80 : (Eq let362 let5) := by timed Eq.trans lean_s79 lean_r218
have lean_s81 : (Eq let210 let5) := by timed Eq.trans lean_r84 lean_s80
let lean_s82 := by timed flipCongrArg lean_s81 [HAdd.hAdd]
have lean_s83 : (Eq let247 let247) := by timed rfl
have lean_s84 : (Eq let408 let403) := by timed congr lean_s82 lean_s83
have lean_s85 : (Eq let408 let402) := by timed Eq.trans lean_s84 lean_r110
have lean_s86 : (Eq let211 let402) := by timed Eq.trans lean_r114 lean_s85
have lean_s87 : (Eq let214 let633) := by timed flipCongrArg lean_s86 [sx5fcount]
have lean_s88 : (Eq let215 let634) := by timed congr lean_s77 lean_s87
let lean_s89 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s90 : (Eq let212 let631) := by timed flipCongrArg lean_s86 [xx5fcount]
have lean_s91 : (Eq let213 let632) := by timed congr lean_s89 lean_s90
let lean_s92 := by timed congrHAdd lean_s88 lean_s91
have lean_s93 : (Eq let359 let635) := by timed congrHAdd lean_s33 lean_s92
have lean_s94 : (Eq let216 let635) := by timed Eq.trans lean_r82 lean_s93
have lean_s95 : (Eq let217 let636) := by timed congr lean_s75 lean_s94
let lean_s96 := by timed congr lean_s12 lean_s95
have lean_s97 : let698 := by timed rfl
let lean_s98 := by timed congr lean_s97 lean_r189
let lean_s99 := by timed congr lean_s97 lean_r32
let lean_s100 := by timed congr lean_s97 lean_r33
let lean_s101 := by timed congr lean_s97 lean_r34
let lean_s102 := by timed congr lean_s97 lean_r186
let lean_s103 := by timed congr lean_s97 lean_r171
let lean_s104 := by timed congr lean_s97 lean_r35
have lean_s105 : let723 := by timed rfl
let lean_s106 := by timed congr lean_s97 lean_s105
let lean_s107 := by timed congr lean_s97 lean_r185
let lean_s108 := by timed congr lean_s97 lean_r46
let lean_s109 := by timed congr lean_s97 lean_r230
let lean_s110 := by timed congr lean_s97 lean_r36
let lean_s111 := by timed congr lean_s97 lean_r38
let lean_s112 := by timed congr lean_s97 lean_r181
let lean_s113 := by timed congr lean_s97 lean_r39
have lean_s114 : let722 := by timed rfl
let lean_s115 := by timed congr lean_s97 lean_s114
let lean_s116 := by timed congr lean_s97 lean_r227
let lean_s117 := by timed congr lean_s97 lean_r48
let lean_s118 := by timed congr lean_s97 lean_r229
let lean_s119 := by timed congr lean_s97 lean_r40
let lean_s120 := by timed congr lean_s97 lean_r41
let lean_s121 := by timed congr lean_s97 lean_r42
let lean_s122 := by timed congr lean_s97 lean_r43
have lean_s123 : let721 := by timed rfl
let lean_s124 := by timed congr lean_s97 lean_s123
let lean_s125 := by timed congr lean_s97 lean_r71
let lean_s126 := by timed congr lean_s97 lean_r54
let lean_s127 := by timed congr lean_s97 lean_r141
let lean_s128 := by timed congr lean_s97 lean_r135
let lean_s129 := by timed congr lean_s97 lean_r45
let lean_s130 := by timed congr lean_s97 lean_r153
let lean_s131 := by timed congr lean_s97 lean_r210
have lean_s132 : let720 := by timed rfl
let lean_s133 := by timed congr lean_s97 lean_s132
let lean_s134 := by timed congr lean_s97 lean_r80
let lean_s135 := by timed congr lean_s97 lean_r97
let lean_s136 := by timed congr lean_s97 lean_r73
let lean_s137 := by timed congr lean_s97 lean_r208
let lean_s138 := by timed congr lean_s97 lean_r118
let lean_s139 := by timed congr lean_s97 lean_r156
let lean_s140 := by timed congr lean_s97 lean_r120
have lean_s141 : let719 := by timed rfl
let lean_s142 := by timed congr lean_s140 lean_s141
let lean_s143 := by timed congr lean_s139 lean_s142
let lean_s144 := by timed congr lean_s138 lean_s143
let lean_s145 := by timed congr lean_s137 lean_s144
let lean_s146 := by timed congr lean_s136 lean_s145
let lean_s147 := by timed congr lean_s135 lean_s146
let lean_s148 := by timed congr lean_s134 lean_s147
let lean_s149 := by timed congr lean_s133 lean_s148
let lean_s150 := by timed congr lean_s131 lean_s149
let lean_s151 := by timed congr lean_s130 lean_s150
let lean_s152 := by timed congr lean_s129 lean_s151
let lean_s153 := by timed congr lean_s128 lean_s152
let lean_s154 := by timed congr lean_s127 lean_s153
let lean_s155 := by timed congr lean_s126 lean_s154
let lean_s156 := by timed congr lean_s125 lean_s155
let lean_s157 := by timed congr lean_s124 lean_s156
let lean_s158 := by timed congr lean_s122 lean_s157
let lean_s159 := by timed congr lean_s121 lean_s158
let lean_s160 := by timed congr lean_s120 lean_s159
let lean_s161 := by timed congr lean_s119 lean_s160
let lean_s162 := by timed congr lean_s118 lean_s161
let lean_s163 := by timed congr lean_s117 lean_s162
let lean_s164 := by timed congr lean_s116 lean_s163
let lean_s165 := by timed congr lean_s115 lean_s164
let lean_s166 := by timed congr lean_s113 lean_s165
let lean_s167 := by timed congr lean_s112 lean_s166
let lean_s168 := by timed congr lean_s111 lean_s167
let lean_s169 := by timed congr lean_s110 lean_s168
let lean_s170 := by timed congr lean_s109 lean_s169
let lean_s171 := by timed congr lean_s108 lean_s170
let lean_s172 := by timed congr lean_s107 lean_s171
let lean_s173 := by timed congr lean_s106 lean_s172
let lean_s174 := by timed congr lean_s104 lean_s173
let lean_s175 := by timed congr lean_s103 lean_s174
let lean_s176 := by timed congr lean_s102 lean_s175
let lean_s177 := by timed congr lean_s101 lean_s176
let lean_s178 := by timed congr lean_s100 lean_s177
let lean_s179 := by timed congr lean_s99 lean_s178
have lean_s180 : (Eq let394 let630) := by timed congr lean_s98 lean_s179
have lean_s181 : (Eq let209 let630) := by timed Eq.trans lean_r106 lean_s180
let lean_s182 := by timed congr lean_s12 lean_s181
let lean_s183 := by timed flipCongrArg lean_r189 [And]
have lean_s184 : (Eq let179 let628) := by timed congr lean_s183 lean_r46
have lean_s185 : let718 := by timed rfl
have lean_s186 : let717 := by timed rfl
have lean_s187 : (Eq let180 let629) := by timed congrIte lean_s184 lean_s185 lean_s186
let lean_s188 := by timed congr lean_s12 lean_s187
let lean_s189 := by timed flipCongrArg lean_r185 [And]
have lean_s190 : (Eq let176 let626) := by timed congr lean_s189 lean_r48
have lean_s191 : (Eq let17 let17) := by timed rfl
let lean_s192 := by timed flipCongrArg lean_s191 [Eq]
have lean_s193 : (Eq let174 let295) := by timed congr lean_s192 lean_r174
have lean_s194 : (Eq let174 let33) := by timed Eq.trans lean_s193 lean_r50
have lean_s195 : (Eq let177 let627) := by timed congrIte lean_s190 lean_s194 lean_r52
let lean_s196 := by timed congr lean_s12 lean_s195
let lean_s197 := by timed flipCongrArg lean_r227 [And]
have lean_s198 : (Eq let170 let624) := by timed congr lean_s197 lean_r54
have lean_s199 : (Eq let159 let159) := by timed rfl
let lean_s200 := by timed flipCongrArg lean_s199 [Eq]
have lean_s201 : (Eq let168 let304) := by timed congr lean_s200 lean_r151
have lean_s202 : (Eq let168 let302) := by timed Eq.trans lean_s201 lean_r56
have lean_s203 : (Eq let171 let625) := by timed congrIte lean_s198 lean_s202 lean_r130
let lean_s204 := by timed congr lean_s12 lean_s203
let lean_s205 := by timed flipCongrArg lean_r71 [And]
have lean_s206 : (Eq let164 let622) := by timed congr lean_s205 lean_r97
have lean_s207 : (Eq let151 let151) := by timed rfl
let lean_s208 := by timed flipCongrArg lean_s207 [Eq]
have lean_s209 : (Eq let162 let309) := by timed congr lean_s208 lean_r104
have lean_s210 : (Eq let162 let307) := by timed Eq.trans lean_s209 lean_r59
have lean_s211 : (Eq let165 let623) := by timed congrIte lean_s206 lean_s210 lean_r90
let lean_s212 := by timed congr lean_s12 lean_s211
let lean_s213 := by timed flipCongrArg lean_r80 [And]
have lean_s214 : (Eq let157 let620) := by timed congr lean_s213 lean_r197
have lean_s215 : (Eq let152 let152) := by timed rfl
let lean_s216 := by timed flipCongrArg lean_s215 [Eq]
have lean_s217 : (Eq let155 let568) := by timed congr lean_s216 lean_r94
have lean_s218 : (Eq let155 let493) := by timed Eq.trans lean_s217 lean_r195
have lean_s219 : (Eq let158 let621) := by timed congrIte lean_s214 lean_s218 lean_r103
let lean_s220 := by timed congr lean_s12 lean_s219
let lean_s221 := by timed flipCongrArg lean_r189 [And]
have lean_s222 : (Eq let149 let618) := by timed congr lean_s221 lean_r230
have lean_s223 : let708 := by timed rfl
have lean_s224 : let707 := by timed rfl
have lean_s225 : (Eq let150 let619) := by timed congrIte lean_s222 lean_s223 lean_s224
let lean_s226 := by timed congr lean_s12 lean_s225
let lean_s227 := by timed flipCongrArg lean_r185 [And]
have lean_s228 : (Eq let143 let616) := by timed congr lean_s227 lean_r229
have lean_s229 : (Eq let12 let12) := by timed rfl
let lean_s230 := by timed flipCongrArg lean_s229 [Eq]
have lean_s231 : (Eq let139 let332) := by timed congr lean_s230 lean_r161
have lean_s232 : (Eq let139 let311) := by timed Eq.trans lean_s231 lean_r67
have lean_s233 : (Eq let144 let617) := by timed congrIte lean_s228 lean_s232 lean_r169
let lean_s234 := by timed congr lean_s12 lean_s233
let lean_s235 := by timed flipCongrArg lean_r227 [And]
have lean_s236 : (Eq let135 let614) := by timed congr lean_s235 lean_r141
have lean_s237 : (Eq let120 let120) := by timed rfl
let lean_s238 := by timed flipCongrArg lean_s237 [Eq]
have lean_s239 : (Eq let131 let595) := by timed congr lean_s238 lean_r226
have lean_s240 : (Eq let131 let482) := by timed Eq.trans lean_s239 lean_r224
have lean_s241 : (Eq let136 let615) := by timed congrIte lean_s236 lean_s240 lean_r223
let lean_s242 := by timed congr lean_s12 lean_s241
let lean_s243 := by timed flipCongrArg lean_r71 [And]
have lean_s244 : (Eq let127 let612) := by timed congr lean_s243 lean_r73
have lean_s245 : (Eq let108 let108) := by timed rfl
let lean_s246 := by timed flipCongrArg lean_s245 [Eq]
have lean_s247 : (Eq let123 let350) := by timed congr lean_s246 lean_r222
have lean_s248 : (Eq let123 let348) := by timed Eq.trans lean_s247 lean_r76
have lean_s249 : (Eq let128 let613) := by timed congrIte lean_s244 lean_s248 lean_r204
let lean_s250 := by timed congr lean_s12 lean_s249
let lean_s251 := by timed flipCongrArg lean_r80 [And]
have lean_s252 : (Eq let118 let610) := by timed congr lean_s251 lean_r221
have lean_s253 : (Eq let109 let109) := by timed rfl
let lean_s254 := by timed flipCongrArg lean_s253 [Eq]
have lean_s255 : (Eq let112 let432) := by timed congr lean_s254 lean_r220
have lean_s256 : (Eq let112 let430) := by timed Eq.trans lean_s255 lean_r125
have lean_s257 : (Eq let119 let611) := by timed congrIte lean_s252 lean_s256 lean_r112
let lean_s258 := by timed congr lean_s12 lean_s257
have lean_s259 : let698 := by timed rfl
let lean_s260 := by timed flipCongrArg lean_s39 [Eq]
have lean_s261 : (Eq let106 let608) := by timed congr lean_s260 lean_r214
let lean_s262 := by timed congr lean_s259 lean_s261
let lean_s263 := by timed flipCongrArg lean_s39 [Eq]
have lean_s264 : (Eq let105 let607) := by timed congr lean_s263 lean_r212
let lean_s265 := by timed congr lean_s259 lean_s264
let lean_s266 := by timed flipCongrArg lean_s39 [Eq]
have lean_s267 : (Eq let104 let606) := by timed congr lean_s266 lean_r92
let lean_s268 := by timed congr lean_s259 lean_s267
let lean_s269 := by timed flipCongrArg lean_s39 [Eq]
have lean_s270 : (Eq let102 let605) := by timed congr lean_s269 lean_r200
let lean_s271 := by timed congr lean_s259 lean_s270
let lean_s272 := by timed flipCongrArg lean_s39 [Eq]
have lean_s273 : (Eq let100 let604) := by timed congr lean_s272 lean_r107
let lean_s274 := by timed congr lean_s271 lean_s273
let lean_s275 := by timed congr lean_s268 lean_s274
let lean_s276 := by timed congr lean_s265 lean_s275
have lean_s277 : (Eq let587 let609) := by timed congr lean_s262 lean_s276
have lean_s278 : (Eq let107 let609) := by timed Eq.trans lean_r216 lean_s277
let lean_s279 := by timed congr lean_s12 lean_s278
let lean_s280 := by timed flipCongrArg lean_s61 [Eq]
have lean_s281 : (Eq let97 let539) := by timed congr lean_s280 lean_r214
have lean_s282 : (Eq let97 let538) := by timed Eq.trans lean_s281 lean_r167
let lean_s283 := by timed flipCongrArg lean_s282 [Or]
let lean_s284 := by timed flipCongrArg lean_s61 [Eq]
have lean_s285 : (Eq let95 let453) := by timed congr lean_s284 lean_r212
have lean_s286 : (Eq let95 let452) := by timed Eq.trans lean_s285 lean_r136
have lean_s287 : (Eq let98 let603) := by timed congr lean_s283 lean_s286
let lean_s288 := by timed congr lean_s12 lean_s287
have lean_s289 : let696 := by timed rfl
let lean_s290 := by timed congr lean_s289 lean_r211
have lean_s291 : (Eq let88 let397) := by timed flipCongrArg lean_r209 [selectx5fformat]
let lean_s292 := by timed flipCongrArg lean_s291 [Eq]
have lean_s293 : (Eq s s) := by timed rfl
have lean_s294 : (Eq let89 let529) := by timed congr lean_s292 lean_s293
have lean_s295 : (Eq let89 let528) := by timed Eq.trans lean_s294 lean_r157
let lean_s296 := by timed congr lean_s289 lean_s295
let lean_s297 := by timed congr lean_s289 lean_r207
have lean_s298 : (Eq let83 let545) := by timed flipCongrArg lean_r206 [selectx5fformat]
let lean_s299 := by timed flipCongrArg lean_s298 [Eq]
have lean_s300 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s301 : (Eq let84 let547) := by timed congr lean_s299 lean_s300
have lean_s302 : (Eq let84 let546) := by timed Eq.trans lean_s301 lean_r175
let lean_s303 := by timed congr lean_s289 lean_s302
have lean_s304 : (Eq let80 let575) := by timed flipCongrArg lean_r75 [selectx5fformat]
let lean_s305 := by timed flipCongrArg lean_s304 [Eq]
have lean_s306 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s307 : (Eq let81 let577) := by timed congr lean_s305 lean_s306
have lean_s308 : (Eq let81 let576) := by timed Eq.trans lean_s307 lean_r203
let lean_s309 := by timed congr lean_s289 lean_s308
have lean_s310 : (Eq let77 let413) := by timed flipCongrArg lean_r202 [selectx5fformat]
let lean_s311 := by timed flipCongrArg lean_s310 [Eq]
have lean_s312 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s313 : (Eq let78 let415) := by timed congr lean_s311 lean_s312
have lean_s314 : (Eq let78 let414) := by timed Eq.trans lean_s313 lean_r117
let lean_s315 := by timed congr lean_s309 lean_s314
let lean_s316 := by timed congr lean_s303 lean_s315
let lean_s317 := by timed congr lean_s297 lean_s316
let lean_s318 := by timed congr lean_s296 lean_s317
have lean_s319 : (Eq let525 let601) := by timed congr lean_s290 lean_s318
have lean_s320 : (Eq let92 let601) := by timed Eq.trans lean_r154 lean_s319
have lean_s321 : (Eq let93 let602) := by timed flipCongrArg lean_s320 [Not]
let lean_s322 := by timed congr lean_s288 lean_s321
let lean_s323 := by timed congr lean_s279 lean_s322
let lean_s324 := by timed congr lean_s258 lean_s323
let lean_s325 := by timed congr lean_s250 lean_s324
let lean_s326 := by timed congr lean_s242 lean_s325
let lean_s327 := by timed congr lean_s234 lean_s326
let lean_s328 := by timed congr lean_s226 lean_s327
let lean_s329 := by timed congr lean_s220 lean_s328
let lean_s330 := by timed congr lean_s212 lean_s329
let lean_s331 := by timed congr lean_s204 lean_s330
let lean_s332 := by timed congr lean_s196 lean_s331
let lean_s333 := by timed congr lean_s188 lean_s332
let lean_s334 := by timed congr lean_s182 lean_s333
let lean_s335 := by timed congr lean_s96 lean_s334
let lean_s336 := by timed congr lean_s74 lean_s335
let lean_s337 := by timed congr lean_s60 lean_s336
let lean_s338 := by timed congr lean_s59 lean_s337
let lean_s339 := by timed congr lean_s52 lean_s338
let lean_s340 := by timed congr lean_s38 lean_s339
let lean_s341 := by timed congr lean_s37 lean_s340
let lean_s342 := by timed congr lean_s32 lean_s341
let lean_s343 := by timed congr lean_s30 lean_s342
let lean_s344 := by timed congr lean_s28 lean_s343
let lean_s345 := by timed congr lean_s26 lean_s344
let lean_s346 := by timed congr lean_s24 lean_s345
let lean_s347 := by timed congr lean_s22 lean_s346
let lean_s348 := by timed congr lean_s20 lean_s347
let lean_s349 := by timed congr lean_s18 lean_s348
let lean_s350 := by timed congr lean_s16 lean_s349
have lean_s351 : (Eq let240 let639) := by timed congr lean_s14 lean_s350
have lean_s352 : (Eq let241 let639) := by timed Eq.trans lean_r20 lean_s351
have lean_s353 : let696 := by timed rfl
have lean_s354 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s355 : let636 := by andElim lean_s354, 16
have lean_s356 : let731 := by timed rfl
let lean_s357 := by timed flipCongrArg lean_s356 [Eq]
have lean_s358 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s359 : let297 := by andElim lean_s358, 10
have lean_s360 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s361 : let230 := by andElim lean_s360, 9
have lean_s362 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s363 : let231 := by andElim lean_s362, 8
have lean_s364 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s365 : let232 := by andElim lean_s364, 7
have lean_s366 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s367 : let233 := by andElim lean_s366, 6
have lean_s368 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s369 : let234 := by andElim lean_s368, 5
have lean_s370 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s371 : let235 := by andElim lean_s370, 4
have lean_s372 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s373 : let236 := by andElim lean_s372, 3
have lean_s374 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s375 : let237 := by andElim lean_s374, 2
have lean_s376 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s377 : let238 := by andElim lean_s376, 1
have lean_s378 : let639 := by timed eqResolve lean_a231 lean_s352
have lean_s379 : let239 := by andElim lean_s378, 0
let lean_s380 := by timed And.intro lean_s377 lean_s379
let lean_s381 := by timed And.intro lean_s375 lean_s380
let lean_s382 := by timed And.intro lean_s373 lean_s381
let lean_s383 := by timed And.intro lean_s371 lean_s382
let lean_s384 := by timed And.intro lean_s369 lean_s383
let lean_s385 := by timed And.intro lean_s367 lean_s384
let lean_s386 := by timed And.intro lean_s365 lean_s385
let lean_s387 := by timed And.intro lean_s363 lean_s386
have lean_s388 : let729 := by timed And.intro lean_s361 lean_s387
have lean_s389 : let230 := by andElim lean_s388, 0
let lean_s390 := by timed flipCongrArg lean_s389 [Eq]
have lean_s391 : let732 := by timed rfl
let lean_s392 := by timed flipCongrArg lean_s391 [HAdd.hAdd]
have lean_s393 : let239 := by andElim lean_s388, 9
have lean_s394 : (Eq let218 let72) := by timed congr lean_s392 lean_s393
have lean_s395 : (Eq let297 let733) := by timed congr lean_s390 lean_s394
have lean_s396 : let561 := by timed rfl
let lean_s397 := by timed flipCongrArg lean_s396 [Eq]
have lean_s398 : (Eq let733 let75) := by timed congr lean_s397 lean_r18
have lean_s399 : (Eq let733 let74) := by timed Eq.trans lean_s398 lean_r19
have lean_s400 : (Eq let297 let74) := by timed Eq.trans lean_s395 lean_s399
have lean_s401 : let74 := by timed eqResolve lean_s359 lean_s400
let lean_s402 := by timed And.intro lean_s377 lean_s379
let lean_s403 := by timed And.intro lean_s375 lean_s402
let lean_s404 := by timed And.intro lean_s373 lean_s403
let lean_s405 := by timed And.intro lean_s371 lean_s404
let lean_s406 := by timed And.intro lean_s369 lean_s405
let lean_s407 := by timed And.intro lean_s367 lean_s406
let lean_s408 := by timed And.intro lean_s365 lean_s407
let lean_s409 := by timed And.intro lean_s363 lean_s408
let lean_s410 := by timed And.intro lean_s361 lean_s409
have lean_s411 : let730 := by timed And.intro lean_s401 lean_s410
have lean_s412 : let74 := by andElim lean_s411, 0
have lean_s413 : let572 := by timed rfl
let lean_s414 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s415 : let724 := by timed rfl
have lean_s416 : let697 := by timed rfl
have lean_s417 : let726 := by timed rfl
let lean_s418 := by timed flipCongrArg lean_s417 [HMul.hMul]
have lean_s419 : let230 := by andElim lean_s411, 1
have lean_s420 : let739 := by timed congr lean_s418 lean_s419
let lean_s421 := by timed congrHAdd lean_s416 lean_s420
have lean_s422 : let738 := by timed congrHAdd lean_s415 lean_s421
have lean_s423 : let741 := by timed flipCongrArg lean_s422 [sx5fcount]
have lean_s424 : let740 := by timed congr lean_s414 lean_s423
let lean_s425 := by timed flipCongrArg lean_s413 [HMul.hMul]
have lean_s426 : let737 := by timed flipCongrArg lean_s422 [xx5fcount]
have lean_s427 : let736 := by timed congr lean_s425 lean_s426
let lean_s428 := by timed congrHAdd lean_s424 lean_s427
have lean_s429 : let735 := by timed congrHAdd lean_s412 lean_s428
have lean_s430 : (Eq let636 let734) := by timed congr lean_s357 lean_s429
let lean_s431 := by timed flipCongrArg lean_s61 [Eq]
have lean_s432 : (Eq let73 let73) := by timed rfl
let lean_s433 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s434 : let724 := by timed rfl
let lean_s435 := by timed congrHAdd lean_s39 lean_r228
have lean_s436 : (Eq let677 let457) := by timed congrHAdd lean_s434 lean_s435
have lean_s437 : (Eq let677 let5) := by timed Eq.trans lean_s436 lean_r139
have lean_s438 : (Eq let680 let7) := by timed flipCongrArg lean_s437 [sx5fcount]
have lean_s439 : (Eq let681 let317) := by timed congr lean_s433 lean_s438
let lean_s440 := by timed flipCongrArg lean_s76 [HMul.hMul]
have lean_s441 : (Eq let678 let6) := by timed flipCongrArg lean_s437 [xx5fcount]
have lean_s442 : (Eq let679 let316) := by timed congr lean_s440 lean_s441
let lean_s443 := by timed congrHAdd lean_s439 lean_s442
have lean_s444 : (Eq let682 let321) := by timed congrHAdd lean_s432 lean_s443
have lean_s445 : (Eq let734 let728) := by timed congr lean_s431 lean_s444
have lean_s446 : (Eq let636 let728) := by timed Eq.trans lean_s430 lean_s445
have lean_s447 : let728 := by timed eqResolve lean_s355 lean_s446
let lean_s448 := by timed And.intro lean_s377 lean_s379
let lean_s449 := by timed And.intro lean_s375 lean_s448
let lean_s450 := by timed And.intro lean_s373 lean_s449
let lean_s451 := by timed And.intro lean_s371 lean_s450
let lean_s452 := by timed And.intro lean_s369 lean_s451
let lean_s453 := by timed And.intro lean_s367 lean_s452
let lean_s454 := by timed And.intro lean_s365 lean_s453
let lean_s455 := by timed And.intro lean_s363 lean_s454
let lean_s456 := by timed And.intro lean_s361 lean_s455
let lean_s457 := by timed And.intro lean_s401 lean_s456
have lean_s458 : (And let728 let730) := by timed And.intro lean_s447 lean_s457
have lean_s459 : let239 := by andElim lean_s458, 11
let lean_s460 := by timed flipCongrArg lean_s459 [Eq]
have lean_s461 : let586 := by timed rfl
have lean_s462 : (Eq let239 let586) := by timed congr lean_s460 lean_s461
let lean_s463 := by timed congr lean_s353 lean_s462
have lean_s464 : let238 := by andElim lean_s458, 10
let lean_s465 := by timed flipCongrArg lean_s464 [Eq]
have lean_s466 : let569 := by timed rfl
have lean_s467 : (Eq let238 let569) := by timed congr lean_s465 lean_s466
let lean_s468 := by timed congr lean_s353 lean_s467
have lean_s469 : let237 := by andElim lean_s458, 9
let lean_s470 := by timed flipCongrArg lean_s469 [Eq]
have lean_s471 : let572 := by timed rfl
have lean_s472 : (Eq let237 let572) := by timed congr lean_s470 lean_s471
let lean_s473 := by timed congr lean_s353 lean_s472
have lean_s474 : let236 := by andElim lean_s458, 8
let lean_s475 := by timed flipCongrArg lean_s474 [Eq]
have lean_s476 : let571 := by timed rfl
have lean_s477 : (Eq let236 let571) := by timed congr lean_s475 lean_s476
let lean_s478 := by timed congr lean_s353 lean_s477
have lean_s479 : let235 := by andElim lean_s458, 7
let lean_s480 := by timed flipCongrArg lean_s479 [Eq]
have lean_s481 : (Eq let235 let569) := by timed congr lean_s480 lean_s466
let lean_s482 := by timed congr lean_s353 lean_s481
have lean_s483 : let234 := by andElim lean_s458, 6
let lean_s484 := by timed flipCongrArg lean_s483 [Eq]
have lean_s485 : (Eq let234 let572) := by timed congr lean_s484 lean_s471
let lean_s486 := by timed congr lean_s353 lean_s485
have lean_s487 : let233 := by andElim lean_s458, 5
let lean_s488 := by timed flipCongrArg lean_s487 [Eq]
have lean_s489 : let520 := by timed rfl
have lean_s490 : (Eq let233 let520) := by timed congr lean_s488 lean_s489
let lean_s491 := by timed congr lean_s353 lean_s490
have lean_s492 : let232 := by andElim lean_s458, 4
let lean_s493 := by timed flipCongrArg lean_s492 [Eq]
have lean_s494 : let566 := by timed rfl
have lean_s495 : (Eq let232 let566) := by timed congr lean_s493 lean_s494
let lean_s496 := by timed congr lean_s353 lean_s495
have lean_s497 : let231 := by andElim lean_s458, 3
let lean_s498 := by timed flipCongrArg lean_s497 [Eq]
have lean_s499 : let564 := by timed rfl
have lean_s500 : (Eq let231 let564) := by timed congr lean_s498 lean_s499
let lean_s501 := by timed congr lean_s353 lean_s500
have lean_s502 : let230 := by andElim lean_s458, 2
let lean_s503 := by timed flipCongrArg lean_s502 [Eq]
have lean_s504 : let561 := by timed rfl
have lean_s505 : (Eq let230 let561) := by timed congr lean_s503 lean_s504
let lean_s506 := by timed congr lean_s353 lean_s505
let lean_s507 := by timed flipCongrArg lean_s502 [Eq]
have lean_s508 : let74 := by andElim lean_s458, 1
let lean_s509 := by timed flipCongrArg lean_s508 [HAdd.hAdd]
have lean_s510 : (Eq let218 let390) := by timed congr lean_s509 lean_s459
have lean_s511 : (Eq let297 let694) := by timed congr lean_s507 lean_s510
let lean_s512 := by timed congr lean_s353 lean_s511
let lean_s513 := by timed flipCongrArg lean_s502 [HAdd.hAdd]
have lean_s514 : let726 := by timed rfl
let lean_s515 := by timed flipCongrArg lean_s514 [HMul.hMul]
have lean_s516 : let728 := by andElim lean_s458, 0
have lean_s517 : (Eq let242 let324) := by timed congr lean_s515 lean_s516
have lean_s518 : (Eq let243 let691) := by timed congr lean_s513 lean_s517
let lean_s519 := by timed flipCongrArg lean_s518 [GE.ge]
have lean_s520 : let727 := by timed rfl
have lean_s521 : (Eq let244 let692) := by timed congr lean_s519 lean_s520
have lean_s522 : (Eq let245 let693) := by timed flipCongrArg lean_s521 [Not]
let lean_s523 := by timed congr lean_s353 lean_s522
have lean_s524 : let697 := by timed rfl
let lean_s525 := by timed flipCongrArg lean_s514 [HMul.hMul]
have lean_s526 : let739 := by timed congr lean_s525 lean_s502
let lean_s527 := by timed flipCongrArg lean_s514 [HMul.hMul]
have lean_s528 : (Eq let246 let426) := by timed congr lean_s527 lean_s464
let lean_s529 := by timed congrHAdd lean_s526 lean_s528
have lean_s530 : (Eq let248 let688) := by timed congrHAdd lean_s524 lean_s529
let lean_s531 := by timed flipCongrArg lean_s530 [GE.ge]
have lean_s532 : (Eq let249 let689) := by timed congr lean_s531 lean_s514
have lean_s533 : (Eq let638 let690) := by timed flipCongrArg lean_s532 [Not]
let lean_s534 := by timed congr lean_s353 lean_s533
let lean_s535 := by timed flipCongrArg lean_s524 [HAdd.hAdd]
have lean_s536 : (Eq let252 let676) := by timed congr lean_s535 lean_s526
let lean_s537 := by timed flipCongrArg lean_s536 [GE.ge]
have lean_s538 : (Eq let253 let687) := by timed congr lean_s537 lean_s476
let lean_s539 := by timed congr lean_s353 lean_s538
let lean_s540 := by timed flipCongrArg lean_s514 [HMul.hMul]
have lean_s541 : (Eq let258 let369) := by timed congr lean_s540 lean_s508
let lean_s542 := by timed flipCongrArg lean_s514 [HMul.hMul]
have lean_s543 : (Eq let257 let425) := by timed congr lean_s542 lean_s459
let lean_s544 := by timed congrHAdd lean_s541 lean_s543
have lean_s545 : (Eq let259 let580) := by timed congrHAdd lean_s516 lean_s544
let lean_s546 := by timed flipCongrArg lean_s545 [GE.ge]
have lean_s547 : (Eq let260 let686) := by timed congr lean_s546 lean_s504
let lean_s548 := by timed congr lean_s353 lean_s547
let lean_s549 := by timed congrHAdd lean_s528 lean_s543
let lean_s550 := by timed congrHAdd lean_s541 lean_s549
have lean_s551 : (Eq let269 let429) := by timed congrHAdd lean_s516 lean_s550
let lean_s552 := by timed flipCongrArg lean_s551 [GE.ge]
have lean_s553 : let725 := by timed rfl
have lean_s554 : (Eq let270 let684) := by timed congr lean_s552 lean_s553
have lean_s555 : (Eq let637 let685) := by timed flipCongrArg lean_s554 [Not]
let lean_s556 := by timed congr lean_s353 lean_s555
let lean_s557 := by timed flipCongrArg lean_s516 [Eq]
let lean_s558 := by timed flipCongrArg lean_s471 [HMul.hMul]
have lean_s559 : let724 := by timed rfl
let lean_s560 := by timed congrHAdd lean_s524 lean_s526
have lean_s561 : let738 := by timed congrHAdd lean_s559 lean_s560
have lean_s562 : let741 := by timed flipCongrArg lean_s561 [sx5fcount]
have lean_s563 : let740 := by timed congr lean_s558 lean_s562
let lean_s564 := by timed flipCongrArg lean_s471 [HMul.hMul]
have lean_s565 : let737 := by timed flipCongrArg lean_s561 [xx5fcount]
have lean_s566 : let736 := by timed congr lean_s564 lean_s565
let lean_s567 := by timed congrHAdd lean_s563 lean_s566
have lean_s568 : let735 := by timed congrHAdd lean_s508 lean_s567
have lean_s569 : (Eq let636 let683) := by timed congr lean_s557 lean_s568
let lean_s570 := by timed congr lean_s353 lean_s569
have lean_s571 : let698 := by timed rfl
let lean_s572 := by timed flipCongrArg lean_s487 [Eq]
have lean_s573 : (Eq let147 let147) := by timed rfl
have lean_s574 : (Eq let562 let376) := by timed congr lean_s572 lean_s573
let lean_s575 := by timed congr lean_s571 lean_s574
let lean_s576 := by timed flipCongrArg lean_s492 [Eq]
have lean_s577 : (Eq let273 let334) := by timed congr lean_s576 lean_s573
let lean_s578 := by timed congr lean_s571 lean_s577
let lean_s579 := by timed flipCongrArg lean_s497 [Eq]
have lean_s580 : (Eq let274 let340) := by timed congr lean_s579 lean_s573
let lean_s581 := by timed congr lean_s571 lean_s580
let lean_s582 := by timed flipCongrArg lean_s469 [Eq]
have lean_s583 : (Eq let275 let346) := by timed congr lean_s582 lean_s573
let lean_s584 := by timed congr lean_s571 lean_s583
let lean_s585 := by timed flipCongrArg lean_s474 [Eq]
have lean_s586 : (Eq let559 let521) := by timed congr lean_s585 lean_s573
let lean_s587 := by timed congr lean_s571 lean_s586
let lean_s588 := by timed flipCongrArg lean_s479 [Eq]
have lean_s589 : (Eq let542 let343) := by timed congr lean_s588 lean_s573
let lean_s590 := by timed congr lean_s571 lean_s589
let lean_s591 := by timed flipCongrArg lean_s483 [Eq]
have lean_s592 : (Eq let276 let346) := by timed congr lean_s591 lean_s573
let lean_s593 := by timed congr lean_s571 lean_s592
have lean_s594 : let723 := by timed rfl
let lean_s595 := by timed congr lean_s571 lean_s594
let lean_s596 := by timed flipCongrArg lean_s487 [Eq]
have lean_s597 : (Eq let141 let141) := by timed rfl
have lean_s598 : (Eq let558 let565) := by timed congr lean_s596 lean_s597
let lean_s599 := by timed congr lean_s571 lean_s598
let lean_s600 := by timed flipCongrArg lean_s492 [Eq]
have lean_s601 : (Eq let290 let361) := by timed congr lean_s600 lean_s597
let lean_s602 := by timed congr lean_s571 lean_s601
let lean_s603 := by timed flipCongrArg lean_s497 [Eq]
have lean_s604 : (Eq let600 let389) := by timed congr lean_s603 lean_s597
let lean_s605 := by timed congr lean_s571 lean_s604
let lean_s606 := by timed flipCongrArg lean_s469 [Eq]
have lean_s607 : (Eq let277 let354) := by timed congr lean_s606 lean_s597
let lean_s608 := by timed congr lean_s571 lean_s607
let lean_s609 := by timed flipCongrArg lean_s474 [Eq]
have lean_s610 : (Eq let279 let534) := by timed congr lean_s609 lean_s597
let lean_s611 := by timed congr lean_s571 lean_s610
let lean_s612 := by timed flipCongrArg lean_s479 [Eq]
have lean_s613 : (Eq let555 let352) := by timed congr lean_s612 lean_s597
let lean_s614 := by timed congr lean_s571 lean_s613
let lean_s615 := by timed flipCongrArg lean_s483 [Eq]
have lean_s616 : (Eq let280 let354) := by timed congr lean_s615 lean_s597
let lean_s617 := by timed congr lean_s571 lean_s616
have lean_s618 : let722 := by timed rfl
let lean_s619 := by timed congr lean_s571 lean_s618
let lean_s620 := by timed flipCongrArg lean_s487 [Eq]
have lean_s621 : (Eq let133 let133) := by timed rfl
have lean_s622 : (Eq let597 let560) := by timed congr lean_s620 lean_s621
let lean_s623 := by timed congr lean_s571 lean_s622
let lean_s624 := by timed flipCongrArg lean_s492 [Eq]
have lean_s625 : (Eq let292 let385) := by timed congr lean_s624 lean_s621
let lean_s626 := by timed congr lean_s571 lean_s625
let lean_s627 := by timed flipCongrArg lean_s497 [Eq]
have lean_s628 : (Eq let599 let563) := by timed congr lean_s627 lean_s621
let lean_s629 := by timed congr lean_s571 lean_s628
let lean_s630 := by timed flipCongrArg lean_s469 [Eq]
have lean_s631 : (Eq let281 let364) := by timed congr lean_s630 lean_s621
let lean_s632 := by timed congr lean_s571 lean_s631
let lean_s633 := by timed flipCongrArg lean_s474 [Eq]
have lean_s634 : (Eq let282 let358) := by timed congr lean_s633 lean_s621
let lean_s635 := by timed congr lean_s571 lean_s634
let lean_s636 := by timed flipCongrArg lean_s479 [Eq]
have lean_s637 : (Eq let283 let410) := by timed congr lean_s636 lean_s621
let lean_s638 := by timed congr lean_s571 lean_s637
let lean_s639 := by timed flipCongrArg lean_s483 [Eq]
have lean_s640 : (Eq let284 let364) := by timed congr lean_s639 lean_s621
let lean_s641 := by timed congr lean_s571 lean_s640
have lean_s642 : let721 := by timed rfl
let lean_s643 := by timed congr lean_s571 lean_s642
let lean_s644 := by timed flipCongrArg lean_s487 [Eq]
have lean_s645 : (Eq let125 let125) := by timed rfl
have lean_s646 : (Eq let341 let533) := by timed congr lean_s644 lean_s645
let lean_s647 := by timed congr lean_s571 lean_s646
let lean_s648 := by timed flipCongrArg lean_s492 [Eq]
have lean_s649 : (Eq let299 let401) := by timed congr lean_s648 lean_s645
let lean_s650 := by timed congr lean_s571 lean_s649
let lean_s651 := by timed flipCongrArg lean_s497 [Eq]
have lean_s652 : (Eq let461 let543) := by timed congr lean_s651 lean_s645
let lean_s653 := by timed congr lean_s571 lean_s652
let lean_s654 := by timed flipCongrArg lean_s469 [Eq]
have lean_s655 : (Eq let450 let440) := by timed congr lean_s654 lean_s645
let lean_s656 := by timed congr lean_s571 lean_s655
let lean_s657 := by timed flipCongrArg lean_s474 [Eq]
have lean_s658 : (Eq let289 let366) := by timed congr lean_s657 lean_s645
let lean_s659 := by timed congr lean_s571 lean_s658
let lean_s660 := by timed flipCongrArg lean_s479 [Eq]
have lean_s661 : (Eq let524 let592) := by timed congr lean_s660 lean_s645
let lean_s662 := by timed congr lean_s571 lean_s661
let lean_s663 := by timed flipCongrArg lean_s483 [Eq]
have lean_s664 : (Eq let583 let440) := by timed congr lean_s663 lean_s645
let lean_s665 := by timed congr lean_s571 lean_s664
have lean_s666 : let720 := by timed rfl
let lean_s667 := by timed congr lean_s571 lean_s666
let lean_s668 := by timed flipCongrArg lean_s487 [Eq]
have lean_s669 : (Eq let116 let116) := by timed rfl
have lean_s670 : (Eq let356 let540) := by timed congr lean_s668 lean_s669
let lean_s671 := by timed congr lean_s571 lean_s670
let lean_s672 := by timed flipCongrArg lean_s492 [Eq]
have lean_s673 : (Eq let380 let522) := by timed congr lean_s672 lean_s669
let lean_s674 := by timed congr lean_s571 lean_s673
let lean_s675 := by timed flipCongrArg lean_s497 [Eq]
have lean_s676 : (Eq let344 let541) := by timed congr lean_s675 lean_s669
let lean_s677 := by timed congr lean_s571 lean_s676
let lean_s678 := by timed flipCongrArg lean_s469 [Eq]
have lean_s679 : (Eq let582 let379) := by timed congr lean_s678 lean_s669
let lean_s680 := by timed congr lean_s571 lean_s679
let lean_s681 := by timed flipCongrArg lean_s474 [Eq]
have lean_s682 : (Eq let416 let371) := by timed congr lean_s681 lean_s669
let lean_s683 := by timed congr lean_s571 lean_s682
let lean_s684 := by timed flipCongrArg lean_s479 [Eq]
have lean_s685 : (Eq let527 let405) := by timed congr lean_s684 lean_s669
let lean_s686 := by timed congr lean_s571 lean_s685
let lean_s687 := by timed flipCongrArg lean_s483 [Eq]
have lean_s688 : (Eq let418 let379) := by timed congr lean_s687 lean_s669
let lean_s689 := by timed congr lean_s571 lean_s688
have lean_s690 : let719 := by timed rfl
let lean_s691 := by timed congr lean_s689 lean_s690
let lean_s692 := by timed congr lean_s686 lean_s691
let lean_s693 := by timed congr lean_s683 lean_s692
let lean_s694 := by timed congr lean_s680 lean_s693
let lean_s695 := by timed congr lean_s677 lean_s694
let lean_s696 := by timed congr lean_s674 lean_s695
let lean_s697 := by timed congr lean_s671 lean_s696
let lean_s698 := by timed congr lean_s667 lean_s697
let lean_s699 := by timed congr lean_s665 lean_s698
let lean_s700 := by timed congr lean_s662 lean_s699
let lean_s701 := by timed congr lean_s659 lean_s700
let lean_s702 := by timed congr lean_s656 lean_s701
let lean_s703 := by timed congr lean_s653 lean_s702
let lean_s704 := by timed congr lean_s650 lean_s703
let lean_s705 := by timed congr lean_s647 lean_s704
let lean_s706 := by timed congr lean_s643 lean_s705
let lean_s707 := by timed congr lean_s641 lean_s706
let lean_s708 := by timed congr lean_s638 lean_s707
let lean_s709 := by timed congr lean_s635 lean_s708
let lean_s710 := by timed congr lean_s632 lean_s709
let lean_s711 := by timed congr lean_s629 lean_s710
let lean_s712 := by timed congr lean_s626 lean_s711
let lean_s713 := by timed congr lean_s623 lean_s712
let lean_s714 := by timed congr lean_s619 lean_s713
let lean_s715 := by timed congr lean_s617 lean_s714
let lean_s716 := by timed congr lean_s614 lean_s715
let lean_s717 := by timed congr lean_s611 lean_s716
let lean_s718 := by timed congr lean_s608 lean_s717
let lean_s719 := by timed congr lean_s605 lean_s718
let lean_s720 := by timed congr lean_s602 lean_s719
let lean_s721 := by timed congr lean_s599 lean_s720
let lean_s722 := by timed congr lean_s595 lean_s721
let lean_s723 := by timed congr lean_s593 lean_s722
let lean_s724 := by timed congr lean_s590 lean_s723
let lean_s725 := by timed congr lean_s587 lean_s724
let lean_s726 := by timed congr lean_s584 lean_s725
let lean_s727 := by timed congr lean_s581 lean_s726
let lean_s728 := by timed congr lean_s578 lean_s727
have lean_s729 : (Eq let630 let675) := by timed congr lean_s575 lean_s728
let lean_s730 := by timed congr lean_s353 lean_s729
let lean_s731 := by timed flipCongrArg lean_s574 [And]
have lean_s732 : (Eq let628 let673) := by timed congr lean_s731 lean_s601
have lean_s733 : let718 := by timed rfl
have lean_s734 : let717 := by timed rfl
have lean_s735 : (Eq let629 let674) := by timed congrIte lean_s732 lean_s733 lean_s734
let lean_s736 := by timed congr lean_s353 lean_s735
let lean_s737 := by timed flipCongrArg lean_s598 [And]
have lean_s738 : (Eq let626 let671) := by timed congr lean_s737 lean_s625
have lean_s739 : let716 := by timed rfl
have lean_s740 : let715 := by timed rfl
have lean_s741 : (Eq let627 let672) := by timed congrIte lean_s738 lean_s739 lean_s740
let lean_s742 := by timed congr lean_s353 lean_s741
let lean_s743 := by timed flipCongrArg lean_s622 [And]
have lean_s744 : (Eq let624 let669) := by timed congr lean_s743 lean_s649
have lean_s745 : let714 := by timed rfl
have lean_s746 : let713 := by timed rfl
have lean_s747 : (Eq let625 let670) := by timed congrIte lean_s744 lean_s745 lean_s746
let lean_s748 := by timed congr lean_s353 lean_s747
let lean_s749 := by timed flipCongrArg lean_s646 [And]
have lean_s750 : (Eq let622 let667) := by timed congr lean_s749 lean_s673
have lean_s751 : let712 := by timed rfl
have lean_s752 : let711 := by timed rfl
have lean_s753 : (Eq let623 let668) := by timed congrIte lean_s750 lean_s751 lean_s752
let lean_s754 := by timed congr lean_s353 lean_s753
let lean_s755 := by timed flipCongrArg lean_s670 [And]
let lean_s756 := by timed flipCongrArg lean_s492 [Eq]
have lean_s757 : (Eq let114 let114) := by timed rfl
have lean_s758 : (Eq let570 let387) := by timed congr lean_s756 lean_s757
have lean_s759 : (Eq let620 let665) := by timed congr lean_s755 lean_s758
have lean_s760 : let710 := by timed rfl
have lean_s761 : let709 := by timed rfl
have lean_s762 : (Eq let621 let666) := by timed congrIte lean_s759 lean_s760 lean_s761
let lean_s763 := by timed congr lean_s353 lean_s762
let lean_s764 := by timed flipCongrArg lean_s574 [And]
have lean_s765 : (Eq let618 let663) := by timed congr lean_s764 lean_s604
have lean_s766 : let708 := by timed rfl
have lean_s767 : let707 := by timed rfl
have lean_s768 : (Eq let619 let664) := by timed congrIte lean_s765 lean_s766 lean_s767
let lean_s769 := by timed congr lean_s353 lean_s768
let lean_s770 := by timed flipCongrArg lean_s598 [And]
have lean_s771 : (Eq let616 let661) := by timed congr lean_s770 lean_s628
have lean_s772 : let706 := by timed rfl
have lean_s773 : let705 := by timed rfl
have lean_s774 : (Eq let617 let662) := by timed congrIte lean_s771 lean_s772 lean_s773
let lean_s775 := by timed congr lean_s353 lean_s774
let lean_s776 := by timed flipCongrArg lean_s622 [And]
have lean_s777 : (Eq let614 let659) := by timed congr lean_s776 lean_s652
have lean_s778 : let704 := by timed rfl
have lean_s779 : let703 := by timed rfl
have lean_s780 : (Eq let615 let660) := by timed congrIte lean_s777 lean_s778 lean_s779
let lean_s781 := by timed congr lean_s353 lean_s780
let lean_s782 := by timed flipCongrArg lean_s646 [And]
have lean_s783 : (Eq let612 let657) := by timed congr lean_s782 lean_s676
have lean_s784 : let702 := by timed rfl
have lean_s785 : let701 := by timed rfl
have lean_s786 : (Eq let613 let658) := by timed congrIte lean_s783 lean_s784 lean_s785
let lean_s787 := by timed congr lean_s353 lean_s786
let lean_s788 := by timed flipCongrArg lean_s670 [And]
let lean_s789 := by timed flipCongrArg lean_s497 [Eq]
have lean_s790 : (Eq let593 let537) := by timed congr lean_s789 lean_s757
have lean_s791 : (Eq let610 let655) := by timed congr lean_s788 lean_s790
have lean_s792 : let700 := by timed rfl
have lean_s793 : let699 := by timed rfl
have lean_s794 : (Eq let611 let656) := by timed congrIte lean_s791 lean_s792 lean_s793
let lean_s795 := by timed congr lean_s353 lean_s794
have lean_s796 : let698 := by timed rfl
let lean_s797 := by timed flipCongrArg lean_s524 [Eq]
have lean_s798 : (Eq let608 let470) := by timed congr lean_s797 lean_s502
let lean_s799 := by timed congr lean_s796 lean_s798
let lean_s800 := by timed flipCongrArg lean_s524 [Eq]
let lean_s801 := by timed flipCongrArg lean_s520 [HAdd.hAdd]
have lean_s802 : (Eq let255 let551) := by timed congr lean_s801 lean_s502
have lean_s803 : (Eq let607 let653) := by timed congr lean_s800 lean_s802
let lean_s804 := by timed congr lean_s796 lean_s803
let lean_s805 := by timed flipCongrArg lean_s524 [Eq]
let lean_s806 := by timed flipCongrArg lean_s476 [HAdd.hAdd]
have lean_s807 : (Eq let374 let526) := by timed congr lean_s806 lean_s502
have lean_s808 : (Eq let606 let652) := by timed congr lean_s805 lean_s807
let lean_s809 := by timed congr lean_s796 lean_s808
let lean_s810 := by timed flipCongrArg lean_s524 [Eq]
have lean_s811 : (Eq let1 let1) := by timed rfl
let lean_s812 := by timed flipCongrArg lean_s811 [HAdd.hAdd]
have lean_s813 : (Eq let573 let548) := by timed congr lean_s812 lean_s502
have lean_s814 : (Eq let605 let651) := by timed congr lean_s810 lean_s813
let lean_s815 := by timed congr lean_s796 lean_s814
let lean_s816 := by timed flipCongrArg lean_s524 [Eq]
let lean_s817 := by timed flipCongrArg lean_s471 [HAdd.hAdd]
have lean_s818 : (Eq let395 let417) := by timed congr lean_s817 lean_s502
have lean_s819 : (Eq let604 let650) := by timed congr lean_s816 lean_s818
let lean_s820 := by timed congr lean_s815 lean_s819
let lean_s821 := by timed congr lean_s809 lean_s820
let lean_s822 := by timed congr lean_s804 lean_s821
have lean_s823 : (Eq let609 let654) := by timed congr lean_s799 lean_s822
let lean_s824 := by timed congr lean_s353 lean_s823
let lean_s825 := by timed flipCongrArg lean_s502 [Eq]
have lean_s826 : (Eq let538 let443) := by timed congr lean_s825 lean_s516
let lean_s827 := by timed flipCongrArg lean_s826 [Or]
let lean_s828 := by timed flipCongrArg lean_s502 [Eq]
let lean_s829 := by timed flipCongrArg lean_s514 [HAdd.hAdd]
have lean_s830 : (Eq let451 let407) := by timed congr lean_s829 lean_s516
have lean_s831 : (Eq let452 let648) := by timed congr lean_s828 lean_s830
have lean_s832 : (Eq let603 let649) := by timed congr lean_s827 lean_s831
let lean_s833 := by timed congr lean_s353 lean_s832
have lean_s834 : let696 := by timed rfl
let lean_s835 := by timed flipCongrArg lean_s487 [Eq]
have lean_s836 : (Eq let90 let90) := by timed rfl
have lean_s837 : (Eq let584 let393) := by timed congr lean_s835 lean_s836
let lean_s838 := by timed congr lean_s834 lean_s837
let lean_s839 := by timed flipCongrArg lean_s492 [Eq]
have lean_s840 : (Eq let397 let397) := by timed rfl
have lean_s841 : (Eq let528 let399) := by timed congr lean_s839 lean_s840
let lean_s842 := by timed congr lean_s834 lean_s841
let lean_s843 := by timed flipCongrArg lean_s469 [Eq]
have lean_s844 : (Eq let85 let420) := by timed flipCongrArg lean_s516 [selectx5fformat]
have lean_s845 : (Eq let581 let422) := by timed congr lean_s843 lean_s844
let lean_s846 := by timed congr lean_s834 lean_s845
let lean_s847 := by timed flipCongrArg lean_s474 [Eq]
let lean_s848 := by timed flipCongrArg lean_s520 [HAdd.hAdd]
have lean_s849 : (Eq let544 let454) := by timed congr lean_s848 lean_s516
have lean_s850 : (Eq let545 let644) := by timed flipCongrArg lean_s849 [selectx5fformat]
have lean_s851 : (Eq let546 let645) := by timed congr lean_s847 lean_s850
let lean_s852 := by timed congr lean_s834 lean_s851
let lean_s853 := by timed flipCongrArg lean_s479 [Eq]
let lean_s854 := by timed flipCongrArg lean_s476 [HAdd.hAdd]
have lean_s855 : (Eq let347 let322) := by timed congr lean_s854 lean_s516
have lean_s856 : (Eq let575 let642) := by timed flipCongrArg lean_s855 [selectx5fformat]
have lean_s857 : (Eq let576 let643) := by timed congr lean_s853 lean_s856
let lean_s858 := by timed congr lean_s834 lean_s857
let lean_s859 := by timed flipCongrArg lean_s483 [Eq]
let lean_s860 := by timed flipCongrArg lean_s811 [HAdd.hAdd]
have lean_s861 : (Eq let412 let328) := by timed congr lean_s860 lean_s516
have lean_s862 : (Eq let413 let640) := by timed flipCongrArg lean_s861 [selectx5fformat]
have lean_s863 : (Eq let414 let641) := by timed congr lean_s859 lean_s862
let lean_s864 := by timed congr lean_s858 lean_s863
let lean_s865 := by timed congr lean_s852 lean_s864
let lean_s866 := by timed congr lean_s846 lean_s865
let lean_s867 := by timed congr lean_s842 lean_s866
have lean_s868 : (Eq let601 let646) := by timed congr lean_s838 lean_s867
have lean_s869 : (Eq let602 let647) := by timed flipCongrArg lean_s868 [Not]
let lean_s870 := by timed congr lean_s833 lean_s869
let lean_s871 := by timed congr lean_s824 lean_s870
let lean_s872 := by timed congr lean_s795 lean_s871
let lean_s873 := by timed congr lean_s787 lean_s872
let lean_s874 := by timed congr lean_s781 lean_s873
let lean_s875 := by timed congr lean_s775 lean_s874
let lean_s876 := by timed congr lean_s769 lean_s875
let lean_s877 := by timed congr lean_s763 lean_s876
let lean_s878 := by timed congr lean_s754 lean_s877
let lean_s879 := by timed congr lean_s748 lean_s878
let lean_s880 := by timed congr lean_s742 lean_s879
let lean_s881 := by timed congr lean_s736 lean_s880
let lean_s882 := by timed congr lean_s730 lean_s881
let lean_s883 := by timed congr lean_s570 lean_s882
let lean_s884 := by timed congr lean_s556 lean_s883
let lean_s885 := by timed congr lean_s548 lean_s884
let lean_s886 := by timed congr lean_s539 lean_s885
let lean_s887 := by timed congr lean_s534 lean_s886
let lean_s888 := by timed congr lean_s523 lean_s887
let lean_s889 := by timed congr lean_s512 lean_s888
let lean_s890 := by timed congr lean_s506 lean_s889
let lean_s891 := by timed congr lean_s501 lean_s890
let lean_s892 := by timed congr lean_s496 lean_s891
let lean_s893 := by timed congr lean_s491 lean_s892
let lean_s894 := by timed congr lean_s486 lean_s893
let lean_s895 := by timed congr lean_s482 lean_s894
let lean_s896 := by timed congr lean_s478 lean_s895
let lean_s897 := by timed congr lean_s473 lean_s896
let lean_s898 := by timed congr lean_s468 lean_s897
have lean_s899 : (Eq let639 let695) := by timed congr lean_s463 lean_s898
have lean_s900 : let696 := by timed rfl
let lean_s901 := by timed congr lean_s900 lean_r215
let lean_s902 := by timed congr lean_s900 lean_r196
let lean_s903 := by timed congr lean_s900 lean_r199
let lean_s904 := by timed congr lean_s900 lean_r198
let lean_s905 := by timed congr lean_s900 lean_r196
let lean_s906 := by timed congr lean_s900 lean_r199
let lean_s907 := by timed congr lean_s900 lean_r148
let lean_s908 := by timed congr lean_s900 lean_r193
let lean_s909 := by timed congr lean_s900 lean_r191
let lean_s910 := by timed congr lean_s900 lean_r188
let lean_s911 := by timed flipCongrArg lean_s396 [Eq]
have lean_s912 : (Eq let694 let561) := by timed congr lean_s911 lean_r102
have lean_s913 : (Eq let694 True) := by timed Eq.trans lean_s912 lean_r188
let lean_s914 := by timed congr lean_s900 lean_s913
let lean_s915 := by timed flipCongrArg lean_s396 [HAdd.hAdd]
have lean_s916 : (Eq let691 let557) := by timed congr lean_s915 lean_r63
have lean_s917 : (Eq let691 let323) := by timed Eq.trans lean_s916 lean_r184
let lean_s918 := by timed flipCongrArg lean_s917 [GE.ge]
have lean_s919 : let727 := by timed rfl
have lean_s920 : (Eq let692 let556) := by timed congr lean_s918 lean_s919
have lean_s921 : (Eq let692 let553) := by timed Eq.trans lean_s920 lean_r182
have lean_s922 : (Eq let693 let554) := by timed flipCongrArg lean_s921 [Not]
have lean_s923 : (Eq let693 let9) := by timed Eq.trans lean_s922 lean_r180
let lean_s924 := by timed congr lean_s900 lean_s923
let lean_s925 := by timed congrHAdd lean_r228 lean_r131
have lean_s926 : (Eq let688 let552) := by timed congrHAdd lean_s39 lean_s925
have lean_s927 : (Eq let688 let549) := by timed Eq.trans lean_s926 lean_r179
let lean_s928 := by timed flipCongrArg lean_s927 [GE.ge]
have lean_s929 : let726 := by timed rfl
have lean_s930 : (Eq let689 let550) := by timed congr lean_s928 lean_s929
have lean_s931 : (Eq let689 let40) := by timed Eq.trans lean_s930 lean_r177
have lean_s932 : (Eq let690 let41) := by timed flipCongrArg lean_s931 [Not]
let lean_s933 := by timed congr lean_s900 lean_s932
let lean_s934 := by timed flipCongrArg lean_s39 [HAdd.hAdd]
have lean_s935 : (Eq let676 let419) := by timed congr lean_s934 lean_r228
have lean_s936 : (Eq let676 fmt1) := by timed Eq.trans lean_s935 lean_r121
let lean_s937 := by timed flipCongrArg lean_s936 [GE.ge]
have lean_s938 : let571 := by timed rfl
have lean_s939 : (Eq let687 let511) := by timed congr lean_s937 lean_s938
let lean_s940 := by timed congr lean_s900 lean_s939
have lean_s941 : (Eq let317 let317) := by timed rfl
have lean_s942 : (Eq let316 let316) := by timed rfl
let lean_s943 := by timed congrHAdd lean_r88 lean_r173
let lean_s944 := by timed congrHAdd lean_s942 lean_s943
let lean_s945 := by timed congrHAdd lean_s941 lean_s944
have lean_s946 : (Eq let579 let536) := by timed congrHAdd lean_s432 lean_s945
have lean_s947 : (Eq let579 let321) := by timed Eq.trans lean_s946 lean_r164
have lean_s948 : (Eq let580 let321) := by timed Eq.trans lean_r205 lean_s947
let lean_s949 := by timed flipCongrArg lean_s948 [GE.ge]
have lean_s950 : (Eq let686 let574) := by timed congr lean_s949 lean_s396
have lean_s951 : (Eq let686 let9) := by timed Eq.trans lean_s950 lean_r201
let lean_s952 := by timed congr lean_s900 lean_s951
let lean_s953 := by timed congrHAdd lean_r131 lean_r173
let lean_s954 := by timed congrHAdd lean_r88 lean_s953
let lean_s955 := by timed congrHAdd lean_s942 lean_s954
let lean_s956 := by timed congrHAdd lean_s941 lean_s955
have lean_s957 : (Eq let428 let373) := by timed congrHAdd lean_s432 lean_s956
have lean_s958 : (Eq let428 let319) := by timed Eq.trans lean_s957 lean_r91
have lean_s959 : (Eq let429 let319) := by timed Eq.trans lean_r124 lean_s958
let lean_s960 := by timed flipCongrArg lean_s959 [GE.ge]
have lean_s961 : let725 := by timed rfl
have lean_s962 : (Eq let684 let320) := by timed congr lean_s960 lean_s961
have lean_s963 : (Eq let684 let315) := by timed Eq.trans lean_s962 lean_r61
have lean_s964 : (Eq let685 let510) := by timed flipCongrArg lean_s963 [Not]
let lean_s965 := by timed congr lean_s900 lean_s964
have lean_s966 : let596 := by timed rfl
let lean_s967 := by timed flipCongrArg lean_s966 [Eq]
have lean_s968 : (Eq let683 let596) := by timed congr lean_s967 lean_s444
have lean_s969 : (Eq let683 True) := by timed Eq.trans lean_s968 lean_r225
let lean_s970 := by timed congr lean_s900 lean_s969
have lean_s971 : let698 := by timed rfl
let lean_s972 := by timed congr lean_s971 lean_r93
let lean_s973 := by timed congr lean_s971 lean_r68
let lean_s974 := by timed congr lean_s971 lean_r70
let lean_s975 := by timed congr lean_s971 lean_r74
let lean_s976 := by timed congr lean_s971 lean_r149
let lean_s977 := by timed congr lean_s971 lean_r72
let lean_s978 := by timed congr lean_s971 lean_r74
let lean_s979 := by timed congr lean_s971 lean_s105
let lean_s980 := by timed congr lean_s971 lean_r192
let lean_s981 := by timed congr lean_s971 lean_r83
let lean_s982 := by timed congr lean_s971 lean_r101
let lean_s983 := by timed congr lean_s971 lean_r78
let lean_s984 := by timed congr lean_s971 lean_r162
let lean_s985 := by timed congr lean_s971 lean_r77
let lean_s986 := by timed congr lean_s971 lean_r78
let lean_s987 := by timed congr lean_s971 lean_s114
let lean_s988 := by timed congr lean_s971 lean_r187
let lean_s989 := by timed congr lean_s971 lean_r99
let lean_s990 := by timed congr lean_s971 lean_r190
let lean_s991 := by timed congr lean_s971 lean_r85
let lean_s992 := by timed congr lean_s971 lean_r81
let lean_s993 := by timed congr lean_s971 lean_r115
let lean_s994 := by timed congr lean_s971 lean_r85
let lean_s995 := by timed congr lean_s971 lean_s123
let lean_s996 := by timed congr lean_s971 lean_r160
let lean_s997 := by timed congr lean_s971 lean_r109
let lean_s998 := by timed congr lean_s971 lean_r172
let lean_s999 := by timed congr lean_s971 lean_r128
let lean_s1000 := by timed congr lean_s971 lean_r86
let lean_s1001 := by timed congr lean_s971 lean_r219
let lean_s1002 := by timed congr lean_s971 lean_r128
let lean_s1003 := by timed congr lean_s971 lean_s132
let lean_s1004 := by timed congr lean_s971 lean_r168
let lean_s1005 := by timed congr lean_s971 lean_r150
let lean_s1006 := by timed congr lean_s971 lean_r170
let lean_s1007 := by timed congr lean_s971 lean_r95
let lean_s1008 := by timed congr lean_s971 lean_r89
let lean_s1009 := by timed congr lean_s971 lean_r111
let lean_s1010 := by timed congr lean_s971 lean_r95
let lean_s1011 := by timed congr lean_s1010 lean_s141
let lean_s1012 := by timed congr lean_s1009 lean_s1011
let lean_s1013 := by timed congr lean_s1008 lean_s1012
let lean_s1014 := by timed congr lean_s1007 lean_s1013
let lean_s1015 := by timed congr lean_s1006 lean_s1014
let lean_s1016 := by timed congr lean_s1005 lean_s1015
let lean_s1017 := by timed congr lean_s1004 lean_s1016
let lean_s1018 := by timed congr lean_s1003 lean_s1017
let lean_s1019 := by timed congr lean_s1002 lean_s1018
let lean_s1020 := by timed congr lean_s1001 lean_s1019
let lean_s1021 := by timed congr lean_s1000 lean_s1020
let lean_s1022 := by timed congr lean_s999 lean_s1021
let lean_s1023 := by timed congr lean_s998 lean_s1022
let lean_s1024 := by timed congr lean_s997 lean_s1023
let lean_s1025 := by timed congr lean_s996 lean_s1024
let lean_s1026 := by timed congr lean_s995 lean_s1025
let lean_s1027 := by timed congr lean_s994 lean_s1026
let lean_s1028 := by timed congr lean_s993 lean_s1027
let lean_s1029 := by timed congr lean_s992 lean_s1028
let lean_s1030 := by timed congr lean_s991 lean_s1029
let lean_s1031 := by timed congr lean_s990 lean_s1030
let lean_s1032 := by timed congr lean_s989 lean_s1031
let lean_s1033 := by timed congr lean_s988 lean_s1032
let lean_s1034 := by timed congr lean_s987 lean_s1033
let lean_s1035 := by timed congr lean_s986 lean_s1034
let lean_s1036 := by timed congr lean_s985 lean_s1035
let lean_s1037 := by timed congr lean_s984 lean_s1036
let lean_s1038 := by timed congr lean_s983 lean_s1037
let lean_s1039 := by timed congr lean_s982 lean_s1038
let lean_s1040 := by timed congr lean_s981 lean_s1039
let lean_s1041 := by timed congr lean_s980 lean_s1040
let lean_s1042 := by timed congr lean_s979 lean_s1041
let lean_s1043 := by timed congr lean_s978 lean_s1042
let lean_s1044 := by timed congr lean_s977 lean_s1043
let lean_s1045 := by timed congr lean_s976 lean_s1044
let lean_s1046 := by timed congr lean_s975 lean_s1045
let lean_s1047 := by timed congr lean_s974 lean_s1046
let lean_s1048 := by timed congr lean_s973 lean_s1047
have lean_s1049 : (Eq let675 let508) := by timed congr lean_s972 lean_s1048
let lean_s1050 := by timed congr lean_s900 lean_s1049
let lean_s1051 := by timed flipCongrArg lean_r93 [And]
have lean_s1052 : (Eq let673 let503) := by timed congr lean_s1051 lean_r83
have lean_s1053 : (Eq let674 let504) := by timed congrIte lean_s1052 lean_s185 lean_s186
let lean_s1054 := by timed congr lean_s900 lean_s1053
let lean_s1055 := by timed flipCongrArg lean_r192 [And]
have lean_s1056 : (Eq let671 let501) := by timed congr lean_s1055 lean_r99
have lean_s1057 : let716 := by timed rfl
have lean_s1058 : let715 := by timed rfl
have lean_s1059 : (Eq let672 let502) := by timed congrIte lean_s1056 lean_s1057 lean_s1058
let lean_s1060 := by timed congr lean_s900 lean_s1059
let lean_s1061 := by timed flipCongrArg lean_r187 [And]
have lean_s1062 : (Eq let669 let499) := by timed congr lean_s1061 lean_r109
have lean_s1063 : let714 := by timed rfl
have lean_s1064 : let713 := by timed rfl
have lean_s1065 : (Eq let670 let500) := by timed congrIte lean_s1062 lean_s1063 lean_s1064
let lean_s1066 := by timed congr lean_s900 lean_s1065
let lean_s1067 := by timed flipCongrArg lean_r160 [And]
have lean_s1068 : (Eq let667 let497) := by timed congr lean_s1067 lean_r150
have lean_s1069 : let712 := by timed rfl
have lean_s1070 : let711 := by timed rfl
have lean_s1071 : (Eq let668 let498) := by timed congrIte lean_s1068 lean_s1069 lean_s1070
let lean_s1072 := by timed congr lean_s900 lean_s1071
let lean_s1073 := by timed flipCongrArg lean_r168 [And]
have lean_s1074 : (Eq let665 let494) := by timed congr lean_s1073 lean_r100
have lean_s1075 : let710 := by timed rfl
have lean_s1076 : let709 := by timed rfl
have lean_s1077 : (Eq let666 let495) := by timed congrIte lean_s1074 lean_s1075 lean_s1076
let lean_s1078 := by timed congr lean_s900 lean_s1077
let lean_s1079 := by timed flipCongrArg lean_r93 [And]
have lean_s1080 : (Eq let663 let491) := by timed congr lean_s1079 lean_r101
have lean_s1081 : (Eq let664 let492) := by timed congrIte lean_s1080 lean_s223 lean_s224
let lean_s1082 := by timed congr lean_s900 lean_s1081
let lean_s1083 := by timed flipCongrArg lean_r192 [And]
have lean_s1084 : (Eq let661 let489) := by timed congr lean_s1083 lean_r190
have lean_s1085 : let706 := by timed rfl
have lean_s1086 : let705 := by timed rfl
have lean_s1087 : (Eq let662 let490) := by timed congrIte lean_s1084 lean_s1085 lean_s1086
let lean_s1088 := by timed congr lean_s900 lean_s1087
let lean_s1089 := by timed flipCongrArg lean_r187 [And]
have lean_s1090 : (Eq let659 let485) := by timed congr lean_s1089 lean_r172
have lean_s1091 : let704 := by timed rfl
have lean_s1092 : let703 := by timed rfl
have lean_s1093 : (Eq let660 let486) := by timed congrIte lean_s1090 lean_s1091 lean_s1092
let lean_s1094 := by timed congr lean_s900 lean_s1093
let lean_s1095 := by timed flipCongrArg lean_r160 [And]
have lean_s1096 : (Eq let657 let479) := by timed congr lean_s1095 lean_r170
have lean_s1097 : let702 := by timed rfl
have lean_s1098 : let701 := by timed rfl
have lean_s1099 : (Eq let658 let480) := by timed congrIte lean_s1096 lean_s1097 lean_s1098
let lean_s1100 := by timed congr lean_s900 lean_s1099
let lean_s1101 := by timed flipCongrArg lean_r168 [And]
have lean_s1102 : (Eq let655 let474) := by timed congr lean_s1101 lean_r166
have lean_s1103 : let700 := by timed rfl
have lean_s1104 : let699 := by timed rfl
have lean_s1105 : (Eq let656 let475) := by timed congrIte lean_s1102 lean_s1103 lean_s1104
let lean_s1106 := by timed congr lean_s900 lean_s1105
have lean_s1107 : let698 := by timed rfl
have lean_s1108 : (Eq let470 let470) := by timed rfl
let lean_s1109 := by timed congr lean_s1107 lean_s1108
let lean_s1110 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1111 : (Eq let653 let469) := by timed congr lean_s1110 lean_r178
let lean_s1112 := by timed congr lean_s1107 lean_s1111
let lean_s1113 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1114 : (Eq let652 let45) := by timed congr lean_s1113 lean_r155
let lean_s1115 := by timed congr lean_s1107 lean_s1114
let lean_s1116 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1117 : (Eq let651 let2) := by timed congr lean_s1116 lean_r176
let lean_s1118 := by timed congr lean_s1107 lean_s1117
let lean_s1119 := by timed flipCongrArg lean_s39 [Eq]
have lean_s1120 : (Eq let650 let468) := by timed congr lean_s1119 lean_r119
let lean_s1121 := by timed congr lean_s1118 lean_s1120
let lean_s1122 := by timed congr lean_s1115 lean_s1121
let lean_s1123 := by timed congr lean_s1112 lean_s1122
have lean_s1124 : (Eq let654 let471) := by timed congr lean_s1109 lean_s1123
let lean_s1125 := by timed congr lean_s900 lean_s1124
let lean_s1126 := by timed flipCongrArg lean_r132 [Or]
let lean_s1127 := by timed flipCongrArg lean_s396 [Eq]
have lean_s1128 : let424 := by timed Eq.trans lean_r113 lean_r123
have lean_s1129 : (Eq let648 let523) := by timed congr lean_s1127 lean_s1128
have lean_s1130 : (Eq let648 False) := by timed Eq.trans lean_s1129 lean_r152
have lean_s1131 : (Eq let649 let383) := by timed congr lean_s1126 lean_s1130
have lean_s1132 : (Eq let649 let382) := by timed Eq.trans lean_s1131 lean_r98
let lean_s1133 := by timed congr lean_s900 lean_s1132
have lean_s1134 : let696 := by timed rfl
let lean_s1135 := by timed congr lean_s1134 lean_r105
let lean_s1136 := by timed congr lean_s1134 lean_r108
let lean_s1137 := by timed congr lean_s1134 lean_r122
let lean_s1138 := by timed flipCongrArg lean_s938 [Eq]
have lean_s1139 : let462 := by timed Eq.trans lean_r137 lean_r142
have lean_s1140 : (Eq let644 let436) := by timed flipCongrArg lean_s1139 [selectx5fformat]
have lean_s1141 : (Eq let645 let438) := by timed congr lean_s1138 lean_s1140
have lean_s1142 : (Eq let645 let437) := by timed Eq.trans lean_s1141 lean_r127
let lean_s1143 := by timed congr lean_s1134 lean_s1142
have lean_s1144 : let569 := by timed rfl
let lean_s1145 := by timed flipCongrArg lean_s1144 [Eq]
have lean_s1146 : let532 := by timed Eq.trans lean_r62 lean_r159
have lean_s1147 : (Eq let642 let447) := by timed flipCongrArg lean_s1146 [selectx5fformat]
have lean_s1148 : (Eq let643 let449) := by timed congr lean_s1145 lean_s1147
have lean_s1149 : (Eq let643 let448) := by timed Eq.trans lean_s1148 lean_r134
let lean_s1150 := by timed congr lean_s1134 lean_s1149
let lean_s1151 := by timed flipCongrArg lean_s76 [Eq]
have lean_s1152 : let329 := by timed Eq.trans lean_r165 lean_r65
have lean_s1153 : (Eq let640 let458) := by timed flipCongrArg lean_s1152 [selectx5fformat]
have lean_s1154 : (Eq let641 let460) := by timed congr lean_s1151 lean_s1153
have lean_s1155 : (Eq let641 let459) := by timed Eq.trans lean_s1154 lean_r140
let lean_s1156 := by timed congr lean_s1150 lean_s1155
let lean_s1157 := by timed congr lean_s1143 lean_s1156
let lean_s1158 := by timed congr lean_s1137 lean_s1157
let lean_s1159 := by timed congr lean_s1136 lean_s1158
have lean_s1160 : (Eq let646 let466) := by timed congr lean_s1135 lean_s1159
have lean_s1161 : (Eq let647 let467) := by timed flipCongrArg lean_s1160 [Not]
let lean_s1162 := by timed congr lean_s1133 lean_s1161
let lean_s1163 := by timed congr lean_s1125 lean_s1162
let lean_s1164 := by timed congr lean_s1106 lean_s1163
let lean_s1165 := by timed congr lean_s1100 lean_s1164
let lean_s1166 := by timed congr lean_s1094 lean_s1165
let lean_s1167 := by timed congr lean_s1088 lean_s1166
let lean_s1168 := by timed congr lean_s1082 lean_s1167
let lean_s1169 := by timed congr lean_s1078 lean_s1168
let lean_s1170 := by timed congr lean_s1072 lean_s1169
let lean_s1171 := by timed congr lean_s1066 lean_s1170
let lean_s1172 := by timed congr lean_s1060 lean_s1171
let lean_s1173 := by timed congr lean_s1054 lean_s1172
let lean_s1174 := by timed congr lean_s1050 lean_s1173
let lean_s1175 := by timed congr lean_s970 lean_s1174
let lean_s1176 := by timed congr lean_s965 lean_s1175
let lean_s1177 := by timed congr lean_s952 lean_s1176
let lean_s1178 := by timed congr lean_s940 lean_s1177
let lean_s1179 := by timed congr lean_s933 lean_s1178
let lean_s1180 := by timed congr lean_s924 lean_s1179
let lean_s1181 := by timed congr lean_s914 lean_s1180
let lean_s1182 := by timed congr lean_s910 lean_s1181
let lean_s1183 := by timed congr lean_s909 lean_s1182
let lean_s1184 := by timed congr lean_s908 lean_s1183
let lean_s1185 := by timed congr lean_s907 lean_s1184
let lean_s1186 := by timed congr lean_s906 lean_s1185
let lean_s1187 := by timed congr lean_s905 lean_s1186
let lean_s1188 := by timed congr lean_s904 lean_s1187
let lean_s1189 := by timed congr lean_s903 lean_s1188
let lean_s1190 := by timed congr lean_s902 lean_s1189
have lean_s1191 : (Eq let695 let513) := by timed congr lean_s901 lean_s1190
have lean_s1192 : (Eq let695 let512) := by timed Eq.trans lean_s1191 lean_r145
have lean_s1193 : (Eq let639 let512) := by timed Eq.trans lean_s899 lean_s1192
have lean_s1194 : (Eq let241 let512) := by timed Eq.trans lean_s352 lean_s1193
have lean_s1195 : let512 := by timed eqResolve lean_a231 lean_s1194
have lean_s1196 : let492 := by andElim lean_s1195, 10
have lean_s1197 : (Or let491 let21) := by timed iteElim2 lean_s1196
have lean_s1198 : (Or let21 let491) := by permutateOr lean_s1197, [1, 0], (- 1)
have lean_s1199 : (Or let790 let388) := by timed @cnfAndPos [let375, let388] 1
have lean_s1200 : (Or let388 let790) := by permutateOr lean_s1199, [1, 0], (- 1)
have lean_s1201 : let875 :=
  (scope (fun lean_a244 : let388 =>
    have lean_s1201 : let875 :=
      (scope (fun lean_a245 : let388 =>
        have lean_s1201 : let389 := by timed Eq.symm lean_a245
        have lean_s1202 : let388 := by timed Eq.symm lean_s1201
        let lean_s1203 := by timed flipCongrArg lean_s1202 [Eq]
        have lean_s1204 : let520 := by timed rfl
        have lean_s1205 : (Eq let488 let60) := by timed congr lean_s1203 lean_s1204
        have lean_s1206 : (Eq let61 let355) := by timed flipCongrArg lean_r183 [Not]
        have lean_s1207 : (Eq let61 True) := by timed Eq.trans lean_s1206 lean_r79
        have lean_s1208 : (Eq let62 True) := by timed Eq.trans lean_r11 lean_s1207
        have lean_s1209 : let62 := by timed trueElim lean_s1208
        have lean_s1210 : let871 := by timed Eq.trans lean_s1205 lean_s1209
        have lean_s1211 : let868 := by timed falseElim lean_s1210
        show let868 from lean_s1211
      ))
    have lean_s1202 : let876 := by liftOrNToImp lean_s1201, 1
    have lean_s1203 : let868 := by timed modusPonens lean_a244 lean_s1202
    show let868 from lean_s1203
  ))
have lean_s1202 : let876 := by liftOrNToImp lean_s1201, 1
have lean_s1203 : let875 := by timed impliesElim lean_s1202
have lean_s1204 : (Or let868 let806) := by permutateOr lean_s1203, [1, 0], (- 1)
have lean_s1205 : (Or let855 let488) := by timed @cnfAndPos [let488, let384] 0
have lean_s1206 : (Or let488 let855) := by permutateOr lean_s1205, [1, 0], (- 1)
have lean_s1207 : let502 := by andElim lean_s1195, 6
have lean_s1208 : (Or let501 let19) := by timed iteElim2 lean_s1207
have lean_s1209 : (Or let19 let501) := by permutateOr lean_s1208, [1, 0], (- 1)
have lean_s1210 : (Or let745 (Or let791 (Or let744 (Or let834 let864)))) :=
  (scope (fun lean_a245 : let34 =>
    (scope (fun lean_a246 : let145 =>
      (scope (fun lean_a247 : let19 =>
        (scope (fun lean_a248 : let15 =>
          (scope (fun lean_a249 : let9 =>
            (scope (fun lean_a250 : let2 =>
              have lean_s1210 : let850 := by timed Eq.symm lean_r3
              have lean_s1211 : let38 := by timed eqResolve lean_a250 lean_s1210
              let lean_s1212 := by timed And.intro lean_a248 lean_a246
              have lean_s1213 : let878 := by timed And.intro lean_s1211 lean_s1212
              have lean_s1214 : (Or let846 (Or let834 let802)) :=
                (scope (fun lean_a247 : let38 =>
                  (scope (fun lean_a248 : let15 =>
                    (scope (fun lean_a249 : let145 =>
                      have lean_s1214 : let803 := by timed Eq.symm lean_a249
                      have lean_s1215 : let137 := by timed Eq.symm lean_a248
                      have lean_s1216 : let15 := by timed Eq.symm lean_s1215
                      let lean_s1217 := by timed Eq.trans lean_s1214 lean_s1216
                      have lean_s1218 : let849 := by timed Eq.symm lean_a247
                      have lean_s1219 : let38 := by timed Eq.symm lean_s1218
                      have lean_s1220 : let854 := by timed flipCongrArg lean_s1219 [xx5fcount]
                      have lean_s1221 : let792 := by timed Eq.trans lean_s1217 lean_s1220
                      show let792 from lean_s1221
                ))))))
              have lean_s1215 : (Implies let878 let792) := by liftOrNToImp lean_s1214, 3
              have lean_s1216 : let792 := by timed modusPonens lean_s1213 lean_s1215
              let lean_s1217 := by timed And.intro lean_a247 lean_a245
              have lean_s1218 : let844 := by timed And.intro lean_s1211 lean_s1217
              have lean_s1219 : let847 :=
                (scope (fun lean_a247 : let38 =>
                  (scope (fun lean_a248 : let19 =>
                    (scope (fun lean_a249 : let34 =>
                      have lean_s1219 : let782 := by timed Eq.symm lean_a249
                      have lean_s1220 : let172 := by timed Eq.symm lean_a248
                      have lean_s1221 : let19 := by timed Eq.symm lean_s1220
                      let lean_s1222 := by timed Eq.trans lean_s1219 lean_s1221
                      have lean_s1223 : let849 := by timed Eq.symm lean_a247
                      have lean_s1224 : let38 := by timed Eq.symm lean_s1223
                      have lean_s1225 : let848 := by timed flipCongrArg lean_s1224 [sx5fcount]
                      have lean_s1226 : let751 := by timed Eq.trans lean_s1222 lean_s1225
                      show let751 from lean_s1226
                ))))))
              have lean_s1220 : let845 := by liftOrNToImp lean_s1219, 3
              have lean_s1221 : let751 := by timed modusPonens lean_s1218 lean_s1220
              let lean_s1222 := by timed And.intro lean_s1216 lean_s1221
              have lean_s1223 : let793 := by timed And.intro lean_a249 lean_s1222
              show let793 from lean_s1223
  ))))))))))))
have lean_s1211 : let877 := by liftOrNToImp lean_s1210, 6
have lean_s1212 : (Eq let514 let514) := by timed rfl
let lean_s1213 := by timed flipCongrArg lean_s1212 [Implies]
have lean_s1214 : (Or let553 (Or (Not let792) let756)) :=
  (scope (fun lean_a247 : let9 =>
    (scope (fun lean_a248 : let792 =>
      (scope (fun lean_a249 : let751 =>
        have lean_s1214 : let758 := by timed Eq.symm lean_a249
        have lean_s1215 : let760 :=
          (scope (fun lean_a249 : let758 =>
            have lean_s1215 : let64 := by timed trueElim lean_r13
            have lean_s1216 : let773 := by timed And.intro lean_s1215 lean_a249
            have lean_s1217 : let774 := by arithMulPos [let7, let13, let50], 4
            have lean_s1218 : let772 := by timed modusPonens lean_s1216 lean_s1217
            have lean_s1219 : let799 := by timed Eq.symm lean_a248
            have lean_s1220 : let800 := by timed And.intro lean_s1215 lean_s1219
            have lean_s1221 : (Implies let800 let798) := by arithMulPos [let6, let11, let50], 4
            have lean_s1222 : let798 := by timed modusPonens lean_s1220 lean_s1221
            have lean_s1223 : let306 := by timed trueElim lean_r58
            have lean_s1224 : let766 := by timed And.intro lean_s1223 lean_a247
            have lean_s1225 : let767 := by arithMulNeg [let8, let3, let51], 3
            have lean_s1226 : let765 := by timed modusPonens lean_s1224 lean_s1225
            have lean_s1227 : let797 := by sumBounds [lean_s1218, lean_s1222, lean_s1226]
            let lean_s1228 := by timed congrHAdd lean_r14 lean_r194
            have lean_s1229 : (Eq let763 let445) := by timed congrHAdd lean_r126 lean_s1228
            have lean_s1230 : (Eq let763 let53) := by timed Eq.trans lean_s1229 lean_r133
            let lean_s1231 := by timed flipCongrArg lean_s1230 [LE.le]
            let lean_s1232 := by timed congrHAdd lean_r12 lean_r16
            have lean_s1233 : (Eq let796 let278) := by timed congrHAdd lean_r15 lean_s1232
            have lean_s1234 : (Eq let796 let51) := by timed Eq.trans lean_s1233 lean_r37
            have lean_s1235 : (Eq let797 let585) := by timed congr lean_s1231 lean_s1234
            have lean_s1236 : (Eq let797 False) := by timed Eq.trans lean_s1235 lean_r213
            show False from by timed eqResolve lean_s1227 lean_s1236
          ))
        have lean_s1216 : let759 := by liftOrNToNeg lean_s1215
        show False from by timed contradiction lean_s1214 lean_s1216
  ))))))
have lean_s1215 : (Not let793) := by liftOrNToNeg lean_s1214
have lean_s1216 : let795 := by timed falseIntro lean_s1215
have lean_s1217 : (Eq let877 let516) := by timed congr lean_s1213 lean_s1216
have lean_s1218 : (Eq let877 let515) := by timed Eq.trans lean_s1217 lean_r146
have lean_s1219 : let515 := by timed eqResolve lean_s1211 lean_s1218
have lean_s1220 : (Or let745 (Or let791 let841)) := by timed flipNotAnd lean_s1219 [let34, let145, let19, let15, let9, let2]
have lean_s1221 : (Or let553 (Or let745 (Or let744 (Or let791 let835)))) := by permutateOr lean_s1220, [4, 0, 2, 1, 3, 5], (- 1)
have lean_s1222 : let9 := by andElim lean_s1195, 0
let lean_s1223 := by R2 lean_s1221, lean_s1222, let9, [(- 1), 0]
have lean_s1224 : let490 := by andElim lean_s1195, 11
have lean_s1225 : (Or let489 let15) := by timed iteElim2 lean_s1224
have lean_s1226 : (Or let15 let489) := by permutateOr lean_s1225, [1, 0], (- 1)
let lean_s1227 := by R2 lean_s1223, lean_s1226, let15, [(- 1), (- 1)]
have lean_s1228 : let504 := by andElim lean_s1195, 5
have lean_s1229 : (Or let503 let34) := by timed iteElim2 lean_s1228
have lean_s1230 : (Or let34 let503) := by permutateOr lean_s1229, [1, 0], (- 1)
let lean_s1231 := by R2 lean_s1227, lean_s1230, let34, [(- 1), (- 1)]
have lean_s1232 : (Or let742 let488) := by timed @cnfAndPos [let488, let487] 0
have lean_s1233 : (Or let488 let742) := by permutateOr lean_s1232, [1, 0], (- 1)
let lean_s1234 := by R1 lean_s1231, lean_s1233, let489, [(- 1), (- 1)]
have lean_s1235 : (Or let804 let360) := by timed @cnfAndPos [let375, let360] 1
have lean_s1236 : (Or let360 let804) := by permutateOr lean_s1235, [1, 0], (- 1)
let lean_s1237 := by R1 lean_s1234, lean_s1236, let503, [(- 1), (- 1)]
let lean_s1238 := by R1 lean_s1237, lean_s1204, let488, [(- 1), (- 1)]
have lean_s1239 : let808 :=
  (scope (fun lean_a250 : let388 =>
    have lean_s1239 : let808 :=
      (scope (fun lean_a250 : let388 =>
        have lean_s1239 : let389 := by timed Eq.symm lean_a250
        have lean_s1240 : let388 := by timed Eq.symm lean_s1239
        let lean_s1241 := by timed flipCongrArg lean_s1240 [Eq]
        have lean_s1242 : let566 := by timed rfl
        have lean_s1243 : (Eq let360 let57) := by timed congr lean_s1241 lean_s1242
        have lean_s1244 : (Eq let58 let355) := by timed flipCongrArg lean_r10 [Not]
        have lean_s1245 : (Eq let58 True) := by timed Eq.trans lean_s1244 lean_r79
        have lean_s1246 : (Eq let59 True) := by timed Eq.trans lean_r9 lean_s1245
        have lean_s1247 : let59 := by timed trueElim lean_s1246
        have lean_s1248 : (Eq let360 False) := by timed Eq.trans lean_s1243 lean_s1247
        have lean_s1249 : let807 := by timed falseElim lean_s1248
        show let807 from lean_s1249
      ))
    have lean_s1240 : let809 := by liftOrNToImp lean_s1239, 1
    have lean_s1241 : let807 := by timed modusPonens lean_a250 lean_s1240
    show let807 from lean_s1241
  ))
have lean_s1240 : let809 := by liftOrNToImp lean_s1239, 1
have lean_s1241 : let808 := by timed impliesElim lean_s1240
have lean_s1242 : (Or let807 let806) := by permutateOr lean_s1241, [1, 0], (- 1)
let lean_s1243 := by R1 lean_s1238, lean_s1242, let360, [(- 1), (- 1)]
have lean_s1244 : (Or let790 let145) := by timed iteElim1 lean_s1196
have lean_s1245 : (Or let145 let790) := by permutateOr lean_s1244, [1, 0], (- 1)
have lean_s1246 : (Or let744 (Or let830 (Or let806 let874))) := by R2 lean_s1243, lean_s1245, let145, [(- 1), (- 1)]
have lean_s1247 : (Or let744 (Or let830 let874)) := by factor lean_s1246, (- 1)
have lean_s1248 : (Or let744 (Or let830 (Or let790 let790))) := by R2 lean_s1247, lean_s1200, let388, [(- 1), (- 1)]
have lean_s1249 : (Or let744 (Or let830 let790)) := by factor lean_s1248, (- 1)
let lean_s1250 := by R2 lean_s1249, lean_s1198, let491, [(- 1), (- 1)]
have lean_s1251 : (Or let810 (Or let747 (Or let744 let858))) :=
  (scope (fun lean_a250 : let23 =>
    (scope (fun lean_a251 : let21 =>
      (scope (fun lean_a252 : let19 =>
        (scope (fun lean_a253 : let15 =>
          (scope (fun lean_a254 : let9 =>
            (scope (fun lean_a255 : let2 =>
              have lean_s1251 : let850 := by timed Eq.symm lean_r3
              have lean_s1252 : let38 := by timed eqResolve lean_a255 lean_s1251
              let lean_s1253 := by timed And.intro lean_a253 lean_a251
              have lean_s1254 : let851 := by timed And.intro lean_s1252 lean_s1253
              have lean_s1255 : let853 :=
                (scope (fun lean_a251 : let38 =>
                  (scope (fun lean_a252 : let15 =>
                    (scope (fun lean_a253 : let21 =>
                      have lean_s1255 : let789 := by timed Eq.symm lean_a253
                      have lean_s1256 : let137 := by timed Eq.symm lean_a252
                      have lean_s1257 : let15 := by timed Eq.symm lean_s1256
                      let lean_s1258 := by timed Eq.trans lean_s1255 lean_s1257
                      have lean_s1259 : let849 := by timed Eq.symm lean_a251
                      have lean_s1260 : let38 := by timed Eq.symm lean_s1259
                      have lean_s1261 : let854 := by timed flipCongrArg lean_s1260 [xx5fcount]
                      have lean_s1262 : let752 := by timed Eq.trans lean_s1258 lean_s1261
                      show let752 from lean_s1262
                ))))))
              have lean_s1256 : let852 := by liftOrNToImp lean_s1255, 3
              have lean_s1257 : let752 := by timed modusPonens lean_s1254 lean_s1256
              let lean_s1258 := by timed And.intro lean_a252 lean_a250
              have lean_s1259 : let873 := by timed And.intro lean_s1252 lean_s1258
              have lean_s1260 : (Or let846 (Or let744 let822)) :=
                (scope (fun lean_a251 : let38 =>
                  (scope (fun lean_a252 : let19 =>
                    (scope (fun lean_a253 : let23 =>
                      have lean_s1260 : let823 := by timed Eq.symm lean_a253
                      have lean_s1261 : let172 := by timed Eq.symm lean_a252
                      have lean_s1262 : let19 := by timed Eq.symm lean_s1261
                      let lean_s1263 := by timed Eq.trans lean_s1260 lean_s1262
                      have lean_s1264 : let849 := by timed Eq.symm lean_a251
                      have lean_s1265 : let38 := by timed Eq.symm lean_s1264
                      have lean_s1266 : let848 := by timed flipCongrArg lean_s1265 [sx5fcount]
                      have lean_s1267 : let811 := by timed Eq.trans lean_s1263 lean_s1266
                      show let811 from lean_s1267
                ))))))
              have lean_s1261 : (Implies let873 let811) := by liftOrNToImp lean_s1260, 3
              have lean_s1262 : let811 := by timed modusPonens lean_s1259 lean_s1261
              let lean_s1263 := by timed And.intro lean_s1257 lean_s1262
              have lean_s1264 : let812 := by timed And.intro lean_a254 lean_s1263
              show let812 from lean_s1264
  ))))))))))))
have lean_s1252 : let872 := by liftOrNToImp lean_s1251, 6
have lean_s1253 : (Eq let24 let24) := by timed rfl
let lean_s1254 := by timed flipCongrArg lean_s1253 [Implies]
have lean_s1255 : let814 := by timed falseIntro lean_s5
have lean_s1256 : (Eq let872 let26) := by timed congr lean_s1254 lean_s1255
have lean_s1257 : (Eq let872 let25) := by timed Eq.trans lean_s1256 lean_r0
have lean_s1258 : let25 := by timed eqResolve lean_s1252 lean_s1257
have lean_s1259 : (Or let810 let842) := by timed flipNotAnd lean_s1258 [let23, let21, let19, let15, let9, let2]
have lean_s1260 : (Or let553 (Or let810 let838)) := by permutateOr lean_s1259, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1261 := by R2 lean_s1260, lean_s1222, let9, [(- 1), 0]
let lean_s1262 := by R2 lean_s1261, lean_s1226, let15, [(- 1), (- 1)]
let lean_s1263 := by R1 lean_s1262, lean_s1233, let489, [(- 1), (- 1)]
have lean_s1264 : let869 :=
  (scope (fun lean_a251 : let360 =>
    have lean_s1264 : let869 :=
      (scope (fun lean_a252 : let360 =>
        have lean_s1264 : let361 := by timed Eq.symm lean_a252
        have lean_s1265 : let360 := by timed Eq.symm lean_s1264
        let lean_s1266 := by timed flipCongrArg lean_s1265 [Eq]
        have lean_s1267 : let520 := by timed rfl
        have lean_s1268 : (Eq let488 let29) := by timed congr lean_s1266 lean_s1267
        have lean_s1269 : (Eq let535 let355) := by timed flipCongrArg lean_r1 [Not]
        have lean_s1270 : (Eq let535 True) := by timed Eq.trans lean_s1269 lean_r79
        have lean_s1271 : (Eq let30 True) := by timed Eq.trans lean_r163 lean_s1270
        have lean_s1272 : let30 := by timed trueElim lean_s1271
        have lean_s1273 : let871 := by timed Eq.trans lean_s1268 lean_s1272
        have lean_s1274 : let868 := by timed falseElim lean_s1273
        show let868 from lean_s1274
      ))
    have lean_s1265 : let870 := by liftOrNToImp lean_s1264, 1
    have lean_s1266 : let868 := by timed modusPonens lean_a251 lean_s1265
    show let868 from lean_s1266
  ))
have lean_s1265 : let870 := by liftOrNToImp lean_s1264, 1
have lean_s1266 : let869 := by timed impliesElim lean_s1265
have lean_s1267 : (Or let868 let807) := by permutateOr lean_s1266, [1, 0], (- 1)
let lean_s1268 := by R1 lean_s1263, lean_s1267, let488, [(- 1), (- 1)]
have lean_s1269 : (Or let804 let23) := by timed iteElim1 lean_s1228
have lean_s1270 : (Or let23 let804) := by permutateOr lean_s1269, [1, 0], (- 1)
let lean_s1271 := by R2 lean_s1268, lean_s1270, let23, [(- 1), (- 1)]
have lean_s1272 : (Or let744 (Or let747 (Or let830 let805))) := by R2 lean_s1271, lean_s1236, let360, [(- 1), (- 1)]
have lean_s1273 : (Or let744 (Or let747 (Or let830 let804))) := by factor lean_s1272, (- 1)
let lean_s1274 := by R2 lean_s1273, lean_s1230, let503, [(- 1), (- 1)]
have lean_s1275 : (Or let742 let311) := by timed iteElim1 lean_s1224
have lean_s1276 : (Or let311 let742) := by permutateOr lean_s1275, [1, 0], (- 1)
let lean_s1277 := by R2 lean_s1276, lean_s1226, let489, [(- 1), (- 1)]
have lean_s1278 : (Or let745 (Or let747 (Or let744 (Or let862 let864)))) :=
  (scope (fun lean_a252 : let34 =>
    (scope (fun lean_a253 : let21 =>
      (scope (fun lean_a254 : let19 =>
        (scope (fun lean_a255 : let311 =>
          (scope (fun lean_a256 : let9 =>
            (scope (fun lean_a257 : let2 =>
              have lean_s1278 : let850 := by timed Eq.symm lean_r3
              have lean_s1279 : let38 := by timed eqResolve lean_a257 lean_s1278
              have lean_s1280 : let867 := by timed And.intro lean_a255 lean_a253
              have lean_s1281 : (Or let862 (Or let747 let464)) :=
                (scope (fun lean_a253 : let311 =>
                  (scope (fun lean_a254 : let21 =>
                    have lean_s1281 : let789 := by timed Eq.symm lean_a254
                    have lean_s1282 : (Eq let310 let14) := by timed Eq.symm lean_a253
                    have lean_s1283 : let311 := by timed Eq.symm lean_s1282
                    have lean_s1284 : let464 := by timed Eq.trans lean_s1281 lean_s1283
                    show let464 from lean_s1284
                ))))
              have lean_s1282 : (Implies let867 let464) := by liftOrNToImp lean_s1281, 2
              have lean_s1283 : let464 := by timed modusPonens lean_s1280 lean_s1282
              have lean_s1284 : (Or (Not let464) let865) :=
                (scope (fun lean_a253 : let464 =>
                  have lean_s1284 : let463 := by timed eqResolve lean_a253 lean_r143
                  have lean_s1285 : let865 := by timed Eq.symm lean_s1284
                  show let865 from lean_s1285
                ))
              have lean_s1285 : (Implies let464 let865) := by liftOrNToImp lean_s1284, 1
              have lean_s1286 : let865 := by timed modusPonens lean_s1283 lean_s1285
              have lean_s1287 : let866 := by timed And.intro lean_s1279 lean_s1286
              have lean_s1288 : (Or let846 (Or (Not let865) let792)) :=
                (scope (fun lean_a254 : let38 =>
                  (scope (fun lean_a255 : let865 =>
                    have lean_s1288 : let463 := by timed Eq.symm lean_a255
                    have lean_s1289 : let865 := by timed Eq.symm lean_s1288
                    have lean_s1290 : let849 := by timed Eq.symm lean_a254
                    have lean_s1291 : let38 := by timed Eq.symm lean_s1290
                    have lean_s1292 : let854 := by timed flipCongrArg lean_s1291 [xx5fcount]
                    have lean_s1293 : let792 := by timed Eq.trans lean_s1289 lean_s1292
                    show let792 from lean_s1293
                ))))
              have lean_s1289 : (Implies let866 let792) := by liftOrNToImp lean_s1288, 2
              have lean_s1290 : let792 := by timed modusPonens lean_s1287 lean_s1289
              let lean_s1291 := by timed And.intro lean_a254 lean_a252
              have lean_s1292 : let844 := by timed And.intro lean_s1279 lean_s1291
              have lean_s1293 : let847 :=
                (scope (fun lean_a255 : let38 =>
                  (scope (fun lean_a256 : let19 =>
                    (scope (fun lean_a257 : let34 =>
                      have lean_s1293 : let782 := by timed Eq.symm lean_a257
                      have lean_s1294 : let172 := by timed Eq.symm lean_a256
                      have lean_s1295 : let19 := by timed Eq.symm lean_s1294
                      let lean_s1296 := by timed Eq.trans lean_s1293 lean_s1295
                      have lean_s1297 : let849 := by timed Eq.symm lean_a255
                      have lean_s1298 : let38 := by timed Eq.symm lean_s1297
                      have lean_s1299 : let848 := by timed flipCongrArg lean_s1298 [sx5fcount]
                      have lean_s1300 : let751 := by timed Eq.trans lean_s1296 lean_s1299
                      show let751 from lean_s1300
                ))))))
              have lean_s1294 : let845 := by liftOrNToImp lean_s1293, 3
              have lean_s1295 : let751 := by timed modusPonens lean_s1292 lean_s1294
              let lean_s1296 := by timed And.intro lean_s1290 lean_s1295
              have lean_s1297 : let793 := by timed And.intro lean_a256 lean_s1296
              show let793 from lean_s1297
  ))))))))))))
have lean_s1279 : let863 := by liftOrNToImp lean_s1278, 6
have lean_s1280 : (Eq let312 let312) := by timed rfl
let lean_s1281 := by timed flipCongrArg lean_s1280 [Implies]
have lean_s1282 : let795 := by timed falseIntro lean_s1215
have lean_s1283 : (Eq let863 let314) := by timed congr lean_s1281 lean_s1282
have lean_s1284 : (Eq let863 let313) := by timed Eq.trans lean_s1283 lean_r60
have lean_s1285 : let313 := by timed eqResolve lean_s1279 lean_s1284
have lean_s1286 : (Or let745 (Or let747 (Or let744 (Or let862 let839)))) := by timed flipNotAnd lean_s1285 [let34, let21, let19, let311, let9, let2]
have lean_s1287 : (Or let553 (Or let745 (Or let744 (Or let747 (Or let862 let830))))) := by permutateOr lean_s1286, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1288 := by R1 lean_s1277, lean_s1287, let311, [(- 1), (- 1)]
let lean_s1289 := by R2 lean_s1288, lean_s1222, let9, [(- 1), 0]
let lean_s1290 := by R2 lean_s11, lean_s1222, let9, [(- 1), 0]
have lean_s1291 : (Or let855 let33) := by timed iteElim1 lean_s1207
have lean_s1292 : (Or let33 let855) := by permutateOr lean_s1291, [1, 0], (- 1)
let lean_s1293 := by R2 lean_s1290, lean_s1292, let33, [(- 1), (- 1)]
let lean_s1294 := by R2 lean_s1293, lean_s1209, let501, [(- 1), (- 1)]
have lean_s1295 : (Or let745 (Or let747 (Or let744 (Or let834 (Or let553 (Or let830 let753)))))) :=
  (scope (fun lean_a255 : let34 =>
    (scope (fun lean_a256 : let21 =>
      (scope (fun lean_a257 : let19 =>
        (scope (fun lean_a258 : let15 =>
          (scope (fun lean_a259 : let9 =>
            (scope (fun lean_a260 : let2 =>
              have lean_s1295 : let850 := by timed Eq.symm lean_r3
              have lean_s1296 : let38 := by timed eqResolve lean_a260 lean_s1295
              let lean_s1297 := by timed And.intro lean_a258 lean_a256
              have lean_s1298 : let851 := by timed And.intro lean_s1296 lean_s1297
              have lean_s1299 : let853 :=
                (scope (fun lean_a255 : let38 =>
                  (scope (fun lean_a256 : let15 =>
                    (scope (fun lean_a257 : let21 =>
                      have lean_s1299 : let789 := by timed Eq.symm lean_a257
                      have lean_s1300 : let137 := by timed Eq.symm lean_a256
                      have lean_s1301 : let15 := by timed Eq.symm lean_s1300
                      let lean_s1302 := by timed Eq.trans lean_s1299 lean_s1301
                      have lean_s1303 : let849 := by timed Eq.symm lean_a255
                      have lean_s1304 : let38 := by timed Eq.symm lean_s1303
                      have lean_s1305 : let854 := by timed flipCongrArg lean_s1304 [xx5fcount]
                      have lean_s1306 : let752 := by timed Eq.trans lean_s1302 lean_s1305
                      show let752 from lean_s1306
                ))))))
              have lean_s1300 : let852 := by liftOrNToImp lean_s1299, 3
              have lean_s1301 : let752 := by timed modusPonens lean_s1298 lean_s1300
              let lean_s1302 := by timed And.intro lean_a257 lean_a255
              have lean_s1303 : let844 := by timed And.intro lean_s1296 lean_s1302
              have lean_s1304 : let847 :=
                (scope (fun lean_a255 : let38 =>
                  (scope (fun lean_a256 : let19 =>
                    (scope (fun lean_a257 : let34 =>
                      have lean_s1304 : let782 := by timed Eq.symm lean_a257
                      have lean_s1305 : let172 := by timed Eq.symm lean_a256
                      have lean_s1306 : let19 := by timed Eq.symm lean_s1305
                      let lean_s1307 := by timed Eq.trans lean_s1304 lean_s1306
                      have lean_s1308 : let849 := by timed Eq.symm lean_a255
                      have lean_s1309 : let38 := by timed Eq.symm lean_s1308
                      have lean_s1310 : let848 := by timed flipCongrArg lean_s1309 [sx5fcount]
                      have lean_s1311 : let751 := by timed Eq.trans lean_s1307 lean_s1310
                      show let751 from lean_s1311
                ))))))
              have lean_s1305 : let845 := by liftOrNToImp lean_s1304, 3
              have lean_s1306 : let751 := by timed modusPonens lean_s1303 lean_s1305
              let lean_s1307 := by timed And.intro lean_s1301 lean_s1306
              have lean_s1308 : let753 := by timed And.intro lean_a259 lean_s1307
              show let753 from lean_s1308
  ))))))))))))
have lean_s1296 : let843 := by liftOrNToImp lean_s1295, 6
have lean_s1297 : (Eq let517 let517) := by timed rfl
let lean_s1298 := by timed flipCongrArg lean_s1297 [Implies]
have lean_s1299 : (Or let553 (Or let757 let756)) :=
  (scope (fun lean_a255 : let9 =>
    (scope (fun lean_a256 : let752 =>
      (scope (fun lean_a257 : let751 =>
        have lean_s1299 : let758 := by timed Eq.symm lean_a257
        have lean_s1300 : let760 :=
          (scope (fun lean_a255 : let758 =>
            have lean_s1300 : let64 := by timed trueElim lean_r13
            have lean_s1301 : let773 := by timed And.intro lean_s1300 lean_a255
            have lean_s1302 : let774 := by arithMulPos [let7, let13, let50], 4
            have lean_s1303 : let772 := by timed modusPonens lean_s1301 lean_s1302
            have lean_s1304 : let769 := by timed Eq.symm lean_a256
            have lean_s1305 : let770 := by timed And.intro lean_s1300 lean_s1304
            have lean_s1306 : let771 := by arithMulPos [let6, let13, let50], 4
            have lean_s1307 : let768 := by timed modusPonens lean_s1305 lean_s1306
            have lean_s1308 : let306 := by timed trueElim lean_r58
            have lean_s1309 : let766 := by timed And.intro lean_s1308 lean_a255
            have lean_s1310 : let767 := by arithMulNeg [let8, let3, let51], 3
            have lean_s1311 : let765 := by timed modusPonens lean_s1309 lean_s1310
            have lean_s1312 : let764 := by sumBounds [lean_s1303, lean_s1307, lean_s1311]
            let lean_s1313 := by timed congrHAdd lean_r14 lean_r194
            have lean_s1314 : (Eq let763 let445) := by timed congrHAdd lean_r126 lean_s1313
            have lean_s1315 : (Eq let763 let53) := by timed Eq.trans lean_s1314 lean_r133
            let lean_s1316 := by timed flipCongrArg lean_s1315 [LE.le]
            let lean_s1317 := by timed congrHAdd lean_r15 lean_r16
            have lean_s1318 : (Eq let762 let330) := by timed congrHAdd lean_r15 lean_s1317
            have lean_s1319 : (Eq let762 let52) := by timed Eq.trans lean_s1318 lean_r66
            have lean_s1320 : (Eq let764 let69) := by timed congr lean_s1316 lean_s1319
            have lean_s1321 : (Eq let764 False) := by timed Eq.trans lean_s1320 lean_r17
            show False from by timed eqResolve lean_s1312 lean_s1321
          ))
        have lean_s1301 : let759 := by liftOrNToNeg lean_s1300
        show False from by timed contradiction lean_s1299 lean_s1301
  ))))))
have lean_s1300 : (Not let753) := by liftOrNToNeg lean_s1299
have lean_s1301 : let755 := by timed falseIntro lean_s1300
have lean_s1302 : (Eq let843 let519) := by timed congr lean_s1298 lean_s1301
have lean_s1303 : (Eq let843 let518) := by timed Eq.trans lean_s1302 lean_r147
have lean_s1304 : let518 := by timed eqResolve lean_s1296 lean_s1303
have lean_s1305 : (Or let745 let842) := by timed flipNotAnd lean_s1304 [let34, let21, let19, let15, let9, let2]
have lean_s1306 : (Or let553 (Or let745 let838)) := by permutateOr lean_s1305, [4, 0, 2, 1, 3, 5], (- 1)
let lean_s1307 := by R1 lean_s1294, lean_s1306, let19, [(- 1), (- 1)]
have lean_s1308 : (Or let745 (Or let747 (Or let834 (Or let830 let837)))) := by R2 lean_s1307, lean_s1222, let9, [(- 1), 0]
have lean_s1309 : let837 := by factor lean_s1308, (- 1)
have lean_s1310 : (Or let827 (Or let824 (Or let42 let47))) := by timed cnfAndNeg [let511, let41, let46]
have lean_s1311 : let826 :=
  (scope (fun lean_a255 : let511 =>
    (scope (fun lean_a256 : let41 =>
      (scope (fun lean_a257 : let46 =>
        let lean_s1311 := by timed And.intro lean_a257 lean_a256
        have lean_s1312 : let829 := by timed And.intro lean_a255 lean_s1311
        have lean_s1313 : (Or let824 (Or let47 (Or let42 let828))) :=
          (scope (fun lean_a258 : let511 =>
            (scope (fun lean_a259 : let46 =>
              (scope (fun lean_a260 : let41 =>
                have lean_s1313 : (binrel% GT.gt fmt1 let3) := by trichotomy lean_a258, lean_a259
                have lean_s1314 : (binrel% GE.ge fmt1 let1) := by intTightLb lean_s1313
                have lean_s1315 : (Eq let41 let291) := by timed Eq.symm lean_r47
                have lean_s1316 : let291 := by timed eqResolve lean_a260 lean_s1315
                have lean_s1317 : (binrel% LE.le fmt1 let1) := by intTightUb lean_s1316
                have lean_s1318 : let2 := by trichotomy lean_s1314, lean_s1317
                have lean_s1319 : let828 := by timed Eq.symm lean_s1318
                show let828 from lean_s1319
          ))))))
        have lean_s1314 : (Implies let829 let828) := by liftOrNToImp lean_s1313, 3
        have lean_s1315 : let828 := by timed modusPonens lean_s1312 lean_s1314
        have lean_s1316 : (Or (Not let828) let2) :=
          (scope (fun lean_a258 : let828 =>
            have lean_s1316 : let2 := by timed Eq.symm lean_a258
            show let2 from lean_s1316
          ))
        have lean_s1317 : (Implies let828 let2) := by liftOrNToImp lean_s1316, 1
        have lean_s1318 : let2 := by timed modusPonens lean_s1315 lean_s1317
        show let2 from lean_s1318
  ))))))
have lean_s1312 : (Implies let827 let2) := by liftOrNToImp lean_s1311, 3
have lean_s1313 : (Or (Not let827) let2) := by timed impliesElim lean_s1312
have lean_s1314 : let826 := by R1 lean_s1310, lean_s1313, let827, [(- 1), (- 1)]
have lean_s1315 : let698 := by timed rfl
have lean_s1316 : (Eq let824 let824) := by timed rfl
let lean_s1317 := by timed congr lean_s1315 lean_s1316
have lean_s1318 : let44 := by timed rfl
let lean_s1319 := by timed flipCongrArg lean_s1318 [Eq]
have lean_s1320 : (Eq let411 let44) := by timed congr lean_s1319 lean_r4
have lean_s1321 : (Eq let411 True) := by timed Eq.trans lean_s1320 lean_r5
have lean_s1322 : (Eq let43 True) := by timed Eq.trans lean_r116 lean_s1321
have lean_s1323 : let43 := by timed trueElim lean_s1322
let lean_s1324 := by timed congr lean_s1315 lean_s1323
have lean_s1325 : let305 := by timed rfl
let lean_s1326 := by timed flipCongrArg lean_s1325 [Eq]
have lean_s1327 : (Eq let48 let305) := by timed congr lean_s1326 lean_r7
have lean_s1328 : (Eq let48 True) := by timed Eq.trans lean_s1327 lean_r57
have lean_s1329 : (Eq let49 True) := by timed Eq.trans lean_r6 lean_s1328
have lean_s1330 : let49 := by timed trueElim lean_s1329
let lean_s1331 := by timed congr lean_s1315 lean_s1330
have lean_s1332 : (Eq let2 let2) := by timed rfl
let lean_s1333 := by timed congr lean_s1331 lean_s1332
let lean_s1334 := by timed congr lean_s1324 lean_s1333
have lean_s1335 : (Eq let826 let825) := by timed congr lean_s1317 lean_s1334
have lean_s1336 : let825 := by timed eqResolve lean_s1314 lean_s1335
have lean_s1337 : (Or let40 (Or let45 (Or let2 let824))) := by permutateOr lean_s1336, [1, 2, 3, 0], (- 1)
let lean_s1338 := by R2 lean_s1309, lean_s1337, let2, [(- 1), (- 1)]
have lean_s1339 : let41 := by andElim lean_s1195, 1
let lean_s1340 := by R1 lean_s1338, lean_s1339, let40, [(- 1), 0]
have lean_s1341 : let511 := by andElim lean_s1195, 2
let lean_s1342 := by R2 lean_s1340, lean_s1341, let511, [(- 1), 0]
have lean_s1343 : (Or let745 (Or let747 (Or let553 (Or let46 let753)))) :=
  (scope (fun lean_a259 : let34 =>
    (scope (fun lean_a260 : let21 =>
      (scope (fun lean_a261 : let9 =>
        (scope (fun lean_a262 : let45 =>
          have lean_s1343 : let783 := by timed Eq.symm lean_r49
          have lean_s1344 : let293 := by timed eqResolve lean_a262 lean_s1343
          have lean_s1345 : let784 := by timed And.intro lean_s1344 lean_a260
          have lean_s1346 : let787 :=
            (scope (fun lean_a260 : let293 =>
              (scope (fun lean_a261 : let21 =>
                have lean_s1346 : let789 := by timed Eq.symm lean_a261
                have lean_s1347 : let781 := by timed Eq.symm lean_a260
                have lean_s1348 : let293 := by timed Eq.symm lean_s1347
                have lean_s1349 : let788 := by timed flipCongrArg lean_s1348 [xx5fcount]
                have lean_s1350 : let752 := by timed Eq.trans lean_s1346 lean_s1349
                show let752 from lean_s1350
            ))))
          have lean_s1347 : let785 := by liftOrNToImp lean_s1346, 2
          have lean_s1348 : let752 := by timed modusPonens lean_s1345 lean_s1347
          have lean_s1349 : let775 := by timed And.intro lean_s1344 lean_a259
          have lean_s1350 : let779 :=
            (scope (fun lean_a261 : let293 =>
              (scope (fun lean_a262 : let34 =>
                have lean_s1350 : let782 := by timed Eq.symm lean_a262
                have lean_s1351 : let781 := by timed Eq.symm lean_a261
                have lean_s1352 : let293 := by timed Eq.symm lean_s1351
                have lean_s1353 : let780 := by timed flipCongrArg lean_s1352 [sx5fcount]
                have lean_s1354 : let751 := by timed Eq.trans lean_s1350 lean_s1353
                show let751 from lean_s1354
            ))))
          have lean_s1351 : let776 := by liftOrNToImp lean_s1350, 2
          have lean_s1352 : let751 := by timed modusPonens lean_s1349 lean_s1351
          let lean_s1353 := by timed And.intro lean_s1348 lean_s1352
          have lean_s1354 : let753 := by timed And.intro lean_a261 lean_s1353
          show let753 from lean_s1354
  ))))))))
have lean_s1344 : let754 := by liftOrNToImp lean_s1343, 4
have lean_s1345 : (Eq let588 let588) := by timed rfl
let lean_s1346 := by timed flipCongrArg lean_s1345 [Implies]
have lean_s1347 : let755 := by timed falseIntro lean_s1300
have lean_s1348 : (Eq let754 let590) := by timed congr lean_s1346 lean_s1347
have lean_s1349 : (Eq let754 let589) := by timed Eq.trans lean_s1348 lean_r217
have lean_s1350 : let589 := by timed eqResolve lean_s1344 lean_s1349
have lean_s1351 : (Or let745 let750) := by timed flipNotAnd lean_s1350 [let34, let21, let9, let45]
have lean_s1352 : (Or let553 (Or let745 let748)) := by permutateOr lean_s1351, [2, 0, 1, 3], (- 1)
let lean_s1353 := by R1 lean_s1342, lean_s1352, let45, [(- 1), (- 1)]
have lean_s1354 : (Or let745 (Or let747 (Or let834 let833))) := by R2 lean_s1353, lean_s1222, let9, [(- 1), 0]
have lean_s1355 : (Or let745 (Or let747 let834)) := by factor lean_s1354, 4
have lean_s1356 : (Or let745 (Or let744 (Or let747 (Or let830 let833)))) := by R1 lean_s1289, lean_s1355, let15, [(- 1), (- 1)]
have lean_s1357 : (Or let745 let832) := by factor lean_s1356, 5
have lean_s1358 : (Or let744 (Or let747 (Or let830 let832))) := by R1 lean_s1274, lean_s1357, let34, [(- 1), (- 1)]
have lean_s1359 : let832 := by factor lean_s1358, (- 1)
have lean_s1360 : (Or let744 (Or let830 let831)) := by R1 lean_s1250, lean_s1359, let21, [(- 1), (- 1)]
have lean_s1361 : let831 := by factor lean_s1360, (- 1)
let lean_s1362 := by R1 lean_s1337, lean_s1339, let40, [(- 1), 0]
have lean_s1363 : (Or let810 (Or let747 (Or let553 (Or let46 let812)))) :=
  (scope (fun lean_a261 : let23 =>
    (scope (fun lean_a262 : let21 =>
      (scope (fun lean_a263 : let9 =>
        (scope (fun lean_a264 : let45 =>
          have lean_s1363 : let783 := by timed Eq.symm lean_r49
          have lean_s1364 : let293 := by timed eqResolve lean_a264 lean_s1363
          have lean_s1365 : let784 := by timed And.intro lean_s1364 lean_a262
          have lean_s1366 : let787 :=
            (scope (fun lean_a261 : let293 =>
              (scope (fun lean_a262 : let21 =>
                have lean_s1366 : let789 := by timed Eq.symm lean_a262
                have lean_s1367 : let781 := by timed Eq.symm lean_a261
                have lean_s1368 : let293 := by timed Eq.symm lean_s1367
                have lean_s1369 : let788 := by timed flipCongrArg lean_s1368 [xx5fcount]
                have lean_s1370 : let752 := by timed Eq.trans lean_s1366 lean_s1369
                show let752 from lean_s1370
            ))))
          have lean_s1367 : let785 := by liftOrNToImp lean_s1366, 2
          have lean_s1368 : let752 := by timed modusPonens lean_s1365 lean_s1367
          have lean_s1369 : let821 := by timed And.intro lean_s1364 lean_a261
          have lean_s1370 : (Or let778 let822) :=
            (scope (fun lean_a261 : let293 =>
              (scope (fun lean_a262 : let23 =>
                have lean_s1370 : let823 := by timed Eq.symm lean_a262
                have lean_s1371 : let781 := by timed Eq.symm lean_a261
                have lean_s1372 : let293 := by timed Eq.symm lean_s1371
                have lean_s1373 : let780 := by timed flipCongrArg lean_s1372 [sx5fcount]
                have lean_s1374 : let811 := by timed Eq.trans lean_s1370 lean_s1373
                show let811 from lean_s1374
            ))))
          have lean_s1371 : (Implies let821 let811) := by liftOrNToImp lean_s1370, 2
          have lean_s1372 : let811 := by timed modusPonens lean_s1369 lean_s1371
          let lean_s1373 := by timed And.intro lean_s1368 lean_s1372
          have lean_s1374 : let812 := by timed And.intro lean_a263 lean_s1373
          show let812 from lean_s1374
  ))))))))
have lean_s1364 : let813 := by liftOrNToImp lean_s1363, 4
have lean_s1365 : (Eq let336 let336) := by timed rfl
let lean_s1366 := by timed flipCongrArg lean_s1365 [Implies]
have lean_s1367 : let814 := by timed falseIntro lean_s5
have lean_s1368 : (Eq let813 let338) := by timed congr lean_s1366 lean_s1367
have lean_s1369 : (Eq let813 let337) := by timed Eq.trans lean_s1368 lean_r69
have lean_s1370 : let337 := by timed eqResolve lean_s1364 lean_s1369
have lean_s1371 : (Or let810 let750) := by timed flipNotAnd lean_s1370 [let23, let21, let9, let45]
have lean_s1372 : (Or let553 (Or let810 let748)) := by permutateOr lean_s1371, [2, 0, 1, 3], (- 1)
let lean_s1373 := by R2 lean_s1372, lean_s1222, let9, [(- 1), 0]
let lean_s1374 := by R2 lean_s1373, lean_s1198, let21, [(- 1), (- 1)]
let lean_s1375 := by R1 lean_s1374, lean_s1200, let491, [(- 1), (- 1)]
let lean_s1376 := by R1 lean_s1375, lean_s1242, let388, [(- 1), (- 1)]
let lean_s1377 := by R2 lean_s1376, lean_s1270, let23, [(- 1), (- 1)]
have lean_s1378 : (Or let46 let805) := by R2 lean_s1377, lean_s1236, let360, [(- 1), (- 1)]
have lean_s1379 : (Or let46 let804) := by factor lean_s1378, (- 1)
let lean_s1380 := by R2 lean_s1379, lean_s1230, let503, [(- 1), (- 1)]
have lean_s1381 : (Or let745 (Or let791 (Or let553 (Or let46 let793)))) :=
  (scope (fun lean_a261 : let34 =>
    (scope (fun lean_a262 : let145 =>
      (scope (fun lean_a263 : let9 =>
        (scope (fun lean_a264 : let45 =>
          have lean_s1381 : let783 := by timed Eq.symm lean_r49
          have lean_s1382 : let293 := by timed eqResolve lean_a264 lean_s1381
          have lean_s1383 : let801 := by timed And.intro lean_s1382 lean_a262
          have lean_s1384 : (Or let778 let802) :=
            (scope (fun lean_a261 : let293 =>
              (scope (fun lean_a262 : let145 =>
                have lean_s1384 : let803 := by timed Eq.symm lean_a262
                have lean_s1385 : let781 := by timed Eq.symm lean_a261
                have lean_s1386 : let293 := by timed Eq.symm lean_s1385
                have lean_s1387 : let788 := by timed flipCongrArg lean_s1386 [xx5fcount]
                have lean_s1388 : let792 := by timed Eq.trans lean_s1384 lean_s1387
                show let792 from lean_s1388
            ))))
          have lean_s1385 : (Implies let801 let792) := by liftOrNToImp lean_s1384, 2
          have lean_s1386 : let792 := by timed modusPonens lean_s1383 lean_s1385
          have lean_s1387 : let775 := by timed And.intro lean_s1382 lean_a261
          have lean_s1388 : let779 :=
            (scope (fun lean_a261 : let293 =>
              (scope (fun lean_a262 : let34 =>
                have lean_s1388 : let782 := by timed Eq.symm lean_a262
                have lean_s1389 : let781 := by timed Eq.symm lean_a261
                have lean_s1390 : let293 := by timed Eq.symm lean_s1389
                have lean_s1391 : let780 := by timed flipCongrArg lean_s1390 [sx5fcount]
                have lean_s1392 : let751 := by timed Eq.trans lean_s1388 lean_s1391
                show let751 from lean_s1392
            ))))
          have lean_s1389 : let776 := by liftOrNToImp lean_s1388, 2
          have lean_s1390 : let751 := by timed modusPonens lean_s1387 lean_s1389
          let lean_s1391 := by timed And.intro lean_s1386 lean_s1390
          have lean_s1392 : let793 := by timed And.intro lean_a263 lean_s1391
          show let793 from lean_s1392
  ))))))))
have lean_s1382 : let794 := by liftOrNToImp lean_s1381, 4
have lean_s1383 : (Eq let286 let286) := by timed rfl
let lean_s1384 := by timed flipCongrArg lean_s1383 [Implies]
have lean_s1385 : let795 := by timed falseIntro lean_s1215
have lean_s1386 : (Eq let794 let288) := by timed congr lean_s1384 lean_s1385
have lean_s1387 : (Eq let794 let287) := by timed Eq.trans lean_s1386 lean_r44
have lean_s1388 : let287 := by timed eqResolve lean_s1382 lean_s1387
have lean_s1389 : (Or let745 (Or let791 let749)) := by timed flipNotAnd lean_s1388 [let34, let145, let9, let45]
have lean_s1390 : (Or let553 (Or let745 (Or let791 let46))) := by permutateOr lean_s1389, [2, 0, 1, 3], (- 1)
let lean_s1391 := by R2 lean_s1390, lean_s1222, let9, [(- 1), 0]
let lean_s1392 := by R2 lean_s1391, lean_s1245, let145, [(- 1), (- 1)]
let lean_s1393 := by R2 lean_s1392, lean_s1198, let491, [(- 1), (- 1)]
let lean_s1394 := by R1 lean_s1393, lean_s1352, let21, [(- 1), (- 1)]
have lean_s1395 : (Or let745 (Or let46 let746)) := by R2 lean_s1394, lean_s1222, let9, [(- 1), 0]
have lean_s1396 : let746 := by factor lean_s1395, (- 1)
have lean_s1397 : (Or let46 let46) := by R1 lean_s1380, lean_s1396, let34, [(- 1), (- 1)]
have lean_s1398 : let46 := by factor lean_s1397, 1
let lean_s1399 := by R1 lean_s1362, lean_s1398, let45, [(- 1), 0]
have lean_s1400 : let2 := by R2 lean_s1399, lean_s1341, let511, [(- 1), 0]
have lean_s1401 : let744 := by R2 lean_s1361, lean_s1400, let2, [(- 1), 0]
have lean_s1402 : let501 := by R1 lean_s1209, lean_s1401, let19, [(- 1), 0]
have lean_s1403 : let488 := by R2 lean_s1206, lean_s1402, let501, [(- 1), 0]
have lean_s1404 : let806 := by R2 lean_s1204, lean_s1403, let488, [(- 1), 0]
have lean_s1405 : let790 := by R1 lean_s1200, lean_s1404, let388, [(- 1), 0]
have lean_s1406 : let21 := by R1 lean_s1198, lean_s1405, let491, [(- 1), 0]
let lean_s1407 := by R2 lean_s11, lean_s1406, let21, [(- 1), 0]
have lean_s1408 : let807 := by R2 lean_s1267, lean_s1403, let488, [(- 1), 0]
have lean_s1409 : let804 := by R1 lean_s1236, lean_s1408, let360, [(- 1), 0]
have lean_s1410 : let34 := by R1 lean_s1230, lean_s1409, let503, [(- 1), 0]
let lean_s1411 := by R2 lean_s1407, lean_s1410, let34, [(- 1), 0]
let lean_s1412 := by R2 lean_s1411, lean_s1400, let2, [(- 1), 0]
have lean_s1413 : let33 := by R2 lean_s1292, lean_s1402, let501, [(- 1), 0]
let lean_s1414 := by R2 lean_s1412, lean_s1413, let33, [(- 1), 0]
have lean_s1415 : (Or let742 let487) := by timed @cnfAndPos [let488, let487] 1
have lean_s1416 : (Or let487 let742) := by permutateOr lean_s1415, [1, 0], (- 1)
have lean_s1417 : let880 :=
  (scope (fun lean_a261 : let487 =>
    have lean_s1417 : let880 :=
      (scope (fun lean_a262 : let487 =>
        have lean_s1417 : let563 := by timed Eq.symm lean_a262
        have lean_s1418 : let487 := by timed Eq.symm lean_s1417
        let lean_s1419 := by timed flipCongrArg lean_s1418 [Eq]
        have lean_s1420 : let566 := by timed rfl
        have lean_s1421 : (Eq let384 let57) := by timed congr lean_s1419 lean_s1420
        have lean_s1422 : (Eq let58 let355) := by timed flipCongrArg lean_r10 [Not]
        have lean_s1423 : (Eq let58 True) := by timed Eq.trans lean_s1422 lean_r79
        have lean_s1424 : (Eq let59 True) := by timed Eq.trans lean_r9 lean_s1423
        have lean_s1425 : let59 := by timed trueElim lean_s1424
        have lean_s1426 : (Eq let384 False) := by timed Eq.trans lean_s1421 lean_s1425
        have lean_s1427 : let879 := by timed falseElim lean_s1426
        show let879 from lean_s1427
      ))
    have lean_s1418 : let881 := by liftOrNToImp lean_s1417, 1
    have lean_s1419 : let879 := by timed modusPonens lean_a261 lean_s1418
    show let879 from lean_s1419
  ))
have lean_s1418 : let881 := by liftOrNToImp lean_s1417, 1
have lean_s1419 : let880 := by timed impliesElim lean_s1418
have lean_s1420 : (Or let879 let743) := by permutateOr lean_s1419, [1, 0], (- 1)
have lean_s1421 : (Or let855 let384) := by timed @cnfAndPos [let488, let384] 1
have lean_s1422 : (Or let384 let855) := by permutateOr lean_s1421, [1, 0], (- 1)
have lean_s1423 : let384 := by R2 lean_s1422, lean_s1402, let501, [(- 1), 0]
have lean_s1424 : let743 := by R2 lean_s1420, lean_s1423, let384, [(- 1), 0]
have lean_s1425 : let742 := by R1 lean_s1416, lean_s1424, let487, [(- 1), 0]
have lean_s1426 : let15 := by R1 lean_s1226, lean_s1425, let489, [(- 1), 0]
let lean_s1427 := by R2 lean_s1414, lean_s1426, let15, [(- 1), 0]
exact (show False from by R2 lean_s1427, lean_s1222, let9, [0, 0])


