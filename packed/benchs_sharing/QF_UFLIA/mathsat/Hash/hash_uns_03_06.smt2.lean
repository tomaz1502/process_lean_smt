open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {hashx5f3 : (Int -> Int)}
variable {hashx5f4 : (Int -> Int)}
variable {hashx5f6 : (Int -> Int)}
variable {hashx5f5 : (Int -> Int)}
variable {x2 : Int}
variable {x1 : Int}
variable {hashx5f2 : (Int -> Int)}
variable {x3 : Int}
variable {x2 : Int}
variable {hashx5f6 : (Int -> Int)}
variable {hashx5f1 : (Int -> Int)}
variable {hashx5f5 : (Int -> Int)}
variable {hashx5f3 : (Int -> Int)}
variable {hashx5f4 : (Int -> Int)}
variable {x1 : Int}
variable {hashx5f1 : (Int -> Int)}
variable {x3 : Int}
variable {hashx5f2 : (Int -> Int)}

theorem th0 :
  let let1 := (hashx5f1 x1)
  let let2 := (binrel% HMul.hMul (Int.ofNat 2) let1)
  let let3 := (hashx5f2 x1)
  let let4 := (Eq let1 let3)
  let let5 := (smtIte let4 let3 let2 Int)
  let let6 := (binrel% HAdd.hAdd let1 let1)
  let let7 := (smtIte let4 let3 let6 Int)
  let let8 := (Ne let7 let5)
  let let9 := (Int.ofNat 4)
  let let10 := (binrel% LT.lt x3 let9)
  let let11 := (Int.ofNat 0)
  let let12 := (binrel% LE.le let11 x3)
  let let13 := (binrel% LT.lt x2 let9)
  let let14 := (binrel% LE.le let11 x2)
  let let15 := (binrel% LT.lt x1 let9)
  let let16 := (binrel% LE.le let11 x1)
  let let17 := (Ne x2 x3)
  let let18 := (Ne x1 x3)
  let let19 := (Ne x1 x2)
  let let20 := (hashx5f6 x3)
  let let21 := (Eq let20 x3)
  let let22 := (Eq let20 x2)
  let let23 := (Eq let20 x1)
  let let24 := (Or (Or let23 let22) let21)
  let let25 := (hashx5f6 x2)
  let let26 := (Eq let25 x3)
  let let27 := (Eq let25 x2)
  let let28 := (Eq let25 x1)
  let let29 := (Or (Or let28 let27) let26)
  let let30 := (hashx5f6 x1)
  let let31 := (Eq let30 x3)
  let let32 := (Eq let30 x2)
  let let33 := (Eq let30 x1)
  let let34 := (Or (Or let33 let32) let31)
  let let35 := (hashx5f5 x3)
  let let36 := (Eq let35 x3)
  let let37 := (Eq let35 x2)
  let let38 := (Eq let35 x1)
  let let39 := (Or (Or let38 let37) let36)
  let let40 := (hashx5f5 x2)
  let let41 := (Eq let40 x3)
  let let42 := (Eq let40 x2)
  let let43 := (Eq let40 x1)
  let let44 := (Or (Or let43 let42) let41)
  let let45 := (hashx5f5 x1)
  let let46 := (Eq let45 x3)
  let let47 := (Eq let45 x2)
  let let48 := (Eq let45 x1)
  let let49 := (Or (Or let48 let47) let46)
  let let50 := (hashx5f4 x3)
  let let51 := (Eq let50 x3)
  let let52 := (Eq let50 x2)
  let let53 := (Eq let50 x1)
  let let54 := (Or (Or let53 let52) let51)
  let let55 := (hashx5f4 x2)
  let let56 := (Eq let55 x3)
  let let57 := (Eq let55 x2)
  let let58 := (Eq let55 x1)
  let let59 := (Or (Or let58 let57) let56)
  let let60 := (hashx5f4 x1)
  let let61 := (Eq let60 x3)
  let let62 := (Eq let60 x2)
  let let63 := (Eq let60 x1)
  let let64 := (Or (Or let63 let62) let61)
  let let65 := (hashx5f3 x3)
  let let66 := (Eq let65 x3)
  let let67 := (Eq let65 x2)
  let let68 := (Eq let65 x1)
  let let69 := (Or (Or let68 let67) let66)
  let let70 := (hashx5f3 x2)
  let let71 := (Eq let70 x3)
  let let72 := (Eq let70 x2)
  let let73 := (Eq let70 x1)
  let let74 := (Or (Or let73 let72) let71)
  let let75 := (hashx5f3 x1)
  let let76 := (Eq let75 x3)
  let let77 := (Eq let75 x2)
  let let78 := (Eq let75 x1)
  let let79 := (Or (Or let78 let77) let76)
  let let80 := (hashx5f2 x3)
  let let81 := (Eq let80 x3)
  let let82 := (Eq let80 x2)
  let let83 := (Eq let80 x1)
  let let84 := (Or (Or let83 let82) let81)
  let let85 := (hashx5f2 x2)
  let let86 := (Eq let85 x3)
  let let87 := (Eq let85 x2)
  let let88 := (Eq let85 x1)
  let let89 := (Or (Or let88 let87) let86)
  let let90 := (Eq let3 x3)
  let let91 := (Eq let3 x2)
  let let92 := (Eq let3 x1)
  let let93 := (Or (Or let92 let91) let90)
  let let94 := (hashx5f1 x3)
  let let95 := (Eq let94 x3)
  let let96 := (Eq let94 x2)
  let let97 := (Eq let94 x1)
  let let98 := (Or (Or let97 let96) let95)
  let let99 := (hashx5f1 x2)
  let let100 := (Eq let99 x3)
  let let101 := (Eq let99 x2)
  let let102 := (Eq let99 x1)
  let let103 := (Or (Or let102 let101) let100)
  let let104 := (Eq let1 x3)
  let let105 := (Eq let1 x2)
  let let106 := (Eq let1 x1)
  let let107 := (Or (Or let106 let105) let104)
  let let108 := (Ne let25 let20)
  let let109 := (Ne let30 let20)
  let let110 := (Ne let30 let25)
  let let111 := (Ne let40 let35)
  let let112 := (Ne let45 let35)
  let let113 := (Ne let45 let40)
  let let114 := (Ne let55 let50)
  let let115 := (Ne let60 let50)
  let let116 := (Ne let60 let55)
  let let117 := (Ne let70 let65)
  let let118 := (Ne let75 let65)
  let let119 := (Ne let75 let70)
  let let120 := (Ne let85 let80)
  let let121 := (Ne let3 let80)
  let let122 := (Ne let3 let85)
  let let123 := (Ne let99 let94)
  let let124 := (Ne let1 let94)
  let let125 := (Ne let1 let99)
  let let126 := (And let125 (And let124 (And let123 (And let122 (And let121 (And let120 (And let119 (And let118 (And let117 (And let116 (And let115 (And let114 (And let113 (And let112 (And let111 (And let110 (And let109 (And let108 (And let107 (And let103 (And let98 (And let93 (And let89 (And let84 (And let79 (And let74 (And let69 (And let64 (And let59 (And let54 (And let49 (And let44 (And let39 (And let34 (And let29 (And let24 (And let19 (And let18 (And let17 (And let16 (And let15 (And let14 (And let13 (And let12 (And let10 let8)))))))))))))))))))))))))))))))))))))))))))))
  let let127 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let125 let124) let123) let122) let121) let120) let119) let118) let117) let116) let115) let114) let113) let112) let111) let110) let109) let108) let107) let103) let98) let93) let89) let84) let79) let74) let69) let64) let59) let54) let49) let44) let39) let34) let29) let24) let19) let18) let17) let16) let15) let14) let13) let12) let10) let8)
  let let128 := (Not (Eq let3 let80))
  let let129 := (Not (Eq let85 let80))
  let let130 := (Not (Eq let75 let70))
  let let131 := (Not (Eq let75 let65))
  let let132 := (Not (Eq let70 let65))
  let let133 := (Not (Eq let40 let35))
  let let134 := (Not (Eq let30 let25))
  let let135 := (Eq x2 let1)
  let let136 := (Eq x3 let1)
  let let137 := (Eq x2 let99)
  let let138 := (Eq x3 let99)
  let let139 := (Eq x3 let94)
  let let140 := (Or let92 (Or let91 let90))
  let let141 := (Eq x1 let3)
  let let142 := (Eq x2 let3)
  let let143 := (Eq x3 let3)
  let let144 := (Not (Eq let60 let55))
  let let145 := (Or let88 (Or let87 let86))
  let let146 := (Not (Eq let55 let50))
  let let147 := (Eq x2 let85)
  let let148 := (Not (Eq let45 let40))
  let let149 := (Eq x3 let85)
  let let150 := (Or let83 (Or let82 let81))
  let let151 := (Eq x1 let80)
  let let152 := (Eq x2 let80)
  let let153 := (Eq x3 let80)
  let let154 := (Or let78 (Or let77 let76))
  let let155 := (Eq x1 let75)
  let let156 := (Eq x2 let75)
  let let157 := (Eq x1 let35)
  let let158 := (Eq x2 let35)
  let let159 := (Eq x3 let35)
  let let160 := (Or let48 (Or let47 let46))
  let let161 := (Not (Eq let30 let20))
  let let162 := (Or let33 (Or let32 let31))
  let let163 := (Eq x1 let94)
  let let164 := (Eq x3 let20)
  let let165 := (Not (Eq let45 let35))
  let let166 := (Eq let5 let5)
  let let167 := (Not (Eq let25 let20))
  let let168 := (Eq x1 let30)
  let let169 := (Or let106 (Or let105 let104))
  let let170 := (Eq x2 let30)
  let let171 := (Eq x1 let1)
  let let172 := (Eq x3 let30)
  let let173 := (Or let23 (Or let22 let21))
  let let174 := (Not (Eq let60 let50))
  let let175 := (Eq x1 let85)
  let let176 := (Eq x1 let20)
  let let177 := (Or let97 (Or let96 let95))
  let let178 := (Eq x2 let20)
  let let179 := (Or let43 (Or let42 let41))
  let let180 := (Not (Eq x1 x2))
  let let181 := (Or let53 (Or let52 let51))
  let let182 := (Eq x1 let99)
  let let183 := (Eq x3 let25)
  let let184 := (Or let38 (Or let37 let36))
  let let185 := (binrel% GE.ge x2 let11)
  let let186 := (Eq x2 let60)
  let let187 := (Not True)
  let let188 := (Or let102 (Or let101 let100))
  let let189 := (Eq x2 let25)
  let let190 := (Not (binrel% GE.ge x1 let9))
  let let191 := (Eq x2 let94)
  let let192 := (Not (binrel% GE.ge x3 let9))
  let let193 := (binrel% GE.ge x3 let11)
  let let194 := (Not (binrel% GE.ge x2 let9))
  let let195 := (binrel% GE.ge x1 let11)
  let let196 := (Not (Eq x2 x3))
  let let197 := (Not (Eq x1 x3))
  let let198 := (Or let176 (Or let178 let164))
  let let199 := (Eq x1 let25)
  let let200 := (Or let199 (Or let189 let183))
  let let201 := (Or let168 (Or let170 let172))
  let let202 := (Or let157 (Or let158 let159))
  let let203 := (Eq x3 let40)
  let let204 := (Eq x2 let40)
  let let205 := (Eq x1 let40)
  let let206 := (Or let205 (Or let204 let203))
  let let207 := (Eq x3 let45)
  let let208 := (Eq x2 let45)
  let let209 := (Eq x1 let45)
  let let210 := (Or let209 (Or let208 let207))
  let let211 := (Eq x3 let50)
  let let212 := (Eq x2 let50)
  let let213 := (Eq x1 let50)
  let let214 := (Or let213 (Or let212 let211))
  let let215 := (Eq x3 let55)
  let let216 := (Eq x2 let55)
  let let217 := (Eq x1 let55)
  let let218 := (Or let217 (Or let216 let215))
  let let219 := (Eq x3 let60)
  let let220 := (Eq x1 let60)
  let let221 := (Or let220 (Or let186 let219))
  let let222 := (Eq x3 let65)
  let let223 := (Eq x2 let65)
  let let224 := (Eq x1 let65)
  let let225 := (Or let224 (Or let223 let222))
  let let226 := (Eq x3 let70)
  let let227 := (Eq x2 let70)
  let let228 := (Eq x1 let70)
  let let229 := (Or let228 (Or let227 let226))
  let let230 := (Eq x3 let75)
  let let231 := (Or let155 (Or let156 let230))
  let let232 := (Or let151 (Or let152 let153))
  let let233 := (Or let175 (Or let147 let149))
  let let234 := (Or let141 (Or let142 let143))
  let let235 := (Or let163 (Or let191 let139))
  let let236 := (Or let182 (Or let137 let138))
  let let237 := (Or let171 (Or let135 let136))
  let let238 := (Not (Eq let3 let85))
  let let239 := (Not (Eq let99 let94))
  let let240 := (Not (Eq let1 let94))
  let let241 := (Not (Eq let1 let99))
  let let242 := (And let241 (And let240 (And let239 (And let238 (And let128 (And let129 (And let130 (And let131 (And let132 (And let144 (And let174 (And let146 (And let148 (And let165 (And let133 (And let134 (And let161 (And let167 (And let237 (And let236 (And let235 (And let234 (And let233 (And let232 (And let231 (And let229 (And let225 (And let221 (And let218 (And let214 (And let210 (And let206 (And let202 (And let201 (And let200 (And let198 (And let180 (And let197 (And let196 (And let195 (And let190 (And let185 (And let194 (And let193 (And let192 False)))))))))))))))))))))))))))))))))))))))))))))
  let let243 := (Or let28 (Or let27 let26))
  let let244 := (Or let73 (Or let72 let71))
  let let245 := (Eq let7 let5)
  let let246 := (Not let245)
  let let247 := (Or let63 (Or let62 let61))
  let let248 := (Or let58 (Or let57 let56))
  let let249 := (Or let68 (Or let67 let66))
  let let250 := (Eq Or Or)
(Eq let127 let126) → (Eq let121 let128) → (Eq let120 let129) → (Eq let119 let130) → (Eq let118 let131) → (Eq let117 let132) → (Eq let111 let133) → (Eq let110 let134) → (Eq let105 let135) → (Eq let104 let136) → (Eq let101 let137) → (Eq let100 let138) → (Eq let95 let139) → (Eq let93 let140) → (Eq let92 let141) → (Eq let91 let142) → (Eq let90 let143) → (Eq let116 let144) → (Eq let89 let145) → (Eq let114 let146) → (Eq let87 let147) → (Eq let113 let148) → (Eq let86 let149) → (Eq let84 let150) → (Eq let83 let151) → (Eq let82 let152) → (Eq let81 let153) → (Eq let79 let154) → (Eq let78 let155) → (Eq let77 let156) → (Eq let38 let157) → (Eq let37 let158) → (Eq let36 let159) → (Eq let49 let160) → (Eq let109 let161) → (Eq let34 let162) → (Eq let97 let163) → (Eq let21 let164) → (Eq let112 let165) → (Eq let166 True) → (Eq let108 let167) → (Eq let33 let168) → (Eq let107 let169) → (Eq let32 let170) → (Eq let106 let171) → (Eq let31 let172) → (Eq let24 let173) → (Eq let115 let174) → (Eq let88 let175) → (Eq let6 let2) → (Eq let23 let176) → (Eq let98 let177) → (Eq let22 let178) → (Eq let44 let179) → (Eq let19 let180) → (Eq let54 let181) → (Eq let102 let182) → (Eq let26 let183) → (Eq let39 let184) → (Eq let14 let185) → (Eq let62 let186) → (Eq let187 False) → (Eq let103 let188) → (Eq let27 let189) → (Eq let15 let190) → (Eq let96 let191) → (Eq let242 False) → (Eq let63 let220) → (Eq let29 let243) → (Eq let52 let212) → (Eq let71 let226) → (Eq let10 let192) → (Eq let72 let227) → (Eq let12 let193) → (Eq let73 let228) → (Eq let13 let194) → (Eq let61 let219) → (Eq let74 let244) → (Eq let28 let199) → (Eq let41 let203) → (Eq let16 let195) → (Eq let51 let211) → (Eq let8 let246) → (Eq let64 let247) → (Eq let53 let213) → (Eq let17 let196) → (Eq let42 let204) → (Eq let18 let197) → (Eq let43 let205) → (Eq let46 let207) → (Eq let59 let248) → (Eq let47 let208) → (Eq let48 let209) → (Eq let56 let215) → (Eq let125 let241) → (Eq let69 let249) → (Eq let57 let216) → (Eq let58 let217) → (Eq let122 let238) → (Eq let66 let222) → (Eq let123 let239) → (Eq let67 let223) → (Eq let124 let240) → (Eq let68 let224) → (Eq let76 let230) → let127 → False :=
  let let1 := (hashx5f1 x1)
  let let2 := (binrel% HMul.hMul (Int.ofNat 2) let1)
  let let3 := (hashx5f2 x1)
  let let4 := (Eq let1 let3)
  let let5 := (smtIte let4 let3 let2 Int)
  let let6 := (binrel% HAdd.hAdd let1 let1)
  let let7 := (smtIte let4 let3 let6 Int)
  let let8 := (Ne let7 let5)
  let let9 := (Int.ofNat 4)
  let let10 := (binrel% LT.lt x3 let9)
  let let11 := (Int.ofNat 0)
  let let12 := (binrel% LE.le let11 x3)
  let let13 := (binrel% LT.lt x2 let9)
  let let14 := (binrel% LE.le let11 x2)
  let let15 := (binrel% LT.lt x1 let9)
  let let16 := (binrel% LE.le let11 x1)
  let let17 := (Ne x2 x3)
  let let18 := (Ne x1 x3)
  let let19 := (Ne x1 x2)
  let let20 := (hashx5f6 x3)
  let let21 := (Eq let20 x3)
  let let22 := (Eq let20 x2)
  let let23 := (Eq let20 x1)
  let let24 := (Or (Or let23 let22) let21)
  let let25 := (hashx5f6 x2)
  let let26 := (Eq let25 x3)
  let let27 := (Eq let25 x2)
  let let28 := (Eq let25 x1)
  let let29 := (Or (Or let28 let27) let26)
  let let30 := (hashx5f6 x1)
  let let31 := (Eq let30 x3)
  let let32 := (Eq let30 x2)
  let let33 := (Eq let30 x1)
  let let34 := (Or (Or let33 let32) let31)
  let let35 := (hashx5f5 x3)
  let let36 := (Eq let35 x3)
  let let37 := (Eq let35 x2)
  let let38 := (Eq let35 x1)
  let let39 := (Or (Or let38 let37) let36)
  let let40 := (hashx5f5 x2)
  let let41 := (Eq let40 x3)
  let let42 := (Eq let40 x2)
  let let43 := (Eq let40 x1)
  let let44 := (Or (Or let43 let42) let41)
  let let45 := (hashx5f5 x1)
  let let46 := (Eq let45 x3)
  let let47 := (Eq let45 x2)
  let let48 := (Eq let45 x1)
  let let49 := (Or (Or let48 let47) let46)
  let let50 := (hashx5f4 x3)
  let let51 := (Eq let50 x3)
  let let52 := (Eq let50 x2)
  let let53 := (Eq let50 x1)
  let let54 := (Or (Or let53 let52) let51)
  let let55 := (hashx5f4 x2)
  let let56 := (Eq let55 x3)
  let let57 := (Eq let55 x2)
  let let58 := (Eq let55 x1)
  let let59 := (Or (Or let58 let57) let56)
  let let60 := (hashx5f4 x1)
  let let61 := (Eq let60 x3)
  let let62 := (Eq let60 x2)
  let let63 := (Eq let60 x1)
  let let64 := (Or (Or let63 let62) let61)
  let let65 := (hashx5f3 x3)
  let let66 := (Eq let65 x3)
  let let67 := (Eq let65 x2)
  let let68 := (Eq let65 x1)
  let let69 := (Or (Or let68 let67) let66)
  let let70 := (hashx5f3 x2)
  let let71 := (Eq let70 x3)
  let let72 := (Eq let70 x2)
  let let73 := (Eq let70 x1)
  let let74 := (Or (Or let73 let72) let71)
  let let75 := (hashx5f3 x1)
  let let76 := (Eq let75 x3)
  let let77 := (Eq let75 x2)
  let let78 := (Eq let75 x1)
  let let79 := (Or (Or let78 let77) let76)
  let let80 := (hashx5f2 x3)
  let let81 := (Eq let80 x3)
  let let82 := (Eq let80 x2)
  let let83 := (Eq let80 x1)
  let let84 := (Or (Or let83 let82) let81)
  let let85 := (hashx5f2 x2)
  let let86 := (Eq let85 x3)
  let let87 := (Eq let85 x2)
  let let88 := (Eq let85 x1)
  let let89 := (Or (Or let88 let87) let86)
  let let90 := (Eq let3 x3)
  let let91 := (Eq let3 x2)
  let let92 := (Eq let3 x1)
  let let93 := (Or (Or let92 let91) let90)
  let let94 := (hashx5f1 x3)
  let let95 := (Eq let94 x3)
  let let96 := (Eq let94 x2)
  let let97 := (Eq let94 x1)
  let let98 := (Or (Or let97 let96) let95)
  let let99 := (hashx5f1 x2)
  let let100 := (Eq let99 x3)
  let let101 := (Eq let99 x2)
  let let102 := (Eq let99 x1)
  let let103 := (Or (Or let102 let101) let100)
  let let104 := (Eq let1 x3)
  let let105 := (Eq let1 x2)
  let let106 := (Eq let1 x1)
  let let107 := (Or (Or let106 let105) let104)
  let let108 := (Ne let25 let20)
  let let109 := (Ne let30 let20)
  let let110 := (Ne let30 let25)
  let let111 := (Ne let40 let35)
  let let112 := (Ne let45 let35)
  let let113 := (Ne let45 let40)
  let let114 := (Ne let55 let50)
  let let115 := (Ne let60 let50)
  let let116 := (Ne let60 let55)
  let let117 := (Ne let70 let65)
  let let118 := (Ne let75 let65)
  let let119 := (Ne let75 let70)
  let let120 := (Ne let85 let80)
  let let121 := (Ne let3 let80)
  let let122 := (Ne let3 let85)
  let let123 := (Ne let99 let94)
  let let124 := (Ne let1 let94)
  let let125 := (Ne let1 let99)
  let let126 := (And let125 (And let124 (And let123 (And let122 (And let121 (And let120 (And let119 (And let118 (And let117 (And let116 (And let115 (And let114 (And let113 (And let112 (And let111 (And let110 (And let109 (And let108 (And let107 (And let103 (And let98 (And let93 (And let89 (And let84 (And let79 (And let74 (And let69 (And let64 (And let59 (And let54 (And let49 (And let44 (And let39 (And let34 (And let29 (And let24 (And let19 (And let18 (And let17 (And let16 (And let15 (And let14 (And let13 (And let12 (And let10 let8)))))))))))))))))))))))))))))))))))))))))))))
  let let127 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let125 let124) let123) let122) let121) let120) let119) let118) let117) let116) let115) let114) let113) let112) let111) let110) let109) let108) let107) let103) let98) let93) let89) let84) let79) let74) let69) let64) let59) let54) let49) let44) let39) let34) let29) let24) let19) let18) let17) let16) let15) let14) let13) let12) let10) let8)
  let let128 := (Not (Eq let3 let80))
  let let129 := (Not (Eq let85 let80))
  let let130 := (Not (Eq let75 let70))
  let let131 := (Not (Eq let75 let65))
  let let132 := (Not (Eq let70 let65))
  let let133 := (Not (Eq let40 let35))
  let let134 := (Not (Eq let30 let25))
  let let135 := (Eq x2 let1)
  let let136 := (Eq x3 let1)
  let let137 := (Eq x2 let99)
  let let138 := (Eq x3 let99)
  let let139 := (Eq x3 let94)
  let let140 := (Or let92 (Or let91 let90))
  let let141 := (Eq x1 let3)
  let let142 := (Eq x2 let3)
  let let143 := (Eq x3 let3)
  let let144 := (Not (Eq let60 let55))
  let let145 := (Or let88 (Or let87 let86))
  let let146 := (Not (Eq let55 let50))
  let let147 := (Eq x2 let85)
  let let148 := (Not (Eq let45 let40))
  let let149 := (Eq x3 let85)
  let let150 := (Or let83 (Or let82 let81))
  let let151 := (Eq x1 let80)
  let let152 := (Eq x2 let80)
  let let153 := (Eq x3 let80)
  let let154 := (Or let78 (Or let77 let76))
  let let155 := (Eq x1 let75)
  let let156 := (Eq x2 let75)
  let let157 := (Eq x1 let35)
  let let158 := (Eq x2 let35)
  let let159 := (Eq x3 let35)
  let let160 := (Or let48 (Or let47 let46))
  let let161 := (Not (Eq let30 let20))
  let let162 := (Or let33 (Or let32 let31))
  let let163 := (Eq x1 let94)
  let let164 := (Eq x3 let20)
  let let165 := (Not (Eq let45 let35))
  let let166 := (Eq let5 let5)
  let let167 := (Not (Eq let25 let20))
  let let168 := (Eq x1 let30)
  let let169 := (Or let106 (Or let105 let104))
  let let170 := (Eq x2 let30)
  let let171 := (Eq x1 let1)
  let let172 := (Eq x3 let30)
  let let173 := (Or let23 (Or let22 let21))
  let let174 := (Not (Eq let60 let50))
  let let175 := (Eq x1 let85)
  let let176 := (Eq x1 let20)
  let let177 := (Or let97 (Or let96 let95))
  let let178 := (Eq x2 let20)
  let let179 := (Or let43 (Or let42 let41))
  let let180 := (Not (Eq x1 x2))
  let let181 := (Or let53 (Or let52 let51))
  let let182 := (Eq x1 let99)
  let let183 := (Eq x3 let25)
  let let184 := (Or let38 (Or let37 let36))
  let let185 := (binrel% GE.ge x2 let11)
  let let186 := (Eq x2 let60)
  let let187 := (Not True)
  let let188 := (Or let102 (Or let101 let100))
  let let189 := (Eq x2 let25)
  let let190 := (Not (binrel% GE.ge x1 let9))
  let let191 := (Eq x2 let94)
  let let192 := (Not (binrel% GE.ge x3 let9))
  let let193 := (binrel% GE.ge x3 let11)
  let let194 := (Not (binrel% GE.ge x2 let9))
  let let195 := (binrel% GE.ge x1 let11)
  let let196 := (Not (Eq x2 x3))
  let let197 := (Not (Eq x1 x3))
  let let198 := (Or let176 (Or let178 let164))
  let let199 := (Eq x1 let25)
  let let200 := (Or let199 (Or let189 let183))
  let let201 := (Or let168 (Or let170 let172))
  let let202 := (Or let157 (Or let158 let159))
  let let203 := (Eq x3 let40)
  let let204 := (Eq x2 let40)
  let let205 := (Eq x1 let40)
  let let206 := (Or let205 (Or let204 let203))
  let let207 := (Eq x3 let45)
  let let208 := (Eq x2 let45)
  let let209 := (Eq x1 let45)
  let let210 := (Or let209 (Or let208 let207))
  let let211 := (Eq x3 let50)
  let let212 := (Eq x2 let50)
  let let213 := (Eq x1 let50)
  let let214 := (Or let213 (Or let212 let211))
  let let215 := (Eq x3 let55)
  let let216 := (Eq x2 let55)
  let let217 := (Eq x1 let55)
  let let218 := (Or let217 (Or let216 let215))
  let let219 := (Eq x3 let60)
  let let220 := (Eq x1 let60)
  let let221 := (Or let220 (Or let186 let219))
  let let222 := (Eq x3 let65)
  let let223 := (Eq x2 let65)
  let let224 := (Eq x1 let65)
  let let225 := (Or let224 (Or let223 let222))
  let let226 := (Eq x3 let70)
  let let227 := (Eq x2 let70)
  let let228 := (Eq x1 let70)
  let let229 := (Or let228 (Or let227 let226))
  let let230 := (Eq x3 let75)
  let let231 := (Or let155 (Or let156 let230))
  let let232 := (Or let151 (Or let152 let153))
  let let233 := (Or let175 (Or let147 let149))
  let let234 := (Or let141 (Or let142 let143))
  let let235 := (Or let163 (Or let191 let139))
  let let236 := (Or let182 (Or let137 let138))
  let let237 := (Or let171 (Or let135 let136))
  let let238 := (Not (Eq let3 let85))
  let let239 := (Not (Eq let99 let94))
  let let240 := (Not (Eq let1 let94))
  let let241 := (Not (Eq let1 let99))
  let let242 := (And let241 (And let240 (And let239 (And let238 (And let128 (And let129 (And let130 (And let131 (And let132 (And let144 (And let174 (And let146 (And let148 (And let165 (And let133 (And let134 (And let161 (And let167 (And let237 (And let236 (And let235 (And let234 (And let233 (And let232 (And let231 (And let229 (And let225 (And let221 (And let218 (And let214 (And let210 (And let206 (And let202 (And let201 (And let200 (And let198 (And let180 (And let197 (And let196 (And let195 (And let190 (And let185 (And let194 (And let193 (And let192 False)))))))))))))))))))))))))))))))))))))))))))))
  let let243 := (Or let28 (Or let27 let26))
  let let244 := (Or let73 (Or let72 let71))
  let let245 := (Eq let7 let5)
  let let246 := (Not let245)
  let let247 := (Or let63 (Or let62 let61))
  let let248 := (Or let58 (Or let57 let56))
  let let249 := (Or let68 (Or let67 let66))
  let let250 := (Eq Or Or)
fun lean_r0 : (Eq let127 let126) => -- THEORY_REWRITE_BOOL
fun lean_r1 : (Eq let121 let128) => -- THEORY_REWRITE_BUILTIN
fun lean_r2 : (Eq let120 let129) => -- THEORY_REWRITE_BUILTIN
fun lean_r3 : (Eq let119 let130) => -- THEORY_REWRITE_BUILTIN
fun lean_r4 : (Eq let118 let131) => -- THEORY_REWRITE_BUILTIN
fun lean_r5 : (Eq let117 let132) => -- THEORY_REWRITE_BUILTIN
fun lean_r6 : (Eq let111 let133) => -- THEORY_REWRITE_BUILTIN
fun lean_r7 : (Eq let110 let134) => -- THEORY_REWRITE_BUILTIN
fun lean_r8 : (Eq let105 let135) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let104 let136) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let101 let137) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let100 let138) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let95 let139) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let93 let140) => -- THEORY_REWRITE_BOOL
fun lean_r14 : (Eq let92 let141) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let91 let142) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let90 let143) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let116 let144) => -- THEORY_REWRITE_BUILTIN
fun lean_r18 : (Eq let89 let145) => -- THEORY_REWRITE_BOOL
fun lean_r19 : (Eq let114 let146) => -- THEORY_REWRITE_BUILTIN
fun lean_r20 : (Eq let87 let147) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let113 let148) => -- THEORY_REWRITE_BUILTIN
fun lean_r22 : (Eq let86 let149) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let84 let150) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let83 let151) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let82 let152) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let81 let153) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let79 let154) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let78 let155) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let77 let156) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let38 let157) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let37 let158) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let36 let159) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let49 let160) => -- THEORY_REWRITE_BOOL
fun lean_r34 : (Eq let109 let161) => -- THEORY_REWRITE_BUILTIN
fun lean_r35 : (Eq let34 let162) => -- THEORY_REWRITE_BOOL
fun lean_r36 : (Eq let97 let163) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let21 let164) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let112 let165) => -- THEORY_REWRITE_BUILTIN
fun lean_r39 : (Eq let166 True) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let108 let167) => -- THEORY_REWRITE_BUILTIN
fun lean_r41 : (Eq let33 let168) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let107 let169) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let32 let170) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let106 let171) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let31 let172) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let24 let173) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let115 let174) => -- THEORY_REWRITE_BUILTIN
fun lean_r48 : (Eq let88 let175) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let6 let2) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let23 let176) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let98 let177) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let22 let178) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let44 let179) => -- THEORY_REWRITE_BOOL
fun lean_r54 : (Eq let19 let180) => -- THEORY_REWRITE_BUILTIN
fun lean_r55 : (Eq let54 let181) => -- THEORY_REWRITE_BOOL
fun lean_r56 : (Eq let102 let182) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let26 let183) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let39 let184) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let14 let185) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let62 let186) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let187 False) => -- THEORY_REWRITE_BOOL
fun lean_r62 : (Eq let103 let188) => -- THEORY_REWRITE_BOOL
fun lean_r63 : (Eq let27 let189) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let15 let190) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let96 let191) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let242 False) => -- THEORY_REWRITE_BOOL
fun lean_r67 : (Eq let63 let220) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let29 let243) => -- THEORY_REWRITE_BOOL
fun lean_r69 : (Eq let52 let212) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let71 let226) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let10 let192) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let72 let227) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let12 let193) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let73 let228) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let13 let194) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let61 let219) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let74 let244) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq let28 let199) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let41 let203) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let16 let195) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let51 let211) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let8 let246) => -- THEORY_REWRITE_BUILTIN
fun lean_r83 : (Eq let64 let247) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq let53 let213) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let17 let196) => -- THEORY_REWRITE_BUILTIN
fun lean_r86 : (Eq let42 let204) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let18 let197) => -- THEORY_REWRITE_BUILTIN
fun lean_r88 : (Eq let43 let205) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let46 let207) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let59 let248) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let47 let208) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let48 let209) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let56 let215) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let125 let241) => -- THEORY_REWRITE_BUILTIN
fun lean_r95 : (Eq let69 let249) => -- THEORY_REWRITE_BOOL
fun lean_r96 : (Eq let57 let216) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let58 let217) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let122 let238) => -- THEORY_REWRITE_BUILTIN
fun lean_r99 : (Eq let66 let222) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let123 let239) => -- THEORY_REWRITE_BUILTIN
fun lean_r101 : (Eq let67 let223) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let124 let240) => -- THEORY_REWRITE_BUILTIN
fun lean_r103 : (Eq let68 let224) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let76 let230) => -- THEORY_REWRITE_ARITH
fun lean_a105 : let127 => by
have lean_s0 : (Eq And And) := by timed rfl
let lean_s1 := by timed congr lean_s0 lean_r94
let lean_s2 := by timed congr lean_s0 lean_r102
let lean_s3 := by timed congr lean_s0 lean_r100
let lean_s4 := by timed congr lean_s0 lean_r98
let lean_s5 := by timed congr lean_s0 lean_r1
let lean_s6 := by timed congr lean_s0 lean_r2
let lean_s7 := by timed congr lean_s0 lean_r3
let lean_s8 := by timed congr lean_s0 lean_r4
let lean_s9 := by timed congr lean_s0 lean_r5
let lean_s10 := by timed congr lean_s0 lean_r17
let lean_s11 := by timed congr lean_s0 lean_r47
let lean_s12 := by timed congr lean_s0 lean_r19
let lean_s13 := by timed congr lean_s0 lean_r21
let lean_s14 := by timed congr lean_s0 lean_r38
let lean_s15 := by timed congr lean_s0 lean_r6
let lean_s16 := by timed congr lean_s0 lean_r7
let lean_s17 := by timed congr lean_s0 lean_r34
let lean_s18 := by timed congr lean_s0 lean_r40
have lean_s19 : let250 := by timed rfl
let lean_s20 := by timed congr lean_s19 lean_r44
let lean_s21 := by timed congr lean_s19 lean_r8
let lean_s22 := by timed congr lean_s21 lean_r9
have lean_s23 : (Eq let169 let237) := by timed congr lean_s20 lean_s22
have lean_s24 : (Eq let107 let237) := by timed Eq.trans lean_r42 lean_s23
let lean_s25 := by timed congr lean_s0 lean_s24
have lean_s26 : let250 := by timed rfl
let lean_s27 := by timed congr lean_s26 lean_r56
let lean_s28 := by timed congr lean_s26 lean_r10
let lean_s29 := by timed congr lean_s28 lean_r11
have lean_s30 : (Eq let188 let236) := by timed congr lean_s27 lean_s29
have lean_s31 : (Eq let103 let236) := by timed Eq.trans lean_r62 lean_s30
let lean_s32 := by timed congr lean_s0 lean_s31
have lean_s33 : let250 := by timed rfl
let lean_s34 := by timed congr lean_s33 lean_r36
let lean_s35 := by timed congr lean_s33 lean_r65
let lean_s36 := by timed congr lean_s35 lean_r12
have lean_s37 : (Eq let177 let235) := by timed congr lean_s34 lean_s36
have lean_s38 : (Eq let98 let235) := by timed Eq.trans lean_r51 lean_s37
let lean_s39 := by timed congr lean_s0 lean_s38
have lean_s40 : let250 := by timed rfl
let lean_s41 := by timed congr lean_s40 lean_r14
let lean_s42 := by timed congr lean_s40 lean_r15
let lean_s43 := by timed congr lean_s42 lean_r16
have lean_s44 : (Eq let140 let234) := by timed congr lean_s41 lean_s43
have lean_s45 : (Eq let93 let234) := by timed Eq.trans lean_r13 lean_s44
let lean_s46 := by timed congr lean_s0 lean_s45
have lean_s47 : let250 := by timed rfl
let lean_s48 := by timed congr lean_s47 lean_r48
let lean_s49 := by timed congr lean_s47 lean_r20
let lean_s50 := by timed congr lean_s49 lean_r22
have lean_s51 : (Eq let145 let233) := by timed congr lean_s48 lean_s50
have lean_s52 : (Eq let89 let233) := by timed Eq.trans lean_r18 lean_s51
let lean_s53 := by timed congr lean_s0 lean_s52
have lean_s54 : let250 := by timed rfl
let lean_s55 := by timed congr lean_s54 lean_r24
let lean_s56 := by timed congr lean_s54 lean_r25
let lean_s57 := by timed congr lean_s56 lean_r26
have lean_s58 : (Eq let150 let232) := by timed congr lean_s55 lean_s57
have lean_s59 : (Eq let84 let232) := by timed Eq.trans lean_r23 lean_s58
let lean_s60 := by timed congr lean_s0 lean_s59
have lean_s61 : let250 := by timed rfl
let lean_s62 := by timed congr lean_s61 lean_r28
let lean_s63 := by timed congr lean_s61 lean_r29
let lean_s64 := by timed congr lean_s63 lean_r104
have lean_s65 : (Eq let154 let231) := by timed congr lean_s62 lean_s64
have lean_s66 : (Eq let79 let231) := by timed Eq.trans lean_r27 lean_s65
let lean_s67 := by timed congr lean_s0 lean_s66
have lean_s68 : let250 := by timed rfl
let lean_s69 := by timed congr lean_s68 lean_r74
let lean_s70 := by timed congr lean_s68 lean_r72
let lean_s71 := by timed congr lean_s70 lean_r70
have lean_s72 : (Eq let244 let229) := by timed congr lean_s69 lean_s71
have lean_s73 : (Eq let74 let229) := by timed Eq.trans lean_r77 lean_s72
let lean_s74 := by timed congr lean_s0 lean_s73
have lean_s75 : let250 := by timed rfl
let lean_s76 := by timed congr lean_s75 lean_r103
let lean_s77 := by timed congr lean_s75 lean_r101
let lean_s78 := by timed congr lean_s77 lean_r99
have lean_s79 : (Eq let249 let225) := by timed congr lean_s76 lean_s78
have lean_s80 : (Eq let69 let225) := by timed Eq.trans lean_r95 lean_s79
let lean_s81 := by timed congr lean_s0 lean_s80
have lean_s82 : let250 := by timed rfl
let lean_s83 := by timed congr lean_s82 lean_r67
let lean_s84 := by timed congr lean_s82 lean_r60
let lean_s85 := by timed congr lean_s84 lean_r76
have lean_s86 : (Eq let247 let221) := by timed congr lean_s83 lean_s85
have lean_s87 : (Eq let64 let221) := by timed Eq.trans lean_r83 lean_s86
let lean_s88 := by timed congr lean_s0 lean_s87
have lean_s89 : let250 := by timed rfl
let lean_s90 := by timed congr lean_s89 lean_r97
let lean_s91 := by timed congr lean_s89 lean_r96
let lean_s92 := by timed congr lean_s91 lean_r93
have lean_s93 : (Eq let248 let218) := by timed congr lean_s90 lean_s92
have lean_s94 : (Eq let59 let218) := by timed Eq.trans lean_r90 lean_s93
let lean_s95 := by timed congr lean_s0 lean_s94
have lean_s96 : let250 := by timed rfl
let lean_s97 := by timed congr lean_s96 lean_r84
let lean_s98 := by timed congr lean_s96 lean_r69
let lean_s99 := by timed congr lean_s98 lean_r81
have lean_s100 : (Eq let181 let214) := by timed congr lean_s97 lean_s99
have lean_s101 : (Eq let54 let214) := by timed Eq.trans lean_r55 lean_s100
let lean_s102 := by timed congr lean_s0 lean_s101
have lean_s103 : let250 := by timed rfl
let lean_s104 := by timed congr lean_s103 lean_r92
let lean_s105 := by timed congr lean_s103 lean_r91
let lean_s106 := by timed congr lean_s105 lean_r89
have lean_s107 : (Eq let160 let210) := by timed congr lean_s104 lean_s106
have lean_s108 : (Eq let49 let210) := by timed Eq.trans lean_r33 lean_s107
let lean_s109 := by timed congr lean_s0 lean_s108
have lean_s110 : let250 := by timed rfl
let lean_s111 := by timed congr lean_s110 lean_r88
let lean_s112 := by timed congr lean_s110 lean_r86
let lean_s113 := by timed congr lean_s112 lean_r79
have lean_s114 : (Eq let179 let206) := by timed congr lean_s111 lean_s113
have lean_s115 : (Eq let44 let206) := by timed Eq.trans lean_r53 lean_s114
let lean_s116 := by timed congr lean_s0 lean_s115
have lean_s117 : let250 := by timed rfl
let lean_s118 := by timed congr lean_s117 lean_r30
let lean_s119 := by timed congr lean_s117 lean_r31
let lean_s120 := by timed congr lean_s119 lean_r32
have lean_s121 : (Eq let184 let202) := by timed congr lean_s118 lean_s120
have lean_s122 : (Eq let39 let202) := by timed Eq.trans lean_r58 lean_s121
let lean_s123 := by timed congr lean_s0 lean_s122
have lean_s124 : let250 := by timed rfl
let lean_s125 := by timed congr lean_s124 lean_r41
let lean_s126 := by timed congr lean_s124 lean_r43
let lean_s127 := by timed congr lean_s126 lean_r45
have lean_s128 : (Eq let162 let201) := by timed congr lean_s125 lean_s127
have lean_s129 : (Eq let34 let201) := by timed Eq.trans lean_r35 lean_s128
let lean_s130 := by timed congr lean_s0 lean_s129
have lean_s131 : let250 := by timed rfl
let lean_s132 := by timed congr lean_s131 lean_r78
let lean_s133 := by timed congr lean_s131 lean_r63
let lean_s134 := by timed congr lean_s133 lean_r57
have lean_s135 : (Eq let243 let200) := by timed congr lean_s132 lean_s134
have lean_s136 : (Eq let29 let200) := by timed Eq.trans lean_r68 lean_s135
let lean_s137 := by timed congr lean_s0 lean_s136
have lean_s138 : let250 := by timed rfl
let lean_s139 := by timed congr lean_s138 lean_r50
let lean_s140 := by timed congr lean_s138 lean_r52
let lean_s141 := by timed congr lean_s140 lean_r37
have lean_s142 : (Eq let173 let198) := by timed congr lean_s139 lean_s141
have lean_s143 : (Eq let24 let198) := by timed Eq.trans lean_r46 lean_s142
let lean_s144 := by timed congr lean_s0 lean_s143
let lean_s145 := by timed congr lean_s0 lean_r54
let lean_s146 := by timed congr lean_s0 lean_r87
let lean_s147 := by timed congr lean_s0 lean_r85
let lean_s148 := by timed congr lean_s0 lean_r80
let lean_s149 := by timed congr lean_s0 lean_r64
let lean_s150 := by timed congr lean_s0 lean_r59
let lean_s151 := by timed congr lean_s0 lean_r75
let lean_s152 := by timed congr lean_s0 lean_r73
let lean_s153 := by timed congr lean_s0 lean_r71
have lean_s154 : (Eq let4 let4) := by timed rfl
have lean_s155 : (Eq let3 let3) := by timed rfl
have lean_s156 : let245 := by timed congrIte lean_s154 lean_s155 lean_r49
let lean_s157 := by timed flipCongrArg lean_s156 [Eq]
have lean_s158 : let166 := by timed rfl
have lean_s159 : (Eq let245 let166) := by timed congr lean_s157 lean_s158
have lean_s160 : (Eq let245 True) := by timed Eq.trans lean_s159 lean_r39
have lean_s161 : (Eq let246 let187) := by timed flipCongrArg lean_s160 [Not]
have lean_s162 : (Eq let246 False) := by timed Eq.trans lean_s161 lean_r61
have lean_s163 : (Eq let8 False) := by timed Eq.trans lean_r82 lean_s162
let lean_s164 := by timed congr lean_s153 lean_s163
let lean_s165 := by timed congr lean_s152 lean_s164
let lean_s166 := by timed congr lean_s151 lean_s165
let lean_s167 := by timed congr lean_s150 lean_s166
let lean_s168 := by timed congr lean_s149 lean_s167
let lean_s169 := by timed congr lean_s148 lean_s168
let lean_s170 := by timed congr lean_s147 lean_s169
let lean_s171 := by timed congr lean_s146 lean_s170
let lean_s172 := by timed congr lean_s145 lean_s171
let lean_s173 := by timed congr lean_s144 lean_s172
let lean_s174 := by timed congr lean_s137 lean_s173
let lean_s175 := by timed congr lean_s130 lean_s174
let lean_s176 := by timed congr lean_s123 lean_s175
let lean_s177 := by timed congr lean_s116 lean_s176
let lean_s178 := by timed congr lean_s109 lean_s177
let lean_s179 := by timed congr lean_s102 lean_s178
let lean_s180 := by timed congr lean_s95 lean_s179
let lean_s181 := by timed congr lean_s88 lean_s180
let lean_s182 := by timed congr lean_s81 lean_s181
let lean_s183 := by timed congr lean_s74 lean_s182
let lean_s184 := by timed congr lean_s67 lean_s183
let lean_s185 := by timed congr lean_s60 lean_s184
let lean_s186 := by timed congr lean_s53 lean_s185
let lean_s187 := by timed congr lean_s46 lean_s186
let lean_s188 := by timed congr lean_s39 lean_s187
let lean_s189 := by timed congr lean_s32 lean_s188
let lean_s190 := by timed congr lean_s25 lean_s189
let lean_s191 := by timed congr lean_s18 lean_s190
let lean_s192 := by timed congr lean_s17 lean_s191
let lean_s193 := by timed congr lean_s16 lean_s192
let lean_s194 := by timed congr lean_s15 lean_s193
let lean_s195 := by timed congr lean_s14 lean_s194
let lean_s196 := by timed congr lean_s13 lean_s195
let lean_s197 := by timed congr lean_s12 lean_s196
let lean_s198 := by timed congr lean_s11 lean_s197
let lean_s199 := by timed congr lean_s10 lean_s198
let lean_s200 := by timed congr lean_s9 lean_s199
let lean_s201 := by timed congr lean_s8 lean_s200
let lean_s202 := by timed congr lean_s7 lean_s201
let lean_s203 := by timed congr lean_s6 lean_s202
let lean_s204 := by timed congr lean_s5 lean_s203
let lean_s205 := by timed congr lean_s4 lean_s204
let lean_s206 := by timed congr lean_s3 lean_s205
let lean_s207 := by timed congr lean_s2 lean_s206
have lean_s208 : (Eq let126 let242) := by timed congr lean_s1 lean_s207
have lean_s209 : (Eq let126 False) := by timed Eq.trans lean_s208 lean_r66
have lean_s210 : (Eq let127 False) := by timed Eq.trans lean_r0 lean_s209
exact (show False from by timed eqResolve lean_a105 lean_s210)


