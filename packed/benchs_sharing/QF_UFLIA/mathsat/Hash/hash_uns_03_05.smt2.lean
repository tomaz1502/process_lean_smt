open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {hashx5f3 : (Int -> Int)}
variable {hashx5f5 : (Int -> Int)}
variable {x1 : Int}
variable {x3 : Int}
variable {hashx5f1 : (Int -> Int)}
variable {hashx5f4 : (Int -> Int)}
variable {hashx5f2 : (Int -> Int)}
variable {x2 : Int}
variable {x3 : Int}
variable {x2 : Int}
variable {hashx5f1 : (Int -> Int)}
variable {hashx5f5 : (Int -> Int)}
variable {hashx5f4 : (Int -> Int)}
variable {hashx5f3 : (Int -> Int)}
variable {x1 : Int}
variable {hashx5f2 : (Int -> Int)}

theorem th0 :
  let let1 := (hashx5f1 x3)
  let let2 := (hashx5f1 x1)
  let let3 := (Not (Eq let2 let1))
  let let4 := (Ne let2 let1)
  let let5 := (hashx5f1 x2)
  let let6 := (Not (Eq let5 let1))
  let let7 := (Ne let5 let1)
  let let8 := (hashx5f2 x2)
  let let9 := (hashx5f2 x1)
  let let10 := (Not (Eq let9 let8))
  let let11 := (Ne let9 let8)
  let let12 := (hashx5f2 x3)
  let let13 := (Not (Eq let9 let12))
  let let14 := (Ne let9 let12)
  let let15 := (Not (Eq let8 let12))
  let let16 := (Ne let8 let12)
  let let17 := (hashx5f4 x3)
  let let18 := (hashx5f4 x1)
  let let19 := (Not (Eq let18 let17))
  let let20 := (Ne let18 let17)
  let let21 := (hashx5f4 x2)
  let let22 := (Not (Eq let21 let17))
  let let23 := (Ne let21 let17)
  let let24 := (hashx5f5 x2)
  let let25 := (hashx5f5 x1)
  let let26 := (Not (Eq let25 let24))
  let let27 := (Ne let25 let24)
  let let28 := (hashx5f5 x3)
  let let29 := (Not (Eq let25 let28))
  let let30 := (Ne let25 let28)
  let let31 := (Not (Eq let24 let28))
  let let32 := (Ne let24 let28)
  let let33 := (Eq let2 x3)
  let let34 := (Eq let2 x2)
  let let35 := (Eq let2 x1)
  let let36 := (Or let35 (Or let34 let33))
  let let37 := (Or (Or let35 let34) let33)
  let let38 := (Eq x1 let2)
  let let39 := (Eq x2 let2)
  let let40 := (Eq x3 let2)
  let let41 := (Eq let5 x3)
  let let42 := (Eq let5 x2)
  let let43 := (Eq let5 x1)
  let let44 := (Or let43 (Or let42 let41))
  let let45 := (Or (Or let43 let42) let41)
  let let46 := (Eq x2 let5)
  let let47 := (Eq x3 let5)
  let let48 := (Eq let1 x3)
  let let49 := (Eq let1 x2)
  let let50 := (Eq let1 x1)
  let let51 := (Or let50 (Or let49 let48))
  let let52 := (Or (Or let50 let49) let48)
  let let53 := (Eq x1 let1)
  let let54 := (Eq x2 let1)
  let let55 := (Eq x3 let1)
  let let56 := (Eq let9 x3)
  let let57 := (Eq let9 x2)
  let let58 := (Eq let9 x1)
  let let59 := (Or let58 (Or let57 let56))
  let let60 := (Or (Or let58 let57) let56)
  let let61 := (Eq x1 let9)
  let let62 := (Eq x2 let9)
  let let63 := (Eq x1 let17)
  let let64 := (Eq let17 x1)
  let let65 := (Eq x2 let17)
  let let66 := (Eq let17 x2)
  let let67 := (Eq x3 let17)
  let let68 := (Eq let17 x3)
  let let69 := (Eq let18 x3)
  let let70 := (Eq let18 x2)
  let let71 := (Eq let18 x1)
  let let72 := (Or let71 (Or let70 let69))
  let let73 := (Or (Or let71 let70) let69)
  let let74 := (Eq let25 x3)
  let let75 := (Eq let25 x2)
  let let76 := (Eq let25 x1)
  let let77 := (Or let76 (Or let75 let74))
  let let78 := (Or (Or let76 let75) let74)
  let let79 := (Eq x3 let28)
  let let80 := (Eq let28 x3)
  let let81 := (binrel% HMul.hMul (Int.ofNat 2) let2)
  let let82 := (Eq let2 let9)
  let let83 := (smtIte let82 let9 let81 Int)
  let let84 := (Eq let83 let83)
  let let85 := (Eq x1 let25)
  let let86 := (Eq x2 let25)
  let let87 := (Eq x3 let25)
  let let88 := (Eq let28 x2)
  let let89 := (Eq let28 x1)
  let let90 := (Or let89 (Or let88 let80))
  let let91 := (Or (Or let89 let88) let80)
  let let92 := (Eq x1 let5)
  let let93 := (binrel% HAdd.hAdd let2 let2)
  let let94 := (Eq x2 let28)
  let let95 := (Eq let21 x3)
  let let96 := (Eq let21 x2)
  let let97 := (Eq let21 x1)
  let let98 := (Or let97 (Or let96 let95))
  let let99 := (Or (Or let97 let96) let95)
  let let100 := (Not (Eq x1 x2))
  let let101 := (Ne x1 x2)
  let let102 := (hashx5f3 x3)
  let let103 := (Eq let102 x3)
  let let104 := (Eq let102 x2)
  let let105 := (Eq let102 x1)
  let let106 := (Or let105 (Or let104 let103))
  let let107 := (Or (Or let105 let104) let103)
  let let108 := (Eq x1 let28)
  let let109 := (Int.ofNat 4)
  let let110 := (Not (binrel% GE.ge x3 let109))
  let let111 := (Int.ofNat 0)
  let let112 := (binrel% GE.ge x3 let111)
  let let113 := (Not (binrel% GE.ge x2 let109))
  let let114 := (binrel% GE.ge x2 let111)
  let let115 := (Not (binrel% GE.ge x1 let109))
  let let116 := (binrel% GE.ge x1 let111)
  let let117 := (Not (Eq x2 x3))
  let let118 := (Not (Eq x1 x3))
  let let119 := (Or let108 (Or let94 let79))
  let let120 := (Eq x3 let24)
  let let121 := (Eq x2 let24)
  let let122 := (Eq x1 let24)
  let let123 := (Or let122 (Or let121 let120))
  let let124 := (Or let85 (Or let86 let87))
  let let125 := (Or let63 (Or let65 let67))
  let let126 := (Eq x3 let21)
  let let127 := (Eq x2 let21)
  let let128 := (Eq x1 let21)
  let let129 := (Or let128 (Or let127 let126))
  let let130 := (Eq x3 let18)
  let let131 := (Eq x2 let18)
  let let132 := (Eq x1 let18)
  let let133 := (Or let132 (Or let131 let130))
  let let134 := (Eq x3 let102)
  let let135 := (Eq x2 let102)
  let let136 := (Eq x1 let102)
  let let137 := (Or let136 (Or let135 let134))
  let let138 := (hashx5f3 x2)
  let let139 := (Eq x3 let138)
  let let140 := (Eq x2 let138)
  let let141 := (Eq x1 let138)
  let let142 := (Or let141 (Or let140 let139))
  let let143 := (hashx5f3 x1)
  let let144 := (Eq x3 let143)
  let let145 := (Eq x2 let143)
  let let146 := (Eq x1 let143)
  let let147 := (Or let146 (Or let145 let144))
  let let148 := (Eq x3 let12)
  let let149 := (Eq x2 let12)
  let let150 := (Eq x1 let12)
  let let151 := (Or let150 (Or let149 let148))
  let let152 := (Eq x3 let8)
  let let153 := (Eq x2 let8)
  let let154 := (Eq x1 let8)
  let let155 := (Or let154 (Or let153 let152))
  let let156 := (Eq x3 let9)
  let let157 := (Or let61 (Or let62 let156))
  let let158 := (Or let53 (Or let54 let55))
  let let159 := (Or let92 (Or let46 let47))
  let let160 := (Or let38 (Or let39 let40))
  let let161 := (Not (Eq let18 let21))
  let let162 := (Not (Eq let138 let102))
  let let163 := (Not (Eq let143 let102))
  let let164 := (Not (Eq let143 let138))
  let let165 := (Not (Eq let2 let5))
  let let166 := (And let165 (And let3 (And let6 (And let10 (And let13 (And let15 (And let164 (And let163 (And let162 (And let161 (And let19 (And let22 (And let26 (And let29 (And let31 (And let160 (And let159 (And let158 (And let157 (And let155 (And let151 (And let147 (And let142 (And let137 (And let133 (And let129 (And let125 (And let124 (And let123 (And let119 (And let100 (And let118 (And let117 (And let116 (And let115 (And let114 (And let113 (And let112 (And let110 False)))))))))))))))))))))))))))))))))))))))
  let let167 := (Not True)
  let let168 := (Eq let24 x2)
  let let169 := (binrel% LT.lt x1 let109)
  let let170 := (Eq let143 x1)
  let let171 := (Eq let24 x3)
  let let172 := (Or let64 (Or let66 let68))
  let let173 := (Or (Or let64 let66) let68)
  let let174 := (binrel% LE.le let111 x2)
  let let175 := (Eq let143 x2)
  let let176 := (Eq let24 x1)
  let let177 := (Or let176 (Or let168 let171))
  let let178 := (Or (Or let176 let168) let171)
  let let179 := (smtIte let82 let9 let93 Int)
  let let180 := (Ne let179 let83)
  let let181 := (binrel% LT.lt x3 let109)
  let let182 := (binrel% LE.le let111 x3)
  let let183 := (binrel% LT.lt x2 let109)
  let let184 := (binrel% LE.le let111 x1)
  let let185 := (Ne x2 x3)
  let let186 := (Ne x1 x3)
  let let187 := (Eq let138 x3)
  let let188 := (Eq let138 x2)
  let let189 := (Eq let138 x1)
  let let190 := (Or (Or let189 let188) let187)
  let let191 := (Eq let143 x3)
  let let192 := (Or (Or let170 let175) let191)
  let let193 := (Eq let12 x3)
  let let194 := (Eq let12 x2)
  let let195 := (Eq let12 x1)
  let let196 := (Or (Or let195 let194) let193)
  let let197 := (Eq let8 x3)
  let let198 := (Eq let8 x2)
  let let199 := (Eq let8 x1)
  let let200 := (Or (Or let199 let198) let197)
  let let201 := (Ne let18 let21)
  let let202 := (Ne let138 let102)
  let let203 := (Ne let143 let102)
  let let204 := (Ne let143 let138)
  let let205 := (Ne let2 let5)
  let let206 := (And let205 (And let4 (And let7 (And let11 (And let14 (And let16 (And let204 (And let203 (And let202 (And let201 (And let20 (And let23 (And let27 (And let30 (And let32 (And let37 (And let45 (And let52 (And let60 (And let200 (And let196 (And let192 (And let190 (And let107 (And let73 (And let99 (And let173 (And let78 (And let178 (And let91 (And let101 (And let186 (And let185 (And let184 (And let169 (And let174 (And let183 (And let182 (And let181 let180)))))))))))))))))))))))))))))))))))))))
  let let207 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let205 let4) let7) let11) let14) let16) let204) let203) let202) let201) let20) let23) let27) let30) let32) let37) let45) let52) let60) let200) let196) let192) let190) let107) let73) let99) let173) let78) let178) let91) let101) let186) let185) let184) let169) let174) let183) let182) let181) let180)
  let let208 := (Or let199 (Or let198 let197))
  let let209 := (Eq let179 let83)
  let let210 := (Not let209)
  let let211 := (Or let170 (Or let175 let191))
  let let212 := (Or let189 (Or let188 let187))
  let let213 := (Or let195 (Or let194 let193))
  let let214 := (Eq Or Or)
(Eq let4 let3) → (Eq let7 let6) → (Eq let11 let10) → (Eq let14 let13) → (Eq let16 let15) → (Eq let20 let19) → (Eq let23 let22) → (Eq let27 let26) → (Eq let30 let29) → (Eq let32 let31) → (Eq let37 let36) → (Eq let35 let38) → (Eq let34 let39) → (Eq let33 let40) → (Eq let45 let44) → (Eq let42 let46) → (Eq let41 let47) → (Eq let52 let51) → (Eq let50 let53) → (Eq let49 let54) → (Eq let48 let55) → (Eq let60 let59) → (Eq let58 let61) → (Eq let57 let62) → (Eq let64 let63) → (Eq let66 let65) → (Eq let68 let67) → (Eq let73 let72) → (Eq let78 let77) → (Eq let80 let79) → (Eq let84 True) → (Eq let76 let85) → (Eq let75 let86) → (Eq let74 let87) → (Eq let91 let90) → (Eq let43 let92) → (Eq let93 let81) → (Eq let88 let94) → (Eq let99 let98) → (Eq let101 let100) → (Eq let107 let106) → (Eq let89 let108) → (Eq let166 False) → (Eq let167 False) → (Eq let168 let121) → (Eq let169 let115) → (Eq let170 let146) → (Eq let171 let120) → (Eq let173 let172) → (Eq let174 let114) → (Eq let175 let145) → (Eq let178 let177) → (Eq let207 let206) → (Eq let104 let135) → (Eq let201 let161) → (Eq let197 let152) → (Eq let181 let110) → (Eq let202 let162) → (Eq let198 let153) → (Eq let182 let112) → (Eq let203 let163) → (Eq let199 let154) → (Eq let183 let113) → (Eq let191 let144) → (Eq let204 let164) → (Eq let200 let208) → (Eq let176 let122) → (Eq let95 let126) → (Eq let184 let116) → (Eq let205 let165) → (Eq let103 let134) → (Eq let180 let210) → (Eq let192 let211) → (Eq let105 let136) → (Eq let185 let117) → (Eq let96 let127) → (Eq let186 let118) → (Eq let97 let128) → (Eq let69 let130) → (Eq let190 let212) → (Eq let70 let131) → (Eq let71 let132) → (Eq let187 let139) → (Eq let196 let213) → (Eq let188 let140) → (Eq let189 let141) → (Eq let193 let148) → (Eq let194 let149) → (Eq let195 let150) → (Eq let56 let156) → let207 → False :=
  let let1 := (hashx5f1 x3)
  let let2 := (hashx5f1 x1)
  let let3 := (Not (Eq let2 let1))
  let let4 := (Ne let2 let1)
  let let5 := (hashx5f1 x2)
  let let6 := (Not (Eq let5 let1))
  let let7 := (Ne let5 let1)
  let let8 := (hashx5f2 x2)
  let let9 := (hashx5f2 x1)
  let let10 := (Not (Eq let9 let8))
  let let11 := (Ne let9 let8)
  let let12 := (hashx5f2 x3)
  let let13 := (Not (Eq let9 let12))
  let let14 := (Ne let9 let12)
  let let15 := (Not (Eq let8 let12))
  let let16 := (Ne let8 let12)
  let let17 := (hashx5f4 x3)
  let let18 := (hashx5f4 x1)
  let let19 := (Not (Eq let18 let17))
  let let20 := (Ne let18 let17)
  let let21 := (hashx5f4 x2)
  let let22 := (Not (Eq let21 let17))
  let let23 := (Ne let21 let17)
  let let24 := (hashx5f5 x2)
  let let25 := (hashx5f5 x1)
  let let26 := (Not (Eq let25 let24))
  let let27 := (Ne let25 let24)
  let let28 := (hashx5f5 x3)
  let let29 := (Not (Eq let25 let28))
  let let30 := (Ne let25 let28)
  let let31 := (Not (Eq let24 let28))
  let let32 := (Ne let24 let28)
  let let33 := (Eq let2 x3)
  let let34 := (Eq let2 x2)
  let let35 := (Eq let2 x1)
  let let36 := (Or let35 (Or let34 let33))
  let let37 := (Or (Or let35 let34) let33)
  let let38 := (Eq x1 let2)
  let let39 := (Eq x2 let2)
  let let40 := (Eq x3 let2)
  let let41 := (Eq let5 x3)
  let let42 := (Eq let5 x2)
  let let43 := (Eq let5 x1)
  let let44 := (Or let43 (Or let42 let41))
  let let45 := (Or (Or let43 let42) let41)
  let let46 := (Eq x2 let5)
  let let47 := (Eq x3 let5)
  let let48 := (Eq let1 x3)
  let let49 := (Eq let1 x2)
  let let50 := (Eq let1 x1)
  let let51 := (Or let50 (Or let49 let48))
  let let52 := (Or (Or let50 let49) let48)
  let let53 := (Eq x1 let1)
  let let54 := (Eq x2 let1)
  let let55 := (Eq x3 let1)
  let let56 := (Eq let9 x3)
  let let57 := (Eq let9 x2)
  let let58 := (Eq let9 x1)
  let let59 := (Or let58 (Or let57 let56))
  let let60 := (Or (Or let58 let57) let56)
  let let61 := (Eq x1 let9)
  let let62 := (Eq x2 let9)
  let let63 := (Eq x1 let17)
  let let64 := (Eq let17 x1)
  let let65 := (Eq x2 let17)
  let let66 := (Eq let17 x2)
  let let67 := (Eq x3 let17)
  let let68 := (Eq let17 x3)
  let let69 := (Eq let18 x3)
  let let70 := (Eq let18 x2)
  let let71 := (Eq let18 x1)
  let let72 := (Or let71 (Or let70 let69))
  let let73 := (Or (Or let71 let70) let69)
  let let74 := (Eq let25 x3)
  let let75 := (Eq let25 x2)
  let let76 := (Eq let25 x1)
  let let77 := (Or let76 (Or let75 let74))
  let let78 := (Or (Or let76 let75) let74)
  let let79 := (Eq x3 let28)
  let let80 := (Eq let28 x3)
  let let81 := (binrel% HMul.hMul (Int.ofNat 2) let2)
  let let82 := (Eq let2 let9)
  let let83 := (smtIte let82 let9 let81 Int)
  let let84 := (Eq let83 let83)
  let let85 := (Eq x1 let25)
  let let86 := (Eq x2 let25)
  let let87 := (Eq x3 let25)
  let let88 := (Eq let28 x2)
  let let89 := (Eq let28 x1)
  let let90 := (Or let89 (Or let88 let80))
  let let91 := (Or (Or let89 let88) let80)
  let let92 := (Eq x1 let5)
  let let93 := (binrel% HAdd.hAdd let2 let2)
  let let94 := (Eq x2 let28)
  let let95 := (Eq let21 x3)
  let let96 := (Eq let21 x2)
  let let97 := (Eq let21 x1)
  let let98 := (Or let97 (Or let96 let95))
  let let99 := (Or (Or let97 let96) let95)
  let let100 := (Not (Eq x1 x2))
  let let101 := (Ne x1 x2)
  let let102 := (hashx5f3 x3)
  let let103 := (Eq let102 x3)
  let let104 := (Eq let102 x2)
  let let105 := (Eq let102 x1)
  let let106 := (Or let105 (Or let104 let103))
  let let107 := (Or (Or let105 let104) let103)
  let let108 := (Eq x1 let28)
  let let109 := (Int.ofNat 4)
  let let110 := (Not (binrel% GE.ge x3 let109))
  let let111 := (Int.ofNat 0)
  let let112 := (binrel% GE.ge x3 let111)
  let let113 := (Not (binrel% GE.ge x2 let109))
  let let114 := (binrel% GE.ge x2 let111)
  let let115 := (Not (binrel% GE.ge x1 let109))
  let let116 := (binrel% GE.ge x1 let111)
  let let117 := (Not (Eq x2 x3))
  let let118 := (Not (Eq x1 x3))
  let let119 := (Or let108 (Or let94 let79))
  let let120 := (Eq x3 let24)
  let let121 := (Eq x2 let24)
  let let122 := (Eq x1 let24)
  let let123 := (Or let122 (Or let121 let120))
  let let124 := (Or let85 (Or let86 let87))
  let let125 := (Or let63 (Or let65 let67))
  let let126 := (Eq x3 let21)
  let let127 := (Eq x2 let21)
  let let128 := (Eq x1 let21)
  let let129 := (Or let128 (Or let127 let126))
  let let130 := (Eq x3 let18)
  let let131 := (Eq x2 let18)
  let let132 := (Eq x1 let18)
  let let133 := (Or let132 (Or let131 let130))
  let let134 := (Eq x3 let102)
  let let135 := (Eq x2 let102)
  let let136 := (Eq x1 let102)
  let let137 := (Or let136 (Or let135 let134))
  let let138 := (hashx5f3 x2)
  let let139 := (Eq x3 let138)
  let let140 := (Eq x2 let138)
  let let141 := (Eq x1 let138)
  let let142 := (Or let141 (Or let140 let139))
  let let143 := (hashx5f3 x1)
  let let144 := (Eq x3 let143)
  let let145 := (Eq x2 let143)
  let let146 := (Eq x1 let143)
  let let147 := (Or let146 (Or let145 let144))
  let let148 := (Eq x3 let12)
  let let149 := (Eq x2 let12)
  let let150 := (Eq x1 let12)
  let let151 := (Or let150 (Or let149 let148))
  let let152 := (Eq x3 let8)
  let let153 := (Eq x2 let8)
  let let154 := (Eq x1 let8)
  let let155 := (Or let154 (Or let153 let152))
  let let156 := (Eq x3 let9)
  let let157 := (Or let61 (Or let62 let156))
  let let158 := (Or let53 (Or let54 let55))
  let let159 := (Or let92 (Or let46 let47))
  let let160 := (Or let38 (Or let39 let40))
  let let161 := (Not (Eq let18 let21))
  let let162 := (Not (Eq let138 let102))
  let let163 := (Not (Eq let143 let102))
  let let164 := (Not (Eq let143 let138))
  let let165 := (Not (Eq let2 let5))
  let let166 := (And let165 (And let3 (And let6 (And let10 (And let13 (And let15 (And let164 (And let163 (And let162 (And let161 (And let19 (And let22 (And let26 (And let29 (And let31 (And let160 (And let159 (And let158 (And let157 (And let155 (And let151 (And let147 (And let142 (And let137 (And let133 (And let129 (And let125 (And let124 (And let123 (And let119 (And let100 (And let118 (And let117 (And let116 (And let115 (And let114 (And let113 (And let112 (And let110 False)))))))))))))))))))))))))))))))))))))))
  let let167 := (Not True)
  let let168 := (Eq let24 x2)
  let let169 := (binrel% LT.lt x1 let109)
  let let170 := (Eq let143 x1)
  let let171 := (Eq let24 x3)
  let let172 := (Or let64 (Or let66 let68))
  let let173 := (Or (Or let64 let66) let68)
  let let174 := (binrel% LE.le let111 x2)
  let let175 := (Eq let143 x2)
  let let176 := (Eq let24 x1)
  let let177 := (Or let176 (Or let168 let171))
  let let178 := (Or (Or let176 let168) let171)
  let let179 := (smtIte let82 let9 let93 Int)
  let let180 := (Ne let179 let83)
  let let181 := (binrel% LT.lt x3 let109)
  let let182 := (binrel% LE.le let111 x3)
  let let183 := (binrel% LT.lt x2 let109)
  let let184 := (binrel% LE.le let111 x1)
  let let185 := (Ne x2 x3)
  let let186 := (Ne x1 x3)
  let let187 := (Eq let138 x3)
  let let188 := (Eq let138 x2)
  let let189 := (Eq let138 x1)
  let let190 := (Or (Or let189 let188) let187)
  let let191 := (Eq let143 x3)
  let let192 := (Or (Or let170 let175) let191)
  let let193 := (Eq let12 x3)
  let let194 := (Eq let12 x2)
  let let195 := (Eq let12 x1)
  let let196 := (Or (Or let195 let194) let193)
  let let197 := (Eq let8 x3)
  let let198 := (Eq let8 x2)
  let let199 := (Eq let8 x1)
  let let200 := (Or (Or let199 let198) let197)
  let let201 := (Ne let18 let21)
  let let202 := (Ne let138 let102)
  let let203 := (Ne let143 let102)
  let let204 := (Ne let143 let138)
  let let205 := (Ne let2 let5)
  let let206 := (And let205 (And let4 (And let7 (And let11 (And let14 (And let16 (And let204 (And let203 (And let202 (And let201 (And let20 (And let23 (And let27 (And let30 (And let32 (And let37 (And let45 (And let52 (And let60 (And let200 (And let196 (And let192 (And let190 (And let107 (And let73 (And let99 (And let173 (And let78 (And let178 (And let91 (And let101 (And let186 (And let185 (And let184 (And let169 (And let174 (And let183 (And let182 (And let181 let180)))))))))))))))))))))))))))))))))))))))
  let let207 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let205 let4) let7) let11) let14) let16) let204) let203) let202) let201) let20) let23) let27) let30) let32) let37) let45) let52) let60) let200) let196) let192) let190) let107) let73) let99) let173) let78) let178) let91) let101) let186) let185) let184) let169) let174) let183) let182) let181) let180)
  let let208 := (Or let199 (Or let198 let197))
  let let209 := (Eq let179 let83)
  let let210 := (Not let209)
  let let211 := (Or let170 (Or let175 let191))
  let let212 := (Or let189 (Or let188 let187))
  let let213 := (Or let195 (Or let194 let193))
  let let214 := (Eq Or Or)
fun lean_r0 : (Eq let4 let3) => -- THEORY_REWRITE_BUILTIN
fun lean_r1 : (Eq let7 let6) => -- THEORY_REWRITE_BUILTIN
fun lean_r2 : (Eq let11 let10) => -- THEORY_REWRITE_BUILTIN
fun lean_r3 : (Eq let14 let13) => -- THEORY_REWRITE_BUILTIN
fun lean_r4 : (Eq let16 let15) => -- THEORY_REWRITE_BUILTIN
fun lean_r5 : (Eq let20 let19) => -- THEORY_REWRITE_BUILTIN
fun lean_r6 : (Eq let23 let22) => -- THEORY_REWRITE_BUILTIN
fun lean_r7 : (Eq let27 let26) => -- THEORY_REWRITE_BUILTIN
fun lean_r8 : (Eq let30 let29) => -- THEORY_REWRITE_BUILTIN
fun lean_r9 : (Eq let32 let31) => -- THEORY_REWRITE_BUILTIN
fun lean_r10 : (Eq let37 let36) => -- THEORY_REWRITE_BOOL
fun lean_r11 : (Eq let35 let38) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let34 let39) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let33 let40) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let45 let44) => -- THEORY_REWRITE_BOOL
fun lean_r15 : (Eq let42 let46) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let41 let47) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let52 let51) => -- THEORY_REWRITE_BOOL
fun lean_r18 : (Eq let50 let53) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let49 let54) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let48 let55) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let60 let59) => -- THEORY_REWRITE_BOOL
fun lean_r22 : (Eq let58 let61) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let57 let62) => -- THEORY_REWRITE_ARITH
fun lean_r24 : (Eq let64 let63) => -- THEORY_REWRITE_ARITH
fun lean_r25 : (Eq let66 let65) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let68 let67) => -- THEORY_REWRITE_ARITH
fun lean_r27 : (Eq let73 let72) => -- THEORY_REWRITE_BOOL
fun lean_r28 : (Eq let78 let77) => -- THEORY_REWRITE_BOOL
fun lean_r29 : (Eq let80 let79) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let84 True) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let76 let85) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let75 let86) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let74 let87) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let91 let90) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let43 let92) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let93 let81) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let88 let94) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let99 let98) => -- THEORY_REWRITE_BOOL
fun lean_r39 : (Eq let101 let100) => -- THEORY_REWRITE_BUILTIN
fun lean_r40 : (Eq let107 let106) => -- THEORY_REWRITE_BOOL
fun lean_r41 : (Eq let89 let108) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let166 False) => -- THEORY_REWRITE_BOOL
fun lean_r43 : (Eq let167 False) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let168 let121) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let169 let115) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let170 let146) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let171 let120) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let173 let172) => -- THEORY_REWRITE_BOOL
fun lean_r49 : (Eq let174 let114) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let175 let145) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let178 let177) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let207 let206) => -- THEORY_REWRITE_BOOL
fun lean_r53 : (Eq let104 let135) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let201 let161) => -- THEORY_REWRITE_BUILTIN
fun lean_r55 : (Eq let197 let152) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let181 let110) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let202 let162) => -- THEORY_REWRITE_BUILTIN
fun lean_r58 : (Eq let198 let153) => -- THEORY_REWRITE_ARITH
fun lean_r59 : (Eq let182 let112) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let203 let163) => -- THEORY_REWRITE_BUILTIN
fun lean_r61 : (Eq let199 let154) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let183 let113) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let191 let144) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let204 let164) => -- THEORY_REWRITE_BUILTIN
fun lean_r65 : (Eq let200 let208) => -- THEORY_REWRITE_BOOL
fun lean_r66 : (Eq let176 let122) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let95 let126) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let184 let116) => -- THEORY_REWRITE_ARITH
fun lean_r69 : (Eq let205 let165) => -- THEORY_REWRITE_BUILTIN
fun lean_r70 : (Eq let103 let134) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let180 let210) => -- THEORY_REWRITE_BUILTIN
fun lean_r72 : (Eq let192 let211) => -- THEORY_REWRITE_BOOL
fun lean_r73 : (Eq let105 let136) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let185 let117) => -- THEORY_REWRITE_BUILTIN
fun lean_r75 : (Eq let96 let127) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let186 let118) => -- THEORY_REWRITE_BUILTIN
fun lean_r77 : (Eq let97 let128) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let69 let130) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let190 let212) => -- THEORY_REWRITE_BOOL
fun lean_r80 : (Eq let70 let131) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let71 let132) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let187 let139) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let196 let213) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq let188 let140) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let189 let141) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let193 let148) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let194 let149) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let195 let150) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let56 let156) => -- THEORY_REWRITE_ARITH
fun lean_a90 : let207 => by
have lean_s0 : (Eq And And) := by timed rfl
let lean_s1 := by timed congr lean_s0 lean_r69
let lean_s2 := by timed congr lean_s0 lean_r0
let lean_s3 := by timed congr lean_s0 lean_r1
let lean_s4 := by timed congr lean_s0 lean_r2
let lean_s5 := by timed congr lean_s0 lean_r3
let lean_s6 := by timed congr lean_s0 lean_r4
let lean_s7 := by timed congr lean_s0 lean_r64
let lean_s8 := by timed congr lean_s0 lean_r60
let lean_s9 := by timed congr lean_s0 lean_r57
let lean_s10 := by timed congr lean_s0 lean_r54
let lean_s11 := by timed congr lean_s0 lean_r5
let lean_s12 := by timed congr lean_s0 lean_r6
let lean_s13 := by timed congr lean_s0 lean_r7
let lean_s14 := by timed congr lean_s0 lean_r8
let lean_s15 := by timed congr lean_s0 lean_r9
have lean_s16 : let214 := by timed rfl
let lean_s17 := by timed congr lean_s16 lean_r11
let lean_s18 := by timed congr lean_s16 lean_r12
let lean_s19 := by timed congr lean_s18 lean_r13
have lean_s20 : (Eq let36 let160) := by timed congr lean_s17 lean_s19
have lean_s21 : (Eq let37 let160) := by timed Eq.trans lean_r10 lean_s20
let lean_s22 := by timed congr lean_s0 lean_s21
have lean_s23 : let214 := by timed rfl
let lean_s24 := by timed congr lean_s23 lean_r35
let lean_s25 := by timed congr lean_s23 lean_r15
let lean_s26 := by timed congr lean_s25 lean_r16
have lean_s27 : (Eq let44 let159) := by timed congr lean_s24 lean_s26
have lean_s28 : (Eq let45 let159) := by timed Eq.trans lean_r14 lean_s27
let lean_s29 := by timed congr lean_s0 lean_s28
have lean_s30 : let214 := by timed rfl
let lean_s31 := by timed congr lean_s30 lean_r18
let lean_s32 := by timed congr lean_s30 lean_r19
let lean_s33 := by timed congr lean_s32 lean_r20
have lean_s34 : (Eq let51 let158) := by timed congr lean_s31 lean_s33
have lean_s35 : (Eq let52 let158) := by timed Eq.trans lean_r17 lean_s34
let lean_s36 := by timed congr lean_s0 lean_s35
have lean_s37 : let214 := by timed rfl
let lean_s38 := by timed congr lean_s37 lean_r22
let lean_s39 := by timed congr lean_s37 lean_r23
let lean_s40 := by timed congr lean_s39 lean_r89
have lean_s41 : (Eq let59 let157) := by timed congr lean_s38 lean_s40
have lean_s42 : (Eq let60 let157) := by timed Eq.trans lean_r21 lean_s41
let lean_s43 := by timed congr lean_s0 lean_s42
have lean_s44 : let214 := by timed rfl
let lean_s45 := by timed congr lean_s44 lean_r61
let lean_s46 := by timed congr lean_s44 lean_r58
let lean_s47 := by timed congr lean_s46 lean_r55
have lean_s48 : (Eq let208 let155) := by timed congr lean_s45 lean_s47
have lean_s49 : (Eq let200 let155) := by timed Eq.trans lean_r65 lean_s48
let lean_s50 := by timed congr lean_s0 lean_s49
have lean_s51 : let214 := by timed rfl
let lean_s52 := by timed congr lean_s51 lean_r88
let lean_s53 := by timed congr lean_s51 lean_r87
let lean_s54 := by timed congr lean_s53 lean_r86
have lean_s55 : (Eq let213 let151) := by timed congr lean_s52 lean_s54
have lean_s56 : (Eq let196 let151) := by timed Eq.trans lean_r83 lean_s55
let lean_s57 := by timed congr lean_s0 lean_s56
have lean_s58 : let214 := by timed rfl
let lean_s59 := by timed congr lean_s58 lean_r46
let lean_s60 := by timed congr lean_s58 lean_r50
let lean_s61 := by timed congr lean_s60 lean_r63
have lean_s62 : (Eq let211 let147) := by timed congr lean_s59 lean_s61
have lean_s63 : (Eq let192 let147) := by timed Eq.trans lean_r72 lean_s62
let lean_s64 := by timed congr lean_s0 lean_s63
have lean_s65 : let214 := by timed rfl
let lean_s66 := by timed congr lean_s65 lean_r85
let lean_s67 := by timed congr lean_s65 lean_r84
let lean_s68 := by timed congr lean_s67 lean_r82
have lean_s69 : (Eq let212 let142) := by timed congr lean_s66 lean_s68
have lean_s70 : (Eq let190 let142) := by timed Eq.trans lean_r79 lean_s69
let lean_s71 := by timed congr lean_s0 lean_s70
have lean_s72 : let214 := by timed rfl
let lean_s73 := by timed congr lean_s72 lean_r73
let lean_s74 := by timed congr lean_s72 lean_r53
let lean_s75 := by timed congr lean_s74 lean_r70
have lean_s76 : (Eq let106 let137) := by timed congr lean_s73 lean_s75
have lean_s77 : (Eq let107 let137) := by timed Eq.trans lean_r40 lean_s76
let lean_s78 := by timed congr lean_s0 lean_s77
have lean_s79 : let214 := by timed rfl
let lean_s80 := by timed congr lean_s79 lean_r81
let lean_s81 := by timed congr lean_s79 lean_r80
let lean_s82 := by timed congr lean_s81 lean_r78
have lean_s83 : (Eq let72 let133) := by timed congr lean_s80 lean_s82
have lean_s84 : (Eq let73 let133) := by timed Eq.trans lean_r27 lean_s83
let lean_s85 := by timed congr lean_s0 lean_s84
have lean_s86 : let214 := by timed rfl
let lean_s87 := by timed congr lean_s86 lean_r77
let lean_s88 := by timed congr lean_s86 lean_r75
let lean_s89 := by timed congr lean_s88 lean_r67
have lean_s90 : (Eq let98 let129) := by timed congr lean_s87 lean_s89
have lean_s91 : (Eq let99 let129) := by timed Eq.trans lean_r38 lean_s90
let lean_s92 := by timed congr lean_s0 lean_s91
have lean_s93 : let214 := by timed rfl
let lean_s94 := by timed congr lean_s93 lean_r24
let lean_s95 := by timed congr lean_s93 lean_r25
let lean_s96 := by timed congr lean_s95 lean_r26
have lean_s97 : (Eq let172 let125) := by timed congr lean_s94 lean_s96
have lean_s98 : (Eq let173 let125) := by timed Eq.trans lean_r48 lean_s97
let lean_s99 := by timed congr lean_s0 lean_s98
have lean_s100 : let214 := by timed rfl
let lean_s101 := by timed congr lean_s100 lean_r31
let lean_s102 := by timed congr lean_s100 lean_r32
let lean_s103 := by timed congr lean_s102 lean_r33
have lean_s104 : (Eq let77 let124) := by timed congr lean_s101 lean_s103
have lean_s105 : (Eq let78 let124) := by timed Eq.trans lean_r28 lean_s104
let lean_s106 := by timed congr lean_s0 lean_s105
have lean_s107 : let214 := by timed rfl
let lean_s108 := by timed congr lean_s107 lean_r66
let lean_s109 := by timed congr lean_s107 lean_r44
let lean_s110 := by timed congr lean_s109 lean_r47
have lean_s111 : (Eq let177 let123) := by timed congr lean_s108 lean_s110
have lean_s112 : (Eq let178 let123) := by timed Eq.trans lean_r51 lean_s111
let lean_s113 := by timed congr lean_s0 lean_s112
have lean_s114 : let214 := by timed rfl
let lean_s115 := by timed congr lean_s114 lean_r41
let lean_s116 := by timed congr lean_s114 lean_r37
let lean_s117 := by timed congr lean_s116 lean_r29
have lean_s118 : (Eq let90 let119) := by timed congr lean_s115 lean_s117
have lean_s119 : (Eq let91 let119) := by timed Eq.trans lean_r34 lean_s118
let lean_s120 := by timed congr lean_s0 lean_s119
let lean_s121 := by timed congr lean_s0 lean_r39
let lean_s122 := by timed congr lean_s0 lean_r76
let lean_s123 := by timed congr lean_s0 lean_r74
let lean_s124 := by timed congr lean_s0 lean_r68
let lean_s125 := by timed congr lean_s0 lean_r45
let lean_s126 := by timed congr lean_s0 lean_r49
let lean_s127 := by timed congr lean_s0 lean_r62
let lean_s128 := by timed congr lean_s0 lean_r59
let lean_s129 := by timed congr lean_s0 lean_r56
have lean_s130 : (Eq let82 let82) := by timed rfl
have lean_s131 : (Eq let9 let9) := by timed rfl
have lean_s132 : let209 := by timed congrIte lean_s130 lean_s131 lean_r36
let lean_s133 := by timed flipCongrArg lean_s132 [Eq]
have lean_s134 : let84 := by timed rfl
have lean_s135 : (Eq let209 let84) := by timed congr lean_s133 lean_s134
have lean_s136 : (Eq let209 True) := by timed Eq.trans lean_s135 lean_r30
have lean_s137 : (Eq let210 let167) := by timed flipCongrArg lean_s136 [Not]
have lean_s138 : (Eq let210 False) := by timed Eq.trans lean_s137 lean_r43
have lean_s139 : (Eq let180 False) := by timed Eq.trans lean_r71 lean_s138
let lean_s140 := by timed congr lean_s129 lean_s139
let lean_s141 := by timed congr lean_s128 lean_s140
let lean_s142 := by timed congr lean_s127 lean_s141
let lean_s143 := by timed congr lean_s126 lean_s142
let lean_s144 := by timed congr lean_s125 lean_s143
let lean_s145 := by timed congr lean_s124 lean_s144
let lean_s146 := by timed congr lean_s123 lean_s145
let lean_s147 := by timed congr lean_s122 lean_s146
let lean_s148 := by timed congr lean_s121 lean_s147
let lean_s149 := by timed congr lean_s120 lean_s148
let lean_s150 := by timed congr lean_s113 lean_s149
let lean_s151 := by timed congr lean_s106 lean_s150
let lean_s152 := by timed congr lean_s99 lean_s151
let lean_s153 := by timed congr lean_s92 lean_s152
let lean_s154 := by timed congr lean_s85 lean_s153
let lean_s155 := by timed congr lean_s78 lean_s154
let lean_s156 := by timed congr lean_s71 lean_s155
let lean_s157 := by timed congr lean_s64 lean_s156
let lean_s158 := by timed congr lean_s57 lean_s157
let lean_s159 := by timed congr lean_s50 lean_s158
let lean_s160 := by timed congr lean_s43 lean_s159
let lean_s161 := by timed congr lean_s36 lean_s160
let lean_s162 := by timed congr lean_s29 lean_s161
let lean_s163 := by timed congr lean_s22 lean_s162
let lean_s164 := by timed congr lean_s15 lean_s163
let lean_s165 := by timed congr lean_s14 lean_s164
let lean_s166 := by timed congr lean_s13 lean_s165
let lean_s167 := by timed congr lean_s12 lean_s166
let lean_s168 := by timed congr lean_s11 lean_s167
let lean_s169 := by timed congr lean_s10 lean_s168
let lean_s170 := by timed congr lean_s9 lean_s169
let lean_s171 := by timed congr lean_s8 lean_s170
let lean_s172 := by timed congr lean_s7 lean_s171
let lean_s173 := by timed congr lean_s6 lean_s172
let lean_s174 := by timed congr lean_s5 lean_s173
let lean_s175 := by timed congr lean_s4 lean_s174
let lean_s176 := by timed congr lean_s3 lean_s175
let lean_s177 := by timed congr lean_s2 lean_s176
have lean_s178 : (Eq let206 let166) := by timed congr lean_s1 lean_s177
have lean_s179 : (Eq let206 False) := by timed Eq.trans lean_s178 lean_r42
have lean_s180 : (Eq let207 False) := by timed Eq.trans lean_r52 lean_s179
exact (show False from by timed eqResolve lean_a90 lean_s180)


