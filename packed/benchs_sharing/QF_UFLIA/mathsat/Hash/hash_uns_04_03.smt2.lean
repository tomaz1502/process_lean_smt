open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {x1 : Int}
variable {hashx5f1 : (Int -> Int)}
variable {x1 : Int}
variable {x4 : Int}
variable {hashx5f2 : (Int -> Int)}
variable {hashx5f1 : (Int -> Int)}
variable {x4 : Int}
variable {x3 : Int}
variable {hashx5f3 : (Int -> Int)}
variable {x2 : Int}
variable {hashx5f3 : (Int -> Int)}
variable {hashx5f2 : (Int -> Int)}
variable {x3 : Int}
variable {x2 : Int}

theorem th0 :
  let let1 := (hashx5f1 x4)
  let let2 := (hashx5f1 x2)
  let let3 := (Not (Eq let2 let1))
  let let4 := (Ne let2 let1)
  let let5 := (hashx5f2 x2)
  let let6 := (hashx5f2 x1)
  let let7 := (Not (Eq let6 let5))
  let let8 := (Ne let6 let5)
  let let9 := (hashx5f2 x3)
  let let10 := (Not (Eq let6 let9))
  let let11 := (Ne let6 let9)
  let let12 := (Not (Eq let5 let9))
  let let13 := (Ne let5 let9)
  let let14 := (hashx5f2 x4)
  let let15 := (Not (Eq let5 let14))
  let let16 := (Ne let5 let14)
  let let17 := (Not (Eq let9 let14))
  let let18 := (Ne let9 let14)
  let let19 := (hashx5f3 x2)
  let let20 := (hashx5f3 x1)
  let let21 := (Not (Eq let20 let19))
  let let22 := (Ne let20 let19)
  let let23 := (hashx5f3 x3)
  let let24 := (Not (Eq let20 let23))
  let let25 := (Ne let20 let23)
  let let26 := (hashx5f3 x4)
  let let27 := (Not (Eq let20 let26))
  let let28 := (Ne let20 let26)
  let let29 := (hashx5f1 x1)
  let let30 := (Eq x2 let29)
  let let31 := (Eq let29 x2)
  let let32 := (Eq x3 let29)
  let let33 := (Eq let29 x3)
  let let34 := (Eq x4 let29)
  let let35 := (Eq let29 x4)
  let let36 := (hashx5f1 x3)
  let let37 := (Not (Eq let29 let36))
  let let38 := (Ne let29 let36)
  let let39 := (Eq x2 let36)
  let let40 := (Eq let36 x2)
  let let41 := (Not (Eq let29 let1))
  let let42 := (Ne let29 let1)
  let let43 := (Eq x3 let36)
  let let44 := (Eq let36 x3)
  let let45 := (Not (Eq let2 let36))
  let let46 := (Ne let2 let36)
  let let47 := (Eq x4 let36)
  let let48 := (Eq let36 x4)
  let let49 := (Eq x2 let1)
  let let50 := (Eq let1 x2)
  let let51 := (Eq x3 let1)
  let let52 := (Eq let1 x3)
  let let53 := (Eq x4 let1)
  let let54 := (Eq let1 x4)
  let let55 := (Eq x2 let2)
  let let56 := (Eq let2 x2)
  let let57 := (Not (Eq x1 x2))
  let let58 := (Ne x1 x2)
  let let59 := (Not (Eq let19 let23))
  let let60 := (Ne let19 let23)
  let let61 := (Eq let14 x4)
  let let62 := (Eq let14 x3)
  let let63 := (Eq let14 x2)
  let let64 := (Eq let14 x1)
  let let65 := (Or let64 (Or let63 (Or let62 let61)))
  let let66 := (Or (Or (Or let64 let63) let62) let61)
  let let67 := (Eq x3 let2)
  let let68 := (Eq let2 x3)
  let let69 := (Not (Eq x1 x3))
  let let70 := (Ne x1 x3)
  let let71 := (Not (Eq let19 let26))
  let let72 := (Ne let19 let26)
  let let73 := (Eq x1 let14)
  let let74 := (Eq x4 let2)
  let let75 := (Eq let2 x4)
  let let76 := (Not (Eq x1 x4))
  let let77 := (Ne x1 x4)
  let let78 := (Not (Eq let23 let26))
  let let79 := (Ne let23 let26)
  let let80 := (Eq x2 let14)
  let let81 := (Not (Eq x2 x3))
  let let82 := (Ne x2 x3)
  let let83 := (Eq let29 x1)
  let let84 := (Or let83 (Or let31 (Or let33 let35)))
  let let85 := (Or (Or (Or let83 let31) let33) let35)
  let let86 := (Eq x3 let14)
  let let87 := (Not (Eq x2 x4))
  let let88 := (Ne x2 x4)
  let let89 := (Eq x1 let29)
  let let90 := (Eq x4 let14)
  let let91 := (Eq let23 x4)
  let let92 := (Eq let23 x3)
  let let93 := (Eq let23 x2)
  let let94 := (Eq let23 x1)
  let let95 := (Or let94 (Or let93 (Or let92 let91)))
  let let96 := (Or (Or (Or let94 let93) let92) let91)
  let let97 := (Not (Eq x3 x4))
  let let98 := (Ne x3 x4)
  let let99 := (Eq let1 x1)
  let let100 := (Or let99 (Or let50 (Or let52 let54)))
  let let101 := (Or (Or (Or let99 let50) let52) let54)
  let let102 := (Eq x3 let23)
  let let103 := (Eq x1 let26)
  let let104 := (Eq let26 x1)
  let let105 := (Eq x4 let6)
  let let106 := (Eq let6 x4)
  let let107 := (Int.ofNat 0)
  let let108 := (binrel% GE.ge x2 let107)
  let let109 := (binrel% LE.le let107 x2)
  let let110 := (Not True)
  let let111 := (Eq x1 let1)
  let let112 := (Eq x4 let23)
  let let113 := (Eq x2 let26)
  let let114 := (Eq let26 x2)
  let let115 := (Int.ofNat 5)
  let let116 := (Not (binrel% GE.ge x1 let115))
  let let117 := (binrel% LT.lt x1 let115)
  let let118 := (Not (binrel% GE.ge x2 let115))
  let let119 := (binrel% LT.lt x2 let115)
  let let120 := (Eq x1 let9)
  let let121 := (Eq let9 x1)
  let let122 := (Not (Eq let6 let14))
  let let123 := (Ne let6 let14)
  let let124 := (binrel% HMul.hMul (Int.ofNat 2) let29)
  let let125 := (Eq let29 let6)
  let let126 := (smtIte let125 let6 let124 Int)
  let let127 := (Eq let126 let126)
  let let128 := (binrel% GE.ge x3 let107)
  let let129 := (binrel% LE.le let107 x3)
  let let130 := (Eq x2 let9)
  let let131 := (Eq let9 x2)
  let let132 := (Eq x2 let23)
  let let133 := (Eq let26 x4)
  let let134 := (Eq let26 x3)
  let let135 := (Or let104 (Or let114 (Or let134 let133)))
  let let136 := (Or (Or (Or let104 let114) let134) let133)
  let let137 := (Eq x3 let6)
  let let138 := (Eq let6 x3)
  let let139 := (Eq let9 x4)
  let let140 := (Eq let9 x3)
  let let141 := (Or let121 (Or let131 (Or let140 let139)))
  let let142 := (Or (Or (Or let121 let131) let140) let139)
  let let143 := (binrel% HAdd.hAdd let29 let29)
  let let144 := (smtIte let125 let6 let143 Int)
  let let145 := (Eq let144 let126)
  let let146 := (Not let145)
  let let147 := (Ne let144 let126)
  let let148 := (Not (binrel% GE.ge x4 let115))
  let let149 := (binrel% LT.lt x4 let115)
  let let150 := (binrel% GE.ge x4 let107)
  let let151 := (binrel% LE.le let107 x4)
  let let152 := (Eq x4 let9)
  let let153 := (Not (binrel% GE.ge x3 let115))
  let let154 := (binrel% LT.lt x3 let115)
  let let155 := (Eq x3 let9)
  let let156 := (Eq x1 let23)
  let let157 := (Not (Eq let36 let1))
  let let158 := (Ne let36 let1)
  let let159 := (Eq x1 let2)
  let let160 := (Eq let2 x1)
  let let161 := (Eq x4 let20)
  let let162 := (Eq let20 x4)
  let let163 := (binrel% GE.ge x1 let107)
  let let164 := (binrel% LE.le let107 x1)
  let let165 := (Not (Eq let29 let2))
  let let166 := (Ne let29 let2)
  let let167 := (Eq x1 let36)
  let let168 := (Eq let36 x1)
  let let169 := (Eq x4 let19)
  let let170 := (Eq let19 x4)
  let let171 := (Eq let19 x3)
  let let172 := (Eq let19 x2)
  let let173 := (Eq let19 x1)
  let let174 := (Or (Or (Or let173 let172) let171) let170)
  let let175 := (Eq let20 x3)
  let let176 := (Eq let20 x2)
  let let177 := (Eq let20 x1)
  let let178 := (Or (Or (Or let177 let176) let175) let162)
  let let179 := (Eq let5 x4)
  let let180 := (Eq let5 x3)
  let let181 := (Eq let5 x2)
  let let182 := (Eq let5 x1)
  let let183 := (Or (Or (Or let182 let181) let180) let179)
  let let184 := (Eq let6 x2)
  let let185 := (Eq let6 x1)
  let let186 := (Or (Or (Or let185 let184) let138) let106)
  let let187 := (Or (Or (Or let168 let40) let44) let48)
  let let188 := (Or (Or (Or let160 let56) let68) let75)
  let let189 := (And let166 (And let38 (And let42 (And let46 (And let4 (And let158 (And let8 (And let11 (And let123 (And let13 (And let16 (And let18 (And let22 (And let25 (And let28 (And let60 (And let72 (And let79 (And let85 (And let188 (And let187 (And let101 (And let186 (And let183 (And let142 (And let66 (And let178 (And let174 (And let96 (And let136 (And let58 (And let70 (And let77 (And let82 (And let88 (And let98 (And let164 (And let117 (And let109 (And let119 (And let129 (And let154 (And let151 (And let149 let147))))))))))))))))))))))))))))))))))))))))))))
  let let190 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let166 let38) let42) let46) let4) let158) let8) let11) let123) let13) let16) let18) let22) let25) let28) let60) let72) let79) let85) let188) let187) let101) let186) let183) let142) let66) let178) let174) let96) let136) let58) let70) let77) let82) let88) let98) let164) let117) let109) let119) let129) let154) let151) let149) let147)
  let let191 := (Or let168 (Or let40 (Or let44 let48)))
  let let192 := (Eq x3 let19)
  let let193 := (Eq x2 let19)
  let let194 := (Eq x1 let19)
  let let195 := (Or let173 (Or let172 (Or let171 let170)))
  let let196 := (Or let160 (Or let56 (Or let68 let75)))
  let let197 := (Eq x4 let26)
  let let198 := (Eq x3 let26)
  let let199 := (Or let103 (Or let113 (Or let198 let197)))
  let let200 := (Or let156 (Or let132 (Or let102 let112)))
  let let201 := (Or let194 (Or let193 (Or let192 let169)))
  let let202 := (Eq x3 let20)
  let let203 := (Eq x2 let20)
  let let204 := (Eq x1 let20)
  let let205 := (Or let204 (Or let203 (Or let202 let161)))
  let let206 := (Or let73 (Or let80 (Or let86 let90)))
  let let207 := (Or let120 (Or let130 (Or let155 let152)))
  let let208 := (Eq x4 let5)
  let let209 := (Eq x3 let5)
  let let210 := (Eq x2 let5)
  let let211 := (Eq x1 let5)
  let let212 := (Or let211 (Or let210 (Or let209 let208)))
  let let213 := (Eq x2 let6)
  let let214 := (Eq x1 let6)
  let let215 := (Or let214 (Or let213 (Or let137 let105)))
  let let216 := (Or let111 (Or let49 (Or let51 let53)))
  let let217 := (Or let167 (Or let39 (Or let43 let47)))
  let let218 := (Or let159 (Or let55 (Or let67 let74)))
  let let219 := (Or let89 (Or let30 (Or let32 let34)))
  let let220 := (And let165 (And let37 (And let41 (And let45 (And let3 (And let157 (And let7 (And let10 (And let122 (And let12 (And let15 (And let17 (And let21 (And let24 (And let27 (And let59 (And let71 (And let78 (And let219 (And let218 (And let217 (And let216 (And let215 (And let212 (And let207 (And let206 (And let205 (And let201 (And let200 (And let199 (And let57 (And let69 (And let76 (And let81 (And let87 (And let97 (And let163 (And let116 (And let108 (And let118 (And let128 (And let153 (And let150 (And let148 False))))))))))))))))))))))))))))))))))))))))))))
  let let221 := (Or let177 (Or let176 (Or let175 let162)))
  let let222 := (Or let182 (Or let181 (Or let180 let179)))
  let let223 := (Or let185 (Or let184 (Or let138 let106)))
  let let224 := (Eq Or Or)
(Eq let4 let3) → (Eq let8 let7) → (Eq let11 let10) → (Eq let13 let12) → (Eq let16 let15) → (Eq let18 let17) → (Eq let22 let21) → (Eq let25 let24) → (Eq let28 let27) → (Eq let31 let30) → (Eq let33 let32) → (Eq let35 let34) → (Eq let38 let37) → (Eq let40 let39) → (Eq let42 let41) → (Eq let44 let43) → (Eq let46 let45) → (Eq let48 let47) → (Eq let50 let49) → (Eq let52 let51) → (Eq let54 let53) → (Eq let56 let55) → (Eq let58 let57) → (Eq let60 let59) → (Eq let66 let65) → (Eq let68 let67) → (Eq let70 let69) → (Eq let72 let71) → (Eq let64 let73) → (Eq let75 let74) → (Eq let77 let76) → (Eq let79 let78) → (Eq let63 let80) → (Eq let82 let81) → (Eq let85 let84) → (Eq let62 let86) → (Eq let88 let87) → (Eq let83 let89) → (Eq let61 let90) → (Eq let96 let95) → (Eq let98 let97) → (Eq let101 let100) → (Eq let92 let102) → (Eq let104 let103) → (Eq let106 let105) → (Eq let109 let108) → (Eq let110 False) → (Eq let99 let111) → (Eq let91 let112) → (Eq let114 let113) → (Eq let117 let116) → (Eq let119 let118) → (Eq let121 let120) → (Eq let123 let122) → (Eq let127 True) → (Eq let129 let128) → (Eq let131 let130) → (Eq let93 let132) → (Eq let136 let135) → (Eq let138 let137) → (Eq let142 let141) → (Eq let147 let146) → (Eq let149 let148) → (Eq let151 let150) → (Eq let139 let152) → (Eq let154 let153) → (Eq let140 let155) → (Eq let94 let156) → (Eq let158 let157) → (Eq let143 let124) → (Eq let160 let159) → (Eq let162 let161) → (Eq let164 let163) → (Eq let166 let165) → (Eq let168 let167) → (Eq let170 let169) → (Eq let190 let189) → (Eq let187 let191) → (Eq let171 let192) → (Eq let172 let193) → (Eq let173 let194) → (Eq let174 let195) → (Eq let188 let196) → (Eq let220 False) → (Eq let175 let202) → (Eq let176 let203) → (Eq let177 let204) → (Eq let178 let221) → (Eq let179 let208) → (Eq let180 let209) → (Eq let181 let210) → (Eq let182 let211) → (Eq let183 let222) → (Eq let184 let213) → (Eq let133 let197) → (Eq let185 let214) → (Eq let134 let198) → (Eq let186 let223) → let190 → False :=
  let let1 := (hashx5f1 x4)
  let let2 := (hashx5f1 x2)
  let let3 := (Not (Eq let2 let1))
  let let4 := (Ne let2 let1)
  let let5 := (hashx5f2 x2)
  let let6 := (hashx5f2 x1)
  let let7 := (Not (Eq let6 let5))
  let let8 := (Ne let6 let5)
  let let9 := (hashx5f2 x3)
  let let10 := (Not (Eq let6 let9))
  let let11 := (Ne let6 let9)
  let let12 := (Not (Eq let5 let9))
  let let13 := (Ne let5 let9)
  let let14 := (hashx5f2 x4)
  let let15 := (Not (Eq let5 let14))
  let let16 := (Ne let5 let14)
  let let17 := (Not (Eq let9 let14))
  let let18 := (Ne let9 let14)
  let let19 := (hashx5f3 x2)
  let let20 := (hashx5f3 x1)
  let let21 := (Not (Eq let20 let19))
  let let22 := (Ne let20 let19)
  let let23 := (hashx5f3 x3)
  let let24 := (Not (Eq let20 let23))
  let let25 := (Ne let20 let23)
  let let26 := (hashx5f3 x4)
  let let27 := (Not (Eq let20 let26))
  let let28 := (Ne let20 let26)
  let let29 := (hashx5f1 x1)
  let let30 := (Eq x2 let29)
  let let31 := (Eq let29 x2)
  let let32 := (Eq x3 let29)
  let let33 := (Eq let29 x3)
  let let34 := (Eq x4 let29)
  let let35 := (Eq let29 x4)
  let let36 := (hashx5f1 x3)
  let let37 := (Not (Eq let29 let36))
  let let38 := (Ne let29 let36)
  let let39 := (Eq x2 let36)
  let let40 := (Eq let36 x2)
  let let41 := (Not (Eq let29 let1))
  let let42 := (Ne let29 let1)
  let let43 := (Eq x3 let36)
  let let44 := (Eq let36 x3)
  let let45 := (Not (Eq let2 let36))
  let let46 := (Ne let2 let36)
  let let47 := (Eq x4 let36)
  let let48 := (Eq let36 x4)
  let let49 := (Eq x2 let1)
  let let50 := (Eq let1 x2)
  let let51 := (Eq x3 let1)
  let let52 := (Eq let1 x3)
  let let53 := (Eq x4 let1)
  let let54 := (Eq let1 x4)
  let let55 := (Eq x2 let2)
  let let56 := (Eq let2 x2)
  let let57 := (Not (Eq x1 x2))
  let let58 := (Ne x1 x2)
  let let59 := (Not (Eq let19 let23))
  let let60 := (Ne let19 let23)
  let let61 := (Eq let14 x4)
  let let62 := (Eq let14 x3)
  let let63 := (Eq let14 x2)
  let let64 := (Eq let14 x1)
  let let65 := (Or let64 (Or let63 (Or let62 let61)))
  let let66 := (Or (Or (Or let64 let63) let62) let61)
  let let67 := (Eq x3 let2)
  let let68 := (Eq let2 x3)
  let let69 := (Not (Eq x1 x3))
  let let70 := (Ne x1 x3)
  let let71 := (Not (Eq let19 let26))
  let let72 := (Ne let19 let26)
  let let73 := (Eq x1 let14)
  let let74 := (Eq x4 let2)
  let let75 := (Eq let2 x4)
  let let76 := (Not (Eq x1 x4))
  let let77 := (Ne x1 x4)
  let let78 := (Not (Eq let23 let26))
  let let79 := (Ne let23 let26)
  let let80 := (Eq x2 let14)
  let let81 := (Not (Eq x2 x3))
  let let82 := (Ne x2 x3)
  let let83 := (Eq let29 x1)
  let let84 := (Or let83 (Or let31 (Or let33 let35)))
  let let85 := (Or (Or (Or let83 let31) let33) let35)
  let let86 := (Eq x3 let14)
  let let87 := (Not (Eq x2 x4))
  let let88 := (Ne x2 x4)
  let let89 := (Eq x1 let29)
  let let90 := (Eq x4 let14)
  let let91 := (Eq let23 x4)
  let let92 := (Eq let23 x3)
  let let93 := (Eq let23 x2)
  let let94 := (Eq let23 x1)
  let let95 := (Or let94 (Or let93 (Or let92 let91)))
  let let96 := (Or (Or (Or let94 let93) let92) let91)
  let let97 := (Not (Eq x3 x4))
  let let98 := (Ne x3 x4)
  let let99 := (Eq let1 x1)
  let let100 := (Or let99 (Or let50 (Or let52 let54)))
  let let101 := (Or (Or (Or let99 let50) let52) let54)
  let let102 := (Eq x3 let23)
  let let103 := (Eq x1 let26)
  let let104 := (Eq let26 x1)
  let let105 := (Eq x4 let6)
  let let106 := (Eq let6 x4)
  let let107 := (Int.ofNat 0)
  let let108 := (binrel% GE.ge x2 let107)
  let let109 := (binrel% LE.le let107 x2)
  let let110 := (Not True)
  let let111 := (Eq x1 let1)
  let let112 := (Eq x4 let23)
  let let113 := (Eq x2 let26)
  let let114 := (Eq let26 x2)
  let let115 := (Int.ofNat 5)
  let let116 := (Not (binrel% GE.ge x1 let115))
  let let117 := (binrel% LT.lt x1 let115)
  let let118 := (Not (binrel% GE.ge x2 let115))
  let let119 := (binrel% LT.lt x2 let115)
  let let120 := (Eq x1 let9)
  let let121 := (Eq let9 x1)
  let let122 := (Not (Eq let6 let14))
  let let123 := (Ne let6 let14)
  let let124 := (binrel% HMul.hMul (Int.ofNat 2) let29)
  let let125 := (Eq let29 let6)
  let let126 := (smtIte let125 let6 let124 Int)
  let let127 := (Eq let126 let126)
  let let128 := (binrel% GE.ge x3 let107)
  let let129 := (binrel% LE.le let107 x3)
  let let130 := (Eq x2 let9)
  let let131 := (Eq let9 x2)
  let let132 := (Eq x2 let23)
  let let133 := (Eq let26 x4)
  let let134 := (Eq let26 x3)
  let let135 := (Or let104 (Or let114 (Or let134 let133)))
  let let136 := (Or (Or (Or let104 let114) let134) let133)
  let let137 := (Eq x3 let6)
  let let138 := (Eq let6 x3)
  let let139 := (Eq let9 x4)
  let let140 := (Eq let9 x3)
  let let141 := (Or let121 (Or let131 (Or let140 let139)))
  let let142 := (Or (Or (Or let121 let131) let140) let139)
  let let143 := (binrel% HAdd.hAdd let29 let29)
  let let144 := (smtIte let125 let6 let143 Int)
  let let145 := (Eq let144 let126)
  let let146 := (Not let145)
  let let147 := (Ne let144 let126)
  let let148 := (Not (binrel% GE.ge x4 let115))
  let let149 := (binrel% LT.lt x4 let115)
  let let150 := (binrel% GE.ge x4 let107)
  let let151 := (binrel% LE.le let107 x4)
  let let152 := (Eq x4 let9)
  let let153 := (Not (binrel% GE.ge x3 let115))
  let let154 := (binrel% LT.lt x3 let115)
  let let155 := (Eq x3 let9)
  let let156 := (Eq x1 let23)
  let let157 := (Not (Eq let36 let1))
  let let158 := (Ne let36 let1)
  let let159 := (Eq x1 let2)
  let let160 := (Eq let2 x1)
  let let161 := (Eq x4 let20)
  let let162 := (Eq let20 x4)
  let let163 := (binrel% GE.ge x1 let107)
  let let164 := (binrel% LE.le let107 x1)
  let let165 := (Not (Eq let29 let2))
  let let166 := (Ne let29 let2)
  let let167 := (Eq x1 let36)
  let let168 := (Eq let36 x1)
  let let169 := (Eq x4 let19)
  let let170 := (Eq let19 x4)
  let let171 := (Eq let19 x3)
  let let172 := (Eq let19 x2)
  let let173 := (Eq let19 x1)
  let let174 := (Or (Or (Or let173 let172) let171) let170)
  let let175 := (Eq let20 x3)
  let let176 := (Eq let20 x2)
  let let177 := (Eq let20 x1)
  let let178 := (Or (Or (Or let177 let176) let175) let162)
  let let179 := (Eq let5 x4)
  let let180 := (Eq let5 x3)
  let let181 := (Eq let5 x2)
  let let182 := (Eq let5 x1)
  let let183 := (Or (Or (Or let182 let181) let180) let179)
  let let184 := (Eq let6 x2)
  let let185 := (Eq let6 x1)
  let let186 := (Or (Or (Or let185 let184) let138) let106)
  let let187 := (Or (Or (Or let168 let40) let44) let48)
  let let188 := (Or (Or (Or let160 let56) let68) let75)
  let let189 := (And let166 (And let38 (And let42 (And let46 (And let4 (And let158 (And let8 (And let11 (And let123 (And let13 (And let16 (And let18 (And let22 (And let25 (And let28 (And let60 (And let72 (And let79 (And let85 (And let188 (And let187 (And let101 (And let186 (And let183 (And let142 (And let66 (And let178 (And let174 (And let96 (And let136 (And let58 (And let70 (And let77 (And let82 (And let88 (And let98 (And let164 (And let117 (And let109 (And let119 (And let129 (And let154 (And let151 (And let149 let147))))))))))))))))))))))))))))))))))))))))))))
  let let190 := (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And (And let166 let38) let42) let46) let4) let158) let8) let11) let123) let13) let16) let18) let22) let25) let28) let60) let72) let79) let85) let188) let187) let101) let186) let183) let142) let66) let178) let174) let96) let136) let58) let70) let77) let82) let88) let98) let164) let117) let109) let119) let129) let154) let151) let149) let147)
  let let191 := (Or let168 (Or let40 (Or let44 let48)))
  let let192 := (Eq x3 let19)
  let let193 := (Eq x2 let19)
  let let194 := (Eq x1 let19)
  let let195 := (Or let173 (Or let172 (Or let171 let170)))
  let let196 := (Or let160 (Or let56 (Or let68 let75)))
  let let197 := (Eq x4 let26)
  let let198 := (Eq x3 let26)
  let let199 := (Or let103 (Or let113 (Or let198 let197)))
  let let200 := (Or let156 (Or let132 (Or let102 let112)))
  let let201 := (Or let194 (Or let193 (Or let192 let169)))
  let let202 := (Eq x3 let20)
  let let203 := (Eq x2 let20)
  let let204 := (Eq x1 let20)
  let let205 := (Or let204 (Or let203 (Or let202 let161)))
  let let206 := (Or let73 (Or let80 (Or let86 let90)))
  let let207 := (Or let120 (Or let130 (Or let155 let152)))
  let let208 := (Eq x4 let5)
  let let209 := (Eq x3 let5)
  let let210 := (Eq x2 let5)
  let let211 := (Eq x1 let5)
  let let212 := (Or let211 (Or let210 (Or let209 let208)))
  let let213 := (Eq x2 let6)
  let let214 := (Eq x1 let6)
  let let215 := (Or let214 (Or let213 (Or let137 let105)))
  let let216 := (Or let111 (Or let49 (Or let51 let53)))
  let let217 := (Or let167 (Or let39 (Or let43 let47)))
  let let218 := (Or let159 (Or let55 (Or let67 let74)))
  let let219 := (Or let89 (Or let30 (Or let32 let34)))
  let let220 := (And let165 (And let37 (And let41 (And let45 (And let3 (And let157 (And let7 (And let10 (And let122 (And let12 (And let15 (And let17 (And let21 (And let24 (And let27 (And let59 (And let71 (And let78 (And let219 (And let218 (And let217 (And let216 (And let215 (And let212 (And let207 (And let206 (And let205 (And let201 (And let200 (And let199 (And let57 (And let69 (And let76 (And let81 (And let87 (And let97 (And let163 (And let116 (And let108 (And let118 (And let128 (And let153 (And let150 (And let148 False))))))))))))))))))))))))))))))))))))))))))))
  let let221 := (Or let177 (Or let176 (Or let175 let162)))
  let let222 := (Or let182 (Or let181 (Or let180 let179)))
  let let223 := (Or let185 (Or let184 (Or let138 let106)))
  let let224 := (Eq Or Or)
fun lean_r0 : (Eq let4 let3) => -- THEORY_REWRITE_BUILTIN
fun lean_r1 : (Eq let8 let7) => -- THEORY_REWRITE_BUILTIN
fun lean_r2 : (Eq let11 let10) => -- THEORY_REWRITE_BUILTIN
fun lean_r3 : (Eq let13 let12) => -- THEORY_REWRITE_BUILTIN
fun lean_r4 : (Eq let16 let15) => -- THEORY_REWRITE_BUILTIN
fun lean_r5 : (Eq let18 let17) => -- THEORY_REWRITE_BUILTIN
fun lean_r6 : (Eq let22 let21) => -- THEORY_REWRITE_BUILTIN
fun lean_r7 : (Eq let25 let24) => -- THEORY_REWRITE_BUILTIN
fun lean_r8 : (Eq let28 let27) => -- THEORY_REWRITE_BUILTIN
fun lean_r9 : (Eq let31 let30) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let33 let32) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let35 let34) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let38 let37) => -- THEORY_REWRITE_BUILTIN
fun lean_r13 : (Eq let40 let39) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let42 let41) => -- THEORY_REWRITE_BUILTIN
fun lean_r15 : (Eq let44 let43) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let46 let45) => -- THEORY_REWRITE_BUILTIN
fun lean_r17 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let50 let49) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let52 let51) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let54 let53) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let56 let55) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let58 let57) => -- THEORY_REWRITE_BUILTIN
fun lean_r23 : (Eq let60 let59) => -- THEORY_REWRITE_BUILTIN
fun lean_r24 : (Eq let66 let65) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let68 let67) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let70 let69) => -- THEORY_REWRITE_BUILTIN
fun lean_r27 : (Eq let72 let71) => -- THEORY_REWRITE_BUILTIN
fun lean_r28 : (Eq let64 let73) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let75 let74) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let77 let76) => -- THEORY_REWRITE_BUILTIN
fun lean_r31 : (Eq let79 let78) => -- THEORY_REWRITE_BUILTIN
fun lean_r32 : (Eq let63 let80) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let82 let81) => -- THEORY_REWRITE_BUILTIN
fun lean_r34 : (Eq let85 let84) => -- THEORY_REWRITE_BOOL
fun lean_r35 : (Eq let62 let86) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let88 let87) => -- THEORY_REWRITE_BUILTIN
fun lean_r37 : (Eq let83 let89) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let61 let90) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let96 let95) => -- THEORY_REWRITE_BOOL
fun lean_r40 : (Eq let98 let97) => -- THEORY_REWRITE_BUILTIN
fun lean_r41 : (Eq let101 let100) => -- THEORY_REWRITE_BOOL
fun lean_r42 : (Eq let92 let102) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let104 let103) => -- THEORY_REWRITE_ARITH
fun lean_r44 : (Eq let106 let105) => -- THEORY_REWRITE_ARITH
fun lean_r45 : (Eq let109 let108) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let110 False) => -- THEORY_REWRITE_BOOL
fun lean_r47 : (Eq let99 let111) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let91 let112) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let114 let113) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let117 let116) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let119 let118) => -- THEORY_REWRITE_ARITH
fun lean_r52 : (Eq let121 let120) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let123 let122) => -- THEORY_REWRITE_BUILTIN
fun lean_r54 : (Eq let127 True) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let129 let128) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let131 let130) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let93 let132) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let136 let135) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let138 let137) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let142 let141) => -- THEORY_REWRITE_BOOL
fun lean_r61 : (Eq let147 let146) => -- THEORY_REWRITE_BUILTIN
fun lean_r62 : (Eq let149 let148) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let151 let150) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let139 let152) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let154 let153) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let140 let155) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let94 let156) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let158 let157) => -- THEORY_REWRITE_BUILTIN
fun lean_r69 : (Eq let143 let124) => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let160 let159) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let162 let161) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let164 let163) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let166 let165) => -- THEORY_REWRITE_BUILTIN
fun lean_r74 : (Eq let168 let167) => -- THEORY_REWRITE_ARITH
fun lean_r75 : (Eq let170 let169) => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let190 let189) => -- THEORY_REWRITE_BOOL
fun lean_r77 : (Eq let187 let191) => -- THEORY_REWRITE_BOOL
fun lean_r78 : (Eq let171 let192) => -- THEORY_REWRITE_ARITH
fun lean_r79 : (Eq let172 let193) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let173 let194) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let174 let195) => -- THEORY_REWRITE_BOOL
fun lean_r82 : (Eq let188 let196) => -- THEORY_REWRITE_BOOL
fun lean_r83 : (Eq let220 False) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq let175 let202) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let176 let203) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let177 let204) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let178 let221) => -- THEORY_REWRITE_BOOL
fun lean_r88 : (Eq let179 let208) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let180 let209) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let181 let210) => -- THEORY_REWRITE_ARITH
fun lean_r91 : (Eq let182 let211) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let183 let222) => -- THEORY_REWRITE_BOOL
fun lean_r93 : (Eq let184 let213) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let133 let197) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let185 let214) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let134 let198) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let186 let223) => -- THEORY_REWRITE_BOOL
fun lean_a98 : let190 => by
have lean_s0 : (Eq And And) := by timed rfl
let lean_s1 := by timed congr lean_s0 lean_r73
let lean_s2 := by timed congr lean_s0 lean_r12
let lean_s3 := by timed congr lean_s0 lean_r14
let lean_s4 := by timed congr lean_s0 lean_r16
let lean_s5 := by timed congr lean_s0 lean_r0
let lean_s6 := by timed congr lean_s0 lean_r68
let lean_s7 := by timed congr lean_s0 lean_r1
let lean_s8 := by timed congr lean_s0 lean_r2
let lean_s9 := by timed congr lean_s0 lean_r53
let lean_s10 := by timed congr lean_s0 lean_r3
let lean_s11 := by timed congr lean_s0 lean_r4
let lean_s12 := by timed congr lean_s0 lean_r5
let lean_s13 := by timed congr lean_s0 lean_r6
let lean_s14 := by timed congr lean_s0 lean_r7
let lean_s15 := by timed congr lean_s0 lean_r8
let lean_s16 := by timed congr lean_s0 lean_r23
let lean_s17 := by timed congr lean_s0 lean_r27
let lean_s18 := by timed congr lean_s0 lean_r31
have lean_s19 : let224 := by timed rfl
let lean_s20 := by timed congr lean_s19 lean_r37
let lean_s21 := by timed congr lean_s19 lean_r9
let lean_s22 := by timed congr lean_s19 lean_r10
let lean_s23 := by timed congr lean_s22 lean_r11
let lean_s24 := by timed congr lean_s21 lean_s23
have lean_s25 : (Eq let84 let219) := by timed congr lean_s20 lean_s24
have lean_s26 : (Eq let85 let219) := by timed Eq.trans lean_r34 lean_s25
let lean_s27 := by timed congr lean_s0 lean_s26
have lean_s28 : let224 := by timed rfl
let lean_s29 := by timed congr lean_s28 lean_r70
let lean_s30 := by timed congr lean_s28 lean_r21
let lean_s31 := by timed congr lean_s28 lean_r25
let lean_s32 := by timed congr lean_s31 lean_r29
let lean_s33 := by timed congr lean_s30 lean_s32
have lean_s34 : (Eq let196 let218) := by timed congr lean_s29 lean_s33
have lean_s35 : (Eq let188 let218) := by timed Eq.trans lean_r82 lean_s34
let lean_s36 := by timed congr lean_s0 lean_s35
have lean_s37 : let224 := by timed rfl
let lean_s38 := by timed congr lean_s37 lean_r74
let lean_s39 := by timed congr lean_s37 lean_r13
let lean_s40 := by timed congr lean_s37 lean_r15
let lean_s41 := by timed congr lean_s40 lean_r17
let lean_s42 := by timed congr lean_s39 lean_s41
have lean_s43 : (Eq let191 let217) := by timed congr lean_s38 lean_s42
have lean_s44 : (Eq let187 let217) := by timed Eq.trans lean_r77 lean_s43
let lean_s45 := by timed congr lean_s0 lean_s44
have lean_s46 : let224 := by timed rfl
let lean_s47 := by timed congr lean_s46 lean_r47
let lean_s48 := by timed congr lean_s46 lean_r18
let lean_s49 := by timed congr lean_s46 lean_r19
let lean_s50 := by timed congr lean_s49 lean_r20
let lean_s51 := by timed congr lean_s48 lean_s50
have lean_s52 : (Eq let100 let216) := by timed congr lean_s47 lean_s51
have lean_s53 : (Eq let101 let216) := by timed Eq.trans lean_r41 lean_s52
let lean_s54 := by timed congr lean_s0 lean_s53
have lean_s55 : let224 := by timed rfl
let lean_s56 := by timed congr lean_s55 lean_r95
let lean_s57 := by timed congr lean_s55 lean_r93
let lean_s58 := by timed congr lean_s55 lean_r59
let lean_s59 := by timed congr lean_s58 lean_r44
let lean_s60 := by timed congr lean_s57 lean_s59
have lean_s61 : (Eq let223 let215) := by timed congr lean_s56 lean_s60
have lean_s62 : (Eq let186 let215) := by timed Eq.trans lean_r97 lean_s61
let lean_s63 := by timed congr lean_s0 lean_s62
have lean_s64 : let224 := by timed rfl
let lean_s65 := by timed congr lean_s64 lean_r91
let lean_s66 := by timed congr lean_s64 lean_r90
let lean_s67 := by timed congr lean_s64 lean_r89
let lean_s68 := by timed congr lean_s67 lean_r88
let lean_s69 := by timed congr lean_s66 lean_s68
have lean_s70 : (Eq let222 let212) := by timed congr lean_s65 lean_s69
have lean_s71 : (Eq let183 let212) := by timed Eq.trans lean_r92 lean_s70
let lean_s72 := by timed congr lean_s0 lean_s71
have lean_s73 : let224 := by timed rfl
let lean_s74 := by timed congr lean_s73 lean_r52
let lean_s75 := by timed congr lean_s73 lean_r56
let lean_s76 := by timed congr lean_s73 lean_r66
let lean_s77 := by timed congr lean_s76 lean_r64
let lean_s78 := by timed congr lean_s75 lean_s77
have lean_s79 : (Eq let141 let207) := by timed congr lean_s74 lean_s78
have lean_s80 : (Eq let142 let207) := by timed Eq.trans lean_r60 lean_s79
let lean_s81 := by timed congr lean_s0 lean_s80
have lean_s82 : let224 := by timed rfl
let lean_s83 := by timed congr lean_s82 lean_r28
let lean_s84 := by timed congr lean_s82 lean_r32
let lean_s85 := by timed congr lean_s82 lean_r35
let lean_s86 := by timed congr lean_s85 lean_r38
let lean_s87 := by timed congr lean_s84 lean_s86
have lean_s88 : (Eq let65 let206) := by timed congr lean_s83 lean_s87
have lean_s89 : (Eq let66 let206) := by timed Eq.trans lean_r24 lean_s88
let lean_s90 := by timed congr lean_s0 lean_s89
have lean_s91 : let224 := by timed rfl
let lean_s92 := by timed congr lean_s91 lean_r86
let lean_s93 := by timed congr lean_s91 lean_r85
let lean_s94 := by timed congr lean_s91 lean_r84
let lean_s95 := by timed congr lean_s94 lean_r71
let lean_s96 := by timed congr lean_s93 lean_s95
have lean_s97 : (Eq let221 let205) := by timed congr lean_s92 lean_s96
have lean_s98 : (Eq let178 let205) := by timed Eq.trans lean_r87 lean_s97
let lean_s99 := by timed congr lean_s0 lean_s98
have lean_s100 : let224 := by timed rfl
let lean_s101 := by timed congr lean_s100 lean_r80
let lean_s102 := by timed congr lean_s100 lean_r79
let lean_s103 := by timed congr lean_s100 lean_r78
let lean_s104 := by timed congr lean_s103 lean_r75
let lean_s105 := by timed congr lean_s102 lean_s104
have lean_s106 : (Eq let195 let201) := by timed congr lean_s101 lean_s105
have lean_s107 : (Eq let174 let201) := by timed Eq.trans lean_r81 lean_s106
let lean_s108 := by timed congr lean_s0 lean_s107
have lean_s109 : let224 := by timed rfl
let lean_s110 := by timed congr lean_s109 lean_r67
let lean_s111 := by timed congr lean_s109 lean_r57
let lean_s112 := by timed congr lean_s109 lean_r42
let lean_s113 := by timed congr lean_s112 lean_r48
let lean_s114 := by timed congr lean_s111 lean_s113
have lean_s115 : (Eq let95 let200) := by timed congr lean_s110 lean_s114
have lean_s116 : (Eq let96 let200) := by timed Eq.trans lean_r39 lean_s115
let lean_s117 := by timed congr lean_s0 lean_s116
have lean_s118 : let224 := by timed rfl
let lean_s119 := by timed congr lean_s118 lean_r43
let lean_s120 := by timed congr lean_s118 lean_r49
let lean_s121 := by timed congr lean_s118 lean_r96
let lean_s122 := by timed congr lean_s121 lean_r94
let lean_s123 := by timed congr lean_s120 lean_s122
have lean_s124 : (Eq let135 let199) := by timed congr lean_s119 lean_s123
have lean_s125 : (Eq let136 let199) := by timed Eq.trans lean_r58 lean_s124
let lean_s126 := by timed congr lean_s0 lean_s125
let lean_s127 := by timed congr lean_s0 lean_r22
let lean_s128 := by timed congr lean_s0 lean_r26
let lean_s129 := by timed congr lean_s0 lean_r30
let lean_s130 := by timed congr lean_s0 lean_r33
let lean_s131 := by timed congr lean_s0 lean_r36
let lean_s132 := by timed congr lean_s0 lean_r40
let lean_s133 := by timed congr lean_s0 lean_r72
let lean_s134 := by timed congr lean_s0 lean_r50
let lean_s135 := by timed congr lean_s0 lean_r45
let lean_s136 := by timed congr lean_s0 lean_r51
let lean_s137 := by timed congr lean_s0 lean_r55
let lean_s138 := by timed congr lean_s0 lean_r65
let lean_s139 := by timed congr lean_s0 lean_r63
let lean_s140 := by timed congr lean_s0 lean_r62
have lean_s141 : (Eq let125 let125) := by timed rfl
have lean_s142 : (Eq let6 let6) := by timed rfl
have lean_s143 : let145 := by timed congrIte lean_s141 lean_s142 lean_r69
let lean_s144 := by timed flipCongrArg lean_s143 [Eq]
have lean_s145 : let127 := by timed rfl
have lean_s146 : (Eq let145 let127) := by timed congr lean_s144 lean_s145
have lean_s147 : (Eq let145 True) := by timed Eq.trans lean_s146 lean_r54
have lean_s148 : (Eq let146 let110) := by timed flipCongrArg lean_s147 [Not]
have lean_s149 : (Eq let146 False) := by timed Eq.trans lean_s148 lean_r46
have lean_s150 : (Eq let147 False) := by timed Eq.trans lean_r61 lean_s149
let lean_s151 := by timed congr lean_s140 lean_s150
let lean_s152 := by timed congr lean_s139 lean_s151
let lean_s153 := by timed congr lean_s138 lean_s152
let lean_s154 := by timed congr lean_s137 lean_s153
let lean_s155 := by timed congr lean_s136 lean_s154
let lean_s156 := by timed congr lean_s135 lean_s155
let lean_s157 := by timed congr lean_s134 lean_s156
let lean_s158 := by timed congr lean_s133 lean_s157
let lean_s159 := by timed congr lean_s132 lean_s158
let lean_s160 := by timed congr lean_s131 lean_s159
let lean_s161 := by timed congr lean_s130 lean_s160
let lean_s162 := by timed congr lean_s129 lean_s161
let lean_s163 := by timed congr lean_s128 lean_s162
let lean_s164 := by timed congr lean_s127 lean_s163
let lean_s165 := by timed congr lean_s126 lean_s164
let lean_s166 := by timed congr lean_s117 lean_s165
let lean_s167 := by timed congr lean_s108 lean_s166
let lean_s168 := by timed congr lean_s99 lean_s167
let lean_s169 := by timed congr lean_s90 lean_s168
let lean_s170 := by timed congr lean_s81 lean_s169
let lean_s171 := by timed congr lean_s72 lean_s170
let lean_s172 := by timed congr lean_s63 lean_s171
let lean_s173 := by timed congr lean_s54 lean_s172
let lean_s174 := by timed congr lean_s45 lean_s173
let lean_s175 := by timed congr lean_s36 lean_s174
let lean_s176 := by timed congr lean_s27 lean_s175
let lean_s177 := by timed congr lean_s18 lean_s176
let lean_s178 := by timed congr lean_s17 lean_s177
let lean_s179 := by timed congr lean_s16 lean_s178
let lean_s180 := by timed congr lean_s15 lean_s179
let lean_s181 := by timed congr lean_s14 lean_s180
let lean_s182 := by timed congr lean_s13 lean_s181
let lean_s183 := by timed congr lean_s12 lean_s182
let lean_s184 := by timed congr lean_s11 lean_s183
let lean_s185 := by timed congr lean_s10 lean_s184
let lean_s186 := by timed congr lean_s9 lean_s185
let lean_s187 := by timed congr lean_s8 lean_s186
let lean_s188 := by timed congr lean_s7 lean_s187
let lean_s189 := by timed congr lean_s6 lean_s188
let lean_s190 := by timed congr lean_s5 lean_s189
let lean_s191 := by timed congr lean_s4 lean_s190
let lean_s192 := by timed congr lean_s3 lean_s191
let lean_s193 := by timed congr lean_s2 lean_s192
have lean_s194 : (Eq let189 let220) := by timed congr lean_s1 lean_s193
have lean_s195 : (Eq let189 False) := by timed Eq.trans lean_s194 lean_r83
have lean_s196 : (Eq let190 False) := by timed Eq.trans lean_r76 lean_s195
exact (show False from by timed eqResolve lean_a98 lean_s196)


