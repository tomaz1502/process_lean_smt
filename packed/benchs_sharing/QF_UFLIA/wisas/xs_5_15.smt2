(set-info :smt-lib-version 2.6)
(set-logic QF_UFLIA)
(set-info :source |
   Wisconsin Safety Analyzer (WiSA) benchmarks translated to SMT format by Hossein Sheini
  |)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun arg0 () Int)
(declare-fun arg1 () Int)
(declare-fun fmt0 () Int)
(declare-fun fmt1 () Int)
(declare-fun distance () Int)
(declare-fun fmt_length () Int)
(declare-fun adr_lo () Int)
(declare-fun adr_medlo () Int)
(declare-fun adr_medhi () Int)
(declare-fun adr_hi () Int)
(declare-fun format (Int) Int)
(declare-fun percent () Int)
(declare-fun s () Int)
(declare-fun s_count (Int) Int)
(declare-fun x () Int)
(declare-fun x_count (Int) Int)
(assert (let ((?v_1 (+ fmt0 1)) (?v_0 (- (- fmt1 2) fmt0)) (?v_3 (format 0))) (let ((?v_8 (= ?v_3 percent)) (?v_4 (format 1))) (let ((?v_12 (= ?v_4 percent)) (?v_9 (= ?v_4 s)) (?v_27 (= ?v_4 x)) (?v_5 (format 2))) (let ((?v_16 (= ?v_5 percent)) (?v_13 (= ?v_5 s)) (?v_30 (= ?v_5 x)) (?v_6 (format 3))) (let ((?v_20 (= ?v_6 percent)) (?v_17 (= ?v_6 s)) (?v_33 (= ?v_6 x)) (?v_7 (format 4))) (let ((?v_24 (= ?v_7 percent)) (?v_21 (= ?v_7 s)) (?v_36 (= ?v_7 x)) (?v_10 (and ?v_8 ?v_9)) (?v_11 (s_count 0)) (?v_14 (and ?v_12 ?v_13)) (?v_15 (s_count 1)) (?v_18 (and ?v_16 ?v_17)) (?v_19 (s_count 2))) (let ((?v_22 (and ?v_20 ?v_21)) (?v_23 (s_count 3)) (?v_39 (format 5))) (let ((?v_25 (and ?v_24 (= ?v_39 s))) (?v_26 (s_count 4)) (?v_28 (and ?v_8 ?v_27)) (?v_29 (x_count 0)) (?v_31 (and ?v_12 ?v_30)) (?v_32 (x_count 1)) (?v_34 (and ?v_16 ?v_33)) (?v_35 (x_count 2)) (?v_37 (and ?v_20 ?v_36)) (?v_38 (x_count 3)) (?v_40 (and ?v_24 (= ?v_39 x))) (?v_41 (x_count 4)) (?v_2 (+ fmt0 0))) (not (=> (and (and (and (and (and (and (and (and (and (and (and (= distance 15) (= fmt_length 5)) (= adr_lo 3)) (= adr_medlo 4)) (= adr_medhi 5)) (= adr_hi 6)) (and (and (= percent 37) (= s 115)) (= x 120))) (and (and (and (and (and (and (and (= fmt0 0) (= arg0 (- fmt0 distance))) (>= arg1 fmt0)) (< fmt1 (+ fmt0 (- fmt_length 1)))) (> fmt1 ?v_1)) (>= arg1 (+ arg0 distance))) (< arg1 (+ arg0 (+ distance (- fmt_length 4))))) (= arg1 (+ (+ arg0 (* 4 (s_count ?v_0))) (* 4 (x_count ?v_0)))))) (and (or (or (or (or (= fmt1 ?v_2) (= fmt1 ?v_1)) (= fmt1 (+ fmt0 2))) (= fmt1 (+ fmt0 3))) (= fmt1 (+ fmt0 4))) (or (= arg1 ?v_2) (= arg1 ?v_1)))) (and (and (and (and (or (or (or (or (or (or (or ?v_8 (= ?v_3 s)) (= ?v_3 x)) (= ?v_3 3)) (= ?v_3 4)) (= ?v_3 5)) (= ?v_3 6)) (= ?v_3 255)) (or (or (or (or (or (or (or ?v_12 ?v_9) ?v_27) (= ?v_4 3)) (= ?v_4 4)) (= ?v_4 5)) (= ?v_4 6)) (= ?v_4 255))) (or (or (or (or (or (or (or ?v_16 ?v_13) ?v_30) (= ?v_5 3)) (= ?v_5 4)) (= ?v_5 5)) (= ?v_5 6)) (= ?v_5 255))) (or (or (or (or (or (or (or ?v_20 ?v_17) ?v_33) (= ?v_6 3)) (= ?v_6 4)) (= ?v_6 5)) (= ?v_6 6)) (= ?v_6 255))) (or (or (or (or (or (or (or ?v_24 ?v_21) ?v_36) (= ?v_7 3)) (= ?v_7 4)) (= ?v_7 5)) (= ?v_7 6)) (= ?v_7 255)))) (and (and (and (and (and (=> ?v_10 (= ?v_11 1)) (=> (not ?v_10) (= ?v_11 0))) (and (=> ?v_14 (= ?v_15 (+ ?v_11 1))) (=> (not ?v_14) (= ?v_15 ?v_11)))) (and (=> ?v_18 (= ?v_19 (+ ?v_15 1))) (=> (not ?v_18) (= ?v_19 ?v_15)))) (and (=> ?v_22 (= ?v_23 (+ ?v_19 1))) (=> (not ?v_22) (= ?v_23 ?v_19)))) (and (=> ?v_25 (= ?v_26 (+ ?v_23 1))) (=> (not ?v_25) (= ?v_26 ?v_23))))) (and (and (and (and (and (=> ?v_28 (= ?v_29 1)) (=> (not ?v_28) (= ?v_29 0))) (and (=> ?v_31 (= ?v_32 (+ ?v_29 1))) (=> (not ?v_31) (= ?v_32 ?v_29)))) (and (=> ?v_34 (= ?v_35 (+ ?v_32 1))) (=> (not ?v_34) (= ?v_35 ?v_32)))) (and (=> ?v_37 (= ?v_38 (+ ?v_35 1))) (=> (not ?v_37) (= ?v_38 ?v_35)))) (and (=> ?v_40 (= ?v_41 (+ ?v_38 1))) (=> (not ?v_40) (= ?v_41 ?v_38))))) (and (and (and (and (and (not (= (format fmt1) percent)) (= (format (+ fmt1 1)) s)) (= (format arg1) adr_lo)) (= (format (+ arg1 1)) adr_medlo)) (= (format (+ arg1 2)) adr_medhi)) (= (format (+ arg1 3)) adr_hi)))))))))))))
(check-sat)
(exit)
