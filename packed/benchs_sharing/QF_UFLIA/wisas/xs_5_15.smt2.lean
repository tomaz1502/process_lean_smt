open Classical
open Smt.Reconstruction.Certifying



set_option maxRecDepth 10000
set_option maxHeartbeats 500000

variable {distance : Int}
variable {fmtx5flength : Int}
variable {arg0 : Int}
variable {fmt0 : Int}
variable {x : Int}
variable {xx5fcount : (Int -> Int)}
variable {x : Int}
variable {s : Int}
variable {percent : Int}
variable {adrx5flo : Int}
variable {arg1 : Int}
variable {adrx5fmedlo : Int}
variable {adrx5fmedhi : Int}
variable {fmt1 : Int}
variable {adrx5fhi : Int}
variable {s : Int}
variable {format : (Int -> Int)}
variable {sx5fcount : (Int -> Int)}
variable {arg1 : Int}
variable {adrx5fhi : Int}
variable {fmt1 : Int}
variable {arg0 : Int}
variable {sx5fcount : (Int -> Int)}
variable {fmtx5flength : Int}
variable {adrx5flo : Int}
variable {distance : Int}
variable {adrx5fmedhi : Int}
variable {adrx5fmedlo : Int}
variable {xx5fcount : (Int -> Int)}
variable {percent : Int}
variable {format : (Int -> Int)}
variable {fmt0 : Int}

theorem th0 :
  let let1 := (Int.ofNat 1)
  let let2 := (binrel% HSub.hSub fmtx5flength let1)
  let let3 := (binrel% HAdd.hAdd fmt0 let2)
  let let4 := (binrel% GE.ge fmt1 let3)
  let let5 := (Not let4)
  let let6 := (binrel% LT.lt fmt1 let3)
  let let7 := (Neg.neg let1)
  let let8 := (binrel% HMul.hMul let7 let1)
  let let9 := (binrel% HAdd.hAdd fmtx5flength let8)
  let let10 := (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd fmt0 fmtx5flength))
  let let11 := (binrel% HAdd.hAdd let7 fmtx5flength)
  let let12 := (binrel% HAdd.hAdd fmt0 let11)
  let let13 := (binrel% HMul.hMul let7 arg1)
  let let14 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let13 distance))
  let let15 := (binrel% GE.ge let14 let1)
  let let16 := (Not let15)
  let let17 := (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))
  let let18 := (Int.ofNat 4)
  let let19 := (binrel% HMul.hMul let7 let18)
  let let20 := (binrel% HAdd.hAdd fmtx5flength let19)
  let let21 := (binrel% HSub.hSub fmtx5flength let18)
  let let22 := (Neg.neg let18)
  let let23 := (binrel% HAdd.hAdd let22 fmtx5flength)
  let let24 := (binrel% HAdd.hAdd fmtx5flength let22)
  let let25 := (Int.ofNat 2)
  let let26 := (binrel% HSub.hSub fmt1 let25)
  let let27 := (binrel% HSub.hSub let26 fmt0)
  let let28 := (xx5fcount let27)
  let let29 := (binrel% HMul.hMul let18 let28)
  let let30 := (sx5fcount let27)
  let let31 := (binrel% HMul.hMul let18 let30)
  let let32 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let31 let29))
  let let33 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let31) let29)
  let let34 := (binrel% HMul.hMul let7 let25)
  let let35 := (binrel% HAdd.hAdd fmt1 let34)
  let let36 := (Neg.neg let25)
  let let37 := (binrel% HAdd.hAdd let36 fmt1)
  let let38 := (binrel% HAdd.hAdd fmt1 let36)
  let let39 := (binrel% HMul.hMul let7 fmt0)
  let let40 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let39 fmt1))
  let let41 := (binrel% HAdd.hAdd let37 let39)
  let let42 := (Eq fmt0 fmt1)
  let let43 := (Eq fmt1 fmt0)
  let let44 := (binrel% HAdd.hAdd let25 fmt0)
  let let45 := (binrel% HAdd.hAdd fmt0 let25)
  let let46 := (Int.ofNat 3)
  let let47 := (binrel% HAdd.hAdd let46 fmt0)
  let let48 := (binrel% HAdd.hAdd fmt0 let46)
  let let49 := (binrel% HAdd.hAdd (Neg.neg let46) fmt1)
  let let50 := (Eq fmt0 let49)
  let let51 := (Eq fmt1 let47)
  let let52 := (binrel% HAdd.hAdd let18 fmt0)
  let let53 := (binrel% HAdd.hAdd fmt0 let18)
  let let54 := (binrel% HAdd.hAdd let22 fmt1)
  let let55 := (Eq fmt0 let54)
  let let56 := (Eq fmt1 let52)
  let let57 := (binrel% HMul.hMul let7 fmt1)
  let let58 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd let57 fmtx5flength))
  let let59 := (binrel% GE.ge let58 let25)
  let let60 := (Not let59)
  let let61 := (binrel% GE.ge fmt1 let10)
  let let62 := (xx5fcount let37)
  let let63 := (sx5fcount let37)
  let let64 := (binrel% GE.ge (binrel% HAdd.hAdd let63 let62) let18)
  let let65 := (Int.ofNat 0)
  let let66 := (binrel% HMul.hMul let18 let62)
  let let67 := (binrel% HMul.hMul let18 let63)
  let let68 := (binrel% HAdd.hAdd let67 let66)
  let let69 := (Int.ofNat 15)
  let let70 := (Neg.neg let69)
  let let71 := (binrel% HAdd.hAdd let70 let68)
  let let72 := (binrel% GE.ge let71 let65)
  let let73 := (Eq fmt1 let25)
  let let74 := (Eq let65 let37)
  let let75 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance let21))
  let let76 := (binrel% GE.ge arg1 let75)
  let let77 := (Not let76)
  let let78 := (binrel% LT.lt arg1 let75)
  let let79 := (binrel% HMul.hMul let22 let62)
  let let80 := (binrel% HMul.hMul let22 let63)
  let let81 := (binrel% HAdd.hAdd let80 let79)
  let let82 := (binrel% HAdd.hAdd let69 let81)
  let let83 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let82 let69))
  let let84 := (Not let64)
  let let85 := (binrel% GE.ge let82 let1)
  let let86 := (Not let84)
  let let87 := (binrel% HAdd.hAdd arg1 let46)
  let let88 := (format let87)
  let let89 := (Eq let88 adrx5fhi)
  let let90 := (binrel% HAdd.hAdd arg1 let25)
  let let91 := (format let90)
  let let92 := (Eq let91 adrx5fmedhi)
  let let93 := (binrel% HAdd.hAdd arg1 let1)
  let let94 := (format let93)
  let let95 := (Eq let94 adrx5fmedlo)
  let let96 := (format arg1)
  let let97 := (Eq let96 adrx5flo)
  let let98 := (binrel% HAdd.hAdd fmt1 let1)
  let let99 := (format let98)
  let let100 := (Eq let99 s)
  let let101 := (format fmt1)
  let let102 := (Eq let101 percent)
  let let103 := (Not let102)
  let let104 := (And let103 (And let100 (And let97 (And let95 (And let92 let89)))))
  let let105 := (And (And (And (And (And let103 let100) let97) let95) let92) let89)
  let let106 := (binrel% HAdd.hAdd (Int.ofNat 20) let81)
  let let107 := (Int.ofNat 5)
  let let108 := (binrel% HAdd.hAdd let69 let107)
  let let109 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let82 let108))
  let let110 := (binrel% HMul.hMul let7 let71)
  let let111 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 12)) let68)
  let let112 := (binrel% HAdd.hAdd let46 let71)
  let let113 := (Eq let112 let111)
  let let114 := (Eq arg1 let71)
  let let115 := (binrel% HAdd.hAdd arg1 let81)
  let let116 := (Eq let70 let115)
  let let117 := (Eq let69 let69)
  let let118 := (Not (binrel% GE.ge fmt1 let18))
  let let119 := (binrel% HAdd.hAdd let107 let57)
  let let120 := (binrel% GE.ge let119 let25)
  let let121 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let81)))
  let let122 := (sx5fcount let25)
  let let123 := (binrel% HAdd.hAdd let1 let122)
  let let124 := (binrel% HAdd.hAdd let122 let1)
  let let125 := (binrel% HAdd.hAdd fmt0 let57)
  let let126 := (binrel% GE.ge let125 let7)
  let let127 := (binrel% HAdd.hAdd let1 fmt0)
  let let128 := (binrel% LE.le fmt1 let127)
  let let129 := (format let71)
  let let130 := (Eq let129 let46)
  let let131 := (Eq let46 let129)
  let let132 := (Int.ofNat 115)
  let let133 := (format let25)
  let let134 := (Eq let133 let132)
  let let135 := (Eq let132 let133)
  let let136 := (format let107)
  let let137 := (Eq s let136)
  let let138 := (Eq let136 s)
  let let139 := (Eq let71 let65)
  let let140 := (binrel% HAdd.hAdd let65 let57)
  let let141 := (Eq let70 let70)
  let let142 := (binrel% HMul.hMul let7 let65)
  let let143 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let142 fmt1))
  let let144 := (xx5fcount let143)
  let let145 := (binrel% HMul.hMul let22 let144)
  let let146 := (sx5fcount let143)
  let let147 := (binrel% HMul.hMul let22 let146)
  let let148 := (binrel% HAdd.hAdd let147 let145)
  let let149 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let148)))
  let let150 := (binrel% HAdd.hAdd let71 let148)
  let let151 := (binrel% HMul.hMul let7 distance)
  let let152 := (binrel% HAdd.hAdd fmt0 let151)
  let let153 := (binrel% HSub.hSub fmt0 distance)
  let let154 := (Int.ofNat 255)
  let let155 := (format let65)
  let let156 := (Eq let155 let154)
  let let157 := (Int.ofNat 6)
  let let158 := (Eq let155 let157)
  let let159 := (Eq let155 let107)
  let let160 := (Eq let155 let18)
  let let161 := (Eq let155 let46)
  let let162 := (Or let161 (Or let160 (Or let159 (Or let158 let156))))
  let let163 := (Eq let155 x)
  let let164 := (Eq let155 s)
  let let165 := (Eq let155 percent)
  let let166 := (Or let165 (Or let164 (Or let163 let162)))
  let let167 := (Or (Or (Or (Or (Or (Or (Or let165 let164) let163) let161) let160) let159) let158) let156)
  let let168 := (Eq let63 (binrel% HAdd.hAdd let18 (binrel% HMul.hMul let7 let62)))
  let let169 := (Or False let168)
  let let170 := (binrel% GE.ge fmt1 let25)
  let let171 := (Not let170)
  let let172 := (binrel% GE.ge let57 let7)
  let let173 := (binrel% HAdd.hAdd let1 fmt1)
  let let174 := (format let173)
  let let175 := (Eq let174 let132)
  let let176 := (Eq let132 let174)
  let let177 := (Eq fmt1 let46)
  let let178 := (Eq let65 let49)
  let let179 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let68)
  let let180 := (format let179)
  let let181 := (Eq let180 let18)
  let let182 := (Eq let18 let180)
  let let183 := (binrel% HAdd.hAdd let7 fmt1)
  let let184 := (Eq fmt0 let183)
  let let185 := (Eq fmt1 let127)
  let let186 := (Eq fmt1 let1)
  let let187 := (Eq let65 let183)
  let let188 := (xx5fcount let46)
  let let189 := (xx5fcount let18)
  let let190 := (Eq let189 let188)
  let let191 := (Eq let136 x)
  let let192 := (format let18)
  let let193 := (Eq let192 percent)
  let let194 := (And let193 let191)
  let let195 := (Not let194)
  let let196 := (Implies let195 let190)
  let let197 := (binrel% HAdd.hAdd let188 let1)
  let let198 := (Eq let189 let197)
  let let199 := (Implies let194 let198)
  let let200 := (And let199 let196)
  let let201 := (xx5fcount let25)
  let let202 := (Eq let188 let201)
  let let203 := (Eq let192 x)
  let let204 := (format let46)
  let let205 := (Eq let204 percent)
  let let206 := (And let205 let203)
  let let207 := (Not let206)
  let let208 := (Implies let207 let202)
  let let209 := (binrel% HAdd.hAdd let201 let1)
  let let210 := (Eq let188 let209)
  let let211 := (Implies let206 let210)
  let let212 := (xx5fcount let1)
  let let213 := (Eq let201 let212)
  let let214 := (Eq let204 x)
  let let215 := (Eq let133 percent)
  let let216 := (And let215 let214)
  let let217 := (Not let216)
  let let218 := (Implies let217 let213)
  let let219 := (binrel% HAdd.hAdd let212 let1)
  let let220 := (Eq let201 let219)
  let let221 := (Implies let216 let220)
  let let222 := (xx5fcount let65)
  let let223 := (Eq let212 let222)
  let let224 := (Eq let133 x)
  let let225 := (format let1)
  let let226 := (Eq let225 percent)
  let let227 := (And let226 let224)
  let let228 := (Not let227)
  let let229 := (Implies let228 let223)
  let let230 := (binrel% HAdd.hAdd let222 let1)
  let let231 := (Eq let212 let230)
  let let232 := (Implies let227 let231)
  let let233 := (Eq let222 let65)
  let let234 := (Eq let225 x)
  let let235 := (And let165 let234)
  let let236 := (Not let235)
  let let237 := (Implies let236 let233)
  let let238 := (Eq let222 let1)
  let let239 := (Implies let235 let238)
  let let240 := (sx5fcount let46)
  let let241 := (sx5fcount let18)
  let let242 := (Eq let241 let240)
  let let243 := (And let193 let138)
  let let244 := (Not let243)
  let let245 := (Implies let244 let242)
  let let246 := (binrel% HAdd.hAdd let240 let1)
  let let247 := (Eq let241 let246)
  let let248 := (Implies let243 let247)
  let let249 := (Eq let240 let122)
  let let250 := (Eq let192 s)
  let let251 := (And let205 let250)
  let let252 := (Not let251)
  let let253 := (Implies let252 let249)
  let let254 := (Eq let240 let124)
  let let255 := (Implies let251 let254)
  let let256 := (sx5fcount let1)
  let let257 := (Eq let122 let256)
  let let258 := (Eq let204 s)
  let let259 := (And let215 let258)
  let let260 := (Not let259)
  let let261 := (Implies let260 let257)
  let let262 := (binrel% HAdd.hAdd let256 let1)
  let let263 := (Eq let122 let262)
  let let264 := (Implies let259 let263)
  let let265 := (sx5fcount let65)
  let let266 := (Eq let256 let265)
  let let267 := (Eq let133 s)
  let let268 := (And let226 let267)
  let let269 := (Not let268)
  let let270 := (Implies let269 let266)
  let let271 := (binrel% HAdd.hAdd let265 let1)
  let let272 := (Eq let256 let271)
  let let273 := (Implies let268 let272)
  let let274 := (Eq let265 let65)
  let let275 := (Eq let225 s)
  let let276 := (And let165 let275)
  let let277 := (Not let276)
  let let278 := (Implies let277 let274)
  let let279 := (Eq let265 let1)
  let let280 := (Implies let276 let279)
  let let281 := (Eq let192 let154)
  let let282 := (Eq let192 let157)
  let let283 := (Eq let192 let107)
  let let284 := (Eq let192 let18)
  let let285 := (Eq let192 let46)
  let let286 := (Or (Or (Or (Or (Or (Or (Or let193 let250) let203) let285) let284) let283) let282) let281)
  let let287 := (Eq let204 let154)
  let let288 := (Eq let204 let157)
  let let289 := (Eq let204 let107)
  let let290 := (Eq let204 let18)
  let let291 := (Eq let204 let46)
  let let292 := (Or (Or (Or (Or (Or (Or (Or let205 let258) let214) let291) let290) let289) let288) let287)
  let let293 := (Eq let133 let154)
  let let294 := (Eq let133 let157)
  let let295 := (Eq let133 let107)
  let let296 := (Eq let133 let18)
  let let297 := (Eq let133 let46)
  let let298 := (Or (Or (Or (Or (Or (Or (Or let215 let267) let224) let297) let296) let295) let294) let293)
  let let299 := (Eq let225 let154)
  let let300 := (Eq let225 let157)
  let let301 := (Eq let225 let107)
  let let302 := (Eq let225 let18)
  let let303 := (Eq let225 let46)
  let let304 := (Or (Or (Or (Or (Or (Or (Or let226 let275) let234) let303) let302) let301) let300) let299)
  let let305 := (binrel% HAdd.hAdd fmt0 let1)
  let let306 := (Eq arg1 let305)
  let let307 := (binrel% HAdd.hAdd fmt0 let65)
  let let308 := (Eq arg1 let307)
  let let309 := (Or let308 let306)
  let let310 := (Eq fmt1 let53)
  let let311 := (Eq fmt1 let48)
  let let312 := (Eq fmt1 let45)
  let let313 := (Eq fmt1 let305)
  let let314 := (Eq fmt1 let307)
  let let315 := (Or (Or (Or (Or let314 let313) let312) let311) let310)
  let let316 := (Eq arg1 let33)
  let let317 := (binrel% GT.gt fmt1 let305)
  let let318 := (binrel% GE.ge arg1 fmt0)
  let let319 := (Eq arg0 let153)
  let let320 := (Eq fmt0 let65)
  let let321 := (Int.ofNat 120)
  let let322 := (Eq x let321)
  let let323 := (Eq s let132)
  let let324 := (Int.ofNat 37)
  let let325 := (Eq percent let324)
  let let326 := (Eq adrx5fhi let157)
  let let327 := (Eq adrx5fmedhi let107)
  let let328 := (Eq adrx5fmedlo let18)
  let let329 := (Eq adrx5flo let46)
  let let330 := (Eq fmtx5flength let107)
  let let331 := (Eq distance let69)
  let let332 := (And let331 (And let330 (And let329 (And let328 (And let327 (And let326 (And let325 (And let323 (And let322 (And let320 (And let319 (And let318 (And let6 (And let317 (And let17 (And let78 (And let316 (And let315 (And let309 (And let167 (And let304 (And let298 (And let292 (And let286 (And let280 (And let278 (And let273 (And let270 (And let264 (And let261 (And let255 (And let253 (And let248 (And let245 (And let239 (And let237 (And let232 (And let229 (And let221 (And let218 (And let211 (And let208 let200))))))))))))))))))))))))))))))))))))))))))
  let let333 := (And (And (And (And (And (And (And (And (And (And (And let331 let330) let329) let328) let327) let326) (And (And let325 let323) let322)) (And (And (And (And (And (And (And let320 let319) let318) let6) let317) let17) let78) let316)) (And let315 let309)) (And (And (And (And let167 let304) let298) let292) let286)) (And (And (And (And (And let280 let278) (And let273 let270)) (And let264 let261)) (And let255 let253)) (And let248 let245))) (And (And (And (And (And let239 let237) (And let232 let229)) (And let221 let218)) (And let211 let208)) let200))
  let let334 := (Eq let324 let324)
  let let335 := (Eq let155 let321)
  let let336 := (Eq let321 let155)
  let let337 := (binrel% HAdd.hAdd let1 arg1)
  let let338 := (format let337)
  let let339 := (Eq adrx5fmedlo let338)
  let let340 := (Eq let338 adrx5fmedlo)
  let let341 := (binrel% HAdd.hAdd let46 arg1)
  let let342 := (Eq let192 let132)
  let let343 := (Eq let132 let192)
  let let344 := (Not let171)
  let let345 := (binrel% HAdd.hAdd let1 let71)
  let let346 := (Eq fmt0 let37)
  let let347 := (Eq fmt1 let44)
  let let348 := (Eq fmt1 let18)
  let let349 := (Eq let65 let54)
  let let350 := (Eq let225 let132)
  let let351 := (Eq let132 let225)
  let let352 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let65 fmt1))
  let let353 := (binrel% HAdd.hAdd let25 let71)
  let let354 := (binrel% LE.le fmt1 let305)
  let let355 := (Not let354)
  let let356 := (Eq let101 let324)
  let let357 := (Eq let324 let101)
  let let358 := (Eq let240 (binrel% HAdd.hAdd let7 let241))
  let let359 := (binrel% HAdd.hAdd let1 let240)
  let let360 := (Eq let241 let359)
  let let361 := (Eq let345 let179)
  let let362 := (Eq let136 let132)
  let let363 := (Eq let132 let136)
  let let364 := (Eq let225 let321)
  let let365 := (Eq let321 let225)
  let let366 := (Eq let222 let212)
  let let367 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let65)))
  let let368 := (Eq x let192)
  let let369 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let68)
  let let370 := (Eq let353 let369)
  let let371 := (Eq let155 let324)
  let let372 := (Eq let324 let155)
  let let373 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let57 let107))
  let let374 := (Or let314 (Or let313 (Or let312 (Or let311 let310))))
  let let375 := (Eq let122 (binrel% HAdd.hAdd let7 let240))
  let let376 := (Eq let240 let123)
  let let377 := (format let111)
  let let378 := (Eq let377 let157)
  let let379 := (Eq let157 let377)
  let let380 := (Eq let155 let132)
  let let381 := (Eq let132 let155)
  let let382 := (Eq let157 let157)
  let let383 := (binrel% HAdd.hAdd distance fmtx5flength)
  let let384 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let13 let383))
  let let385 := (binrel% GE.ge let384 let107)
  let let386 := (Not let385)
  let let387 := (Not let386)
  let let388 := (Eq let132 let132)
  let let389 := (binrel% HAdd.hAdd let1 let212)
  let let390 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let142)))
  let let391 := (binrel% HAdd.hAdd let71 let142)
  let let392 := (Eq let192 let324)
  let let393 := (Eq let324 let192)
  let let394 := (Not let60)
  let let395 := (Eq let188 (binrel% HAdd.hAdd let7 let189))
  let let396 := (binrel% HAdd.hAdd let1 let188)
  let let397 := (Eq let189 let396)
  let let398 := (Eq let192 let321)
  let let399 := (Eq let321 let192)
  let let400 := (Eq let136 let321)
  let let401 := (Eq let321 let136)
  let let402 := (Eq let201 let188)
  let let403 := (binrel% GE.ge let106 let107)
  let let404 := (format let341)
  let let405 := (Eq adrx5fhi let404)
  let let406 := (Eq let404 adrx5fhi)
  let let407 := (binrel% HAdd.hAdd fmtx5flength let7)
  let let408 := (Eq let204 let324)
  let let409 := (Eq let324 let204)
  let let410 := (Eq let201 (binrel% HAdd.hAdd let7 let188))
  let let411 := (binrel% HAdd.hAdd let1 let201)
  let let412 := (Eq let188 let411)
  let let413 := (Eq let133 let321)
  let let414 := (Eq let321 let133)
  let let415 := (Eq let204 let321)
  let let416 := (Eq let321 let204)
  let let417 := (Eq let212 let201)
  let let418 := (Eq let212 (binrel% HAdd.hAdd let7 let201))
  let let419 := (Eq let201 let389)
  let let420 := (Eq let225 let324)
  let let421 := (Eq let324 let225)
  let let422 := (format let369)
  let let423 := (Eq let422 let107)
  let let424 := (Eq let107 let422)
  let let425 := (Eq let71 let1)
  let let426 := (Eq let222 (binrel% HAdd.hAdd let7 let212))
  let let427 := (binrel% HAdd.hAdd let1 let222)
  let let428 := (Eq let212 let427)
  let let429 := (Eq let204 let132)
  let let430 := (Eq let132 let204)
  let let431 := (binrel% HMul.hMul let7 let69)
  let let432 := (Eq let65 let65)
  let let433 := (Eq let321 let321)
  let let434 := (binrel% HAdd.hAdd let26 let39)
  let let435 := (binrel% HAdd.hAdd let1 let265)
  let let436 := (Eq let107 let107)
  let let437 := (Eq adrx5flo let96)
  let let438 := (Eq let18 let18)
  let let439 := (Eq let46 let46)
  let let440 := (binrel% HAdd.hAdd let25 arg1)
  let let441 := (format let440)
  let let442 := (Eq adrx5fmedhi let441)
  let let443 := (Eq let441 adrx5fmedhi)
  let let444 := (Eq percent let133)
  let let445 := (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd arg0 let383))
  let let446 := (binrel% GE.ge arg1 let445)
  let let447 := (Eq s let174)
  let let448 := (Eq let174 s)
  let let449 := (Eq percent let101)
  let let450 := (Eq let188 let189)
  let let451 := (Eq let122 let240)
  let let452 := (Eq fmt1 let65)
  let let453 := (Eq let65 fmt1)
  let let454 := (Eq s let192)
  let let455 := (Eq percent let192)
  let let456 := (Eq x let136)
  let let457 := (Or let297 (Or let296 (Or let295 (Or let294 let293))))
  let let458 := (Or let215 (Or let267 (Or let224 let457)))
  let let459 := (Eq percent let204)
  let let460 := (binrel% HAdd.hAdd arg1 let39)
  let let461 := (binrel% GE.ge let460 let65)
  let let462 := (Eq x let204)
  let let463 := (Eq x let133)
  let let464 := (Eq percent let225)
  let let465 := (binrel% HAdd.hAdd let1 let65)
  let let466 := (Eq x let225)
  let let467 := (Eq percent let155)
  let let468 := (Eq let240 let241)
  let let469 := (xx5fcount let40)
  let let470 := (binrel% HMul.hMul let22 let469)
  let let471 := (sx5fcount let40)
  let let472 := (binrel% HMul.hMul let22 let471)
  let let473 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let472 let470))
  let let474 := (Eq arg0 let473)
  let let475 := (binrel% HMul.hMul let18 let469)
  let let476 := (binrel% HMul.hMul let18 let471)
  let let477 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let476 let475))
  let let478 := (Eq arg1 let477)
  let let479 := (Eq let256 let122)
  let let480 := (Eq s let204)
  let let481 := (Eq let256 (binrel% HAdd.hAdd let7 let122))
  let let482 := (binrel% HAdd.hAdd let1 let256)
  let let483 := (Eq let122 let482)
  let let484 := (Eq let265 let256)
  let let485 := (Eq s let133)
  let let486 := (Eq let265 (binrel% HAdd.hAdd let7 let256))
  let let487 := (Eq let256 let435)
  let let488 := (binrel% HAdd.hAdd let65 let70)
  let let489 := (Eq let133 let324)
  let let490 := (Eq let324 let133)
  let let491 := (Eq x let155)
  let let492 := (Eq s let225)
  let let493 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance let23))
  let let494 := (Or let285 (Or let284 (Or let283 (Or let282 let281))))
  let let495 := (Or let193 (Or let250 (Or let203 let494)))
  let let496 := (Or let291 (Or let290 (Or let289 (Or let288 let287))))
  let let497 := (Or let205 (Or let258 (Or let214 let496)))
  let let498 := (And let392 let400)
  let let499 := (Not let498)
  let let500 := (Implies let499 let450)
  let let501 := (Implies let498 let395)
  let let502 := (And let408 let398)
  let let503 := (Not let502)
  let let504 := (Implies let503 let402)
  let let505 := (Implies let502 let410)
  let let506 := (And let489 let415)
  let let507 := (Not let506)
  let let508 := (Implies let507 let417)
  let let509 := (Implies let506 let418)
  let let510 := (And let420 let413)
  let let511 := (Not let510)
  let let512 := (Implies let511 let366)
  let let513 := (Implies let510 let426)
  let let514 := (And let371 let364)
  let let515 := (Not let514)
  let let516 := (Implies let515 let233)
  let let517 := (Implies let514 let238)
  let let518 := (And let392 let362)
  let let519 := (Not let518)
  let let520 := (Implies let519 let468)
  let let521 := (Implies let518 let358)
  let let522 := (And let408 let342)
  let let523 := (Not let522)
  let let524 := (Implies let523 let451)
  let let525 := (Implies let522 let375)
  let let526 := (And let489 let429)
  let let527 := (Not let526)
  let let528 := (Implies let527 let479)
  let let529 := (Implies let526 let481)
  let let530 := (And let420 let134)
  let let531 := (Not let530)
  let let532 := (Implies let531 let484)
  let let533 := (Implies let530 let486)
  let let534 := (And let371 let350)
  let let535 := (Not let534)
  let let536 := (Implies let535 let274)
  let let537 := (Implies let534 let279)
  let let538 := (Or let392 (Or let342 (Or let398 let494)))
  let let539 := (Or let408 (Or let429 (Or let415 let496)))
  let let540 := (Or let489 (Or let134 (Or let413 let457)))
  let let541 := (Or let303 (Or let302 (Or let301 (Or let300 let299))))
  let let542 := (Or let420 (Or let350 (Or let364 let541)))
  let let543 := (Or let371 (Or let380 (Or let335 let162)))
  let let544 := (Or let452 (Or let186 (Or let73 (Or let177 let348))))
  let let545 := (And let544 (And let168 (And let543 (And let542 (And let540 (And let539 (And let538 (And let537 (And let536 (And let533 (And let532 (And let529 (And let528 (And let525 (And let524 (And let521 (And let520 (And let517 (And let516 (And let513 (And let512 (And let509 (And let508 (And let505 (And let504 (And let501 let500))))))))))))))))))))))))))
  let let546 := (And let64 (And let118 (And let170 (And let84 let545))))
  let let547 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let64 (And let118 (And let170 (And let64 (And let84 (And True let545)))))))))))))))))
  let let548 := (Or let226 (Or let275 (Or let234 let541)))
  let let549 := (Eq s let155)
  let let550 := (Implies let333 let105)
  let let551 := (Not let550)
  let let552 := (Not let356)
  let let553 := (And let552 (And let175 (And let130 (And let181 (And let423 let378)))))
  let let554 := (Implies let546 let553)
  let let555 := (Not let554)
  let let556 := (Not let449)
  let let557 := (And let556 (And let447 (And let437 (And let339 (And let442 let405)))))
  let let558 := (And let455 let456)
  let let559 := (Not let558)
  let let560 := (Implies let559 let450)
  let let561 := (Implies let558 let395)
  let let562 := (And let459 let368)
  let let563 := (Not let562)
  let let564 := (Implies let563 let402)
  let let565 := (Implies let562 let410)
  let let566 := (And let444 let462)
  let let567 := (Not let566)
  let let568 := (Implies let567 let417)
  let let569 := (Implies let566 let418)
  let let570 := (And let464 let463)
  let let571 := (Not let570)
  let let572 := (Implies let571 let366)
  let let573 := (Implies let570 let426)
  let let574 := (And let467 let466)
  let let575 := (Not let574)
  let let576 := (Implies let575 let233)
  let let577 := (Implies let574 let238)
  let let578 := (And let455 let137)
  let let579 := (Not let578)
  let let580 := (Implies let579 let468)
  let let581 := (Implies let578 let358)
  let let582 := (And let459 let454)
  let let583 := (Not let582)
  let let584 := (Implies let583 let451)
  let let585 := (Implies let582 let375)
  let let586 := (And let444 let480)
  let let587 := (Not let586)
  let let588 := (Implies let587 let479)
  let let589 := (Implies let586 let481)
  let let590 := (And let464 let485)
  let let591 := (Not let590)
  let let592 := (Implies let591 let484)
  let let593 := (Implies let590 let486)
  let let594 := (And let467 let492)
  let let595 := (Not let594)
  let let596 := (Implies let595 let274)
  let let597 := (Implies let594 let279)
  let let598 := (Or let455 (Or let454 (Or let368 let494)))
  let let599 := (Or let459 (Or let480 (Or let462 let496)))
  let let600 := (Or let444 (Or let485 (Or let463 let457)))
  let let601 := (Or let464 (Or let492 (Or let466 let541)))
  let let602 := (Or let467 (Or let549 (Or let491 let162)))
  let let603 := (Eq arg1 let127)
  let let604 := (Eq arg1 fmt0)
  let let605 := (Or let604 let603)
  let let606 := (Or let42 (Or let184 (Or let346 (Or let50 let55))))
  let let607 := (Not let126)
  let let608 := (Eq arg0 let152)
  let let609 := (And let331 (And let330 (And let329 (And let328 (And let327 (And let326 (And let325 (And let323 (And let322 (And let320 (And let608 (And let461 (And let59 (And let607 (And let16 (And let385 (And let474 (And let606 (And let605 (And let602 (And let601 (And let600 (And let599 (And let598 (And let597 (And let596 (And let593 (And let592 (And let589 (And let588 (And let585 (And let584 (And let581 (And let580 (And let577 (And let576 (And let573 (And let572 (And let569 (And let568 (And let565 (And let564 (And let561 let560)))))))))))))))))))))))))))))))))))))))))))
  let let610 := (Implies let609 let557)
  let let611 := (Not let610)
  let let612 := (format let112)
  let let613 := (Eq let157 let612)
  let let614 := (format let353)
  let let615 := (Eq let107 let614)
  let let616 := (format let345)
  let let617 := (Eq let18 let616)
  let let618 := (Not let357)
  let let619 := (And let618 (And let176 (And let131 (And let617 (And let615 let613)))))
  let let620 := (And let393 let401)
  let let621 := (Not let620)
  let let622 := (Implies let621 let450)
  let let623 := (Implies let620 let395)
  let let624 := (And let409 let399)
  let let625 := (Not let624)
  let let626 := (Implies let625 let402)
  let let627 := (Implies let624 let410)
  let let628 := (And let490 let416)
  let let629 := (Not let628)
  let let630 := (Implies let629 let417)
  let let631 := (Implies let628 let418)
  let let632 := (And let421 let414)
  let let633 := (Not let632)
  let let634 := (Implies let633 let366)
  let let635 := (Implies let632 let426)
  let let636 := (And let372 let365)
  let let637 := (Not let636)
  let let638 := (Implies let637 let233)
  let let639 := (Implies let636 let238)
  let let640 := (And let393 let363)
  let let641 := (Not let640)
  let let642 := (Implies let641 let468)
  let let643 := (Implies let640 let358)
  let let644 := (And let409 let343)
  let let645 := (Not let644)
  let let646 := (Implies let645 let451)
  let let647 := (Implies let644 let375)
  let let648 := (And let490 let430)
  let let649 := (Not let648)
  let let650 := (Implies let649 let479)
  let let651 := (Implies let648 let481)
  let let652 := (And let421 let135)
  let let653 := (Not let652)
  let let654 := (Implies let653 let484)
  let let655 := (Implies let652 let486)
  let let656 := (And let372 let351)
  let let657 := (Not let656)
  let let658 := (Implies let657 let274)
  let let659 := (Implies let656 let279)
  let let660 := (Or let393 (Or let343 (Or let399 let494)))
  let let661 := (Or let409 (Or let430 (Or let416 let496)))
  let let662 := (Or let490 (Or let135 (Or let414 let457)))
  let let663 := (Or let421 (Or let351 (Or let365 let541)))
  let let664 := (Or let372 (Or let381 (Or let336 let162)))
  let let665 := (Eq let71 let465)
  let let666 := (Or let139 let665)
  let let667 := (Or let453 (Or let187 (Or let74 (Or let178 let349))))
  let let668 := (Eq let70 let150)
  let let669 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let110 let108))
  let let670 := (binrel% GE.ge let669 let107)
  let let671 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let110 let69))
  let let672 := (binrel% GE.ge let671 let1)
  let let673 := (Not let672)
  let let674 := (binrel% GE.ge let140 let7)
  let let675 := (Not let674)
  let let676 := (binrel% GE.ge let373 let25)
  let let677 := (binrel% GE.ge let391 let65)
  let let678 := (binrel% HAdd.hAdd let65 let431)
  let let679 := (Eq let70 let678)
  let let680 := (And let117 (And let436 (And let439 (And let438 (And let436 (And let382 (And let334 (And let388 (And let433 (And let432 (And let679 (And let677 (And let676 (And let675 (And let673 (And let670 (And let668 (And let667 (And let666 (And let664 (And let663 (And let662 (And let661 (And let660 (And let659 (And let658 (And let655 (And let654 (And let651 (And let650 (And let647 (And let646 (And let643 (And let642 (And let639 (And let638 (And let635 (And let634 (And let631 (And let630 (And let627 (And let626 (And let623 let622)))))))))))))))))))))))))))))))))))))))))))
  let let681 := (Implies let680 let619)
  let let682 := (Not let681)
  let let683 := (Eq And And)
  let let684 := (Eq let450 let450)
  let let685 := (Eq let395 let395)
  let let686 := (Eq let402 let402)
  let let687 := (Eq let410 let410)
  let let688 := (Eq let417 let417)
  let let689 := (Eq let418 let418)
  let let690 := (Eq let366 let366)
  let let691 := (Eq let426 let426)
  let let692 := (Eq let233 let233)
  let let693 := (Eq let238 let238)
  let let694 := (Eq let468 let468)
  let let695 := (Eq let358 let358)
  let let696 := (Eq let451 let451)
  let let697 := (Eq let375 let375)
  let let698 := (Eq let479 let479)
  let let699 := (Eq let481 let481)
  let let700 := (Eq let484 let484)
  let let701 := (Eq let486 let486)
  let let702 := (Eq let274 let274)
  let let703 := (Eq let279 let279)
  let let704 := (Eq let281 let281)
  let let705 := (Eq let282 let282)
  let let706 := (Eq Or Or)
  let let707 := (Eq let283 let283)
  let let708 := (Eq let284 let284)
  let let709 := (Eq let285 let285)
  let let710 := (Eq let287 let287)
  let let711 := (Eq let288 let288)
  let let712 := (Eq let289 let289)
  let let713 := (Eq let290 let290)
  let let714 := (Eq let291 let291)
  let let715 := (Eq let293 let293)
  let let716 := (Eq let294 let294)
  let let717 := (Eq let295 let295)
  let let718 := (Eq let296 let296)
  let let719 := (Eq let297 let297)
  let let720 := (Eq let299 let299)
  let let721 := (Eq let300 let300)
  let let722 := (Eq let301 let301)
  let let723 := (Eq let302 let302)
  let let724 := (Eq let303 let303)
  let let725 := (Eq let156 let156)
  let let726 := (Eq let158 let158)
  let let727 := (Eq let159 let159)
  let let728 := (Eq let160 let160)
  let let729 := (Eq let161 let161)
  let let730 := (Eq fmt1 fmt1)
  let let731 := (Eq let36 let36)
  let let732 := (Eq let22 let22)
  let let733 := (Eq let1 let1)
  let let734 := (Eq let7 let7)
  let let735 := (Eq let25 let25)
  let let736 := (And let320 (And let322 (And let323 (And let325 (And let326 (And let327 (And let328 (And let329 (And let330 let331)))))))))
  let let737 := (Eq arg0 let70)
  let let738 := (And let737 let736)
  let let739 := (Eq arg1 arg1)
  let let740 := (Eq arg0 arg0)
  let let741 := (Eq let75 let445)
  let let742 := (Eq arg0 let678)
  let let743 := (Eq let152 let678)
  let let744 := (Eq let151 let431)
  let let745 := (binrel% HAdd.hAdd arg1 let148)
  let let746 := (Eq let70 let745)
  let let747 := (Eq let470 let145)
  let let748 := (Eq let469 let144)
  let let749 := (Eq let40 let143)
  let let750 := (Eq let39 let142)
  let let751 := (Eq let472 let147)
  let let752 := (Eq let471 let146)
(Eq let6 let5) → (Eq let2 let9) → (Eq let12 let10) → (Eq let17 let16) → (Eq let21 let20) → (Eq let24 let23) → (Eq let33 let32) → (Eq let26 let35) → (Eq let34 let36) → (Eq let38 let37) → (Eq let41 let40) → (Eq let43 let42) → (Eq let45 let44) → (Eq let48 let47) → (Eq let51 let50) → (Eq let53 let52) → (Eq let56 let55) → (Eq let61 let60) → (Eq let72 let64) → (Eq let74 let73) → (Eq let78 let77) → (Eq let83 let82) → (Eq let85 let84) → (Eq let86 let64) → (Eq let105 let104) → (Eq let109 let106) → (Eq let110 let82) → let113 → (Eq let116 let114) → (Eq let117 True) → (Eq let120 let118) → (Eq let121 let70) → (Eq let124 let123) → (Eq let128 let126) → (Eq let131 let130) → (Eq let135 let134) → (Eq let138 let137) → (Eq let139 False) → (Eq let112 let112) → (Eq let140 let57) → (Eq let141 True) → (Eq let150 let149) → (Eq let153 let152) → (Eq let167 let166) → (Eq let169 let168) → (Eq let172 let171) → (Eq let176 let175) → (Eq let178 let177) → (Eq let182 let181) → (Eq let185 let184) → (Eq let187 let186) → (Eq let333 let332) → (Eq let334 True) → (Eq let336 let335) → (Eq let340 let339) → (Eq let87 let341) → (Eq let343 let342) → (Eq let98 let173) → (Eq let344 let170) → (Eq let345 let345) → (Eq let347 let346) → (Eq let349 let348) → (Eq let351 let350) → (Eq let352 let37) → (Eq let75 let75) → (Eq let353 let353) → (Eq let317 let355) → (Eq let357 let356) → (Eq let360 let358) → let361 → (Eq let363 let362) → (Eq let365 let364) → (Eq let223 let366) → (Eq let367 let71) → (Eq let203 let368) → let370 → (Eq let372 let371) → (Eq let373 let119) → (Eq let315 let374) → (Eq let376 let375) → (Eq let379 let378) → (Eq let381 let380) → (Eq let382 True) → (Eq let387 let385) → (Eq let93 let337) → (Eq let307 fmt0) → (Eq let388 True) → (Eq let219 let389) → (Eq let391 let390) → (Eq let393 let392) → (Eq let394 let59) → (Eq let397 let395) → (Eq let399 let398) → (Eq let401 let400) → (Eq let202 let402) → (Eq let403 let84) → (Eq let406 let405) → (Eq let407 let11) → (Eq let409 let408) → (Eq let412 let410) → (Eq let414 let413) → (Eq let416 let415) → (Eq let213 let417) → (Eq let419 let418) → (Eq let421 let420) → (Eq let19 let22) → (Eq let424 let423) → (Eq let425 let168) → (Eq let428 let426) → (Eq let430 let429) → (Eq let431 let70) → (Eq let432 True) → (Eq let433 True) → (Eq let27 let434) → (Eq let142 let65) → (Eq let271 let435) → (Eq let436 True) → (Eq let97 let437) → (Eq let438 True) → (Eq let439 True) → (Eq let443 let442) → (Eq let90 let440) → (Eq let215 let444) → (Eq let446 let386) → (Eq let448 let447) → (Eq let102 let449) → (Eq let190 let450) → (Eq let249 let451) → (Eq let453 let452) → (Eq let250 let454) → (Eq let193 let455) → (Eq let191 let456) → (Eq let298 let458) → (Eq let197 let396) → (Eq let205 let459) → (Eq let8 let7) → (Eq let209 let411) → (Eq let318 let461) → (Eq let214 let462) → (Eq let224 let463) → (Eq let226 let464) → (Eq let465 let1) → (Eq let230 let427) → (Eq let234 let466) → (Eq let165 let467) → (Eq let242 let468) → (Eq let246 let359) → (Eq let478 let474) → (Eq let257 let479) → (Eq let258 let480) → (Eq let483 let481) → (Eq let262 let482) → (Eq let266 let484) → (Eq let267 let485) → (Eq let487 let486) → (Eq let488 let70) → (Eq let490 let489) → (Eq let163 let491) → (Eq let275 let492) → (Eq let305 let127) → (Eq let493 let445) → (Eq let286 let495) → (Eq let292 let497) → (Eq let547 let546) → (Eq let304 let548) → (Eq let164 let549) → let551 → False :=
  let let1 := (Int.ofNat 1)
  let let2 := (binrel% HSub.hSub fmtx5flength let1)
  let let3 := (binrel% HAdd.hAdd fmt0 let2)
  let let4 := (binrel% GE.ge fmt1 let3)
  let let5 := (Not let4)
  let let6 := (binrel% LT.lt fmt1 let3)
  let let7 := (Neg.neg let1)
  let let8 := (binrel% HMul.hMul let7 let1)
  let let9 := (binrel% HAdd.hAdd fmtx5flength let8)
  let let10 := (binrel% HAdd.hAdd let7 (binrel% HAdd.hAdd fmt0 fmtx5flength))
  let let11 := (binrel% HAdd.hAdd let7 fmtx5flength)
  let let12 := (binrel% HAdd.hAdd fmt0 let11)
  let let13 := (binrel% HMul.hMul let7 arg1)
  let let14 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let13 distance))
  let let15 := (binrel% GE.ge let14 let1)
  let let16 := (Not let15)
  let let17 := (binrel% GE.ge arg1 (binrel% HAdd.hAdd arg0 distance))
  let let18 := (Int.ofNat 4)
  let let19 := (binrel% HMul.hMul let7 let18)
  let let20 := (binrel% HAdd.hAdd fmtx5flength let19)
  let let21 := (binrel% HSub.hSub fmtx5flength let18)
  let let22 := (Neg.neg let18)
  let let23 := (binrel% HAdd.hAdd let22 fmtx5flength)
  let let24 := (binrel% HAdd.hAdd fmtx5flength let22)
  let let25 := (Int.ofNat 2)
  let let26 := (binrel% HSub.hSub fmt1 let25)
  let let27 := (binrel% HSub.hSub let26 fmt0)
  let let28 := (xx5fcount let27)
  let let29 := (binrel% HMul.hMul let18 let28)
  let let30 := (sx5fcount let27)
  let let31 := (binrel% HMul.hMul let18 let30)
  let let32 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let31 let29))
  let let33 := (binrel% HAdd.hAdd (binrel% HAdd.hAdd arg0 let31) let29)
  let let34 := (binrel% HMul.hMul let7 let25)
  let let35 := (binrel% HAdd.hAdd fmt1 let34)
  let let36 := (Neg.neg let25)
  let let37 := (binrel% HAdd.hAdd let36 fmt1)
  let let38 := (binrel% HAdd.hAdd fmt1 let36)
  let let39 := (binrel% HMul.hMul let7 fmt0)
  let let40 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let39 fmt1))
  let let41 := (binrel% HAdd.hAdd let37 let39)
  let let42 := (Eq fmt0 fmt1)
  let let43 := (Eq fmt1 fmt0)
  let let44 := (binrel% HAdd.hAdd let25 fmt0)
  let let45 := (binrel% HAdd.hAdd fmt0 let25)
  let let46 := (Int.ofNat 3)
  let let47 := (binrel% HAdd.hAdd let46 fmt0)
  let let48 := (binrel% HAdd.hAdd fmt0 let46)
  let let49 := (binrel% HAdd.hAdd (Neg.neg let46) fmt1)
  let let50 := (Eq fmt0 let49)
  let let51 := (Eq fmt1 let47)
  let let52 := (binrel% HAdd.hAdd let18 fmt0)
  let let53 := (binrel% HAdd.hAdd fmt0 let18)
  let let54 := (binrel% HAdd.hAdd let22 fmt1)
  let let55 := (Eq fmt0 let54)
  let let56 := (Eq fmt1 let52)
  let let57 := (binrel% HMul.hMul let7 fmt1)
  let let58 := (binrel% HAdd.hAdd fmt0 (binrel% HAdd.hAdd let57 fmtx5flength))
  let let59 := (binrel% GE.ge let58 let25)
  let let60 := (Not let59)
  let let61 := (binrel% GE.ge fmt1 let10)
  let let62 := (xx5fcount let37)
  let let63 := (sx5fcount let37)
  let let64 := (binrel% GE.ge (binrel% HAdd.hAdd let63 let62) let18)
  let let65 := (Int.ofNat 0)
  let let66 := (binrel% HMul.hMul let18 let62)
  let let67 := (binrel% HMul.hMul let18 let63)
  let let68 := (binrel% HAdd.hAdd let67 let66)
  let let69 := (Int.ofNat 15)
  let let70 := (Neg.neg let69)
  let let71 := (binrel% HAdd.hAdd let70 let68)
  let let72 := (binrel% GE.ge let71 let65)
  let let73 := (Eq fmt1 let25)
  let let74 := (Eq let65 let37)
  let let75 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance let21))
  let let76 := (binrel% GE.ge arg1 let75)
  let let77 := (Not let76)
  let let78 := (binrel% LT.lt arg1 let75)
  let let79 := (binrel% HMul.hMul let22 let62)
  let let80 := (binrel% HMul.hMul let22 let63)
  let let81 := (binrel% HAdd.hAdd let80 let79)
  let let82 := (binrel% HAdd.hAdd let69 let81)
  let let83 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let82 let69))
  let let84 := (Not let64)
  let let85 := (binrel% GE.ge let82 let1)
  let let86 := (Not let84)
  let let87 := (binrel% HAdd.hAdd arg1 let46)
  let let88 := (format let87)
  let let89 := (Eq let88 adrx5fhi)
  let let90 := (binrel% HAdd.hAdd arg1 let25)
  let let91 := (format let90)
  let let92 := (Eq let91 adrx5fmedhi)
  let let93 := (binrel% HAdd.hAdd arg1 let1)
  let let94 := (format let93)
  let let95 := (Eq let94 adrx5fmedlo)
  let let96 := (format arg1)
  let let97 := (Eq let96 adrx5flo)
  let let98 := (binrel% HAdd.hAdd fmt1 let1)
  let let99 := (format let98)
  let let100 := (Eq let99 s)
  let let101 := (format fmt1)
  let let102 := (Eq let101 percent)
  let let103 := (Not let102)
  let let104 := (And let103 (And let100 (And let97 (And let95 (And let92 let89)))))
  let let105 := (And (And (And (And (And let103 let100) let97) let95) let92) let89)
  let let106 := (binrel% HAdd.hAdd (Int.ofNat 20) let81)
  let let107 := (Int.ofNat 5)
  let let108 := (binrel% HAdd.hAdd let69 let107)
  let let109 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let82 let108))
  let let110 := (binrel% HMul.hMul let7 let71)
  let let111 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 12)) let68)
  let let112 := (binrel% HAdd.hAdd let46 let71)
  let let113 := (Eq let112 let111)
  let let114 := (Eq arg1 let71)
  let let115 := (binrel% HAdd.hAdd arg1 let81)
  let let116 := (Eq let70 let115)
  let let117 := (Eq let69 let69)
  let let118 := (Not (binrel% GE.ge fmt1 let18))
  let let119 := (binrel% HAdd.hAdd let107 let57)
  let let120 := (binrel% GE.ge let119 let25)
  let let121 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let81)))
  let let122 := (sx5fcount let25)
  let let123 := (binrel% HAdd.hAdd let1 let122)
  let let124 := (binrel% HAdd.hAdd let122 let1)
  let let125 := (binrel% HAdd.hAdd fmt0 let57)
  let let126 := (binrel% GE.ge let125 let7)
  let let127 := (binrel% HAdd.hAdd let1 fmt0)
  let let128 := (binrel% LE.le fmt1 let127)
  let let129 := (format let71)
  let let130 := (Eq let129 let46)
  let let131 := (Eq let46 let129)
  let let132 := (Int.ofNat 115)
  let let133 := (format let25)
  let let134 := (Eq let133 let132)
  let let135 := (Eq let132 let133)
  let let136 := (format let107)
  let let137 := (Eq s let136)
  let let138 := (Eq let136 s)
  let let139 := (Eq let71 let65)
  let let140 := (binrel% HAdd.hAdd let65 let57)
  let let141 := (Eq let70 let70)
  let let142 := (binrel% HMul.hMul let7 let65)
  let let143 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let142 fmt1))
  let let144 := (xx5fcount let143)
  let let145 := (binrel% HMul.hMul let22 let144)
  let let146 := (sx5fcount let143)
  let let147 := (binrel% HMul.hMul let22 let146)
  let let148 := (binrel% HAdd.hAdd let147 let145)
  let let149 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let148)))
  let let150 := (binrel% HAdd.hAdd let71 let148)
  let let151 := (binrel% HMul.hMul let7 distance)
  let let152 := (binrel% HAdd.hAdd fmt0 let151)
  let let153 := (binrel% HSub.hSub fmt0 distance)
  let let154 := (Int.ofNat 255)
  let let155 := (format let65)
  let let156 := (Eq let155 let154)
  let let157 := (Int.ofNat 6)
  let let158 := (Eq let155 let157)
  let let159 := (Eq let155 let107)
  let let160 := (Eq let155 let18)
  let let161 := (Eq let155 let46)
  let let162 := (Or let161 (Or let160 (Or let159 (Or let158 let156))))
  let let163 := (Eq let155 x)
  let let164 := (Eq let155 s)
  let let165 := (Eq let155 percent)
  let let166 := (Or let165 (Or let164 (Or let163 let162)))
  let let167 := (Or (Or (Or (Or (Or (Or (Or let165 let164) let163) let161) let160) let159) let158) let156)
  let let168 := (Eq let63 (binrel% HAdd.hAdd let18 (binrel% HMul.hMul let7 let62)))
  let let169 := (Or False let168)
  let let170 := (binrel% GE.ge fmt1 let25)
  let let171 := (Not let170)
  let let172 := (binrel% GE.ge let57 let7)
  let let173 := (binrel% HAdd.hAdd let1 fmt1)
  let let174 := (format let173)
  let let175 := (Eq let174 let132)
  let let176 := (Eq let132 let174)
  let let177 := (Eq fmt1 let46)
  let let178 := (Eq let65 let49)
  let let179 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 14)) let68)
  let let180 := (format let179)
  let let181 := (Eq let180 let18)
  let let182 := (Eq let18 let180)
  let let183 := (binrel% HAdd.hAdd let7 fmt1)
  let let184 := (Eq fmt0 let183)
  let let185 := (Eq fmt1 let127)
  let let186 := (Eq fmt1 let1)
  let let187 := (Eq let65 let183)
  let let188 := (xx5fcount let46)
  let let189 := (xx5fcount let18)
  let let190 := (Eq let189 let188)
  let let191 := (Eq let136 x)
  let let192 := (format let18)
  let let193 := (Eq let192 percent)
  let let194 := (And let193 let191)
  let let195 := (Not let194)
  let let196 := (Implies let195 let190)
  let let197 := (binrel% HAdd.hAdd let188 let1)
  let let198 := (Eq let189 let197)
  let let199 := (Implies let194 let198)
  let let200 := (And let199 let196)
  let let201 := (xx5fcount let25)
  let let202 := (Eq let188 let201)
  let let203 := (Eq let192 x)
  let let204 := (format let46)
  let let205 := (Eq let204 percent)
  let let206 := (And let205 let203)
  let let207 := (Not let206)
  let let208 := (Implies let207 let202)
  let let209 := (binrel% HAdd.hAdd let201 let1)
  let let210 := (Eq let188 let209)
  let let211 := (Implies let206 let210)
  let let212 := (xx5fcount let1)
  let let213 := (Eq let201 let212)
  let let214 := (Eq let204 x)
  let let215 := (Eq let133 percent)
  let let216 := (And let215 let214)
  let let217 := (Not let216)
  let let218 := (Implies let217 let213)
  let let219 := (binrel% HAdd.hAdd let212 let1)
  let let220 := (Eq let201 let219)
  let let221 := (Implies let216 let220)
  let let222 := (xx5fcount let65)
  let let223 := (Eq let212 let222)
  let let224 := (Eq let133 x)
  let let225 := (format let1)
  let let226 := (Eq let225 percent)
  let let227 := (And let226 let224)
  let let228 := (Not let227)
  let let229 := (Implies let228 let223)
  let let230 := (binrel% HAdd.hAdd let222 let1)
  let let231 := (Eq let212 let230)
  let let232 := (Implies let227 let231)
  let let233 := (Eq let222 let65)
  let let234 := (Eq let225 x)
  let let235 := (And let165 let234)
  let let236 := (Not let235)
  let let237 := (Implies let236 let233)
  let let238 := (Eq let222 let1)
  let let239 := (Implies let235 let238)
  let let240 := (sx5fcount let46)
  let let241 := (sx5fcount let18)
  let let242 := (Eq let241 let240)
  let let243 := (And let193 let138)
  let let244 := (Not let243)
  let let245 := (Implies let244 let242)
  let let246 := (binrel% HAdd.hAdd let240 let1)
  let let247 := (Eq let241 let246)
  let let248 := (Implies let243 let247)
  let let249 := (Eq let240 let122)
  let let250 := (Eq let192 s)
  let let251 := (And let205 let250)
  let let252 := (Not let251)
  let let253 := (Implies let252 let249)
  let let254 := (Eq let240 let124)
  let let255 := (Implies let251 let254)
  let let256 := (sx5fcount let1)
  let let257 := (Eq let122 let256)
  let let258 := (Eq let204 s)
  let let259 := (And let215 let258)
  let let260 := (Not let259)
  let let261 := (Implies let260 let257)
  let let262 := (binrel% HAdd.hAdd let256 let1)
  let let263 := (Eq let122 let262)
  let let264 := (Implies let259 let263)
  let let265 := (sx5fcount let65)
  let let266 := (Eq let256 let265)
  let let267 := (Eq let133 s)
  let let268 := (And let226 let267)
  let let269 := (Not let268)
  let let270 := (Implies let269 let266)
  let let271 := (binrel% HAdd.hAdd let265 let1)
  let let272 := (Eq let256 let271)
  let let273 := (Implies let268 let272)
  let let274 := (Eq let265 let65)
  let let275 := (Eq let225 s)
  let let276 := (And let165 let275)
  let let277 := (Not let276)
  let let278 := (Implies let277 let274)
  let let279 := (Eq let265 let1)
  let let280 := (Implies let276 let279)
  let let281 := (Eq let192 let154)
  let let282 := (Eq let192 let157)
  let let283 := (Eq let192 let107)
  let let284 := (Eq let192 let18)
  let let285 := (Eq let192 let46)
  let let286 := (Or (Or (Or (Or (Or (Or (Or let193 let250) let203) let285) let284) let283) let282) let281)
  let let287 := (Eq let204 let154)
  let let288 := (Eq let204 let157)
  let let289 := (Eq let204 let107)
  let let290 := (Eq let204 let18)
  let let291 := (Eq let204 let46)
  let let292 := (Or (Or (Or (Or (Or (Or (Or let205 let258) let214) let291) let290) let289) let288) let287)
  let let293 := (Eq let133 let154)
  let let294 := (Eq let133 let157)
  let let295 := (Eq let133 let107)
  let let296 := (Eq let133 let18)
  let let297 := (Eq let133 let46)
  let let298 := (Or (Or (Or (Or (Or (Or (Or let215 let267) let224) let297) let296) let295) let294) let293)
  let let299 := (Eq let225 let154)
  let let300 := (Eq let225 let157)
  let let301 := (Eq let225 let107)
  let let302 := (Eq let225 let18)
  let let303 := (Eq let225 let46)
  let let304 := (Or (Or (Or (Or (Or (Or (Or let226 let275) let234) let303) let302) let301) let300) let299)
  let let305 := (binrel% HAdd.hAdd fmt0 let1)
  let let306 := (Eq arg1 let305)
  let let307 := (binrel% HAdd.hAdd fmt0 let65)
  let let308 := (Eq arg1 let307)
  let let309 := (Or let308 let306)
  let let310 := (Eq fmt1 let53)
  let let311 := (Eq fmt1 let48)
  let let312 := (Eq fmt1 let45)
  let let313 := (Eq fmt1 let305)
  let let314 := (Eq fmt1 let307)
  let let315 := (Or (Or (Or (Or let314 let313) let312) let311) let310)
  let let316 := (Eq arg1 let33)
  let let317 := (binrel% GT.gt fmt1 let305)
  let let318 := (binrel% GE.ge arg1 fmt0)
  let let319 := (Eq arg0 let153)
  let let320 := (Eq fmt0 let65)
  let let321 := (Int.ofNat 120)
  let let322 := (Eq x let321)
  let let323 := (Eq s let132)
  let let324 := (Int.ofNat 37)
  let let325 := (Eq percent let324)
  let let326 := (Eq adrx5fhi let157)
  let let327 := (Eq adrx5fmedhi let107)
  let let328 := (Eq adrx5fmedlo let18)
  let let329 := (Eq adrx5flo let46)
  let let330 := (Eq fmtx5flength let107)
  let let331 := (Eq distance let69)
  let let332 := (And let331 (And let330 (And let329 (And let328 (And let327 (And let326 (And let325 (And let323 (And let322 (And let320 (And let319 (And let318 (And let6 (And let317 (And let17 (And let78 (And let316 (And let315 (And let309 (And let167 (And let304 (And let298 (And let292 (And let286 (And let280 (And let278 (And let273 (And let270 (And let264 (And let261 (And let255 (And let253 (And let248 (And let245 (And let239 (And let237 (And let232 (And let229 (And let221 (And let218 (And let211 (And let208 let200))))))))))))))))))))))))))))))))))))))))))
  let let333 := (And (And (And (And (And (And (And (And (And (And (And let331 let330) let329) let328) let327) let326) (And (And let325 let323) let322)) (And (And (And (And (And (And (And let320 let319) let318) let6) let317) let17) let78) let316)) (And let315 let309)) (And (And (And (And let167 let304) let298) let292) let286)) (And (And (And (And (And let280 let278) (And let273 let270)) (And let264 let261)) (And let255 let253)) (And let248 let245))) (And (And (And (And (And let239 let237) (And let232 let229)) (And let221 let218)) (And let211 let208)) let200))
  let let334 := (Eq let324 let324)
  let let335 := (Eq let155 let321)
  let let336 := (Eq let321 let155)
  let let337 := (binrel% HAdd.hAdd let1 arg1)
  let let338 := (format let337)
  let let339 := (Eq adrx5fmedlo let338)
  let let340 := (Eq let338 adrx5fmedlo)
  let let341 := (binrel% HAdd.hAdd let46 arg1)
  let let342 := (Eq let192 let132)
  let let343 := (Eq let132 let192)
  let let344 := (Not let171)
  let let345 := (binrel% HAdd.hAdd let1 let71)
  let let346 := (Eq fmt0 let37)
  let let347 := (Eq fmt1 let44)
  let let348 := (Eq fmt1 let18)
  let let349 := (Eq let65 let54)
  let let350 := (Eq let225 let132)
  let let351 := (Eq let132 let225)
  let let352 := (binrel% HAdd.hAdd let36 (binrel% HAdd.hAdd let65 fmt1))
  let let353 := (binrel% HAdd.hAdd let25 let71)
  let let354 := (binrel% LE.le fmt1 let305)
  let let355 := (Not let354)
  let let356 := (Eq let101 let324)
  let let357 := (Eq let324 let101)
  let let358 := (Eq let240 (binrel% HAdd.hAdd let7 let241))
  let let359 := (binrel% HAdd.hAdd let1 let240)
  let let360 := (Eq let241 let359)
  let let361 := (Eq let345 let179)
  let let362 := (Eq let136 let132)
  let let363 := (Eq let132 let136)
  let let364 := (Eq let225 let321)
  let let365 := (Eq let321 let225)
  let let366 := (Eq let222 let212)
  let let367 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let65)))
  let let368 := (Eq x let192)
  let let369 := (binrel% HAdd.hAdd (Neg.neg (Int.ofNat 13)) let68)
  let let370 := (Eq let353 let369)
  let let371 := (Eq let155 let324)
  let let372 := (Eq let324 let155)
  let let373 := (binrel% HAdd.hAdd let65 (binrel% HAdd.hAdd let57 let107))
  let let374 := (Or let314 (Or let313 (Or let312 (Or let311 let310))))
  let let375 := (Eq let122 (binrel% HAdd.hAdd let7 let240))
  let let376 := (Eq let240 let123)
  let let377 := (format let111)
  let let378 := (Eq let377 let157)
  let let379 := (Eq let157 let377)
  let let380 := (Eq let155 let132)
  let let381 := (Eq let132 let155)
  let let382 := (Eq let157 let157)
  let let383 := (binrel% HAdd.hAdd distance fmtx5flength)
  let let384 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let13 let383))
  let let385 := (binrel% GE.ge let384 let107)
  let let386 := (Not let385)
  let let387 := (Not let386)
  let let388 := (Eq let132 let132)
  let let389 := (binrel% HAdd.hAdd let1 let212)
  let let390 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let67 (binrel% HAdd.hAdd let66 let142)))
  let let391 := (binrel% HAdd.hAdd let71 let142)
  let let392 := (Eq let192 let324)
  let let393 := (Eq let324 let192)
  let let394 := (Not let60)
  let let395 := (Eq let188 (binrel% HAdd.hAdd let7 let189))
  let let396 := (binrel% HAdd.hAdd let1 let188)
  let let397 := (Eq let189 let396)
  let let398 := (Eq let192 let321)
  let let399 := (Eq let321 let192)
  let let400 := (Eq let136 let321)
  let let401 := (Eq let321 let136)
  let let402 := (Eq let201 let188)
  let let403 := (binrel% GE.ge let106 let107)
  let let404 := (format let341)
  let let405 := (Eq adrx5fhi let404)
  let let406 := (Eq let404 adrx5fhi)
  let let407 := (binrel% HAdd.hAdd fmtx5flength let7)
  let let408 := (Eq let204 let324)
  let let409 := (Eq let324 let204)
  let let410 := (Eq let201 (binrel% HAdd.hAdd let7 let188))
  let let411 := (binrel% HAdd.hAdd let1 let201)
  let let412 := (Eq let188 let411)
  let let413 := (Eq let133 let321)
  let let414 := (Eq let321 let133)
  let let415 := (Eq let204 let321)
  let let416 := (Eq let321 let204)
  let let417 := (Eq let212 let201)
  let let418 := (Eq let212 (binrel% HAdd.hAdd let7 let201))
  let let419 := (Eq let201 let389)
  let let420 := (Eq let225 let324)
  let let421 := (Eq let324 let225)
  let let422 := (format let369)
  let let423 := (Eq let422 let107)
  let let424 := (Eq let107 let422)
  let let425 := (Eq let71 let1)
  let let426 := (Eq let222 (binrel% HAdd.hAdd let7 let212))
  let let427 := (binrel% HAdd.hAdd let1 let222)
  let let428 := (Eq let212 let427)
  let let429 := (Eq let204 let132)
  let let430 := (Eq let132 let204)
  let let431 := (binrel% HMul.hMul let7 let69)
  let let432 := (Eq let65 let65)
  let let433 := (Eq let321 let321)
  let let434 := (binrel% HAdd.hAdd let26 let39)
  let let435 := (binrel% HAdd.hAdd let1 let265)
  let let436 := (Eq let107 let107)
  let let437 := (Eq adrx5flo let96)
  let let438 := (Eq let18 let18)
  let let439 := (Eq let46 let46)
  let let440 := (binrel% HAdd.hAdd let25 arg1)
  let let441 := (format let440)
  let let442 := (Eq adrx5fmedhi let441)
  let let443 := (Eq let441 adrx5fmedhi)
  let let444 := (Eq percent let133)
  let let445 := (binrel% HAdd.hAdd let22 (binrel% HAdd.hAdd arg0 let383))
  let let446 := (binrel% GE.ge arg1 let445)
  let let447 := (Eq s let174)
  let let448 := (Eq let174 s)
  let let449 := (Eq percent let101)
  let let450 := (Eq let188 let189)
  let let451 := (Eq let122 let240)
  let let452 := (Eq fmt1 let65)
  let let453 := (Eq let65 fmt1)
  let let454 := (Eq s let192)
  let let455 := (Eq percent let192)
  let let456 := (Eq x let136)
  let let457 := (Or let297 (Or let296 (Or let295 (Or let294 let293))))
  let let458 := (Or let215 (Or let267 (Or let224 let457)))
  let let459 := (Eq percent let204)
  let let460 := (binrel% HAdd.hAdd arg1 let39)
  let let461 := (binrel% GE.ge let460 let65)
  let let462 := (Eq x let204)
  let let463 := (Eq x let133)
  let let464 := (Eq percent let225)
  let let465 := (binrel% HAdd.hAdd let1 let65)
  let let466 := (Eq x let225)
  let let467 := (Eq percent let155)
  let let468 := (Eq let240 let241)
  let let469 := (xx5fcount let40)
  let let470 := (binrel% HMul.hMul let22 let469)
  let let471 := (sx5fcount let40)
  let let472 := (binrel% HMul.hMul let22 let471)
  let let473 := (binrel% HAdd.hAdd arg1 (binrel% HAdd.hAdd let472 let470))
  let let474 := (Eq arg0 let473)
  let let475 := (binrel% HMul.hMul let18 let469)
  let let476 := (binrel% HMul.hMul let18 let471)
  let let477 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd let476 let475))
  let let478 := (Eq arg1 let477)
  let let479 := (Eq let256 let122)
  let let480 := (Eq s let204)
  let let481 := (Eq let256 (binrel% HAdd.hAdd let7 let122))
  let let482 := (binrel% HAdd.hAdd let1 let256)
  let let483 := (Eq let122 let482)
  let let484 := (Eq let265 let256)
  let let485 := (Eq s let133)
  let let486 := (Eq let265 (binrel% HAdd.hAdd let7 let256))
  let let487 := (Eq let256 let435)
  let let488 := (binrel% HAdd.hAdd let65 let70)
  let let489 := (Eq let133 let324)
  let let490 := (Eq let324 let133)
  let let491 := (Eq x let155)
  let let492 := (Eq s let225)
  let let493 := (binrel% HAdd.hAdd arg0 (binrel% HAdd.hAdd distance let23))
  let let494 := (Or let285 (Or let284 (Or let283 (Or let282 let281))))
  let let495 := (Or let193 (Or let250 (Or let203 let494)))
  let let496 := (Or let291 (Or let290 (Or let289 (Or let288 let287))))
  let let497 := (Or let205 (Or let258 (Or let214 let496)))
  let let498 := (And let392 let400)
  let let499 := (Not let498)
  let let500 := (Implies let499 let450)
  let let501 := (Implies let498 let395)
  let let502 := (And let408 let398)
  let let503 := (Not let502)
  let let504 := (Implies let503 let402)
  let let505 := (Implies let502 let410)
  let let506 := (And let489 let415)
  let let507 := (Not let506)
  let let508 := (Implies let507 let417)
  let let509 := (Implies let506 let418)
  let let510 := (And let420 let413)
  let let511 := (Not let510)
  let let512 := (Implies let511 let366)
  let let513 := (Implies let510 let426)
  let let514 := (And let371 let364)
  let let515 := (Not let514)
  let let516 := (Implies let515 let233)
  let let517 := (Implies let514 let238)
  let let518 := (And let392 let362)
  let let519 := (Not let518)
  let let520 := (Implies let519 let468)
  let let521 := (Implies let518 let358)
  let let522 := (And let408 let342)
  let let523 := (Not let522)
  let let524 := (Implies let523 let451)
  let let525 := (Implies let522 let375)
  let let526 := (And let489 let429)
  let let527 := (Not let526)
  let let528 := (Implies let527 let479)
  let let529 := (Implies let526 let481)
  let let530 := (And let420 let134)
  let let531 := (Not let530)
  let let532 := (Implies let531 let484)
  let let533 := (Implies let530 let486)
  let let534 := (And let371 let350)
  let let535 := (Not let534)
  let let536 := (Implies let535 let274)
  let let537 := (Implies let534 let279)
  let let538 := (Or let392 (Or let342 (Or let398 let494)))
  let let539 := (Or let408 (Or let429 (Or let415 let496)))
  let let540 := (Or let489 (Or let134 (Or let413 let457)))
  let let541 := (Or let303 (Or let302 (Or let301 (Or let300 let299))))
  let let542 := (Or let420 (Or let350 (Or let364 let541)))
  let let543 := (Or let371 (Or let380 (Or let335 let162)))
  let let544 := (Or let452 (Or let186 (Or let73 (Or let177 let348))))
  let let545 := (And let544 (And let168 (And let543 (And let542 (And let540 (And let539 (And let538 (And let537 (And let536 (And let533 (And let532 (And let529 (And let528 (And let525 (And let524 (And let521 (And let520 (And let517 (And let516 (And let513 (And let512 (And let509 (And let508 (And let505 (And let504 (And let501 let500))))))))))))))))))))))))))
  let let546 := (And let64 (And let118 (And let170 (And let84 let545))))
  let let547 := (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And True (And let64 (And let118 (And let170 (And let64 (And let84 (And True let545)))))))))))))))))
  let let548 := (Or let226 (Or let275 (Or let234 let541)))
  let let549 := (Eq s let155)
  let let550 := (Implies let333 let105)
  let let551 := (Not let550)
  let let552 := (Not let356)
  let let553 := (And let552 (And let175 (And let130 (And let181 (And let423 let378)))))
  let let554 := (Implies let546 let553)
  let let555 := (Not let554)
  let let556 := (Not let449)
  let let557 := (And let556 (And let447 (And let437 (And let339 (And let442 let405)))))
  let let558 := (And let455 let456)
  let let559 := (Not let558)
  let let560 := (Implies let559 let450)
  let let561 := (Implies let558 let395)
  let let562 := (And let459 let368)
  let let563 := (Not let562)
  let let564 := (Implies let563 let402)
  let let565 := (Implies let562 let410)
  let let566 := (And let444 let462)
  let let567 := (Not let566)
  let let568 := (Implies let567 let417)
  let let569 := (Implies let566 let418)
  let let570 := (And let464 let463)
  let let571 := (Not let570)
  let let572 := (Implies let571 let366)
  let let573 := (Implies let570 let426)
  let let574 := (And let467 let466)
  let let575 := (Not let574)
  let let576 := (Implies let575 let233)
  let let577 := (Implies let574 let238)
  let let578 := (And let455 let137)
  let let579 := (Not let578)
  let let580 := (Implies let579 let468)
  let let581 := (Implies let578 let358)
  let let582 := (And let459 let454)
  let let583 := (Not let582)
  let let584 := (Implies let583 let451)
  let let585 := (Implies let582 let375)
  let let586 := (And let444 let480)
  let let587 := (Not let586)
  let let588 := (Implies let587 let479)
  let let589 := (Implies let586 let481)
  let let590 := (And let464 let485)
  let let591 := (Not let590)
  let let592 := (Implies let591 let484)
  let let593 := (Implies let590 let486)
  let let594 := (And let467 let492)
  let let595 := (Not let594)
  let let596 := (Implies let595 let274)
  let let597 := (Implies let594 let279)
  let let598 := (Or let455 (Or let454 (Or let368 let494)))
  let let599 := (Or let459 (Or let480 (Or let462 let496)))
  let let600 := (Or let444 (Or let485 (Or let463 let457)))
  let let601 := (Or let464 (Or let492 (Or let466 let541)))
  let let602 := (Or let467 (Or let549 (Or let491 let162)))
  let let603 := (Eq arg1 let127)
  let let604 := (Eq arg1 fmt0)
  let let605 := (Or let604 let603)
  let let606 := (Or let42 (Or let184 (Or let346 (Or let50 let55))))
  let let607 := (Not let126)
  let let608 := (Eq arg0 let152)
  let let609 := (And let331 (And let330 (And let329 (And let328 (And let327 (And let326 (And let325 (And let323 (And let322 (And let320 (And let608 (And let461 (And let59 (And let607 (And let16 (And let385 (And let474 (And let606 (And let605 (And let602 (And let601 (And let600 (And let599 (And let598 (And let597 (And let596 (And let593 (And let592 (And let589 (And let588 (And let585 (And let584 (And let581 (And let580 (And let577 (And let576 (And let573 (And let572 (And let569 (And let568 (And let565 (And let564 (And let561 let560)))))))))))))))))))))))))))))))))))))))))))
  let let610 := (Implies let609 let557)
  let let611 := (Not let610)
  let let612 := (format let112)
  let let613 := (Eq let157 let612)
  let let614 := (format let353)
  let let615 := (Eq let107 let614)
  let let616 := (format let345)
  let let617 := (Eq let18 let616)
  let let618 := (Not let357)
  let let619 := (And let618 (And let176 (And let131 (And let617 (And let615 let613)))))
  let let620 := (And let393 let401)
  let let621 := (Not let620)
  let let622 := (Implies let621 let450)
  let let623 := (Implies let620 let395)
  let let624 := (And let409 let399)
  let let625 := (Not let624)
  let let626 := (Implies let625 let402)
  let let627 := (Implies let624 let410)
  let let628 := (And let490 let416)
  let let629 := (Not let628)
  let let630 := (Implies let629 let417)
  let let631 := (Implies let628 let418)
  let let632 := (And let421 let414)
  let let633 := (Not let632)
  let let634 := (Implies let633 let366)
  let let635 := (Implies let632 let426)
  let let636 := (And let372 let365)
  let let637 := (Not let636)
  let let638 := (Implies let637 let233)
  let let639 := (Implies let636 let238)
  let let640 := (And let393 let363)
  let let641 := (Not let640)
  let let642 := (Implies let641 let468)
  let let643 := (Implies let640 let358)
  let let644 := (And let409 let343)
  let let645 := (Not let644)
  let let646 := (Implies let645 let451)
  let let647 := (Implies let644 let375)
  let let648 := (And let490 let430)
  let let649 := (Not let648)
  let let650 := (Implies let649 let479)
  let let651 := (Implies let648 let481)
  let let652 := (And let421 let135)
  let let653 := (Not let652)
  let let654 := (Implies let653 let484)
  let let655 := (Implies let652 let486)
  let let656 := (And let372 let351)
  let let657 := (Not let656)
  let let658 := (Implies let657 let274)
  let let659 := (Implies let656 let279)
  let let660 := (Or let393 (Or let343 (Or let399 let494)))
  let let661 := (Or let409 (Or let430 (Or let416 let496)))
  let let662 := (Or let490 (Or let135 (Or let414 let457)))
  let let663 := (Or let421 (Or let351 (Or let365 let541)))
  let let664 := (Or let372 (Or let381 (Or let336 let162)))
  let let665 := (Eq let71 let465)
  let let666 := (Or let139 let665)
  let let667 := (Or let453 (Or let187 (Or let74 (Or let178 let349))))
  let let668 := (Eq let70 let150)
  let let669 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let110 let108))
  let let670 := (binrel% GE.ge let669 let107)
  let let671 := (binrel% HAdd.hAdd let70 (binrel% HAdd.hAdd let110 let69))
  let let672 := (binrel% GE.ge let671 let1)
  let let673 := (Not let672)
  let let674 := (binrel% GE.ge let140 let7)
  let let675 := (Not let674)
  let let676 := (binrel% GE.ge let373 let25)
  let let677 := (binrel% GE.ge let391 let65)
  let let678 := (binrel% HAdd.hAdd let65 let431)
  let let679 := (Eq let70 let678)
  let let680 := (And let117 (And let436 (And let439 (And let438 (And let436 (And let382 (And let334 (And let388 (And let433 (And let432 (And let679 (And let677 (And let676 (And let675 (And let673 (And let670 (And let668 (And let667 (And let666 (And let664 (And let663 (And let662 (And let661 (And let660 (And let659 (And let658 (And let655 (And let654 (And let651 (And let650 (And let647 (And let646 (And let643 (And let642 (And let639 (And let638 (And let635 (And let634 (And let631 (And let630 (And let627 (And let626 (And let623 let622)))))))))))))))))))))))))))))))))))))))))))
  let let681 := (Implies let680 let619)
  let let682 := (Not let681)
  let let683 := (Eq And And)
  let let684 := (Eq let450 let450)
  let let685 := (Eq let395 let395)
  let let686 := (Eq let402 let402)
  let let687 := (Eq let410 let410)
  let let688 := (Eq let417 let417)
  let let689 := (Eq let418 let418)
  let let690 := (Eq let366 let366)
  let let691 := (Eq let426 let426)
  let let692 := (Eq let233 let233)
  let let693 := (Eq let238 let238)
  let let694 := (Eq let468 let468)
  let let695 := (Eq let358 let358)
  let let696 := (Eq let451 let451)
  let let697 := (Eq let375 let375)
  let let698 := (Eq let479 let479)
  let let699 := (Eq let481 let481)
  let let700 := (Eq let484 let484)
  let let701 := (Eq let486 let486)
  let let702 := (Eq let274 let274)
  let let703 := (Eq let279 let279)
  let let704 := (Eq let281 let281)
  let let705 := (Eq let282 let282)
  let let706 := (Eq Or Or)
  let let707 := (Eq let283 let283)
  let let708 := (Eq let284 let284)
  let let709 := (Eq let285 let285)
  let let710 := (Eq let287 let287)
  let let711 := (Eq let288 let288)
  let let712 := (Eq let289 let289)
  let let713 := (Eq let290 let290)
  let let714 := (Eq let291 let291)
  let let715 := (Eq let293 let293)
  let let716 := (Eq let294 let294)
  let let717 := (Eq let295 let295)
  let let718 := (Eq let296 let296)
  let let719 := (Eq let297 let297)
  let let720 := (Eq let299 let299)
  let let721 := (Eq let300 let300)
  let let722 := (Eq let301 let301)
  let let723 := (Eq let302 let302)
  let let724 := (Eq let303 let303)
  let let725 := (Eq let156 let156)
  let let726 := (Eq let158 let158)
  let let727 := (Eq let159 let159)
  let let728 := (Eq let160 let160)
  let let729 := (Eq let161 let161)
  let let730 := (Eq fmt1 fmt1)
  let let731 := (Eq let36 let36)
  let let732 := (Eq let22 let22)
  let let733 := (Eq let1 let1)
  let let734 := (Eq let7 let7)
  let let735 := (Eq let25 let25)
  let let736 := (And let320 (And let322 (And let323 (And let325 (And let326 (And let327 (And let328 (And let329 (And let330 let331)))))))))
  let let737 := (Eq arg0 let70)
  let let738 := (And let737 let736)
  let let739 := (Eq arg1 arg1)
  let let740 := (Eq arg0 arg0)
  let let741 := (Eq let75 let445)
  let let742 := (Eq arg0 let678)
  let let743 := (Eq let152 let678)
  let let744 := (Eq let151 let431)
  let let745 := (binrel% HAdd.hAdd arg1 let148)
  let let746 := (Eq let70 let745)
  let let747 := (Eq let470 let145)
  let let748 := (Eq let469 let144)
  let let749 := (Eq let40 let143)
  let let750 := (Eq let39 let142)
  let let751 := (Eq let472 let147)
  let let752 := (Eq let471 let146)
fun lean_r0 : (Eq let6 let5) => -- THEORY_REWRITE_ARITH
fun lean_r1 : (Eq let2 let9) => -- THEORY_REWRITE_ARITH
fun lean_r2 : (Eq let12 let10) => -- THEORY_REWRITE_ARITH
fun lean_r3 : (Eq let17 let16) => -- THEORY_REWRITE_ARITH
fun lean_r4 : (Eq let21 let20) => -- THEORY_REWRITE_ARITH
fun lean_r5 : (Eq let24 let23) => -- THEORY_REWRITE_ARITH
fun lean_r6 : (Eq let33 let32) => -- THEORY_REWRITE_ARITH
fun lean_r7 : (Eq let26 let35) => -- THEORY_REWRITE_ARITH
fun lean_r8 : (Eq let34 let36) => -- THEORY_REWRITE_ARITH
fun lean_r9 : (Eq let38 let37) => -- THEORY_REWRITE_ARITH
fun lean_r10 : (Eq let41 let40) => -- THEORY_REWRITE_ARITH
fun lean_r11 : (Eq let43 let42) => -- THEORY_REWRITE_ARITH
fun lean_r12 : (Eq let45 let44) => -- THEORY_REWRITE_ARITH
fun lean_r13 : (Eq let48 let47) => -- THEORY_REWRITE_ARITH
fun lean_r14 : (Eq let51 let50) => -- THEORY_REWRITE_ARITH
fun lean_r15 : (Eq let53 let52) => -- THEORY_REWRITE_ARITH
fun lean_r16 : (Eq let56 let55) => -- THEORY_REWRITE_ARITH
fun lean_r17 : (Eq let61 let60) => -- THEORY_REWRITE_ARITH
fun lean_r18 : (Eq let72 let64) => -- THEORY_REWRITE_ARITH
fun lean_r19 : (Eq let74 let73) => -- THEORY_REWRITE_ARITH
fun lean_r20 : (Eq let78 let77) => -- THEORY_REWRITE_ARITH
fun lean_r21 : (Eq let83 let82) => -- THEORY_REWRITE_ARITH
fun lean_r22 : (Eq let85 let84) => -- THEORY_REWRITE_ARITH
fun lean_r23 : (Eq let86 let64) => -- THEORY_REWRITE_BOOL
fun lean_r24 : (Eq let105 let104) => -- THEORY_REWRITE_BOOL
fun lean_r25 : (Eq let109 let106) => -- THEORY_REWRITE_ARITH
fun lean_r26 : (Eq let110 let82) => -- THEORY_REWRITE_ARITH
fun lean_r27 : let113 => -- THEORY_REWRITE_ARITH
fun lean_r28 : (Eq let116 let114) => -- THEORY_REWRITE_ARITH
fun lean_r29 : (Eq let117 True) => -- THEORY_REWRITE_ARITH
fun lean_r30 : (Eq let120 let118) => -- THEORY_REWRITE_ARITH
fun lean_r31 : (Eq let121 let70) => -- THEORY_REWRITE_ARITH
fun lean_r32 : (Eq let124 let123) => -- THEORY_REWRITE_ARITH
fun lean_r33 : (Eq let128 let126) => -- THEORY_REWRITE_ARITH
fun lean_r34 : (Eq let131 let130) => -- THEORY_REWRITE_ARITH
fun lean_r35 : (Eq let135 let134) => -- THEORY_REWRITE_ARITH
fun lean_r36 : (Eq let138 let137) => -- THEORY_REWRITE_ARITH
fun lean_r37 : (Eq let139 False) => -- THEORY_REWRITE_ARITH
fun lean_r38 : (Eq let112 let112) => -- THEORY_REWRITE_ARITH
fun lean_r39 : (Eq let140 let57) => -- THEORY_REWRITE_ARITH
fun lean_r40 : (Eq let141 True) => -- THEORY_REWRITE_ARITH
fun lean_r41 : (Eq let150 let149) => -- THEORY_REWRITE_ARITH
fun lean_r42 : (Eq let153 let152) => -- THEORY_REWRITE_ARITH
fun lean_r43 : (Eq let167 let166) => -- THEORY_REWRITE_BOOL
fun lean_r44 : (Eq let169 let168) => -- THEORY_REWRITE_BOOL
fun lean_r45 : (Eq let172 let171) => -- THEORY_REWRITE_ARITH
fun lean_r46 : (Eq let176 let175) => -- THEORY_REWRITE_ARITH
fun lean_r47 : (Eq let178 let177) => -- THEORY_REWRITE_ARITH
fun lean_r48 : (Eq let182 let181) => -- THEORY_REWRITE_ARITH
fun lean_r49 : (Eq let185 let184) => -- THEORY_REWRITE_ARITH
fun lean_r50 : (Eq let187 let186) => -- THEORY_REWRITE_ARITH
fun lean_r51 : (Eq let333 let332) => -- THEORY_REWRITE_BOOL
fun lean_r52 : (Eq let334 True) => -- THEORY_REWRITE_ARITH
fun lean_r53 : (Eq let336 let335) => -- THEORY_REWRITE_ARITH
fun lean_r54 : (Eq let340 let339) => -- THEORY_REWRITE_ARITH
fun lean_r55 : (Eq let87 let341) => -- THEORY_REWRITE_ARITH
fun lean_r56 : (Eq let343 let342) => -- THEORY_REWRITE_ARITH
fun lean_r57 : (Eq let98 let173) => -- THEORY_REWRITE_ARITH
fun lean_r58 : (Eq let344 let170) => -- THEORY_REWRITE_BOOL
fun lean_r59 : (Eq let345 let345) => -- THEORY_REWRITE_ARITH
fun lean_r60 : (Eq let347 let346) => -- THEORY_REWRITE_ARITH
fun lean_r61 : (Eq let349 let348) => -- THEORY_REWRITE_ARITH
fun lean_r62 : (Eq let351 let350) => -- THEORY_REWRITE_ARITH
fun lean_r63 : (Eq let352 let37) => -- THEORY_REWRITE_ARITH
fun lean_r64 : (Eq let75 let75) => -- THEORY_REWRITE_ARITH
fun lean_r65 : (Eq let353 let353) => -- THEORY_REWRITE_ARITH
fun lean_r66 : (Eq let317 let355) => -- THEORY_REWRITE_ARITH
fun lean_r67 : (Eq let357 let356) => -- THEORY_REWRITE_ARITH
fun lean_r68 : (Eq let360 let358) => -- THEORY_REWRITE_ARITH
fun lean_r69 : let361 => -- THEORY_REWRITE_ARITH
fun lean_r70 : (Eq let363 let362) => -- THEORY_REWRITE_ARITH
fun lean_r71 : (Eq let365 let364) => -- THEORY_REWRITE_ARITH
fun lean_r72 : (Eq let223 let366) => -- THEORY_REWRITE_ARITH
fun lean_r73 : (Eq let367 let71) => -- THEORY_REWRITE_ARITH
fun lean_r74 : (Eq let203 let368) => -- THEORY_REWRITE_ARITH
fun lean_r75 : let370 => -- THEORY_REWRITE_ARITH
fun lean_r76 : (Eq let372 let371) => -- THEORY_REWRITE_ARITH
fun lean_r77 : (Eq let373 let119) => -- THEORY_REWRITE_ARITH
fun lean_r78 : (Eq let315 let374) => -- THEORY_REWRITE_BOOL
fun lean_r79 : (Eq let376 let375) => -- THEORY_REWRITE_ARITH
fun lean_r80 : (Eq let379 let378) => -- THEORY_REWRITE_ARITH
fun lean_r81 : (Eq let381 let380) => -- THEORY_REWRITE_ARITH
fun lean_r82 : (Eq let382 True) => -- THEORY_REWRITE_ARITH
fun lean_r83 : (Eq let387 let385) => -- THEORY_REWRITE_BOOL
fun lean_r84 : (Eq let93 let337) => -- THEORY_REWRITE_ARITH
fun lean_r85 : (Eq let307 fmt0) => -- THEORY_REWRITE_ARITH
fun lean_r86 : (Eq let388 True) => -- THEORY_REWRITE_ARITH
fun lean_r87 : (Eq let219 let389) => -- THEORY_REWRITE_ARITH
fun lean_r88 : (Eq let391 let390) => -- THEORY_REWRITE_ARITH
fun lean_r89 : (Eq let393 let392) => -- THEORY_REWRITE_ARITH
fun lean_r90 : (Eq let394 let59) => -- THEORY_REWRITE_BOOL
fun lean_r91 : (Eq let397 let395) => -- THEORY_REWRITE_ARITH
fun lean_r92 : (Eq let399 let398) => -- THEORY_REWRITE_ARITH
fun lean_r93 : (Eq let401 let400) => -- THEORY_REWRITE_ARITH
fun lean_r94 : (Eq let202 let402) => -- THEORY_REWRITE_ARITH
fun lean_r95 : (Eq let403 let84) => -- THEORY_REWRITE_ARITH
fun lean_r96 : (Eq let406 let405) => -- THEORY_REWRITE_ARITH
fun lean_r97 : (Eq let407 let11) => -- THEORY_REWRITE_ARITH
fun lean_r98 : (Eq let409 let408) => -- THEORY_REWRITE_ARITH
fun lean_r99 : (Eq let412 let410) => -- THEORY_REWRITE_ARITH
fun lean_r100 : (Eq let414 let413) => -- THEORY_REWRITE_ARITH
fun lean_r101 : (Eq let416 let415) => -- THEORY_REWRITE_ARITH
fun lean_r102 : (Eq let213 let417) => -- THEORY_REWRITE_ARITH
fun lean_r103 : (Eq let419 let418) => -- THEORY_REWRITE_ARITH
fun lean_r104 : (Eq let421 let420) => -- THEORY_REWRITE_ARITH
fun lean_r105 : (Eq let19 let22) => -- THEORY_REWRITE_ARITH
fun lean_r106 : (Eq let424 let423) => -- THEORY_REWRITE_ARITH
fun lean_r107 : (Eq let425 let168) => -- THEORY_REWRITE_ARITH
fun lean_r108 : (Eq let428 let426) => -- THEORY_REWRITE_ARITH
fun lean_r109 : (Eq let430 let429) => -- THEORY_REWRITE_ARITH
fun lean_r110 : (Eq let431 let70) => -- THEORY_REWRITE_ARITH
fun lean_r111 : (Eq let432 True) => -- THEORY_REWRITE_ARITH
fun lean_r112 : (Eq let433 True) => -- THEORY_REWRITE_ARITH
fun lean_r113 : (Eq let27 let434) => -- THEORY_REWRITE_ARITH
fun lean_r114 : (Eq let142 let65) => -- THEORY_REWRITE_ARITH
fun lean_r115 : (Eq let271 let435) => -- THEORY_REWRITE_ARITH
fun lean_r116 : (Eq let436 True) => -- THEORY_REWRITE_ARITH
fun lean_r117 : (Eq let97 let437) => -- THEORY_REWRITE_ARITH
fun lean_r118 : (Eq let438 True) => -- THEORY_REWRITE_ARITH
fun lean_r119 : (Eq let439 True) => -- THEORY_REWRITE_ARITH
fun lean_r120 : (Eq let443 let442) => -- THEORY_REWRITE_ARITH
fun lean_r121 : (Eq let90 let440) => -- THEORY_REWRITE_ARITH
fun lean_r122 : (Eq let215 let444) => -- THEORY_REWRITE_ARITH
fun lean_r123 : (Eq let446 let386) => -- THEORY_REWRITE_ARITH
fun lean_r124 : (Eq let448 let447) => -- THEORY_REWRITE_ARITH
fun lean_r125 : (Eq let102 let449) => -- THEORY_REWRITE_ARITH
fun lean_r126 : (Eq let190 let450) => -- THEORY_REWRITE_ARITH
fun lean_r127 : (Eq let249 let451) => -- THEORY_REWRITE_ARITH
fun lean_r128 : (Eq let453 let452) => -- THEORY_REWRITE_ARITH
fun lean_r129 : (Eq let250 let454) => -- THEORY_REWRITE_ARITH
fun lean_r130 : (Eq let193 let455) => -- THEORY_REWRITE_ARITH
fun lean_r131 : (Eq let191 let456) => -- THEORY_REWRITE_ARITH
fun lean_r132 : (Eq let298 let458) => -- THEORY_REWRITE_BOOL
fun lean_r133 : (Eq let197 let396) => -- THEORY_REWRITE_ARITH
fun lean_r134 : (Eq let205 let459) => -- THEORY_REWRITE_ARITH
fun lean_r135 : (Eq let8 let7) => -- THEORY_REWRITE_ARITH
fun lean_r136 : (Eq let209 let411) => -- THEORY_REWRITE_ARITH
fun lean_r137 : (Eq let318 let461) => -- THEORY_REWRITE_ARITH
fun lean_r138 : (Eq let214 let462) => -- THEORY_REWRITE_ARITH
fun lean_r139 : (Eq let224 let463) => -- THEORY_REWRITE_ARITH
fun lean_r140 : (Eq let226 let464) => -- THEORY_REWRITE_ARITH
fun lean_r141 : (Eq let465 let1) => -- THEORY_REWRITE_ARITH
fun lean_r142 : (Eq let230 let427) => -- THEORY_REWRITE_ARITH
fun lean_r143 : (Eq let234 let466) => -- THEORY_REWRITE_ARITH
fun lean_r144 : (Eq let165 let467) => -- THEORY_REWRITE_ARITH
fun lean_r145 : (Eq let242 let468) => -- THEORY_REWRITE_ARITH
fun lean_r146 : (Eq let246 let359) => -- THEORY_REWRITE_ARITH
fun lean_r147 : (Eq let478 let474) => -- THEORY_REWRITE_ARITH
fun lean_r148 : (Eq let257 let479) => -- THEORY_REWRITE_ARITH
fun lean_r149 : (Eq let258 let480) => -- THEORY_REWRITE_ARITH
fun lean_r150 : (Eq let483 let481) => -- THEORY_REWRITE_ARITH
fun lean_r151 : (Eq let262 let482) => -- THEORY_REWRITE_ARITH
fun lean_r152 : (Eq let266 let484) => -- THEORY_REWRITE_ARITH
fun lean_r153 : (Eq let267 let485) => -- THEORY_REWRITE_ARITH
fun lean_r154 : (Eq let487 let486) => -- THEORY_REWRITE_ARITH
fun lean_r155 : (Eq let488 let70) => -- THEORY_REWRITE_ARITH
fun lean_r156 : (Eq let490 let489) => -- THEORY_REWRITE_ARITH
fun lean_r157 : (Eq let163 let491) => -- THEORY_REWRITE_ARITH
fun lean_r158 : (Eq let275 let492) => -- THEORY_REWRITE_ARITH
fun lean_r159 : (Eq let305 let127) => -- THEORY_REWRITE_ARITH
fun lean_r160 : (Eq let493 let445) => -- THEORY_REWRITE_ARITH
fun lean_r161 : (Eq let286 let495) => -- THEORY_REWRITE_BOOL
fun lean_r162 : (Eq let292 let497) => -- THEORY_REWRITE_BOOL
fun lean_r163 : (Eq let547 let546) => -- THEORY_REWRITE_BOOL
fun lean_r164 : (Eq let304 let548) => -- THEORY_REWRITE_BOOL
fun lean_r165 : (Eq let164 let549) => -- THEORY_REWRITE_ARITH
fun lean_a166 : let551 => by
have lean_s0 : let683 := by timed rfl
have lean_s1 : (Eq let331 let331) := by timed rfl
let lean_s2 := by timed congr lean_s0 lean_s1
have lean_s3 : (Eq let330 let330) := by timed rfl
let lean_s4 := by timed congr lean_s0 lean_s3
have lean_s5 : (Eq let329 let329) := by timed rfl
let lean_s6 := by timed congr lean_s0 lean_s5
have lean_s7 : (Eq let328 let328) := by timed rfl
let lean_s8 := by timed congr lean_s0 lean_s7
have lean_s9 : (Eq let327 let327) := by timed rfl
let lean_s10 := by timed congr lean_s0 lean_s9
have lean_s11 : (Eq let326 let326) := by timed rfl
let lean_s12 := by timed congr lean_s0 lean_s11
have lean_s13 : (Eq let325 let325) := by timed rfl
let lean_s14 := by timed congr lean_s0 lean_s13
have lean_s15 : (Eq let323 let323) := by timed rfl
let lean_s16 := by timed congr lean_s0 lean_s15
have lean_s17 : (Eq let322 let322) := by timed rfl
let lean_s18 := by timed congr lean_s0 lean_s17
have lean_s19 : (Eq let320 let320) := by timed rfl
let lean_s20 := by timed congr lean_s0 lean_s19
have lean_s21 : let740 := by timed rfl
let lean_s22 := by timed flipCongrArg lean_s21 [Eq]
have lean_s23 : (Eq let319 let608) := by timed congr lean_s22 lean_r42
let lean_s24 := by timed congr lean_s0 lean_s23
let lean_s25 := by timed congr lean_s0 lean_r137
have lean_s26 : let730 := by timed rfl
let lean_s27 := by timed flipCongrArg lean_s26 [GE.ge]
have lean_s28 : (Eq fmt0 fmt0) := by timed rfl
let lean_s29 := by timed flipCongrArg lean_s28 [HAdd.hAdd]
have lean_s30 : (Eq fmtx5flength fmtx5flength) := by timed rfl
let lean_s31 := by timed flipCongrArg lean_s30 [HAdd.hAdd]
have lean_s32 : (Eq let9 let407) := by timed congr lean_s31 lean_r135
have lean_s33 : (Eq let9 let11) := by timed Eq.trans lean_s32 lean_r97
have lean_s34 : (Eq let2 let11) := by timed Eq.trans lean_r1 lean_s33
have lean_s35 : (Eq let3 let12) := by timed congr lean_s29 lean_s34
have lean_s36 : (Eq let3 let10) := by timed Eq.trans lean_s35 lean_r2
have lean_s37 : (Eq let4 let61) := by timed congr lean_s27 lean_s36
have lean_s38 : (Eq let4 let60) := by timed Eq.trans lean_s37 lean_r17
have lean_s39 : (Eq let5 let394) := by timed flipCongrArg lean_s38 [Not]
have lean_s40 : (Eq let5 let59) := by timed Eq.trans lean_s39 lean_r90
have lean_s41 : (Eq let6 let59) := by timed Eq.trans lean_r0 lean_s40
let lean_s42 := by timed congr lean_s0 lean_s41
let lean_s43 := by timed flipCongrArg lean_s26 [LE.le]
have lean_s44 : (Eq let354 let128) := by timed congr lean_s43 lean_r159
have lean_s45 : (Eq let354 let126) := by timed Eq.trans lean_s44 lean_r33
have lean_s46 : (Eq let355 let607) := by timed flipCongrArg lean_s45 [Not]
have lean_s47 : (Eq let317 let607) := by timed Eq.trans lean_r66 lean_s46
let lean_s48 := by timed congr lean_s0 lean_s47
let lean_s49 := by timed congr lean_s0 lean_r3
have lean_s50 : let739 := by timed rfl
let lean_s51 := by timed flipCongrArg lean_s50 [GE.ge]
have lean_s52 : (Eq distance distance) := by timed rfl
let lean_s53 := by timed flipCongrArg lean_s30 [HAdd.hAdd]
have lean_s54 : (Eq let20 let24) := by timed congr lean_s53 lean_r105
have lean_s55 : (Eq let20 let23) := by timed Eq.trans lean_s54 lean_r5
have lean_s56 : (Eq let21 let23) := by timed Eq.trans lean_r4 lean_s55
let lean_s57 := by timed congrHAdd lean_s52 lean_s56
have lean_s58 : (Eq let75 let493) := by timed congrHAdd lean_s21 lean_s57
have lean_s59 : let741 := by timed Eq.trans lean_s58 lean_r160
have lean_s60 : let741 := by timed Eq.trans lean_r64 lean_s59
have lean_s61 : (Eq let76 let446) := by timed congr lean_s51 lean_s60
have lean_s62 : (Eq let76 let386) := by timed Eq.trans lean_s61 lean_r123
have lean_s63 : (Eq let77 let387) := by timed flipCongrArg lean_s62 [Not]
have lean_s64 : (Eq let77 let385) := by timed Eq.trans lean_s63 lean_r83
have lean_s65 : (Eq let78 let385) := by timed Eq.trans lean_r20 lean_s64
let lean_s66 := by timed congr lean_s0 lean_s65
let lean_s67 := by timed flipCongrArg lean_s50 [Eq]
have lean_s68 : let438 := by timed rfl
let lean_s69 := by timed flipCongrArg lean_s68 [HMul.hMul]
let lean_s70 := by timed flipCongrArg lean_s26 [HAdd.hAdd]
have lean_s71 : (Eq let35 let38) := by timed congr lean_s70 lean_r8
have lean_s72 : (Eq let35 let37) := by timed Eq.trans lean_s71 lean_r9
have lean_s73 : (Eq let26 let37) := by timed Eq.trans lean_r7 lean_s72
let lean_s74 := by timed flipCongrArg lean_s73 [HAdd.hAdd]
have lean_s75 : (Eq let39 let39) := by timed rfl
have lean_s76 : (Eq let434 let41) := by timed congr lean_s74 lean_s75
have lean_s77 : (Eq let434 let40) := by timed Eq.trans lean_s76 lean_r10
have lean_s78 : (Eq let27 let40) := by timed Eq.trans lean_r113 lean_s77
have lean_s79 : (Eq let30 let471) := by timed flipCongrArg lean_s78 [sx5fcount]
have lean_s80 : (Eq let31 let476) := by timed congr lean_s69 lean_s79
let lean_s81 := by timed flipCongrArg lean_s68 [HMul.hMul]
have lean_s82 : (Eq let28 let469) := by timed flipCongrArg lean_s78 [xx5fcount]
have lean_s83 : (Eq let29 let475) := by timed congr lean_s81 lean_s82
let lean_s84 := by timed congrHAdd lean_s80 lean_s83
have lean_s85 : (Eq let32 let477) := by timed congrHAdd lean_s21 lean_s84
have lean_s86 : (Eq let33 let477) := by timed Eq.trans lean_r6 lean_s85
have lean_s87 : (Eq let316 let478) := by timed congr lean_s67 lean_s86
have lean_s88 : (Eq let316 let474) := by timed Eq.trans lean_s87 lean_r147
let lean_s89 := by timed congr lean_s0 lean_s88
have lean_s90 : let706 := by timed rfl
let lean_s91 := by timed flipCongrArg lean_s26 [Eq]
have lean_s92 : (Eq let314 let43) := by timed congr lean_s91 lean_r85
have lean_s93 : (Eq let314 let42) := by timed Eq.trans lean_s92 lean_r11
let lean_s94 := by timed congr lean_s90 lean_s93
let lean_s95 := by timed flipCongrArg lean_s26 [Eq]
have lean_s96 : (Eq let313 let185) := by timed congr lean_s95 lean_r159
have lean_s97 : (Eq let313 let184) := by timed Eq.trans lean_s96 lean_r49
let lean_s98 := by timed congr lean_s90 lean_s97
let lean_s99 := by timed flipCongrArg lean_s26 [Eq]
have lean_s100 : (Eq let312 let347) := by timed congr lean_s99 lean_r12
have lean_s101 : (Eq let312 let346) := by timed Eq.trans lean_s100 lean_r60
let lean_s102 := by timed congr lean_s90 lean_s101
let lean_s103 := by timed flipCongrArg lean_s26 [Eq]
have lean_s104 : (Eq let311 let51) := by timed congr lean_s103 lean_r13
have lean_s105 : (Eq let311 let50) := by timed Eq.trans lean_s104 lean_r14
let lean_s106 := by timed congr lean_s90 lean_s105
let lean_s107 := by timed flipCongrArg lean_s26 [Eq]
have lean_s108 : (Eq let310 let56) := by timed congr lean_s107 lean_r15
have lean_s109 : (Eq let310 let55) := by timed Eq.trans lean_s108 lean_r16
let lean_s110 := by timed congr lean_s106 lean_s109
let lean_s111 := by timed congr lean_s102 lean_s110
let lean_s112 := by timed congr lean_s98 lean_s111
have lean_s113 : (Eq let374 let606) := by timed congr lean_s94 lean_s112
have lean_s114 : (Eq let315 let606) := by timed Eq.trans lean_r78 lean_s113
let lean_s115 := by timed congr lean_s0 lean_s114
let lean_s116 := by timed flipCongrArg lean_s50 [Eq]
have lean_s117 : (Eq let308 let604) := by timed congr lean_s116 lean_r85
let lean_s118 := by timed flipCongrArg lean_s117 [Or]
let lean_s119 := by timed flipCongrArg lean_s50 [Eq]
have lean_s120 : (Eq let306 let603) := by timed congr lean_s119 lean_r159
have lean_s121 : (Eq let309 let605) := by timed congr lean_s118 lean_s120
let lean_s122 := by timed congr lean_s0 lean_s121
have lean_s123 : let706 := by timed rfl
let lean_s124 := by timed congr lean_s123 lean_r144
let lean_s125 := by timed congr lean_s123 lean_r165
let lean_s126 := by timed congr lean_s123 lean_r157
have lean_s127 : let729 := by timed rfl
let lean_s128 := by timed congr lean_s123 lean_s127
have lean_s129 : let728 := by timed rfl
let lean_s130 := by timed congr lean_s123 lean_s129
have lean_s131 : let727 := by timed rfl
let lean_s132 := by timed congr lean_s123 lean_s131
have lean_s133 : let726 := by timed rfl
let lean_s134 := by timed congr lean_s123 lean_s133
have lean_s135 : let725 := by timed rfl
let lean_s136 := by timed congr lean_s134 lean_s135
let lean_s137 := by timed congr lean_s132 lean_s136
let lean_s138 := by timed congr lean_s130 lean_s137
let lean_s139 := by timed congr lean_s128 lean_s138
let lean_s140 := by timed congr lean_s126 lean_s139
let lean_s141 := by timed congr lean_s125 lean_s140
have lean_s142 : (Eq let166 let602) := by timed congr lean_s124 lean_s141
have lean_s143 : (Eq let167 let602) := by timed Eq.trans lean_r43 lean_s142
let lean_s144 := by timed congr lean_s0 lean_s143
have lean_s145 : let706 := by timed rfl
let lean_s146 := by timed congr lean_s145 lean_r140
let lean_s147 := by timed congr lean_s145 lean_r158
let lean_s148 := by timed congr lean_s145 lean_r143
have lean_s149 : let724 := by timed rfl
let lean_s150 := by timed congr lean_s145 lean_s149
have lean_s151 : let723 := by timed rfl
let lean_s152 := by timed congr lean_s145 lean_s151
have lean_s153 : let722 := by timed rfl
let lean_s154 := by timed congr lean_s145 lean_s153
have lean_s155 : let721 := by timed rfl
let lean_s156 := by timed congr lean_s145 lean_s155
have lean_s157 : let720 := by timed rfl
let lean_s158 := by timed congr lean_s156 lean_s157
let lean_s159 := by timed congr lean_s154 lean_s158
let lean_s160 := by timed congr lean_s152 lean_s159
let lean_s161 := by timed congr lean_s150 lean_s160
let lean_s162 := by timed congr lean_s148 lean_s161
let lean_s163 := by timed congr lean_s147 lean_s162
have lean_s164 : (Eq let548 let601) := by timed congr lean_s146 lean_s163
have lean_s165 : (Eq let304 let601) := by timed Eq.trans lean_r164 lean_s164
let lean_s166 := by timed congr lean_s0 lean_s165
have lean_s167 : let706 := by timed rfl
let lean_s168 := by timed congr lean_s167 lean_r122
let lean_s169 := by timed congr lean_s167 lean_r153
let lean_s170 := by timed congr lean_s167 lean_r139
have lean_s171 : let719 := by timed rfl
let lean_s172 := by timed congr lean_s167 lean_s171
have lean_s173 : let718 := by timed rfl
let lean_s174 := by timed congr lean_s167 lean_s173
have lean_s175 : let717 := by timed rfl
let lean_s176 := by timed congr lean_s167 lean_s175
have lean_s177 : let716 := by timed rfl
let lean_s178 := by timed congr lean_s167 lean_s177
have lean_s179 : let715 := by timed rfl
let lean_s180 := by timed congr lean_s178 lean_s179
let lean_s181 := by timed congr lean_s176 lean_s180
let lean_s182 := by timed congr lean_s174 lean_s181
let lean_s183 := by timed congr lean_s172 lean_s182
let lean_s184 := by timed congr lean_s170 lean_s183
let lean_s185 := by timed congr lean_s169 lean_s184
have lean_s186 : (Eq let458 let600) := by timed congr lean_s168 lean_s185
have lean_s187 : (Eq let298 let600) := by timed Eq.trans lean_r132 lean_s186
let lean_s188 := by timed congr lean_s0 lean_s187
have lean_s189 : let706 := by timed rfl
let lean_s190 := by timed congr lean_s189 lean_r134
let lean_s191 := by timed congr lean_s189 lean_r149
let lean_s192 := by timed congr lean_s189 lean_r138
have lean_s193 : let714 := by timed rfl
let lean_s194 := by timed congr lean_s189 lean_s193
have lean_s195 : let713 := by timed rfl
let lean_s196 := by timed congr lean_s189 lean_s195
have lean_s197 : let712 := by timed rfl
let lean_s198 := by timed congr lean_s189 lean_s197
have lean_s199 : let711 := by timed rfl
let lean_s200 := by timed congr lean_s189 lean_s199
have lean_s201 : let710 := by timed rfl
let lean_s202 := by timed congr lean_s200 lean_s201
let lean_s203 := by timed congr lean_s198 lean_s202
let lean_s204 := by timed congr lean_s196 lean_s203
let lean_s205 := by timed congr lean_s194 lean_s204
let lean_s206 := by timed congr lean_s192 lean_s205
let lean_s207 := by timed congr lean_s191 lean_s206
have lean_s208 : (Eq let497 let599) := by timed congr lean_s190 lean_s207
have lean_s209 : (Eq let292 let599) := by timed Eq.trans lean_r162 lean_s208
let lean_s210 := by timed congr lean_s0 lean_s209
have lean_s211 : let706 := by timed rfl
let lean_s212 := by timed congr lean_s211 lean_r130
let lean_s213 := by timed congr lean_s211 lean_r129
let lean_s214 := by timed congr lean_s211 lean_r74
have lean_s215 : let709 := by timed rfl
let lean_s216 := by timed congr lean_s211 lean_s215
have lean_s217 : let708 := by timed rfl
let lean_s218 := by timed congr lean_s211 lean_s217
have lean_s219 : let707 := by timed rfl
let lean_s220 := by timed congr lean_s211 lean_s219
have lean_s221 : let705 := by timed rfl
let lean_s222 := by timed congr lean_s211 lean_s221
have lean_s223 : let704 := by timed rfl
let lean_s224 := by timed congr lean_s222 lean_s223
let lean_s225 := by timed congr lean_s220 lean_s224
let lean_s226 := by timed congr lean_s218 lean_s225
let lean_s227 := by timed congr lean_s216 lean_s226
let lean_s228 := by timed congr lean_s214 lean_s227
let lean_s229 := by timed congr lean_s213 lean_s228
have lean_s230 : (Eq let495 let598) := by timed congr lean_s212 lean_s229
have lean_s231 : (Eq let286 let598) := by timed Eq.trans lean_r161 lean_s230
let lean_s232 := by timed congr lean_s0 lean_s231
let lean_s233 := by timed flipCongrArg lean_r144 [And]
have lean_s234 : (Eq let276 let594) := by timed congr lean_s233 lean_r158
let lean_s235 := by timed flipCongrArg lean_s234 [Implies]
have lean_s236 : let703 := by timed rfl
have lean_s237 : (Eq let280 let597) := by timed congr lean_s235 lean_s236
let lean_s238 := by timed congr lean_s0 lean_s237
have lean_s239 : (Eq let277 let595) := by timed flipCongrArg lean_s234 [Not]
let lean_s240 := by timed flipCongrArg lean_s239 [Implies]
have lean_s241 : let702 := by timed rfl
have lean_s242 : (Eq let278 let596) := by timed congr lean_s240 lean_s241
let lean_s243 := by timed congr lean_s0 lean_s242
let lean_s244 := by timed flipCongrArg lean_r140 [And]
have lean_s245 : (Eq let268 let590) := by timed congr lean_s244 lean_r153
let lean_s246 := by timed flipCongrArg lean_s245 [Implies]
have lean_s247 : (Eq let256 let256) := by timed rfl
let lean_s248 := by timed flipCongrArg lean_s247 [Eq]
have lean_s249 : (Eq let272 let487) := by timed congr lean_s248 lean_r115
have lean_s250 : (Eq let272 let486) := by timed Eq.trans lean_s249 lean_r154
have lean_s251 : (Eq let273 let593) := by timed congr lean_s246 lean_s250
let lean_s252 := by timed congr lean_s0 lean_s251
have lean_s253 : (Eq let269 let591) := by timed flipCongrArg lean_s245 [Not]
let lean_s254 := by timed flipCongrArg lean_s253 [Implies]
have lean_s255 : (Eq let270 let592) := by timed congr lean_s254 lean_r152
let lean_s256 := by timed congr lean_s0 lean_s255
let lean_s257 := by timed flipCongrArg lean_r122 [And]
have lean_s258 : (Eq let259 let586) := by timed congr lean_s257 lean_r149
let lean_s259 := by timed flipCongrArg lean_s258 [Implies]
have lean_s260 : (Eq let122 let122) := by timed rfl
let lean_s261 := by timed flipCongrArg lean_s260 [Eq]
have lean_s262 : (Eq let263 let483) := by timed congr lean_s261 lean_r151
have lean_s263 : (Eq let263 let481) := by timed Eq.trans lean_s262 lean_r150
have lean_s264 : (Eq let264 let589) := by timed congr lean_s259 lean_s263
let lean_s265 := by timed congr lean_s0 lean_s264
have lean_s266 : (Eq let260 let587) := by timed flipCongrArg lean_s258 [Not]
let lean_s267 := by timed flipCongrArg lean_s266 [Implies]
have lean_s268 : (Eq let261 let588) := by timed congr lean_s267 lean_r148
let lean_s269 := by timed congr lean_s0 lean_s268
let lean_s270 := by timed flipCongrArg lean_r134 [And]
have lean_s271 : (Eq let251 let582) := by timed congr lean_s270 lean_r129
let lean_s272 := by timed flipCongrArg lean_s271 [Implies]
have lean_s273 : (Eq let240 let240) := by timed rfl
let lean_s274 := by timed flipCongrArg lean_s273 [Eq]
have lean_s275 : (Eq let254 let376) := by timed congr lean_s274 lean_r32
have lean_s276 : (Eq let254 let375) := by timed Eq.trans lean_s275 lean_r79
have lean_s277 : (Eq let255 let585) := by timed congr lean_s272 lean_s276
let lean_s278 := by timed congr lean_s0 lean_s277
have lean_s279 : (Eq let252 let583) := by timed flipCongrArg lean_s271 [Not]
let lean_s280 := by timed flipCongrArg lean_s279 [Implies]
have lean_s281 : (Eq let253 let584) := by timed congr lean_s280 lean_r127
let lean_s282 := by timed congr lean_s0 lean_s281
let lean_s283 := by timed flipCongrArg lean_r130 [And]
have lean_s284 : (Eq let243 let578) := by timed congr lean_s283 lean_r36
let lean_s285 := by timed flipCongrArg lean_s284 [Implies]
have lean_s286 : (Eq let241 let241) := by timed rfl
let lean_s287 := by timed flipCongrArg lean_s286 [Eq]
have lean_s288 : (Eq let247 let360) := by timed congr lean_s287 lean_r146
have lean_s289 : (Eq let247 let358) := by timed Eq.trans lean_s288 lean_r68
have lean_s290 : (Eq let248 let581) := by timed congr lean_s285 lean_s289
let lean_s291 := by timed congr lean_s0 lean_s290
have lean_s292 : (Eq let244 let579) := by timed flipCongrArg lean_s284 [Not]
let lean_s293 := by timed flipCongrArg lean_s292 [Implies]
have lean_s294 : (Eq let245 let580) := by timed congr lean_s293 lean_r145
let lean_s295 := by timed congr lean_s0 lean_s294
let lean_s296 := by timed flipCongrArg lean_r144 [And]
have lean_s297 : (Eq let235 let574) := by timed congr lean_s296 lean_r143
let lean_s298 := by timed flipCongrArg lean_s297 [Implies]
have lean_s299 : let693 := by timed rfl
have lean_s300 : (Eq let239 let577) := by timed congr lean_s298 lean_s299
let lean_s301 := by timed congr lean_s0 lean_s300
have lean_s302 : (Eq let236 let575) := by timed flipCongrArg lean_s297 [Not]
let lean_s303 := by timed flipCongrArg lean_s302 [Implies]
have lean_s304 : let692 := by timed rfl
have lean_s305 : (Eq let237 let576) := by timed congr lean_s303 lean_s304
let lean_s306 := by timed congr lean_s0 lean_s305
let lean_s307 := by timed flipCongrArg lean_r140 [And]
have lean_s308 : (Eq let227 let570) := by timed congr lean_s307 lean_r139
let lean_s309 := by timed flipCongrArg lean_s308 [Implies]
have lean_s310 : (Eq let212 let212) := by timed rfl
let lean_s311 := by timed flipCongrArg lean_s310 [Eq]
have lean_s312 : (Eq let231 let428) := by timed congr lean_s311 lean_r142
have lean_s313 : (Eq let231 let426) := by timed Eq.trans lean_s312 lean_r108
have lean_s314 : (Eq let232 let573) := by timed congr lean_s309 lean_s313
let lean_s315 := by timed congr lean_s0 lean_s314
have lean_s316 : (Eq let228 let571) := by timed flipCongrArg lean_s308 [Not]
let lean_s317 := by timed flipCongrArg lean_s316 [Implies]
have lean_s318 : (Eq let229 let572) := by timed congr lean_s317 lean_r72
let lean_s319 := by timed congr lean_s0 lean_s318
let lean_s320 := by timed flipCongrArg lean_r122 [And]
have lean_s321 : (Eq let216 let566) := by timed congr lean_s320 lean_r138
let lean_s322 := by timed flipCongrArg lean_s321 [Implies]
have lean_s323 : (Eq let201 let201) := by timed rfl
let lean_s324 := by timed flipCongrArg lean_s323 [Eq]
have lean_s325 : (Eq let220 let419) := by timed congr lean_s324 lean_r87
have lean_s326 : (Eq let220 let418) := by timed Eq.trans lean_s325 lean_r103
have lean_s327 : (Eq let221 let569) := by timed congr lean_s322 lean_s326
let lean_s328 := by timed congr lean_s0 lean_s327
have lean_s329 : (Eq let217 let567) := by timed flipCongrArg lean_s321 [Not]
let lean_s330 := by timed flipCongrArg lean_s329 [Implies]
have lean_s331 : (Eq let218 let568) := by timed congr lean_s330 lean_r102
let lean_s332 := by timed congr lean_s0 lean_s331
let lean_s333 := by timed flipCongrArg lean_r134 [And]
have lean_s334 : (Eq let206 let562) := by timed congr lean_s333 lean_r74
let lean_s335 := by timed flipCongrArg lean_s334 [Implies]
have lean_s336 : (Eq let188 let188) := by timed rfl
let lean_s337 := by timed flipCongrArg lean_s336 [Eq]
have lean_s338 : (Eq let210 let412) := by timed congr lean_s337 lean_r136
have lean_s339 : (Eq let210 let410) := by timed Eq.trans lean_s338 lean_r99
have lean_s340 : (Eq let211 let565) := by timed congr lean_s335 lean_s339
let lean_s341 := by timed congr lean_s0 lean_s340
have lean_s342 : (Eq let207 let563) := by timed flipCongrArg lean_s334 [Not]
let lean_s343 := by timed flipCongrArg lean_s342 [Implies]
have lean_s344 : (Eq let208 let564) := by timed congr lean_s343 lean_r94
let lean_s345 := by timed congr lean_s0 lean_s344
let lean_s346 := by timed flipCongrArg lean_r130 [And]
have lean_s347 : (Eq let194 let558) := by timed congr lean_s346 lean_r131
let lean_s348 := by timed flipCongrArg lean_s347 [Implies]
have lean_s349 : (Eq let189 let189) := by timed rfl
let lean_s350 := by timed flipCongrArg lean_s349 [Eq]
have lean_s351 : (Eq let198 let397) := by timed congr lean_s350 lean_r133
have lean_s352 : (Eq let198 let395) := by timed Eq.trans lean_s351 lean_r91
have lean_s353 : (Eq let199 let561) := by timed congr lean_s348 lean_s352
let lean_s354 := by timed congr lean_s0 lean_s353
have lean_s355 : (Eq let195 let559) := by timed flipCongrArg lean_s347 [Not]
let lean_s356 := by timed flipCongrArg lean_s355 [Implies]
have lean_s357 : (Eq let196 let560) := by timed congr lean_s356 lean_r126
let lean_s358 := by timed congr lean_s354 lean_s357
let lean_s359 := by timed congr lean_s345 lean_s358
let lean_s360 := by timed congr lean_s341 lean_s359
let lean_s361 := by timed congr lean_s332 lean_s360
let lean_s362 := by timed congr lean_s328 lean_s361
let lean_s363 := by timed congr lean_s319 lean_s362
let lean_s364 := by timed congr lean_s315 lean_s363
let lean_s365 := by timed congr lean_s306 lean_s364
let lean_s366 := by timed congr lean_s301 lean_s365
let lean_s367 := by timed congr lean_s295 lean_s366
let lean_s368 := by timed congr lean_s291 lean_s367
let lean_s369 := by timed congr lean_s282 lean_s368
let lean_s370 := by timed congr lean_s278 lean_s369
let lean_s371 := by timed congr lean_s269 lean_s370
let lean_s372 := by timed congr lean_s265 lean_s371
let lean_s373 := by timed congr lean_s256 lean_s372
let lean_s374 := by timed congr lean_s252 lean_s373
let lean_s375 := by timed congr lean_s243 lean_s374
let lean_s376 := by timed congr lean_s238 lean_s375
let lean_s377 := by timed congr lean_s232 lean_s376
let lean_s378 := by timed congr lean_s210 lean_s377
let lean_s379 := by timed congr lean_s188 lean_s378
let lean_s380 := by timed congr lean_s166 lean_s379
let lean_s381 := by timed congr lean_s144 lean_s380
let lean_s382 := by timed congr lean_s122 lean_s381
let lean_s383 := by timed congr lean_s115 lean_s382
let lean_s384 := by timed congr lean_s89 lean_s383
let lean_s385 := by timed congr lean_s66 lean_s384
let lean_s386 := by timed congr lean_s49 lean_s385
let lean_s387 := by timed congr lean_s48 lean_s386
let lean_s388 := by timed congr lean_s42 lean_s387
let lean_s389 := by timed congr lean_s25 lean_s388
let lean_s390 := by timed congr lean_s24 lean_s389
let lean_s391 := by timed congr lean_s20 lean_s390
let lean_s392 := by timed congr lean_s18 lean_s391
let lean_s393 := by timed congr lean_s16 lean_s392
let lean_s394 := by timed congr lean_s14 lean_s393
let lean_s395 := by timed congr lean_s12 lean_s394
let lean_s396 := by timed congr lean_s10 lean_s395
let lean_s397 := by timed congr lean_s8 lean_s396
let lean_s398 := by timed congr lean_s6 lean_s397
let lean_s399 := by timed congr lean_s4 lean_s398
have lean_s400 : (Eq let332 let609) := by timed congr lean_s2 lean_s399
have lean_s401 : (Eq let333 let609) := by timed Eq.trans lean_r51 lean_s400
let lean_s402 := by timed flipCongrArg lean_s401 [Implies]
have lean_s403 : let683 := by timed rfl
have lean_s404 : (Eq let103 let556) := by timed flipCongrArg lean_r125 [Not]
let lean_s405 := by timed congr lean_s403 lean_s404
have lean_s406 : (Eq let99 let174) := by timed flipCongrArg lean_r57 [format]
let lean_s407 := by timed flipCongrArg lean_s406 [Eq]
have lean_s408 : (Eq s s) := by timed rfl
have lean_s409 : (Eq let100 let448) := by timed congr lean_s407 lean_s408
have lean_s410 : (Eq let100 let447) := by timed Eq.trans lean_s409 lean_r124
let lean_s411 := by timed congr lean_s403 lean_s410
let lean_s412 := by timed congr lean_s403 lean_r117
have lean_s413 : (Eq let94 let338) := by timed flipCongrArg lean_r84 [format]
let lean_s414 := by timed flipCongrArg lean_s413 [Eq]
have lean_s415 : (Eq adrx5fmedlo adrx5fmedlo) := by timed rfl
have lean_s416 : (Eq let95 let340) := by timed congr lean_s414 lean_s415
have lean_s417 : (Eq let95 let339) := by timed Eq.trans lean_s416 lean_r54
let lean_s418 := by timed congr lean_s403 lean_s417
have lean_s419 : (Eq let91 let441) := by timed flipCongrArg lean_r121 [format]
let lean_s420 := by timed flipCongrArg lean_s419 [Eq]
have lean_s421 : (Eq adrx5fmedhi adrx5fmedhi) := by timed rfl
have lean_s422 : (Eq let92 let443) := by timed congr lean_s420 lean_s421
have lean_s423 : (Eq let92 let442) := by timed Eq.trans lean_s422 lean_r120
let lean_s424 := by timed congr lean_s403 lean_s423
have lean_s425 : (Eq let88 let404) := by timed flipCongrArg lean_r55 [format]
let lean_s426 := by timed flipCongrArg lean_s425 [Eq]
have lean_s427 : (Eq adrx5fhi adrx5fhi) := by timed rfl
have lean_s428 : (Eq let89 let406) := by timed congr lean_s426 lean_s427
have lean_s429 : (Eq let89 let405) := by timed Eq.trans lean_s428 lean_r96
let lean_s430 := by timed congr lean_s424 lean_s429
let lean_s431 := by timed congr lean_s418 lean_s430
let lean_s432 := by timed congr lean_s412 lean_s431
let lean_s433 := by timed congr lean_s411 lean_s432
have lean_s434 : (Eq let104 let557) := by timed congr lean_s405 lean_s433
have lean_s435 : (Eq let105 let557) := by timed Eq.trans lean_r24 lean_s434
have lean_s436 : (Eq let550 let610) := by timed congr lean_s402 lean_s435
have lean_s437 : (Eq let551 let611) := by timed flipCongrArg lean_s436 [Not]
have lean_s438 : let683 := by timed rfl
have lean_s439 : let611 := by timed eqResolve lean_a166 lean_s437
have lean_s440 : let609 := by timed notImplies1 lean_s439
have lean_s441 : let474 := by andElim lean_s440, 16
have lean_s442 : let609 := by timed notImplies1 lean_s439
have lean_s443 : let608 := by andElim lean_s442, 10
have lean_s444 : let740 := by timed rfl
let lean_s445 := by timed flipCongrArg lean_s444 [Eq]
have lean_s446 : let609 := by timed notImplies1 lean_s439
have lean_s447 : let320 := by andElim lean_s446, 9
have lean_s448 : let609 := by timed notImplies1 lean_s439
have lean_s449 : let322 := by andElim lean_s448, 8
have lean_s450 : let609 := by timed notImplies1 lean_s439
have lean_s451 : let323 := by andElim lean_s450, 7
have lean_s452 : let609 := by timed notImplies1 lean_s439
have lean_s453 : let325 := by andElim lean_s452, 6
have lean_s454 : let609 := by timed notImplies1 lean_s439
have lean_s455 : let326 := by andElim lean_s454, 5
have lean_s456 : let609 := by timed notImplies1 lean_s439
have lean_s457 : let327 := by andElim lean_s456, 4
have lean_s458 : let609 := by timed notImplies1 lean_s439
have lean_s459 : let328 := by andElim lean_s458, 3
have lean_s460 : let609 := by timed notImplies1 lean_s439
have lean_s461 : let329 := by andElim lean_s460, 2
have lean_s462 : let609 := by timed notImplies1 lean_s439
have lean_s463 : let330 := by andElim lean_s462, 1
have lean_s464 : let609 := by timed notImplies1 lean_s439
have lean_s465 : let331 := by andElim lean_s464, 0
let lean_s466 := by timed And.intro lean_s463 lean_s465
let lean_s467 := by timed And.intro lean_s461 lean_s466
let lean_s468 := by timed And.intro lean_s459 lean_s467
let lean_s469 := by timed And.intro lean_s457 lean_s468
let lean_s470 := by timed And.intro lean_s455 lean_s469
let lean_s471 := by timed And.intro lean_s453 lean_s470
let lean_s472 := by timed And.intro lean_s451 lean_s471
let lean_s473 := by timed And.intro lean_s449 lean_s472
have lean_s474 : let736 := by timed And.intro lean_s447 lean_s473
have lean_s475 : let320 := by andElim lean_s474, 0
let lean_s476 := by timed flipCongrArg lean_s475 [HAdd.hAdd]
have lean_s477 : let734 := by timed rfl
let lean_s478 := by timed flipCongrArg lean_s477 [HMul.hMul]
have lean_s479 : let331 := by andElim lean_s474, 9
have lean_s480 : let744 := by timed congr lean_s478 lean_s479
have lean_s481 : let743 := by timed congr lean_s476 lean_s480
have lean_s482 : (Eq let608 let742) := by timed congr lean_s445 lean_s481
let lean_s483 := by timed flipCongrArg lean_s21 [Eq]
have lean_s484 : let432 := by timed rfl
let lean_s485 := by timed flipCongrArg lean_s484 [HAdd.hAdd]
have lean_s486 : (Eq let678 let488) := by timed congr lean_s485 lean_r110
have lean_s487 : (Eq let678 let70) := by timed Eq.trans lean_s486 lean_r155
have lean_s488 : (Eq let742 let737) := by timed congr lean_s483 lean_s487
have lean_s489 : (Eq let608 let737) := by timed Eq.trans lean_s482 lean_s488
have lean_s490 : let737 := by timed eqResolve lean_s443 lean_s489
let lean_s491 := by timed And.intro lean_s463 lean_s465
let lean_s492 := by timed And.intro lean_s461 lean_s491
let lean_s493 := by timed And.intro lean_s459 lean_s492
let lean_s494 := by timed And.intro lean_s457 lean_s493
let lean_s495 := by timed And.intro lean_s455 lean_s494
let lean_s496 := by timed And.intro lean_s453 lean_s495
let lean_s497 := by timed And.intro lean_s451 lean_s496
let lean_s498 := by timed And.intro lean_s449 lean_s497
let lean_s499 := by timed And.intro lean_s447 lean_s498
have lean_s500 : let738 := by timed And.intro lean_s490 lean_s499
have lean_s501 : let737 := by andElim lean_s500, 0
let lean_s502 := by timed flipCongrArg lean_s501 [Eq]
have lean_s503 : let739 := by timed rfl
have lean_s504 : let732 := by timed rfl
let lean_s505 := by timed flipCongrArg lean_s504 [HMul.hMul]
have lean_s506 : let731 := by timed rfl
have lean_s507 : let734 := by timed rfl
let lean_s508 := by timed flipCongrArg lean_s507 [HMul.hMul]
have lean_s509 : let320 := by andElim lean_s500, 1
have lean_s510 : let750 := by timed congr lean_s508 lean_s509
have lean_s511 : let730 := by timed rfl
let lean_s512 := by timed congrHAdd lean_s510 lean_s511
have lean_s513 : let749 := by timed congrHAdd lean_s506 lean_s512
have lean_s514 : let752 := by timed flipCongrArg lean_s513 [sx5fcount]
have lean_s515 : let751 := by timed congr lean_s505 lean_s514
let lean_s516 := by timed flipCongrArg lean_s504 [HMul.hMul]
have lean_s517 : let748 := by timed flipCongrArg lean_s513 [xx5fcount]
have lean_s518 : let747 := by timed congr lean_s516 lean_s517
let lean_s519 := by timed congrHAdd lean_s515 lean_s518
have lean_s520 : (Eq let473 let745) := by timed congrHAdd lean_s503 lean_s519
have lean_s521 : (Eq let474 let746) := by timed congr lean_s502 lean_s520
have lean_s522 : let141 := by timed rfl
let lean_s523 := by timed flipCongrArg lean_s522 [Eq]
have lean_s524 : let732 := by timed rfl
let lean_s525 := by timed flipCongrArg lean_s524 [HMul.hMul]
have lean_s526 : let731 := by timed rfl
let lean_s527 := by timed congrHAdd lean_r114 lean_s26
have lean_s528 : (Eq let143 let352) := by timed congrHAdd lean_s526 lean_s527
have lean_s529 : (Eq let143 let37) := by timed Eq.trans lean_s528 lean_r63
have lean_s530 : (Eq let146 let63) := by timed flipCongrArg lean_s529 [sx5fcount]
have lean_s531 : (Eq let147 let80) := by timed congr lean_s525 lean_s530
let lean_s532 := by timed flipCongrArg lean_s524 [HMul.hMul]
have lean_s533 : (Eq let144 let62) := by timed flipCongrArg lean_s529 [xx5fcount]
have lean_s534 : (Eq let145 let79) := by timed congr lean_s532 lean_s533
let lean_s535 := by timed congrHAdd lean_s531 lean_s534
have lean_s536 : (Eq let745 let115) := by timed congrHAdd lean_s50 lean_s535
have lean_s537 : (Eq let746 let116) := by timed congr lean_s523 lean_s536
have lean_s538 : (Eq let746 let114) := by timed Eq.trans lean_s537 lean_r28
have lean_s539 : (Eq let474 let114) := by timed Eq.trans lean_s521 lean_s538
have lean_s540 : let114 := by timed eqResolve lean_s441 lean_s539
let lean_s541 := by timed And.intro lean_s463 lean_s465
let lean_s542 := by timed And.intro lean_s461 lean_s541
let lean_s543 := by timed And.intro lean_s459 lean_s542
let lean_s544 := by timed And.intro lean_s457 lean_s543
let lean_s545 := by timed And.intro lean_s455 lean_s544
let lean_s546 := by timed And.intro lean_s453 lean_s545
let lean_s547 := by timed And.intro lean_s451 lean_s546
let lean_s548 := by timed And.intro lean_s449 lean_s547
let lean_s549 := by timed And.intro lean_s447 lean_s548
let lean_s550 := by timed And.intro lean_s490 lean_s549
have lean_s551 : (And let114 let738) := by timed And.intro lean_s540 lean_s550
have lean_s552 : let331 := by andElim lean_s551, 11
let lean_s553 := by timed flipCongrArg lean_s552 [Eq]
have lean_s554 : let117 := by timed rfl
have lean_s555 : (Eq let331 let117) := by timed congr lean_s553 lean_s554
let lean_s556 := by timed congr lean_s438 lean_s555
have lean_s557 : let330 := by andElim lean_s551, 10
let lean_s558 := by timed flipCongrArg lean_s557 [Eq]
have lean_s559 : let436 := by timed rfl
have lean_s560 : (Eq let330 let436) := by timed congr lean_s558 lean_s559
let lean_s561 := by timed congr lean_s438 lean_s560
have lean_s562 : let329 := by andElim lean_s551, 9
let lean_s563 := by timed flipCongrArg lean_s562 [Eq]
have lean_s564 : let439 := by timed rfl
have lean_s565 : (Eq let329 let439) := by timed congr lean_s563 lean_s564
let lean_s566 := by timed congr lean_s438 lean_s565
have lean_s567 : let328 := by andElim lean_s551, 8
let lean_s568 := by timed flipCongrArg lean_s567 [Eq]
have lean_s569 : let438 := by timed rfl
have lean_s570 : (Eq let328 let438) := by timed congr lean_s568 lean_s569
let lean_s571 := by timed congr lean_s438 lean_s570
have lean_s572 : let327 := by andElim lean_s551, 7
let lean_s573 := by timed flipCongrArg lean_s572 [Eq]
have lean_s574 : (Eq let327 let436) := by timed congr lean_s573 lean_s559
let lean_s575 := by timed congr lean_s438 lean_s574
have lean_s576 : let326 := by andElim lean_s551, 6
let lean_s577 := by timed flipCongrArg lean_s576 [Eq]
have lean_s578 : let382 := by timed rfl
have lean_s579 : (Eq let326 let382) := by timed congr lean_s577 lean_s578
let lean_s580 := by timed congr lean_s438 lean_s579
have lean_s581 : let325 := by andElim lean_s551, 5
let lean_s582 := by timed flipCongrArg lean_s581 [Eq]
have lean_s583 : let334 := by timed rfl
have lean_s584 : (Eq let325 let334) := by timed congr lean_s582 lean_s583
let lean_s585 := by timed congr lean_s438 lean_s584
have lean_s586 : let323 := by andElim lean_s551, 4
let lean_s587 := by timed flipCongrArg lean_s586 [Eq]
have lean_s588 : let388 := by timed rfl
have lean_s589 : (Eq let323 let388) := by timed congr lean_s587 lean_s588
let lean_s590 := by timed congr lean_s438 lean_s589
have lean_s591 : let322 := by andElim lean_s551, 3
let lean_s592 := by timed flipCongrArg lean_s591 [Eq]
have lean_s593 : let433 := by timed rfl
have lean_s594 : (Eq let322 let433) := by timed congr lean_s592 lean_s593
let lean_s595 := by timed congr lean_s438 lean_s594
have lean_s596 : let320 := by andElim lean_s551, 2
let lean_s597 := by timed flipCongrArg lean_s596 [Eq]
have lean_s598 : let432 := by timed rfl
have lean_s599 : (Eq let320 let432) := by timed congr lean_s597 lean_s598
let lean_s600 := by timed congr lean_s438 lean_s599
have lean_s601 : let737 := by andElim lean_s551, 1
let lean_s602 := by timed flipCongrArg lean_s601 [Eq]
let lean_s603 := by timed flipCongrArg lean_s596 [HAdd.hAdd]
have lean_s604 : let734 := by timed rfl
let lean_s605 := by timed flipCongrArg lean_s604 [HMul.hMul]
have lean_s606 : let744 := by timed congr lean_s605 lean_s552
have lean_s607 : let743 := by timed congr lean_s603 lean_s606
have lean_s608 : (Eq let608 let679) := by timed congr lean_s602 lean_s607
let lean_s609 := by timed congr lean_s438 lean_s608
have lean_s610 : let114 := by andElim lean_s551, 0
let lean_s611 := by timed flipCongrArg lean_s610 [HAdd.hAdd]
let lean_s612 := by timed flipCongrArg lean_s604 [HMul.hMul]
have lean_s613 : let750 := by timed congr lean_s612 lean_s596
have lean_s614 : (Eq let460 let391) := by timed congr lean_s611 lean_s613
let lean_s615 := by timed flipCongrArg lean_s614 [GE.ge]
have lean_s616 : (Eq let461 let677) := by timed congr lean_s615 lean_s598
let lean_s617 := by timed congr lean_s438 lean_s616
have lean_s618 : (Eq let57 let57) := by timed rfl
let lean_s619 := by timed congrHAdd lean_s618 lean_s557
have lean_s620 : (Eq let58 let373) := by timed congrHAdd lean_s596 lean_s619
let lean_s621 := by timed flipCongrArg lean_s620 [GE.ge]
have lean_s622 : let735 := by timed rfl
have lean_s623 : (Eq let59 let676) := by timed congr lean_s621 lean_s622
let lean_s624 := by timed congr lean_s438 lean_s623
let lean_s625 := by timed flipCongrArg lean_s596 [HAdd.hAdd]
have lean_s626 : (Eq let125 let140) := by timed congr lean_s625 lean_s618
let lean_s627 := by timed flipCongrArg lean_s626 [GE.ge]
have lean_s628 : (Eq let126 let674) := by timed congr lean_s627 lean_s604
have lean_s629 : (Eq let607 let675) := by timed flipCongrArg lean_s628 [Not]
let lean_s630 := by timed congr lean_s438 lean_s629
let lean_s631 := by timed flipCongrArg lean_s604 [HMul.hMul]
have lean_s632 : (Eq let13 let110) := by timed congr lean_s631 lean_s610
let lean_s633 := by timed congrHAdd lean_s632 lean_s552
have lean_s634 : (Eq let14 let671) := by timed congrHAdd lean_s601 lean_s633
let lean_s635 := by timed flipCongrArg lean_s634 [GE.ge]
have lean_s636 : let733 := by timed rfl
have lean_s637 : (Eq let15 let672) := by timed congr lean_s635 lean_s636
have lean_s638 : (Eq let16 let673) := by timed flipCongrArg lean_s637 [Not]
let lean_s639 := by timed congr lean_s438 lean_s638
let lean_s640 := by timed congrHAdd lean_s552 lean_s557
let lean_s641 := by timed congrHAdd lean_s632 lean_s640
have lean_s642 : (Eq let384 let669) := by timed congrHAdd lean_s601 lean_s641
let lean_s643 := by timed flipCongrArg lean_s642 [GE.ge]
have lean_s644 : (Eq let385 let670) := by timed congr lean_s643 lean_s559
let lean_s645 := by timed congr lean_s438 lean_s644
let lean_s646 := by timed flipCongrArg lean_s601 [Eq]
have lean_s647 : let732 := by timed rfl
let lean_s648 := by timed flipCongrArg lean_s647 [HMul.hMul]
have lean_s649 : let731 := by timed rfl
have lean_s650 : let730 := by timed rfl
let lean_s651 := by timed congrHAdd lean_s613 lean_s650
have lean_s652 : let749 := by timed congrHAdd lean_s649 lean_s651
have lean_s653 : let752 := by timed flipCongrArg lean_s652 [sx5fcount]
have lean_s654 : let751 := by timed congr lean_s648 lean_s653
let lean_s655 := by timed flipCongrArg lean_s647 [HMul.hMul]
have lean_s656 : let748 := by timed flipCongrArg lean_s652 [xx5fcount]
have lean_s657 : let747 := by timed congr lean_s655 lean_s656
let lean_s658 := by timed congrHAdd lean_s654 lean_s657
have lean_s659 : (Eq let473 let150) := by timed congrHAdd lean_s610 lean_s658
have lean_s660 : (Eq let474 let668) := by timed congr lean_s646 lean_s659
let lean_s661 := by timed congr lean_s438 lean_s660
have lean_s662 : let706 := by timed rfl
let lean_s663 := by timed flipCongrArg lean_s596 [Eq]
have lean_s664 : (Eq let42 let453) := by timed congr lean_s663 lean_s650
let lean_s665 := by timed congr lean_s662 lean_s664
let lean_s666 := by timed flipCongrArg lean_s596 [Eq]
have lean_s667 : (Eq let183 let183) := by timed rfl
have lean_s668 : (Eq let184 let187) := by timed congr lean_s666 lean_s667
let lean_s669 := by timed congr lean_s662 lean_s668
let lean_s670 := by timed flipCongrArg lean_s596 [Eq]
have lean_s671 : (Eq let37 let37) := by timed rfl
have lean_s672 : (Eq let346 let74) := by timed congr lean_s670 lean_s671
let lean_s673 := by timed congr lean_s662 lean_s672
let lean_s674 := by timed flipCongrArg lean_s596 [Eq]
have lean_s675 : (Eq let49 let49) := by timed rfl
have lean_s676 : (Eq let50 let178) := by timed congr lean_s674 lean_s675
let lean_s677 := by timed congr lean_s662 lean_s676
let lean_s678 := by timed flipCongrArg lean_s596 [Eq]
have lean_s679 : (Eq let54 let54) := by timed rfl
have lean_s680 : (Eq let55 let349) := by timed congr lean_s678 lean_s679
let lean_s681 := by timed congr lean_s677 lean_s680
let lean_s682 := by timed congr lean_s673 lean_s681
let lean_s683 := by timed congr lean_s669 lean_s682
have lean_s684 : (Eq let606 let667) := by timed congr lean_s665 lean_s683
let lean_s685 := by timed congr lean_s438 lean_s684
let lean_s686 := by timed flipCongrArg lean_s610 [Eq]
have lean_s687 : (Eq let604 let139) := by timed congr lean_s686 lean_s596
let lean_s688 := by timed flipCongrArg lean_s687 [Or]
let lean_s689 := by timed flipCongrArg lean_s610 [Eq]
let lean_s690 := by timed flipCongrArg lean_s636 [HAdd.hAdd]
have lean_s691 : (Eq let127 let465) := by timed congr lean_s690 lean_s596
have lean_s692 : (Eq let603 let665) := by timed congr lean_s689 lean_s691
have lean_s693 : (Eq let605 let666) := by timed congr lean_s688 lean_s692
let lean_s694 := by timed congr lean_s438 lean_s693
have lean_s695 : let706 := by timed rfl
let lean_s696 := by timed flipCongrArg lean_s581 [Eq]
have lean_s697 : (Eq let155 let155) := by timed rfl
have lean_s698 : (Eq let467 let372) := by timed congr lean_s696 lean_s697
let lean_s699 := by timed congr lean_s695 lean_s698
let lean_s700 := by timed flipCongrArg lean_s586 [Eq]
have lean_s701 : (Eq let549 let381) := by timed congr lean_s700 lean_s697
let lean_s702 := by timed congr lean_s695 lean_s701
let lean_s703 := by timed flipCongrArg lean_s591 [Eq]
have lean_s704 : (Eq let491 let336) := by timed congr lean_s703 lean_s697
let lean_s705 := by timed congr lean_s695 lean_s704
have lean_s706 : let729 := by timed rfl
let lean_s707 := by timed congr lean_s695 lean_s706
have lean_s708 : let728 := by timed rfl
let lean_s709 := by timed congr lean_s695 lean_s708
have lean_s710 : let727 := by timed rfl
let lean_s711 := by timed congr lean_s695 lean_s710
have lean_s712 : let726 := by timed rfl
let lean_s713 := by timed congr lean_s695 lean_s712
have lean_s714 : let725 := by timed rfl
let lean_s715 := by timed congr lean_s713 lean_s714
let lean_s716 := by timed congr lean_s711 lean_s715
let lean_s717 := by timed congr lean_s709 lean_s716
let lean_s718 := by timed congr lean_s707 lean_s717
let lean_s719 := by timed congr lean_s705 lean_s718
let lean_s720 := by timed congr lean_s702 lean_s719
have lean_s721 : (Eq let602 let664) := by timed congr lean_s699 lean_s720
let lean_s722 := by timed congr lean_s438 lean_s721
have lean_s723 : let706 := by timed rfl
let lean_s724 := by timed flipCongrArg lean_s581 [Eq]
have lean_s725 : (Eq let225 let225) := by timed rfl
have lean_s726 : (Eq let464 let421) := by timed congr lean_s724 lean_s725
let lean_s727 := by timed congr lean_s723 lean_s726
let lean_s728 := by timed flipCongrArg lean_s586 [Eq]
have lean_s729 : (Eq let492 let351) := by timed congr lean_s728 lean_s725
let lean_s730 := by timed congr lean_s723 lean_s729
let lean_s731 := by timed flipCongrArg lean_s591 [Eq]
have lean_s732 : (Eq let466 let365) := by timed congr lean_s731 lean_s725
let lean_s733 := by timed congr lean_s723 lean_s732
have lean_s734 : let724 := by timed rfl
let lean_s735 := by timed congr lean_s723 lean_s734
have lean_s736 : let723 := by timed rfl
let lean_s737 := by timed congr lean_s723 lean_s736
have lean_s738 : let722 := by timed rfl
let lean_s739 := by timed congr lean_s723 lean_s738
have lean_s740 : let721 := by timed rfl
let lean_s741 := by timed congr lean_s723 lean_s740
have lean_s742 : let720 := by timed rfl
let lean_s743 := by timed congr lean_s741 lean_s742
let lean_s744 := by timed congr lean_s739 lean_s743
let lean_s745 := by timed congr lean_s737 lean_s744
let lean_s746 := by timed congr lean_s735 lean_s745
let lean_s747 := by timed congr lean_s733 lean_s746
let lean_s748 := by timed congr lean_s730 lean_s747
have lean_s749 : (Eq let601 let663) := by timed congr lean_s727 lean_s748
let lean_s750 := by timed congr lean_s438 lean_s749
have lean_s751 : let706 := by timed rfl
let lean_s752 := by timed flipCongrArg lean_s581 [Eq]
have lean_s753 : (Eq let133 let133) := by timed rfl
have lean_s754 : (Eq let444 let490) := by timed congr lean_s752 lean_s753
let lean_s755 := by timed congr lean_s751 lean_s754
let lean_s756 := by timed flipCongrArg lean_s586 [Eq]
have lean_s757 : (Eq let485 let135) := by timed congr lean_s756 lean_s753
let lean_s758 := by timed congr lean_s751 lean_s757
let lean_s759 := by timed flipCongrArg lean_s591 [Eq]
have lean_s760 : (Eq let463 let414) := by timed congr lean_s759 lean_s753
let lean_s761 := by timed congr lean_s751 lean_s760
have lean_s762 : let719 := by timed rfl
let lean_s763 := by timed congr lean_s751 lean_s762
have lean_s764 : let718 := by timed rfl
let lean_s765 := by timed congr lean_s751 lean_s764
have lean_s766 : let717 := by timed rfl
let lean_s767 := by timed congr lean_s751 lean_s766
have lean_s768 : let716 := by timed rfl
let lean_s769 := by timed congr lean_s751 lean_s768
have lean_s770 : let715 := by timed rfl
let lean_s771 := by timed congr lean_s769 lean_s770
let lean_s772 := by timed congr lean_s767 lean_s771
let lean_s773 := by timed congr lean_s765 lean_s772
let lean_s774 := by timed congr lean_s763 lean_s773
let lean_s775 := by timed congr lean_s761 lean_s774
let lean_s776 := by timed congr lean_s758 lean_s775
have lean_s777 : (Eq let600 let662) := by timed congr lean_s755 lean_s776
let lean_s778 := by timed congr lean_s438 lean_s777
have lean_s779 : let706 := by timed rfl
let lean_s780 := by timed flipCongrArg lean_s581 [Eq]
have lean_s781 : (Eq let204 let204) := by timed rfl
have lean_s782 : (Eq let459 let409) := by timed congr lean_s780 lean_s781
let lean_s783 := by timed congr lean_s779 lean_s782
let lean_s784 := by timed flipCongrArg lean_s586 [Eq]
have lean_s785 : (Eq let480 let430) := by timed congr lean_s784 lean_s781
let lean_s786 := by timed congr lean_s779 lean_s785
let lean_s787 := by timed flipCongrArg lean_s591 [Eq]
have lean_s788 : (Eq let462 let416) := by timed congr lean_s787 lean_s781
let lean_s789 := by timed congr lean_s779 lean_s788
have lean_s790 : let714 := by timed rfl
let lean_s791 := by timed congr lean_s779 lean_s790
have lean_s792 : let713 := by timed rfl
let lean_s793 := by timed congr lean_s779 lean_s792
have lean_s794 : let712 := by timed rfl
let lean_s795 := by timed congr lean_s779 lean_s794
have lean_s796 : let711 := by timed rfl
let lean_s797 := by timed congr lean_s779 lean_s796
have lean_s798 : let710 := by timed rfl
let lean_s799 := by timed congr lean_s797 lean_s798
let lean_s800 := by timed congr lean_s795 lean_s799
let lean_s801 := by timed congr lean_s793 lean_s800
let lean_s802 := by timed congr lean_s791 lean_s801
let lean_s803 := by timed congr lean_s789 lean_s802
let lean_s804 := by timed congr lean_s786 lean_s803
have lean_s805 : (Eq let599 let661) := by timed congr lean_s783 lean_s804
let lean_s806 := by timed congr lean_s438 lean_s805
have lean_s807 : let706 := by timed rfl
let lean_s808 := by timed flipCongrArg lean_s581 [Eq]
have lean_s809 : (Eq let192 let192) := by timed rfl
have lean_s810 : (Eq let455 let393) := by timed congr lean_s808 lean_s809
let lean_s811 := by timed congr lean_s807 lean_s810
let lean_s812 := by timed flipCongrArg lean_s586 [Eq]
have lean_s813 : (Eq let454 let343) := by timed congr lean_s812 lean_s809
let lean_s814 := by timed congr lean_s807 lean_s813
let lean_s815 := by timed flipCongrArg lean_s591 [Eq]
have lean_s816 : (Eq let368 let399) := by timed congr lean_s815 lean_s809
let lean_s817 := by timed congr lean_s807 lean_s816
have lean_s818 : let709 := by timed rfl
let lean_s819 := by timed congr lean_s807 lean_s818
have lean_s820 : let708 := by timed rfl
let lean_s821 := by timed congr lean_s807 lean_s820
have lean_s822 : let707 := by timed rfl
let lean_s823 := by timed congr lean_s807 lean_s822
have lean_s824 : let705 := by timed rfl
let lean_s825 := by timed congr lean_s807 lean_s824
have lean_s826 : let704 := by timed rfl
let lean_s827 := by timed congr lean_s825 lean_s826
let lean_s828 := by timed congr lean_s823 lean_s827
let lean_s829 := by timed congr lean_s821 lean_s828
let lean_s830 := by timed congr lean_s819 lean_s829
let lean_s831 := by timed congr lean_s817 lean_s830
let lean_s832 := by timed congr lean_s814 lean_s831
have lean_s833 : (Eq let598 let660) := by timed congr lean_s811 lean_s832
let lean_s834 := by timed congr lean_s438 lean_s833
let lean_s835 := by timed flipCongrArg lean_s698 [And]
have lean_s836 : (Eq let594 let656) := by timed congr lean_s835 lean_s729
let lean_s837 := by timed flipCongrArg lean_s836 [Implies]
have lean_s838 : let703 := by timed rfl
have lean_s839 : (Eq let597 let659) := by timed congr lean_s837 lean_s838
let lean_s840 := by timed congr lean_s438 lean_s839
have lean_s841 : (Eq let595 let657) := by timed flipCongrArg lean_s836 [Not]
let lean_s842 := by timed flipCongrArg lean_s841 [Implies]
have lean_s843 : let702 := by timed rfl
have lean_s844 : (Eq let596 let658) := by timed congr lean_s842 lean_s843
let lean_s845 := by timed congr lean_s438 lean_s844
let lean_s846 := by timed flipCongrArg lean_s726 [And]
have lean_s847 : (Eq let590 let652) := by timed congr lean_s846 lean_s757
let lean_s848 := by timed flipCongrArg lean_s847 [Implies]
have lean_s849 : let701 := by timed rfl
have lean_s850 : (Eq let593 let655) := by timed congr lean_s848 lean_s849
let lean_s851 := by timed congr lean_s438 lean_s850
have lean_s852 : (Eq let591 let653) := by timed flipCongrArg lean_s847 [Not]
let lean_s853 := by timed flipCongrArg lean_s852 [Implies]
have lean_s854 : let700 := by timed rfl
have lean_s855 : (Eq let592 let654) := by timed congr lean_s853 lean_s854
let lean_s856 := by timed congr lean_s438 lean_s855
let lean_s857 := by timed flipCongrArg lean_s754 [And]
have lean_s858 : (Eq let586 let648) := by timed congr lean_s857 lean_s785
let lean_s859 := by timed flipCongrArg lean_s858 [Implies]
have lean_s860 : let699 := by timed rfl
have lean_s861 : (Eq let589 let651) := by timed congr lean_s859 lean_s860
let lean_s862 := by timed congr lean_s438 lean_s861
have lean_s863 : (Eq let587 let649) := by timed flipCongrArg lean_s858 [Not]
let lean_s864 := by timed flipCongrArg lean_s863 [Implies]
have lean_s865 : let698 := by timed rfl
have lean_s866 : (Eq let588 let650) := by timed congr lean_s864 lean_s865
let lean_s867 := by timed congr lean_s438 lean_s866
let lean_s868 := by timed flipCongrArg lean_s782 [And]
have lean_s869 : (Eq let582 let644) := by timed congr lean_s868 lean_s813
let lean_s870 := by timed flipCongrArg lean_s869 [Implies]
have lean_s871 : let697 := by timed rfl
have lean_s872 : (Eq let585 let647) := by timed congr lean_s870 lean_s871
let lean_s873 := by timed congr lean_s438 lean_s872
have lean_s874 : (Eq let583 let645) := by timed flipCongrArg lean_s869 [Not]
let lean_s875 := by timed flipCongrArg lean_s874 [Implies]
have lean_s876 : let696 := by timed rfl
have lean_s877 : (Eq let584 let646) := by timed congr lean_s875 lean_s876
let lean_s878 := by timed congr lean_s438 lean_s877
let lean_s879 := by timed flipCongrArg lean_s810 [And]
let lean_s880 := by timed flipCongrArg lean_s586 [Eq]
have lean_s881 : (Eq let136 let136) := by timed rfl
have lean_s882 : (Eq let137 let363) := by timed congr lean_s880 lean_s881
have lean_s883 : (Eq let578 let640) := by timed congr lean_s879 lean_s882
let lean_s884 := by timed flipCongrArg lean_s883 [Implies]
have lean_s885 : let695 := by timed rfl
have lean_s886 : (Eq let581 let643) := by timed congr lean_s884 lean_s885
let lean_s887 := by timed congr lean_s438 lean_s886
have lean_s888 : (Eq let579 let641) := by timed flipCongrArg lean_s883 [Not]
let lean_s889 := by timed flipCongrArg lean_s888 [Implies]
have lean_s890 : let694 := by timed rfl
have lean_s891 : (Eq let580 let642) := by timed congr lean_s889 lean_s890
let lean_s892 := by timed congr lean_s438 lean_s891
let lean_s893 := by timed flipCongrArg lean_s698 [And]
have lean_s894 : (Eq let574 let636) := by timed congr lean_s893 lean_s732
let lean_s895 := by timed flipCongrArg lean_s894 [Implies]
have lean_s896 : let693 := by timed rfl
have lean_s897 : (Eq let577 let639) := by timed congr lean_s895 lean_s896
let lean_s898 := by timed congr lean_s438 lean_s897
have lean_s899 : (Eq let575 let637) := by timed flipCongrArg lean_s894 [Not]
let lean_s900 := by timed flipCongrArg lean_s899 [Implies]
have lean_s901 : let692 := by timed rfl
have lean_s902 : (Eq let576 let638) := by timed congr lean_s900 lean_s901
let lean_s903 := by timed congr lean_s438 lean_s902
let lean_s904 := by timed flipCongrArg lean_s726 [And]
have lean_s905 : (Eq let570 let632) := by timed congr lean_s904 lean_s760
let lean_s906 := by timed flipCongrArg lean_s905 [Implies]
have lean_s907 : let691 := by timed rfl
have lean_s908 : (Eq let573 let635) := by timed congr lean_s906 lean_s907
let lean_s909 := by timed congr lean_s438 lean_s908
have lean_s910 : (Eq let571 let633) := by timed flipCongrArg lean_s905 [Not]
let lean_s911 := by timed flipCongrArg lean_s910 [Implies]
have lean_s912 : let690 := by timed rfl
have lean_s913 : (Eq let572 let634) := by timed congr lean_s911 lean_s912
let lean_s914 := by timed congr lean_s438 lean_s913
let lean_s915 := by timed flipCongrArg lean_s754 [And]
have lean_s916 : (Eq let566 let628) := by timed congr lean_s915 lean_s788
let lean_s917 := by timed flipCongrArg lean_s916 [Implies]
have lean_s918 : let689 := by timed rfl
have lean_s919 : (Eq let569 let631) := by timed congr lean_s917 lean_s918
let lean_s920 := by timed congr lean_s438 lean_s919
have lean_s921 : (Eq let567 let629) := by timed flipCongrArg lean_s916 [Not]
let lean_s922 := by timed flipCongrArg lean_s921 [Implies]
have lean_s923 : let688 := by timed rfl
have lean_s924 : (Eq let568 let630) := by timed congr lean_s922 lean_s923
let lean_s925 := by timed congr lean_s438 lean_s924
let lean_s926 := by timed flipCongrArg lean_s782 [And]
have lean_s927 : (Eq let562 let624) := by timed congr lean_s926 lean_s816
let lean_s928 := by timed flipCongrArg lean_s927 [Implies]
have lean_s929 : let687 := by timed rfl
have lean_s930 : (Eq let565 let627) := by timed congr lean_s928 lean_s929
let lean_s931 := by timed congr lean_s438 lean_s930
have lean_s932 : (Eq let563 let625) := by timed flipCongrArg lean_s927 [Not]
let lean_s933 := by timed flipCongrArg lean_s932 [Implies]
have lean_s934 : let686 := by timed rfl
have lean_s935 : (Eq let564 let626) := by timed congr lean_s933 lean_s934
let lean_s936 := by timed congr lean_s438 lean_s935
let lean_s937 := by timed flipCongrArg lean_s810 [And]
let lean_s938 := by timed flipCongrArg lean_s591 [Eq]
have lean_s939 : (Eq let456 let401) := by timed congr lean_s938 lean_s881
have lean_s940 : (Eq let558 let620) := by timed congr lean_s937 lean_s939
let lean_s941 := by timed flipCongrArg lean_s940 [Implies]
have lean_s942 : let685 := by timed rfl
have lean_s943 : (Eq let561 let623) := by timed congr lean_s941 lean_s942
let lean_s944 := by timed congr lean_s438 lean_s943
have lean_s945 : (Eq let559 let621) := by timed flipCongrArg lean_s940 [Not]
let lean_s946 := by timed flipCongrArg lean_s945 [Implies]
have lean_s947 : let684 := by timed rfl
have lean_s948 : (Eq let560 let622) := by timed congr lean_s946 lean_s947
let lean_s949 := by timed congr lean_s944 lean_s948
let lean_s950 := by timed congr lean_s936 lean_s949
let lean_s951 := by timed congr lean_s931 lean_s950
let lean_s952 := by timed congr lean_s925 lean_s951
let lean_s953 := by timed congr lean_s920 lean_s952
let lean_s954 := by timed congr lean_s914 lean_s953
let lean_s955 := by timed congr lean_s909 lean_s954
let lean_s956 := by timed congr lean_s903 lean_s955
let lean_s957 := by timed congr lean_s898 lean_s956
let lean_s958 := by timed congr lean_s892 lean_s957
let lean_s959 := by timed congr lean_s887 lean_s958
let lean_s960 := by timed congr lean_s878 lean_s959
let lean_s961 := by timed congr lean_s873 lean_s960
let lean_s962 := by timed congr lean_s867 lean_s961
let lean_s963 := by timed congr lean_s862 lean_s962
let lean_s964 := by timed congr lean_s856 lean_s963
let lean_s965 := by timed congr lean_s851 lean_s964
let lean_s966 := by timed congr lean_s845 lean_s965
let lean_s967 := by timed congr lean_s840 lean_s966
let lean_s968 := by timed congr lean_s834 lean_s967
let lean_s969 := by timed congr lean_s806 lean_s968
let lean_s970 := by timed congr lean_s778 lean_s969
let lean_s971 := by timed congr lean_s750 lean_s970
let lean_s972 := by timed congr lean_s722 lean_s971
let lean_s973 := by timed congr lean_s694 lean_s972
let lean_s974 := by timed congr lean_s685 lean_s973
let lean_s975 := by timed congr lean_s661 lean_s974
let lean_s976 := by timed congr lean_s645 lean_s975
let lean_s977 := by timed congr lean_s639 lean_s976
let lean_s978 := by timed congr lean_s630 lean_s977
let lean_s979 := by timed congr lean_s624 lean_s978
let lean_s980 := by timed congr lean_s617 lean_s979
let lean_s981 := by timed congr lean_s609 lean_s980
let lean_s982 := by timed congr lean_s600 lean_s981
let lean_s983 := by timed congr lean_s595 lean_s982
let lean_s984 := by timed congr lean_s590 lean_s983
let lean_s985 := by timed congr lean_s585 lean_s984
let lean_s986 := by timed congr lean_s580 lean_s985
let lean_s987 := by timed congr lean_s575 lean_s986
let lean_s988 := by timed congr lean_s571 lean_s987
let lean_s989 := by timed congr lean_s566 lean_s988
let lean_s990 := by timed congr lean_s561 lean_s989
have lean_s991 : (Eq let609 let680) := by timed congr lean_s556 lean_s990
let lean_s992 := by timed flipCongrArg lean_s991 [Implies]
have lean_s993 : let683 := by timed rfl
let lean_s994 := by timed flipCongrArg lean_s581 [Eq]
have lean_s995 : (Eq let101 let101) := by timed rfl
have lean_s996 : (Eq let449 let357) := by timed congr lean_s994 lean_s995
have lean_s997 : (Eq let556 let618) := by timed flipCongrArg lean_s996 [Not]
let lean_s998 := by timed congr lean_s993 lean_s997
let lean_s999 := by timed flipCongrArg lean_s586 [Eq]
have lean_s1000 : (Eq let174 let174) := by timed rfl
have lean_s1001 : (Eq let447 let176) := by timed congr lean_s999 lean_s1000
let lean_s1002 := by timed congr lean_s993 lean_s1001
let lean_s1003 := by timed flipCongrArg lean_s562 [Eq]
have lean_s1004 : (Eq let96 let129) := by timed flipCongrArg lean_s610 [format]
have lean_s1005 : (Eq let437 let131) := by timed congr lean_s1003 lean_s1004
let lean_s1006 := by timed congr lean_s993 lean_s1005
let lean_s1007 := by timed flipCongrArg lean_s567 [Eq]
let lean_s1008 := by timed flipCongrArg lean_s636 [HAdd.hAdd]
have lean_s1009 : (Eq let337 let345) := by timed congr lean_s1008 lean_s610
have lean_s1010 : (Eq let338 let616) := by timed flipCongrArg lean_s1009 [format]
have lean_s1011 : (Eq let339 let617) := by timed congr lean_s1007 lean_s1010
let lean_s1012 := by timed congr lean_s993 lean_s1011
let lean_s1013 := by timed flipCongrArg lean_s572 [Eq]
let lean_s1014 := by timed flipCongrArg lean_s622 [HAdd.hAdd]
have lean_s1015 : (Eq let440 let353) := by timed congr lean_s1014 lean_s610
have lean_s1016 : (Eq let441 let614) := by timed flipCongrArg lean_s1015 [format]
have lean_s1017 : (Eq let442 let615) := by timed congr lean_s1013 lean_s1016
let lean_s1018 := by timed congr lean_s993 lean_s1017
let lean_s1019 := by timed flipCongrArg lean_s576 [Eq]
let lean_s1020 := by timed flipCongrArg lean_s564 [HAdd.hAdd]
have lean_s1021 : (Eq let341 let112) := by timed congr lean_s1020 lean_s610
have lean_s1022 : (Eq let404 let612) := by timed flipCongrArg lean_s1021 [format]
have lean_s1023 : (Eq let405 let613) := by timed congr lean_s1019 lean_s1022
let lean_s1024 := by timed congr lean_s1018 lean_s1023
let lean_s1025 := by timed congr lean_s1012 lean_s1024
let lean_s1026 := by timed congr lean_s1006 lean_s1025
let lean_s1027 := by timed congr lean_s1002 lean_s1026
have lean_s1028 : (Eq let557 let619) := by timed congr lean_s998 lean_s1027
have lean_s1029 : (Eq let610 let681) := by timed congr lean_s992 lean_s1028
have lean_s1030 : (Eq let611 let682) := by timed flipCongrArg lean_s1029 [Not]
have lean_s1031 : let683 := by timed rfl
let lean_s1032 := by timed congr lean_s1031 lean_r29
let lean_s1033 := by timed congr lean_s1031 lean_r116
let lean_s1034 := by timed congr lean_s1031 lean_r119
let lean_s1035 := by timed congr lean_s1031 lean_r118
let lean_s1036 := by timed congr lean_s1031 lean_r116
let lean_s1037 := by timed congr lean_s1031 lean_r82
let lean_s1038 := by timed congr lean_s1031 lean_r52
let lean_s1039 := by timed congr lean_s1031 lean_r86
let lean_s1040 := by timed congr lean_s1031 lean_r112
let lean_s1041 := by timed congr lean_s1031 lean_r111
let lean_s1042 := by timed flipCongrArg lean_s522 [Eq]
have lean_s1043 : (Eq let679 let141) := by timed congr lean_s1042 lean_s487
have lean_s1044 : (Eq let679 True) := by timed Eq.trans lean_s1043 lean_r40
let lean_s1045 := by timed congr lean_s1031 lean_s1044
have lean_s1046 : (Eq let67 let67) := by timed rfl
have lean_s1047 : (Eq let66 let66) := by timed rfl
let lean_s1048 := by timed congrHAdd lean_s1047 lean_r114
let lean_s1049 := by timed congrHAdd lean_s1046 lean_s1048
have lean_s1050 : (Eq let390 let367) := by timed congrHAdd lean_s522 lean_s1049
have lean_s1051 : (Eq let390 let71) := by timed Eq.trans lean_s1050 lean_r73
have lean_s1052 : (Eq let391 let71) := by timed Eq.trans lean_r88 lean_s1051
let lean_s1053 := by timed flipCongrArg lean_s1052 [GE.ge]
have lean_s1054 : (Eq let677 let72) := by timed congr lean_s1053 lean_s484
have lean_s1055 : (Eq let677 let64) := by timed Eq.trans lean_s1054 lean_r18
let lean_s1056 := by timed congr lean_s1031 lean_s1055
let lean_s1057 := by timed flipCongrArg lean_r77 [GE.ge]
have lean_s1058 : let735 := by timed rfl
have lean_s1059 : (Eq let676 let120) := by timed congr lean_s1057 lean_s1058
have lean_s1060 : (Eq let676 let118) := by timed Eq.trans lean_s1059 lean_r30
let lean_s1061 := by timed congr lean_s1031 lean_s1060
let lean_s1062 := by timed flipCongrArg lean_r39 [GE.ge]
have lean_s1063 : let734 := by timed rfl
have lean_s1064 : (Eq let674 let172) := by timed congr lean_s1062 lean_s1063
have lean_s1065 : (Eq let674 let171) := by timed Eq.trans lean_s1064 lean_r45
have lean_s1066 : (Eq let675 let344) := by timed flipCongrArg lean_s1065 [Not]
have lean_s1067 : (Eq let675 let170) := by timed Eq.trans lean_s1066 lean_r58
let lean_s1068 := by timed congr lean_s1031 lean_s1067
have lean_s1069 : let117 := by timed rfl
let lean_s1070 := by timed congrHAdd lean_r26 lean_s1069
have lean_s1071 : (Eq let671 let83) := by timed congrHAdd lean_s522 lean_s1070
have lean_s1072 : (Eq let671 let82) := by timed Eq.trans lean_s1071 lean_r21
let lean_s1073 := by timed flipCongrArg lean_s1072 [GE.ge]
have lean_s1074 : let733 := by timed rfl
have lean_s1075 : (Eq let672 let85) := by timed congr lean_s1073 lean_s1074
have lean_s1076 : (Eq let672 let84) := by timed Eq.trans lean_s1075 lean_r22
have lean_s1077 : (Eq let673 let86) := by timed flipCongrArg lean_s1076 [Not]
have lean_s1078 : (Eq let673 let64) := by timed Eq.trans lean_s1077 lean_r23
let lean_s1079 := by timed congr lean_s1031 lean_s1078
have lean_s1080 : let436 := by timed rfl
let lean_s1081 := by timed congrHAdd lean_s1069 lean_s1080
let lean_s1082 := by timed congrHAdd lean_r26 lean_s1081
have lean_s1083 : (Eq let669 let109) := by timed congrHAdd lean_s522 lean_s1082
have lean_s1084 : (Eq let669 let106) := by timed Eq.trans lean_s1083 lean_r25
let lean_s1085 := by timed flipCongrArg lean_s1084 [GE.ge]
have lean_s1086 : (Eq let670 let403) := by timed congr lean_s1085 lean_s1080
have lean_s1087 : (Eq let670 let84) := by timed Eq.trans lean_s1086 lean_r95
let lean_s1088 := by timed congr lean_s1031 lean_s1087
let lean_s1089 := by timed flipCongrArg lean_s522 [Eq]
let lean_s1090 := by timed congrHAdd lean_s531 lean_s534
let lean_s1091 := by timed congrHAdd lean_s1047 lean_s1090
let lean_s1092 := by timed congrHAdd lean_s1046 lean_s1091
have lean_s1093 : (Eq let149 let121) := by timed congrHAdd lean_s522 lean_s1092
have lean_s1094 : (Eq let149 let70) := by timed Eq.trans lean_s1093 lean_r31
have lean_s1095 : (Eq let150 let70) := by timed Eq.trans lean_r41 lean_s1094
have lean_s1096 : (Eq let668 let141) := by timed congr lean_s1089 lean_s1095
have lean_s1097 : (Eq let668 True) := by timed Eq.trans lean_s1096 lean_r40
let lean_s1098 := by timed congr lean_s1031 lean_s1097
have lean_s1099 : let706 := by timed rfl
let lean_s1100 := by timed congr lean_s1099 lean_r128
let lean_s1101 := by timed congr lean_s1099 lean_r50
let lean_s1102 := by timed congr lean_s1099 lean_r19
let lean_s1103 := by timed congr lean_s1099 lean_r47
let lean_s1104 := by timed congr lean_s1103 lean_r61
let lean_s1105 := by timed congr lean_s1102 lean_s1104
let lean_s1106 := by timed congr lean_s1101 lean_s1105
have lean_s1107 : (Eq let667 let544) := by timed congr lean_s1100 lean_s1106
let lean_s1108 := by timed congr lean_s1031 lean_s1107
let lean_s1109 := by timed flipCongrArg lean_r37 [Or]
have lean_s1110 : (Eq let71 let71) := by timed rfl
let lean_s1111 := by timed flipCongrArg lean_s1110 [Eq]
have lean_s1112 : (Eq let665 let425) := by timed congr lean_s1111 lean_r141
have lean_s1113 : (Eq let665 let168) := by timed Eq.trans lean_s1112 lean_r107
have lean_s1114 : (Eq let666 let169) := by timed congr lean_s1109 lean_s1113
have lean_s1115 : (Eq let666 let168) := by timed Eq.trans lean_s1114 lean_r44
let lean_s1116 := by timed congr lean_s1031 lean_s1115
have lean_s1117 : let706 := by timed rfl
let lean_s1118 := by timed congr lean_s1117 lean_r76
let lean_s1119 := by timed congr lean_s1117 lean_r81
let lean_s1120 := by timed congr lean_s1117 lean_r53
let lean_s1121 := by timed congr lean_s1117 lean_s127
let lean_s1122 := by timed congr lean_s1117 lean_s129
let lean_s1123 := by timed congr lean_s1117 lean_s131
let lean_s1124 := by timed congr lean_s1117 lean_s133
let lean_s1125 := by timed congr lean_s1124 lean_s135
let lean_s1126 := by timed congr lean_s1123 lean_s1125
let lean_s1127 := by timed congr lean_s1122 lean_s1126
let lean_s1128 := by timed congr lean_s1121 lean_s1127
let lean_s1129 := by timed congr lean_s1120 lean_s1128
let lean_s1130 := by timed congr lean_s1119 lean_s1129
have lean_s1131 : (Eq let664 let543) := by timed congr lean_s1118 lean_s1130
let lean_s1132 := by timed congr lean_s1031 lean_s1131
have lean_s1133 : let706 := by timed rfl
let lean_s1134 := by timed congr lean_s1133 lean_r104
let lean_s1135 := by timed congr lean_s1133 lean_r62
let lean_s1136 := by timed congr lean_s1133 lean_r71
let lean_s1137 := by timed congr lean_s1133 lean_s149
let lean_s1138 := by timed congr lean_s1133 lean_s151
let lean_s1139 := by timed congr lean_s1133 lean_s153
let lean_s1140 := by timed congr lean_s1133 lean_s155
let lean_s1141 := by timed congr lean_s1140 lean_s157
let lean_s1142 := by timed congr lean_s1139 lean_s1141
let lean_s1143 := by timed congr lean_s1138 lean_s1142
let lean_s1144 := by timed congr lean_s1137 lean_s1143
let lean_s1145 := by timed congr lean_s1136 lean_s1144
let lean_s1146 := by timed congr lean_s1135 lean_s1145
have lean_s1147 : (Eq let663 let542) := by timed congr lean_s1134 lean_s1146
let lean_s1148 := by timed congr lean_s1031 lean_s1147
have lean_s1149 : let706 := by timed rfl
let lean_s1150 := by timed congr lean_s1149 lean_r156
let lean_s1151 := by timed congr lean_s1149 lean_r35
let lean_s1152 := by timed congr lean_s1149 lean_r100
let lean_s1153 := by timed congr lean_s1149 lean_s171
let lean_s1154 := by timed congr lean_s1149 lean_s173
let lean_s1155 := by timed congr lean_s1149 lean_s175
let lean_s1156 := by timed congr lean_s1149 lean_s177
let lean_s1157 := by timed congr lean_s1156 lean_s179
let lean_s1158 := by timed congr lean_s1155 lean_s1157
let lean_s1159 := by timed congr lean_s1154 lean_s1158
let lean_s1160 := by timed congr lean_s1153 lean_s1159
let lean_s1161 := by timed congr lean_s1152 lean_s1160
let lean_s1162 := by timed congr lean_s1151 lean_s1161
have lean_s1163 : (Eq let662 let540) := by timed congr lean_s1150 lean_s1162
let lean_s1164 := by timed congr lean_s1031 lean_s1163
have lean_s1165 : let706 := by timed rfl
let lean_s1166 := by timed congr lean_s1165 lean_r98
let lean_s1167 := by timed congr lean_s1165 lean_r109
let lean_s1168 := by timed congr lean_s1165 lean_r101
let lean_s1169 := by timed congr lean_s1165 lean_s193
let lean_s1170 := by timed congr lean_s1165 lean_s195
let lean_s1171 := by timed congr lean_s1165 lean_s197
let lean_s1172 := by timed congr lean_s1165 lean_s199
let lean_s1173 := by timed congr lean_s1172 lean_s201
let lean_s1174 := by timed congr lean_s1171 lean_s1173
let lean_s1175 := by timed congr lean_s1170 lean_s1174
let lean_s1176 := by timed congr lean_s1169 lean_s1175
let lean_s1177 := by timed congr lean_s1168 lean_s1176
let lean_s1178 := by timed congr lean_s1167 lean_s1177
have lean_s1179 : (Eq let661 let539) := by timed congr lean_s1166 lean_s1178
let lean_s1180 := by timed congr lean_s1031 lean_s1179
have lean_s1181 : let706 := by timed rfl
let lean_s1182 := by timed congr lean_s1181 lean_r89
let lean_s1183 := by timed congr lean_s1181 lean_r56
let lean_s1184 := by timed congr lean_s1181 lean_r92
let lean_s1185 := by timed congr lean_s1181 lean_s215
let lean_s1186 := by timed congr lean_s1181 lean_s217
let lean_s1187 := by timed congr lean_s1181 lean_s219
let lean_s1188 := by timed congr lean_s1181 lean_s221
let lean_s1189 := by timed congr lean_s1188 lean_s223
let lean_s1190 := by timed congr lean_s1187 lean_s1189
let lean_s1191 := by timed congr lean_s1186 lean_s1190
let lean_s1192 := by timed congr lean_s1185 lean_s1191
let lean_s1193 := by timed congr lean_s1184 lean_s1192
let lean_s1194 := by timed congr lean_s1183 lean_s1193
have lean_s1195 : (Eq let660 let538) := by timed congr lean_s1182 lean_s1194
let lean_s1196 := by timed congr lean_s1031 lean_s1195
let lean_s1197 := by timed flipCongrArg lean_r76 [And]
have lean_s1198 : (Eq let656 let534) := by timed congr lean_s1197 lean_r62
let lean_s1199 := by timed flipCongrArg lean_s1198 [Implies]
have lean_s1200 : (Eq let659 let537) := by timed congr lean_s1199 lean_s236
let lean_s1201 := by timed congr lean_s1031 lean_s1200
have lean_s1202 : (Eq let657 let535) := by timed flipCongrArg lean_s1198 [Not]
let lean_s1203 := by timed flipCongrArg lean_s1202 [Implies]
have lean_s1204 : (Eq let658 let536) := by timed congr lean_s1203 lean_s241
let lean_s1205 := by timed congr lean_s1031 lean_s1204
let lean_s1206 := by timed flipCongrArg lean_r104 [And]
have lean_s1207 : (Eq let652 let530) := by timed congr lean_s1206 lean_r35
let lean_s1208 := by timed flipCongrArg lean_s1207 [Implies]
have lean_s1209 : let701 := by timed rfl
have lean_s1210 : (Eq let655 let533) := by timed congr lean_s1208 lean_s1209
let lean_s1211 := by timed congr lean_s1031 lean_s1210
have lean_s1212 : (Eq let653 let531) := by timed flipCongrArg lean_s1207 [Not]
let lean_s1213 := by timed flipCongrArg lean_s1212 [Implies]
have lean_s1214 : let700 := by timed rfl
have lean_s1215 : (Eq let654 let532) := by timed congr lean_s1213 lean_s1214
let lean_s1216 := by timed congr lean_s1031 lean_s1215
let lean_s1217 := by timed flipCongrArg lean_r156 [And]
have lean_s1218 : (Eq let648 let526) := by timed congr lean_s1217 lean_r109
let lean_s1219 := by timed flipCongrArg lean_s1218 [Implies]
have lean_s1220 : let699 := by timed rfl
have lean_s1221 : (Eq let651 let529) := by timed congr lean_s1219 lean_s1220
let lean_s1222 := by timed congr lean_s1031 lean_s1221
have lean_s1223 : (Eq let649 let527) := by timed flipCongrArg lean_s1218 [Not]
let lean_s1224 := by timed flipCongrArg lean_s1223 [Implies]
have lean_s1225 : let698 := by timed rfl
have lean_s1226 : (Eq let650 let528) := by timed congr lean_s1224 lean_s1225
let lean_s1227 := by timed congr lean_s1031 lean_s1226
let lean_s1228 := by timed flipCongrArg lean_r98 [And]
have lean_s1229 : (Eq let644 let522) := by timed congr lean_s1228 lean_r56
let lean_s1230 := by timed flipCongrArg lean_s1229 [Implies]
have lean_s1231 : let697 := by timed rfl
have lean_s1232 : (Eq let647 let525) := by timed congr lean_s1230 lean_s1231
let lean_s1233 := by timed congr lean_s1031 lean_s1232
have lean_s1234 : (Eq let645 let523) := by timed flipCongrArg lean_s1229 [Not]
let lean_s1235 := by timed flipCongrArg lean_s1234 [Implies]
have lean_s1236 : let696 := by timed rfl
have lean_s1237 : (Eq let646 let524) := by timed congr lean_s1235 lean_s1236
let lean_s1238 := by timed congr lean_s1031 lean_s1237
let lean_s1239 := by timed flipCongrArg lean_r89 [And]
have lean_s1240 : (Eq let640 let518) := by timed congr lean_s1239 lean_r70
let lean_s1241 := by timed flipCongrArg lean_s1240 [Implies]
have lean_s1242 : let695 := by timed rfl
have lean_s1243 : (Eq let643 let521) := by timed congr lean_s1241 lean_s1242
let lean_s1244 := by timed congr lean_s1031 lean_s1243
have lean_s1245 : (Eq let641 let519) := by timed flipCongrArg lean_s1240 [Not]
let lean_s1246 := by timed flipCongrArg lean_s1245 [Implies]
have lean_s1247 : let694 := by timed rfl
have lean_s1248 : (Eq let642 let520) := by timed congr lean_s1246 lean_s1247
let lean_s1249 := by timed congr lean_s1031 lean_s1248
let lean_s1250 := by timed flipCongrArg lean_r76 [And]
have lean_s1251 : (Eq let636 let514) := by timed congr lean_s1250 lean_r71
let lean_s1252 := by timed flipCongrArg lean_s1251 [Implies]
have lean_s1253 : (Eq let639 let517) := by timed congr lean_s1252 lean_s299
let lean_s1254 := by timed congr lean_s1031 lean_s1253
have lean_s1255 : (Eq let637 let515) := by timed flipCongrArg lean_s1251 [Not]
let lean_s1256 := by timed flipCongrArg lean_s1255 [Implies]
have lean_s1257 : (Eq let638 let516) := by timed congr lean_s1256 lean_s304
let lean_s1258 := by timed congr lean_s1031 lean_s1257
let lean_s1259 := by timed flipCongrArg lean_r104 [And]
have lean_s1260 : (Eq let632 let510) := by timed congr lean_s1259 lean_r100
let lean_s1261 := by timed flipCongrArg lean_s1260 [Implies]
have lean_s1262 : let691 := by timed rfl
have lean_s1263 : (Eq let635 let513) := by timed congr lean_s1261 lean_s1262
let lean_s1264 := by timed congr lean_s1031 lean_s1263
have lean_s1265 : (Eq let633 let511) := by timed flipCongrArg lean_s1260 [Not]
let lean_s1266 := by timed flipCongrArg lean_s1265 [Implies]
have lean_s1267 : let690 := by timed rfl
have lean_s1268 : (Eq let634 let512) := by timed congr lean_s1266 lean_s1267
let lean_s1269 := by timed congr lean_s1031 lean_s1268
let lean_s1270 := by timed flipCongrArg lean_r156 [And]
have lean_s1271 : (Eq let628 let506) := by timed congr lean_s1270 lean_r101
let lean_s1272 := by timed flipCongrArg lean_s1271 [Implies]
have lean_s1273 : let689 := by timed rfl
have lean_s1274 : (Eq let631 let509) := by timed congr lean_s1272 lean_s1273
let lean_s1275 := by timed congr lean_s1031 lean_s1274
have lean_s1276 : (Eq let629 let507) := by timed flipCongrArg lean_s1271 [Not]
let lean_s1277 := by timed flipCongrArg lean_s1276 [Implies]
have lean_s1278 : let688 := by timed rfl
have lean_s1279 : (Eq let630 let508) := by timed congr lean_s1277 lean_s1278
let lean_s1280 := by timed congr lean_s1031 lean_s1279
let lean_s1281 := by timed flipCongrArg lean_r98 [And]
have lean_s1282 : (Eq let624 let502) := by timed congr lean_s1281 lean_r92
let lean_s1283 := by timed flipCongrArg lean_s1282 [Implies]
have lean_s1284 : let687 := by timed rfl
have lean_s1285 : (Eq let627 let505) := by timed congr lean_s1283 lean_s1284
let lean_s1286 := by timed congr lean_s1031 lean_s1285
have lean_s1287 : (Eq let625 let503) := by timed flipCongrArg lean_s1282 [Not]
let lean_s1288 := by timed flipCongrArg lean_s1287 [Implies]
have lean_s1289 : let686 := by timed rfl
have lean_s1290 : (Eq let626 let504) := by timed congr lean_s1288 lean_s1289
let lean_s1291 := by timed congr lean_s1031 lean_s1290
let lean_s1292 := by timed flipCongrArg lean_r89 [And]
have lean_s1293 : (Eq let620 let498) := by timed congr lean_s1292 lean_r93
let lean_s1294 := by timed flipCongrArg lean_s1293 [Implies]
have lean_s1295 : let685 := by timed rfl
have lean_s1296 : (Eq let623 let501) := by timed congr lean_s1294 lean_s1295
let lean_s1297 := by timed congr lean_s1031 lean_s1296
have lean_s1298 : (Eq let621 let499) := by timed flipCongrArg lean_s1293 [Not]
let lean_s1299 := by timed flipCongrArg lean_s1298 [Implies]
have lean_s1300 : let684 := by timed rfl
have lean_s1301 : (Eq let622 let500) := by timed congr lean_s1299 lean_s1300
let lean_s1302 := by timed congr lean_s1297 lean_s1301
let lean_s1303 := by timed congr lean_s1291 lean_s1302
let lean_s1304 := by timed congr lean_s1286 lean_s1303
let lean_s1305 := by timed congr lean_s1280 lean_s1304
let lean_s1306 := by timed congr lean_s1275 lean_s1305
let lean_s1307 := by timed congr lean_s1269 lean_s1306
let lean_s1308 := by timed congr lean_s1264 lean_s1307
let lean_s1309 := by timed congr lean_s1258 lean_s1308
let lean_s1310 := by timed congr lean_s1254 lean_s1309
let lean_s1311 := by timed congr lean_s1249 lean_s1310
let lean_s1312 := by timed congr lean_s1244 lean_s1311
let lean_s1313 := by timed congr lean_s1238 lean_s1312
let lean_s1314 := by timed congr lean_s1233 lean_s1313
let lean_s1315 := by timed congr lean_s1227 lean_s1314
let lean_s1316 := by timed congr lean_s1222 lean_s1315
let lean_s1317 := by timed congr lean_s1216 lean_s1316
let lean_s1318 := by timed congr lean_s1211 lean_s1317
let lean_s1319 := by timed congr lean_s1205 lean_s1318
let lean_s1320 := by timed congr lean_s1201 lean_s1319
let lean_s1321 := by timed congr lean_s1196 lean_s1320
let lean_s1322 := by timed congr lean_s1180 lean_s1321
let lean_s1323 := by timed congr lean_s1164 lean_s1322
let lean_s1324 := by timed congr lean_s1148 lean_s1323
let lean_s1325 := by timed congr lean_s1132 lean_s1324
let lean_s1326 := by timed congr lean_s1116 lean_s1325
let lean_s1327 := by timed congr lean_s1108 lean_s1326
let lean_s1328 := by timed congr lean_s1098 lean_s1327
let lean_s1329 := by timed congr lean_s1088 lean_s1328
let lean_s1330 := by timed congr lean_s1079 lean_s1329
let lean_s1331 := by timed congr lean_s1068 lean_s1330
let lean_s1332 := by timed congr lean_s1061 lean_s1331
let lean_s1333 := by timed congr lean_s1056 lean_s1332
let lean_s1334 := by timed congr lean_s1045 lean_s1333
let lean_s1335 := by timed congr lean_s1041 lean_s1334
let lean_s1336 := by timed congr lean_s1040 lean_s1335
let lean_s1337 := by timed congr lean_s1039 lean_s1336
let lean_s1338 := by timed congr lean_s1038 lean_s1337
let lean_s1339 := by timed congr lean_s1037 lean_s1338
let lean_s1340 := by timed congr lean_s1036 lean_s1339
let lean_s1341 := by timed congr lean_s1035 lean_s1340
let lean_s1342 := by timed congr lean_s1034 lean_s1341
let lean_s1343 := by timed congr lean_s1033 lean_s1342
have lean_s1344 : (Eq let680 let547) := by timed congr lean_s1032 lean_s1343
have lean_s1345 : (Eq let680 let546) := by timed Eq.trans lean_s1344 lean_r163
let lean_s1346 := by timed flipCongrArg lean_s1345 [Implies]
have lean_s1347 : let683 := by timed rfl
have lean_s1348 : (Eq let618 let552) := by timed flipCongrArg lean_r67 [Not]
let lean_s1349 := by timed congr lean_s1347 lean_s1348
let lean_s1350 := by timed congr lean_s1347 lean_r46
let lean_s1351 := by timed congr lean_s1347 lean_r34
let lean_s1352 := by timed flipCongrArg lean_s68 [Eq]
have lean_s1353 : let361 := by timed Eq.trans lean_r59 lean_r69
have lean_s1354 : (Eq let616 let180) := by timed flipCongrArg lean_s1353 [format]
have lean_s1355 : (Eq let617 let182) := by timed congr lean_s1352 lean_s1354
have lean_s1356 : (Eq let617 let181) := by timed Eq.trans lean_s1355 lean_r48
let lean_s1357 := by timed congr lean_s1347 lean_s1356
let lean_s1358 := by timed flipCongrArg lean_s1080 [Eq]
have lean_s1359 : let370 := by timed Eq.trans lean_r65 lean_r75
have lean_s1360 : (Eq let614 let422) := by timed flipCongrArg lean_s1359 [format]
have lean_s1361 : (Eq let615 let424) := by timed congr lean_s1358 lean_s1360
have lean_s1362 : (Eq let615 let423) := by timed Eq.trans lean_s1361 lean_r106
let lean_s1363 := by timed congr lean_s1347 lean_s1362
have lean_s1364 : let382 := by timed rfl
let lean_s1365 := by timed flipCongrArg lean_s1364 [Eq]
have lean_s1366 : let113 := by timed Eq.trans lean_r38 lean_r27
have lean_s1367 : (Eq let612 let377) := by timed flipCongrArg lean_s1366 [format]
have lean_s1368 : (Eq let613 let379) := by timed congr lean_s1365 lean_s1367
have lean_s1369 : (Eq let613 let378) := by timed Eq.trans lean_s1368 lean_r80
let lean_s1370 := by timed congr lean_s1363 lean_s1369
let lean_s1371 := by timed congr lean_s1357 lean_s1370
let lean_s1372 := by timed congr lean_s1351 lean_s1371
let lean_s1373 := by timed congr lean_s1350 lean_s1372
have lean_s1374 : (Eq let619 let553) := by timed congr lean_s1349 lean_s1373
have lean_s1375 : (Eq let681 let554) := by timed congr lean_s1346 lean_s1374
have lean_s1376 : (Eq let682 let555) := by timed flipCongrArg lean_s1375 [Not]
have lean_s1377 : (Eq let611 let555) := by timed Eq.trans lean_s1030 lean_s1376
have lean_s1378 : (Eq let551 let555) := by timed Eq.trans lean_s437 lean_s1377
have lean_s1379 : let555 := by timed eqResolve lean_a166 lean_s1378
have lean_s1380 : let546 := by timed notImplies1 lean_s1379
have lean_s1381 : let84 := by andElim lean_s1380, 3
have lean_s1382 : let64 := by andElim lean_s1380, 0
exact (show False from by R2 lean_s1381, lean_s1382, let64, [0, 0])


